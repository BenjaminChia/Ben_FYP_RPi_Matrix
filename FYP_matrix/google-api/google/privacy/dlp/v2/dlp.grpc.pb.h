// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/privacy/dlp/v2/dlp.proto
// Original file comments:
// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fprivacy_2fdlp_2fv2_2fdlp_2eproto__INCLUDED
#define GRPC_google_2fprivacy_2fdlp_2fv2_2fdlp_2eproto__INCLUDED

#include "google/privacy/dlp/v2/dlp.pb.h"

#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace google {
namespace privacy {
namespace dlp {
namespace v2 {

// The Cloud Data Loss Prevention (DLP) API is a service that allows clients
// to detect the presence of Personally Identifiable Information (PII) and other
// privacy-sensitive data in user-supplied, unstructured data streams, like text
// blocks or images.
// The service also includes methods for sensitive data redaction and
// scheduling of data scans on Google Cloud Platform based data sets.
//
// To learn more about concepts and find how-to guides see
// https://cloud.google.com/dlp/docs/.
class DlpService final {
 public:
  static constexpr char const* service_full_name() {
    return "google.privacy.dlp.v2.DlpService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Finds potentially sensitive info in content.
    // This method has limits on input size, processing time, and output size.
    //
    // When no InfoTypes or CustomInfoTypes are specified in this request, the
    // system will automatically choose what detectors to run. By default this may
    // be all types, but may change over time as detectors are updated.
    //
    // For how to guides, see https://cloud.google.com/dlp/docs/inspecting-images
    // and https://cloud.google.com/dlp/docs/inspecting-text,
    virtual ::grpc::Status InspectContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::InspectContentRequest& request, ::google::privacy::dlp::v2::InspectContentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectContentResponse>> AsyncInspectContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::InspectContentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectContentResponse>>(AsyncInspectContentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectContentResponse>> PrepareAsyncInspectContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::InspectContentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectContentResponse>>(PrepareAsyncInspectContentRaw(context, request, cq));
    }
    // Redacts potentially sensitive info from an image.
    // This method has limits on input size, processing time, and output size.
    // See https://cloud.google.com/dlp/docs/redacting-sensitive-data-images to
    // learn more.
    //
    // When no InfoTypes or CustomInfoTypes are specified in this request, the
    // system will automatically choose what detectors to run. By default this may
    // be all types, but may change over time as detectors are updated.
    virtual ::grpc::Status RedactImage(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::RedactImageRequest& request, ::google::privacy::dlp::v2::RedactImageResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::RedactImageResponse>> AsyncRedactImage(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::RedactImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::RedactImageResponse>>(AsyncRedactImageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::RedactImageResponse>> PrepareAsyncRedactImage(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::RedactImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::RedactImageResponse>>(PrepareAsyncRedactImageRaw(context, request, cq));
    }
    // De-identifies potentially sensitive info from a ContentItem.
    // This method has limits on input size and output size.
    // See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to
    // learn more.
    //
    // When no InfoTypes or CustomInfoTypes are specified in this request, the
    // system will automatically choose what detectors to run. By default this may
    // be all types, but may change over time as detectors are updated.
    virtual ::grpc::Status DeidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest& request, ::google::privacy::dlp::v2::DeidentifyContentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyContentResponse>> AsyncDeidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyContentResponse>>(AsyncDeidentifyContentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyContentResponse>> PrepareAsyncDeidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyContentResponse>>(PrepareAsyncDeidentifyContentRaw(context, request, cq));
    }
    // Re-identifies content that has been de-identified.
    // See
    // https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example
    // to learn more.
    virtual ::grpc::Status ReidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest& request, ::google::privacy::dlp::v2::ReidentifyContentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ReidentifyContentResponse>> AsyncReidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ReidentifyContentResponse>>(AsyncReidentifyContentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ReidentifyContentResponse>> PrepareAsyncReidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ReidentifyContentResponse>>(PrepareAsyncReidentifyContentRaw(context, request, cq));
    }
    // Returns a list of the sensitive information types that the DLP API
    // supports. See https://cloud.google.com/dlp/docs/infotypes-reference to
    // learn more.
    virtual ::grpc::Status ListInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest& request, ::google::privacy::dlp::v2::ListInfoTypesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListInfoTypesResponse>> AsyncListInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListInfoTypesResponse>>(AsyncListInfoTypesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListInfoTypesResponse>> PrepareAsyncListInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListInfoTypesResponse>>(PrepareAsyncListInfoTypesRaw(context, request, cq));
    }
    // Creates an InspectTemplate for re-using frequently used configuration
    // for inspecting content, images, and storage.
    // See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    virtual ::grpc::Status CreateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest& request, ::google::privacy::dlp::v2::InspectTemplate* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>> AsyncCreateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>>(AsyncCreateInspectTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>> PrepareAsyncCreateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>>(PrepareAsyncCreateInspectTemplateRaw(context, request, cq));
    }
    // Updates the InspectTemplate.
    // See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    virtual ::grpc::Status UpdateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest& request, ::google::privacy::dlp::v2::InspectTemplate* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>> AsyncUpdateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>>(AsyncUpdateInspectTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>> PrepareAsyncUpdateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>>(PrepareAsyncUpdateInspectTemplateRaw(context, request, cq));
    }
    // Gets an InspectTemplate.
    // See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    virtual ::grpc::Status GetInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest& request, ::google::privacy::dlp::v2::InspectTemplate* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>> AsyncGetInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>>(AsyncGetInspectTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>> PrepareAsyncGetInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>>(PrepareAsyncGetInspectTemplateRaw(context, request, cq));
    }
    // Lists InspectTemplates.
    // See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    virtual ::grpc::Status ListInspectTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest& request, ::google::privacy::dlp::v2::ListInspectTemplatesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>> AsyncListInspectTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>>(AsyncListInspectTemplatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>> PrepareAsyncListInspectTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>>(PrepareAsyncListInspectTemplatesRaw(context, request, cq));
    }
    // Deletes an InspectTemplate.
    // See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    virtual ::grpc::Status DeleteInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteInspectTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteInspectTemplateRaw(context, request, cq));
    }
    // Creates a DeidentifyTemplate for re-using frequently used configuration
    // for de-identifying content, images, and storage.
    // See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
    // more.
    virtual ::grpc::Status CreateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest& request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>> AsyncCreateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>>(AsyncCreateDeidentifyTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>> PrepareAsyncCreateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>>(PrepareAsyncCreateDeidentifyTemplateRaw(context, request, cq));
    }
    // Updates the DeidentifyTemplate.
    // See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
    // more.
    virtual ::grpc::Status UpdateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest& request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>> AsyncUpdateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>>(AsyncUpdateDeidentifyTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>> PrepareAsyncUpdateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>>(PrepareAsyncUpdateDeidentifyTemplateRaw(context, request, cq));
    }
    // Gets a DeidentifyTemplate.
    // See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
    // more.
    virtual ::grpc::Status GetDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest& request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>> AsyncGetDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>>(AsyncGetDeidentifyTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>> PrepareAsyncGetDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>>(PrepareAsyncGetDeidentifyTemplateRaw(context, request, cq));
    }
    // Lists DeidentifyTemplates.
    // See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
    // more.
    virtual ::grpc::Status ListDeidentifyTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest& request, ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>> AsyncListDeidentifyTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>>(AsyncListDeidentifyTemplatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>> PrepareAsyncListDeidentifyTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>>(PrepareAsyncListDeidentifyTemplatesRaw(context, request, cq));
    }
    // Deletes a DeidentifyTemplate.
    // See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
    // more.
    virtual ::grpc::Status DeleteDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteDeidentifyTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteDeidentifyTemplateRaw(context, request, cq));
    }
    // Creates a job trigger to run DLP actions such as scanning storage for
    // sensitive information on a set schedule.
    // See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    virtual ::grpc::Status CreateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest& request, ::google::privacy::dlp::v2::JobTrigger* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>> AsyncCreateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>>(AsyncCreateJobTriggerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>> PrepareAsyncCreateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>>(PrepareAsyncCreateJobTriggerRaw(context, request, cq));
    }
    // Updates a job trigger.
    // See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    virtual ::grpc::Status UpdateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest& request, ::google::privacy::dlp::v2::JobTrigger* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>> AsyncUpdateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>>(AsyncUpdateJobTriggerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>> PrepareAsyncUpdateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>>(PrepareAsyncUpdateJobTriggerRaw(context, request, cq));
    }
    // Gets a job trigger.
    // See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    virtual ::grpc::Status GetJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest& request, ::google::privacy::dlp::v2::JobTrigger* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>> AsyncGetJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>>(AsyncGetJobTriggerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>> PrepareAsyncGetJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>>(PrepareAsyncGetJobTriggerRaw(context, request, cq));
    }
    // Lists job triggers.
    // See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    virtual ::grpc::Status ListJobTriggers(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest& request, ::google::privacy::dlp::v2::ListJobTriggersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListJobTriggersResponse>> AsyncListJobTriggers(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListJobTriggersResponse>>(AsyncListJobTriggersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListJobTriggersResponse>> PrepareAsyncListJobTriggers(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListJobTriggersResponse>>(PrepareAsyncListJobTriggersRaw(context, request, cq));
    }
    // Deletes a job trigger.
    // See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    virtual ::grpc::Status DeleteJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteJobTriggerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteJobTriggerRaw(context, request, cq));
    }
    // Creates a new job to inspect storage or calculate risk metrics.
    // See https://cloud.google.com/dlp/docs/inspecting-storage and
    // https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    //
    // When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the
    // system will automatically choose what detectors to run. By default this may
    // be all types, but may change over time as detectors are updated.
    virtual ::grpc::Status CreateDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest& request, ::google::privacy::dlp::v2::DlpJob* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DlpJob>> AsyncCreateDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DlpJob>>(AsyncCreateDlpJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DlpJob>> PrepareAsyncCreateDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DlpJob>>(PrepareAsyncCreateDlpJobRaw(context, request, cq));
    }
    // Lists DlpJobs that match the specified filter in the request.
    // See https://cloud.google.com/dlp/docs/inspecting-storage and
    // https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    virtual ::grpc::Status ListDlpJobs(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest& request, ::google::privacy::dlp::v2::ListDlpJobsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListDlpJobsResponse>> AsyncListDlpJobs(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListDlpJobsResponse>>(AsyncListDlpJobsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListDlpJobsResponse>> PrepareAsyncListDlpJobs(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListDlpJobsResponse>>(PrepareAsyncListDlpJobsRaw(context, request, cq));
    }
    // Gets the latest state of a long-running DlpJob.
    // See https://cloud.google.com/dlp/docs/inspecting-storage and
    // https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    virtual ::grpc::Status GetDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest& request, ::google::privacy::dlp::v2::DlpJob* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DlpJob>> AsyncGetDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DlpJob>>(AsyncGetDlpJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DlpJob>> PrepareAsyncGetDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DlpJob>>(PrepareAsyncGetDlpJobRaw(context, request, cq));
    }
    // Deletes a long-running DlpJob. This method indicates that the client is
    // no longer interested in the DlpJob result. The job will be cancelled if
    // possible.
    // See https://cloud.google.com/dlp/docs/inspecting-storage and
    // https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    virtual ::grpc::Status DeleteDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteDlpJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteDlpJobRaw(context, request, cq));
    }
    // Starts asynchronous cancellation on a long-running DlpJob. The server
    // makes a best effort to cancel the DlpJob, but success is not
    // guaranteed.
    // See https://cloud.google.com/dlp/docs/inspecting-storage and
    // https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    virtual ::grpc::Status CancelDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncCancelDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncCancelDlpJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncCancelDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncCancelDlpJobRaw(context, request, cq));
    }
    // Creates a pre-built stored infoType to be used for inspection.
    // See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
    // learn more.
    virtual ::grpc::Status CreateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest& request, ::google::privacy::dlp::v2::StoredInfoType* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>> AsyncCreateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>>(AsyncCreateStoredInfoTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>> PrepareAsyncCreateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>>(PrepareAsyncCreateStoredInfoTypeRaw(context, request, cq));
    }
    // Updates the stored infoType by creating a new version. The existing version
    // will continue to be used until the new version is ready.
    // See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
    // learn more.
    virtual ::grpc::Status UpdateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest& request, ::google::privacy::dlp::v2::StoredInfoType* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>> AsyncUpdateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>>(AsyncUpdateStoredInfoTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>> PrepareAsyncUpdateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>>(PrepareAsyncUpdateStoredInfoTypeRaw(context, request, cq));
    }
    // Gets a stored infoType.
    // See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
    // learn more.
    virtual ::grpc::Status GetStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest& request, ::google::privacy::dlp::v2::StoredInfoType* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>> AsyncGetStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>>(AsyncGetStoredInfoTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>> PrepareAsyncGetStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>>(PrepareAsyncGetStoredInfoTypeRaw(context, request, cq));
    }
    // Lists stored infoTypes.
    // See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
    // learn more.
    virtual ::grpc::Status ListStoredInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest& request, ::google::privacy::dlp::v2::ListStoredInfoTypesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>> AsyncListStoredInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>>(AsyncListStoredInfoTypesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>> PrepareAsyncListStoredInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>>(PrepareAsyncListStoredInfoTypesRaw(context, request, cq));
    }
    // Deletes a stored infoType.
    // See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
    // learn more.
    virtual ::grpc::Status DeleteStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteStoredInfoTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteStoredInfoTypeRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectContentResponse>* AsyncInspectContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::InspectContentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectContentResponse>* PrepareAsyncInspectContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::InspectContentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::RedactImageResponse>* AsyncRedactImageRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::RedactImageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::RedactImageResponse>* PrepareAsyncRedactImageRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::RedactImageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyContentResponse>* AsyncDeidentifyContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyContentResponse>* PrepareAsyncDeidentifyContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ReidentifyContentResponse>* AsyncReidentifyContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ReidentifyContentResponse>* PrepareAsyncReidentifyContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListInfoTypesResponse>* AsyncListInfoTypesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListInfoTypesResponse>* PrepareAsyncListInfoTypesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>* AsyncCreateInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>* PrepareAsyncCreateInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>* AsyncUpdateInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>* PrepareAsyncUpdateInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>* AsyncGetInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::InspectTemplate>* PrepareAsyncGetInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>* AsyncListInspectTemplatesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>* PrepareAsyncListInspectTemplatesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>* AsyncCreateDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>* PrepareAsyncCreateDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>* AsyncUpdateDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>* PrepareAsyncUpdateDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>* AsyncGetDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DeidentifyTemplate>* PrepareAsyncGetDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>* AsyncListDeidentifyTemplatesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>* PrepareAsyncListDeidentifyTemplatesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>* AsyncCreateJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>* PrepareAsyncCreateJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>* AsyncUpdateJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>* PrepareAsyncUpdateJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>* AsyncGetJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::JobTrigger>* PrepareAsyncGetJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListJobTriggersResponse>* AsyncListJobTriggersRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListJobTriggersResponse>* PrepareAsyncListJobTriggersRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DlpJob>* AsyncCreateDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DlpJob>* PrepareAsyncCreateDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListDlpJobsResponse>* AsyncListDlpJobsRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListDlpJobsResponse>* PrepareAsyncListDlpJobsRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DlpJob>* AsyncGetDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::DlpJob>* PrepareAsyncGetDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncCancelDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncCancelDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>* AsyncCreateStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>* PrepareAsyncCreateStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>* AsyncUpdateStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>* PrepareAsyncUpdateStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>* AsyncGetStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::StoredInfoType>* PrepareAsyncGetStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>* AsyncListStoredInfoTypesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>* PrepareAsyncListStoredInfoTypesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status InspectContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::InspectContentRequest& request, ::google::privacy::dlp::v2::InspectContentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectContentResponse>> AsyncInspectContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::InspectContentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectContentResponse>>(AsyncInspectContentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectContentResponse>> PrepareAsyncInspectContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::InspectContentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectContentResponse>>(PrepareAsyncInspectContentRaw(context, request, cq));
    }
    ::grpc::Status RedactImage(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::RedactImageRequest& request, ::google::privacy::dlp::v2::RedactImageResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::RedactImageResponse>> AsyncRedactImage(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::RedactImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::RedactImageResponse>>(AsyncRedactImageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::RedactImageResponse>> PrepareAsyncRedactImage(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::RedactImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::RedactImageResponse>>(PrepareAsyncRedactImageRaw(context, request, cq));
    }
    ::grpc::Status DeidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest& request, ::google::privacy::dlp::v2::DeidentifyContentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyContentResponse>> AsyncDeidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyContentResponse>>(AsyncDeidentifyContentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyContentResponse>> PrepareAsyncDeidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyContentResponse>>(PrepareAsyncDeidentifyContentRaw(context, request, cq));
    }
    ::grpc::Status ReidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest& request, ::google::privacy::dlp::v2::ReidentifyContentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ReidentifyContentResponse>> AsyncReidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ReidentifyContentResponse>>(AsyncReidentifyContentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ReidentifyContentResponse>> PrepareAsyncReidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ReidentifyContentResponse>>(PrepareAsyncReidentifyContentRaw(context, request, cq));
    }
    ::grpc::Status ListInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest& request, ::google::privacy::dlp::v2::ListInfoTypesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInfoTypesResponse>> AsyncListInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInfoTypesResponse>>(AsyncListInfoTypesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInfoTypesResponse>> PrepareAsyncListInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInfoTypesResponse>>(PrepareAsyncListInfoTypesRaw(context, request, cq));
    }
    ::grpc::Status CreateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest& request, ::google::privacy::dlp::v2::InspectTemplate* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>> AsyncCreateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>>(AsyncCreateInspectTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>> PrepareAsyncCreateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>>(PrepareAsyncCreateInspectTemplateRaw(context, request, cq));
    }
    ::grpc::Status UpdateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest& request, ::google::privacy::dlp::v2::InspectTemplate* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>> AsyncUpdateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>>(AsyncUpdateInspectTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>> PrepareAsyncUpdateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>>(PrepareAsyncUpdateInspectTemplateRaw(context, request, cq));
    }
    ::grpc::Status GetInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest& request, ::google::privacy::dlp::v2::InspectTemplate* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>> AsyncGetInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>>(AsyncGetInspectTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>> PrepareAsyncGetInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>>(PrepareAsyncGetInspectTemplateRaw(context, request, cq));
    }
    ::grpc::Status ListInspectTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest& request, ::google::privacy::dlp::v2::ListInspectTemplatesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>> AsyncListInspectTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>>(AsyncListInspectTemplatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>> PrepareAsyncListInspectTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>>(PrepareAsyncListInspectTemplatesRaw(context, request, cq));
    }
    ::grpc::Status DeleteInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteInspectTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteInspectTemplateRaw(context, request, cq));
    }
    ::grpc::Status CreateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest& request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>> AsyncCreateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>>(AsyncCreateDeidentifyTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>> PrepareAsyncCreateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>>(PrepareAsyncCreateDeidentifyTemplateRaw(context, request, cq));
    }
    ::grpc::Status UpdateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest& request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>> AsyncUpdateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>>(AsyncUpdateDeidentifyTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>> PrepareAsyncUpdateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>>(PrepareAsyncUpdateDeidentifyTemplateRaw(context, request, cq));
    }
    ::grpc::Status GetDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest& request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>> AsyncGetDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>>(AsyncGetDeidentifyTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>> PrepareAsyncGetDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>>(PrepareAsyncGetDeidentifyTemplateRaw(context, request, cq));
    }
    ::grpc::Status ListDeidentifyTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest& request, ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>> AsyncListDeidentifyTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>>(AsyncListDeidentifyTemplatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>> PrepareAsyncListDeidentifyTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>>(PrepareAsyncListDeidentifyTemplatesRaw(context, request, cq));
    }
    ::grpc::Status DeleteDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteDeidentifyTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteDeidentifyTemplateRaw(context, request, cq));
    }
    ::grpc::Status CreateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest& request, ::google::privacy::dlp::v2::JobTrigger* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>> AsyncCreateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>>(AsyncCreateJobTriggerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>> PrepareAsyncCreateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>>(PrepareAsyncCreateJobTriggerRaw(context, request, cq));
    }
    ::grpc::Status UpdateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest& request, ::google::privacy::dlp::v2::JobTrigger* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>> AsyncUpdateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>>(AsyncUpdateJobTriggerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>> PrepareAsyncUpdateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>>(PrepareAsyncUpdateJobTriggerRaw(context, request, cq));
    }
    ::grpc::Status GetJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest& request, ::google::privacy::dlp::v2::JobTrigger* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>> AsyncGetJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>>(AsyncGetJobTriggerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>> PrepareAsyncGetJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>>(PrepareAsyncGetJobTriggerRaw(context, request, cq));
    }
    ::grpc::Status ListJobTriggers(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest& request, ::google::privacy::dlp::v2::ListJobTriggersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListJobTriggersResponse>> AsyncListJobTriggers(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListJobTriggersResponse>>(AsyncListJobTriggersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListJobTriggersResponse>> PrepareAsyncListJobTriggers(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListJobTriggersResponse>>(PrepareAsyncListJobTriggersRaw(context, request, cq));
    }
    ::grpc::Status DeleteJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteJobTriggerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteJobTriggerRaw(context, request, cq));
    }
    ::grpc::Status CreateDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest& request, ::google::privacy::dlp::v2::DlpJob* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>> AsyncCreateDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>>(AsyncCreateDlpJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>> PrepareAsyncCreateDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>>(PrepareAsyncCreateDlpJobRaw(context, request, cq));
    }
    ::grpc::Status ListDlpJobs(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest& request, ::google::privacy::dlp::v2::ListDlpJobsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDlpJobsResponse>> AsyncListDlpJobs(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDlpJobsResponse>>(AsyncListDlpJobsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDlpJobsResponse>> PrepareAsyncListDlpJobs(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDlpJobsResponse>>(PrepareAsyncListDlpJobsRaw(context, request, cq));
    }
    ::grpc::Status GetDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest& request, ::google::privacy::dlp::v2::DlpJob* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>> AsyncGetDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>>(AsyncGetDlpJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>> PrepareAsyncGetDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>>(PrepareAsyncGetDlpJobRaw(context, request, cq));
    }
    ::grpc::Status DeleteDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteDlpJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteDlpJobRaw(context, request, cq));
    }
    ::grpc::Status CancelDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncCancelDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncCancelDlpJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncCancelDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncCancelDlpJobRaw(context, request, cq));
    }
    ::grpc::Status CreateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest& request, ::google::privacy::dlp::v2::StoredInfoType* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>> AsyncCreateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>>(AsyncCreateStoredInfoTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>> PrepareAsyncCreateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>>(PrepareAsyncCreateStoredInfoTypeRaw(context, request, cq));
    }
    ::grpc::Status UpdateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest& request, ::google::privacy::dlp::v2::StoredInfoType* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>> AsyncUpdateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>>(AsyncUpdateStoredInfoTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>> PrepareAsyncUpdateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>>(PrepareAsyncUpdateStoredInfoTypeRaw(context, request, cq));
    }
    ::grpc::Status GetStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest& request, ::google::privacy::dlp::v2::StoredInfoType* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>> AsyncGetStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>>(AsyncGetStoredInfoTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>> PrepareAsyncGetStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>>(PrepareAsyncGetStoredInfoTypeRaw(context, request, cq));
    }
    ::grpc::Status ListStoredInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest& request, ::google::privacy::dlp::v2::ListStoredInfoTypesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>> AsyncListStoredInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>>(AsyncListStoredInfoTypesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>> PrepareAsyncListStoredInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>>(PrepareAsyncListStoredInfoTypesRaw(context, request, cq));
    }
    ::grpc::Status DeleteStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteStoredInfoTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteStoredInfoTypeRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectContentResponse>* AsyncInspectContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::InspectContentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectContentResponse>* PrepareAsyncInspectContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::InspectContentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::RedactImageResponse>* AsyncRedactImageRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::RedactImageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::RedactImageResponse>* PrepareAsyncRedactImageRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::RedactImageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyContentResponse>* AsyncDeidentifyContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyContentResponse>* PrepareAsyncDeidentifyContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ReidentifyContentResponse>* AsyncReidentifyContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ReidentifyContentResponse>* PrepareAsyncReidentifyContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInfoTypesResponse>* AsyncListInfoTypesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInfoTypesResponse>* PrepareAsyncListInfoTypesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>* AsyncCreateInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>* PrepareAsyncCreateInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>* AsyncUpdateInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>* PrepareAsyncUpdateInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>* AsyncGetInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>* PrepareAsyncGetInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>* AsyncListInspectTemplatesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>* PrepareAsyncListInspectTemplatesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>* AsyncCreateDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>* PrepareAsyncCreateDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>* AsyncUpdateDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>* PrepareAsyncUpdateDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>* AsyncGetDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>* PrepareAsyncGetDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>* AsyncListDeidentifyTemplatesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>* PrepareAsyncListDeidentifyTemplatesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>* AsyncCreateJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>* PrepareAsyncCreateJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>* AsyncUpdateJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>* PrepareAsyncUpdateJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>* AsyncGetJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>* PrepareAsyncGetJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListJobTriggersResponse>* AsyncListJobTriggersRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListJobTriggersResponse>* PrepareAsyncListJobTriggersRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>* AsyncCreateDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>* PrepareAsyncCreateDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDlpJobsResponse>* AsyncListDlpJobsRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDlpJobsResponse>* PrepareAsyncListDlpJobsRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>* AsyncGetDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>* PrepareAsyncGetDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncCancelDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncCancelDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>* AsyncCreateStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>* PrepareAsyncCreateStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>* AsyncUpdateStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>* PrepareAsyncUpdateStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>* AsyncGetStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>* PrepareAsyncGetStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>* AsyncListStoredInfoTypesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>* PrepareAsyncListStoredInfoTypesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_InspectContent_;
    const ::grpc::internal::RpcMethod rpcmethod_RedactImage_;
    const ::grpc::internal::RpcMethod rpcmethod_DeidentifyContent_;
    const ::grpc::internal::RpcMethod rpcmethod_ReidentifyContent_;
    const ::grpc::internal::RpcMethod rpcmethod_ListInfoTypes_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateInspectTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateInspectTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_GetInspectTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_ListInspectTemplates_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteInspectTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDeidentifyTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateDeidentifyTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDeidentifyTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_ListDeidentifyTemplates_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDeidentifyTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateJobTrigger_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateJobTrigger_;
    const ::grpc::internal::RpcMethod rpcmethod_GetJobTrigger_;
    const ::grpc::internal::RpcMethod rpcmethod_ListJobTriggers_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteJobTrigger_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDlpJob_;
    const ::grpc::internal::RpcMethod rpcmethod_ListDlpJobs_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDlpJob_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDlpJob_;
    const ::grpc::internal::RpcMethod rpcmethod_CancelDlpJob_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateStoredInfoType_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateStoredInfoType_;
    const ::grpc::internal::RpcMethod rpcmethod_GetStoredInfoType_;
    const ::grpc::internal::RpcMethod rpcmethod_ListStoredInfoTypes_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteStoredInfoType_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Finds potentially sensitive info in content.
    // This method has limits on input size, processing time, and output size.
    //
    // When no InfoTypes or CustomInfoTypes are specified in this request, the
    // system will automatically choose what detectors to run. By default this may
    // be all types, but may change over time as detectors are updated.
    //
    // For how to guides, see https://cloud.google.com/dlp/docs/inspecting-images
    // and https://cloud.google.com/dlp/docs/inspecting-text,
    virtual ::grpc::Status InspectContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::InspectContentRequest* request, ::google::privacy::dlp::v2::InspectContentResponse* response);
    // Redacts potentially sensitive info from an image.
    // This method has limits on input size, processing time, and output size.
    // See https://cloud.google.com/dlp/docs/redacting-sensitive-data-images to
    // learn more.
    //
    // When no InfoTypes or CustomInfoTypes are specified in this request, the
    // system will automatically choose what detectors to run. By default this may
    // be all types, but may change over time as detectors are updated.
    virtual ::grpc::Status RedactImage(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::RedactImageRequest* request, ::google::privacy::dlp::v2::RedactImageResponse* response);
    // De-identifies potentially sensitive info from a ContentItem.
    // This method has limits on input size and output size.
    // See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to
    // learn more.
    //
    // When no InfoTypes or CustomInfoTypes are specified in this request, the
    // system will automatically choose what detectors to run. By default this may
    // be all types, but may change over time as detectors are updated.
    virtual ::grpc::Status DeidentifyContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest* request, ::google::privacy::dlp::v2::DeidentifyContentResponse* response);
    // Re-identifies content that has been de-identified.
    // See
    // https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example
    // to learn more.
    virtual ::grpc::Status ReidentifyContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest* request, ::google::privacy::dlp::v2::ReidentifyContentResponse* response);
    // Returns a list of the sensitive information types that the DLP API
    // supports. See https://cloud.google.com/dlp/docs/infotypes-reference to
    // learn more.
    virtual ::grpc::Status ListInfoTypes(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest* request, ::google::privacy::dlp::v2::ListInfoTypesResponse* response);
    // Creates an InspectTemplate for re-using frequently used configuration
    // for inspecting content, images, and storage.
    // See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    virtual ::grpc::Status CreateInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response);
    // Updates the InspectTemplate.
    // See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    virtual ::grpc::Status UpdateInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response);
    // Gets an InspectTemplate.
    // See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    virtual ::grpc::Status GetInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response);
    // Lists InspectTemplates.
    // See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    virtual ::grpc::Status ListInspectTemplates(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest* request, ::google::privacy::dlp::v2::ListInspectTemplatesResponse* response);
    // Deletes an InspectTemplate.
    // See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    virtual ::grpc::Status DeleteInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest* request, ::google::protobuf::Empty* response);
    // Creates a DeidentifyTemplate for re-using frequently used configuration
    // for de-identifying content, images, and storage.
    // See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
    // more.
    virtual ::grpc::Status CreateDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response);
    // Updates the DeidentifyTemplate.
    // See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
    // more.
    virtual ::grpc::Status UpdateDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response);
    // Gets a DeidentifyTemplate.
    // See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
    // more.
    virtual ::grpc::Status GetDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response);
    // Lists DeidentifyTemplates.
    // See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
    // more.
    virtual ::grpc::Status ListDeidentifyTemplates(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest* request, ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse* response);
    // Deletes a DeidentifyTemplate.
    // See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
    // more.
    virtual ::grpc::Status DeleteDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest* request, ::google::protobuf::Empty* response);
    // Creates a job trigger to run DLP actions such as scanning storage for
    // sensitive information on a set schedule.
    // See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    virtual ::grpc::Status CreateJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response);
    // Updates a job trigger.
    // See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    virtual ::grpc::Status UpdateJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response);
    // Gets a job trigger.
    // See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    virtual ::grpc::Status GetJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response);
    // Lists job triggers.
    // See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    virtual ::grpc::Status ListJobTriggers(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest* request, ::google::privacy::dlp::v2::ListJobTriggersResponse* response);
    // Deletes a job trigger.
    // See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    virtual ::grpc::Status DeleteJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest* request, ::google::protobuf::Empty* response);
    // Creates a new job to inspect storage or calculate risk metrics.
    // See https://cloud.google.com/dlp/docs/inspecting-storage and
    // https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    //
    // When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the
    // system will automatically choose what detectors to run. By default this may
    // be all types, but may change over time as detectors are updated.
    virtual ::grpc::Status CreateDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest* request, ::google::privacy::dlp::v2::DlpJob* response);
    // Lists DlpJobs that match the specified filter in the request.
    // See https://cloud.google.com/dlp/docs/inspecting-storage and
    // https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    virtual ::grpc::Status ListDlpJobs(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest* request, ::google::privacy::dlp::v2::ListDlpJobsResponse* response);
    // Gets the latest state of a long-running DlpJob.
    // See https://cloud.google.com/dlp/docs/inspecting-storage and
    // https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    virtual ::grpc::Status GetDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest* request, ::google::privacy::dlp::v2::DlpJob* response);
    // Deletes a long-running DlpJob. This method indicates that the client is
    // no longer interested in the DlpJob result. The job will be cancelled if
    // possible.
    // See https://cloud.google.com/dlp/docs/inspecting-storage and
    // https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    virtual ::grpc::Status DeleteDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest* request, ::google::protobuf::Empty* response);
    // Starts asynchronous cancellation on a long-running DlpJob. The server
    // makes a best effort to cancel the DlpJob, but success is not
    // guaranteed.
    // See https://cloud.google.com/dlp/docs/inspecting-storage and
    // https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    virtual ::grpc::Status CancelDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest* request, ::google::protobuf::Empty* response);
    // Creates a pre-built stored infoType to be used for inspection.
    // See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
    // learn more.
    virtual ::grpc::Status CreateStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response);
    // Updates the stored infoType by creating a new version. The existing version
    // will continue to be used until the new version is ready.
    // See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
    // learn more.
    virtual ::grpc::Status UpdateStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response);
    // Gets a stored infoType.
    // See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
    // learn more.
    virtual ::grpc::Status GetStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response);
    // Lists stored infoTypes.
    // See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
    // learn more.
    virtual ::grpc::Status ListStoredInfoTypes(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest* request, ::google::privacy::dlp::v2::ListStoredInfoTypesResponse* response);
    // Deletes a stored infoType.
    // See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
    // learn more.
    virtual ::grpc::Status DeleteStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_InspectContent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_InspectContent() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_InspectContent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InspectContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::InspectContentRequest* request, ::google::privacy::dlp::v2::InspectContentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInspectContent(::grpc::ServerContext* context, ::google::privacy::dlp::v2::InspectContentRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::InspectContentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RedactImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_RedactImage() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_RedactImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RedactImage(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::RedactImageRequest* request, ::google::privacy::dlp::v2::RedactImageResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRedactImage(::grpc::ServerContext* context, ::google::privacy::dlp::v2::RedactImageRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::RedactImageResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeidentifyContent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeidentifyContent() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DeidentifyContent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeidentifyContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest* request, ::google::privacy::dlp::v2::DeidentifyContentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeidentifyContent(::grpc::ServerContext* context, ::google::privacy::dlp::v2::DeidentifyContentRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::DeidentifyContentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReidentifyContent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ReidentifyContent() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ReidentifyContent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReidentifyContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest* request, ::google::privacy::dlp::v2::ReidentifyContentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReidentifyContent(::grpc::ServerContext* context, ::google::privacy::dlp::v2::ReidentifyContentRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::ReidentifyContentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListInfoTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListInfoTypes() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListInfoTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInfoTypes(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest* request, ::google::privacy::dlp::v2::ListInfoTypesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInfoTypes(::grpc::ServerContext* context, ::google::privacy::dlp::v2::ListInfoTypesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::ListInfoTypesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateInspectTemplate() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_CreateInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateInspectTemplate(::grpc::ServerContext* context, ::google::privacy::dlp::v2::CreateInspectTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::InspectTemplate>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateInspectTemplate() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_UpdateInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateInspectTemplate(::grpc::ServerContext* context, ::google::privacy::dlp::v2::UpdateInspectTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::InspectTemplate>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetInspectTemplate() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInspectTemplate(::grpc::ServerContext* context, ::google::privacy::dlp::v2::GetInspectTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::InspectTemplate>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListInspectTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListInspectTemplates() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_ListInspectTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInspectTemplates(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest* request, ::google::privacy::dlp::v2::ListInspectTemplatesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInspectTemplates(::grpc::ServerContext* context, ::google::privacy::dlp::v2::ListInspectTemplatesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteInspectTemplate() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_DeleteInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteInspectTemplate(::grpc::ServerContext* context, ::google::privacy::dlp::v2::DeleteInspectTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateDeidentifyTemplate() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_CreateDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDeidentifyTemplate(::grpc::ServerContext* context, ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::DeidentifyTemplate>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateDeidentifyTemplate() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_UpdateDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDeidentifyTemplate(::grpc::ServerContext* context, ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::DeidentifyTemplate>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetDeidentifyTemplate() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDeidentifyTemplate(::grpc::ServerContext* context, ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::DeidentifyTemplate>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListDeidentifyTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListDeidentifyTemplates() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_ListDeidentifyTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDeidentifyTemplates(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest* request, ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDeidentifyTemplates(::grpc::ServerContext* context, ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteDeidentifyTemplate() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_DeleteDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDeidentifyTemplate(::grpc::ServerContext* context, ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateJobTrigger() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_CreateJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateJobTrigger(::grpc::ServerContext* context, ::google::privacy::dlp::v2::CreateJobTriggerRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::JobTrigger>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateJobTrigger() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_UpdateJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateJobTrigger(::grpc::ServerContext* context, ::google::privacy::dlp::v2::UpdateJobTriggerRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::JobTrigger>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetJobTrigger() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_GetJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetJobTrigger(::grpc::ServerContext* context, ::google::privacy::dlp::v2::GetJobTriggerRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::JobTrigger>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListJobTriggers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListJobTriggers() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_ListJobTriggers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListJobTriggers(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest* request, ::google::privacy::dlp::v2::ListJobTriggersResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListJobTriggers(::grpc::ServerContext* context, ::google::privacy::dlp::v2::ListJobTriggersRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::ListJobTriggersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteJobTrigger() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_DeleteJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteJobTrigger(::grpc::ServerContext* context, ::google::privacy::dlp::v2::DeleteJobTriggerRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateDlpJob() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_CreateDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest* request, ::google::privacy::dlp::v2::DlpJob* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDlpJob(::grpc::ServerContext* context, ::google::privacy::dlp::v2::CreateDlpJobRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::DlpJob>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListDlpJobs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListDlpJobs() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_ListDlpJobs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDlpJobs(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest* request, ::google::privacy::dlp::v2::ListDlpJobsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDlpJobs(::grpc::ServerContext* context, ::google::privacy::dlp::v2::ListDlpJobsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::ListDlpJobsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetDlpJob() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_GetDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest* request, ::google::privacy::dlp::v2::DlpJob* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDlpJob(::grpc::ServerContext* context, ::google::privacy::dlp::v2::GetDlpJobRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::DlpJob>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteDlpJob() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_DeleteDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDlpJob(::grpc::ServerContext* context, ::google::privacy::dlp::v2::DeleteDlpJobRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CancelDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CancelDlpJob() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_CancelDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCancelDlpJob(::grpc::ServerContext* context, ::google::privacy::dlp::v2::CancelDlpJobRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateStoredInfoType() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_CreateStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateStoredInfoType(::grpc::ServerContext* context, ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::StoredInfoType>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateStoredInfoType() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_UpdateStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateStoredInfoType(::grpc::ServerContext* context, ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::StoredInfoType>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetStoredInfoType() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_GetStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetStoredInfoType(::grpc::ServerContext* context, ::google::privacy::dlp::v2::GetStoredInfoTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::StoredInfoType>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListStoredInfoTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListStoredInfoTypes() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_ListStoredInfoTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredInfoTypes(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest* request, ::google::privacy::dlp::v2::ListStoredInfoTypesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListStoredInfoTypes(::grpc::ServerContext* context, ::google::privacy::dlp::v2::ListStoredInfoTypesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteStoredInfoType() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_DeleteStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteStoredInfoType(::grpc::ServerContext* context, ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_InspectContent<WithAsyncMethod_RedactImage<WithAsyncMethod_DeidentifyContent<WithAsyncMethod_ReidentifyContent<WithAsyncMethod_ListInfoTypes<WithAsyncMethod_CreateInspectTemplate<WithAsyncMethod_UpdateInspectTemplate<WithAsyncMethod_GetInspectTemplate<WithAsyncMethod_ListInspectTemplates<WithAsyncMethod_DeleteInspectTemplate<WithAsyncMethod_CreateDeidentifyTemplate<WithAsyncMethod_UpdateDeidentifyTemplate<WithAsyncMethod_GetDeidentifyTemplate<WithAsyncMethod_ListDeidentifyTemplates<WithAsyncMethod_DeleteDeidentifyTemplate<WithAsyncMethod_CreateJobTrigger<WithAsyncMethod_UpdateJobTrigger<WithAsyncMethod_GetJobTrigger<WithAsyncMethod_ListJobTriggers<WithAsyncMethod_DeleteJobTrigger<WithAsyncMethod_CreateDlpJob<WithAsyncMethod_ListDlpJobs<WithAsyncMethod_GetDlpJob<WithAsyncMethod_DeleteDlpJob<WithAsyncMethod_CancelDlpJob<WithAsyncMethod_CreateStoredInfoType<WithAsyncMethod_UpdateStoredInfoType<WithAsyncMethod_GetStoredInfoType<WithAsyncMethod_ListStoredInfoTypes<WithAsyncMethod_DeleteStoredInfoType<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_InspectContent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_InspectContent() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_InspectContent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InspectContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::InspectContentRequest* request, ::google::privacy::dlp::v2::InspectContentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RedactImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_RedactImage() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_RedactImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RedactImage(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::RedactImageRequest* request, ::google::privacy::dlp::v2::RedactImageResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeidentifyContent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeidentifyContent() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DeidentifyContent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeidentifyContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest* request, ::google::privacy::dlp::v2::DeidentifyContentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReidentifyContent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ReidentifyContent() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ReidentifyContent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReidentifyContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest* request, ::google::privacy::dlp::v2::ReidentifyContentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListInfoTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListInfoTypes() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListInfoTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInfoTypes(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest* request, ::google::privacy::dlp::v2::ListInfoTypesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateInspectTemplate() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_CreateInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateInspectTemplate() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_UpdateInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetInspectTemplate() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListInspectTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListInspectTemplates() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_ListInspectTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInspectTemplates(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest* request, ::google::privacy::dlp::v2::ListInspectTemplatesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteInspectTemplate() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_DeleteInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateDeidentifyTemplate() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_CreateDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateDeidentifyTemplate() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_UpdateDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetDeidentifyTemplate() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListDeidentifyTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListDeidentifyTemplates() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_ListDeidentifyTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDeidentifyTemplates(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest* request, ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteDeidentifyTemplate() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_DeleteDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateJobTrigger() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_CreateJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateJobTrigger() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_UpdateJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetJobTrigger() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_GetJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListJobTriggers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListJobTriggers() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_ListJobTriggers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListJobTriggers(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest* request, ::google::privacy::dlp::v2::ListJobTriggersResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteJobTrigger() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_DeleteJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateDlpJob() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_CreateDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest* request, ::google::privacy::dlp::v2::DlpJob* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListDlpJobs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListDlpJobs() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_ListDlpJobs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDlpJobs(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest* request, ::google::privacy::dlp::v2::ListDlpJobsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetDlpJob() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_GetDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest* request, ::google::privacy::dlp::v2::DlpJob* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteDlpJob() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_DeleteDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CancelDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CancelDlpJob() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_CancelDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateStoredInfoType() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_CreateStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateStoredInfoType() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_UpdateStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetStoredInfoType() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_GetStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListStoredInfoTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListStoredInfoTypes() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_ListStoredInfoTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredInfoTypes(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest* request, ::google::privacy::dlp::v2::ListStoredInfoTypesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteStoredInfoType() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_DeleteStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_InspectContent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_InspectContent() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_InspectContent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InspectContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::InspectContentRequest* request, ::google::privacy::dlp::v2::InspectContentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInspectContent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RedactImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_RedactImage() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_RedactImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RedactImage(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::RedactImageRequest* request, ::google::privacy::dlp::v2::RedactImageResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRedactImage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeidentifyContent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeidentifyContent() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DeidentifyContent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeidentifyContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest* request, ::google::privacy::dlp::v2::DeidentifyContentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeidentifyContent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReidentifyContent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ReidentifyContent() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ReidentifyContent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReidentifyContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest* request, ::google::privacy::dlp::v2::ReidentifyContentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReidentifyContent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListInfoTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListInfoTypes() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ListInfoTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInfoTypes(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest* request, ::google::privacy::dlp::v2::ListInfoTypesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInfoTypes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateInspectTemplate() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_CreateInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateInspectTemplate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateInspectTemplate() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_UpdateInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateInspectTemplate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetInspectTemplate() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInspectTemplate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListInspectTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListInspectTemplates() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_ListInspectTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInspectTemplates(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest* request, ::google::privacy::dlp::v2::ListInspectTemplatesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInspectTemplates(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteInspectTemplate() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_DeleteInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteInspectTemplate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateDeidentifyTemplate() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_CreateDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDeidentifyTemplate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateDeidentifyTemplate() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_UpdateDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDeidentifyTemplate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetDeidentifyTemplate() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDeidentifyTemplate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListDeidentifyTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListDeidentifyTemplates() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_ListDeidentifyTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDeidentifyTemplates(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest* request, ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDeidentifyTemplates(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteDeidentifyTemplate() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_DeleteDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDeidentifyTemplate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateJobTrigger() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_CreateJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateJobTrigger(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateJobTrigger() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_UpdateJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateJobTrigger(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetJobTrigger() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_GetJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetJobTrigger(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListJobTriggers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListJobTriggers() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_ListJobTriggers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListJobTriggers(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest* request, ::google::privacy::dlp::v2::ListJobTriggersResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListJobTriggers(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteJobTrigger() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_DeleteJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteJobTrigger(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateDlpJob() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_CreateDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest* request, ::google::privacy::dlp::v2::DlpJob* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDlpJob(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListDlpJobs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListDlpJobs() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_ListDlpJobs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDlpJobs(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest* request, ::google::privacy::dlp::v2::ListDlpJobsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDlpJobs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetDlpJob() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_GetDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest* request, ::google::privacy::dlp::v2::DlpJob* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDlpJob(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteDlpJob() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_DeleteDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDlpJob(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CancelDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CancelDlpJob() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_CancelDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCancelDlpJob(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateStoredInfoType() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_CreateStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateStoredInfoType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateStoredInfoType() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_UpdateStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateStoredInfoType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetStoredInfoType() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_GetStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetStoredInfoType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListStoredInfoTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListStoredInfoTypes() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_ListStoredInfoTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredInfoTypes(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest* request, ::google::privacy::dlp::v2::ListStoredInfoTypesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListStoredInfoTypes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteStoredInfoType() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_DeleteStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteStoredInfoType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InspectContent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_InspectContent() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::InspectContentRequest, ::google::privacy::dlp::v2::InspectContentResponse>(std::bind(&WithStreamedUnaryMethod_InspectContent<BaseClass>::StreamedInspectContent, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_InspectContent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InspectContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::InspectContentRequest* request, ::google::privacy::dlp::v2::InspectContentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInspectContent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::InspectContentRequest,::google::privacy::dlp::v2::InspectContentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RedactImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_RedactImage() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::RedactImageRequest, ::google::privacy::dlp::v2::RedactImageResponse>(std::bind(&WithStreamedUnaryMethod_RedactImage<BaseClass>::StreamedRedactImage, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_RedactImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RedactImage(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::RedactImageRequest* request, ::google::privacy::dlp::v2::RedactImageResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRedactImage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::RedactImageRequest,::google::privacy::dlp::v2::RedactImageResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeidentifyContent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeidentifyContent() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::DeidentifyContentRequest, ::google::privacy::dlp::v2::DeidentifyContentResponse>(std::bind(&WithStreamedUnaryMethod_DeidentifyContent<BaseClass>::StreamedDeidentifyContent, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeidentifyContent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeidentifyContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest* request, ::google::privacy::dlp::v2::DeidentifyContentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeidentifyContent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::DeidentifyContentRequest,::google::privacy::dlp::v2::DeidentifyContentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReidentifyContent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ReidentifyContent() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::ReidentifyContentRequest, ::google::privacy::dlp::v2::ReidentifyContentResponse>(std::bind(&WithStreamedUnaryMethod_ReidentifyContent<BaseClass>::StreamedReidentifyContent, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ReidentifyContent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReidentifyContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest* request, ::google::privacy::dlp::v2::ReidentifyContentResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReidentifyContent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::ReidentifyContentRequest,::google::privacy::dlp::v2::ReidentifyContentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListInfoTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListInfoTypes() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::ListInfoTypesRequest, ::google::privacy::dlp::v2::ListInfoTypesResponse>(std::bind(&WithStreamedUnaryMethod_ListInfoTypes<BaseClass>::StreamedListInfoTypes, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListInfoTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListInfoTypes(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest* request, ::google::privacy::dlp::v2::ListInfoTypesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListInfoTypes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::ListInfoTypesRequest,::google::privacy::dlp::v2::ListInfoTypesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateInspectTemplate() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::CreateInspectTemplateRequest, ::google::privacy::dlp::v2::InspectTemplate>(std::bind(&WithStreamedUnaryMethod_CreateInspectTemplate<BaseClass>::StreamedCreateInspectTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateInspectTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::CreateInspectTemplateRequest,::google::privacy::dlp::v2::InspectTemplate>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateInspectTemplate() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::UpdateInspectTemplateRequest, ::google::privacy::dlp::v2::InspectTemplate>(std::bind(&WithStreamedUnaryMethod_UpdateInspectTemplate<BaseClass>::StreamedUpdateInspectTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateInspectTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::UpdateInspectTemplateRequest,::google::privacy::dlp::v2::InspectTemplate>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetInspectTemplate() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::GetInspectTemplateRequest, ::google::privacy::dlp::v2::InspectTemplate>(std::bind(&WithStreamedUnaryMethod_GetInspectTemplate<BaseClass>::StreamedGetInspectTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetInspectTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::GetInspectTemplateRequest,::google::privacy::dlp::v2::InspectTemplate>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListInspectTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListInspectTemplates() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::ListInspectTemplatesRequest, ::google::privacy::dlp::v2::ListInspectTemplatesResponse>(std::bind(&WithStreamedUnaryMethod_ListInspectTemplates<BaseClass>::StreamedListInspectTemplates, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListInspectTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListInspectTemplates(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest* request, ::google::privacy::dlp::v2::ListInspectTemplatesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListInspectTemplates(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::ListInspectTemplatesRequest,::google::privacy::dlp::v2::ListInspectTemplatesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteInspectTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteInspectTemplate() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::DeleteInspectTemplateRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteInspectTemplate<BaseClass>::StreamedDeleteInspectTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteInspectTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteInspectTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::DeleteInspectTemplateRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateDeidentifyTemplate() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest, ::google::privacy::dlp::v2::DeidentifyTemplate>(std::bind(&WithStreamedUnaryMethod_CreateDeidentifyTemplate<BaseClass>::StreamedCreateDeidentifyTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDeidentifyTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest,::google::privacy::dlp::v2::DeidentifyTemplate>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateDeidentifyTemplate() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest, ::google::privacy::dlp::v2::DeidentifyTemplate>(std::bind(&WithStreamedUnaryMethod_UpdateDeidentifyTemplate<BaseClass>::StreamedUpdateDeidentifyTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateDeidentifyTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest,::google::privacy::dlp::v2::DeidentifyTemplate>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetDeidentifyTemplate() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest, ::google::privacy::dlp::v2::DeidentifyTemplate>(std::bind(&WithStreamedUnaryMethod_GetDeidentifyTemplate<BaseClass>::StreamedGetDeidentifyTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDeidentifyTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest,::google::privacy::dlp::v2::DeidentifyTemplate>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListDeidentifyTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListDeidentifyTemplates() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest, ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>(std::bind(&WithStreamedUnaryMethod_ListDeidentifyTemplates<BaseClass>::StreamedListDeidentifyTemplates, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListDeidentifyTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListDeidentifyTemplates(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest* request, ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListDeidentifyTemplates(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest,::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDeidentifyTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteDeidentifyTemplate() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteDeidentifyTemplate<BaseClass>::StreamedDeleteDeidentifyTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteDeidentifyTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDeidentifyTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateJobTrigger() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::CreateJobTriggerRequest, ::google::privacy::dlp::v2::JobTrigger>(std::bind(&WithStreamedUnaryMethod_CreateJobTrigger<BaseClass>::StreamedCreateJobTrigger, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateJobTrigger(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::CreateJobTriggerRequest,::google::privacy::dlp::v2::JobTrigger>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateJobTrigger() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::UpdateJobTriggerRequest, ::google::privacy::dlp::v2::JobTrigger>(std::bind(&WithStreamedUnaryMethod_UpdateJobTrigger<BaseClass>::StreamedUpdateJobTrigger, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateJobTrigger(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::UpdateJobTriggerRequest,::google::privacy::dlp::v2::JobTrigger>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetJobTrigger() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::GetJobTriggerRequest, ::google::privacy::dlp::v2::JobTrigger>(std::bind(&WithStreamedUnaryMethod_GetJobTrigger<BaseClass>::StreamedGetJobTrigger, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetJobTrigger(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::GetJobTriggerRequest,::google::privacy::dlp::v2::JobTrigger>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListJobTriggers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListJobTriggers() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::ListJobTriggersRequest, ::google::privacy::dlp::v2::ListJobTriggersResponse>(std::bind(&WithStreamedUnaryMethod_ListJobTriggers<BaseClass>::StreamedListJobTriggers, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListJobTriggers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListJobTriggers(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest* request, ::google::privacy::dlp::v2::ListJobTriggersResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListJobTriggers(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::ListJobTriggersRequest,::google::privacy::dlp::v2::ListJobTriggersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteJobTrigger : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteJobTrigger() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::DeleteJobTriggerRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteJobTrigger<BaseClass>::StreamedDeleteJobTrigger, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteJobTrigger() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteJobTrigger(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::DeleteJobTriggerRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateDlpJob() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::CreateDlpJobRequest, ::google::privacy::dlp::v2::DlpJob>(std::bind(&WithStreamedUnaryMethod_CreateDlpJob<BaseClass>::StreamedCreateDlpJob, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest* request, ::google::privacy::dlp::v2::DlpJob* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDlpJob(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::CreateDlpJobRequest,::google::privacy::dlp::v2::DlpJob>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListDlpJobs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListDlpJobs() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::ListDlpJobsRequest, ::google::privacy::dlp::v2::ListDlpJobsResponse>(std::bind(&WithStreamedUnaryMethod_ListDlpJobs<BaseClass>::StreamedListDlpJobs, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListDlpJobs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListDlpJobs(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest* request, ::google::privacy::dlp::v2::ListDlpJobsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListDlpJobs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::ListDlpJobsRequest,::google::privacy::dlp::v2::ListDlpJobsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetDlpJob() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::GetDlpJobRequest, ::google::privacy::dlp::v2::DlpJob>(std::bind(&WithStreamedUnaryMethod_GetDlpJob<BaseClass>::StreamedGetDlpJob, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest* request, ::google::privacy::dlp::v2::DlpJob* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDlpJob(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::GetDlpJobRequest,::google::privacy::dlp::v2::DlpJob>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteDlpJob() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::DeleteDlpJobRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteDlpJob<BaseClass>::StreamedDeleteDlpJob, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDlpJob(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::DeleteDlpJobRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CancelDlpJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CancelDlpJob() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::CancelDlpJobRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_CancelDlpJob<BaseClass>::StreamedCancelDlpJob, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CancelDlpJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CancelDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCancelDlpJob(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::CancelDlpJobRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateStoredInfoType() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest, ::google::privacy::dlp::v2::StoredInfoType>(std::bind(&WithStreamedUnaryMethod_CreateStoredInfoType<BaseClass>::StreamedCreateStoredInfoType, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateStoredInfoType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest,::google::privacy::dlp::v2::StoredInfoType>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateStoredInfoType() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest, ::google::privacy::dlp::v2::StoredInfoType>(std::bind(&WithStreamedUnaryMethod_UpdateStoredInfoType<BaseClass>::StreamedUpdateStoredInfoType, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateStoredInfoType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest,::google::privacy::dlp::v2::StoredInfoType>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetStoredInfoType() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::GetStoredInfoTypeRequest, ::google::privacy::dlp::v2::StoredInfoType>(std::bind(&WithStreamedUnaryMethod_GetStoredInfoType<BaseClass>::StreamedGetStoredInfoType, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetStoredInfoType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::GetStoredInfoTypeRequest,::google::privacy::dlp::v2::StoredInfoType>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListStoredInfoTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListStoredInfoTypes() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::ListStoredInfoTypesRequest, ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>(std::bind(&WithStreamedUnaryMethod_ListStoredInfoTypes<BaseClass>::StreamedListStoredInfoTypes, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListStoredInfoTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListStoredInfoTypes(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest* request, ::google::privacy::dlp::v2::ListStoredInfoTypesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListStoredInfoTypes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::ListStoredInfoTypesRequest,::google::privacy::dlp::v2::ListStoredInfoTypesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteStoredInfoType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteStoredInfoType() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler< ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteStoredInfoType<BaseClass>::StreamedDeleteStoredInfoType, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteStoredInfoType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteStoredInfoType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_InspectContent<WithStreamedUnaryMethod_RedactImage<WithStreamedUnaryMethod_DeidentifyContent<WithStreamedUnaryMethod_ReidentifyContent<WithStreamedUnaryMethod_ListInfoTypes<WithStreamedUnaryMethod_CreateInspectTemplate<WithStreamedUnaryMethod_UpdateInspectTemplate<WithStreamedUnaryMethod_GetInspectTemplate<WithStreamedUnaryMethod_ListInspectTemplates<WithStreamedUnaryMethod_DeleteInspectTemplate<WithStreamedUnaryMethod_CreateDeidentifyTemplate<WithStreamedUnaryMethod_UpdateDeidentifyTemplate<WithStreamedUnaryMethod_GetDeidentifyTemplate<WithStreamedUnaryMethod_ListDeidentifyTemplates<WithStreamedUnaryMethod_DeleteDeidentifyTemplate<WithStreamedUnaryMethod_CreateJobTrigger<WithStreamedUnaryMethod_UpdateJobTrigger<WithStreamedUnaryMethod_GetJobTrigger<WithStreamedUnaryMethod_ListJobTriggers<WithStreamedUnaryMethod_DeleteJobTrigger<WithStreamedUnaryMethod_CreateDlpJob<WithStreamedUnaryMethod_ListDlpJobs<WithStreamedUnaryMethod_GetDlpJob<WithStreamedUnaryMethod_DeleteDlpJob<WithStreamedUnaryMethod_CancelDlpJob<WithStreamedUnaryMethod_CreateStoredInfoType<WithStreamedUnaryMethod_UpdateStoredInfoType<WithStreamedUnaryMethod_GetStoredInfoType<WithStreamedUnaryMethod_ListStoredInfoTypes<WithStreamedUnaryMethod_DeleteStoredInfoType<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_InspectContent<WithStreamedUnaryMethod_RedactImage<WithStreamedUnaryMethod_DeidentifyContent<WithStreamedUnaryMethod_ReidentifyContent<WithStreamedUnaryMethod_ListInfoTypes<WithStreamedUnaryMethod_CreateInspectTemplate<WithStreamedUnaryMethod_UpdateInspectTemplate<WithStreamedUnaryMethod_GetInspectTemplate<WithStreamedUnaryMethod_ListInspectTemplates<WithStreamedUnaryMethod_DeleteInspectTemplate<WithStreamedUnaryMethod_CreateDeidentifyTemplate<WithStreamedUnaryMethod_UpdateDeidentifyTemplate<WithStreamedUnaryMethod_GetDeidentifyTemplate<WithStreamedUnaryMethod_ListDeidentifyTemplates<WithStreamedUnaryMethod_DeleteDeidentifyTemplate<WithStreamedUnaryMethod_CreateJobTrigger<WithStreamedUnaryMethod_UpdateJobTrigger<WithStreamedUnaryMethod_GetJobTrigger<WithStreamedUnaryMethod_ListJobTriggers<WithStreamedUnaryMethod_DeleteJobTrigger<WithStreamedUnaryMethod_CreateDlpJob<WithStreamedUnaryMethod_ListDlpJobs<WithStreamedUnaryMethod_GetDlpJob<WithStreamedUnaryMethod_DeleteDlpJob<WithStreamedUnaryMethod_CancelDlpJob<WithStreamedUnaryMethod_CreateStoredInfoType<WithStreamedUnaryMethod_UpdateStoredInfoType<WithStreamedUnaryMethod_GetStoredInfoType<WithStreamedUnaryMethod_ListStoredInfoTypes<WithStreamedUnaryMethod_DeleteStoredInfoType<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v2
}  // namespace dlp
}  // namespace privacy
}  // namespace google


#endif  // GRPC_google_2fprivacy_2fdlp_2fv2_2fdlp_2eproto__INCLUDED
