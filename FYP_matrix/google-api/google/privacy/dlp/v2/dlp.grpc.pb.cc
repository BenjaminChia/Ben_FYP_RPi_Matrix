// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/privacy/dlp/v2/dlp.proto

#include "google/privacy/dlp/v2/dlp.pb.h"
#include "google/privacy/dlp/v2/dlp.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace privacy {
namespace dlp {
namespace v2 {

static const char* DlpService_method_names[] = {
  "/google.privacy.dlp.v2.DlpService/InspectContent",
  "/google.privacy.dlp.v2.DlpService/RedactImage",
  "/google.privacy.dlp.v2.DlpService/DeidentifyContent",
  "/google.privacy.dlp.v2.DlpService/ReidentifyContent",
  "/google.privacy.dlp.v2.DlpService/ListInfoTypes",
  "/google.privacy.dlp.v2.DlpService/CreateInspectTemplate",
  "/google.privacy.dlp.v2.DlpService/UpdateInspectTemplate",
  "/google.privacy.dlp.v2.DlpService/GetInspectTemplate",
  "/google.privacy.dlp.v2.DlpService/ListInspectTemplates",
  "/google.privacy.dlp.v2.DlpService/DeleteInspectTemplate",
  "/google.privacy.dlp.v2.DlpService/CreateDeidentifyTemplate",
  "/google.privacy.dlp.v2.DlpService/UpdateDeidentifyTemplate",
  "/google.privacy.dlp.v2.DlpService/GetDeidentifyTemplate",
  "/google.privacy.dlp.v2.DlpService/ListDeidentifyTemplates",
  "/google.privacy.dlp.v2.DlpService/DeleteDeidentifyTemplate",
  "/google.privacy.dlp.v2.DlpService/CreateJobTrigger",
  "/google.privacy.dlp.v2.DlpService/UpdateJobTrigger",
  "/google.privacy.dlp.v2.DlpService/GetJobTrigger",
  "/google.privacy.dlp.v2.DlpService/ListJobTriggers",
  "/google.privacy.dlp.v2.DlpService/DeleteJobTrigger",
  "/google.privacy.dlp.v2.DlpService/CreateDlpJob",
  "/google.privacy.dlp.v2.DlpService/ListDlpJobs",
  "/google.privacy.dlp.v2.DlpService/GetDlpJob",
  "/google.privacy.dlp.v2.DlpService/DeleteDlpJob",
  "/google.privacy.dlp.v2.DlpService/CancelDlpJob",
  "/google.privacy.dlp.v2.DlpService/CreateStoredInfoType",
  "/google.privacy.dlp.v2.DlpService/UpdateStoredInfoType",
  "/google.privacy.dlp.v2.DlpService/GetStoredInfoType",
  "/google.privacy.dlp.v2.DlpService/ListStoredInfoTypes",
  "/google.privacy.dlp.v2.DlpService/DeleteStoredInfoType",
};

std::unique_ptr< DlpService::Stub> DlpService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< DlpService::Stub> stub(new DlpService::Stub(channel));
  return stub;
}

DlpService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_InspectContent_(DlpService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_RedactImage_(DlpService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeidentifyContent_(DlpService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ReidentifyContent_(DlpService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListInfoTypes_(DlpService_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateInspectTemplate_(DlpService_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateInspectTemplate_(DlpService_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetInspectTemplate_(DlpService_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListInspectTemplates_(DlpService_method_names[8], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteInspectTemplate_(DlpService_method_names[9], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateDeidentifyTemplate_(DlpService_method_names[10], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateDeidentifyTemplate_(DlpService_method_names[11], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetDeidentifyTemplate_(DlpService_method_names[12], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListDeidentifyTemplates_(DlpService_method_names[13], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteDeidentifyTemplate_(DlpService_method_names[14], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateJobTrigger_(DlpService_method_names[15], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateJobTrigger_(DlpService_method_names[16], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetJobTrigger_(DlpService_method_names[17], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListJobTriggers_(DlpService_method_names[18], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteJobTrigger_(DlpService_method_names[19], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateDlpJob_(DlpService_method_names[20], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListDlpJobs_(DlpService_method_names[21], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetDlpJob_(DlpService_method_names[22], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteDlpJob_(DlpService_method_names[23], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CancelDlpJob_(DlpService_method_names[24], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateStoredInfoType_(DlpService_method_names[25], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateStoredInfoType_(DlpService_method_names[26], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetStoredInfoType_(DlpService_method_names[27], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListStoredInfoTypes_(DlpService_method_names[28], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteStoredInfoType_(DlpService_method_names[29], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status DlpService::Stub::InspectContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::InspectContentRequest& request, ::google::privacy::dlp::v2::InspectContentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_InspectContent_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectContentResponse>* DlpService::Stub::AsyncInspectContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::InspectContentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::InspectContentResponse>::Create(channel_.get(), cq, rpcmethod_InspectContent_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectContentResponse>* DlpService::Stub::PrepareAsyncInspectContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::InspectContentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::InspectContentResponse>::Create(channel_.get(), cq, rpcmethod_InspectContent_, context, request, false);
}

::grpc::Status DlpService::Stub::RedactImage(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::RedactImageRequest& request, ::google::privacy::dlp::v2::RedactImageResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_RedactImage_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::RedactImageResponse>* DlpService::Stub::AsyncRedactImageRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::RedactImageRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::RedactImageResponse>::Create(channel_.get(), cq, rpcmethod_RedactImage_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::RedactImageResponse>* DlpService::Stub::PrepareAsyncRedactImageRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::RedactImageRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::RedactImageResponse>::Create(channel_.get(), cq, rpcmethod_RedactImage_, context, request, false);
}

::grpc::Status DlpService::Stub::DeidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest& request, ::google::privacy::dlp::v2::DeidentifyContentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeidentifyContent_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyContentResponse>* DlpService::Stub::AsyncDeidentifyContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::DeidentifyContentResponse>::Create(channel_.get(), cq, rpcmethod_DeidentifyContent_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyContentResponse>* DlpService::Stub::PrepareAsyncDeidentifyContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::DeidentifyContentResponse>::Create(channel_.get(), cq, rpcmethod_DeidentifyContent_, context, request, false);
}

::grpc::Status DlpService::Stub::ReidentifyContent(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest& request, ::google::privacy::dlp::v2::ReidentifyContentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ReidentifyContent_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ReidentifyContentResponse>* DlpService::Stub::AsyncReidentifyContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ReidentifyContentResponse>::Create(channel_.get(), cq, rpcmethod_ReidentifyContent_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ReidentifyContentResponse>* DlpService::Stub::PrepareAsyncReidentifyContentRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ReidentifyContentResponse>::Create(channel_.get(), cq, rpcmethod_ReidentifyContent_, context, request, false);
}

::grpc::Status DlpService::Stub::ListInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest& request, ::google::privacy::dlp::v2::ListInfoTypesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListInfoTypes_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInfoTypesResponse>* DlpService::Stub::AsyncListInfoTypesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ListInfoTypesResponse>::Create(channel_.get(), cq, rpcmethod_ListInfoTypes_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInfoTypesResponse>* DlpService::Stub::PrepareAsyncListInfoTypesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ListInfoTypesResponse>::Create(channel_.get(), cq, rpcmethod_ListInfoTypes_, context, request, false);
}

::grpc::Status DlpService::Stub::CreateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest& request, ::google::privacy::dlp::v2::InspectTemplate* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateInspectTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>* DlpService::Stub::AsyncCreateInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::InspectTemplate>::Create(channel_.get(), cq, rpcmethod_CreateInspectTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>* DlpService::Stub::PrepareAsyncCreateInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::InspectTemplate>::Create(channel_.get(), cq, rpcmethod_CreateInspectTemplate_, context, request, false);
}

::grpc::Status DlpService::Stub::UpdateInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest& request, ::google::privacy::dlp::v2::InspectTemplate* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateInspectTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>* DlpService::Stub::AsyncUpdateInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::InspectTemplate>::Create(channel_.get(), cq, rpcmethod_UpdateInspectTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>* DlpService::Stub::PrepareAsyncUpdateInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::InspectTemplate>::Create(channel_.get(), cq, rpcmethod_UpdateInspectTemplate_, context, request, false);
}

::grpc::Status DlpService::Stub::GetInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest& request, ::google::privacy::dlp::v2::InspectTemplate* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetInspectTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>* DlpService::Stub::AsyncGetInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::InspectTemplate>::Create(channel_.get(), cq, rpcmethod_GetInspectTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::InspectTemplate>* DlpService::Stub::PrepareAsyncGetInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::InspectTemplate>::Create(channel_.get(), cq, rpcmethod_GetInspectTemplate_, context, request, false);
}

::grpc::Status DlpService::Stub::ListInspectTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest& request, ::google::privacy::dlp::v2::ListInspectTemplatesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListInspectTemplates_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>* DlpService::Stub::AsyncListInspectTemplatesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>::Create(channel_.get(), cq, rpcmethod_ListInspectTemplates_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>* DlpService::Stub::PrepareAsyncListInspectTemplatesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ListInspectTemplatesResponse>::Create(channel_.get(), cq, rpcmethod_ListInspectTemplates_, context, request, false);
}

::grpc::Status DlpService::Stub::DeleteInspectTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteInspectTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DlpService::Stub::AsyncDeleteInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteInspectTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DlpService::Stub::PrepareAsyncDeleteInspectTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteInspectTemplate_, context, request, false);
}

::grpc::Status DlpService::Stub::CreateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest& request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateDeidentifyTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>* DlpService::Stub::AsyncCreateDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::DeidentifyTemplate>::Create(channel_.get(), cq, rpcmethod_CreateDeidentifyTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>* DlpService::Stub::PrepareAsyncCreateDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::DeidentifyTemplate>::Create(channel_.get(), cq, rpcmethod_CreateDeidentifyTemplate_, context, request, false);
}

::grpc::Status DlpService::Stub::UpdateDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest& request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateDeidentifyTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>* DlpService::Stub::AsyncUpdateDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::DeidentifyTemplate>::Create(channel_.get(), cq, rpcmethod_UpdateDeidentifyTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>* DlpService::Stub::PrepareAsyncUpdateDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::DeidentifyTemplate>::Create(channel_.get(), cq, rpcmethod_UpdateDeidentifyTemplate_, context, request, false);
}

::grpc::Status DlpService::Stub::GetDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest& request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetDeidentifyTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>* DlpService::Stub::AsyncGetDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::DeidentifyTemplate>::Create(channel_.get(), cq, rpcmethod_GetDeidentifyTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DeidentifyTemplate>* DlpService::Stub::PrepareAsyncGetDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::DeidentifyTemplate>::Create(channel_.get(), cq, rpcmethod_GetDeidentifyTemplate_, context, request, false);
}

::grpc::Status DlpService::Stub::ListDeidentifyTemplates(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest& request, ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListDeidentifyTemplates_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>* DlpService::Stub::AsyncListDeidentifyTemplatesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>::Create(channel_.get(), cq, rpcmethod_ListDeidentifyTemplates_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>* DlpService::Stub::PrepareAsyncListDeidentifyTemplatesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>::Create(channel_.get(), cq, rpcmethod_ListDeidentifyTemplates_, context, request, false);
}

::grpc::Status DlpService::Stub::DeleteDeidentifyTemplate(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteDeidentifyTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DlpService::Stub::AsyncDeleteDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteDeidentifyTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DlpService::Stub::PrepareAsyncDeleteDeidentifyTemplateRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteDeidentifyTemplate_, context, request, false);
}

::grpc::Status DlpService::Stub::CreateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest& request, ::google::privacy::dlp::v2::JobTrigger* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateJobTrigger_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>* DlpService::Stub::AsyncCreateJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::JobTrigger>::Create(channel_.get(), cq, rpcmethod_CreateJobTrigger_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>* DlpService::Stub::PrepareAsyncCreateJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::JobTrigger>::Create(channel_.get(), cq, rpcmethod_CreateJobTrigger_, context, request, false);
}

::grpc::Status DlpService::Stub::UpdateJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest& request, ::google::privacy::dlp::v2::JobTrigger* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateJobTrigger_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>* DlpService::Stub::AsyncUpdateJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::JobTrigger>::Create(channel_.get(), cq, rpcmethod_UpdateJobTrigger_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>* DlpService::Stub::PrepareAsyncUpdateJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::JobTrigger>::Create(channel_.get(), cq, rpcmethod_UpdateJobTrigger_, context, request, false);
}

::grpc::Status DlpService::Stub::GetJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest& request, ::google::privacy::dlp::v2::JobTrigger* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetJobTrigger_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>* DlpService::Stub::AsyncGetJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::JobTrigger>::Create(channel_.get(), cq, rpcmethod_GetJobTrigger_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::JobTrigger>* DlpService::Stub::PrepareAsyncGetJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::JobTrigger>::Create(channel_.get(), cq, rpcmethod_GetJobTrigger_, context, request, false);
}

::grpc::Status DlpService::Stub::ListJobTriggers(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest& request, ::google::privacy::dlp::v2::ListJobTriggersResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListJobTriggers_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListJobTriggersResponse>* DlpService::Stub::AsyncListJobTriggersRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ListJobTriggersResponse>::Create(channel_.get(), cq, rpcmethod_ListJobTriggers_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListJobTriggersResponse>* DlpService::Stub::PrepareAsyncListJobTriggersRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ListJobTriggersResponse>::Create(channel_.get(), cq, rpcmethod_ListJobTriggers_, context, request, false);
}

::grpc::Status DlpService::Stub::DeleteJobTrigger(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteJobTrigger_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DlpService::Stub::AsyncDeleteJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteJobTrigger_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DlpService::Stub::PrepareAsyncDeleteJobTriggerRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteJobTrigger_, context, request, false);
}

::grpc::Status DlpService::Stub::CreateDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest& request, ::google::privacy::dlp::v2::DlpJob* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateDlpJob_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>* DlpService::Stub::AsyncCreateDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::DlpJob>::Create(channel_.get(), cq, rpcmethod_CreateDlpJob_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>* DlpService::Stub::PrepareAsyncCreateDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::DlpJob>::Create(channel_.get(), cq, rpcmethod_CreateDlpJob_, context, request, false);
}

::grpc::Status DlpService::Stub::ListDlpJobs(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest& request, ::google::privacy::dlp::v2::ListDlpJobsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListDlpJobs_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDlpJobsResponse>* DlpService::Stub::AsyncListDlpJobsRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ListDlpJobsResponse>::Create(channel_.get(), cq, rpcmethod_ListDlpJobs_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListDlpJobsResponse>* DlpService::Stub::PrepareAsyncListDlpJobsRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ListDlpJobsResponse>::Create(channel_.get(), cq, rpcmethod_ListDlpJobs_, context, request, false);
}

::grpc::Status DlpService::Stub::GetDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest& request, ::google::privacy::dlp::v2::DlpJob* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetDlpJob_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>* DlpService::Stub::AsyncGetDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::DlpJob>::Create(channel_.get(), cq, rpcmethod_GetDlpJob_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::DlpJob>* DlpService::Stub::PrepareAsyncGetDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::DlpJob>::Create(channel_.get(), cq, rpcmethod_GetDlpJob_, context, request, false);
}

::grpc::Status DlpService::Stub::DeleteDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteDlpJob_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DlpService::Stub::AsyncDeleteDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteDlpJob_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DlpService::Stub::PrepareAsyncDeleteDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteDlpJob_, context, request, false);
}

::grpc::Status DlpService::Stub::CancelDlpJob(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CancelDlpJob_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DlpService::Stub::AsyncCancelDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_CancelDlpJob_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DlpService::Stub::PrepareAsyncCancelDlpJobRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_CancelDlpJob_, context, request, false);
}

::grpc::Status DlpService::Stub::CreateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest& request, ::google::privacy::dlp::v2::StoredInfoType* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateStoredInfoType_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>* DlpService::Stub::AsyncCreateStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::StoredInfoType>::Create(channel_.get(), cq, rpcmethod_CreateStoredInfoType_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>* DlpService::Stub::PrepareAsyncCreateStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::StoredInfoType>::Create(channel_.get(), cq, rpcmethod_CreateStoredInfoType_, context, request, false);
}

::grpc::Status DlpService::Stub::UpdateStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest& request, ::google::privacy::dlp::v2::StoredInfoType* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateStoredInfoType_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>* DlpService::Stub::AsyncUpdateStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::StoredInfoType>::Create(channel_.get(), cq, rpcmethod_UpdateStoredInfoType_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>* DlpService::Stub::PrepareAsyncUpdateStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::StoredInfoType>::Create(channel_.get(), cq, rpcmethod_UpdateStoredInfoType_, context, request, false);
}

::grpc::Status DlpService::Stub::GetStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest& request, ::google::privacy::dlp::v2::StoredInfoType* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetStoredInfoType_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>* DlpService::Stub::AsyncGetStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::StoredInfoType>::Create(channel_.get(), cq, rpcmethod_GetStoredInfoType_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::StoredInfoType>* DlpService::Stub::PrepareAsyncGetStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::StoredInfoType>::Create(channel_.get(), cq, rpcmethod_GetStoredInfoType_, context, request, false);
}

::grpc::Status DlpService::Stub::ListStoredInfoTypes(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest& request, ::google::privacy::dlp::v2::ListStoredInfoTypesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListStoredInfoTypes_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>* DlpService::Stub::AsyncListStoredInfoTypesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>::Create(channel_.get(), cq, rpcmethod_ListStoredInfoTypes_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>* DlpService::Stub::PrepareAsyncListStoredInfoTypesRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>::Create(channel_.get(), cq, rpcmethod_ListStoredInfoTypes_, context, request, false);
}

::grpc::Status DlpService::Stub::DeleteStoredInfoType(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteStoredInfoType_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DlpService::Stub::AsyncDeleteStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteStoredInfoType_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DlpService::Stub::PrepareAsyncDeleteStoredInfoTypeRaw(::grpc::ClientContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteStoredInfoType_, context, request, false);
}

DlpService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::InspectContentRequest, ::google::privacy::dlp::v2::InspectContentResponse>(
          std::mem_fn(&DlpService::Service::InspectContent), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::RedactImageRequest, ::google::privacy::dlp::v2::RedactImageResponse>(
          std::mem_fn(&DlpService::Service::RedactImage), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::DeidentifyContentRequest, ::google::privacy::dlp::v2::DeidentifyContentResponse>(
          std::mem_fn(&DlpService::Service::DeidentifyContent), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::ReidentifyContentRequest, ::google::privacy::dlp::v2::ReidentifyContentResponse>(
          std::mem_fn(&DlpService::Service::ReidentifyContent), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::ListInfoTypesRequest, ::google::privacy::dlp::v2::ListInfoTypesResponse>(
          std::mem_fn(&DlpService::Service::ListInfoTypes), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::CreateInspectTemplateRequest, ::google::privacy::dlp::v2::InspectTemplate>(
          std::mem_fn(&DlpService::Service::CreateInspectTemplate), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::UpdateInspectTemplateRequest, ::google::privacy::dlp::v2::InspectTemplate>(
          std::mem_fn(&DlpService::Service::UpdateInspectTemplate), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::GetInspectTemplateRequest, ::google::privacy::dlp::v2::InspectTemplate>(
          std::mem_fn(&DlpService::Service::GetInspectTemplate), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::ListInspectTemplatesRequest, ::google::privacy::dlp::v2::ListInspectTemplatesResponse>(
          std::mem_fn(&DlpService::Service::ListInspectTemplates), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::DeleteInspectTemplateRequest, ::google::protobuf::Empty>(
          std::mem_fn(&DlpService::Service::DeleteInspectTemplate), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest, ::google::privacy::dlp::v2::DeidentifyTemplate>(
          std::mem_fn(&DlpService::Service::CreateDeidentifyTemplate), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest, ::google::privacy::dlp::v2::DeidentifyTemplate>(
          std::mem_fn(&DlpService::Service::UpdateDeidentifyTemplate), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest, ::google::privacy::dlp::v2::DeidentifyTemplate>(
          std::mem_fn(&DlpService::Service::GetDeidentifyTemplate), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest, ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse>(
          std::mem_fn(&DlpService::Service::ListDeidentifyTemplates), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest, ::google::protobuf::Empty>(
          std::mem_fn(&DlpService::Service::DeleteDeidentifyTemplate), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::CreateJobTriggerRequest, ::google::privacy::dlp::v2::JobTrigger>(
          std::mem_fn(&DlpService::Service::CreateJobTrigger), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[16],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::UpdateJobTriggerRequest, ::google::privacy::dlp::v2::JobTrigger>(
          std::mem_fn(&DlpService::Service::UpdateJobTrigger), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[17],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::GetJobTriggerRequest, ::google::privacy::dlp::v2::JobTrigger>(
          std::mem_fn(&DlpService::Service::GetJobTrigger), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[18],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::ListJobTriggersRequest, ::google::privacy::dlp::v2::ListJobTriggersResponse>(
          std::mem_fn(&DlpService::Service::ListJobTriggers), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[19],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::DeleteJobTriggerRequest, ::google::protobuf::Empty>(
          std::mem_fn(&DlpService::Service::DeleteJobTrigger), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[20],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::CreateDlpJobRequest, ::google::privacy::dlp::v2::DlpJob>(
          std::mem_fn(&DlpService::Service::CreateDlpJob), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[21],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::ListDlpJobsRequest, ::google::privacy::dlp::v2::ListDlpJobsResponse>(
          std::mem_fn(&DlpService::Service::ListDlpJobs), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[22],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::GetDlpJobRequest, ::google::privacy::dlp::v2::DlpJob>(
          std::mem_fn(&DlpService::Service::GetDlpJob), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[23],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::DeleteDlpJobRequest, ::google::protobuf::Empty>(
          std::mem_fn(&DlpService::Service::DeleteDlpJob), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[24],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::CancelDlpJobRequest, ::google::protobuf::Empty>(
          std::mem_fn(&DlpService::Service::CancelDlpJob), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[25],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest, ::google::privacy::dlp::v2::StoredInfoType>(
          std::mem_fn(&DlpService::Service::CreateStoredInfoType), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[26],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest, ::google::privacy::dlp::v2::StoredInfoType>(
          std::mem_fn(&DlpService::Service::UpdateStoredInfoType), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[27],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::GetStoredInfoTypeRequest, ::google::privacy::dlp::v2::StoredInfoType>(
          std::mem_fn(&DlpService::Service::GetStoredInfoType), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[28],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::ListStoredInfoTypesRequest, ::google::privacy::dlp::v2::ListStoredInfoTypesResponse>(
          std::mem_fn(&DlpService::Service::ListStoredInfoTypes), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DlpService_method_names[29],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DlpService::Service, ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest, ::google::protobuf::Empty>(
          std::mem_fn(&DlpService::Service::DeleteStoredInfoType), this)));
}

DlpService::Service::~Service() {
}

::grpc::Status DlpService::Service::InspectContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::InspectContentRequest* request, ::google::privacy::dlp::v2::InspectContentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::RedactImage(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::RedactImageRequest* request, ::google::privacy::dlp::v2::RedactImageResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::DeidentifyContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeidentifyContentRequest* request, ::google::privacy::dlp::v2::DeidentifyContentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::ReidentifyContent(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ReidentifyContentRequest* request, ::google::privacy::dlp::v2::ReidentifyContentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::ListInfoTypes(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListInfoTypesRequest* request, ::google::privacy::dlp::v2::ListInfoTypesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::CreateInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::UpdateInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::GetInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetInspectTemplateRequest* request, ::google::privacy::dlp::v2::InspectTemplate* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::ListInspectTemplates(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListInspectTemplatesRequest* request, ::google::privacy::dlp::v2::ListInspectTemplatesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::DeleteInspectTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteInspectTemplateRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::CreateDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::UpdateDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::GetDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetDeidentifyTemplateRequest* request, ::google::privacy::dlp::v2::DeidentifyTemplate* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::ListDeidentifyTemplates(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListDeidentifyTemplatesRequest* request, ::google::privacy::dlp::v2::ListDeidentifyTemplatesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::DeleteDeidentifyTemplate(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteDeidentifyTemplateRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::CreateJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::UpdateJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::GetJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetJobTriggerRequest* request, ::google::privacy::dlp::v2::JobTrigger* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::ListJobTriggers(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListJobTriggersRequest* request, ::google::privacy::dlp::v2::ListJobTriggersResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::DeleteJobTrigger(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteJobTriggerRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::CreateDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateDlpJobRequest* request, ::google::privacy::dlp::v2::DlpJob* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::ListDlpJobs(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListDlpJobsRequest* request, ::google::privacy::dlp::v2::ListDlpJobsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::GetDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetDlpJobRequest* request, ::google::privacy::dlp::v2::DlpJob* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::DeleteDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteDlpJobRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::CancelDlpJob(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CancelDlpJobRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::CreateStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::CreateStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::UpdateStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::UpdateStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::GetStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::GetStoredInfoTypeRequest* request, ::google::privacy::dlp::v2::StoredInfoType* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::ListStoredInfoTypes(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::ListStoredInfoTypesRequest* request, ::google::privacy::dlp::v2::ListStoredInfoTypesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DlpService::Service::DeleteStoredInfoType(::grpc::ServerContext* context, const ::google::privacy::dlp::v2::DeleteStoredInfoTypeRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace privacy
}  // namespace dlp
}  // namespace v2

