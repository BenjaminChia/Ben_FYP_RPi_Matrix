// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/cluster/v1/bigtable_cluster_service_messages.proto

#include "google/bigtable/admin/cluster/v1/bigtable_cluster_service_messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Zone;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Cluster;
}  // namespace protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fdata_2eproto
namespace protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CreateClusterRequest;
}  // namespace protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace bigtable {
namespace admin {
namespace cluster {
namespace v1 {
class ListZonesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListZonesRequest>
      _instance;
} _ListZonesRequest_default_instance_;
class ListZonesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListZonesResponse>
      _instance;
} _ListZonesResponse_default_instance_;
class GetClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetClusterRequest>
      _instance;
} _GetClusterRequest_default_instance_;
class ListClustersRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListClustersRequest>
      _instance;
} _ListClustersRequest_default_instance_;
class ListClustersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListClustersResponse>
      _instance;
} _ListClustersResponse_default_instance_;
class CreateClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateClusterRequest>
      _instance;
} _CreateClusterRequest_default_instance_;
class CreateClusterMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateClusterMetadata>
      _instance;
} _CreateClusterMetadata_default_instance_;
class UpdateClusterMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateClusterMetadata>
      _instance;
} _UpdateClusterMetadata_default_instance_;
class DeleteClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteClusterRequest>
      _instance;
} _DeleteClusterRequest_default_instance_;
class UndeleteClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UndeleteClusterRequest>
      _instance;
} _UndeleteClusterRequest_default_instance_;
class UndeleteClusterMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UndeleteClusterMetadata>
      _instance;
} _UndeleteClusterMetadata_default_instance_;
class V2OperationMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<V2OperationMetadata>
      _instance;
} _V2OperationMetadata_default_instance_;
}  // namespace v1
}  // namespace cluster
}  // namespace admin
}  // namespace bigtable
}  // namespace google
namespace protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto {
static void InitDefaultsListZonesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::cluster::v1::_ListZonesRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::cluster::v1::ListZonesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::cluster::v1::ListZonesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListZonesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListZonesRequest}, {}};

static void InitDefaultsListZonesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::cluster::v1::_ListZonesResponse_default_instance_;
    new (ptr) ::google::bigtable::admin::cluster::v1::ListZonesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::cluster::v1::ListZonesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListZonesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListZonesResponse}, {
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fdata_2eproto::scc_info_Zone.base,}};

static void InitDefaultsGetClusterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::cluster::v1::_GetClusterRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::cluster::v1::GetClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::cluster::v1::GetClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetClusterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetClusterRequest}, {}};

static void InitDefaultsListClustersRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::cluster::v1::_ListClustersRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::cluster::v1::ListClustersRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::cluster::v1::ListClustersRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListClustersRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListClustersRequest}, {}};

static void InitDefaultsListClustersResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::cluster::v1::_ListClustersResponse_default_instance_;
    new (ptr) ::google::bigtable::admin::cluster::v1::ListClustersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::cluster::v1::ListClustersResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ListClustersResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsListClustersResponse}, {
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fdata_2eproto::scc_info_Cluster.base,
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fdata_2eproto::scc_info_Zone.base,}};

static void InitDefaultsCreateClusterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::cluster::v1::_CreateClusterRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::cluster::v1::CreateClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::cluster::v1::CreateClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateClusterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateClusterRequest}, {
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fdata_2eproto::scc_info_Cluster.base,}};

static void InitDefaultsCreateClusterMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::cluster::v1::_CreateClusterMetadata_default_instance_;
    new (ptr) ::google::bigtable::admin::cluster::v1::CreateClusterMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::cluster::v1::CreateClusterMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CreateClusterMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCreateClusterMetadata}, {
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_CreateClusterRequest.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsUpdateClusterMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::cluster::v1::_UpdateClusterMetadata_default_instance_;
    new (ptr) ::google::bigtable::admin::cluster::v1::UpdateClusterMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::cluster::v1::UpdateClusterMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateClusterMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateClusterMetadata}, {
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fdata_2eproto::scc_info_Cluster.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsDeleteClusterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::cluster::v1::_DeleteClusterRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::cluster::v1::DeleteClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::cluster::v1::DeleteClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteClusterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteClusterRequest}, {}};

static void InitDefaultsUndeleteClusterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::cluster::v1::_UndeleteClusterRequest_default_instance_;
    new (ptr) ::google::bigtable::admin::cluster::v1::UndeleteClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::cluster::v1::UndeleteClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UndeleteClusterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUndeleteClusterRequest}, {}};

static void InitDefaultsUndeleteClusterMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::cluster::v1::_UndeleteClusterMetadata_default_instance_;
    new (ptr) ::google::bigtable::admin::cluster::v1::UndeleteClusterMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::cluster::v1::UndeleteClusterMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UndeleteClusterMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUndeleteClusterMetadata}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsV2OperationMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::cluster::v1::_V2OperationMetadata_default_instance_;
    new (ptr) ::google::bigtable::admin::cluster::v1::V2OperationMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::cluster::v1::V2OperationMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_V2OperationMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsV2OperationMetadata}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ListZonesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListZonesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetClusterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListClustersRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListClustersResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateClusterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateClusterMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateClusterMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteClusterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UndeleteClusterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UndeleteClusterMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_V2OperationMetadata.base);
}

::google::protobuf::Metadata file_level_metadata[12];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::ListZonesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::ListZonesRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::ListZonesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::ListZonesResponse, zones_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::GetClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::GetClusterRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::ListClustersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::ListClustersRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::ListClustersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::ListClustersResponse, clusters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::ListClustersResponse, failed_zones_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::CreateClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::CreateClusterRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::CreateClusterRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::CreateClusterRequest, cluster_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::CreateClusterMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::CreateClusterMetadata, original_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::CreateClusterMetadata, request_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::CreateClusterMetadata, finish_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::UpdateClusterMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::UpdateClusterMetadata, original_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::UpdateClusterMetadata, request_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::UpdateClusterMetadata, cancel_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::UpdateClusterMetadata, finish_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::DeleteClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::DeleteClusterRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::UndeleteClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::UndeleteClusterRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::UndeleteClusterMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::UndeleteClusterMetadata, request_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::UndeleteClusterMetadata, finish_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::cluster::v1::V2OperationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::bigtable::admin::cluster::v1::ListZonesRequest)},
  { 6, -1, sizeof(::google::bigtable::admin::cluster::v1::ListZonesResponse)},
  { 12, -1, sizeof(::google::bigtable::admin::cluster::v1::GetClusterRequest)},
  { 18, -1, sizeof(::google::bigtable::admin::cluster::v1::ListClustersRequest)},
  { 24, -1, sizeof(::google::bigtable::admin::cluster::v1::ListClustersResponse)},
  { 31, -1, sizeof(::google::bigtable::admin::cluster::v1::CreateClusterRequest)},
  { 39, -1, sizeof(::google::bigtable::admin::cluster::v1::CreateClusterMetadata)},
  { 47, -1, sizeof(::google::bigtable::admin::cluster::v1::UpdateClusterMetadata)},
  { 56, -1, sizeof(::google::bigtable::admin::cluster::v1::DeleteClusterRequest)},
  { 62, -1, sizeof(::google::bigtable::admin::cluster::v1::UndeleteClusterRequest)},
  { 68, -1, sizeof(::google::bigtable::admin::cluster::v1::UndeleteClusterMetadata)},
  { 75, -1, sizeof(::google::bigtable::admin::cluster::v1::V2OperationMetadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::cluster::v1::_ListZonesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::cluster::v1::_ListZonesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::cluster::v1::_GetClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::cluster::v1::_ListClustersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::cluster::v1::_ListClustersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::cluster::v1::_CreateClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::cluster::v1::_CreateClusterMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::cluster::v1::_UpdateClusterMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::cluster::v1::_DeleteClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::cluster::v1::_UndeleteClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::cluster::v1::_UndeleteClusterMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::cluster::v1::_V2OperationMetadata_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/bigtable/admin/cluster/v1/bigtable_cluster_service_messages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nHgoogle/bigtable/admin/cluster/v1/bigta"
      "ble_cluster_service_messages.proto\022 goog"
      "le.bigtable.admin.cluster.v1\032<google/big"
      "table/admin/cluster/v1/bigtable_cluster_"
      "data.proto\032\037google/protobuf/timestamp.pr"
      "oto\" \n\020ListZonesRequest\022\014\n\004name\030\001 \001(\t\"J\n"
      "\021ListZonesResponse\0225\n\005zones\030\001 \003(\0132&.goog"
      "le.bigtable.admin.cluster.v1.Zone\"!\n\021Get"
      "ClusterRequest\022\014\n\004name\030\001 \001(\t\"#\n\023ListClus"
      "tersRequest\022\014\n\004name\030\001 \001(\t\"\221\001\n\024ListCluste"
      "rsResponse\022;\n\010clusters\030\001 \003(\0132).google.bi"
      "gtable.admin.cluster.v1.Cluster\022<\n\014faile"
      "d_zones\030\002 \003(\0132&.google.bigtable.admin.cl"
      "uster.v1.Zone\"t\n\024CreateClusterRequest\022\014\n"
      "\004name\030\001 \001(\t\022\022\n\ncluster_id\030\002 \001(\t\022:\n\007clust"
      "er\030\003 \001(\0132).google.bigtable.admin.cluster"
      ".v1.Cluster\"\314\001\n\025CreateClusterMetadata\022P\n"
      "\020original_request\030\001 \001(\01326.google.bigtabl"
      "e.admin.cluster.v1.CreateClusterRequest\022"
      "0\n\014request_time\030\002 \001(\0132\032.google.protobuf."
      "Timestamp\022/\n\013finish_time\030\003 \001(\0132\032.google."
      "protobuf.Timestamp\"\360\001\n\025UpdateClusterMeta"
      "data\022C\n\020original_request\030\001 \001(\0132).google."
      "bigtable.admin.cluster.v1.Cluster\0220\n\014req"
      "uest_time\030\002 \001(\0132\032.google.protobuf.Timest"
      "amp\022/\n\013cancel_time\030\003 \001(\0132\032.google.protob"
      "uf.Timestamp\022/\n\013finish_time\030\004 \001(\0132\032.goog"
      "le.protobuf.Timestamp\"$\n\024DeleteClusterRe"
      "quest\022\014\n\004name\030\001 \001(\t\"&\n\026UndeleteClusterRe"
      "quest\022\014\n\004name\030\001 \001(\t\"|\n\027UndeleteClusterMe"
      "tadata\0220\n\014request_time\030\001 \001(\0132\032.google.pr"
      "otobuf.Timestamp\022/\n\013finish_time\030\002 \001(\0132\032."
      "google.protobuf.Timestamp\"\025\n\023V2Operation"
      "MetadataB\226\001\n$com.google.bigtable.admin.c"
      "luster.v1B#BigtableClusterServiceMessage"
      "sProtoP\001ZGgoogle.golang.org/genproto/goo"
      "gleapis/bigtable/admin/cluster/v1;cluste"
      "rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1489);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/bigtable/admin/cluster/v1/bigtable_cluster_service_messages.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fdata_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto
namespace google {
namespace bigtable {
namespace admin {
namespace cluster {
namespace v1 {

// ===================================================================

void ListZonesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListZonesRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListZonesRequest::ListZonesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_ListZonesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.cluster.v1.ListZonesRequest)
}
ListZonesRequest::ListZonesRequest(const ListZonesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.cluster.v1.ListZonesRequest)
}

void ListZonesRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListZonesRequest::~ListZonesRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.cluster.v1.ListZonesRequest)
  SharedDtor();
}

void ListZonesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListZonesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListZonesRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListZonesRequest& ListZonesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_ListZonesRequest.base);
  return *internal_default_instance();
}


void ListZonesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.cluster.v1.ListZonesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListZonesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.cluster.v1.ListZonesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.cluster.v1.ListZonesRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.cluster.v1.ListZonesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.cluster.v1.ListZonesRequest)
  return false;
#undef DO_
}

void ListZonesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.cluster.v1.ListZonesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.ListZonesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.cluster.v1.ListZonesRequest)
}

::google::protobuf::uint8* ListZonesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.cluster.v1.ListZonesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.ListZonesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.cluster.v1.ListZonesRequest)
  return target;
}

size_t ListZonesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.cluster.v1.ListZonesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListZonesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.cluster.v1.ListZonesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListZonesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListZonesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.cluster.v1.ListZonesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.cluster.v1.ListZonesRequest)
    MergeFrom(*source);
  }
}

void ListZonesRequest::MergeFrom(const ListZonesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.cluster.v1.ListZonesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ListZonesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.cluster.v1.ListZonesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListZonesRequest::CopyFrom(const ListZonesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.cluster.v1.ListZonesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListZonesRequest::IsInitialized() const {
  return true;
}

void ListZonesRequest::Swap(ListZonesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListZonesRequest::InternalSwap(ListZonesRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListZonesRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListZonesResponse::InitAsDefaultInstance() {
}
void ListZonesResponse::clear_zones() {
  zones_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListZonesResponse::kZonesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListZonesResponse::ListZonesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_ListZonesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.cluster.v1.ListZonesResponse)
}
ListZonesResponse::ListZonesResponse(const ListZonesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      zones_(from.zones_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.cluster.v1.ListZonesResponse)
}

void ListZonesResponse::SharedCtor() {
}

ListZonesResponse::~ListZonesResponse() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.cluster.v1.ListZonesResponse)
  SharedDtor();
}

void ListZonesResponse::SharedDtor() {
}

void ListZonesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListZonesResponse::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListZonesResponse& ListZonesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_ListZonesResponse.base);
  return *internal_default_instance();
}


void ListZonesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.cluster.v1.ListZonesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  zones_.Clear();
  _internal_metadata_.Clear();
}

bool ListZonesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.cluster.v1.ListZonesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.bigtable.admin.cluster.v1.Zone zones = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_zones()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.cluster.v1.ListZonesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.cluster.v1.ListZonesResponse)
  return false;
#undef DO_
}

void ListZonesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.cluster.v1.ListZonesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.admin.cluster.v1.Zone zones = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->zones_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->zones(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.cluster.v1.ListZonesResponse)
}

::google::protobuf::uint8* ListZonesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.cluster.v1.ListZonesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.admin.cluster.v1.Zone zones = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->zones_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->zones(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.cluster.v1.ListZonesResponse)
  return target;
}

size_t ListZonesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.cluster.v1.ListZonesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.admin.cluster.v1.Zone zones = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->zones_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->zones(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListZonesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.cluster.v1.ListZonesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListZonesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListZonesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.cluster.v1.ListZonesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.cluster.v1.ListZonesResponse)
    MergeFrom(*source);
  }
}

void ListZonesResponse::MergeFrom(const ListZonesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.cluster.v1.ListZonesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  zones_.MergeFrom(from.zones_);
}

void ListZonesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.cluster.v1.ListZonesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListZonesResponse::CopyFrom(const ListZonesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.cluster.v1.ListZonesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListZonesResponse::IsInitialized() const {
  return true;
}

void ListZonesResponse::Swap(ListZonesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListZonesResponse::InternalSwap(ListZonesResponse* other) {
  using std::swap;
  CastToBase(&zones_)->InternalSwap(CastToBase(&other->zones_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListZonesResponse::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetClusterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetClusterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetClusterRequest::GetClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_GetClusterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.cluster.v1.GetClusterRequest)
}
GetClusterRequest::GetClusterRequest(const GetClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.cluster.v1.GetClusterRequest)
}

void GetClusterRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetClusterRequest::~GetClusterRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.cluster.v1.GetClusterRequest)
  SharedDtor();
}

void GetClusterRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetClusterRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetClusterRequest& GetClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_GetClusterRequest.base);
  return *internal_default_instance();
}


void GetClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.cluster.v1.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.cluster.v1.GetClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.cluster.v1.GetClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.cluster.v1.GetClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.cluster.v1.GetClusterRequest)
  return false;
#undef DO_
}

void GetClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.cluster.v1.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.GetClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.cluster.v1.GetClusterRequest)
}

::google::protobuf::uint8* GetClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.cluster.v1.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.GetClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.cluster.v1.GetClusterRequest)
  return target;
}

size_t GetClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.cluster.v1.GetClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.cluster.v1.GetClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.cluster.v1.GetClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.cluster.v1.GetClusterRequest)
    MergeFrom(*source);
  }
}

void GetClusterRequest::MergeFrom(const GetClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.cluster.v1.GetClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.cluster.v1.GetClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterRequest::CopyFrom(const GetClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.cluster.v1.GetClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterRequest::IsInitialized() const {
  return true;
}

void GetClusterRequest::Swap(GetClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetClusterRequest::InternalSwap(GetClusterRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetClusterRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListClustersRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClustersRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClustersRequest::ListClustersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_ListClustersRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.cluster.v1.ListClustersRequest)
}
ListClustersRequest::ListClustersRequest(const ListClustersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.cluster.v1.ListClustersRequest)
}

void ListClustersRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListClustersRequest::~ListClustersRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.cluster.v1.ListClustersRequest)
  SharedDtor();
}

void ListClustersRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListClustersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListClustersRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListClustersRequest& ListClustersRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_ListClustersRequest.base);
  return *internal_default_instance();
}


void ListClustersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.cluster.v1.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListClustersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.cluster.v1.ListClustersRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.cluster.v1.ListClustersRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.cluster.v1.ListClustersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.cluster.v1.ListClustersRequest)
  return false;
#undef DO_
}

void ListClustersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.cluster.v1.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.ListClustersRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.cluster.v1.ListClustersRequest)
}

::google::protobuf::uint8* ListClustersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.cluster.v1.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.ListClustersRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.cluster.v1.ListClustersRequest)
  return target;
}

size_t ListClustersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.cluster.v1.ListClustersRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListClustersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.cluster.v1.ListClustersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClustersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListClustersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.cluster.v1.ListClustersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.cluster.v1.ListClustersRequest)
    MergeFrom(*source);
  }
}

void ListClustersRequest::MergeFrom(const ListClustersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.cluster.v1.ListClustersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ListClustersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.cluster.v1.ListClustersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClustersRequest::CopyFrom(const ListClustersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.cluster.v1.ListClustersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClustersRequest::IsInitialized() const {
  return true;
}

void ListClustersRequest::Swap(ListClustersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClustersRequest::InternalSwap(ListClustersRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListClustersRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListClustersResponse::InitAsDefaultInstance() {
}
void ListClustersResponse::clear_clusters() {
  clusters_.Clear();
}
void ListClustersResponse::clear_failed_zones() {
  failed_zones_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClustersResponse::kClustersFieldNumber;
const int ListClustersResponse::kFailedZonesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClustersResponse::ListClustersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_ListClustersResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.cluster.v1.ListClustersResponse)
}
ListClustersResponse::ListClustersResponse(const ListClustersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clusters_(from.clusters_),
      failed_zones_(from.failed_zones_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.cluster.v1.ListClustersResponse)
}

void ListClustersResponse::SharedCtor() {
}

ListClustersResponse::~ListClustersResponse() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.cluster.v1.ListClustersResponse)
  SharedDtor();
}

void ListClustersResponse::SharedDtor() {
}

void ListClustersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListClustersResponse::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListClustersResponse& ListClustersResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_ListClustersResponse.base);
  return *internal_default_instance();
}


void ListClustersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.cluster.v1.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clusters_.Clear();
  failed_zones_.Clear();
  _internal_metadata_.Clear();
}

bool ListClustersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.cluster.v1.ListClustersResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.bigtable.admin.cluster.v1.Cluster clusters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_clusters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.bigtable.admin.cluster.v1.Zone failed_zones = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_failed_zones()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.cluster.v1.ListClustersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.cluster.v1.ListClustersResponse)
  return false;
#undef DO_
}

void ListClustersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.cluster.v1.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.admin.cluster.v1.Cluster clusters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->clusters(static_cast<int>(i)),
      output);
  }

  // repeated .google.bigtable.admin.cluster.v1.Zone failed_zones = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->failed_zones_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->failed_zones(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.cluster.v1.ListClustersResponse)
}

::google::protobuf::uint8* ListClustersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.cluster.v1.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.admin.cluster.v1.Cluster clusters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->clusters(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.bigtable.admin.cluster.v1.Zone failed_zones = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->failed_zones_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->failed_zones(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.cluster.v1.ListClustersResponse)
  return target;
}

size_t ListClustersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.cluster.v1.ListClustersResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.bigtable.admin.cluster.v1.Cluster clusters = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->clusters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->clusters(static_cast<int>(i)));
    }
  }

  // repeated .google.bigtable.admin.cluster.v1.Zone failed_zones = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->failed_zones_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->failed_zones(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListClustersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.cluster.v1.ListClustersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClustersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListClustersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.cluster.v1.ListClustersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.cluster.v1.ListClustersResponse)
    MergeFrom(*source);
  }
}

void ListClustersResponse::MergeFrom(const ListClustersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.cluster.v1.ListClustersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clusters_.MergeFrom(from.clusters_);
  failed_zones_.MergeFrom(from.failed_zones_);
}

void ListClustersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.cluster.v1.ListClustersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClustersResponse::CopyFrom(const ListClustersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.cluster.v1.ListClustersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClustersResponse::IsInitialized() const {
  return true;
}

void ListClustersResponse::Swap(ListClustersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClustersResponse::InternalSwap(ListClustersResponse* other) {
  using std::swap;
  CastToBase(&clusters_)->InternalSwap(CastToBase(&other->clusters_));
  CastToBase(&failed_zones_)->InternalSwap(CastToBase(&other->failed_zones_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListClustersResponse::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateClusterRequest::InitAsDefaultInstance() {
  ::google::bigtable::admin::cluster::v1::_CreateClusterRequest_default_instance_._instance.get_mutable()->cluster_ = const_cast< ::google::bigtable::admin::cluster::v1::Cluster*>(
      ::google::bigtable::admin::cluster::v1::Cluster::internal_default_instance());
}
void CreateClusterRequest::clear_cluster() {
  if (GetArenaNoVirtual() == NULL && cluster_ != NULL) {
    delete cluster_;
  }
  cluster_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateClusterRequest::kNameFieldNumber;
const int CreateClusterRequest::kClusterIdFieldNumber;
const int CreateClusterRequest::kClusterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateClusterRequest::CreateClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_CreateClusterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.cluster.v1.CreateClusterRequest)
}
CreateClusterRequest::CreateClusterRequest(const CreateClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_cluster()) {
    cluster_ = new ::google::bigtable::admin::cluster::v1::Cluster(*from.cluster_);
  } else {
    cluster_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.cluster.v1.CreateClusterRequest)
}

void CreateClusterRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ = NULL;
}

CreateClusterRequest::~CreateClusterRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.cluster.v1.CreateClusterRequest)
  SharedDtor();
}

void CreateClusterRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cluster_;
}

void CreateClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateClusterRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateClusterRequest& CreateClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_CreateClusterRequest.base);
  return *internal_default_instance();
}


void CreateClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.cluster.v1.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && cluster_ != NULL) {
    delete cluster_;
  }
  cluster_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.cluster.v1.CreateClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.cluster.v1.CreateClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.cluster.v1.Cluster cluster = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cluster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.cluster.v1.CreateClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.cluster.v1.CreateClusterRequest)
  return false;
#undef DO_
}

void CreateClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.cluster.v1.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.CreateClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string cluster_id = 2;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster_id(), output);
  }

  // .google.bigtable.admin.cluster.v1.Cluster cluster = 3;
  if (this->has_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_cluster(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.cluster.v1.CreateClusterRequest)
}

::google::protobuf::uint8* CreateClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.cluster.v1.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.CreateClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string cluster_id = 2;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster_id(), target);
  }

  // .google.bigtable.admin.cluster.v1.Cluster cluster = 3;
  if (this->has_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_cluster(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.cluster.v1.CreateClusterRequest)
  return target;
}

size_t CreateClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.cluster.v1.CreateClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string cluster_id = 2;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // .google.bigtable.admin.cluster.v1.Cluster cluster = 3;
  if (this->has_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cluster_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.cluster.v1.CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.cluster.v1.CreateClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.cluster.v1.CreateClusterRequest)
    MergeFrom(*source);
  }
}

void CreateClusterRequest::MergeFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.cluster.v1.CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_cluster()) {
    mutable_cluster()->::google::bigtable::admin::cluster::v1::Cluster::MergeFrom(from.cluster());
  }
}

void CreateClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.cluster.v1.CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateClusterRequest::CopyFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.cluster.v1.CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateClusterRequest::IsInitialized() const {
  return true;
}

void CreateClusterRequest::Swap(CreateClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateClusterRequest::InternalSwap(CreateClusterRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cluster_, other->cluster_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateClusterRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateClusterMetadata::InitAsDefaultInstance() {
  ::google::bigtable::admin::cluster::v1::_CreateClusterMetadata_default_instance_._instance.get_mutable()->original_request_ = const_cast< ::google::bigtable::admin::cluster::v1::CreateClusterRequest*>(
      ::google::bigtable::admin::cluster::v1::CreateClusterRequest::internal_default_instance());
  ::google::bigtable::admin::cluster::v1::_CreateClusterMetadata_default_instance_._instance.get_mutable()->request_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::bigtable::admin::cluster::v1::_CreateClusterMetadata_default_instance_._instance.get_mutable()->finish_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void CreateClusterMetadata::clear_request_time() {
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) {
    delete request_time_;
  }
  request_time_ = NULL;
}
void CreateClusterMetadata::clear_finish_time() {
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) {
    delete finish_time_;
  }
  finish_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateClusterMetadata::kOriginalRequestFieldNumber;
const int CreateClusterMetadata::kRequestTimeFieldNumber;
const int CreateClusterMetadata::kFinishTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateClusterMetadata::CreateClusterMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_CreateClusterMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
}
CreateClusterMetadata::CreateClusterMetadata(const CreateClusterMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_original_request()) {
    original_request_ = new ::google::bigtable::admin::cluster::v1::CreateClusterRequest(*from.original_request_);
  } else {
    original_request_ = NULL;
  }
  if (from.has_request_time()) {
    request_time_ = new ::google::protobuf::Timestamp(*from.request_time_);
  } else {
    request_time_ = NULL;
  }
  if (from.has_finish_time()) {
    finish_time_ = new ::google::protobuf::Timestamp(*from.finish_time_);
  } else {
    finish_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
}

void CreateClusterMetadata::SharedCtor() {
  ::memset(&original_request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finish_time_) -
      reinterpret_cast<char*>(&original_request_)) + sizeof(finish_time_));
}

CreateClusterMetadata::~CreateClusterMetadata() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
  SharedDtor();
}

void CreateClusterMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete original_request_;
  if (this != internal_default_instance()) delete request_time_;
  if (this != internal_default_instance()) delete finish_time_;
}

void CreateClusterMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateClusterMetadata::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateClusterMetadata& CreateClusterMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_CreateClusterMetadata.base);
  return *internal_default_instance();
}


void CreateClusterMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) {
    delete original_request_;
  }
  original_request_ = NULL;
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) {
    delete request_time_;
  }
  request_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) {
    delete finish_time_;
  }
  finish_time_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateClusterMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.bigtable.admin.cluster.v1.CreateClusterRequest original_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_original_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp request_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp finish_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_finish_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
  return false;
#undef DO_
}

void CreateClusterMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.admin.cluster.v1.CreateClusterRequest original_request = 1;
  if (this->has_original_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_original_request(), output);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_request_time(), output);
  }

  // .google.protobuf.Timestamp finish_time = 3;
  if (this->has_finish_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_finish_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
}

::google::protobuf::uint8* CreateClusterMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.admin.cluster.v1.CreateClusterRequest original_request = 1;
  if (this->has_original_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_original_request(), deterministic, target);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_request_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp finish_time = 3;
  if (this->has_finish_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_finish_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
  return target;
}

size_t CreateClusterMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.bigtable.admin.cluster.v1.CreateClusterRequest original_request = 1;
  if (this->has_original_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *original_request_);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_time_);
  }

  // .google.protobuf.Timestamp finish_time = 3;
  if (this->has_finish_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *finish_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateClusterMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateClusterMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateClusterMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
    MergeFrom(*source);
  }
}

void CreateClusterMetadata::MergeFrom(const CreateClusterMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_original_request()) {
    mutable_original_request()->::google::bigtable::admin::cluster::v1::CreateClusterRequest::MergeFrom(from.original_request());
  }
  if (from.has_request_time()) {
    mutable_request_time()->::google::protobuf::Timestamp::MergeFrom(from.request_time());
  }
  if (from.has_finish_time()) {
    mutable_finish_time()->::google::protobuf::Timestamp::MergeFrom(from.finish_time());
  }
}

void CreateClusterMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateClusterMetadata::CopyFrom(const CreateClusterMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateClusterMetadata::IsInitialized() const {
  return true;
}

void CreateClusterMetadata::Swap(CreateClusterMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateClusterMetadata::InternalSwap(CreateClusterMetadata* other) {
  using std::swap;
  swap(original_request_, other->original_request_);
  swap(request_time_, other->request_time_);
  swap(finish_time_, other->finish_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateClusterMetadata::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateClusterMetadata::InitAsDefaultInstance() {
  ::google::bigtable::admin::cluster::v1::_UpdateClusterMetadata_default_instance_._instance.get_mutable()->original_request_ = const_cast< ::google::bigtable::admin::cluster::v1::Cluster*>(
      ::google::bigtable::admin::cluster::v1::Cluster::internal_default_instance());
  ::google::bigtable::admin::cluster::v1::_UpdateClusterMetadata_default_instance_._instance.get_mutable()->request_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::bigtable::admin::cluster::v1::_UpdateClusterMetadata_default_instance_._instance.get_mutable()->cancel_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::bigtable::admin::cluster::v1::_UpdateClusterMetadata_default_instance_._instance.get_mutable()->finish_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void UpdateClusterMetadata::clear_original_request() {
  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) {
    delete original_request_;
  }
  original_request_ = NULL;
}
void UpdateClusterMetadata::clear_request_time() {
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) {
    delete request_time_;
  }
  request_time_ = NULL;
}
void UpdateClusterMetadata::clear_cancel_time() {
  if (GetArenaNoVirtual() == NULL && cancel_time_ != NULL) {
    delete cancel_time_;
  }
  cancel_time_ = NULL;
}
void UpdateClusterMetadata::clear_finish_time() {
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) {
    delete finish_time_;
  }
  finish_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateClusterMetadata::kOriginalRequestFieldNumber;
const int UpdateClusterMetadata::kRequestTimeFieldNumber;
const int UpdateClusterMetadata::kCancelTimeFieldNumber;
const int UpdateClusterMetadata::kFinishTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateClusterMetadata::UpdateClusterMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_UpdateClusterMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
}
UpdateClusterMetadata::UpdateClusterMetadata(const UpdateClusterMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_original_request()) {
    original_request_ = new ::google::bigtable::admin::cluster::v1::Cluster(*from.original_request_);
  } else {
    original_request_ = NULL;
  }
  if (from.has_request_time()) {
    request_time_ = new ::google::protobuf::Timestamp(*from.request_time_);
  } else {
    request_time_ = NULL;
  }
  if (from.has_cancel_time()) {
    cancel_time_ = new ::google::protobuf::Timestamp(*from.cancel_time_);
  } else {
    cancel_time_ = NULL;
  }
  if (from.has_finish_time()) {
    finish_time_ = new ::google::protobuf::Timestamp(*from.finish_time_);
  } else {
    finish_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
}

void UpdateClusterMetadata::SharedCtor() {
  ::memset(&original_request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finish_time_) -
      reinterpret_cast<char*>(&original_request_)) + sizeof(finish_time_));
}

UpdateClusterMetadata::~UpdateClusterMetadata() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
  SharedDtor();
}

void UpdateClusterMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete original_request_;
  if (this != internal_default_instance()) delete request_time_;
  if (this != internal_default_instance()) delete cancel_time_;
  if (this != internal_default_instance()) delete finish_time_;
}

void UpdateClusterMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateClusterMetadata::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateClusterMetadata& UpdateClusterMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_UpdateClusterMetadata.base);
  return *internal_default_instance();
}


void UpdateClusterMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) {
    delete original_request_;
  }
  original_request_ = NULL;
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) {
    delete request_time_;
  }
  request_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && cancel_time_ != NULL) {
    delete cancel_time_;
  }
  cancel_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) {
    delete finish_time_;
  }
  finish_time_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateClusterMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.bigtable.admin.cluster.v1.Cluster original_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_original_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp request_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp cancel_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cancel_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp finish_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_finish_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
  return false;
#undef DO_
}

void UpdateClusterMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.admin.cluster.v1.Cluster original_request = 1;
  if (this->has_original_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_original_request(), output);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_request_time(), output);
  }

  // .google.protobuf.Timestamp cancel_time = 3;
  if (this->has_cancel_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_cancel_time(), output);
  }

  // .google.protobuf.Timestamp finish_time = 4;
  if (this->has_finish_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_finish_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
}

::google::protobuf::uint8* UpdateClusterMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.admin.cluster.v1.Cluster original_request = 1;
  if (this->has_original_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_original_request(), deterministic, target);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_request_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp cancel_time = 3;
  if (this->has_cancel_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_cancel_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp finish_time = 4;
  if (this->has_finish_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_finish_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
  return target;
}

size_t UpdateClusterMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.bigtable.admin.cluster.v1.Cluster original_request = 1;
  if (this->has_original_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *original_request_);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_time_);
  }

  // .google.protobuf.Timestamp cancel_time = 3;
  if (this->has_cancel_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cancel_time_);
  }

  // .google.protobuf.Timestamp finish_time = 4;
  if (this->has_finish_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *finish_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateClusterMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateClusterMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateClusterMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
    MergeFrom(*source);
  }
}

void UpdateClusterMetadata::MergeFrom(const UpdateClusterMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_original_request()) {
    mutable_original_request()->::google::bigtable::admin::cluster::v1::Cluster::MergeFrom(from.original_request());
  }
  if (from.has_request_time()) {
    mutable_request_time()->::google::protobuf::Timestamp::MergeFrom(from.request_time());
  }
  if (from.has_cancel_time()) {
    mutable_cancel_time()->::google::protobuf::Timestamp::MergeFrom(from.cancel_time());
  }
  if (from.has_finish_time()) {
    mutable_finish_time()->::google::protobuf::Timestamp::MergeFrom(from.finish_time());
  }
}

void UpdateClusterMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateClusterMetadata::CopyFrom(const UpdateClusterMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateClusterMetadata::IsInitialized() const {
  return true;
}

void UpdateClusterMetadata::Swap(UpdateClusterMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateClusterMetadata::InternalSwap(UpdateClusterMetadata* other) {
  using std::swap;
  swap(original_request_, other->original_request_);
  swap(request_time_, other->request_time_);
  swap(cancel_time_, other->cancel_time_);
  swap(finish_time_, other->finish_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateClusterMetadata::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteClusterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteClusterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteClusterRequest::DeleteClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_DeleteClusterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
}
DeleteClusterRequest::DeleteClusterRequest(const DeleteClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
}

void DeleteClusterRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteClusterRequest::~DeleteClusterRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
  SharedDtor();
}

void DeleteClusterRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteClusterRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteClusterRequest& DeleteClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_DeleteClusterRequest.base);
  return *internal_default_instance();
}


void DeleteClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.cluster.v1.DeleteClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
  return false;
#undef DO_
}

void DeleteClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.DeleteClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
}

::google::protobuf::uint8* DeleteClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.DeleteClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
  return target;
}

size_t DeleteClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
    MergeFrom(*source);
  }
}

void DeleteClusterRequest::MergeFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteClusterRequest::CopyFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteClusterRequest::IsInitialized() const {
  return true;
}

void DeleteClusterRequest::Swap(DeleteClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteClusterRequest::InternalSwap(DeleteClusterRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteClusterRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UndeleteClusterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UndeleteClusterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UndeleteClusterRequest::UndeleteClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_UndeleteClusterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
}
UndeleteClusterRequest::UndeleteClusterRequest(const UndeleteClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
}

void UndeleteClusterRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UndeleteClusterRequest::~UndeleteClusterRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
  SharedDtor();
}

void UndeleteClusterRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UndeleteClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UndeleteClusterRequest::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UndeleteClusterRequest& UndeleteClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_UndeleteClusterRequest.base);
  return *internal_default_instance();
}


void UndeleteClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UndeleteClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.cluster.v1.UndeleteClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
  return false;
#undef DO_
}

void UndeleteClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.UndeleteClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
}

::google::protobuf::uint8* UndeleteClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.cluster.v1.UndeleteClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
  return target;
}

size_t UndeleteClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UndeleteClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UndeleteClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UndeleteClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
    MergeFrom(*source);
  }
}

void UndeleteClusterRequest::MergeFrom(const UndeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void UndeleteClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UndeleteClusterRequest::CopyFrom(const UndeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UndeleteClusterRequest::IsInitialized() const {
  return true;
}

void UndeleteClusterRequest::Swap(UndeleteClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UndeleteClusterRequest::InternalSwap(UndeleteClusterRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UndeleteClusterRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UndeleteClusterMetadata::InitAsDefaultInstance() {
  ::google::bigtable::admin::cluster::v1::_UndeleteClusterMetadata_default_instance_._instance.get_mutable()->request_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::bigtable::admin::cluster::v1::_UndeleteClusterMetadata_default_instance_._instance.get_mutable()->finish_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void UndeleteClusterMetadata::clear_request_time() {
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) {
    delete request_time_;
  }
  request_time_ = NULL;
}
void UndeleteClusterMetadata::clear_finish_time() {
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) {
    delete finish_time_;
  }
  finish_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UndeleteClusterMetadata::kRequestTimeFieldNumber;
const int UndeleteClusterMetadata::kFinishTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UndeleteClusterMetadata::UndeleteClusterMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_UndeleteClusterMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
}
UndeleteClusterMetadata::UndeleteClusterMetadata(const UndeleteClusterMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_request_time()) {
    request_time_ = new ::google::protobuf::Timestamp(*from.request_time_);
  } else {
    request_time_ = NULL;
  }
  if (from.has_finish_time()) {
    finish_time_ = new ::google::protobuf::Timestamp(*from.finish_time_);
  } else {
    finish_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
}

void UndeleteClusterMetadata::SharedCtor() {
  ::memset(&request_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finish_time_) -
      reinterpret_cast<char*>(&request_time_)) + sizeof(finish_time_));
}

UndeleteClusterMetadata::~UndeleteClusterMetadata() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
  SharedDtor();
}

void UndeleteClusterMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete request_time_;
  if (this != internal_default_instance()) delete finish_time_;
}

void UndeleteClusterMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UndeleteClusterMetadata::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UndeleteClusterMetadata& UndeleteClusterMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_UndeleteClusterMetadata.base);
  return *internal_default_instance();
}


void UndeleteClusterMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) {
    delete request_time_;
  }
  request_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) {
    delete finish_time_;
  }
  finish_time_ = NULL;
  _internal_metadata_.Clear();
}

bool UndeleteClusterMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp request_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp finish_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_finish_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
  return false;
#undef DO_
}

void UndeleteClusterMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp request_time = 1;
  if (this->has_request_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_request_time(), output);
  }

  // .google.protobuf.Timestamp finish_time = 2;
  if (this->has_finish_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_finish_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
}

::google::protobuf::uint8* UndeleteClusterMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp request_time = 1;
  if (this->has_request_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_request_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp finish_time = 2;
  if (this->has_finish_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_finish_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
  return target;
}

size_t UndeleteClusterMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Timestamp request_time = 1;
  if (this->has_request_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_time_);
  }

  // .google.protobuf.Timestamp finish_time = 2;
  if (this->has_finish_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *finish_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UndeleteClusterMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const UndeleteClusterMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UndeleteClusterMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
    MergeFrom(*source);
  }
}

void UndeleteClusterMetadata::MergeFrom(const UndeleteClusterMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_request_time()) {
    mutable_request_time()->::google::protobuf::Timestamp::MergeFrom(from.request_time());
  }
  if (from.has_finish_time()) {
    mutable_finish_time()->::google::protobuf::Timestamp::MergeFrom(from.finish_time());
  }
}

void UndeleteClusterMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UndeleteClusterMetadata::CopyFrom(const UndeleteClusterMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UndeleteClusterMetadata::IsInitialized() const {
  return true;
}

void UndeleteClusterMetadata::Swap(UndeleteClusterMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UndeleteClusterMetadata::InternalSwap(UndeleteClusterMetadata* other) {
  using std::swap;
  swap(request_time_, other->request_time_);
  swap(finish_time_, other->finish_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UndeleteClusterMetadata::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void V2OperationMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

V2OperationMetadata::V2OperationMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_V2OperationMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.cluster.v1.V2OperationMetadata)
}
V2OperationMetadata::V2OperationMetadata(const V2OperationMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.cluster.v1.V2OperationMetadata)
}

void V2OperationMetadata::SharedCtor() {
}

V2OperationMetadata::~V2OperationMetadata() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.cluster.v1.V2OperationMetadata)
  SharedDtor();
}

void V2OperationMetadata::SharedDtor() {
}

void V2OperationMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* V2OperationMetadata::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const V2OperationMetadata& V2OperationMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::scc_info_V2OperationMetadata.base);
  return *internal_default_instance();
}


void V2OperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.cluster.v1.V2OperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool V2OperationMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.cluster.v1.V2OperationMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.cluster.v1.V2OperationMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.cluster.v1.V2OperationMetadata)
  return false;
#undef DO_
}

void V2OperationMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.cluster.v1.V2OperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.cluster.v1.V2OperationMetadata)
}

::google::protobuf::uint8* V2OperationMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.cluster.v1.V2OperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.cluster.v1.V2OperationMetadata)
  return target;
}

size_t V2OperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.cluster.v1.V2OperationMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void V2OperationMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.cluster.v1.V2OperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const V2OperationMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const V2OperationMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.cluster.v1.V2OperationMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.cluster.v1.V2OperationMetadata)
    MergeFrom(*source);
  }
}

void V2OperationMetadata::MergeFrom(const V2OperationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.cluster.v1.V2OperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void V2OperationMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.cluster.v1.V2OperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void V2OperationMetadata::CopyFrom(const V2OperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.cluster.v1.V2OperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool V2OperationMetadata::IsInitialized() const {
  return true;
}

void V2OperationMetadata::Swap(V2OperationMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void V2OperationMetadata::InternalSwap(V2OperationMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata V2OperationMetadata::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace cluster
}  // namespace admin
}  // namespace bigtable
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::cluster::v1::ListZonesRequest* Arena::CreateMaybeMessage< ::google::bigtable::admin::cluster::v1::ListZonesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::cluster::v1::ListZonesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::cluster::v1::ListZonesResponse* Arena::CreateMaybeMessage< ::google::bigtable::admin::cluster::v1::ListZonesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::cluster::v1::ListZonesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::cluster::v1::GetClusterRequest* Arena::CreateMaybeMessage< ::google::bigtable::admin::cluster::v1::GetClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::cluster::v1::GetClusterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::cluster::v1::ListClustersRequest* Arena::CreateMaybeMessage< ::google::bigtable::admin::cluster::v1::ListClustersRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::cluster::v1::ListClustersRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::cluster::v1::ListClustersResponse* Arena::CreateMaybeMessage< ::google::bigtable::admin::cluster::v1::ListClustersResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::cluster::v1::ListClustersResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::cluster::v1::CreateClusterRequest* Arena::CreateMaybeMessage< ::google::bigtable::admin::cluster::v1::CreateClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::cluster::v1::CreateClusterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::cluster::v1::CreateClusterMetadata* Arena::CreateMaybeMessage< ::google::bigtable::admin::cluster::v1::CreateClusterMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::cluster::v1::CreateClusterMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::cluster::v1::UpdateClusterMetadata* Arena::CreateMaybeMessage< ::google::bigtable::admin::cluster::v1::UpdateClusterMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::cluster::v1::UpdateClusterMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::cluster::v1::DeleteClusterRequest* Arena::CreateMaybeMessage< ::google::bigtable::admin::cluster::v1::DeleteClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::cluster::v1::DeleteClusterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::cluster::v1::UndeleteClusterRequest* Arena::CreateMaybeMessage< ::google::bigtable::admin::cluster::v1::UndeleteClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::cluster::v1::UndeleteClusterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::cluster::v1::UndeleteClusterMetadata* Arena::CreateMaybeMessage< ::google::bigtable::admin::cluster::v1::UndeleteClusterMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::cluster::v1::UndeleteClusterMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::cluster::v1::V2OperationMetadata* Arena::CreateMaybeMessage< ::google::bigtable::admin::cluster::v1::V2OperationMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::cluster::v1::V2OperationMetadata >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
