// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/v2/instance.proto

#include "google/bigtable/admin/v2/instance.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AppProfile_MultiClusterRoutingUseAny;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AppProfile_SingleClusterRouting;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Instance_LabelsEntry_DoNotUse;
}  // namespace protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto
namespace google {
namespace bigtable {
namespace admin {
namespace v2 {
class Instance_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Instance_LabelsEntry_DoNotUse>
      _instance;
} _Instance_LabelsEntry_DoNotUse_default_instance_;
class InstanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Instance>
      _instance;
} _Instance_default_instance_;
class ClusterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cluster>
      _instance;
} _Cluster_default_instance_;
class AppProfile_MultiClusterRoutingUseAnyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppProfile_MultiClusterRoutingUseAny>
      _instance;
} _AppProfile_MultiClusterRoutingUseAny_default_instance_;
class AppProfile_SingleClusterRoutingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppProfile_SingleClusterRouting>
      _instance;
} _AppProfile_SingleClusterRouting_default_instance_;
class AppProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppProfile>
      _instance;
  const ::google::bigtable::admin::v2::AppProfile_MultiClusterRoutingUseAny* multi_cluster_routing_use_any_;
  const ::google::bigtable::admin::v2::AppProfile_SingleClusterRouting* single_cluster_routing_;
} _AppProfile_default_instance_;
}  // namespace v2
}  // namespace admin
}  // namespace bigtable
}  // namespace google
namespace protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto {
static void InitDefaultsInstance_LabelsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::v2::_Instance_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::Instance_LabelsEntry_DoNotUse();
  }
  ::google::bigtable::admin::v2::Instance_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Instance_LabelsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInstance_LabelsEntry_DoNotUse}, {}};

static void InitDefaultsInstance() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::v2::_Instance_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::Instance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::Instance::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Instance =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInstance}, {
      &protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::scc_info_Instance_LabelsEntry_DoNotUse.base,}};

static void InitDefaultsCluster() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::v2::_Cluster_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::Cluster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::Cluster::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Cluster =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCluster}, {}};

static void InitDefaultsAppProfile_MultiClusterRoutingUseAny() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::v2::_AppProfile_MultiClusterRoutingUseAny_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::AppProfile_MultiClusterRoutingUseAny();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::AppProfile_MultiClusterRoutingUseAny::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AppProfile_MultiClusterRoutingUseAny =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAppProfile_MultiClusterRoutingUseAny}, {}};

static void InitDefaultsAppProfile_SingleClusterRouting() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::v2::_AppProfile_SingleClusterRouting_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::AppProfile_SingleClusterRouting();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::AppProfile_SingleClusterRouting::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AppProfile_SingleClusterRouting =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAppProfile_SingleClusterRouting}, {}};

static void InitDefaultsAppProfile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::bigtable::admin::v2::_AppProfile_default_instance_;
    new (ptr) ::google::bigtable::admin::v2::AppProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::bigtable::admin::v2::AppProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AppProfile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAppProfile}, {
      &protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::scc_info_AppProfile_MultiClusterRoutingUseAny.base,
      &protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::scc_info_AppProfile_SingleClusterRouting.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Instance_LabelsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Instance.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Cluster.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppProfile_MultiClusterRoutingUseAny.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppProfile_SingleClusterRouting.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppProfile.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Instance_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Instance_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Instance_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Instance_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Instance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Instance, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Instance, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Instance, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Instance, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Instance, labels_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Cluster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Cluster, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Cluster, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Cluster, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Cluster, serve_nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::Cluster, default_storage_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::AppProfile_MultiClusterRoutingUseAny, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::AppProfile_SingleClusterRouting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::AppProfile_SingleClusterRouting, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::AppProfile_SingleClusterRouting, allow_transactional_writes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::AppProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::AppProfile, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::AppProfile, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::AppProfile, etag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::AppProfile, description_),
  offsetof(::google::bigtable::admin::v2::AppProfileDefaultTypeInternal, multi_cluster_routing_use_any_),
  offsetof(::google::bigtable::admin::v2::AppProfileDefaultTypeInternal, single_cluster_routing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::bigtable::admin::v2::AppProfile, routing_policy_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::bigtable::admin::v2::Instance_LabelsEntry_DoNotUse)},
  { 9, -1, sizeof(::google::bigtable::admin::v2::Instance)},
  { 19, -1, sizeof(::google::bigtable::admin::v2::Cluster)},
  { 29, -1, sizeof(::google::bigtable::admin::v2::AppProfile_MultiClusterRoutingUseAny)},
  { 34, -1, sizeof(::google::bigtable::admin::v2::AppProfile_SingleClusterRouting)},
  { 41, -1, sizeof(::google::bigtable::admin::v2::AppProfile)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_Instance_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_Instance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_Cluster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_AppProfile_MultiClusterRoutingUseAny_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_AppProfile_SingleClusterRouting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::bigtable::admin::v2::_AppProfile_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/bigtable/admin/v2/instance.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\'google/bigtable/admin/v2/instance.prot"
      "o\022\030google.bigtable.admin.v2\032\034google/api/"
      "annotations.proto\032%google/bigtable/admin"
      "/v2/common.proto\"\203\003\n\010Instance\022\014\n\004name\030\001 "
      "\001(\t\022\024\n\014display_name\030\002 \001(\t\0227\n\005state\030\003 \001(\016"
      "2(.google.bigtable.admin.v2.Instance.Sta"
      "te\0225\n\004type\030\004 \001(\0162\'.google.bigtable.admin"
      ".v2.Instance.Type\022>\n\006labels\030\005 \003(\0132..goog"
      "le.bigtable.admin.v2.Instance.LabelsEntr"
      "y\032-\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
      " \001(\t:\0028\001\"5\n\005State\022\023\n\017STATE_NOT_KNOWN\020\000\022\t"
      "\n\005READY\020\001\022\014\n\010CREATING\020\002\"=\n\004Type\022\024\n\020TYPE_"
      "UNSPECIFIED\020\000\022\016\n\nPRODUCTION\020\001\022\017\n\013DEVELOP"
      "MENT\020\002\"\216\002\n\007Cluster\022\014\n\004name\030\001 \001(\t\022\020\n\010loca"
      "tion\030\002 \001(\t\0226\n\005state\030\003 \001(\0162\'.google.bigta"
      "ble.admin.v2.Cluster.State\022\023\n\013serve_node"
      "s\030\004 \001(\005\022C\n\024default_storage_type\030\005 \001(\0162%."
      "google.bigtable.admin.v2.StorageType\"Q\n\005"
      "State\022\023\n\017STATE_NOT_KNOWN\020\000\022\t\n\005READY\020\001\022\014\n"
      "\010CREATING\020\002\022\014\n\010RESIZING\020\003\022\014\n\010DISABLED\020\004\""
      "\202\003\n\nAppProfile\022\014\n\004name\030\001 \001(\t\022\014\n\004etag\030\002 \001"
      "(\t\022\023\n\013description\030\003 \001(\t\022g\n\035multi_cluster"
      "_routing_use_any\030\005 \001(\0132>.google.bigtable"
      ".admin.v2.AppProfile.MultiClusterRouting"
      "UseAnyH\000\022[\n\026single_cluster_routing\030\006 \001(\013"
      "29.google.bigtable.admin.v2.AppProfile.S"
      "ingleClusterRoutingH\000\032\033\n\031MultiClusterRou"
      "tingUseAny\032N\n\024SingleClusterRouting\022\022\n\ncl"
      "uster_id\030\001 \001(\t\022\"\n\032allow_transactional_wr"
      "ites\030\002 \001(\010B\020\n\016routing_policyB\260\001\n\034com.goo"
      "gle.bigtable.admin.v2B\rInstanceProtoP\001Z="
      "google.golang.org/genproto/googleapis/bi"
      "gtable/admin/v2;admin\252\002\036Google.Cloud.Big"
      "table.Admin.V2\312\002\036Google\\Cloud\\Bigtable\\A"
      "dmin\\V2b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1375);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/bigtable/admin/v2/instance.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2fcommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto
namespace google {
namespace bigtable {
namespace admin {
namespace v2 {
const ::google::protobuf::EnumDescriptor* Instance_State_descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_enum_descriptors[0];
}
bool Instance_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Instance_State Instance::STATE_NOT_KNOWN;
const Instance_State Instance::READY;
const Instance_State Instance::CREATING;
const Instance_State Instance::State_MIN;
const Instance_State Instance::State_MAX;
const int Instance::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Instance_Type_descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_enum_descriptors[1];
}
bool Instance_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Instance_Type Instance::TYPE_UNSPECIFIED;
const Instance_Type Instance::PRODUCTION;
const Instance_Type Instance::DEVELOPMENT;
const Instance_Type Instance::Type_MIN;
const Instance_Type Instance::Type_MAX;
const int Instance::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Cluster_State_descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_enum_descriptors[2];
}
bool Cluster_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Cluster_State Cluster::STATE_NOT_KNOWN;
const Cluster_State Cluster::READY;
const Cluster_State Cluster::CREATING;
const Cluster_State Cluster::RESIZING;
const Cluster_State Cluster::DISABLED;
const Cluster_State Cluster::State_MIN;
const Cluster_State Cluster::State_MAX;
const int Cluster::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

Instance_LabelsEntry_DoNotUse::Instance_LabelsEntry_DoNotUse() {}
Instance_LabelsEntry_DoNotUse::Instance_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Instance_LabelsEntry_DoNotUse::MergeFrom(const Instance_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Instance_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_metadata[0];
}
void Instance_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Instance::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Instance::kNameFieldNumber;
const int Instance::kDisplayNameFieldNumber;
const int Instance::kStateFieldNumber;
const int Instance::kTypeFieldNumber;
const int Instance::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Instance::Instance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::scc_info_Instance.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.Instance)
}
Instance::Instance(const Instance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&state_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.Instance)
}

void Instance::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&state_)) + sizeof(type_));
}

Instance::~Instance() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.Instance)
  SharedDtor();
}

void Instance::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Instance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Instance::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Instance& Instance::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::scc_info_Instance.base);
  return *internal_default_instance();
}


void Instance::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&state_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Instance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.Instance)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.Instance.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.Instance.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.v2.Instance.State state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::bigtable::admin::v2::Instance_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.v2.Instance.Type type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::bigtable::admin::v2::Instance_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          Instance_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Instance_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.Instance.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.Instance.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.Instance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.Instance)
  return false;
#undef DO_
}

void Instance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.Instance.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.Instance.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // .google.bigtable.admin.v2.Instance.State state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->state(), output);
  }

  // .google.bigtable.admin.v2.Instance.Type type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // map<string, string> labels = 5;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.bigtable.admin.v2.Instance.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.bigtable.admin.v2.Instance.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Instance_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Instance_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.Instance)
}

::google::protobuf::uint8* Instance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.Instance.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.Instance.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  // .google.bigtable.admin.v2.Instance.State state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->state(), target);
  }

  // .google.bigtable.admin.v2.Instance.Type type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // map<string, string> labels = 5;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.bigtable.admin.v2.Instance.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.bigtable.admin.v2.Instance.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Instance_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Instance_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.Instance)
  return target;
}

size_t Instance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.Instance)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> labels = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<Instance_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // .google.bigtable.admin.v2.Instance.State state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // .google.bigtable.admin.v2.Instance.Type type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Instance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.Instance)
  GOOGLE_DCHECK_NE(&from, this);
  const Instance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Instance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.Instance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.Instance)
    MergeFrom(*source);
  }
}

void Instance::MergeFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.Instance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Instance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Instance::CopyFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instance::IsInitialized() const {
  return true;
}

void Instance::Swap(Instance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Instance::InternalSwap(Instance* other) {
  using std::swap;
  labels_.Swap(&other->labels_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Instance::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Cluster::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cluster::kNameFieldNumber;
const int Cluster::kLocationFieldNumber;
const int Cluster::kStateFieldNumber;
const int Cluster::kServeNodesFieldNumber;
const int Cluster::kDefaultStorageTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cluster::Cluster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::scc_info_Cluster.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.Cluster)
}
Cluster::Cluster(const Cluster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_storage_type_) -
    reinterpret_cast<char*>(&state_)) + sizeof(default_storage_type_));
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.Cluster)
}

void Cluster::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_storage_type_) -
      reinterpret_cast<char*>(&state_)) + sizeof(default_storage_type_));
}

Cluster::~Cluster() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.Cluster)
  SharedDtor();
}

void Cluster::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Cluster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Cluster::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Cluster& Cluster::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::scc_info_Cluster.base);
  return *internal_default_instance();
}


void Cluster::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_storage_type_) -
      reinterpret_cast<char*>(&state_)) + sizeof(default_storage_type_));
  _internal_metadata_.Clear();
}

bool Cluster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.Cluster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.Cluster.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.Cluster.location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.v2.Cluster.State state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::bigtable::admin::v2::Cluster_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 serve_nodes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serve_nodes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.v2.StorageType default_storage_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_default_storage_type(static_cast< ::google::bigtable::admin::v2::StorageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.Cluster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.Cluster)
  return false;
#undef DO_
}

void Cluster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.Cluster.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string location = 2;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.Cluster.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->location(), output);
  }

  // .google.bigtable.admin.v2.Cluster.State state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->state(), output);
  }

  // int32 serve_nodes = 4;
  if (this->serve_nodes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->serve_nodes(), output);
  }

  // .google.bigtable.admin.v2.StorageType default_storage_type = 5;
  if (this->default_storage_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->default_storage_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.Cluster)
}

::google::protobuf::uint8* Cluster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.Cluster.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string location = 2;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.Cluster.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->location(), target);
  }

  // .google.bigtable.admin.v2.Cluster.State state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->state(), target);
  }

  // int32 serve_nodes = 4;
  if (this->serve_nodes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->serve_nodes(), target);
  }

  // .google.bigtable.admin.v2.StorageType default_storage_type = 5;
  if (this->default_storage_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->default_storage_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.Cluster)
  return target;
}

size_t Cluster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.Cluster)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string location = 2;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // .google.bigtable.admin.v2.Cluster.State state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // int32 serve_nodes = 4;
  if (this->serve_nodes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serve_nodes());
  }

  // .google.bigtable.admin.v2.StorageType default_storage_type = 5;
  if (this->default_storage_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->default_storage_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cluster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  const Cluster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Cluster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.Cluster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.Cluster)
    MergeFrom(*source);
  }
}

void Cluster::MergeFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.serve_nodes() != 0) {
    set_serve_nodes(from.serve_nodes());
  }
  if (from.default_storage_type() != 0) {
    set_default_storage_type(from.default_storage_type());
  }
}

void Cluster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cluster::CopyFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cluster::IsInitialized() const {
  return true;
}

void Cluster::Swap(Cluster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cluster::InternalSwap(Cluster* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_.Swap(&other->location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
  swap(serve_nodes_, other->serve_nodes_);
  swap(default_storage_type_, other->default_storage_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Cluster::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppProfile_MultiClusterRoutingUseAny::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppProfile_MultiClusterRoutingUseAny::AppProfile_MultiClusterRoutingUseAny()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::scc_info_AppProfile_MultiClusterRoutingUseAny.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
}
AppProfile_MultiClusterRoutingUseAny::AppProfile_MultiClusterRoutingUseAny(const AppProfile_MultiClusterRoutingUseAny& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
}

void AppProfile_MultiClusterRoutingUseAny::SharedCtor() {
}

AppProfile_MultiClusterRoutingUseAny::~AppProfile_MultiClusterRoutingUseAny() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
  SharedDtor();
}

void AppProfile_MultiClusterRoutingUseAny::SharedDtor() {
}

void AppProfile_MultiClusterRoutingUseAny::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AppProfile_MultiClusterRoutingUseAny::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppProfile_MultiClusterRoutingUseAny& AppProfile_MultiClusterRoutingUseAny::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::scc_info_AppProfile_MultiClusterRoutingUseAny.base);
  return *internal_default_instance();
}


void AppProfile_MultiClusterRoutingUseAny::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AppProfile_MultiClusterRoutingUseAny::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
  return false;
#undef DO_
}

void AppProfile_MultiClusterRoutingUseAny::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
}

::google::protobuf::uint8* AppProfile_MultiClusterRoutingUseAny::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
  return target;
}

size_t AppProfile_MultiClusterRoutingUseAny::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppProfile_MultiClusterRoutingUseAny::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
  GOOGLE_DCHECK_NE(&from, this);
  const AppProfile_MultiClusterRoutingUseAny* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppProfile_MultiClusterRoutingUseAny>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
    MergeFrom(*source);
  }
}

void AppProfile_MultiClusterRoutingUseAny::MergeFrom(const AppProfile_MultiClusterRoutingUseAny& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AppProfile_MultiClusterRoutingUseAny::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppProfile_MultiClusterRoutingUseAny::CopyFrom(const AppProfile_MultiClusterRoutingUseAny& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppProfile_MultiClusterRoutingUseAny::IsInitialized() const {
  return true;
}

void AppProfile_MultiClusterRoutingUseAny::Swap(AppProfile_MultiClusterRoutingUseAny* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppProfile_MultiClusterRoutingUseAny::InternalSwap(AppProfile_MultiClusterRoutingUseAny* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppProfile_MultiClusterRoutingUseAny::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppProfile_SingleClusterRouting::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppProfile_SingleClusterRouting::kClusterIdFieldNumber;
const int AppProfile_SingleClusterRouting::kAllowTransactionalWritesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppProfile_SingleClusterRouting::AppProfile_SingleClusterRouting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::scc_info_AppProfile_SingleClusterRouting.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
}
AppProfile_SingleClusterRouting::AppProfile_SingleClusterRouting(const AppProfile_SingleClusterRouting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  allow_transactional_writes_ = from.allow_transactional_writes_;
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
}

void AppProfile_SingleClusterRouting::SharedCtor() {
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allow_transactional_writes_ = false;
}

AppProfile_SingleClusterRouting::~AppProfile_SingleClusterRouting() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
  SharedDtor();
}

void AppProfile_SingleClusterRouting::SharedDtor() {
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppProfile_SingleClusterRouting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AppProfile_SingleClusterRouting::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppProfile_SingleClusterRouting& AppProfile_SingleClusterRouting::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::scc_info_AppProfile_SingleClusterRouting.base);
  return *internal_default_instance();
}


void AppProfile_SingleClusterRouting::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allow_transactional_writes_ = false;
  _internal_metadata_.Clear();
}

bool AppProfile_SingleClusterRouting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.AppProfile.SingleClusterRouting.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool allow_transactional_writes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_transactional_writes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
  return false;
#undef DO_
}

void AppProfile_SingleClusterRouting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_id = 1;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.AppProfile.SingleClusterRouting.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster_id(), output);
  }

  // bool allow_transactional_writes = 2;
  if (this->allow_transactional_writes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->allow_transactional_writes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
}

::google::protobuf::uint8* AppProfile_SingleClusterRouting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_id = 1;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), static_cast<int>(this->cluster_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.AppProfile.SingleClusterRouting.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cluster_id(), target);
  }

  // bool allow_transactional_writes = 2;
  if (this->allow_transactional_writes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->allow_transactional_writes(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
  return target;
}

size_t AppProfile_SingleClusterRouting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cluster_id = 1;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // bool allow_transactional_writes = 2;
  if (this->allow_transactional_writes() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppProfile_SingleClusterRouting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
  GOOGLE_DCHECK_NE(&from, this);
  const AppProfile_SingleClusterRouting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppProfile_SingleClusterRouting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
    MergeFrom(*source);
  }
}

void AppProfile_SingleClusterRouting::MergeFrom(const AppProfile_SingleClusterRouting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.allow_transactional_writes() != 0) {
    set_allow_transactional_writes(from.allow_transactional_writes());
  }
}

void AppProfile_SingleClusterRouting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppProfile_SingleClusterRouting::CopyFrom(const AppProfile_SingleClusterRouting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.AppProfile.SingleClusterRouting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppProfile_SingleClusterRouting::IsInitialized() const {
  return true;
}

void AppProfile_SingleClusterRouting::Swap(AppProfile_SingleClusterRouting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppProfile_SingleClusterRouting::InternalSwap(AppProfile_SingleClusterRouting* other) {
  using std::swap;
  cluster_id_.Swap(&other->cluster_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(allow_transactional_writes_, other->allow_transactional_writes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppProfile_SingleClusterRouting::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppProfile::InitAsDefaultInstance() {
  ::google::bigtable::admin::v2::_AppProfile_default_instance_.multi_cluster_routing_use_any_ = const_cast< ::google::bigtable::admin::v2::AppProfile_MultiClusterRoutingUseAny*>(
      ::google::bigtable::admin::v2::AppProfile_MultiClusterRoutingUseAny::internal_default_instance());
  ::google::bigtable::admin::v2::_AppProfile_default_instance_.single_cluster_routing_ = const_cast< ::google::bigtable::admin::v2::AppProfile_SingleClusterRouting*>(
      ::google::bigtable::admin::v2::AppProfile_SingleClusterRouting::internal_default_instance());
}
void AppProfile::set_allocated_multi_cluster_routing_use_any(::google::bigtable::admin::v2::AppProfile_MultiClusterRoutingUseAny* multi_cluster_routing_use_any) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_routing_policy();
  if (multi_cluster_routing_use_any) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      multi_cluster_routing_use_any = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, multi_cluster_routing_use_any, submessage_arena);
    }
    set_has_multi_cluster_routing_use_any();
    routing_policy_.multi_cluster_routing_use_any_ = multi_cluster_routing_use_any;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.AppProfile.multi_cluster_routing_use_any)
}
void AppProfile::set_allocated_single_cluster_routing(::google::bigtable::admin::v2::AppProfile_SingleClusterRouting* single_cluster_routing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_routing_policy();
  if (single_cluster_routing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      single_cluster_routing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, single_cluster_routing, submessage_arena);
    }
    set_has_single_cluster_routing();
    routing_policy_.single_cluster_routing_ = single_cluster_routing;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.AppProfile.single_cluster_routing)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppProfile::kNameFieldNumber;
const int AppProfile::kEtagFieldNumber;
const int AppProfile::kDescriptionFieldNumber;
const int AppProfile::kMultiClusterRoutingUseAnyFieldNumber;
const int AppProfile::kSingleClusterRoutingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppProfile::AppProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::scc_info_AppProfile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.AppProfile)
}
AppProfile::AppProfile(const AppProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.etag().size() > 0) {
    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  clear_has_routing_policy();
  switch (from.routing_policy_case()) {
    case kMultiClusterRoutingUseAny: {
      mutable_multi_cluster_routing_use_any()->::google::bigtable::admin::v2::AppProfile_MultiClusterRoutingUseAny::MergeFrom(from.multi_cluster_routing_use_any());
      break;
    }
    case kSingleClusterRouting: {
      mutable_single_cluster_routing()->::google::bigtable::admin::v2::AppProfile_SingleClusterRouting::MergeFrom(from.single_cluster_routing());
      break;
    }
    case ROUTING_POLICY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.AppProfile)
}

void AppProfile::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_routing_policy();
}

AppProfile::~AppProfile() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.AppProfile)
  SharedDtor();
}

void AppProfile::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_routing_policy()) {
    clear_routing_policy();
  }
}

void AppProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AppProfile::descriptor() {
  ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppProfile& AppProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::scc_info_AppProfile.base);
  return *internal_default_instance();
}


void AppProfile::clear_routing_policy() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.admin.v2.AppProfile)
  switch (routing_policy_case()) {
    case kMultiClusterRoutingUseAny: {
      delete routing_policy_.multi_cluster_routing_use_any_;
      break;
    }
    case kSingleClusterRouting: {
      delete routing_policy_.single_cluster_routing_;
      break;
    }
    case ROUTING_POLICY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ROUTING_POLICY_NOT_SET;
}


void AppProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.AppProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_routing_policy();
  _internal_metadata_.Clear();
}

bool AppProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.AppProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.AppProfile.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string etag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->etag().data(), static_cast<int>(this->etag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.AppProfile.etag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.AppProfile.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny multi_cluster_routing_use_any = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multi_cluster_routing_use_any()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.v2.AppProfile.SingleClusterRouting single_cluster_routing = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_single_cluster_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.AppProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.AppProfile)
  return false;
#undef DO_
}

void AppProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.AppProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.AppProfile.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string etag = 2;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), static_cast<int>(this->etag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.AppProfile.etag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->etag(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.AppProfile.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // .google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny multi_cluster_routing_use_any = 5;
  if (has_multi_cluster_routing_use_any()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_multi_cluster_routing_use_any(), output);
  }

  // .google.bigtable.admin.v2.AppProfile.SingleClusterRouting single_cluster_routing = 6;
  if (has_single_cluster_routing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_single_cluster_routing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.AppProfile)
}

::google::protobuf::uint8* AppProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.AppProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.AppProfile.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string etag = 2;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), static_cast<int>(this->etag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.AppProfile.etag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->etag(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.AppProfile.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // .google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny multi_cluster_routing_use_any = 5;
  if (has_multi_cluster_routing_use_any()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_multi_cluster_routing_use_any(), deterministic, target);
  }

  // .google.bigtable.admin.v2.AppProfile.SingleClusterRouting single_cluster_routing = 6;
  if (has_single_cluster_routing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_single_cluster_routing(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.AppProfile)
  return target;
}

size_t AppProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.AppProfile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string etag = 2;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->etag());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  switch (routing_policy_case()) {
    // .google.bigtable.admin.v2.AppProfile.MultiClusterRoutingUseAny multi_cluster_routing_use_any = 5;
    case kMultiClusterRoutingUseAny: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *routing_policy_.multi_cluster_routing_use_any_);
      break;
    }
    // .google.bigtable.admin.v2.AppProfile.SingleClusterRouting single_cluster_routing = 6;
    case kSingleClusterRouting: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *routing_policy_.single_cluster_routing_);
      break;
    }
    case ROUTING_POLICY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.AppProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const AppProfile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.AppProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.AppProfile)
    MergeFrom(*source);
  }
}

void AppProfile::MergeFrom(const AppProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.AppProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.etag().size() > 0) {

    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  switch (from.routing_policy_case()) {
    case kMultiClusterRoutingUseAny: {
      mutable_multi_cluster_routing_use_any()->::google::bigtable::admin::v2::AppProfile_MultiClusterRoutingUseAny::MergeFrom(from.multi_cluster_routing_use_any());
      break;
    }
    case kSingleClusterRouting: {
      mutable_single_cluster_routing()->::google::bigtable::admin::v2::AppProfile_SingleClusterRouting::MergeFrom(from.single_cluster_routing());
      break;
    }
    case ROUTING_POLICY_NOT_SET: {
      break;
    }
  }
}

void AppProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.AppProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppProfile::CopyFrom(const AppProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.AppProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppProfile::IsInitialized() const {
  return true;
}

void AppProfile::Swap(AppProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppProfile::InternalSwap(AppProfile* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  etag_.Swap(&other->etag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(routing_policy_, other->routing_policy_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppProfile::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace admin
}  // namespace bigtable
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::v2::Instance_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::bigtable::admin::v2::Instance_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::v2::Instance_LabelsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::v2::Instance* Arena::CreateMaybeMessage< ::google::bigtable::admin::v2::Instance >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::v2::Instance >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::v2::Cluster* Arena::CreateMaybeMessage< ::google::bigtable::admin::v2::Cluster >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::v2::Cluster >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::v2::AppProfile_MultiClusterRoutingUseAny* Arena::CreateMaybeMessage< ::google::bigtable::admin::v2::AppProfile_MultiClusterRoutingUseAny >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::v2::AppProfile_MultiClusterRoutingUseAny >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::v2::AppProfile_SingleClusterRouting* Arena::CreateMaybeMessage< ::google::bigtable::admin::v2::AppProfile_SingleClusterRouting >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::v2::AppProfile_SingleClusterRouting >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::bigtable::admin::v2::AppProfile* Arena::CreateMaybeMessage< ::google::bigtable::admin::v2::AppProfile >(Arena* arena) {
  return Arena::CreateInternal< ::google::bigtable::admin::v2::AppProfile >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
