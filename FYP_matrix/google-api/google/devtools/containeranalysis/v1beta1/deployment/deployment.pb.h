// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/containeranalysis/v1beta1/deployment/deployment.proto

#ifndef PROTOBUF_INCLUDED_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto
#define PROTOBUF_INCLUDED_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto 

namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto
namespace grafeas {
namespace v1beta1 {
namespace deployment {
class Deployable;
class DeployableDefaultTypeInternal;
extern DeployableDefaultTypeInternal _Deployable_default_instance_;
class Deployment;
class DeploymentDefaultTypeInternal;
extern DeploymentDefaultTypeInternal _Deployment_default_instance_;
class Details;
class DetailsDefaultTypeInternal;
extern DetailsDefaultTypeInternal _Details_default_instance_;
}  // namespace deployment
}  // namespace v1beta1
}  // namespace grafeas
namespace google {
namespace protobuf {
template<> ::grafeas::v1beta1::deployment::Deployable* Arena::CreateMaybeMessage<::grafeas::v1beta1::deployment::Deployable>(Arena*);
template<> ::grafeas::v1beta1::deployment::Deployment* Arena::CreateMaybeMessage<::grafeas::v1beta1::deployment::Deployment>(Arena*);
template<> ::grafeas::v1beta1::deployment::Details* Arena::CreateMaybeMessage<::grafeas::v1beta1::deployment::Details>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace grafeas {
namespace v1beta1 {
namespace deployment {

enum Deployment_Platform {
  Deployment_Platform_PLATFORM_UNSPECIFIED = 0,
  Deployment_Platform_GKE = 1,
  Deployment_Platform_FLEX = 2,
  Deployment_Platform_CUSTOM = 3,
  Deployment_Platform_Deployment_Platform_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Deployment_Platform_Deployment_Platform_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Deployment_Platform_IsValid(int value);
const Deployment_Platform Deployment_Platform_Platform_MIN = Deployment_Platform_PLATFORM_UNSPECIFIED;
const Deployment_Platform Deployment_Platform_Platform_MAX = Deployment_Platform_CUSTOM;
const int Deployment_Platform_Platform_ARRAYSIZE = Deployment_Platform_Platform_MAX + 1;

const ::google::protobuf::EnumDescriptor* Deployment_Platform_descriptor();
inline const ::std::string& Deployment_Platform_Name(Deployment_Platform value) {
  return ::google::protobuf::internal::NameOfEnum(
    Deployment_Platform_descriptor(), value);
}
inline bool Deployment_Platform_Parse(
    const ::std::string& name, Deployment_Platform* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Deployment_Platform>(
    Deployment_Platform_descriptor(), name, value);
}
// ===================================================================

class Deployable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grafeas.v1beta1.deployment.Deployable) */ {
 public:
  Deployable();
  virtual ~Deployable();

  Deployable(const Deployable& from);

  inline Deployable& operator=(const Deployable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Deployable(Deployable&& from) noexcept
    : Deployable() {
    *this = ::std::move(from);
  }

  inline Deployable& operator=(Deployable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Deployable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Deployable* internal_default_instance() {
    return reinterpret_cast<const Deployable*>(
               &_Deployable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Deployable* other);
  friend void swap(Deployable& a, Deployable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Deployable* New() const final {
    return CreateMaybeMessage<Deployable>(NULL);
  }

  Deployable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Deployable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Deployable& from);
  void MergeFrom(const Deployable& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Deployable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string resource_uri = 1;
  int resource_uri_size() const;
  void clear_resource_uri();
  static const int kResourceUriFieldNumber = 1;
  const ::std::string& resource_uri(int index) const;
  ::std::string* mutable_resource_uri(int index);
  void set_resource_uri(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_resource_uri(int index, ::std::string&& value);
  #endif
  void set_resource_uri(int index, const char* value);
  void set_resource_uri(int index, const char* value, size_t size);
  ::std::string* add_resource_uri();
  void add_resource_uri(const ::std::string& value);
  #if LANG_CXX11
  void add_resource_uri(::std::string&& value);
  #endif
  void add_resource_uri(const char* value);
  void add_resource_uri(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& resource_uri() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_resource_uri();

  // @@protoc_insertion_point(class_scope:grafeas.v1beta1.deployment.Deployable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> resource_uri_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Details : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grafeas.v1beta1.deployment.Details) */ {
 public:
  Details();
  virtual ~Details();

  Details(const Details& from);

  inline Details& operator=(const Details& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Details(Details&& from) noexcept
    : Details() {
    *this = ::std::move(from);
  }

  inline Details& operator=(Details&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Details& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Details* internal_default_instance() {
    return reinterpret_cast<const Details*>(
               &_Details_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Details* other);
  friend void swap(Details& a, Details& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Details* New() const final {
    return CreateMaybeMessage<Details>(NULL);
  }

  Details* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Details>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Details& from);
  void MergeFrom(const Details& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Details* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .grafeas.v1beta1.deployment.Deployment deployment = 1;
  bool has_deployment() const;
  void clear_deployment();
  static const int kDeploymentFieldNumber = 1;
  private:
  const ::grafeas::v1beta1::deployment::Deployment& _internal_deployment() const;
  public:
  const ::grafeas::v1beta1::deployment::Deployment& deployment() const;
  ::grafeas::v1beta1::deployment::Deployment* release_deployment();
  ::grafeas::v1beta1::deployment::Deployment* mutable_deployment();
  void set_allocated_deployment(::grafeas::v1beta1::deployment::Deployment* deployment);

  // @@protoc_insertion_point(class_scope:grafeas.v1beta1.deployment.Details)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grafeas::v1beta1::deployment::Deployment* deployment_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Deployment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grafeas.v1beta1.deployment.Deployment) */ {
 public:
  Deployment();
  virtual ~Deployment();

  Deployment(const Deployment& from);

  inline Deployment& operator=(const Deployment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Deployment(Deployment&& from) noexcept
    : Deployment() {
    *this = ::std::move(from);
  }

  inline Deployment& operator=(Deployment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Deployment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Deployment* internal_default_instance() {
    return reinterpret_cast<const Deployment*>(
               &_Deployment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Deployment* other);
  friend void swap(Deployment& a, Deployment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Deployment* New() const final {
    return CreateMaybeMessage<Deployment>(NULL);
  }

  Deployment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Deployment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Deployment& from);
  void MergeFrom(const Deployment& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Deployment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Deployment_Platform Platform;
  static const Platform PLATFORM_UNSPECIFIED =
    Deployment_Platform_PLATFORM_UNSPECIFIED;
  static const Platform GKE =
    Deployment_Platform_GKE;
  static const Platform FLEX =
    Deployment_Platform_FLEX;
  static const Platform CUSTOM =
    Deployment_Platform_CUSTOM;
  static inline bool Platform_IsValid(int value) {
    return Deployment_Platform_IsValid(value);
  }
  static const Platform Platform_MIN =
    Deployment_Platform_Platform_MIN;
  static const Platform Platform_MAX =
    Deployment_Platform_Platform_MAX;
  static const int Platform_ARRAYSIZE =
    Deployment_Platform_Platform_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Platform_descriptor() {
    return Deployment_Platform_descriptor();
  }
  static inline const ::std::string& Platform_Name(Platform value) {
    return Deployment_Platform_Name(value);
  }
  static inline bool Platform_Parse(const ::std::string& name,
      Platform* value) {
    return Deployment_Platform_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string resource_uri = 6;
  int resource_uri_size() const;
  void clear_resource_uri();
  static const int kResourceUriFieldNumber = 6;
  const ::std::string& resource_uri(int index) const;
  ::std::string* mutable_resource_uri(int index);
  void set_resource_uri(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_resource_uri(int index, ::std::string&& value);
  #endif
  void set_resource_uri(int index, const char* value);
  void set_resource_uri(int index, const char* value, size_t size);
  ::std::string* add_resource_uri();
  void add_resource_uri(const ::std::string& value);
  #if LANG_CXX11
  void add_resource_uri(::std::string&& value);
  #endif
  void add_resource_uri(const char* value);
  void add_resource_uri(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& resource_uri() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_resource_uri();

  // string user_email = 1;
  void clear_user_email();
  static const int kUserEmailFieldNumber = 1;
  const ::std::string& user_email() const;
  void set_user_email(const ::std::string& value);
  #if LANG_CXX11
  void set_user_email(::std::string&& value);
  #endif
  void set_user_email(const char* value);
  void set_user_email(const char* value, size_t size);
  ::std::string* mutable_user_email();
  ::std::string* release_user_email();
  void set_allocated_user_email(::std::string* user_email);

  // string config = 4;
  void clear_config();
  static const int kConfigFieldNumber = 4;
  const ::std::string& config() const;
  void set_config(const ::std::string& value);
  #if LANG_CXX11
  void set_config(::std::string&& value);
  #endif
  void set_config(const char* value);
  void set_config(const char* value, size_t size);
  ::std::string* mutable_config();
  ::std::string* release_config();
  void set_allocated_config(::std::string* config);

  // string address = 5;
  void clear_address();
  static const int kAddressFieldNumber = 5;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // .google.protobuf.Timestamp deploy_time = 2;
  bool has_deploy_time() const;
  void clear_deploy_time();
  static const int kDeployTimeFieldNumber = 2;
  private:
  const ::google::protobuf::Timestamp& _internal_deploy_time() const;
  public:
  const ::google::protobuf::Timestamp& deploy_time() const;
  ::google::protobuf::Timestamp* release_deploy_time();
  ::google::protobuf::Timestamp* mutable_deploy_time();
  void set_allocated_deploy_time(::google::protobuf::Timestamp* deploy_time);

  // .google.protobuf.Timestamp undeploy_time = 3;
  bool has_undeploy_time() const;
  void clear_undeploy_time();
  static const int kUndeployTimeFieldNumber = 3;
  private:
  const ::google::protobuf::Timestamp& _internal_undeploy_time() const;
  public:
  const ::google::protobuf::Timestamp& undeploy_time() const;
  ::google::protobuf::Timestamp* release_undeploy_time();
  ::google::protobuf::Timestamp* mutable_undeploy_time();
  void set_allocated_undeploy_time(::google::protobuf::Timestamp* undeploy_time);

  // .grafeas.v1beta1.deployment.Deployment.Platform platform = 7;
  void clear_platform();
  static const int kPlatformFieldNumber = 7;
  ::grafeas::v1beta1::deployment::Deployment_Platform platform() const;
  void set_platform(::grafeas::v1beta1::deployment::Deployment_Platform value);

  // @@protoc_insertion_point(class_scope:grafeas.v1beta1.deployment.Deployment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> resource_uri_;
  ::google::protobuf::internal::ArenaStringPtr user_email_;
  ::google::protobuf::internal::ArenaStringPtr config_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::Timestamp* deploy_time_;
  ::google::protobuf::Timestamp* undeploy_time_;
  int platform_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Deployable

// repeated string resource_uri = 1;
inline int Deployable::resource_uri_size() const {
  return resource_uri_.size();
}
inline void Deployable::clear_resource_uri() {
  resource_uri_.Clear();
}
inline const ::std::string& Deployable::resource_uri(int index) const {
  // @@protoc_insertion_point(field_get:grafeas.v1beta1.deployment.Deployable.resource_uri)
  return resource_uri_.Get(index);
}
inline ::std::string* Deployable::mutable_resource_uri(int index) {
  // @@protoc_insertion_point(field_mutable:grafeas.v1beta1.deployment.Deployable.resource_uri)
  return resource_uri_.Mutable(index);
}
inline void Deployable::set_resource_uri(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grafeas.v1beta1.deployment.Deployable.resource_uri)
  resource_uri_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Deployable::set_resource_uri(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:grafeas.v1beta1.deployment.Deployable.resource_uri)
  resource_uri_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Deployable::set_resource_uri(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  resource_uri_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grafeas.v1beta1.deployment.Deployable.resource_uri)
}
inline void Deployable::set_resource_uri(int index, const char* value, size_t size) {
  resource_uri_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grafeas.v1beta1.deployment.Deployable.resource_uri)
}
inline ::std::string* Deployable::add_resource_uri() {
  // @@protoc_insertion_point(field_add_mutable:grafeas.v1beta1.deployment.Deployable.resource_uri)
  return resource_uri_.Add();
}
inline void Deployable::add_resource_uri(const ::std::string& value) {
  resource_uri_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grafeas.v1beta1.deployment.Deployable.resource_uri)
}
#if LANG_CXX11
inline void Deployable::add_resource_uri(::std::string&& value) {
  resource_uri_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:grafeas.v1beta1.deployment.Deployable.resource_uri)
}
#endif
inline void Deployable::add_resource_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  resource_uri_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grafeas.v1beta1.deployment.Deployable.resource_uri)
}
inline void Deployable::add_resource_uri(const char* value, size_t size) {
  resource_uri_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grafeas.v1beta1.deployment.Deployable.resource_uri)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Deployable::resource_uri() const {
  // @@protoc_insertion_point(field_list:grafeas.v1beta1.deployment.Deployable.resource_uri)
  return resource_uri_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Deployable::mutable_resource_uri() {
  // @@protoc_insertion_point(field_mutable_list:grafeas.v1beta1.deployment.Deployable.resource_uri)
  return &resource_uri_;
}

// -------------------------------------------------------------------

// Details

// .grafeas.v1beta1.deployment.Deployment deployment = 1;
inline bool Details::has_deployment() const {
  return this != internal_default_instance() && deployment_ != NULL;
}
inline void Details::clear_deployment() {
  if (GetArenaNoVirtual() == NULL && deployment_ != NULL) {
    delete deployment_;
  }
  deployment_ = NULL;
}
inline const ::grafeas::v1beta1::deployment::Deployment& Details::_internal_deployment() const {
  return *deployment_;
}
inline const ::grafeas::v1beta1::deployment::Deployment& Details::deployment() const {
  const ::grafeas::v1beta1::deployment::Deployment* p = deployment_;
  // @@protoc_insertion_point(field_get:grafeas.v1beta1.deployment.Details.deployment)
  return p != NULL ? *p : *reinterpret_cast<const ::grafeas::v1beta1::deployment::Deployment*>(
      &::grafeas::v1beta1::deployment::_Deployment_default_instance_);
}
inline ::grafeas::v1beta1::deployment::Deployment* Details::release_deployment() {
  // @@protoc_insertion_point(field_release:grafeas.v1beta1.deployment.Details.deployment)
  
  ::grafeas::v1beta1::deployment::Deployment* temp = deployment_;
  deployment_ = NULL;
  return temp;
}
inline ::grafeas::v1beta1::deployment::Deployment* Details::mutable_deployment() {
  
  if (deployment_ == NULL) {
    auto* p = CreateMaybeMessage<::grafeas::v1beta1::deployment::Deployment>(GetArenaNoVirtual());
    deployment_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grafeas.v1beta1.deployment.Details.deployment)
  return deployment_;
}
inline void Details::set_allocated_deployment(::grafeas::v1beta1::deployment::Deployment* deployment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deployment_;
  }
  if (deployment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deployment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deployment, submessage_arena);
    }
    
  } else {
    
  }
  deployment_ = deployment;
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.deployment.Details.deployment)
}

// -------------------------------------------------------------------

// Deployment

// string user_email = 1;
inline void Deployment::clear_user_email() {
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Deployment::user_email() const {
  // @@protoc_insertion_point(field_get:grafeas.v1beta1.deployment.Deployment.user_email)
  return user_email_.GetNoArena();
}
inline void Deployment::set_user_email(const ::std::string& value) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grafeas.v1beta1.deployment.Deployment.user_email)
}
#if LANG_CXX11
inline void Deployment::set_user_email(::std::string&& value) {
  
  user_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grafeas.v1beta1.deployment.Deployment.user_email)
}
#endif
inline void Deployment::set_user_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grafeas.v1beta1.deployment.Deployment.user_email)
}
inline void Deployment::set_user_email(const char* value, size_t size) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grafeas.v1beta1.deployment.Deployment.user_email)
}
inline ::std::string* Deployment::mutable_user_email() {
  
  // @@protoc_insertion_point(field_mutable:grafeas.v1beta1.deployment.Deployment.user_email)
  return user_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Deployment::release_user_email() {
  // @@protoc_insertion_point(field_release:grafeas.v1beta1.deployment.Deployment.user_email)
  
  return user_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Deployment::set_allocated_user_email(::std::string* user_email) {
  if (user_email != NULL) {
    
  } else {
    
  }
  user_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_email);
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.deployment.Deployment.user_email)
}

// .google.protobuf.Timestamp deploy_time = 2;
inline bool Deployment::has_deploy_time() const {
  return this != internal_default_instance() && deploy_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Deployment::_internal_deploy_time() const {
  return *deploy_time_;
}
inline const ::google::protobuf::Timestamp& Deployment::deploy_time() const {
  const ::google::protobuf::Timestamp* p = deploy_time_;
  // @@protoc_insertion_point(field_get:grafeas.v1beta1.deployment.Deployment.deploy_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Deployment::release_deploy_time() {
  // @@protoc_insertion_point(field_release:grafeas.v1beta1.deployment.Deployment.deploy_time)
  
  ::google::protobuf::Timestamp* temp = deploy_time_;
  deploy_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Deployment::mutable_deploy_time() {
  
  if (deploy_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    deploy_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grafeas.v1beta1.deployment.Deployment.deploy_time)
  return deploy_time_;
}
inline void Deployment::set_allocated_deploy_time(::google::protobuf::Timestamp* deploy_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(deploy_time_);
  }
  if (deploy_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(deploy_time)->GetArena();
    if (message_arena != submessage_arena) {
      deploy_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deploy_time, submessage_arena);
    }
    
  } else {
    
  }
  deploy_time_ = deploy_time;
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.deployment.Deployment.deploy_time)
}

// .google.protobuf.Timestamp undeploy_time = 3;
inline bool Deployment::has_undeploy_time() const {
  return this != internal_default_instance() && undeploy_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Deployment::_internal_undeploy_time() const {
  return *undeploy_time_;
}
inline const ::google::protobuf::Timestamp& Deployment::undeploy_time() const {
  const ::google::protobuf::Timestamp* p = undeploy_time_;
  // @@protoc_insertion_point(field_get:grafeas.v1beta1.deployment.Deployment.undeploy_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Deployment::release_undeploy_time() {
  // @@protoc_insertion_point(field_release:grafeas.v1beta1.deployment.Deployment.undeploy_time)
  
  ::google::protobuf::Timestamp* temp = undeploy_time_;
  undeploy_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Deployment::mutable_undeploy_time() {
  
  if (undeploy_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    undeploy_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grafeas.v1beta1.deployment.Deployment.undeploy_time)
  return undeploy_time_;
}
inline void Deployment::set_allocated_undeploy_time(::google::protobuf::Timestamp* undeploy_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(undeploy_time_);
  }
  if (undeploy_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(undeploy_time)->GetArena();
    if (message_arena != submessage_arena) {
      undeploy_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, undeploy_time, submessage_arena);
    }
    
  } else {
    
  }
  undeploy_time_ = undeploy_time;
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.deployment.Deployment.undeploy_time)
}

// string config = 4;
inline void Deployment::clear_config() {
  config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Deployment::config() const {
  // @@protoc_insertion_point(field_get:grafeas.v1beta1.deployment.Deployment.config)
  return config_.GetNoArena();
}
inline void Deployment::set_config(const ::std::string& value) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grafeas.v1beta1.deployment.Deployment.config)
}
#if LANG_CXX11
inline void Deployment::set_config(::std::string&& value) {
  
  config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grafeas.v1beta1.deployment.Deployment.config)
}
#endif
inline void Deployment::set_config(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grafeas.v1beta1.deployment.Deployment.config)
}
inline void Deployment::set_config(const char* value, size_t size) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grafeas.v1beta1.deployment.Deployment.config)
}
inline ::std::string* Deployment::mutable_config() {
  
  // @@protoc_insertion_point(field_mutable:grafeas.v1beta1.deployment.Deployment.config)
  return config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Deployment::release_config() {
  // @@protoc_insertion_point(field_release:grafeas.v1beta1.deployment.Deployment.config)
  
  return config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Deployment::set_allocated_config(::std::string* config) {
  if (config != NULL) {
    
  } else {
    
  }
  config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config);
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.deployment.Deployment.config)
}

// string address = 5;
inline void Deployment::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Deployment::address() const {
  // @@protoc_insertion_point(field_get:grafeas.v1beta1.deployment.Deployment.address)
  return address_.GetNoArena();
}
inline void Deployment::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grafeas.v1beta1.deployment.Deployment.address)
}
#if LANG_CXX11
inline void Deployment::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grafeas.v1beta1.deployment.Deployment.address)
}
#endif
inline void Deployment::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grafeas.v1beta1.deployment.Deployment.address)
}
inline void Deployment::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grafeas.v1beta1.deployment.Deployment.address)
}
inline ::std::string* Deployment::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:grafeas.v1beta1.deployment.Deployment.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Deployment::release_address() {
  // @@protoc_insertion_point(field_release:grafeas.v1beta1.deployment.Deployment.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Deployment::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.deployment.Deployment.address)
}

// repeated string resource_uri = 6;
inline int Deployment::resource_uri_size() const {
  return resource_uri_.size();
}
inline void Deployment::clear_resource_uri() {
  resource_uri_.Clear();
}
inline const ::std::string& Deployment::resource_uri(int index) const {
  // @@protoc_insertion_point(field_get:grafeas.v1beta1.deployment.Deployment.resource_uri)
  return resource_uri_.Get(index);
}
inline ::std::string* Deployment::mutable_resource_uri(int index) {
  // @@protoc_insertion_point(field_mutable:grafeas.v1beta1.deployment.Deployment.resource_uri)
  return resource_uri_.Mutable(index);
}
inline void Deployment::set_resource_uri(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grafeas.v1beta1.deployment.Deployment.resource_uri)
  resource_uri_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Deployment::set_resource_uri(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:grafeas.v1beta1.deployment.Deployment.resource_uri)
  resource_uri_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Deployment::set_resource_uri(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  resource_uri_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grafeas.v1beta1.deployment.Deployment.resource_uri)
}
inline void Deployment::set_resource_uri(int index, const char* value, size_t size) {
  resource_uri_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grafeas.v1beta1.deployment.Deployment.resource_uri)
}
inline ::std::string* Deployment::add_resource_uri() {
  // @@protoc_insertion_point(field_add_mutable:grafeas.v1beta1.deployment.Deployment.resource_uri)
  return resource_uri_.Add();
}
inline void Deployment::add_resource_uri(const ::std::string& value) {
  resource_uri_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grafeas.v1beta1.deployment.Deployment.resource_uri)
}
#if LANG_CXX11
inline void Deployment::add_resource_uri(::std::string&& value) {
  resource_uri_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:grafeas.v1beta1.deployment.Deployment.resource_uri)
}
#endif
inline void Deployment::add_resource_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  resource_uri_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grafeas.v1beta1.deployment.Deployment.resource_uri)
}
inline void Deployment::add_resource_uri(const char* value, size_t size) {
  resource_uri_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grafeas.v1beta1.deployment.Deployment.resource_uri)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Deployment::resource_uri() const {
  // @@protoc_insertion_point(field_list:grafeas.v1beta1.deployment.Deployment.resource_uri)
  return resource_uri_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Deployment::mutable_resource_uri() {
  // @@protoc_insertion_point(field_mutable_list:grafeas.v1beta1.deployment.Deployment.resource_uri)
  return &resource_uri_;
}

// .grafeas.v1beta1.deployment.Deployment.Platform platform = 7;
inline void Deployment::clear_platform() {
  platform_ = 0;
}
inline ::grafeas::v1beta1::deployment::Deployment_Platform Deployment::platform() const {
  // @@protoc_insertion_point(field_get:grafeas.v1beta1.deployment.Deployment.platform)
  return static_cast< ::grafeas::v1beta1::deployment::Deployment_Platform >(platform_);
}
inline void Deployment::set_platform(::grafeas::v1beta1::deployment::Deployment_Platform value) {
  
  platform_ = value;
  // @@protoc_insertion_point(field_set:grafeas.v1beta1.deployment.Deployment.platform)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace deployment
}  // namespace v1beta1
}  // namespace grafeas

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::grafeas::v1beta1::deployment::Deployment_Platform> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::grafeas::v1beta1::deployment::Deployment_Platform>() {
  return ::grafeas::v1beta1::deployment::Deployment_Platform_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto
