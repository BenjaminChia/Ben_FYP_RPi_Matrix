// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/containeranalysis/v1beta1/containeranalysis.proto

#ifndef PROTOBUF_INCLUDED_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto
#define PROTOBUF_INCLUDED_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/iam/v1/iam_policy.pb.h"
#include "google/iam/v1/policy.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto 

namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto
namespace google {
namespace devtools {
namespace containeranalysis {
namespace v1beta1 {
class GetScanConfigRequest;
class GetScanConfigRequestDefaultTypeInternal;
extern GetScanConfigRequestDefaultTypeInternal _GetScanConfigRequest_default_instance_;
class ListScanConfigsRequest;
class ListScanConfigsRequestDefaultTypeInternal;
extern ListScanConfigsRequestDefaultTypeInternal _ListScanConfigsRequest_default_instance_;
class ListScanConfigsResponse;
class ListScanConfigsResponseDefaultTypeInternal;
extern ListScanConfigsResponseDefaultTypeInternal _ListScanConfigsResponse_default_instance_;
class ScanConfig;
class ScanConfigDefaultTypeInternal;
extern ScanConfigDefaultTypeInternal _ScanConfig_default_instance_;
class UpdateScanConfigRequest;
class UpdateScanConfigRequestDefaultTypeInternal;
extern UpdateScanConfigRequestDefaultTypeInternal _UpdateScanConfigRequest_default_instance_;
}  // namespace v1beta1
}  // namespace containeranalysis
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::devtools::containeranalysis::v1beta1::GetScanConfigRequest* Arena::CreateMaybeMessage<::google::devtools::containeranalysis::v1beta1::GetScanConfigRequest>(Arena*);
template<> ::google::devtools::containeranalysis::v1beta1::ListScanConfigsRequest* Arena::CreateMaybeMessage<::google::devtools::containeranalysis::v1beta1::ListScanConfigsRequest>(Arena*);
template<> ::google::devtools::containeranalysis::v1beta1::ListScanConfigsResponse* Arena::CreateMaybeMessage<::google::devtools::containeranalysis::v1beta1::ListScanConfigsResponse>(Arena*);
template<> ::google::devtools::containeranalysis::v1beta1::ScanConfig* Arena::CreateMaybeMessage<::google::devtools::containeranalysis::v1beta1::ScanConfig>(Arena*);
template<> ::google::devtools::containeranalysis::v1beta1::UpdateScanConfigRequest* Arena::CreateMaybeMessage<::google::devtools::containeranalysis::v1beta1::UpdateScanConfigRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace devtools {
namespace containeranalysis {
namespace v1beta1 {

// ===================================================================

class ScanConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.containeranalysis.v1beta1.ScanConfig) */ {
 public:
  ScanConfig();
  virtual ~ScanConfig();

  ScanConfig(const ScanConfig& from);

  inline ScanConfig& operator=(const ScanConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScanConfig(ScanConfig&& from) noexcept
    : ScanConfig() {
    *this = ::std::move(from);
  }

  inline ScanConfig& operator=(ScanConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScanConfig* internal_default_instance() {
    return reinterpret_cast<const ScanConfig*>(
               &_ScanConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ScanConfig* other);
  friend void swap(ScanConfig& a, ScanConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScanConfig* New() const final {
    return CreateMaybeMessage<ScanConfig>(NULL);
  }

  ScanConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScanConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScanConfig& from);
  void MergeFrom(const ScanConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScanConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // .google.protobuf.Timestamp create_time = 4;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 4;
  private:
  const ::google::protobuf::Timestamp& _internal_create_time() const;
  public:
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // .google.protobuf.Timestamp update_time = 5;
  bool has_update_time() const;
  void clear_update_time();
  static const int kUpdateTimeFieldNumber = 5;
  private:
  const ::google::protobuf::Timestamp& _internal_update_time() const;
  public:
  const ::google::protobuf::Timestamp& update_time() const;
  ::google::protobuf::Timestamp* release_update_time();
  ::google::protobuf::Timestamp* mutable_update_time();
  void set_allocated_update_time(::google::protobuf::Timestamp* update_time);

  // bool enabled = 3;
  void clear_enabled();
  static const int kEnabledFieldNumber = 3;
  bool enabled() const;
  void set_enabled(bool value);

  // @@protoc_insertion_point(class_scope:google.devtools.containeranalysis.v1beta1.ScanConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::protobuf::Timestamp* update_time_;
  bool enabled_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetScanConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest) */ {
 public:
  GetScanConfigRequest();
  virtual ~GetScanConfigRequest();

  GetScanConfigRequest(const GetScanConfigRequest& from);

  inline GetScanConfigRequest& operator=(const GetScanConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetScanConfigRequest(GetScanConfigRequest&& from) noexcept
    : GetScanConfigRequest() {
    *this = ::std::move(from);
  }

  inline GetScanConfigRequest& operator=(GetScanConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetScanConfigRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetScanConfigRequest* internal_default_instance() {
    return reinterpret_cast<const GetScanConfigRequest*>(
               &_GetScanConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetScanConfigRequest* other);
  friend void swap(GetScanConfigRequest& a, GetScanConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetScanConfigRequest* New() const final {
    return CreateMaybeMessage<GetScanConfigRequest>(NULL);
  }

  GetScanConfigRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetScanConfigRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetScanConfigRequest& from);
  void MergeFrom(const GetScanConfigRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetScanConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListScanConfigsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest) */ {
 public:
  ListScanConfigsRequest();
  virtual ~ListScanConfigsRequest();

  ListScanConfigsRequest(const ListScanConfigsRequest& from);

  inline ListScanConfigsRequest& operator=(const ListScanConfigsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListScanConfigsRequest(ListScanConfigsRequest&& from) noexcept
    : ListScanConfigsRequest() {
    *this = ::std::move(from);
  }

  inline ListScanConfigsRequest& operator=(ListScanConfigsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListScanConfigsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListScanConfigsRequest* internal_default_instance() {
    return reinterpret_cast<const ListScanConfigsRequest*>(
               &_ListScanConfigsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ListScanConfigsRequest* other);
  friend void swap(ListScanConfigsRequest& a, ListScanConfigsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListScanConfigsRequest* New() const final {
    return CreateMaybeMessage<ListScanConfigsRequest>(NULL);
  }

  ListScanConfigsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListScanConfigsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListScanConfigsRequest& from);
  void MergeFrom(const ListScanConfigsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListScanConfigsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string filter = 2;
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // string page_token = 4;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 4;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListScanConfigsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse) */ {
 public:
  ListScanConfigsResponse();
  virtual ~ListScanConfigsResponse();

  ListScanConfigsResponse(const ListScanConfigsResponse& from);

  inline ListScanConfigsResponse& operator=(const ListScanConfigsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListScanConfigsResponse(ListScanConfigsResponse&& from) noexcept
    : ListScanConfigsResponse() {
    *this = ::std::move(from);
  }

  inline ListScanConfigsResponse& operator=(ListScanConfigsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListScanConfigsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListScanConfigsResponse* internal_default_instance() {
    return reinterpret_cast<const ListScanConfigsResponse*>(
               &_ListScanConfigsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ListScanConfigsResponse* other);
  friend void swap(ListScanConfigsResponse& a, ListScanConfigsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListScanConfigsResponse* New() const final {
    return CreateMaybeMessage<ListScanConfigsResponse>(NULL);
  }

  ListScanConfigsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListScanConfigsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListScanConfigsResponse& from);
  void MergeFrom(const ListScanConfigsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListScanConfigsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.containeranalysis.v1beta1.ScanConfig scan_configs = 1;
  int scan_configs_size() const;
  void clear_scan_configs();
  static const int kScanConfigsFieldNumber = 1;
  ::google::devtools::containeranalysis::v1beta1::ScanConfig* mutable_scan_configs(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::containeranalysis::v1beta1::ScanConfig >*
      mutable_scan_configs();
  const ::google::devtools::containeranalysis::v1beta1::ScanConfig& scan_configs(int index) const;
  ::google::devtools::containeranalysis::v1beta1::ScanConfig* add_scan_configs();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::containeranalysis::v1beta1::ScanConfig >&
      scan_configs() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::containeranalysis::v1beta1::ScanConfig > scan_configs_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateScanConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest) */ {
 public:
  UpdateScanConfigRequest();
  virtual ~UpdateScanConfigRequest();

  UpdateScanConfigRequest(const UpdateScanConfigRequest& from);

  inline UpdateScanConfigRequest& operator=(const UpdateScanConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateScanConfigRequest(UpdateScanConfigRequest&& from) noexcept
    : UpdateScanConfigRequest() {
    *this = ::std::move(from);
  }

  inline UpdateScanConfigRequest& operator=(UpdateScanConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateScanConfigRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateScanConfigRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateScanConfigRequest*>(
               &_UpdateScanConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(UpdateScanConfigRequest* other);
  friend void swap(UpdateScanConfigRequest& a, UpdateScanConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateScanConfigRequest* New() const final {
    return CreateMaybeMessage<UpdateScanConfigRequest>(NULL);
  }

  UpdateScanConfigRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateScanConfigRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateScanConfigRequest& from);
  void MergeFrom(const UpdateScanConfigRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateScanConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.devtools.containeranalysis.v1beta1.ScanConfig scan_config = 2;
  bool has_scan_config() const;
  void clear_scan_config();
  static const int kScanConfigFieldNumber = 2;
  private:
  const ::google::devtools::containeranalysis::v1beta1::ScanConfig& _internal_scan_config() const;
  public:
  const ::google::devtools::containeranalysis::v1beta1::ScanConfig& scan_config() const;
  ::google::devtools::containeranalysis::v1beta1::ScanConfig* release_scan_config();
  ::google::devtools::containeranalysis::v1beta1::ScanConfig* mutable_scan_config();
  void set_allocated_scan_config(::google::devtools::containeranalysis::v1beta1::ScanConfig* scan_config);

  // @@protoc_insertion_point(class_scope:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::devtools::containeranalysis::v1beta1::ScanConfig* scan_config_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ScanConfig

// string name = 1;
inline void ScanConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScanConfig::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.ScanConfig.name)
  return name_.GetNoArena();
}
inline void ScanConfig::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.containeranalysis.v1beta1.ScanConfig.name)
}
#if LANG_CXX11
inline void ScanConfig::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.containeranalysis.v1beta1.ScanConfig.name)
}
#endif
inline void ScanConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.containeranalysis.v1beta1.ScanConfig.name)
}
inline void ScanConfig::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.containeranalysis.v1beta1.ScanConfig.name)
}
inline ::std::string* ScanConfig::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.containeranalysis.v1beta1.ScanConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScanConfig::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.containeranalysis.v1beta1.ScanConfig.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScanConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1beta1.ScanConfig.name)
}

// string description = 2;
inline void ScanConfig::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScanConfig::description() const {
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.ScanConfig.description)
  return description_.GetNoArena();
}
inline void ScanConfig::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.containeranalysis.v1beta1.ScanConfig.description)
}
#if LANG_CXX11
inline void ScanConfig::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.containeranalysis.v1beta1.ScanConfig.description)
}
#endif
inline void ScanConfig::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.containeranalysis.v1beta1.ScanConfig.description)
}
inline void ScanConfig::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.containeranalysis.v1beta1.ScanConfig.description)
}
inline ::std::string* ScanConfig::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.containeranalysis.v1beta1.ScanConfig.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScanConfig::release_description() {
  // @@protoc_insertion_point(field_release:google.devtools.containeranalysis.v1beta1.ScanConfig.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScanConfig::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1beta1.ScanConfig.description)
}

// bool enabled = 3;
inline void ScanConfig::clear_enabled() {
  enabled_ = false;
}
inline bool ScanConfig::enabled() const {
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.ScanConfig.enabled)
  return enabled_;
}
inline void ScanConfig::set_enabled(bool value) {
  
  enabled_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.containeranalysis.v1beta1.ScanConfig.enabled)
}

// .google.protobuf.Timestamp create_time = 4;
inline bool ScanConfig::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& ScanConfig::_internal_create_time() const {
  return *create_time_;
}
inline const ::google::protobuf::Timestamp& ScanConfig::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.ScanConfig.create_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* ScanConfig::release_create_time() {
  // @@protoc_insertion_point(field_release:google.devtools.containeranalysis.v1beta1.ScanConfig.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* ScanConfig::mutable_create_time() {
  
  if (create_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    create_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.containeranalysis.v1beta1.ScanConfig.create_time)
  return create_time_;
}
inline void ScanConfig::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1beta1.ScanConfig.create_time)
}

// .google.protobuf.Timestamp update_time = 5;
inline bool ScanConfig::has_update_time() const {
  return this != internal_default_instance() && update_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& ScanConfig::_internal_update_time() const {
  return *update_time_;
}
inline const ::google::protobuf::Timestamp& ScanConfig::update_time() const {
  const ::google::protobuf::Timestamp* p = update_time_;
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.ScanConfig.update_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* ScanConfig::release_update_time() {
  // @@protoc_insertion_point(field_release:google.devtools.containeranalysis.v1beta1.ScanConfig.update_time)
  
  ::google::protobuf::Timestamp* temp = update_time_;
  update_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* ScanConfig::mutable_update_time() {
  
  if (update_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    update_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.containeranalysis.v1beta1.ScanConfig.update_time)
  return update_time_;
}
inline void ScanConfig::set_allocated_update_time(::google::protobuf::Timestamp* update_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_time_);
  }
  if (update_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(update_time)->GetArena();
    if (message_arena != submessage_arena) {
      update_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_time, submessage_arena);
    }
    
  } else {
    
  }
  update_time_ = update_time;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1beta1.ScanConfig.update_time)
}

// -------------------------------------------------------------------

// GetScanConfigRequest

// string name = 1;
inline void GetScanConfigRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetScanConfigRequest::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest.name)
  return name_.GetNoArena();
}
inline void GetScanConfigRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest.name)
}
#if LANG_CXX11
inline void GetScanConfigRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest.name)
}
#endif
inline void GetScanConfigRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest.name)
}
inline void GetScanConfigRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest.name)
}
inline ::std::string* GetScanConfigRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetScanConfigRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetScanConfigRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest.name)
}

// -------------------------------------------------------------------

// ListScanConfigsRequest

// string parent = 1;
inline void ListScanConfigsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListScanConfigsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListScanConfigsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.parent)
}
#if LANG_CXX11
inline void ListScanConfigsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.parent)
}
#endif
inline void ListScanConfigsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.parent)
}
inline void ListScanConfigsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.parent)
}
inline ::std::string* ListScanConfigsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListScanConfigsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListScanConfigsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.parent)
}

// string filter = 2;
inline void ListScanConfigsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListScanConfigsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.filter)
  return filter_.GetNoArena();
}
inline void ListScanConfigsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.filter)
}
#if LANG_CXX11
inline void ListScanConfigsRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.filter)
}
#endif
inline void ListScanConfigsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.filter)
}
inline void ListScanConfigsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.filter)
}
inline ::std::string* ListScanConfigsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListScanConfigsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListScanConfigsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.filter)
}

// int32 page_size = 3;
inline void ListScanConfigsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListScanConfigsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.page_size)
  return page_size_;
}
inline void ListScanConfigsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.page_size)
}

// string page_token = 4;
inline void ListScanConfigsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListScanConfigsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListScanConfigsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.page_token)
}
#if LANG_CXX11
inline void ListScanConfigsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.page_token)
}
#endif
inline void ListScanConfigsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.page_token)
}
inline void ListScanConfigsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.page_token)
}
inline ::std::string* ListScanConfigsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListScanConfigsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListScanConfigsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.page_token)
}

// -------------------------------------------------------------------

// ListScanConfigsResponse

// repeated .google.devtools.containeranalysis.v1beta1.ScanConfig scan_configs = 1;
inline int ListScanConfigsResponse::scan_configs_size() const {
  return scan_configs_.size();
}
inline void ListScanConfigsResponse::clear_scan_configs() {
  scan_configs_.Clear();
}
inline ::google::devtools::containeranalysis::v1beta1::ScanConfig* ListScanConfigsResponse::mutable_scan_configs(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.scan_configs)
  return scan_configs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::containeranalysis::v1beta1::ScanConfig >*
ListScanConfigsResponse::mutable_scan_configs() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.scan_configs)
  return &scan_configs_;
}
inline const ::google::devtools::containeranalysis::v1beta1::ScanConfig& ListScanConfigsResponse::scan_configs(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.scan_configs)
  return scan_configs_.Get(index);
}
inline ::google::devtools::containeranalysis::v1beta1::ScanConfig* ListScanConfigsResponse::add_scan_configs() {
  // @@protoc_insertion_point(field_add:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.scan_configs)
  return scan_configs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::containeranalysis::v1beta1::ScanConfig >&
ListScanConfigsResponse::scan_configs() const {
  // @@protoc_insertion_point(field_list:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.scan_configs)
  return scan_configs_;
}

// string next_page_token = 2;
inline void ListScanConfigsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListScanConfigsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListScanConfigsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListScanConfigsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.next_page_token)
}
#endif
inline void ListScanConfigsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.next_page_token)
}
inline void ListScanConfigsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.next_page_token)
}
inline ::std::string* ListScanConfigsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListScanConfigsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListScanConfigsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.next_page_token)
}

// -------------------------------------------------------------------

// UpdateScanConfigRequest

// string name = 1;
inline void UpdateScanConfigRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateScanConfigRequest::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.name)
  return name_.GetNoArena();
}
inline void UpdateScanConfigRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.name)
}
#if LANG_CXX11
inline void UpdateScanConfigRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.name)
}
#endif
inline void UpdateScanConfigRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.name)
}
inline void UpdateScanConfigRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.name)
}
inline ::std::string* UpdateScanConfigRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateScanConfigRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateScanConfigRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.name)
}

// .google.devtools.containeranalysis.v1beta1.ScanConfig scan_config = 2;
inline bool UpdateScanConfigRequest::has_scan_config() const {
  return this != internal_default_instance() && scan_config_ != NULL;
}
inline void UpdateScanConfigRequest::clear_scan_config() {
  if (GetArenaNoVirtual() == NULL && scan_config_ != NULL) {
    delete scan_config_;
  }
  scan_config_ = NULL;
}
inline const ::google::devtools::containeranalysis::v1beta1::ScanConfig& UpdateScanConfigRequest::_internal_scan_config() const {
  return *scan_config_;
}
inline const ::google::devtools::containeranalysis::v1beta1::ScanConfig& UpdateScanConfigRequest::scan_config() const {
  const ::google::devtools::containeranalysis::v1beta1::ScanConfig* p = scan_config_;
  // @@protoc_insertion_point(field_get:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.scan_config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::containeranalysis::v1beta1::ScanConfig*>(
      &::google::devtools::containeranalysis::v1beta1::_ScanConfig_default_instance_);
}
inline ::google::devtools::containeranalysis::v1beta1::ScanConfig* UpdateScanConfigRequest::release_scan_config() {
  // @@protoc_insertion_point(field_release:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.scan_config)
  
  ::google::devtools::containeranalysis::v1beta1::ScanConfig* temp = scan_config_;
  scan_config_ = NULL;
  return temp;
}
inline ::google::devtools::containeranalysis::v1beta1::ScanConfig* UpdateScanConfigRequest::mutable_scan_config() {
  
  if (scan_config_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::containeranalysis::v1beta1::ScanConfig>(GetArenaNoVirtual());
    scan_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.scan_config)
  return scan_config_;
}
inline void UpdateScanConfigRequest::set_allocated_scan_config(::google::devtools::containeranalysis::v1beta1::ScanConfig* scan_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete scan_config_;
  }
  if (scan_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scan_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scan_config, submessage_arena);
    }
    
  } else {
    
  }
  scan_config_ = scan_config;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.scan_config)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace containeranalysis
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto
