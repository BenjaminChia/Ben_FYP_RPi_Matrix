// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/containeranalysis/v1beta1/containeranalysis.proto

#include "google/devtools/containeranalysis/v1beta1/containeranalysis.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ScanConfig;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace devtools {
namespace containeranalysis {
namespace v1beta1 {
class ScanConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScanConfig>
      _instance;
} _ScanConfig_default_instance_;
class GetScanConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetScanConfigRequest>
      _instance;
} _GetScanConfigRequest_default_instance_;
class ListScanConfigsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListScanConfigsRequest>
      _instance;
} _ListScanConfigsRequest_default_instance_;
class ListScanConfigsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListScanConfigsResponse>
      _instance;
} _ListScanConfigsResponse_default_instance_;
class UpdateScanConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateScanConfigRequest>
      _instance;
} _UpdateScanConfigRequest_default_instance_;
}  // namespace v1beta1
}  // namespace containeranalysis
}  // namespace devtools
}  // namespace google
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto {
static void InitDefaultsScanConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1beta1::_ScanConfig_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1beta1::ScanConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1beta1::ScanConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScanConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScanConfig}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsGetScanConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1beta1::_GetScanConfigRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1beta1::GetScanConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1beta1::GetScanConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetScanConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetScanConfigRequest}, {}};

static void InitDefaultsListScanConfigsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1beta1::_ListScanConfigsRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1beta1::ListScanConfigsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1beta1::ListScanConfigsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListScanConfigsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListScanConfigsRequest}, {}};

static void InitDefaultsListScanConfigsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1beta1::_ListScanConfigsResponse_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1beta1::ListScanConfigsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1beta1::ListScanConfigsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListScanConfigsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListScanConfigsResponse}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::scc_info_ScanConfig.base,}};

static void InitDefaultsUpdateScanConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1beta1::_UpdateScanConfigRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1beta1::UpdateScanConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1beta1::UpdateScanConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateScanConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateScanConfigRequest}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::scc_info_ScanConfig.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ScanConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetScanConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListScanConfigsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListScanConfigsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateScanConfigRequest.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ScanConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ScanConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ScanConfig, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ScanConfig, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ScanConfig, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ScanConfig, update_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::GetScanConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::GetScanConfigRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ListScanConfigsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ListScanConfigsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ListScanConfigsRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ListScanConfigsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ListScanConfigsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ListScanConfigsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ListScanConfigsResponse, scan_configs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::ListScanConfigsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::UpdateScanConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::UpdateScanConfigRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1beta1::UpdateScanConfigRequest, scan_config_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::devtools::containeranalysis::v1beta1::ScanConfig)},
  { 10, -1, sizeof(::google::devtools::containeranalysis::v1beta1::GetScanConfigRequest)},
  { 16, -1, sizeof(::google::devtools::containeranalysis::v1beta1::ListScanConfigsRequest)},
  { 25, -1, sizeof(::google::devtools::containeranalysis::v1beta1::ListScanConfigsResponse)},
  { 32, -1, sizeof(::google::devtools::containeranalysis::v1beta1::UpdateScanConfigRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1beta1::_ScanConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1beta1::_GetScanConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1beta1::_ListScanConfigsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1beta1::_ListScanConfigsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1beta1::_UpdateScanConfigRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/devtools/containeranalysis/v1beta1/containeranalysis.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nAgoogle/devtools/containeranalysis/v1be"
      "ta1/containeranalysis.proto\022)google.devt"
      "ools.containeranalysis.v1beta1\032\034google/a"
      "pi/annotations.proto\032\036google/iam/v1/iam_"
      "policy.proto\032\032google/iam/v1/policy.proto"
      "\032\037google/protobuf/timestamp.proto\"\242\001\n\nSc"
      "anConfig\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 "
      "\001(\t\022\017\n\007enabled\030\003 \001(\010\022/\n\013create_time\030\004 \001("
      "\0132\032.google.protobuf.Timestamp\022/\n\013update_"
      "time\030\005 \001(\0132\032.google.protobuf.Timestamp\"$"
      "\n\024GetScanConfigRequest\022\014\n\004name\030\001 \001(\t\"_\n\026"
      "ListScanConfigsRequest\022\016\n\006parent\030\001 \001(\t\022\016"
      "\n\006filter\030\002 \001(\t\022\021\n\tpage_size\030\003 \001(\005\022\022\n\npag"
      "e_token\030\004 \001(\t\"\177\n\027ListScanConfigsResponse"
      "\022K\n\014scan_configs\030\001 \003(\01325.google.devtools"
      ".containeranalysis.v1beta1.ScanConfig\022\027\n"
      "\017next_page_token\030\002 \001(\t\"s\n\027UpdateScanConf"
      "igRequest\022\014\n\004name\030\001 \001(\t\022J\n\013scan_config\030\002"
      " \001(\01325.google.devtools.containeranalysis"
      ".v1beta1.ScanConfig2\204\n\n\030ContainerAnalysi"
      "sV1Beta1\022\311\001\n\014SetIamPolicy\022\".google.iam.v"
      "1.SetIamPolicyRequest\032\025.google.iam.v1.Po"
      "licy\"~\202\323\344\223\002x\"3/v1beta1/{resource=project"
      "s/*/notes/*}:setIamPolicy:\001*Z>\"9/v1beta1"
      "/{resource=projects/*/occurrences/*}:set"
      "IamPolicy:\001*\022\311\001\n\014GetIamPolicy\022\".google.i"
      "am.v1.GetIamPolicyRequest\032\025.google.iam.v"
      "1.Policy\"~\202\323\344\223\002x\"3/v1beta1/{resource=pro"
      "jects/*/notes/*}:getIamPolicy:\001*Z>\"9/v1b"
      "eta1/{resource=projects/*/occurrences/*}"
      ":getIamPolicy:\001*\022\367\001\n\022TestIamPermissions\022"
      "(.google.iam.v1.TestIamPermissionsReques"
      "t\032).google.iam.v1.TestIamPermissionsResp"
      "onse\"\213\001\202\323\344\223\002\204\001\"9/v1beta1/{resource=proje"
      "cts/*/notes/*}:testIamPermissions:\001*ZD\"\?"
      "/v1beta1/{resource=projects/*/occurrence"
      "s/*}:testIamPermissions:\001*\022\271\001\n\rGetScanCo"
      "nfig\022\?.google.devtools.containeranalysis"
      ".v1beta1.GetScanConfigRequest\0325.google.d"
      "evtools.containeranalysis.v1beta1.ScanCo"
      "nfig\"0\202\323\344\223\002*\022(/v1beta1/{name=projects/*/"
      "scanConfigs/*}\022\312\001\n\017ListScanConfigs\022A.goo"
      "gle.devtools.containeranalysis.v1beta1.L"
      "istScanConfigsRequest\032B.google.devtools."
      "containeranalysis.v1beta1.ListScanConfig"
      "sResponse\"0\202\323\344\223\002*\022(/v1beta1/{parent=proj"
      "ects/*}/scanConfigs\022\314\001\n\020UpdateScanConfig"
      "\022B.google.devtools.containeranalysis.v1b"
      "eta1.UpdateScanConfigRequest\0325.google.de"
      "vtools.containeranalysis.v1beta1.ScanCon"
      "fig\"=\202\323\344\223\0027\032(/v1beta1/{name=projects/*/s"
      "canConfigs/*}:\013scan_configB\212\001\n$com.googl"
      "e.containeranalysis.v1beta1P\001ZZgoogle.go"
      "lang.org/genproto/googleapis/devtools/co"
      "ntaineranalysis/v1beta1;containeranalysi"
      "s\242\002\003GCAb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2215);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/containeranalysis/v1beta1/containeranalysis.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fiam_2fv1_2fiam_5fpolicy_2eproto::AddDescriptors();
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto
namespace google {
namespace devtools {
namespace containeranalysis {
namespace v1beta1 {

// ===================================================================

void ScanConfig::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1beta1::_ScanConfig_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::containeranalysis::v1beta1::_ScanConfig_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void ScanConfig::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void ScanConfig::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanConfig::kNameFieldNumber;
const int ScanConfig::kDescriptionFieldNumber;
const int ScanConfig::kEnabledFieldNumber;
const int ScanConfig::kCreateTimeFieldNumber;
const int ScanConfig::kUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanConfig::ScanConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::scc_info_ScanConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1beta1.ScanConfig)
}
ScanConfig::ScanConfig(const ScanConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = NULL;
  }
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1beta1.ScanConfig)
}

void ScanConfig::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(enabled_));
}

ScanConfig::~ScanConfig() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1beta1.ScanConfig)
  SharedDtor();
}

void ScanConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void ScanConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScanConfig::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanConfig& ScanConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::scc_info_ScanConfig.base);
  return *internal_default_instance();
}


void ScanConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1beta1.ScanConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
  enabled_ = false;
  _internal_metadata_.Clear();
}

bool ScanConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1beta1.ScanConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1beta1.ScanConfig.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1beta1.ScanConfig.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enabled = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1beta1.ScanConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1beta1.ScanConfig)
  return false;
#undef DO_
}

void ScanConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1beta1.ScanConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.ScanConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.ScanConfig.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // bool enabled = 3;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enabled(), output);
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_create_time(), output);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_update_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1beta1.ScanConfig)
}

::google::protobuf::uint8* ScanConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1beta1.ScanConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.ScanConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.ScanConfig.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // bool enabled = 3;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enabled(), target);
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_create_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_update_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1beta1.ScanConfig)
  return target;
}

size_t ScanConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1beta1.ScanConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // bool enabled = 3;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1beta1.ScanConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1beta1.ScanConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1beta1.ScanConfig)
    MergeFrom(*source);
  }
}

void ScanConfig::MergeFrom(const ScanConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1beta1.ScanConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void ScanConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1beta1.ScanConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanConfig::CopyFrom(const ScanConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1beta1.ScanConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanConfig::IsInitialized() const {
  return true;
}

void ScanConfig::Swap(ScanConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanConfig::InternalSwap(ScanConfig* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(enabled_, other->enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScanConfig::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetScanConfigRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetScanConfigRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetScanConfigRequest::GetScanConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::scc_info_GetScanConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
}
GetScanConfigRequest::GetScanConfigRequest(const GetScanConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
}

void GetScanConfigRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetScanConfigRequest::~GetScanConfigRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
  SharedDtor();
}

void GetScanConfigRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetScanConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetScanConfigRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetScanConfigRequest& GetScanConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::scc_info_GetScanConfigRequest.base);
  return *internal_default_instance();
}


void GetScanConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetScanConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1beta1.GetScanConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
  return false;
#undef DO_
}

void GetScanConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.GetScanConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
}

::google::protobuf::uint8* GetScanConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.GetScanConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
  return target;
}

size_t GetScanConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetScanConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetScanConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetScanConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
    MergeFrom(*source);
  }
}

void GetScanConfigRequest::MergeFrom(const GetScanConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetScanConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetScanConfigRequest::CopyFrom(const GetScanConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1beta1.GetScanConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetScanConfigRequest::IsInitialized() const {
  return true;
}

void GetScanConfigRequest::Swap(GetScanConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetScanConfigRequest::InternalSwap(GetScanConfigRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetScanConfigRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListScanConfigsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListScanConfigsRequest::kParentFieldNumber;
const int ListScanConfigsRequest::kFilterFieldNumber;
const int ListScanConfigsRequest::kPageSizeFieldNumber;
const int ListScanConfigsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListScanConfigsRequest::ListScanConfigsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::scc_info_ListScanConfigsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
}
ListScanConfigsRequest::ListScanConfigsRequest(const ListScanConfigsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
}

void ListScanConfigsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListScanConfigsRequest::~ListScanConfigsRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
  SharedDtor();
}

void ListScanConfigsRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListScanConfigsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListScanConfigsRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListScanConfigsRequest& ListScanConfigsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::scc_info_ListScanConfigsRequest.base);
  return *internal_default_instance();
}


void ListScanConfigsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListScanConfigsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
  return false;
#undef DO_
}

void ListScanConfigsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
}

::google::protobuf::uint8* ListScanConfigsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
  return target;
}

size_t ListScanConfigsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListScanConfigsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListScanConfigsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListScanConfigsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
    MergeFrom(*source);
  }
}

void ListScanConfigsRequest::MergeFrom(const ListScanConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListScanConfigsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListScanConfigsRequest::CopyFrom(const ListScanConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListScanConfigsRequest::IsInitialized() const {
  return true;
}

void ListScanConfigsRequest::Swap(ListScanConfigsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListScanConfigsRequest::InternalSwap(ListScanConfigsRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListScanConfigsRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListScanConfigsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListScanConfigsResponse::kScanConfigsFieldNumber;
const int ListScanConfigsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListScanConfigsResponse::ListScanConfigsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::scc_info_ListScanConfigsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
}
ListScanConfigsResponse::ListScanConfigsResponse(const ListScanConfigsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scan_configs_(from.scan_configs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
}

void ListScanConfigsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListScanConfigsResponse::~ListScanConfigsResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
  SharedDtor();
}

void ListScanConfigsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListScanConfigsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListScanConfigsResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListScanConfigsResponse& ListScanConfigsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::scc_info_ListScanConfigsResponse.base);
  return *internal_default_instance();
}


void ListScanConfigsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scan_configs_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListScanConfigsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.containeranalysis.v1beta1.ScanConfig scan_configs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_scan_configs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
  return false;
#undef DO_
}

void ListScanConfigsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1beta1.ScanConfig scan_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scan_configs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->scan_configs(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
}

::google::protobuf::uint8* ListScanConfigsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1beta1.ScanConfig scan_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scan_configs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->scan_configs(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
  return target;
}

size_t ListScanConfigsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.containeranalysis.v1beta1.ScanConfig scan_configs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->scan_configs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->scan_configs(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListScanConfigsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListScanConfigsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListScanConfigsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
    MergeFrom(*source);
  }
}

void ListScanConfigsResponse::MergeFrom(const ListScanConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scan_configs_.MergeFrom(from.scan_configs_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListScanConfigsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListScanConfigsResponse::CopyFrom(const ListScanConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1beta1.ListScanConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListScanConfigsResponse::IsInitialized() const {
  return true;
}

void ListScanConfigsResponse::Swap(ListScanConfigsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListScanConfigsResponse::InternalSwap(ListScanConfigsResponse* other) {
  using std::swap;
  CastToBase(&scan_configs_)->InternalSwap(CastToBase(&other->scan_configs_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListScanConfigsResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateScanConfigRequest::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1beta1::_UpdateScanConfigRequest_default_instance_._instance.get_mutable()->scan_config_ = const_cast< ::google::devtools::containeranalysis::v1beta1::ScanConfig*>(
      ::google::devtools::containeranalysis::v1beta1::ScanConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateScanConfigRequest::kNameFieldNumber;
const int UpdateScanConfigRequest::kScanConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateScanConfigRequest::UpdateScanConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::scc_info_UpdateScanConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
}
UpdateScanConfigRequest::UpdateScanConfigRequest(const UpdateScanConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_scan_config()) {
    scan_config_ = new ::google::devtools::containeranalysis::v1beta1::ScanConfig(*from.scan_config_);
  } else {
    scan_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
}

void UpdateScanConfigRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scan_config_ = NULL;
}

UpdateScanConfigRequest::~UpdateScanConfigRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
  SharedDtor();
}

void UpdateScanConfigRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete scan_config_;
}

void UpdateScanConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateScanConfigRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateScanConfigRequest& UpdateScanConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::scc_info_UpdateScanConfigRequest.base);
  return *internal_default_instance();
}


void UpdateScanConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && scan_config_ != NULL) {
    delete scan_config_;
  }
  scan_config_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateScanConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1beta1.ScanConfig scan_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scan_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
  return false;
#undef DO_
}

void UpdateScanConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.devtools.containeranalysis.v1beta1.ScanConfig scan_config = 2;
  if (this->has_scan_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_scan_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
}

::google::protobuf::uint8* UpdateScanConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.devtools.containeranalysis.v1beta1.ScanConfig scan_config = 2;
  if (this->has_scan_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_scan_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
  return target;
}

size_t UpdateScanConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.devtools.containeranalysis.v1beta1.ScanConfig scan_config = 2;
  if (this->has_scan_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scan_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateScanConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateScanConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateScanConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
    MergeFrom(*source);
  }
}

void UpdateScanConfigRequest::MergeFrom(const UpdateScanConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_scan_config()) {
    mutable_scan_config()->::google::devtools::containeranalysis::v1beta1::ScanConfig::MergeFrom(from.scan_config());
  }
}

void UpdateScanConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateScanConfigRequest::CopyFrom(const UpdateScanConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1beta1.UpdateScanConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateScanConfigRequest::IsInitialized() const {
  return true;
}

void UpdateScanConfigRequest::Swap(UpdateScanConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateScanConfigRequest::InternalSwap(UpdateScanConfigRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(scan_config_, other->scan_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateScanConfigRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace containeranalysis
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1beta1::ScanConfig* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1beta1::ScanConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1beta1::ScanConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1beta1::GetScanConfigRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1beta1::GetScanConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1beta1::GetScanConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1beta1::ListScanConfigsRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1beta1::ListScanConfigsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1beta1::ListScanConfigsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1beta1::ListScanConfigsResponse* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1beta1::ListScanConfigsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1beta1::ListScanConfigsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1beta1::UpdateScanConfigRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1beta1::UpdateScanConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1beta1::UpdateScanConfigRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
