// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/containeranalysis/v1beta1/grafeas/grafeas.proto

#include "google/devtools/containeranalysis/v1beta1/grafeas/grafeas.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fattestation_2fattestation_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fattestation_2fattestation_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Authority;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fattestation_2fattestation_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Details;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fattestation_2fattestation_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fbuild_2fbuild_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fbuild_2fbuild_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Build;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fbuild_2fbuild_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Details;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fbuild_2fbuild_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcommon_2fcommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcommon_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RelatedUrl;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcommon_2fcommon_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Deployable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Details;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Discovery;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Details;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BatchCreateNotesRequest_NotesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Resource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VulnerabilityOccurrencesSummary_FixableTotalByDigest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_Note;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_Occurrence;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fimage_2fimage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fimage_2fimage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Basis;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fimage_2fimage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Details;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fimage_2fimage_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fpackage_2fpackage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fpackage_2fpackage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Details;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fpackage_2fpackage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Package;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fpackage_2fpackage_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fprovenance_2fprovenance_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fprovenance_2fprovenance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Hash;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fprovenance_2fprovenance_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Vulnerability;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Details;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace grafeas {
namespace v1beta1 {
class OccurrenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Occurrence>
      _instance;
  const ::grafeas::v1beta1::vulnerability::Details* vulnerability_;
  const ::grafeas::v1beta1::build::Details* build_;
  const ::grafeas::v1beta1::image::Details* derived_image_;
  const ::grafeas::v1beta1::package::Details* installation_;
  const ::grafeas::v1beta1::deployment::Details* deployment_;
  const ::grafeas::v1beta1::discovery::Details* discovered_;
  const ::grafeas::v1beta1::attestation::Details* attestation_;
} _Occurrence_default_instance_;
class ResourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Resource>
      _instance;
} _Resource_default_instance_;
class NoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Note>
      _instance;
  const ::grafeas::v1beta1::vulnerability::Vulnerability* vulnerability_;
  const ::grafeas::v1beta1::build::Build* build_;
  const ::grafeas::v1beta1::image::Basis* base_image_;
  const ::grafeas::v1beta1::package::Package* package_;
  const ::grafeas::v1beta1::deployment::Deployable* deployable_;
  const ::grafeas::v1beta1::discovery::Discovery* discovery_;
  const ::grafeas::v1beta1::attestation::Authority* attestation_authority_;
} _Note_default_instance_;
class GetOccurrenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOccurrenceRequest>
      _instance;
} _GetOccurrenceRequest_default_instance_;
class ListOccurrencesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListOccurrencesRequest>
      _instance;
} _ListOccurrencesRequest_default_instance_;
class ListOccurrencesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListOccurrencesResponse>
      _instance;
} _ListOccurrencesResponse_default_instance_;
class DeleteOccurrenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteOccurrenceRequest>
      _instance;
} _DeleteOccurrenceRequest_default_instance_;
class CreateOccurrenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateOccurrenceRequest>
      _instance;
} _CreateOccurrenceRequest_default_instance_;
class UpdateOccurrenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateOccurrenceRequest>
      _instance;
} _UpdateOccurrenceRequest_default_instance_;
class GetNoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetNoteRequest>
      _instance;
} _GetNoteRequest_default_instance_;
class GetOccurrenceNoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOccurrenceNoteRequest>
      _instance;
} _GetOccurrenceNoteRequest_default_instance_;
class ListNotesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNotesRequest>
      _instance;
} _ListNotesRequest_default_instance_;
class ListNotesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNotesResponse>
      _instance;
} _ListNotesResponse_default_instance_;
class DeleteNoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteNoteRequest>
      _instance;
} _DeleteNoteRequest_default_instance_;
class CreateNoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateNoteRequest>
      _instance;
} _CreateNoteRequest_default_instance_;
class UpdateNoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateNoteRequest>
      _instance;
} _UpdateNoteRequest_default_instance_;
class ListNoteOccurrencesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNoteOccurrencesRequest>
      _instance;
} _ListNoteOccurrencesRequest_default_instance_;
class ListNoteOccurrencesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNoteOccurrencesResponse>
      _instance;
} _ListNoteOccurrencesResponse_default_instance_;
class BatchCreateNotesRequest_NotesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchCreateNotesRequest_NotesEntry_DoNotUse>
      _instance;
} _BatchCreateNotesRequest_NotesEntry_DoNotUse_default_instance_;
class BatchCreateNotesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchCreateNotesRequest>
      _instance;
} _BatchCreateNotesRequest_default_instance_;
class BatchCreateNotesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchCreateNotesResponse>
      _instance;
} _BatchCreateNotesResponse_default_instance_;
class BatchCreateOccurrencesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchCreateOccurrencesRequest>
      _instance;
} _BatchCreateOccurrencesRequest_default_instance_;
class BatchCreateOccurrencesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchCreateOccurrencesResponse>
      _instance;
} _BatchCreateOccurrencesResponse_default_instance_;
class GetVulnerabilityOccurrencesSummaryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVulnerabilityOccurrencesSummaryRequest>
      _instance;
} _GetVulnerabilityOccurrencesSummaryRequest_default_instance_;
class VulnerabilityOccurrencesSummary_FixableTotalByDigestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VulnerabilityOccurrencesSummary_FixableTotalByDigest>
      _instance;
} _VulnerabilityOccurrencesSummary_FixableTotalByDigest_default_instance_;
class VulnerabilityOccurrencesSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VulnerabilityOccurrencesSummary>
      _instance;
} _VulnerabilityOccurrencesSummary_default_instance_;
}  // namespace v1beta1
}  // namespace grafeas
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto {
static void InitDefaultsOccurrence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_Occurrence_default_instance_;
    new (ptr) ::grafeas::v1beta1::Occurrence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::Occurrence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_Occurrence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsOccurrence}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Resource.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_Details.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fbuild_2fbuild_2eproto::scc_info_Details.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fimage_2fimage_2eproto::scc_info_Details.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fpackage_2fpackage_2eproto::scc_info_Details.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto::scc_info_Details.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::scc_info_Details.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fattestation_2fattestation_2eproto::scc_info_Details.base,}};

static void InitDefaultsResource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_Resource_default_instance_;
    new (ptr) ::grafeas::v1beta1::Resource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::Resource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Resource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResource}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fprovenance_2fprovenance_2eproto::scc_info_Hash.base,}};

static void InitDefaultsNote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_Note_default_instance_;
    new (ptr) ::grafeas::v1beta1::Note();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::Note::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_Note =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsNote}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcommon_2fcommon_2eproto::scc_info_RelatedUrl.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_Vulnerability.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fbuild_2fbuild_2eproto::scc_info_Build.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fimage_2fimage_2eproto::scc_info_Basis.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fpackage_2fpackage_2eproto::scc_info_Package.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto::scc_info_Deployable.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::scc_info_Discovery.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fattestation_2fattestation_2eproto::scc_info_Authority.base,}};

static void InitDefaultsGetOccurrenceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_GetOccurrenceRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::GetOccurrenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::GetOccurrenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetOccurrenceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetOccurrenceRequest}, {}};

static void InitDefaultsListOccurrencesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_ListOccurrencesRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::ListOccurrencesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::ListOccurrencesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListOccurrencesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListOccurrencesRequest}, {}};

static void InitDefaultsListOccurrencesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_ListOccurrencesResponse_default_instance_;
    new (ptr) ::grafeas::v1beta1::ListOccurrencesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::ListOccurrencesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListOccurrencesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListOccurrencesResponse}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Occurrence.base,}};

static void InitDefaultsDeleteOccurrenceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_DeleteOccurrenceRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::DeleteOccurrenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::DeleteOccurrenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteOccurrenceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteOccurrenceRequest}, {}};

static void InitDefaultsCreateOccurrenceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_CreateOccurrenceRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::CreateOccurrenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::CreateOccurrenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateOccurrenceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateOccurrenceRequest}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Occurrence.base,}};

static void InitDefaultsUpdateOccurrenceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_UpdateOccurrenceRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::UpdateOccurrenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::UpdateOccurrenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateOccurrenceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateOccurrenceRequest}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Occurrence.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

static void InitDefaultsGetNoteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_GetNoteRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::GetNoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::GetNoteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetNoteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetNoteRequest}, {}};

static void InitDefaultsGetOccurrenceNoteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_GetOccurrenceNoteRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::GetOccurrenceNoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::GetOccurrenceNoteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetOccurrenceNoteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetOccurrenceNoteRequest}, {}};

static void InitDefaultsListNotesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_ListNotesRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::ListNotesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::ListNotesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListNotesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListNotesRequest}, {}};

static void InitDefaultsListNotesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_ListNotesResponse_default_instance_;
    new (ptr) ::grafeas::v1beta1::ListNotesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::ListNotesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListNotesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListNotesResponse}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Note.base,}};

static void InitDefaultsDeleteNoteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_DeleteNoteRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::DeleteNoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::DeleteNoteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteNoteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteNoteRequest}, {}};

static void InitDefaultsCreateNoteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_CreateNoteRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::CreateNoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::CreateNoteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateNoteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateNoteRequest}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Note.base,}};

static void InitDefaultsUpdateNoteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_UpdateNoteRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::UpdateNoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::UpdateNoteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateNoteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateNoteRequest}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Note.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

static void InitDefaultsListNoteOccurrencesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_ListNoteOccurrencesRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::ListNoteOccurrencesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::ListNoteOccurrencesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListNoteOccurrencesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListNoteOccurrencesRequest}, {}};

static void InitDefaultsListNoteOccurrencesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_ListNoteOccurrencesResponse_default_instance_;
    new (ptr) ::grafeas::v1beta1::ListNoteOccurrencesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::ListNoteOccurrencesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListNoteOccurrencesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListNoteOccurrencesResponse}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Occurrence.base,}};

static void InitDefaultsBatchCreateNotesRequest_NotesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_BatchCreateNotesRequest_NotesEntry_DoNotUse_default_instance_;
    new (ptr) ::grafeas::v1beta1::BatchCreateNotesRequest_NotesEntry_DoNotUse();
  }
  ::grafeas::v1beta1::BatchCreateNotesRequest_NotesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BatchCreateNotesRequest_NotesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBatchCreateNotesRequest_NotesEntry_DoNotUse}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Note.base,}};

static void InitDefaultsBatchCreateNotesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_BatchCreateNotesRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::BatchCreateNotesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::BatchCreateNotesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BatchCreateNotesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBatchCreateNotesRequest}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_BatchCreateNotesRequest_NotesEntry_DoNotUse.base,}};

static void InitDefaultsBatchCreateNotesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_BatchCreateNotesResponse_default_instance_;
    new (ptr) ::grafeas::v1beta1::BatchCreateNotesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::BatchCreateNotesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BatchCreateNotesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBatchCreateNotesResponse}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Note.base,}};

static void InitDefaultsBatchCreateOccurrencesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_BatchCreateOccurrencesRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::BatchCreateOccurrencesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::BatchCreateOccurrencesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BatchCreateOccurrencesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBatchCreateOccurrencesRequest}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Occurrence.base,}};

static void InitDefaultsBatchCreateOccurrencesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_BatchCreateOccurrencesResponse_default_instance_;
    new (ptr) ::grafeas::v1beta1::BatchCreateOccurrencesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::BatchCreateOccurrencesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BatchCreateOccurrencesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBatchCreateOccurrencesResponse}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Occurrence.base,}};

static void InitDefaultsGetVulnerabilityOccurrencesSummaryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_GetVulnerabilityOccurrencesSummaryRequest_default_instance_;
    new (ptr) ::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetVulnerabilityOccurrencesSummaryRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetVulnerabilityOccurrencesSummaryRequest}, {}};

static void InitDefaultsVulnerabilityOccurrencesSummary_FixableTotalByDigest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_VulnerabilityOccurrencesSummary_FixableTotalByDigest_default_instance_;
    new (ptr) ::grafeas::v1beta1::VulnerabilityOccurrencesSummary_FixableTotalByDigest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::VulnerabilityOccurrencesSummary_FixableTotalByDigest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VulnerabilityOccurrencesSummary_FixableTotalByDigest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVulnerabilityOccurrencesSummary_FixableTotalByDigest}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Resource.base,}};

static void InitDefaultsVulnerabilityOccurrencesSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::_VulnerabilityOccurrencesSummary_default_instance_;
    new (ptr) ::grafeas::v1beta1::VulnerabilityOccurrencesSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::VulnerabilityOccurrencesSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VulnerabilityOccurrencesSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVulnerabilityOccurrencesSummary}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_VulnerabilityOccurrencesSummary_FixableTotalByDigest.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Occurrence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Resource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Note.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetOccurrenceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListOccurrencesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListOccurrencesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteOccurrenceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateOccurrenceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateOccurrenceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetNoteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetOccurrenceNoteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNotesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNotesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteNoteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateNoteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateNoteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNoteOccurrencesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNoteOccurrencesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchCreateNotesRequest_NotesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchCreateNotesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchCreateNotesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchCreateOccurrencesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchCreateOccurrencesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVulnerabilityOccurrencesSummaryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VulnerabilityOccurrencesSummary_FixableTotalByDigest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VulnerabilityOccurrencesSummary.base);
}

::google::protobuf::Metadata file_level_metadata[26];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Occurrence, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Occurrence, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Occurrence, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Occurrence, resource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Occurrence, note_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Occurrence, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Occurrence, remediation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Occurrence, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Occurrence, update_time_),
  offsetof(::grafeas::v1beta1::OccurrenceDefaultTypeInternal, vulnerability_),
  offsetof(::grafeas::v1beta1::OccurrenceDefaultTypeInternal, build_),
  offsetof(::grafeas::v1beta1::OccurrenceDefaultTypeInternal, derived_image_),
  offsetof(::grafeas::v1beta1::OccurrenceDefaultTypeInternal, installation_),
  offsetof(::grafeas::v1beta1::OccurrenceDefaultTypeInternal, deployment_),
  offsetof(::grafeas::v1beta1::OccurrenceDefaultTypeInternal, discovered_),
  offsetof(::grafeas::v1beta1::OccurrenceDefaultTypeInternal, attestation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Occurrence, details_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Resource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Resource, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Resource, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Resource, content_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Note, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Note, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Note, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Note, short_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Note, long_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Note, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Note, related_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Note, expiration_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Note, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Note, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Note, related_note_names_),
  offsetof(::grafeas::v1beta1::NoteDefaultTypeInternal, vulnerability_),
  offsetof(::grafeas::v1beta1::NoteDefaultTypeInternal, build_),
  offsetof(::grafeas::v1beta1::NoteDefaultTypeInternal, base_image_),
  offsetof(::grafeas::v1beta1::NoteDefaultTypeInternal, package_),
  offsetof(::grafeas::v1beta1::NoteDefaultTypeInternal, deployable_),
  offsetof(::grafeas::v1beta1::NoteDefaultTypeInternal, discovery_),
  offsetof(::grafeas::v1beta1::NoteDefaultTypeInternal, attestation_authority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::Note, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::GetOccurrenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::GetOccurrenceRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListOccurrencesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListOccurrencesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListOccurrencesRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListOccurrencesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListOccurrencesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListOccurrencesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListOccurrencesResponse, occurrences_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListOccurrencesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::DeleteOccurrenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::DeleteOccurrenceRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::CreateOccurrenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::CreateOccurrenceRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::CreateOccurrenceRequest, occurrence_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::UpdateOccurrenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::UpdateOccurrenceRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::UpdateOccurrenceRequest, occurrence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::UpdateOccurrenceRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::GetNoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::GetNoteRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::GetOccurrenceNoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::GetOccurrenceNoteRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNotesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNotesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNotesRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNotesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNotesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNotesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNotesResponse, notes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNotesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::DeleteNoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::DeleteNoteRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::CreateNoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::CreateNoteRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::CreateNoteRequest, note_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::CreateNoteRequest, note_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::UpdateNoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::UpdateNoteRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::UpdateNoteRequest, note_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::UpdateNoteRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNoteOccurrencesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNoteOccurrencesRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNoteOccurrencesRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNoteOccurrencesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNoteOccurrencesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNoteOccurrencesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNoteOccurrencesResponse, occurrences_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::ListNoteOccurrencesResponse, next_page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateNotesRequest_NotesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateNotesRequest_NotesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateNotesRequest_NotesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateNotesRequest_NotesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateNotesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateNotesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateNotesRequest, notes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateNotesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateNotesResponse, notes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateOccurrencesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateOccurrencesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateOccurrencesRequest, occurrences_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateOccurrencesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::BatchCreateOccurrencesResponse, occurrences_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest, filter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::VulnerabilityOccurrencesSummary_FixableTotalByDigest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::VulnerabilityOccurrencesSummary_FixableTotalByDigest, resource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::VulnerabilityOccurrencesSummary_FixableTotalByDigest, severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::VulnerabilityOccurrencesSummary_FixableTotalByDigest, fixable_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::VulnerabilityOccurrencesSummary_FixableTotalByDigest, total_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::VulnerabilityOccurrencesSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::VulnerabilityOccurrencesSummary, counts_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grafeas::v1beta1::Occurrence)},
  { 20, -1, sizeof(::grafeas::v1beta1::Resource)},
  { 28, -1, sizeof(::grafeas::v1beta1::Note)},
  { 50, -1, sizeof(::grafeas::v1beta1::GetOccurrenceRequest)},
  { 56, -1, sizeof(::grafeas::v1beta1::ListOccurrencesRequest)},
  { 65, -1, sizeof(::grafeas::v1beta1::ListOccurrencesResponse)},
  { 72, -1, sizeof(::grafeas::v1beta1::DeleteOccurrenceRequest)},
  { 78, -1, sizeof(::grafeas::v1beta1::CreateOccurrenceRequest)},
  { 85, -1, sizeof(::grafeas::v1beta1::UpdateOccurrenceRequest)},
  { 93, -1, sizeof(::grafeas::v1beta1::GetNoteRequest)},
  { 99, -1, sizeof(::grafeas::v1beta1::GetOccurrenceNoteRequest)},
  { 105, -1, sizeof(::grafeas::v1beta1::ListNotesRequest)},
  { 114, -1, sizeof(::grafeas::v1beta1::ListNotesResponse)},
  { 121, -1, sizeof(::grafeas::v1beta1::DeleteNoteRequest)},
  { 127, -1, sizeof(::grafeas::v1beta1::CreateNoteRequest)},
  { 135, -1, sizeof(::grafeas::v1beta1::UpdateNoteRequest)},
  { 143, -1, sizeof(::grafeas::v1beta1::ListNoteOccurrencesRequest)},
  { 152, -1, sizeof(::grafeas::v1beta1::ListNoteOccurrencesResponse)},
  { 159, 166, sizeof(::grafeas::v1beta1::BatchCreateNotesRequest_NotesEntry_DoNotUse)},
  { 168, -1, sizeof(::grafeas::v1beta1::BatchCreateNotesRequest)},
  { 175, -1, sizeof(::grafeas::v1beta1::BatchCreateNotesResponse)},
  { 181, -1, sizeof(::grafeas::v1beta1::BatchCreateOccurrencesRequest)},
  { 188, -1, sizeof(::grafeas::v1beta1::BatchCreateOccurrencesResponse)},
  { 194, -1, sizeof(::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest)},
  { 201, -1, sizeof(::grafeas::v1beta1::VulnerabilityOccurrencesSummary_FixableTotalByDigest)},
  { 210, -1, sizeof(::grafeas::v1beta1::VulnerabilityOccurrencesSummary)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_Occurrence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_Resource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_Note_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_GetOccurrenceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_ListOccurrencesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_ListOccurrencesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_DeleteOccurrenceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_CreateOccurrenceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_UpdateOccurrenceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_GetNoteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_GetOccurrenceNoteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_ListNotesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_ListNotesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_DeleteNoteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_CreateNoteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_UpdateNoteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_ListNoteOccurrencesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_ListNoteOccurrencesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_BatchCreateNotesRequest_NotesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_BatchCreateNotesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_BatchCreateNotesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_BatchCreateOccurrencesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_BatchCreateOccurrencesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_GetVulnerabilityOccurrencesSummaryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_VulnerabilityOccurrencesSummary_FixableTotalByDigest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::_VulnerabilityOccurrencesSummary_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/devtools/containeranalysis/v1beta1/grafeas/grafeas.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 26);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\?google/devtools/containeranalysis/v1be"
      "ta1/grafeas/grafeas.proto\022\017grafeas.v1bet"
      "a1\032\034google/api/annotations.proto\032Ggoogle"
      "/devtools/containeranalysis/v1beta1/atte"
      "station/attestation.proto\032;google/devtoo"
      "ls/containeranalysis/v1beta1/build/build"
      ".proto\032=google/devtools/containeranalysi"
      "s/v1beta1/common/common.proto\032Egoogle/de"
      "vtools/containeranalysis/v1beta1/deploym"
      "ent/deployment.proto\032Cgoogle/devtools/co"
      "ntaineranalysis/v1beta1/discovery/discov"
      "ery.proto\032;google/devtools/containeranal"
      "ysis/v1beta1/image/image.proto\032\?google/d"
      "evtools/containeranalysis/v1beta1/packag"
      "e/package.proto\032Egoogle/devtools/contain"
      "eranalysis/v1beta1/provenance/provenance"
      ".proto\032Kgoogle/devtools/containeranalysi"
      "s/v1beta1/vulnerability/vulnerability.pr"
      "oto\032\033google/protobuf/empty.proto\032 google"
      "/protobuf/field_mask.proto\032\037google/proto"
      "buf/timestamp.proto\"\234\005\n\nOccurrence\022\014\n\004na"
      "me\030\001 \001(\t\022+\n\010resource\030\002 \001(\0132\031.grafeas.v1b"
      "eta1.Resource\022\021\n\tnote_name\030\003 \001(\t\022\'\n\004kind"
      "\030\004 \001(\0162\031.grafeas.v1beta1.NoteKind\022\023\n\013rem"
      "ediation\030\005 \001(\t\022/\n\013create_time\030\006 \001(\0132\032.go"
      "ogle.protobuf.Timestamp\022/\n\013update_time\030\007"
      " \001(\0132\032.google.protobuf.Timestamp\022\?\n\rvuln"
      "erability\030\010 \001(\0132&.grafeas.v1beta1.vulner"
      "ability.DetailsH\000\022/\n\005build\030\t \001(\0132\036.grafe"
      "as.v1beta1.build.DetailsH\000\0227\n\rderived_im"
      "age\030\n \001(\0132\036.grafeas.v1beta1.image.Detail"
      "sH\000\0228\n\014installation\030\013 \001(\0132 .grafeas.v1be"
      "ta1.package.DetailsH\000\0229\n\ndeployment\030\014 \001("
      "\0132#.grafeas.v1beta1.deployment.DetailsH\000"
      "\0228\n\ndiscovered\030\r \001(\0132\".grafeas.v1beta1.d"
      "iscovery.DetailsH\000\022;\n\013attestation\030\016 \001(\0132"
      "$.grafeas.v1beta1.attestation.DetailsH\000B"
      "\t\n\007details\"]\n\010Resource\022\014\n\004name\030\001 \001(\t\022\013\n\003"
      "uri\030\002 \001(\t\0226\n\014content_hash\030\003 \001(\0132 .grafea"
      "s.v1beta1.provenance.Hash\"\200\006\n\004Note\022\014\n\004na"
      "me\030\001 \001(\t\022\031\n\021short_description\030\002 \001(\t\022\030\n\020l"
      "ong_description\030\003 \001(\t\022\'\n\004kind\030\004 \001(\0162\031.gr"
      "afeas.v1beta1.NoteKind\0220\n\013related_url\030\005 "
      "\003(\0132\033.grafeas.v1beta1.RelatedUrl\0223\n\017expi"
      "ration_time\030\006 \001(\0132\032.google.protobuf.Time"
      "stamp\022/\n\013create_time\030\007 \001(\0132\032.google.prot"
      "obuf.Timestamp\022/\n\013update_time\030\010 \001(\0132\032.go"
      "ogle.protobuf.Timestamp\022\032\n\022related_note_"
      "names\030\t \003(\t\022E\n\rvulnerability\030\n \001(\0132,.gra"
      "feas.v1beta1.vulnerability.Vulnerability"
      "H\000\022-\n\005build\030\013 \001(\0132\034.grafeas.v1beta1.buil"
      "d.BuildH\000\0222\n\nbase_image\030\014 \001(\0132\034.grafeas."
      "v1beta1.image.BasisH\000\0223\n\007package\030\r \001(\0132 "
      ".grafeas.v1beta1.package.PackageH\000\022<\n\nde"
      "ployable\030\016 \001(\0132&.grafeas.v1beta1.deploym"
      "ent.DeployableH\000\0229\n\tdiscovery\030\017 \001(\0132$.gr"
      "afeas.v1beta1.discovery.DiscoveryH\000\022G\n\025a"
      "ttestation_authority\030\020 \001(\0132&.grafeas.v1b"
      "eta1.attestation.AuthorityH\000B\006\n\004type\"$\n\024"
      "GetOccurrenceRequest\022\014\n\004name\030\001 \001(\t\"_\n\026Li"
      "stOccurrencesRequest\022\016\n\006parent\030\001 \001(\t\022\016\n\006"
      "filter\030\002 \001(\t\022\021\n\tpage_size\030\003 \001(\005\022\022\n\npage_"
      "token\030\004 \001(\t\"d\n\027ListOccurrencesResponse\0220"
      "\n\013occurrences\030\001 \003(\0132\033.grafeas.v1beta1.Oc"
      "currence\022\027\n\017next_page_token\030\002 \001(\t\"\'\n\027Del"
      "eteOccurrenceRequest\022\014\n\004name\030\001 \001(\t\"Z\n\027Cr"
      "eateOccurrenceRequest\022\016\n\006parent\030\001 \001(\t\022/\n"
      "\noccurrence\030\002 \001(\0132\033.grafeas.v1beta1.Occu"
      "rrence\"\211\001\n\027UpdateOccurrenceRequest\022\014\n\004na"
      "me\030\001 \001(\t\022/\n\noccurrence\030\002 \001(\0132\033.grafeas.v"
      "1beta1.Occurrence\022/\n\013update_mask\030\003 \001(\0132\032"
      ".google.protobuf.FieldMask\"\036\n\016GetNoteReq"
      "uest\022\014\n\004name\030\001 \001(\t\"(\n\030GetOccurrenceNoteR"
      "equest\022\014\n\004name\030\001 \001(\t\"Y\n\020ListNotesRequest"
      "\022\016\n\006parent\030\001 \001(\t\022\016\n\006filter\030\002 \001(\t\022\021\n\tpage"
      "_size\030\003 \001(\005\022\022\n\npage_token\030\004 \001(\t\"R\n\021ListN"
      "otesResponse\022$\n\005notes\030\001 \003(\0132\025.grafeas.v1"
      "beta1.Note\022\027\n\017next_page_token\030\002 \001(\t\"!\n\021D"
      "eleteNoteRequest\022\014\n\004name\030\001 \001(\t\"Y\n\021Create"
      "NoteRequest\022\016\n\006parent\030\001 \001(\t\022\017\n\007note_id\030\002"
      " \001(\t\022#\n\004note\030\003 \001(\0132\025.grafeas.v1beta1.Not"
      "e\"w\n\021UpdateNoteRequest\022\014\n\004name\030\001 \001(\t\022#\n\004"
      "note\030\002 \001(\0132\025.grafeas.v1beta1.Note\022/\n\013upd"
      "ate_mask\030\003 \001(\0132\032.google.protobuf.FieldMa"
      "sk\"a\n\032ListNoteOccurrencesRequest\022\014\n\004name"
      "\030\001 \001(\t\022\016\n\006filter\030\002 \001(\t\022\021\n\tpage_size\030\003 \001("
      "\005\022\022\n\npage_token\030\004 \001(\t\"h\n\033ListNoteOccurre"
      "ncesResponse\0220\n\013occurrences\030\001 \003(\0132\033.graf"
      "eas.v1beta1.Occurrence\022\027\n\017next_page_toke"
      "n\030\002 \001(\t\"\262\001\n\027BatchCreateNotesRequest\022\016\n\006p"
      "arent\030\001 \001(\t\022B\n\005notes\030\002 \003(\01323.grafeas.v1b"
      "eta1.BatchCreateNotesRequest.NotesEntry\032"
      "C\n\nNotesEntry\022\013\n\003key\030\001 \001(\t\022$\n\005value\030\002 \001("
      "\0132\025.grafeas.v1beta1.Note:\0028\001\"@\n\030BatchCre"
      "ateNotesResponse\022$\n\005notes\030\001 \003(\0132\025.grafea"
      "s.v1beta1.Note\"a\n\035BatchCreateOccurrences"
      "Request\022\016\n\006parent\030\001 \001(\t\0220\n\013occurrences\030\002"
      " \003(\0132\033.grafeas.v1beta1.Occurrence\"R\n\036Bat"
      "chCreateOccurrencesResponse\0220\n\013occurrenc"
      "es\030\001 \003(\0132\033.grafeas.v1beta1.Occurrence\"K\n"
      ")GetVulnerabilityOccurrencesSummaryReque"
      "st\022\016\n\006parent\030\001 \001(\t\022\016\n\006filter\030\002 \001(\t\"\245\002\n\037V"
      "ulnerabilityOccurrencesSummary\022U\n\006counts"
      "\030\001 \003(\0132E.grafeas.v1beta1.VulnerabilityOc"
      "currencesSummary.FixableTotalByDigest\032\252\001"
      "\n\024FixableTotalByDigest\022+\n\010resource\030\001 \001(\013"
      "2\031.grafeas.v1beta1.Resource\0229\n\010severity\030"
      "\002 \001(\0162\'.grafeas.v1beta1.vulnerability.Se"
      "verity\022\025\n\rfixable_count\030\003 \001(\003\022\023\n\013total_c"
      "ount\030\004 \001(\0032\302\021\n\016GrafeasV1Beta1\022\205\001\n\rGetOcc"
      "urrence\022%.grafeas.v1beta1.GetOccurrenceR"
      "equest\032\033.grafeas.v1beta1.Occurrence\"0\202\323\344"
      "\223\002*\022(/v1beta1/{name=projects/*/occurrenc"
      "es/*}\022\226\001\n\017ListOccurrences\022\'.grafeas.v1be"
      "ta1.ListOccurrencesRequest\032(.grafeas.v1b"
      "eta1.ListOccurrencesResponse\"0\202\323\344\223\002*\022(/v"
      "1beta1/{parent=projects/*}/occurrences\022\206"
      "\001\n\020DeleteOccurrence\022(.grafeas.v1beta1.De"
      "leteOccurrenceRequest\032\026.google.protobuf."
      "Empty\"0\202\323\344\223\002**(/v1beta1/{name=projects/*"
      "/occurrences/*}\022\227\001\n\020CreateOccurrence\022(.g"
      "rafeas.v1beta1.CreateOccurrenceRequest\032\033"
      ".grafeas.v1beta1.Occurrence\"<\202\323\344\223\0026\"(/v1"
      "beta1/{parent=projects/*}/occurrences:\no"
      "ccurrence\022\272\001\n\026BatchCreateOccurrences\022..g"
      "rafeas.v1beta1.BatchCreateOccurrencesReq"
      "uest\032/.grafeas.v1beta1.BatchCreateOccurr"
      "encesResponse\"\?\202\323\344\223\0029\"4/v1beta1/{parent="
      "projects/*}/occurrences:batchCreate:\001*\022\227"
      "\001\n\020UpdateOccurrence\022(.grafeas.v1beta1.Up"
      "dateOccurrenceRequest\032\033.grafeas.v1beta1."
      "Occurrence\"<\202\323\344\223\00262(/v1beta1/{name=proje"
      "cts/*/occurrences/*}:\noccurrence\022\215\001\n\021Get"
      "OccurrenceNote\022).grafeas.v1beta1.GetOccu"
      "rrenceNoteRequest\032\025.grafeas.v1beta1.Note"
      "\"6\202\323\344\223\0020\022./v1beta1/{name=projects/*/occu"
      "rrences/*}/notes\022m\n\007GetNote\022\037.grafeas.v1"
      "beta1.GetNoteRequest\032\025.grafeas.v1beta1.N"
      "ote\"*\202\323\344\223\002$\022\"/v1beta1/{name=projects/*/n"
      "otes/*}\022~\n\tListNotes\022!.grafeas.v1beta1.L"
      "istNotesRequest\032\".grafeas.v1beta1.ListNo"
      "tesResponse\"*\202\323\344\223\002$\022\"/v1beta1/{parent=pr"
      "ojects/*}/notes\022t\n\nDeleteNote\022\".grafeas."
      "v1beta1.DeleteNoteRequest\032\026.google.proto"
      "buf.Empty\"*\202\323\344\223\002$*\"/v1beta1/{name=projec"
      "ts/*/notes/*}\022y\n\nCreateNote\022\".grafeas.v1"
      "beta1.CreateNoteRequest\032\025.grafeas.v1beta"
      "1.Note\"0\202\323\344\223\002*\"\"/v1beta1/{parent=project"
      "s/*}/notes:\004note\022\242\001\n\020BatchCreateNotes\022(."
      "grafeas.v1beta1.BatchCreateNotesRequest\032"
      ").grafeas.v1beta1.BatchCreateNotesRespon"
      "se\"9\202\323\344\223\0023\"./v1beta1/{parent=projects/*}"
      "/notes:batchCreate:\001*\022y\n\nUpdateNote\022\".gr"
      "afeas.v1beta1.UpdateNoteRequest\032\025.grafea"
      "s.v1beta1.Note\"0\202\323\344\223\002*2\"/v1beta1/{name=p"
      "rojects/*/notes/*}:\004note\022\250\001\n\023ListNoteOcc"
      "urrences\022+.grafeas.v1beta1.ListNoteOccur"
      "rencesRequest\032,.grafeas.v1beta1.ListNote"
      "OccurrencesResponse\"6\202\323\344\223\0020\022./v1beta1/{n"
      "ame=projects/*/notes/*}/occurrences\022\331\001\n\""
      "GetVulnerabilityOccurrencesSummary\022:.gra"
      "feas.v1beta1.GetVulnerabilityOccurrences"
      "SummaryRequest\0320.grafeas.v1beta1.Vulnera"
      "bilityOccurrencesSummary\"E\202\323\344\223\002\?\022=/v1bet"
      "a1/{parent=projects/*}/occurrences:vulne"
      "rabilitySummaryBv\n\022io.grafeas.v1beta1P\001Z"
      "Xgoogle.golang.org/genproto/googleapis/d"
      "evtools/containeranalysis/v1beta1/grafea"
      "s;grafeas\242\002\003GRAb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6743);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/containeranalysis/v1beta1/grafeas/grafeas.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fattestation_2fattestation_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fbuild_2fbuild_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcommon_2fcommon_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdeployment_2fdeployment_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fimage_2fimage_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fpackage_2fpackage_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fprovenance_2fprovenance_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto
namespace grafeas {
namespace v1beta1 {

// ===================================================================

void Occurrence::InitAsDefaultInstance() {
  ::grafeas::v1beta1::_Occurrence_default_instance_._instance.get_mutable()->resource_ = const_cast< ::grafeas::v1beta1::Resource*>(
      ::grafeas::v1beta1::Resource::internal_default_instance());
  ::grafeas::v1beta1::_Occurrence_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::grafeas::v1beta1::_Occurrence_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::grafeas::v1beta1::_Occurrence_default_instance_.vulnerability_ = const_cast< ::grafeas::v1beta1::vulnerability::Details*>(
      ::grafeas::v1beta1::vulnerability::Details::internal_default_instance());
  ::grafeas::v1beta1::_Occurrence_default_instance_.build_ = const_cast< ::grafeas::v1beta1::build::Details*>(
      ::grafeas::v1beta1::build::Details::internal_default_instance());
  ::grafeas::v1beta1::_Occurrence_default_instance_.derived_image_ = const_cast< ::grafeas::v1beta1::image::Details*>(
      ::grafeas::v1beta1::image::Details::internal_default_instance());
  ::grafeas::v1beta1::_Occurrence_default_instance_.installation_ = const_cast< ::grafeas::v1beta1::package::Details*>(
      ::grafeas::v1beta1::package::Details::internal_default_instance());
  ::grafeas::v1beta1::_Occurrence_default_instance_.deployment_ = const_cast< ::grafeas::v1beta1::deployment::Details*>(
      ::grafeas::v1beta1::deployment::Details::internal_default_instance());
  ::grafeas::v1beta1::_Occurrence_default_instance_.discovered_ = const_cast< ::grafeas::v1beta1::discovery::Details*>(
      ::grafeas::v1beta1::discovery::Details::internal_default_instance());
  ::grafeas::v1beta1::_Occurrence_default_instance_.attestation_ = const_cast< ::grafeas::v1beta1::attestation::Details*>(
      ::grafeas::v1beta1::attestation::Details::internal_default_instance());
}
void Occurrence::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void Occurrence::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
}
void Occurrence::set_allocated_vulnerability(::grafeas::v1beta1::vulnerability::Details* vulnerability) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (vulnerability) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vulnerability = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vulnerability, submessage_arena);
    }
    set_has_vulnerability();
    details_.vulnerability_ = vulnerability;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Occurrence.vulnerability)
}
void Occurrence::clear_vulnerability() {
  if (has_vulnerability()) {
    delete details_.vulnerability_;
    clear_has_details();
  }
}
void Occurrence::set_allocated_build(::grafeas::v1beta1::build::Details* build) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (build) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      build = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, build, submessage_arena);
    }
    set_has_build();
    details_.build_ = build;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Occurrence.build)
}
void Occurrence::clear_build() {
  if (has_build()) {
    delete details_.build_;
    clear_has_details();
  }
}
void Occurrence::set_allocated_derived_image(::grafeas::v1beta1::image::Details* derived_image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (derived_image) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      derived_image = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, derived_image, submessage_arena);
    }
    set_has_derived_image();
    details_.derived_image_ = derived_image;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Occurrence.derived_image)
}
void Occurrence::clear_derived_image() {
  if (has_derived_image()) {
    delete details_.derived_image_;
    clear_has_details();
  }
}
void Occurrence::set_allocated_installation(::grafeas::v1beta1::package::Details* installation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (installation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      installation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, installation, submessage_arena);
    }
    set_has_installation();
    details_.installation_ = installation;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Occurrence.installation)
}
void Occurrence::clear_installation() {
  if (has_installation()) {
    delete details_.installation_;
    clear_has_details();
  }
}
void Occurrence::set_allocated_deployment(::grafeas::v1beta1::deployment::Details* deployment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (deployment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deployment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deployment, submessage_arena);
    }
    set_has_deployment();
    details_.deployment_ = deployment;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Occurrence.deployment)
}
void Occurrence::clear_deployment() {
  if (has_deployment()) {
    delete details_.deployment_;
    clear_has_details();
  }
}
void Occurrence::set_allocated_discovered(::grafeas::v1beta1::discovery::Details* discovered) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (discovered) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      discovered = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, discovered, submessage_arena);
    }
    set_has_discovered();
    details_.discovered_ = discovered;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Occurrence.discovered)
}
void Occurrence::clear_discovered() {
  if (has_discovered()) {
    delete details_.discovered_;
    clear_has_details();
  }
}
void Occurrence::set_allocated_attestation(::grafeas::v1beta1::attestation::Details* attestation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (attestation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attestation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attestation, submessage_arena);
    }
    set_has_attestation();
    details_.attestation_ = attestation;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Occurrence.attestation)
}
void Occurrence::clear_attestation() {
  if (has_attestation()) {
    delete details_.attestation_;
    clear_has_details();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Occurrence::kNameFieldNumber;
const int Occurrence::kResourceFieldNumber;
const int Occurrence::kNoteNameFieldNumber;
const int Occurrence::kKindFieldNumber;
const int Occurrence::kRemediationFieldNumber;
const int Occurrence::kCreateTimeFieldNumber;
const int Occurrence::kUpdateTimeFieldNumber;
const int Occurrence::kVulnerabilityFieldNumber;
const int Occurrence::kBuildFieldNumber;
const int Occurrence::kDerivedImageFieldNumber;
const int Occurrence::kInstallationFieldNumber;
const int Occurrence::kDeploymentFieldNumber;
const int Occurrence::kDiscoveredFieldNumber;
const int Occurrence::kAttestationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Occurrence::Occurrence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Occurrence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.Occurrence)
}
Occurrence::Occurrence(const Occurrence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  note_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.note_name().size() > 0) {
    note_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.note_name_);
  }
  remediation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remediation().size() > 0) {
    remediation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remediation_);
  }
  if (from.has_resource()) {
    resource_ = new ::grafeas::v1beta1::Resource(*from.resource_);
  } else {
    resource_ = NULL;
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = NULL;
  }
  kind_ = from.kind_;
  clear_has_details();
  switch (from.details_case()) {
    case kVulnerability: {
      mutable_vulnerability()->::grafeas::v1beta1::vulnerability::Details::MergeFrom(from.vulnerability());
      break;
    }
    case kBuild: {
      mutable_build()->::grafeas::v1beta1::build::Details::MergeFrom(from.build());
      break;
    }
    case kDerivedImage: {
      mutable_derived_image()->::grafeas::v1beta1::image::Details::MergeFrom(from.derived_image());
      break;
    }
    case kInstallation: {
      mutable_installation()->::grafeas::v1beta1::package::Details::MergeFrom(from.installation());
      break;
    }
    case kDeployment: {
      mutable_deployment()->::grafeas::v1beta1::deployment::Details::MergeFrom(from.deployment());
      break;
    }
    case kDiscovered: {
      mutable_discovered()->::grafeas::v1beta1::discovery::Details::MergeFrom(from.discovered());
      break;
    }
    case kAttestation: {
      mutable_attestation()->::grafeas::v1beta1::attestation::Details::MergeFrom(from.attestation());
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.Occurrence)
}

void Occurrence::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remediation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&resource_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&resource_)) + sizeof(kind_));
  clear_has_details();
}

Occurrence::~Occurrence() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.Occurrence)
  SharedDtor();
}

void Occurrence::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remediation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete resource_;
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
  if (has_details()) {
    clear_details();
  }
}

void Occurrence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Occurrence::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Occurrence& Occurrence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Occurrence.base);
  return *internal_default_instance();
}


void Occurrence::clear_details() {
// @@protoc_insertion_point(one_of_clear_start:grafeas.v1beta1.Occurrence)
  switch (details_case()) {
    case kVulnerability: {
      delete details_.vulnerability_;
      break;
    }
    case kBuild: {
      delete details_.build_;
      break;
    }
    case kDerivedImage: {
      delete details_.derived_image_;
      break;
    }
    case kInstallation: {
      delete details_.installation_;
      break;
    }
    case kDeployment: {
      delete details_.deployment_;
      break;
    }
    case kDiscovered: {
      delete details_.discovered_;
      break;
    }
    case kAttestation: {
      delete details_.attestation_;
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAILS_NOT_SET;
}


void Occurrence::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.Occurrence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remediation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
  kind_ = 0;
  clear_details();
  _internal_metadata_.Clear();
}

bool Occurrence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.Occurrence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.Occurrence.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.Resource resource = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string note_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_note_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->note_name().data(), static_cast<int>(this->note_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.Occurrence.note_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.NoteKind kind = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::grafeas::v1beta1::NoteKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remediation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remediation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remediation().data(), static_cast<int>(this->remediation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.Occurrence.remediation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.vulnerability.Details vulnerability = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vulnerability()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.build.Details build = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_build()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.image.Details derived_image = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_derived_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.package.Details installation = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_installation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.deployment.Details deployment = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deployment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.discovery.Details discovered = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_discovered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.attestation.Details attestation = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attestation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.Occurrence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.Occurrence)
  return false;
#undef DO_
}

void Occurrence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.Occurrence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Occurrence.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .grafeas.v1beta1.Resource resource = 2;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resource(), output);
  }

  // string note_name = 3;
  if (this->note_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->note_name().data(), static_cast<int>(this->note_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Occurrence.note_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->note_name(), output);
  }

  // .grafeas.v1beta1.NoteKind kind = 4;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->kind(), output);
  }

  // string remediation = 5;
  if (this->remediation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remediation().data(), static_cast<int>(this->remediation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Occurrence.remediation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->remediation(), output);
  }

  // .google.protobuf.Timestamp create_time = 6;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_create_time(), output);
  }

  // .google.protobuf.Timestamp update_time = 7;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_update_time(), output);
  }

  // .grafeas.v1beta1.vulnerability.Details vulnerability = 8;
  if (has_vulnerability()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_vulnerability(), output);
  }

  // .grafeas.v1beta1.build.Details build = 9;
  if (has_build()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_build(), output);
  }

  // .grafeas.v1beta1.image.Details derived_image = 10;
  if (has_derived_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_derived_image(), output);
  }

  // .grafeas.v1beta1.package.Details installation = 11;
  if (has_installation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_installation(), output);
  }

  // .grafeas.v1beta1.deployment.Details deployment = 12;
  if (has_deployment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_deployment(), output);
  }

  // .grafeas.v1beta1.discovery.Details discovered = 13;
  if (has_discovered()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_discovered(), output);
  }

  // .grafeas.v1beta1.attestation.Details attestation = 14;
  if (has_attestation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_attestation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.Occurrence)
}

::google::protobuf::uint8* Occurrence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.Occurrence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Occurrence.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .grafeas.v1beta1.Resource resource = 2;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resource(), deterministic, target);
  }

  // string note_name = 3;
  if (this->note_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->note_name().data(), static_cast<int>(this->note_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Occurrence.note_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->note_name(), target);
  }

  // .grafeas.v1beta1.NoteKind kind = 4;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->kind(), target);
  }

  // string remediation = 5;
  if (this->remediation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remediation().data(), static_cast<int>(this->remediation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Occurrence.remediation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->remediation(), target);
  }

  // .google.protobuf.Timestamp create_time = 6;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_create_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp update_time = 7;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_update_time(), deterministic, target);
  }

  // .grafeas.v1beta1.vulnerability.Details vulnerability = 8;
  if (has_vulnerability()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_vulnerability(), deterministic, target);
  }

  // .grafeas.v1beta1.build.Details build = 9;
  if (has_build()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_build(), deterministic, target);
  }

  // .grafeas.v1beta1.image.Details derived_image = 10;
  if (has_derived_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_derived_image(), deterministic, target);
  }

  // .grafeas.v1beta1.package.Details installation = 11;
  if (has_installation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_installation(), deterministic, target);
  }

  // .grafeas.v1beta1.deployment.Details deployment = 12;
  if (has_deployment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_deployment(), deterministic, target);
  }

  // .grafeas.v1beta1.discovery.Details discovered = 13;
  if (has_discovered()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_discovered(), deterministic, target);
  }

  // .grafeas.v1beta1.attestation.Details attestation = 14;
  if (has_attestation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_attestation(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.Occurrence)
  return target;
}

size_t Occurrence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.Occurrence)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string note_name = 3;
  if (this->note_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->note_name());
  }

  // string remediation = 5;
  if (this->remediation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remediation());
  }

  // .grafeas.v1beta1.Resource resource = 2;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resource_);
  }

  // .google.protobuf.Timestamp create_time = 6;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 7;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // .grafeas.v1beta1.NoteKind kind = 4;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (details_case()) {
    // .grafeas.v1beta1.vulnerability.Details vulnerability = 8;
    case kVulnerability: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.vulnerability_);
      break;
    }
    // .grafeas.v1beta1.build.Details build = 9;
    case kBuild: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.build_);
      break;
    }
    // .grafeas.v1beta1.image.Details derived_image = 10;
    case kDerivedImage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.derived_image_);
      break;
    }
    // .grafeas.v1beta1.package.Details installation = 11;
    case kInstallation: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.installation_);
      break;
    }
    // .grafeas.v1beta1.deployment.Details deployment = 12;
    case kDeployment: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.deployment_);
      break;
    }
    // .grafeas.v1beta1.discovery.Details discovered = 13;
    case kDiscovered: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.discovered_);
      break;
    }
    // .grafeas.v1beta1.attestation.Details attestation = 14;
    case kAttestation: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.attestation_);
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Occurrence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.Occurrence)
  GOOGLE_DCHECK_NE(&from, this);
  const Occurrence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Occurrence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.Occurrence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.Occurrence)
    MergeFrom(*source);
  }
}

void Occurrence::MergeFrom(const Occurrence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.Occurrence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.note_name().size() > 0) {

    note_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.note_name_);
  }
  if (from.remediation().size() > 0) {

    remediation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remediation_);
  }
  if (from.has_resource()) {
    mutable_resource()->::grafeas::v1beta1::Resource::MergeFrom(from.resource());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.details_case()) {
    case kVulnerability: {
      mutable_vulnerability()->::grafeas::v1beta1::vulnerability::Details::MergeFrom(from.vulnerability());
      break;
    }
    case kBuild: {
      mutable_build()->::grafeas::v1beta1::build::Details::MergeFrom(from.build());
      break;
    }
    case kDerivedImage: {
      mutable_derived_image()->::grafeas::v1beta1::image::Details::MergeFrom(from.derived_image());
      break;
    }
    case kInstallation: {
      mutable_installation()->::grafeas::v1beta1::package::Details::MergeFrom(from.installation());
      break;
    }
    case kDeployment: {
      mutable_deployment()->::grafeas::v1beta1::deployment::Details::MergeFrom(from.deployment());
      break;
    }
    case kDiscovered: {
      mutable_discovered()->::grafeas::v1beta1::discovery::Details::MergeFrom(from.discovered());
      break;
    }
    case kAttestation: {
      mutable_attestation()->::grafeas::v1beta1::attestation::Details::MergeFrom(from.attestation());
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
}

void Occurrence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.Occurrence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Occurrence::CopyFrom(const Occurrence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.Occurrence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Occurrence::IsInitialized() const {
  return true;
}

void Occurrence::Swap(Occurrence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Occurrence::InternalSwap(Occurrence* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  note_name_.Swap(&other->note_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remediation_.Swap(&other->remediation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(resource_, other->resource_);
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(kind_, other->kind_);
  swap(details_, other->details_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Occurrence::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Resource::InitAsDefaultInstance() {
  ::grafeas::v1beta1::_Resource_default_instance_._instance.get_mutable()->content_hash_ = const_cast< ::grafeas::v1beta1::provenance::Hash*>(
      ::grafeas::v1beta1::provenance::Hash::internal_default_instance());
}
void Resource::clear_content_hash() {
  if (GetArenaNoVirtual() == NULL && content_hash_ != NULL) {
    delete content_hash_;
  }
  content_hash_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Resource::kNameFieldNumber;
const int Resource::kUriFieldNumber;
const int Resource::kContentHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Resource::Resource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Resource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.Resource)
}
Resource::Resource(const Resource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.has_content_hash()) {
    content_hash_ = new ::grafeas::v1beta1::provenance::Hash(*from.content_hash_);
  } else {
    content_hash_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.Resource)
}

void Resource::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_hash_ = NULL;
}

Resource::~Resource() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.Resource)
  SharedDtor();
}

void Resource::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete content_hash_;
}

void Resource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Resource::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Resource& Resource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Resource.base);
  return *internal_default_instance();
}


void Resource::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && content_hash_ != NULL) {
    delete content_hash_;
  }
  content_hash_ = NULL;
  _internal_metadata_.Clear();
}

bool Resource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.Resource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.Resource.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.Resource.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.provenance.Hash content_hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_content_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.Resource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.Resource)
  return false;
#undef DO_
}

void Resource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Resource.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Resource.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uri(), output);
  }

  // .grafeas.v1beta1.provenance.Hash content_hash = 3;
  if (this->has_content_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_content_hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.Resource)
}

::google::protobuf::uint8* Resource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Resource.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Resource.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uri(), target);
  }

  // .grafeas.v1beta1.provenance.Hash content_hash = 3;
  if (this->has_content_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_content_hash(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.Resource)
  return target;
}

size_t Resource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.Resource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // .grafeas.v1beta1.provenance.Hash content_hash = 3;
  if (this->has_content_hash()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *content_hash_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Resource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.Resource)
  GOOGLE_DCHECK_NE(&from, this);
  const Resource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Resource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.Resource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.Resource)
    MergeFrom(*source);
  }
}

void Resource::MergeFrom(const Resource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.Resource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.has_content_hash()) {
    mutable_content_hash()->::grafeas::v1beta1::provenance::Hash::MergeFrom(from.content_hash());
  }
}

void Resource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Resource::CopyFrom(const Resource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Resource::IsInitialized() const {
  return true;
}

void Resource::Swap(Resource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Resource::InternalSwap(Resource* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(content_hash_, other->content_hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Resource::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Note::InitAsDefaultInstance() {
  ::grafeas::v1beta1::_Note_default_instance_._instance.get_mutable()->expiration_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::grafeas::v1beta1::_Note_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::grafeas::v1beta1::_Note_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::grafeas::v1beta1::_Note_default_instance_.vulnerability_ = const_cast< ::grafeas::v1beta1::vulnerability::Vulnerability*>(
      ::grafeas::v1beta1::vulnerability::Vulnerability::internal_default_instance());
  ::grafeas::v1beta1::_Note_default_instance_.build_ = const_cast< ::grafeas::v1beta1::build::Build*>(
      ::grafeas::v1beta1::build::Build::internal_default_instance());
  ::grafeas::v1beta1::_Note_default_instance_.base_image_ = const_cast< ::grafeas::v1beta1::image::Basis*>(
      ::grafeas::v1beta1::image::Basis::internal_default_instance());
  ::grafeas::v1beta1::_Note_default_instance_.package_ = const_cast< ::grafeas::v1beta1::package::Package*>(
      ::grafeas::v1beta1::package::Package::internal_default_instance());
  ::grafeas::v1beta1::_Note_default_instance_.deployable_ = const_cast< ::grafeas::v1beta1::deployment::Deployable*>(
      ::grafeas::v1beta1::deployment::Deployable::internal_default_instance());
  ::grafeas::v1beta1::_Note_default_instance_.discovery_ = const_cast< ::grafeas::v1beta1::discovery::Discovery*>(
      ::grafeas::v1beta1::discovery::Discovery::internal_default_instance());
  ::grafeas::v1beta1::_Note_default_instance_.attestation_authority_ = const_cast< ::grafeas::v1beta1::attestation::Authority*>(
      ::grafeas::v1beta1::attestation::Authority::internal_default_instance());
}
void Note::clear_related_url() {
  related_url_.Clear();
}
void Note::clear_expiration_time() {
  if (GetArenaNoVirtual() == NULL && expiration_time_ != NULL) {
    delete expiration_time_;
  }
  expiration_time_ = NULL;
}
void Note::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void Note::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
}
void Note::set_allocated_vulnerability(::grafeas::v1beta1::vulnerability::Vulnerability* vulnerability) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (vulnerability) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vulnerability = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vulnerability, submessage_arena);
    }
    set_has_vulnerability();
    type_.vulnerability_ = vulnerability;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Note.vulnerability)
}
void Note::clear_vulnerability() {
  if (has_vulnerability()) {
    delete type_.vulnerability_;
    clear_has_type();
  }
}
void Note::set_allocated_build(::grafeas::v1beta1::build::Build* build) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (build) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      build = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, build, submessage_arena);
    }
    set_has_build();
    type_.build_ = build;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Note.build)
}
void Note::clear_build() {
  if (has_build()) {
    delete type_.build_;
    clear_has_type();
  }
}
void Note::set_allocated_base_image(::grafeas::v1beta1::image::Basis* base_image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (base_image) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base_image = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base_image, submessage_arena);
    }
    set_has_base_image();
    type_.base_image_ = base_image;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Note.base_image)
}
void Note::clear_base_image() {
  if (has_base_image()) {
    delete type_.base_image_;
    clear_has_type();
  }
}
void Note::set_allocated_package(::grafeas::v1beta1::package::Package* package) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (package) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      package = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, package, submessage_arena);
    }
    set_has_package();
    type_.package_ = package;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Note.package)
}
void Note::clear_package() {
  if (has_package()) {
    delete type_.package_;
    clear_has_type();
  }
}
void Note::set_allocated_deployable(::grafeas::v1beta1::deployment::Deployable* deployable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (deployable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deployable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deployable, submessage_arena);
    }
    set_has_deployable();
    type_.deployable_ = deployable;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Note.deployable)
}
void Note::clear_deployable() {
  if (has_deployable()) {
    delete type_.deployable_;
    clear_has_type();
  }
}
void Note::set_allocated_discovery(::grafeas::v1beta1::discovery::Discovery* discovery) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (discovery) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      discovery = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, discovery, submessage_arena);
    }
    set_has_discovery();
    type_.discovery_ = discovery;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Note.discovery)
}
void Note::clear_discovery() {
  if (has_discovery()) {
    delete type_.discovery_;
    clear_has_type();
  }
}
void Note::set_allocated_attestation_authority(::grafeas::v1beta1::attestation::Authority* attestation_authority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (attestation_authority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attestation_authority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attestation_authority, submessage_arena);
    }
    set_has_attestation_authority();
    type_.attestation_authority_ = attestation_authority;
  }
  // @@protoc_insertion_point(field_set_allocated:grafeas.v1beta1.Note.attestation_authority)
}
void Note::clear_attestation_authority() {
  if (has_attestation_authority()) {
    delete type_.attestation_authority_;
    clear_has_type();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Note::kNameFieldNumber;
const int Note::kShortDescriptionFieldNumber;
const int Note::kLongDescriptionFieldNumber;
const int Note::kKindFieldNumber;
const int Note::kRelatedUrlFieldNumber;
const int Note::kExpirationTimeFieldNumber;
const int Note::kCreateTimeFieldNumber;
const int Note::kUpdateTimeFieldNumber;
const int Note::kRelatedNoteNamesFieldNumber;
const int Note::kVulnerabilityFieldNumber;
const int Note::kBuildFieldNumber;
const int Note::kBaseImageFieldNumber;
const int Note::kPackageFieldNumber;
const int Note::kDeployableFieldNumber;
const int Note::kDiscoveryFieldNumber;
const int Note::kAttestationAuthorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Note::Note()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Note.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.Note)
}
Note::Note(const Note& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      related_url_(from.related_url_),
      related_note_names_(from.related_note_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  short_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.short_description().size() > 0) {
    short_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_description_);
  }
  long_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.long_description().size() > 0) {
    long_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.long_description_);
  }
  if (from.has_expiration_time()) {
    expiration_time_ = new ::google::protobuf::Timestamp(*from.expiration_time_);
  } else {
    expiration_time_ = NULL;
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = NULL;
  }
  kind_ = from.kind_;
  clear_has_type();
  switch (from.type_case()) {
    case kVulnerability: {
      mutable_vulnerability()->::grafeas::v1beta1::vulnerability::Vulnerability::MergeFrom(from.vulnerability());
      break;
    }
    case kBuild: {
      mutable_build()->::grafeas::v1beta1::build::Build::MergeFrom(from.build());
      break;
    }
    case kBaseImage: {
      mutable_base_image()->::grafeas::v1beta1::image::Basis::MergeFrom(from.base_image());
      break;
    }
    case kPackage: {
      mutable_package()->::grafeas::v1beta1::package::Package::MergeFrom(from.package());
      break;
    }
    case kDeployable: {
      mutable_deployable()->::grafeas::v1beta1::deployment::Deployable::MergeFrom(from.deployable());
      break;
    }
    case kDiscovery: {
      mutable_discovery()->::grafeas::v1beta1::discovery::Discovery::MergeFrom(from.discovery());
      break;
    }
    case kAttestationAuthority: {
      mutable_attestation_authority()->::grafeas::v1beta1::attestation::Authority::MergeFrom(from.attestation_authority());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.Note)
}

void Note::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&expiration_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&expiration_time_)) + sizeof(kind_));
  clear_has_type();
}

Note::~Note() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.Note)
  SharedDtor();
}

void Note::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expiration_time_;
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
  if (has_type()) {
    clear_type();
  }
}

void Note::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Note::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Note& Note::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_Note.base);
  return *internal_default_instance();
}


void Note::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:grafeas.v1beta1.Note)
  switch (type_case()) {
    case kVulnerability: {
      delete type_.vulnerability_;
      break;
    }
    case kBuild: {
      delete type_.build_;
      break;
    }
    case kBaseImage: {
      delete type_.base_image_;
      break;
    }
    case kPackage: {
      delete type_.package_;
      break;
    }
    case kDeployable: {
      delete type_.deployable_;
      break;
    }
    case kDiscovery: {
      delete type_.discovery_;
      break;
    }
    case kAttestationAuthority: {
      delete type_.attestation_authority_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Note::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.Note)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  related_url_.Clear();
  related_note_names_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && expiration_time_ != NULL) {
    delete expiration_time_;
  }
  expiration_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
  kind_ = 0;
  clear_type();
  _internal_metadata_.Clear();
}

bool Note::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.Note)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.Note.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string short_description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_short_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->short_description().data(), static_cast<int>(this->short_description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.Note.short_description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string long_description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_long_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->long_description().data(), static_cast<int>(this->long_description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.Note.long_description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.NoteKind kind = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::grafeas::v1beta1::NoteKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .grafeas.v1beta1.RelatedUrl related_url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_related_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expiration_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expiration_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string related_note_names = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_related_note_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->related_note_names(this->related_note_names_size() - 1).data(),
            static_cast<int>(this->related_note_names(this->related_note_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.Note.related_note_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.vulnerability.Vulnerability vulnerability = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vulnerability()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.build.Build build = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_build()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.image.Basis base_image = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.package.Package package = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_package()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.deployment.Deployable deployable = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deployable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.discovery.Discovery discovery = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_discovery()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.attestation.Authority attestation_authority = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attestation_authority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.Note)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.Note)
  return false;
#undef DO_
}

void Note::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.Note)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Note.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string short_description = 2;
  if (this->short_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->short_description().data(), static_cast<int>(this->short_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Note.short_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->short_description(), output);
  }

  // string long_description = 3;
  if (this->long_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->long_description().data(), static_cast<int>(this->long_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Note.long_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->long_description(), output);
  }

  // .grafeas.v1beta1.NoteKind kind = 4;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->kind(), output);
  }

  // repeated .grafeas.v1beta1.RelatedUrl related_url = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->related_url_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->related_url(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Timestamp expiration_time = 6;
  if (this->has_expiration_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_expiration_time(), output);
  }

  // .google.protobuf.Timestamp create_time = 7;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_create_time(), output);
  }

  // .google.protobuf.Timestamp update_time = 8;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_update_time(), output);
  }

  // repeated string related_note_names = 9;
  for (int i = 0, n = this->related_note_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->related_note_names(i).data(), static_cast<int>(this->related_note_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Note.related_note_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->related_note_names(i), output);
  }

  // .grafeas.v1beta1.vulnerability.Vulnerability vulnerability = 10;
  if (has_vulnerability()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_vulnerability(), output);
  }

  // .grafeas.v1beta1.build.Build build = 11;
  if (has_build()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_build(), output);
  }

  // .grafeas.v1beta1.image.Basis base_image = 12;
  if (has_base_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_base_image(), output);
  }

  // .grafeas.v1beta1.package.Package package = 13;
  if (has_package()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_package(), output);
  }

  // .grafeas.v1beta1.deployment.Deployable deployable = 14;
  if (has_deployable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_deployable(), output);
  }

  // .grafeas.v1beta1.discovery.Discovery discovery = 15;
  if (has_discovery()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_discovery(), output);
  }

  // .grafeas.v1beta1.attestation.Authority attestation_authority = 16;
  if (has_attestation_authority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_attestation_authority(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.Note)
}

::google::protobuf::uint8* Note::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.Note)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Note.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string short_description = 2;
  if (this->short_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->short_description().data(), static_cast<int>(this->short_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Note.short_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->short_description(), target);
  }

  // string long_description = 3;
  if (this->long_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->long_description().data(), static_cast<int>(this->long_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Note.long_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->long_description(), target);
  }

  // .grafeas.v1beta1.NoteKind kind = 4;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->kind(), target);
  }

  // repeated .grafeas.v1beta1.RelatedUrl related_url = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->related_url_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->related_url(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Timestamp expiration_time = 6;
  if (this->has_expiration_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_expiration_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp create_time = 7;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_create_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp update_time = 8;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_update_time(), deterministic, target);
  }

  // repeated string related_note_names = 9;
  for (int i = 0, n = this->related_note_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->related_note_names(i).data(), static_cast<int>(this->related_note_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.Note.related_note_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->related_note_names(i), target);
  }

  // .grafeas.v1beta1.vulnerability.Vulnerability vulnerability = 10;
  if (has_vulnerability()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_vulnerability(), deterministic, target);
  }

  // .grafeas.v1beta1.build.Build build = 11;
  if (has_build()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_build(), deterministic, target);
  }

  // .grafeas.v1beta1.image.Basis base_image = 12;
  if (has_base_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_base_image(), deterministic, target);
  }

  // .grafeas.v1beta1.package.Package package = 13;
  if (has_package()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_package(), deterministic, target);
  }

  // .grafeas.v1beta1.deployment.Deployable deployable = 14;
  if (has_deployable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_deployable(), deterministic, target);
  }

  // .grafeas.v1beta1.discovery.Discovery discovery = 15;
  if (has_discovery()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_discovery(), deterministic, target);
  }

  // .grafeas.v1beta1.attestation.Authority attestation_authority = 16;
  if (has_attestation_authority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_attestation_authority(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.Note)
  return target;
}

size_t Note::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.Note)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .grafeas.v1beta1.RelatedUrl related_url = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->related_url_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->related_url(static_cast<int>(i)));
    }
  }

  // repeated string related_note_names = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->related_note_names_size());
  for (int i = 0, n = this->related_note_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->related_note_names(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string short_description = 2;
  if (this->short_description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->short_description());
  }

  // string long_description = 3;
  if (this->long_description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->long_description());
  }

  // .google.protobuf.Timestamp expiration_time = 6;
  if (this->has_expiration_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expiration_time_);
  }

  // .google.protobuf.Timestamp create_time = 7;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 8;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // .grafeas.v1beta1.NoteKind kind = 4;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (type_case()) {
    // .grafeas.v1beta1.vulnerability.Vulnerability vulnerability = 10;
    case kVulnerability: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.vulnerability_);
      break;
    }
    // .grafeas.v1beta1.build.Build build = 11;
    case kBuild: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.build_);
      break;
    }
    // .grafeas.v1beta1.image.Basis base_image = 12;
    case kBaseImage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.base_image_);
      break;
    }
    // .grafeas.v1beta1.package.Package package = 13;
    case kPackage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.package_);
      break;
    }
    // .grafeas.v1beta1.deployment.Deployable deployable = 14;
    case kDeployable: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.deployable_);
      break;
    }
    // .grafeas.v1beta1.discovery.Discovery discovery = 15;
    case kDiscovery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.discovery_);
      break;
    }
    // .grafeas.v1beta1.attestation.Authority attestation_authority = 16;
    case kAttestationAuthority: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.attestation_authority_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Note::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.Note)
  GOOGLE_DCHECK_NE(&from, this);
  const Note* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Note>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.Note)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.Note)
    MergeFrom(*source);
  }
}

void Note::MergeFrom(const Note& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.Note)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  related_url_.MergeFrom(from.related_url_);
  related_note_names_.MergeFrom(from.related_note_names_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.short_description().size() > 0) {

    short_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_description_);
  }
  if (from.long_description().size() > 0) {

    long_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.long_description_);
  }
  if (from.has_expiration_time()) {
    mutable_expiration_time()->::google::protobuf::Timestamp::MergeFrom(from.expiration_time());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.type_case()) {
    case kVulnerability: {
      mutable_vulnerability()->::grafeas::v1beta1::vulnerability::Vulnerability::MergeFrom(from.vulnerability());
      break;
    }
    case kBuild: {
      mutable_build()->::grafeas::v1beta1::build::Build::MergeFrom(from.build());
      break;
    }
    case kBaseImage: {
      mutable_base_image()->::grafeas::v1beta1::image::Basis::MergeFrom(from.base_image());
      break;
    }
    case kPackage: {
      mutable_package()->::grafeas::v1beta1::package::Package::MergeFrom(from.package());
      break;
    }
    case kDeployable: {
      mutable_deployable()->::grafeas::v1beta1::deployment::Deployable::MergeFrom(from.deployable());
      break;
    }
    case kDiscovery: {
      mutable_discovery()->::grafeas::v1beta1::discovery::Discovery::MergeFrom(from.discovery());
      break;
    }
    case kAttestationAuthority: {
      mutable_attestation_authority()->::grafeas::v1beta1::attestation::Authority::MergeFrom(from.attestation_authority());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void Note::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.Note)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Note::CopyFrom(const Note& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.Note)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Note::IsInitialized() const {
  return true;
}

void Note::Swap(Note* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Note::InternalSwap(Note* other) {
  using std::swap;
  CastToBase(&related_url_)->InternalSwap(CastToBase(&other->related_url_));
  related_note_names_.InternalSwap(CastToBase(&other->related_note_names_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  short_description_.Swap(&other->short_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  long_description_.Swap(&other->long_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expiration_time_, other->expiration_time_);
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(kind_, other->kind_);
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Note::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetOccurrenceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOccurrenceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOccurrenceRequest::GetOccurrenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_GetOccurrenceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.GetOccurrenceRequest)
}
GetOccurrenceRequest::GetOccurrenceRequest(const GetOccurrenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.GetOccurrenceRequest)
}

void GetOccurrenceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetOccurrenceRequest::~GetOccurrenceRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.GetOccurrenceRequest)
  SharedDtor();
}

void GetOccurrenceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOccurrenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetOccurrenceRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOccurrenceRequest& GetOccurrenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_GetOccurrenceRequest.base);
  return *internal_default_instance();
}


void GetOccurrenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.GetOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetOccurrenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.GetOccurrenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.GetOccurrenceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.GetOccurrenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.GetOccurrenceRequest)
  return false;
#undef DO_
}

void GetOccurrenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.GetOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.GetOccurrenceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.GetOccurrenceRequest)
}

::google::protobuf::uint8* GetOccurrenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.GetOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.GetOccurrenceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.GetOccurrenceRequest)
  return target;
}

size_t GetOccurrenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.GetOccurrenceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOccurrenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.GetOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOccurrenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOccurrenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.GetOccurrenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.GetOccurrenceRequest)
    MergeFrom(*source);
  }
}

void GetOccurrenceRequest::MergeFrom(const GetOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.GetOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetOccurrenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.GetOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOccurrenceRequest::CopyFrom(const GetOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.GetOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOccurrenceRequest::IsInitialized() const {
  return true;
}

void GetOccurrenceRequest::Swap(GetOccurrenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOccurrenceRequest::InternalSwap(GetOccurrenceRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetOccurrenceRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListOccurrencesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListOccurrencesRequest::kParentFieldNumber;
const int ListOccurrencesRequest::kFilterFieldNumber;
const int ListOccurrencesRequest::kPageSizeFieldNumber;
const int ListOccurrencesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListOccurrencesRequest::ListOccurrencesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_ListOccurrencesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.ListOccurrencesRequest)
}
ListOccurrencesRequest::ListOccurrencesRequest(const ListOccurrencesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.ListOccurrencesRequest)
}

void ListOccurrencesRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListOccurrencesRequest::~ListOccurrencesRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.ListOccurrencesRequest)
  SharedDtor();
}

void ListOccurrencesRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListOccurrencesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListOccurrencesRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListOccurrencesRequest& ListOccurrencesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_ListOccurrencesRequest.base);
  return *internal_default_instance();
}


void ListOccurrencesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.ListOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListOccurrencesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.ListOccurrencesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.ListOccurrencesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.ListOccurrencesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.ListOccurrencesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.ListOccurrencesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.ListOccurrencesRequest)
  return false;
#undef DO_
}

void ListOccurrencesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.ListOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListOccurrencesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListOccurrencesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListOccurrencesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.ListOccurrencesRequest)
}

::google::protobuf::uint8* ListOccurrencesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.ListOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListOccurrencesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListOccurrencesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListOccurrencesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.ListOccurrencesRequest)
  return target;
}

size_t ListOccurrencesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.ListOccurrencesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListOccurrencesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.ListOccurrencesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListOccurrencesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListOccurrencesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.ListOccurrencesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.ListOccurrencesRequest)
    MergeFrom(*source);
  }
}

void ListOccurrencesRequest::MergeFrom(const ListOccurrencesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.ListOccurrencesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListOccurrencesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.ListOccurrencesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListOccurrencesRequest::CopyFrom(const ListOccurrencesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.ListOccurrencesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOccurrencesRequest::IsInitialized() const {
  return true;
}

void ListOccurrencesRequest::Swap(ListOccurrencesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListOccurrencesRequest::InternalSwap(ListOccurrencesRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListOccurrencesRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListOccurrencesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListOccurrencesResponse::kOccurrencesFieldNumber;
const int ListOccurrencesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListOccurrencesResponse::ListOccurrencesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_ListOccurrencesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.ListOccurrencesResponse)
}
ListOccurrencesResponse::ListOccurrencesResponse(const ListOccurrencesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      occurrences_(from.occurrences_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.ListOccurrencesResponse)
}

void ListOccurrencesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListOccurrencesResponse::~ListOccurrencesResponse() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.ListOccurrencesResponse)
  SharedDtor();
}

void ListOccurrencesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListOccurrencesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListOccurrencesResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListOccurrencesResponse& ListOccurrencesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_ListOccurrencesResponse.base);
  return *internal_default_instance();
}


void ListOccurrencesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.ListOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  occurrences_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListOccurrencesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.ListOccurrencesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .grafeas.v1beta1.Occurrence occurrences = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_occurrences()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.ListOccurrencesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.ListOccurrencesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.ListOccurrencesResponse)
  return false;
#undef DO_
}

void ListOccurrencesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.ListOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grafeas.v1beta1.Occurrence occurrences = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->occurrences_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->occurrences(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListOccurrencesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.ListOccurrencesResponse)
}

::google::protobuf::uint8* ListOccurrencesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.ListOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grafeas.v1beta1.Occurrence occurrences = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->occurrences_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->occurrences(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListOccurrencesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.ListOccurrencesResponse)
  return target;
}

size_t ListOccurrencesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.ListOccurrencesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .grafeas.v1beta1.Occurrence occurrences = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->occurrences_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->occurrences(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListOccurrencesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.ListOccurrencesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListOccurrencesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListOccurrencesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.ListOccurrencesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.ListOccurrencesResponse)
    MergeFrom(*source);
  }
}

void ListOccurrencesResponse::MergeFrom(const ListOccurrencesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.ListOccurrencesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  occurrences_.MergeFrom(from.occurrences_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListOccurrencesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.ListOccurrencesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListOccurrencesResponse::CopyFrom(const ListOccurrencesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.ListOccurrencesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOccurrencesResponse::IsInitialized() const {
  return true;
}

void ListOccurrencesResponse::Swap(ListOccurrencesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListOccurrencesResponse::InternalSwap(ListOccurrencesResponse* other) {
  using std::swap;
  CastToBase(&occurrences_)->InternalSwap(CastToBase(&other->occurrences_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListOccurrencesResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteOccurrenceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteOccurrenceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteOccurrenceRequest::DeleteOccurrenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_DeleteOccurrenceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.DeleteOccurrenceRequest)
}
DeleteOccurrenceRequest::DeleteOccurrenceRequest(const DeleteOccurrenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.DeleteOccurrenceRequest)
}

void DeleteOccurrenceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteOccurrenceRequest::~DeleteOccurrenceRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.DeleteOccurrenceRequest)
  SharedDtor();
}

void DeleteOccurrenceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteOccurrenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteOccurrenceRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteOccurrenceRequest& DeleteOccurrenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_DeleteOccurrenceRequest.base);
  return *internal_default_instance();
}


void DeleteOccurrenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.DeleteOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteOccurrenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.DeleteOccurrenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.DeleteOccurrenceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.DeleteOccurrenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.DeleteOccurrenceRequest)
  return false;
#undef DO_
}

void DeleteOccurrenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.DeleteOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.DeleteOccurrenceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.DeleteOccurrenceRequest)
}

::google::protobuf::uint8* DeleteOccurrenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.DeleteOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.DeleteOccurrenceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.DeleteOccurrenceRequest)
  return target;
}

size_t DeleteOccurrenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.DeleteOccurrenceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteOccurrenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.DeleteOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteOccurrenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteOccurrenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.DeleteOccurrenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.DeleteOccurrenceRequest)
    MergeFrom(*source);
  }
}

void DeleteOccurrenceRequest::MergeFrom(const DeleteOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.DeleteOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteOccurrenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.DeleteOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOccurrenceRequest::CopyFrom(const DeleteOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.DeleteOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOccurrenceRequest::IsInitialized() const {
  return true;
}

void DeleteOccurrenceRequest::Swap(DeleteOccurrenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteOccurrenceRequest::InternalSwap(DeleteOccurrenceRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteOccurrenceRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateOccurrenceRequest::InitAsDefaultInstance() {
  ::grafeas::v1beta1::_CreateOccurrenceRequest_default_instance_._instance.get_mutable()->occurrence_ = const_cast< ::grafeas::v1beta1::Occurrence*>(
      ::grafeas::v1beta1::Occurrence::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateOccurrenceRequest::kParentFieldNumber;
const int CreateOccurrenceRequest::kOccurrenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateOccurrenceRequest::CreateOccurrenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_CreateOccurrenceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.CreateOccurrenceRequest)
}
CreateOccurrenceRequest::CreateOccurrenceRequest(const CreateOccurrenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_occurrence()) {
    occurrence_ = new ::grafeas::v1beta1::Occurrence(*from.occurrence_);
  } else {
    occurrence_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.CreateOccurrenceRequest)
}

void CreateOccurrenceRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  occurrence_ = NULL;
}

CreateOccurrenceRequest::~CreateOccurrenceRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.CreateOccurrenceRequest)
  SharedDtor();
}

void CreateOccurrenceRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete occurrence_;
}

void CreateOccurrenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateOccurrenceRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateOccurrenceRequest& CreateOccurrenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_CreateOccurrenceRequest.base);
  return *internal_default_instance();
}


void CreateOccurrenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.CreateOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && occurrence_ != NULL) {
    delete occurrence_;
  }
  occurrence_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateOccurrenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.CreateOccurrenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.CreateOccurrenceRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.Occurrence occurrence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_occurrence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.CreateOccurrenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.CreateOccurrenceRequest)
  return false;
#undef DO_
}

void CreateOccurrenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.CreateOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.CreateOccurrenceRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .grafeas.v1beta1.Occurrence occurrence = 2;
  if (this->has_occurrence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_occurrence(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.CreateOccurrenceRequest)
}

::google::protobuf::uint8* CreateOccurrenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.CreateOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.CreateOccurrenceRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .grafeas.v1beta1.Occurrence occurrence = 2;
  if (this->has_occurrence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_occurrence(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.CreateOccurrenceRequest)
  return target;
}

size_t CreateOccurrenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.CreateOccurrenceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .grafeas.v1beta1.Occurrence occurrence = 2;
  if (this->has_occurrence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *occurrence_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOccurrenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.CreateOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOccurrenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateOccurrenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.CreateOccurrenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.CreateOccurrenceRequest)
    MergeFrom(*source);
  }
}

void CreateOccurrenceRequest::MergeFrom(const CreateOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.CreateOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_occurrence()) {
    mutable_occurrence()->::grafeas::v1beta1::Occurrence::MergeFrom(from.occurrence());
  }
}

void CreateOccurrenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.CreateOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOccurrenceRequest::CopyFrom(const CreateOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.CreateOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOccurrenceRequest::IsInitialized() const {
  return true;
}

void CreateOccurrenceRequest::Swap(CreateOccurrenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateOccurrenceRequest::InternalSwap(CreateOccurrenceRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(occurrence_, other->occurrence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateOccurrenceRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateOccurrenceRequest::InitAsDefaultInstance() {
  ::grafeas::v1beta1::_UpdateOccurrenceRequest_default_instance_._instance.get_mutable()->occurrence_ = const_cast< ::grafeas::v1beta1::Occurrence*>(
      ::grafeas::v1beta1::Occurrence::internal_default_instance());
  ::grafeas::v1beta1::_UpdateOccurrenceRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateOccurrenceRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateOccurrenceRequest::kNameFieldNumber;
const int UpdateOccurrenceRequest::kOccurrenceFieldNumber;
const int UpdateOccurrenceRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateOccurrenceRequest::UpdateOccurrenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_UpdateOccurrenceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.UpdateOccurrenceRequest)
}
UpdateOccurrenceRequest::UpdateOccurrenceRequest(const UpdateOccurrenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_occurrence()) {
    occurrence_ = new ::grafeas::v1beta1::Occurrence(*from.occurrence_);
  } else {
    occurrence_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.UpdateOccurrenceRequest)
}

void UpdateOccurrenceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&occurrence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&occurrence_)) + sizeof(update_mask_));
}

UpdateOccurrenceRequest::~UpdateOccurrenceRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.UpdateOccurrenceRequest)
  SharedDtor();
}

void UpdateOccurrenceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete occurrence_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateOccurrenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateOccurrenceRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateOccurrenceRequest& UpdateOccurrenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_UpdateOccurrenceRequest.base);
  return *internal_default_instance();
}


void UpdateOccurrenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.UpdateOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && occurrence_ != NULL) {
    delete occurrence_;
  }
  occurrence_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateOccurrenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.UpdateOccurrenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.UpdateOccurrenceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.Occurrence occurrence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_occurrence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.UpdateOccurrenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.UpdateOccurrenceRequest)
  return false;
#undef DO_
}

void UpdateOccurrenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.UpdateOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.UpdateOccurrenceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .grafeas.v1beta1.Occurrence occurrence = 2;
  if (this->has_occurrence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_occurrence(), output);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_update_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.UpdateOccurrenceRequest)
}

::google::protobuf::uint8* UpdateOccurrenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.UpdateOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.UpdateOccurrenceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .grafeas.v1beta1.Occurrence occurrence = 2;
  if (this->has_occurrence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_occurrence(), deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_update_mask(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.UpdateOccurrenceRequest)
  return target;
}

size_t UpdateOccurrenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.UpdateOccurrenceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .grafeas.v1beta1.Occurrence occurrence = 2;
  if (this->has_occurrence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *occurrence_);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateOccurrenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.UpdateOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateOccurrenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateOccurrenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.UpdateOccurrenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.UpdateOccurrenceRequest)
    MergeFrom(*source);
  }
}

void UpdateOccurrenceRequest::MergeFrom(const UpdateOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.UpdateOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_occurrence()) {
    mutable_occurrence()->::grafeas::v1beta1::Occurrence::MergeFrom(from.occurrence());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateOccurrenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.UpdateOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateOccurrenceRequest::CopyFrom(const UpdateOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.UpdateOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOccurrenceRequest::IsInitialized() const {
  return true;
}

void UpdateOccurrenceRequest::Swap(UpdateOccurrenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateOccurrenceRequest::InternalSwap(UpdateOccurrenceRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(occurrence_, other->occurrence_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateOccurrenceRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetNoteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNoteRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNoteRequest::GetNoteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_GetNoteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.GetNoteRequest)
}
GetNoteRequest::GetNoteRequest(const GetNoteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.GetNoteRequest)
}

void GetNoteRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetNoteRequest::~GetNoteRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.GetNoteRequest)
  SharedDtor();
}

void GetNoteRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetNoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetNoteRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetNoteRequest& GetNoteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_GetNoteRequest.base);
  return *internal_default_instance();
}


void GetNoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.GetNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetNoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.GetNoteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.GetNoteRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.GetNoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.GetNoteRequest)
  return false;
#undef DO_
}

void GetNoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.GetNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.GetNoteRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.GetNoteRequest)
}

::google::protobuf::uint8* GetNoteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.GetNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.GetNoteRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.GetNoteRequest)
  return target;
}

size_t GetNoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.GetNoteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNoteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.GetNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNoteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNoteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.GetNoteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.GetNoteRequest)
    MergeFrom(*source);
  }
}

void GetNoteRequest::MergeFrom(const GetNoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.GetNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetNoteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.GetNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNoteRequest::CopyFrom(const GetNoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.GetNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNoteRequest::IsInitialized() const {
  return true;
}

void GetNoteRequest::Swap(GetNoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNoteRequest::InternalSwap(GetNoteRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetNoteRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetOccurrenceNoteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOccurrenceNoteRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOccurrenceNoteRequest::GetOccurrenceNoteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_GetOccurrenceNoteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.GetOccurrenceNoteRequest)
}
GetOccurrenceNoteRequest::GetOccurrenceNoteRequest(const GetOccurrenceNoteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.GetOccurrenceNoteRequest)
}

void GetOccurrenceNoteRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetOccurrenceNoteRequest::~GetOccurrenceNoteRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.GetOccurrenceNoteRequest)
  SharedDtor();
}

void GetOccurrenceNoteRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOccurrenceNoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetOccurrenceNoteRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOccurrenceNoteRequest& GetOccurrenceNoteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_GetOccurrenceNoteRequest.base);
  return *internal_default_instance();
}


void GetOccurrenceNoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.GetOccurrenceNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetOccurrenceNoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.GetOccurrenceNoteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.GetOccurrenceNoteRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.GetOccurrenceNoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.GetOccurrenceNoteRequest)
  return false;
#undef DO_
}

void GetOccurrenceNoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.GetOccurrenceNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.GetOccurrenceNoteRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.GetOccurrenceNoteRequest)
}

::google::protobuf::uint8* GetOccurrenceNoteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.GetOccurrenceNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.GetOccurrenceNoteRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.GetOccurrenceNoteRequest)
  return target;
}

size_t GetOccurrenceNoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.GetOccurrenceNoteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOccurrenceNoteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.GetOccurrenceNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOccurrenceNoteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOccurrenceNoteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.GetOccurrenceNoteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.GetOccurrenceNoteRequest)
    MergeFrom(*source);
  }
}

void GetOccurrenceNoteRequest::MergeFrom(const GetOccurrenceNoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.GetOccurrenceNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetOccurrenceNoteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.GetOccurrenceNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOccurrenceNoteRequest::CopyFrom(const GetOccurrenceNoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.GetOccurrenceNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOccurrenceNoteRequest::IsInitialized() const {
  return true;
}

void GetOccurrenceNoteRequest::Swap(GetOccurrenceNoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOccurrenceNoteRequest::InternalSwap(GetOccurrenceNoteRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetOccurrenceNoteRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListNotesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNotesRequest::kParentFieldNumber;
const int ListNotesRequest::kFilterFieldNumber;
const int ListNotesRequest::kPageSizeFieldNumber;
const int ListNotesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNotesRequest::ListNotesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_ListNotesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.ListNotesRequest)
}
ListNotesRequest::ListNotesRequest(const ListNotesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.ListNotesRequest)
}

void ListNotesRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListNotesRequest::~ListNotesRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.ListNotesRequest)
  SharedDtor();
}

void ListNotesRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNotesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListNotesRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNotesRequest& ListNotesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_ListNotesRequest.base);
  return *internal_default_instance();
}


void ListNotesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.ListNotesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListNotesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.ListNotesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.ListNotesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.ListNotesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.ListNotesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.ListNotesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.ListNotesRequest)
  return false;
#undef DO_
}

void ListNotesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.ListNotesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNotesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNotesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNotesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.ListNotesRequest)
}

::google::protobuf::uint8* ListNotesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.ListNotesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNotesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNotesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNotesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.ListNotesRequest)
  return target;
}

size_t ListNotesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.ListNotesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNotesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.ListNotesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNotesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNotesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.ListNotesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.ListNotesRequest)
    MergeFrom(*source);
  }
}

void ListNotesRequest::MergeFrom(const ListNotesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.ListNotesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListNotesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.ListNotesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNotesRequest::CopyFrom(const ListNotesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.ListNotesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNotesRequest::IsInitialized() const {
  return true;
}

void ListNotesRequest::Swap(ListNotesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNotesRequest::InternalSwap(ListNotesRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListNotesRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListNotesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNotesResponse::kNotesFieldNumber;
const int ListNotesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNotesResponse::ListNotesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_ListNotesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.ListNotesResponse)
}
ListNotesResponse::ListNotesResponse(const ListNotesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notes_(from.notes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.ListNotesResponse)
}

void ListNotesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListNotesResponse::~ListNotesResponse() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.ListNotesResponse)
  SharedDtor();
}

void ListNotesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNotesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListNotesResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNotesResponse& ListNotesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_ListNotesResponse.base);
  return *internal_default_instance();
}


void ListNotesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.ListNotesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notes_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListNotesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.ListNotesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .grafeas.v1beta1.Note notes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_notes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.ListNotesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.ListNotesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.ListNotesResponse)
  return false;
#undef DO_
}

void ListNotesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.ListNotesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grafeas.v1beta1.Note notes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->notes(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNotesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.ListNotesResponse)
}

::google::protobuf::uint8* ListNotesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.ListNotesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grafeas.v1beta1.Note notes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->notes(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNotesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.ListNotesResponse)
  return target;
}

size_t ListNotesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.ListNotesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .grafeas.v1beta1.Note notes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->notes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notes(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNotesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.ListNotesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNotesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNotesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.ListNotesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.ListNotesResponse)
    MergeFrom(*source);
  }
}

void ListNotesResponse::MergeFrom(const ListNotesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.ListNotesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notes_.MergeFrom(from.notes_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListNotesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.ListNotesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNotesResponse::CopyFrom(const ListNotesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.ListNotesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNotesResponse::IsInitialized() const {
  return true;
}

void ListNotesResponse::Swap(ListNotesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNotesResponse::InternalSwap(ListNotesResponse* other) {
  using std::swap;
  CastToBase(&notes_)->InternalSwap(CastToBase(&other->notes_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListNotesResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteNoteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteNoteRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteNoteRequest::DeleteNoteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_DeleteNoteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.DeleteNoteRequest)
}
DeleteNoteRequest::DeleteNoteRequest(const DeleteNoteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.DeleteNoteRequest)
}

void DeleteNoteRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteNoteRequest::~DeleteNoteRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.DeleteNoteRequest)
  SharedDtor();
}

void DeleteNoteRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteNoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteNoteRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteNoteRequest& DeleteNoteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_DeleteNoteRequest.base);
  return *internal_default_instance();
}


void DeleteNoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.DeleteNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteNoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.DeleteNoteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.DeleteNoteRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.DeleteNoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.DeleteNoteRequest)
  return false;
#undef DO_
}

void DeleteNoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.DeleteNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.DeleteNoteRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.DeleteNoteRequest)
}

::google::protobuf::uint8* DeleteNoteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.DeleteNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.DeleteNoteRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.DeleteNoteRequest)
  return target;
}

size_t DeleteNoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.DeleteNoteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteNoteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.DeleteNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteNoteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteNoteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.DeleteNoteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.DeleteNoteRequest)
    MergeFrom(*source);
  }
}

void DeleteNoteRequest::MergeFrom(const DeleteNoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.DeleteNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteNoteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.DeleteNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNoteRequest::CopyFrom(const DeleteNoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.DeleteNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNoteRequest::IsInitialized() const {
  return true;
}

void DeleteNoteRequest::Swap(DeleteNoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteNoteRequest::InternalSwap(DeleteNoteRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteNoteRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateNoteRequest::InitAsDefaultInstance() {
  ::grafeas::v1beta1::_CreateNoteRequest_default_instance_._instance.get_mutable()->note_ = const_cast< ::grafeas::v1beta1::Note*>(
      ::grafeas::v1beta1::Note::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNoteRequest::kParentFieldNumber;
const int CreateNoteRequest::kNoteIdFieldNumber;
const int CreateNoteRequest::kNoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNoteRequest::CreateNoteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_CreateNoteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.CreateNoteRequest)
}
CreateNoteRequest::CreateNoteRequest(const CreateNoteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  note_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.note_id().size() > 0) {
    note_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.note_id_);
  }
  if (from.has_note()) {
    note_ = new ::grafeas::v1beta1::Note(*from.note_);
  } else {
    note_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.CreateNoteRequest)
}

void CreateNoteRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_ = NULL;
}

CreateNoteRequest::~CreateNoteRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.CreateNoteRequest)
  SharedDtor();
}

void CreateNoteRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete note_;
}

void CreateNoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateNoteRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNoteRequest& CreateNoteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_CreateNoteRequest.base);
  return *internal_default_instance();
}


void CreateNoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.CreateNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && note_ != NULL) {
    delete note_;
  }
  note_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateNoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.CreateNoteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.CreateNoteRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string note_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_note_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->note_id().data(), static_cast<int>(this->note_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.CreateNoteRequest.note_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.Note note = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.CreateNoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.CreateNoteRequest)
  return false;
#undef DO_
}

void CreateNoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.CreateNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.CreateNoteRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string note_id = 2;
  if (this->note_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->note_id().data(), static_cast<int>(this->note_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.CreateNoteRequest.note_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->note_id(), output);
  }

  // .grafeas.v1beta1.Note note = 3;
  if (this->has_note()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_note(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.CreateNoteRequest)
}

::google::protobuf::uint8* CreateNoteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.CreateNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.CreateNoteRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string note_id = 2;
  if (this->note_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->note_id().data(), static_cast<int>(this->note_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.CreateNoteRequest.note_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->note_id(), target);
  }

  // .grafeas.v1beta1.Note note = 3;
  if (this->has_note()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_note(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.CreateNoteRequest)
  return target;
}

size_t CreateNoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.CreateNoteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string note_id = 2;
  if (this->note_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->note_id());
  }

  // .grafeas.v1beta1.Note note = 3;
  if (this->has_note()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *note_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateNoteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.CreateNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNoteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNoteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.CreateNoteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.CreateNoteRequest)
    MergeFrom(*source);
  }
}

void CreateNoteRequest::MergeFrom(const CreateNoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.CreateNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.note_id().size() > 0) {

    note_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.note_id_);
  }
  if (from.has_note()) {
    mutable_note()->::grafeas::v1beta1::Note::MergeFrom(from.note());
  }
}

void CreateNoteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.CreateNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNoteRequest::CopyFrom(const CreateNoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.CreateNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNoteRequest::IsInitialized() const {
  return true;
}

void CreateNoteRequest::Swap(CreateNoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNoteRequest::InternalSwap(CreateNoteRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  note_id_.Swap(&other->note_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(note_, other->note_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateNoteRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateNoteRequest::InitAsDefaultInstance() {
  ::grafeas::v1beta1::_UpdateNoteRequest_default_instance_._instance.get_mutable()->note_ = const_cast< ::grafeas::v1beta1::Note*>(
      ::grafeas::v1beta1::Note::internal_default_instance());
  ::grafeas::v1beta1::_UpdateNoteRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateNoteRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateNoteRequest::kNameFieldNumber;
const int UpdateNoteRequest::kNoteFieldNumber;
const int UpdateNoteRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateNoteRequest::UpdateNoteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_UpdateNoteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.UpdateNoteRequest)
}
UpdateNoteRequest::UpdateNoteRequest(const UpdateNoteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_note()) {
    note_ = new ::grafeas::v1beta1::Note(*from.note_);
  } else {
    note_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.UpdateNoteRequest)
}

void UpdateNoteRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&note_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&note_)) + sizeof(update_mask_));
}

UpdateNoteRequest::~UpdateNoteRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.UpdateNoteRequest)
  SharedDtor();
}

void UpdateNoteRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete note_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateNoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateNoteRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateNoteRequest& UpdateNoteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_UpdateNoteRequest.base);
  return *internal_default_instance();
}


void UpdateNoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.UpdateNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && note_ != NULL) {
    delete note_;
  }
  note_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateNoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.UpdateNoteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.UpdateNoteRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.Note note = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.UpdateNoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.UpdateNoteRequest)
  return false;
#undef DO_
}

void UpdateNoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.UpdateNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.UpdateNoteRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .grafeas.v1beta1.Note note = 2;
  if (this->has_note()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_note(), output);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_update_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.UpdateNoteRequest)
}

::google::protobuf::uint8* UpdateNoteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.UpdateNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.UpdateNoteRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .grafeas.v1beta1.Note note = 2;
  if (this->has_note()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_note(), deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_update_mask(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.UpdateNoteRequest)
  return target;
}

size_t UpdateNoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.UpdateNoteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .grafeas.v1beta1.Note note = 2;
  if (this->has_note()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *note_);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateNoteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.UpdateNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateNoteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateNoteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.UpdateNoteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.UpdateNoteRequest)
    MergeFrom(*source);
  }
}

void UpdateNoteRequest::MergeFrom(const UpdateNoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.UpdateNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_note()) {
    mutable_note()->::grafeas::v1beta1::Note::MergeFrom(from.note());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateNoteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.UpdateNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateNoteRequest::CopyFrom(const UpdateNoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.UpdateNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNoteRequest::IsInitialized() const {
  return true;
}

void UpdateNoteRequest::Swap(UpdateNoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateNoteRequest::InternalSwap(UpdateNoteRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(note_, other->note_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateNoteRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListNoteOccurrencesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNoteOccurrencesRequest::kNameFieldNumber;
const int ListNoteOccurrencesRequest::kFilterFieldNumber;
const int ListNoteOccurrencesRequest::kPageSizeFieldNumber;
const int ListNoteOccurrencesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNoteOccurrencesRequest::ListNoteOccurrencesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_ListNoteOccurrencesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.ListNoteOccurrencesRequest)
}
ListNoteOccurrencesRequest::ListNoteOccurrencesRequest(const ListNoteOccurrencesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.ListNoteOccurrencesRequest)
}

void ListNoteOccurrencesRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListNoteOccurrencesRequest::~ListNoteOccurrencesRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.ListNoteOccurrencesRequest)
  SharedDtor();
}

void ListNoteOccurrencesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNoteOccurrencesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListNoteOccurrencesRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNoteOccurrencesRequest& ListNoteOccurrencesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_ListNoteOccurrencesRequest.base);
  return *internal_default_instance();
}


void ListNoteOccurrencesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.ListNoteOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListNoteOccurrencesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.ListNoteOccurrencesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.ListNoteOccurrencesRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.ListNoteOccurrencesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.ListNoteOccurrencesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.ListNoteOccurrencesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.ListNoteOccurrencesRequest)
  return false;
#undef DO_
}

void ListNoteOccurrencesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.ListNoteOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNoteOccurrencesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNoteOccurrencesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNoteOccurrencesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.ListNoteOccurrencesRequest)
}

::google::protobuf::uint8* ListNoteOccurrencesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.ListNoteOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNoteOccurrencesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNoteOccurrencesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNoteOccurrencesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.ListNoteOccurrencesRequest)
  return target;
}

size_t ListNoteOccurrencesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.ListNoteOccurrencesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNoteOccurrencesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.ListNoteOccurrencesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNoteOccurrencesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNoteOccurrencesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.ListNoteOccurrencesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.ListNoteOccurrencesRequest)
    MergeFrom(*source);
  }
}

void ListNoteOccurrencesRequest::MergeFrom(const ListNoteOccurrencesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.ListNoteOccurrencesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListNoteOccurrencesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.ListNoteOccurrencesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNoteOccurrencesRequest::CopyFrom(const ListNoteOccurrencesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.ListNoteOccurrencesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNoteOccurrencesRequest::IsInitialized() const {
  return true;
}

void ListNoteOccurrencesRequest::Swap(ListNoteOccurrencesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNoteOccurrencesRequest::InternalSwap(ListNoteOccurrencesRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListNoteOccurrencesRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListNoteOccurrencesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNoteOccurrencesResponse::kOccurrencesFieldNumber;
const int ListNoteOccurrencesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNoteOccurrencesResponse::ListNoteOccurrencesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_ListNoteOccurrencesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.ListNoteOccurrencesResponse)
}
ListNoteOccurrencesResponse::ListNoteOccurrencesResponse(const ListNoteOccurrencesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      occurrences_(from.occurrences_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.ListNoteOccurrencesResponse)
}

void ListNoteOccurrencesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListNoteOccurrencesResponse::~ListNoteOccurrencesResponse() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.ListNoteOccurrencesResponse)
  SharedDtor();
}

void ListNoteOccurrencesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNoteOccurrencesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListNoteOccurrencesResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNoteOccurrencesResponse& ListNoteOccurrencesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_ListNoteOccurrencesResponse.base);
  return *internal_default_instance();
}


void ListNoteOccurrencesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.ListNoteOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  occurrences_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListNoteOccurrencesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.ListNoteOccurrencesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .grafeas.v1beta1.Occurrence occurrences = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_occurrences()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.ListNoteOccurrencesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.ListNoteOccurrencesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.ListNoteOccurrencesResponse)
  return false;
#undef DO_
}

void ListNoteOccurrencesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.ListNoteOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grafeas.v1beta1.Occurrence occurrences = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->occurrences_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->occurrences(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNoteOccurrencesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.ListNoteOccurrencesResponse)
}

::google::protobuf::uint8* ListNoteOccurrencesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.ListNoteOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grafeas.v1beta1.Occurrence occurrences = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->occurrences_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->occurrences(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.ListNoteOccurrencesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.ListNoteOccurrencesResponse)
  return target;
}

size_t ListNoteOccurrencesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.ListNoteOccurrencesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .grafeas.v1beta1.Occurrence occurrences = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->occurrences_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->occurrences(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNoteOccurrencesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.ListNoteOccurrencesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNoteOccurrencesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNoteOccurrencesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.ListNoteOccurrencesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.ListNoteOccurrencesResponse)
    MergeFrom(*source);
  }
}

void ListNoteOccurrencesResponse::MergeFrom(const ListNoteOccurrencesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.ListNoteOccurrencesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  occurrences_.MergeFrom(from.occurrences_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListNoteOccurrencesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.ListNoteOccurrencesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNoteOccurrencesResponse::CopyFrom(const ListNoteOccurrencesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.ListNoteOccurrencesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNoteOccurrencesResponse::IsInitialized() const {
  return true;
}

void ListNoteOccurrencesResponse::Swap(ListNoteOccurrencesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNoteOccurrencesResponse::InternalSwap(ListNoteOccurrencesResponse* other) {
  using std::swap;
  CastToBase(&occurrences_)->InternalSwap(CastToBase(&other->occurrences_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListNoteOccurrencesResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

BatchCreateNotesRequest_NotesEntry_DoNotUse::BatchCreateNotesRequest_NotesEntry_DoNotUse() {}
BatchCreateNotesRequest_NotesEntry_DoNotUse::BatchCreateNotesRequest_NotesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void BatchCreateNotesRequest_NotesEntry_DoNotUse::MergeFrom(const BatchCreateNotesRequest_NotesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata BatchCreateNotesRequest_NotesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[18];
}
void BatchCreateNotesRequest_NotesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void BatchCreateNotesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchCreateNotesRequest::kParentFieldNumber;
const int BatchCreateNotesRequest::kNotesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchCreateNotesRequest::BatchCreateNotesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_BatchCreateNotesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.BatchCreateNotesRequest)
}
BatchCreateNotesRequest::BatchCreateNotesRequest(const BatchCreateNotesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  notes_.MergeFrom(from.notes_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.BatchCreateNotesRequest)
}

void BatchCreateNotesRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BatchCreateNotesRequest::~BatchCreateNotesRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.BatchCreateNotesRequest)
  SharedDtor();
}

void BatchCreateNotesRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BatchCreateNotesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BatchCreateNotesRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchCreateNotesRequest& BatchCreateNotesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_BatchCreateNotesRequest.base);
  return *internal_default_instance();
}


void BatchCreateNotesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.BatchCreateNotesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notes_.Clear();
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BatchCreateNotesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.BatchCreateNotesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.BatchCreateNotesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .grafeas.v1beta1.Note> notes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          BatchCreateNotesRequest_NotesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              BatchCreateNotesRequest_NotesEntry_DoNotUse,
              ::std::string, ::grafeas::v1beta1::Note,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::grafeas::v1beta1::Note > > parser(&notes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.BatchCreateNotesRequest.NotesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.BatchCreateNotesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.BatchCreateNotesRequest)
  return false;
#undef DO_
}

void BatchCreateNotesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.BatchCreateNotesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.BatchCreateNotesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // map<string, .grafeas.v1beta1.Note> notes = 2;
  if (!this->notes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::grafeas::v1beta1::Note >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "grafeas.v1beta1.BatchCreateNotesRequest.NotesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->notes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->notes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::grafeas::v1beta1::Note >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::grafeas::v1beta1::Note >::const_iterator
          it = this->notes().begin();
          it != this->notes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<BatchCreateNotesRequest_NotesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(notes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<BatchCreateNotesRequest_NotesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::grafeas::v1beta1::Note >::const_iterator
          it = this->notes().begin();
          it != this->notes().end(); ++it) {
        entry.reset(notes_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.BatchCreateNotesRequest)
}

::google::protobuf::uint8* BatchCreateNotesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.BatchCreateNotesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.BatchCreateNotesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // map<string, .grafeas.v1beta1.Note> notes = 2;
  if (!this->notes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::grafeas::v1beta1::Note >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "grafeas.v1beta1.BatchCreateNotesRequest.NotesEntry.key");
      }
    };

    if (deterministic &&
        this->notes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->notes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::grafeas::v1beta1::Note >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::grafeas::v1beta1::Note >::const_iterator
          it = this->notes().begin();
          it != this->notes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<BatchCreateNotesRequest_NotesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(notes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<BatchCreateNotesRequest_NotesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::grafeas::v1beta1::Note >::const_iterator
          it = this->notes().begin();
          it != this->notes().end(); ++it) {
        entry.reset(notes_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.BatchCreateNotesRequest)
  return target;
}

size_t BatchCreateNotesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.BatchCreateNotesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .grafeas.v1beta1.Note> notes = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->notes_size());
  {
    ::std::unique_ptr<BatchCreateNotesRequest_NotesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::grafeas::v1beta1::Note >::const_iterator
        it = this->notes().begin();
        it != this->notes().end(); ++it) {
      entry.reset(notes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchCreateNotesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.BatchCreateNotesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchCreateNotesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchCreateNotesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.BatchCreateNotesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.BatchCreateNotesRequest)
    MergeFrom(*source);
  }
}

void BatchCreateNotesRequest::MergeFrom(const BatchCreateNotesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.BatchCreateNotesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notes_.MergeFrom(from.notes_);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
}

void BatchCreateNotesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.BatchCreateNotesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchCreateNotesRequest::CopyFrom(const BatchCreateNotesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.BatchCreateNotesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchCreateNotesRequest::IsInitialized() const {
  return true;
}

void BatchCreateNotesRequest::Swap(BatchCreateNotesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchCreateNotesRequest::InternalSwap(BatchCreateNotesRequest* other) {
  using std::swap;
  notes_.Swap(&other->notes_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BatchCreateNotesRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchCreateNotesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchCreateNotesResponse::kNotesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchCreateNotesResponse::BatchCreateNotesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_BatchCreateNotesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.BatchCreateNotesResponse)
}
BatchCreateNotesResponse::BatchCreateNotesResponse(const BatchCreateNotesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notes_(from.notes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.BatchCreateNotesResponse)
}

void BatchCreateNotesResponse::SharedCtor() {
}

BatchCreateNotesResponse::~BatchCreateNotesResponse() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.BatchCreateNotesResponse)
  SharedDtor();
}

void BatchCreateNotesResponse::SharedDtor() {
}

void BatchCreateNotesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BatchCreateNotesResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchCreateNotesResponse& BatchCreateNotesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_BatchCreateNotesResponse.base);
  return *internal_default_instance();
}


void BatchCreateNotesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.BatchCreateNotesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notes_.Clear();
  _internal_metadata_.Clear();
}

bool BatchCreateNotesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.BatchCreateNotesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .grafeas.v1beta1.Note notes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_notes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.BatchCreateNotesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.BatchCreateNotesResponse)
  return false;
#undef DO_
}

void BatchCreateNotesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.BatchCreateNotesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grafeas.v1beta1.Note notes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->notes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.BatchCreateNotesResponse)
}

::google::protobuf::uint8* BatchCreateNotesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.BatchCreateNotesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grafeas.v1beta1.Note notes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->notes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.BatchCreateNotesResponse)
  return target;
}

size_t BatchCreateNotesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.BatchCreateNotesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .grafeas.v1beta1.Note notes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->notes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchCreateNotesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.BatchCreateNotesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchCreateNotesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchCreateNotesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.BatchCreateNotesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.BatchCreateNotesResponse)
    MergeFrom(*source);
  }
}

void BatchCreateNotesResponse::MergeFrom(const BatchCreateNotesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.BatchCreateNotesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notes_.MergeFrom(from.notes_);
}

void BatchCreateNotesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.BatchCreateNotesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchCreateNotesResponse::CopyFrom(const BatchCreateNotesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.BatchCreateNotesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchCreateNotesResponse::IsInitialized() const {
  return true;
}

void BatchCreateNotesResponse::Swap(BatchCreateNotesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchCreateNotesResponse::InternalSwap(BatchCreateNotesResponse* other) {
  using std::swap;
  CastToBase(&notes_)->InternalSwap(CastToBase(&other->notes_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BatchCreateNotesResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchCreateOccurrencesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchCreateOccurrencesRequest::kParentFieldNumber;
const int BatchCreateOccurrencesRequest::kOccurrencesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchCreateOccurrencesRequest::BatchCreateOccurrencesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_BatchCreateOccurrencesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.BatchCreateOccurrencesRequest)
}
BatchCreateOccurrencesRequest::BatchCreateOccurrencesRequest(const BatchCreateOccurrencesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      occurrences_(from.occurrences_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.BatchCreateOccurrencesRequest)
}

void BatchCreateOccurrencesRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BatchCreateOccurrencesRequest::~BatchCreateOccurrencesRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.BatchCreateOccurrencesRequest)
  SharedDtor();
}

void BatchCreateOccurrencesRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BatchCreateOccurrencesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BatchCreateOccurrencesRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchCreateOccurrencesRequest& BatchCreateOccurrencesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_BatchCreateOccurrencesRequest.base);
  return *internal_default_instance();
}


void BatchCreateOccurrencesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.BatchCreateOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  occurrences_.Clear();
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BatchCreateOccurrencesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.BatchCreateOccurrencesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.BatchCreateOccurrencesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .grafeas.v1beta1.Occurrence occurrences = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_occurrences()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.BatchCreateOccurrencesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.BatchCreateOccurrencesRequest)
  return false;
#undef DO_
}

void BatchCreateOccurrencesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.BatchCreateOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.BatchCreateOccurrencesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // repeated .grafeas.v1beta1.Occurrence occurrences = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->occurrences_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->occurrences(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.BatchCreateOccurrencesRequest)
}

::google::protobuf::uint8* BatchCreateOccurrencesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.BatchCreateOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.BatchCreateOccurrencesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // repeated .grafeas.v1beta1.Occurrence occurrences = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->occurrences_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->occurrences(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.BatchCreateOccurrencesRequest)
  return target;
}

size_t BatchCreateOccurrencesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.BatchCreateOccurrencesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .grafeas.v1beta1.Occurrence occurrences = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->occurrences_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->occurrences(static_cast<int>(i)));
    }
  }

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchCreateOccurrencesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.BatchCreateOccurrencesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchCreateOccurrencesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchCreateOccurrencesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.BatchCreateOccurrencesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.BatchCreateOccurrencesRequest)
    MergeFrom(*source);
  }
}

void BatchCreateOccurrencesRequest::MergeFrom(const BatchCreateOccurrencesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.BatchCreateOccurrencesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  occurrences_.MergeFrom(from.occurrences_);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
}

void BatchCreateOccurrencesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.BatchCreateOccurrencesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchCreateOccurrencesRequest::CopyFrom(const BatchCreateOccurrencesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.BatchCreateOccurrencesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchCreateOccurrencesRequest::IsInitialized() const {
  return true;
}

void BatchCreateOccurrencesRequest::Swap(BatchCreateOccurrencesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchCreateOccurrencesRequest::InternalSwap(BatchCreateOccurrencesRequest* other) {
  using std::swap;
  CastToBase(&occurrences_)->InternalSwap(CastToBase(&other->occurrences_));
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BatchCreateOccurrencesRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchCreateOccurrencesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchCreateOccurrencesResponse::kOccurrencesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchCreateOccurrencesResponse::BatchCreateOccurrencesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_BatchCreateOccurrencesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.BatchCreateOccurrencesResponse)
}
BatchCreateOccurrencesResponse::BatchCreateOccurrencesResponse(const BatchCreateOccurrencesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      occurrences_(from.occurrences_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.BatchCreateOccurrencesResponse)
}

void BatchCreateOccurrencesResponse::SharedCtor() {
}

BatchCreateOccurrencesResponse::~BatchCreateOccurrencesResponse() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.BatchCreateOccurrencesResponse)
  SharedDtor();
}

void BatchCreateOccurrencesResponse::SharedDtor() {
}

void BatchCreateOccurrencesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BatchCreateOccurrencesResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchCreateOccurrencesResponse& BatchCreateOccurrencesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_BatchCreateOccurrencesResponse.base);
  return *internal_default_instance();
}


void BatchCreateOccurrencesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.BatchCreateOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  occurrences_.Clear();
  _internal_metadata_.Clear();
}

bool BatchCreateOccurrencesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.BatchCreateOccurrencesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .grafeas.v1beta1.Occurrence occurrences = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_occurrences()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.BatchCreateOccurrencesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.BatchCreateOccurrencesResponse)
  return false;
#undef DO_
}

void BatchCreateOccurrencesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.BatchCreateOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grafeas.v1beta1.Occurrence occurrences = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->occurrences_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->occurrences(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.BatchCreateOccurrencesResponse)
}

::google::protobuf::uint8* BatchCreateOccurrencesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.BatchCreateOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grafeas.v1beta1.Occurrence occurrences = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->occurrences_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->occurrences(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.BatchCreateOccurrencesResponse)
  return target;
}

size_t BatchCreateOccurrencesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.BatchCreateOccurrencesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .grafeas.v1beta1.Occurrence occurrences = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->occurrences_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->occurrences(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchCreateOccurrencesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.BatchCreateOccurrencesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchCreateOccurrencesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchCreateOccurrencesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.BatchCreateOccurrencesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.BatchCreateOccurrencesResponse)
    MergeFrom(*source);
  }
}

void BatchCreateOccurrencesResponse::MergeFrom(const BatchCreateOccurrencesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.BatchCreateOccurrencesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  occurrences_.MergeFrom(from.occurrences_);
}

void BatchCreateOccurrencesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.BatchCreateOccurrencesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchCreateOccurrencesResponse::CopyFrom(const BatchCreateOccurrencesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.BatchCreateOccurrencesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchCreateOccurrencesResponse::IsInitialized() const {
  return true;
}

void BatchCreateOccurrencesResponse::Swap(BatchCreateOccurrencesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchCreateOccurrencesResponse::InternalSwap(BatchCreateOccurrencesResponse* other) {
  using std::swap;
  CastToBase(&occurrences_)->InternalSwap(CastToBase(&other->occurrences_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BatchCreateOccurrencesResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetVulnerabilityOccurrencesSummaryRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVulnerabilityOccurrencesSummaryRequest::kParentFieldNumber;
const int GetVulnerabilityOccurrencesSummaryRequest::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVulnerabilityOccurrencesSummaryRequest::GetVulnerabilityOccurrencesSummaryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_GetVulnerabilityOccurrencesSummaryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
}
GetVulnerabilityOccurrencesSummaryRequest::GetVulnerabilityOccurrencesSummaryRequest(const GetVulnerabilityOccurrencesSummaryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
}

void GetVulnerabilityOccurrencesSummaryRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetVulnerabilityOccurrencesSummaryRequest::~GetVulnerabilityOccurrencesSummaryRequest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
  SharedDtor();
}

void GetVulnerabilityOccurrencesSummaryRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetVulnerabilityOccurrencesSummaryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetVulnerabilityOccurrencesSummaryRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVulnerabilityOccurrencesSummaryRequest& GetVulnerabilityOccurrencesSummaryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_GetVulnerabilityOccurrencesSummaryRequest.base);
  return *internal_default_instance();
}


void GetVulnerabilityOccurrencesSummaryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetVulnerabilityOccurrencesSummaryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
  return false;
#undef DO_
}

void GetVulnerabilityOccurrencesSummaryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
}

::google::protobuf::uint8* GetVulnerabilityOccurrencesSummaryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
  return target;
}

size_t GetVulnerabilityOccurrencesSummaryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVulnerabilityOccurrencesSummaryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVulnerabilityOccurrencesSummaryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVulnerabilityOccurrencesSummaryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
    MergeFrom(*source);
  }
}

void GetVulnerabilityOccurrencesSummaryRequest::MergeFrom(const GetVulnerabilityOccurrencesSummaryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
}

void GetVulnerabilityOccurrencesSummaryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVulnerabilityOccurrencesSummaryRequest::CopyFrom(const GetVulnerabilityOccurrencesSummaryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.GetVulnerabilityOccurrencesSummaryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVulnerabilityOccurrencesSummaryRequest::IsInitialized() const {
  return true;
}

void GetVulnerabilityOccurrencesSummaryRequest::Swap(GetVulnerabilityOccurrencesSummaryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVulnerabilityOccurrencesSummaryRequest::InternalSwap(GetVulnerabilityOccurrencesSummaryRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetVulnerabilityOccurrencesSummaryRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VulnerabilityOccurrencesSummary_FixableTotalByDigest::InitAsDefaultInstance() {
  ::grafeas::v1beta1::_VulnerabilityOccurrencesSummary_FixableTotalByDigest_default_instance_._instance.get_mutable()->resource_ = const_cast< ::grafeas::v1beta1::Resource*>(
      ::grafeas::v1beta1::Resource::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VulnerabilityOccurrencesSummary_FixableTotalByDigest::kResourceFieldNumber;
const int VulnerabilityOccurrencesSummary_FixableTotalByDigest::kSeverityFieldNumber;
const int VulnerabilityOccurrencesSummary_FixableTotalByDigest::kFixableCountFieldNumber;
const int VulnerabilityOccurrencesSummary_FixableTotalByDigest::kTotalCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VulnerabilityOccurrencesSummary_FixableTotalByDigest::VulnerabilityOccurrencesSummary_FixableTotalByDigest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_VulnerabilityOccurrencesSummary_FixableTotalByDigest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
}
VulnerabilityOccurrencesSummary_FixableTotalByDigest::VulnerabilityOccurrencesSummary_FixableTotalByDigest(const VulnerabilityOccurrencesSummary_FixableTotalByDigest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resource()) {
    resource_ = new ::grafeas::v1beta1::Resource(*from.resource_);
  } else {
    resource_ = NULL;
  }
  ::memcpy(&fixable_count_, &from.fixable_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&severity_) -
    reinterpret_cast<char*>(&fixable_count_)) + sizeof(severity_));
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
}

void VulnerabilityOccurrencesSummary_FixableTotalByDigest::SharedCtor() {
  ::memset(&resource_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&resource_)) + sizeof(severity_));
}

VulnerabilityOccurrencesSummary_FixableTotalByDigest::~VulnerabilityOccurrencesSummary_FixableTotalByDigest() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
  SharedDtor();
}

void VulnerabilityOccurrencesSummary_FixableTotalByDigest::SharedDtor() {
  if (this != internal_default_instance()) delete resource_;
}

void VulnerabilityOccurrencesSummary_FixableTotalByDigest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VulnerabilityOccurrencesSummary_FixableTotalByDigest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VulnerabilityOccurrencesSummary_FixableTotalByDigest& VulnerabilityOccurrencesSummary_FixableTotalByDigest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_VulnerabilityOccurrencesSummary_FixableTotalByDigest.base);
  return *internal_default_instance();
}


void VulnerabilityOccurrencesSummary_FixableTotalByDigest::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  ::memset(&fixable_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&fixable_count_)) + sizeof(severity_));
  _internal_metadata_.Clear();
}

bool VulnerabilityOccurrencesSummary_FixableTotalByDigest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grafeas.v1beta1.Resource resource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.vulnerability.Severity severity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_severity(static_cast< ::grafeas::v1beta1::vulnerability::Severity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 fixable_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fixable_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
  return false;
#undef DO_
}

void VulnerabilityOccurrencesSummary_FixableTotalByDigest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grafeas.v1beta1.Resource resource = 1;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_resource(), output);
  }

  // .grafeas.v1beta1.vulnerability.Severity severity = 2;
  if (this->severity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->severity(), output);
  }

  // int64 fixable_count = 3;
  if (this->fixable_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->fixable_count(), output);
  }

  // int64 total_count = 4;
  if (this->total_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->total_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
}

::google::protobuf::uint8* VulnerabilityOccurrencesSummary_FixableTotalByDigest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grafeas.v1beta1.Resource resource = 1;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_resource(), deterministic, target);
  }

  // .grafeas.v1beta1.vulnerability.Severity severity = 2;
  if (this->severity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->severity(), target);
  }

  // int64 fixable_count = 3;
  if (this->fixable_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->fixable_count(), target);
  }

  // int64 total_count = 4;
  if (this->total_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->total_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
  return target;
}

size_t VulnerabilityOccurrencesSummary_FixableTotalByDigest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grafeas.v1beta1.Resource resource = 1;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resource_);
  }

  // int64 fixable_count = 3;
  if (this->fixable_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fixable_count());
  }

  // int64 total_count = 4;
  if (this->total_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_count());
  }

  // .grafeas.v1beta1.vulnerability.Severity severity = 2;
  if (this->severity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->severity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VulnerabilityOccurrencesSummary_FixableTotalByDigest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
  GOOGLE_DCHECK_NE(&from, this);
  const VulnerabilityOccurrencesSummary_FixableTotalByDigest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VulnerabilityOccurrencesSummary_FixableTotalByDigest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
    MergeFrom(*source);
  }
}

void VulnerabilityOccurrencesSummary_FixableTotalByDigest::MergeFrom(const VulnerabilityOccurrencesSummary_FixableTotalByDigest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_resource()) {
    mutable_resource()->::grafeas::v1beta1::Resource::MergeFrom(from.resource());
  }
  if (from.fixable_count() != 0) {
    set_fixable_count(from.fixable_count());
  }
  if (from.total_count() != 0) {
    set_total_count(from.total_count());
  }
  if (from.severity() != 0) {
    set_severity(from.severity());
  }
}

void VulnerabilityOccurrencesSummary_FixableTotalByDigest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VulnerabilityOccurrencesSummary_FixableTotalByDigest::CopyFrom(const VulnerabilityOccurrencesSummary_FixableTotalByDigest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VulnerabilityOccurrencesSummary_FixableTotalByDigest::IsInitialized() const {
  return true;
}

void VulnerabilityOccurrencesSummary_FixableTotalByDigest::Swap(VulnerabilityOccurrencesSummary_FixableTotalByDigest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VulnerabilityOccurrencesSummary_FixableTotalByDigest::InternalSwap(VulnerabilityOccurrencesSummary_FixableTotalByDigest* other) {
  using std::swap;
  swap(resource_, other->resource_);
  swap(fixable_count_, other->fixable_count_);
  swap(total_count_, other->total_count_);
  swap(severity_, other->severity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VulnerabilityOccurrencesSummary_FixableTotalByDigest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VulnerabilityOccurrencesSummary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VulnerabilityOccurrencesSummary::kCountsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VulnerabilityOccurrencesSummary::VulnerabilityOccurrencesSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_VulnerabilityOccurrencesSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
}
VulnerabilityOccurrencesSummary::VulnerabilityOccurrencesSummary(const VulnerabilityOccurrencesSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      counts_(from.counts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
}

void VulnerabilityOccurrencesSummary::SharedCtor() {
}

VulnerabilityOccurrencesSummary::~VulnerabilityOccurrencesSummary() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
  SharedDtor();
}

void VulnerabilityOccurrencesSummary::SharedDtor() {
}

void VulnerabilityOccurrencesSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VulnerabilityOccurrencesSummary::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VulnerabilityOccurrencesSummary& VulnerabilityOccurrencesSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::scc_info_VulnerabilityOccurrencesSummary.base);
  return *internal_default_instance();
}


void VulnerabilityOccurrencesSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  counts_.Clear();
  _internal_metadata_.Clear();
}

bool VulnerabilityOccurrencesSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest counts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_counts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
  return false;
#undef DO_
}

void VulnerabilityOccurrencesSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest counts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->counts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->counts(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
}

::google::protobuf::uint8* VulnerabilityOccurrencesSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest counts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->counts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->counts(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
  return target;
}

size_t VulnerabilityOccurrencesSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .grafeas.v1beta1.VulnerabilityOccurrencesSummary.FixableTotalByDigest counts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->counts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->counts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VulnerabilityOccurrencesSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const VulnerabilityOccurrencesSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VulnerabilityOccurrencesSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
    MergeFrom(*source);
  }
}

void VulnerabilityOccurrencesSummary::MergeFrom(const VulnerabilityOccurrencesSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  counts_.MergeFrom(from.counts_);
}

void VulnerabilityOccurrencesSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VulnerabilityOccurrencesSummary::CopyFrom(const VulnerabilityOccurrencesSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.VulnerabilityOccurrencesSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VulnerabilityOccurrencesSummary::IsInitialized() const {
  return true;
}

void VulnerabilityOccurrencesSummary::Swap(VulnerabilityOccurrencesSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VulnerabilityOccurrencesSummary::InternalSwap(VulnerabilityOccurrencesSummary* other) {
  using std::swap;
  CastToBase(&counts_)->InternalSwap(CastToBase(&other->counts_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VulnerabilityOccurrencesSummary::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fgrafeas_2fgrafeas_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace grafeas
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::Occurrence* Arena::CreateMaybeMessage< ::grafeas::v1beta1::Occurrence >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::Occurrence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::Resource* Arena::CreateMaybeMessage< ::grafeas::v1beta1::Resource >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::Resource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::Note* Arena::CreateMaybeMessage< ::grafeas::v1beta1::Note >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::Note >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::GetOccurrenceRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::GetOccurrenceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::GetOccurrenceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::ListOccurrencesRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::ListOccurrencesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::ListOccurrencesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::ListOccurrencesResponse* Arena::CreateMaybeMessage< ::grafeas::v1beta1::ListOccurrencesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::ListOccurrencesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::DeleteOccurrenceRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::DeleteOccurrenceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::DeleteOccurrenceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::CreateOccurrenceRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::CreateOccurrenceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::CreateOccurrenceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::UpdateOccurrenceRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::UpdateOccurrenceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::UpdateOccurrenceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::GetNoteRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::GetNoteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::GetNoteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::GetOccurrenceNoteRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::GetOccurrenceNoteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::GetOccurrenceNoteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::ListNotesRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::ListNotesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::ListNotesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::ListNotesResponse* Arena::CreateMaybeMessage< ::grafeas::v1beta1::ListNotesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::ListNotesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::DeleteNoteRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::DeleteNoteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::DeleteNoteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::CreateNoteRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::CreateNoteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::CreateNoteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::UpdateNoteRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::UpdateNoteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::UpdateNoteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::ListNoteOccurrencesRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::ListNoteOccurrencesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::ListNoteOccurrencesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::ListNoteOccurrencesResponse* Arena::CreateMaybeMessage< ::grafeas::v1beta1::ListNoteOccurrencesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::ListNoteOccurrencesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::BatchCreateNotesRequest_NotesEntry_DoNotUse* Arena::CreateMaybeMessage< ::grafeas::v1beta1::BatchCreateNotesRequest_NotesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::BatchCreateNotesRequest_NotesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::BatchCreateNotesRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::BatchCreateNotesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::BatchCreateNotesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::BatchCreateNotesResponse* Arena::CreateMaybeMessage< ::grafeas::v1beta1::BatchCreateNotesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::BatchCreateNotesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::BatchCreateOccurrencesRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::BatchCreateOccurrencesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::BatchCreateOccurrencesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::BatchCreateOccurrencesResponse* Arena::CreateMaybeMessage< ::grafeas::v1beta1::BatchCreateOccurrencesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::BatchCreateOccurrencesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::VulnerabilityOccurrencesSummary_FixableTotalByDigest* Arena::CreateMaybeMessage< ::grafeas::v1beta1::VulnerabilityOccurrencesSummary_FixableTotalByDigest >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::VulnerabilityOccurrencesSummary_FixableTotalByDigest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::VulnerabilityOccurrencesSummary* Arena::CreateMaybeMessage< ::grafeas::v1beta1::VulnerabilityOccurrencesSummary >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::VulnerabilityOccurrencesSummary >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
