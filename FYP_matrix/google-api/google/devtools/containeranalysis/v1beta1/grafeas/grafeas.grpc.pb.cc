// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/devtools/containeranalysis/v1beta1/grafeas/grafeas.proto

#include "google/devtools/containeranalysis/v1beta1/grafeas/grafeas.pb.h"
#include "google/devtools/containeranalysis/v1beta1/grafeas/grafeas.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace grafeas {
namespace v1beta1 {

static const char* GrafeasV1Beta1_method_names[] = {
  "/grafeas.v1beta1.GrafeasV1Beta1/GetOccurrence",
  "/grafeas.v1beta1.GrafeasV1Beta1/ListOccurrences",
  "/grafeas.v1beta1.GrafeasV1Beta1/DeleteOccurrence",
  "/grafeas.v1beta1.GrafeasV1Beta1/CreateOccurrence",
  "/grafeas.v1beta1.GrafeasV1Beta1/BatchCreateOccurrences",
  "/grafeas.v1beta1.GrafeasV1Beta1/UpdateOccurrence",
  "/grafeas.v1beta1.GrafeasV1Beta1/GetOccurrenceNote",
  "/grafeas.v1beta1.GrafeasV1Beta1/GetNote",
  "/grafeas.v1beta1.GrafeasV1Beta1/ListNotes",
  "/grafeas.v1beta1.GrafeasV1Beta1/DeleteNote",
  "/grafeas.v1beta1.GrafeasV1Beta1/CreateNote",
  "/grafeas.v1beta1.GrafeasV1Beta1/BatchCreateNotes",
  "/grafeas.v1beta1.GrafeasV1Beta1/UpdateNote",
  "/grafeas.v1beta1.GrafeasV1Beta1/ListNoteOccurrences",
  "/grafeas.v1beta1.GrafeasV1Beta1/GetVulnerabilityOccurrencesSummary",
};

std::unique_ptr< GrafeasV1Beta1::Stub> GrafeasV1Beta1::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< GrafeasV1Beta1::Stub> stub(new GrafeasV1Beta1::Stub(channel));
  return stub;
}

GrafeasV1Beta1::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_GetOccurrence_(GrafeasV1Beta1_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListOccurrences_(GrafeasV1Beta1_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteOccurrence_(GrafeasV1Beta1_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateOccurrence_(GrafeasV1Beta1_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_BatchCreateOccurrences_(GrafeasV1Beta1_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateOccurrence_(GrafeasV1Beta1_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetOccurrenceNote_(GrafeasV1Beta1_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetNote_(GrafeasV1Beta1_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListNotes_(GrafeasV1Beta1_method_names[8], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteNote_(GrafeasV1Beta1_method_names[9], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateNote_(GrafeasV1Beta1_method_names[10], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_BatchCreateNotes_(GrafeasV1Beta1_method_names[11], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateNote_(GrafeasV1Beta1_method_names[12], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListNoteOccurrences_(GrafeasV1Beta1_method_names[13], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetVulnerabilityOccurrencesSummary_(GrafeasV1Beta1_method_names[14], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status GrafeasV1Beta1::Stub::GetOccurrence(::grpc::ClientContext* context, const ::grafeas::v1beta1::GetOccurrenceRequest& request, ::grafeas::v1beta1::Occurrence* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetOccurrence_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Occurrence>* GrafeasV1Beta1::Stub::AsyncGetOccurrenceRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::GetOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Occurrence>::Create(channel_.get(), cq, rpcmethod_GetOccurrence_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Occurrence>* GrafeasV1Beta1::Stub::PrepareAsyncGetOccurrenceRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::GetOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Occurrence>::Create(channel_.get(), cq, rpcmethod_GetOccurrence_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::ListOccurrences(::grpc::ClientContext* context, const ::grafeas::v1beta1::ListOccurrencesRequest& request, ::grafeas::v1beta1::ListOccurrencesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListOccurrences_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::ListOccurrencesResponse>* GrafeasV1Beta1::Stub::AsyncListOccurrencesRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::ListOccurrencesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::ListOccurrencesResponse>::Create(channel_.get(), cq, rpcmethod_ListOccurrences_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::ListOccurrencesResponse>* GrafeasV1Beta1::Stub::PrepareAsyncListOccurrencesRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::ListOccurrencesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::ListOccurrencesResponse>::Create(channel_.get(), cq, rpcmethod_ListOccurrences_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::DeleteOccurrence(::grpc::ClientContext* context, const ::grafeas::v1beta1::DeleteOccurrenceRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteOccurrence_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* GrafeasV1Beta1::Stub::AsyncDeleteOccurrenceRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::DeleteOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteOccurrence_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* GrafeasV1Beta1::Stub::PrepareAsyncDeleteOccurrenceRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::DeleteOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteOccurrence_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::CreateOccurrence(::grpc::ClientContext* context, const ::grafeas::v1beta1::CreateOccurrenceRequest& request, ::grafeas::v1beta1::Occurrence* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateOccurrence_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Occurrence>* GrafeasV1Beta1::Stub::AsyncCreateOccurrenceRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::CreateOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Occurrence>::Create(channel_.get(), cq, rpcmethod_CreateOccurrence_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Occurrence>* GrafeasV1Beta1::Stub::PrepareAsyncCreateOccurrenceRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::CreateOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Occurrence>::Create(channel_.get(), cq, rpcmethod_CreateOccurrence_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::BatchCreateOccurrences(::grpc::ClientContext* context, const ::grafeas::v1beta1::BatchCreateOccurrencesRequest& request, ::grafeas::v1beta1::BatchCreateOccurrencesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_BatchCreateOccurrences_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::BatchCreateOccurrencesResponse>* GrafeasV1Beta1::Stub::AsyncBatchCreateOccurrencesRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::BatchCreateOccurrencesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::BatchCreateOccurrencesResponse>::Create(channel_.get(), cq, rpcmethod_BatchCreateOccurrences_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::BatchCreateOccurrencesResponse>* GrafeasV1Beta1::Stub::PrepareAsyncBatchCreateOccurrencesRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::BatchCreateOccurrencesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::BatchCreateOccurrencesResponse>::Create(channel_.get(), cq, rpcmethod_BatchCreateOccurrences_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::UpdateOccurrence(::grpc::ClientContext* context, const ::grafeas::v1beta1::UpdateOccurrenceRequest& request, ::grafeas::v1beta1::Occurrence* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateOccurrence_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Occurrence>* GrafeasV1Beta1::Stub::AsyncUpdateOccurrenceRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::UpdateOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Occurrence>::Create(channel_.get(), cq, rpcmethod_UpdateOccurrence_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Occurrence>* GrafeasV1Beta1::Stub::PrepareAsyncUpdateOccurrenceRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::UpdateOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Occurrence>::Create(channel_.get(), cq, rpcmethod_UpdateOccurrence_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::GetOccurrenceNote(::grpc::ClientContext* context, const ::grafeas::v1beta1::GetOccurrenceNoteRequest& request, ::grafeas::v1beta1::Note* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetOccurrenceNote_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Note>* GrafeasV1Beta1::Stub::AsyncGetOccurrenceNoteRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::GetOccurrenceNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Note>::Create(channel_.get(), cq, rpcmethod_GetOccurrenceNote_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Note>* GrafeasV1Beta1::Stub::PrepareAsyncGetOccurrenceNoteRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::GetOccurrenceNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Note>::Create(channel_.get(), cq, rpcmethod_GetOccurrenceNote_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::GetNote(::grpc::ClientContext* context, const ::grafeas::v1beta1::GetNoteRequest& request, ::grafeas::v1beta1::Note* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetNote_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Note>* GrafeasV1Beta1::Stub::AsyncGetNoteRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::GetNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Note>::Create(channel_.get(), cq, rpcmethod_GetNote_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Note>* GrafeasV1Beta1::Stub::PrepareAsyncGetNoteRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::GetNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Note>::Create(channel_.get(), cq, rpcmethod_GetNote_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::ListNotes(::grpc::ClientContext* context, const ::grafeas::v1beta1::ListNotesRequest& request, ::grafeas::v1beta1::ListNotesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListNotes_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::ListNotesResponse>* GrafeasV1Beta1::Stub::AsyncListNotesRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::ListNotesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::ListNotesResponse>::Create(channel_.get(), cq, rpcmethod_ListNotes_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::ListNotesResponse>* GrafeasV1Beta1::Stub::PrepareAsyncListNotesRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::ListNotesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::ListNotesResponse>::Create(channel_.get(), cq, rpcmethod_ListNotes_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::DeleteNote(::grpc::ClientContext* context, const ::grafeas::v1beta1::DeleteNoteRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteNote_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* GrafeasV1Beta1::Stub::AsyncDeleteNoteRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::DeleteNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteNote_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* GrafeasV1Beta1::Stub::PrepareAsyncDeleteNoteRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::DeleteNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteNote_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::CreateNote(::grpc::ClientContext* context, const ::grafeas::v1beta1::CreateNoteRequest& request, ::grafeas::v1beta1::Note* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateNote_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Note>* GrafeasV1Beta1::Stub::AsyncCreateNoteRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::CreateNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Note>::Create(channel_.get(), cq, rpcmethod_CreateNote_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Note>* GrafeasV1Beta1::Stub::PrepareAsyncCreateNoteRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::CreateNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Note>::Create(channel_.get(), cq, rpcmethod_CreateNote_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::BatchCreateNotes(::grpc::ClientContext* context, const ::grafeas::v1beta1::BatchCreateNotesRequest& request, ::grafeas::v1beta1::BatchCreateNotesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_BatchCreateNotes_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::BatchCreateNotesResponse>* GrafeasV1Beta1::Stub::AsyncBatchCreateNotesRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::BatchCreateNotesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::BatchCreateNotesResponse>::Create(channel_.get(), cq, rpcmethod_BatchCreateNotes_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::BatchCreateNotesResponse>* GrafeasV1Beta1::Stub::PrepareAsyncBatchCreateNotesRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::BatchCreateNotesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::BatchCreateNotesResponse>::Create(channel_.get(), cq, rpcmethod_BatchCreateNotes_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::UpdateNote(::grpc::ClientContext* context, const ::grafeas::v1beta1::UpdateNoteRequest& request, ::grafeas::v1beta1::Note* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateNote_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Note>* GrafeasV1Beta1::Stub::AsyncUpdateNoteRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::UpdateNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Note>::Create(channel_.get(), cq, rpcmethod_UpdateNote_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::Note>* GrafeasV1Beta1::Stub::PrepareAsyncUpdateNoteRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::UpdateNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::Note>::Create(channel_.get(), cq, rpcmethod_UpdateNote_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::ListNoteOccurrences(::grpc::ClientContext* context, const ::grafeas::v1beta1::ListNoteOccurrencesRequest& request, ::grafeas::v1beta1::ListNoteOccurrencesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListNoteOccurrences_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::ListNoteOccurrencesResponse>* GrafeasV1Beta1::Stub::AsyncListNoteOccurrencesRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::ListNoteOccurrencesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::ListNoteOccurrencesResponse>::Create(channel_.get(), cq, rpcmethod_ListNoteOccurrences_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::ListNoteOccurrencesResponse>* GrafeasV1Beta1::Stub::PrepareAsyncListNoteOccurrencesRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::ListNoteOccurrencesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::ListNoteOccurrencesResponse>::Create(channel_.get(), cq, rpcmethod_ListNoteOccurrences_, context, request, false);
}

::grpc::Status GrafeasV1Beta1::Stub::GetVulnerabilityOccurrencesSummary(::grpc::ClientContext* context, const ::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest& request, ::grafeas::v1beta1::VulnerabilityOccurrencesSummary* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetVulnerabilityOccurrencesSummary_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::VulnerabilityOccurrencesSummary>* GrafeasV1Beta1::Stub::AsyncGetVulnerabilityOccurrencesSummaryRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::VulnerabilityOccurrencesSummary>::Create(channel_.get(), cq, rpcmethod_GetVulnerabilityOccurrencesSummary_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::grafeas::v1beta1::VulnerabilityOccurrencesSummary>* GrafeasV1Beta1::Stub::PrepareAsyncGetVulnerabilityOccurrencesSummaryRaw(::grpc::ClientContext* context, const ::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::grafeas::v1beta1::VulnerabilityOccurrencesSummary>::Create(channel_.get(), cq, rpcmethod_GetVulnerabilityOccurrencesSummary_, context, request, false);
}

GrafeasV1Beta1::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::GetOccurrenceRequest, ::grafeas::v1beta1::Occurrence>(
          std::mem_fn(&GrafeasV1Beta1::Service::GetOccurrence), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::ListOccurrencesRequest, ::grafeas::v1beta1::ListOccurrencesResponse>(
          std::mem_fn(&GrafeasV1Beta1::Service::ListOccurrences), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::DeleteOccurrenceRequest, ::google::protobuf::Empty>(
          std::mem_fn(&GrafeasV1Beta1::Service::DeleteOccurrence), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::CreateOccurrenceRequest, ::grafeas::v1beta1::Occurrence>(
          std::mem_fn(&GrafeasV1Beta1::Service::CreateOccurrence), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::BatchCreateOccurrencesRequest, ::grafeas::v1beta1::BatchCreateOccurrencesResponse>(
          std::mem_fn(&GrafeasV1Beta1::Service::BatchCreateOccurrences), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::UpdateOccurrenceRequest, ::grafeas::v1beta1::Occurrence>(
          std::mem_fn(&GrafeasV1Beta1::Service::UpdateOccurrence), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::GetOccurrenceNoteRequest, ::grafeas::v1beta1::Note>(
          std::mem_fn(&GrafeasV1Beta1::Service::GetOccurrenceNote), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::GetNoteRequest, ::grafeas::v1beta1::Note>(
          std::mem_fn(&GrafeasV1Beta1::Service::GetNote), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::ListNotesRequest, ::grafeas::v1beta1::ListNotesResponse>(
          std::mem_fn(&GrafeasV1Beta1::Service::ListNotes), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::DeleteNoteRequest, ::google::protobuf::Empty>(
          std::mem_fn(&GrafeasV1Beta1::Service::DeleteNote), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::CreateNoteRequest, ::grafeas::v1beta1::Note>(
          std::mem_fn(&GrafeasV1Beta1::Service::CreateNote), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::BatchCreateNotesRequest, ::grafeas::v1beta1::BatchCreateNotesResponse>(
          std::mem_fn(&GrafeasV1Beta1::Service::BatchCreateNotes), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::UpdateNoteRequest, ::grafeas::v1beta1::Note>(
          std::mem_fn(&GrafeasV1Beta1::Service::UpdateNote), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::ListNoteOccurrencesRequest, ::grafeas::v1beta1::ListNoteOccurrencesResponse>(
          std::mem_fn(&GrafeasV1Beta1::Service::ListNoteOccurrences), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrafeasV1Beta1_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GrafeasV1Beta1::Service, ::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest, ::grafeas::v1beta1::VulnerabilityOccurrencesSummary>(
          std::mem_fn(&GrafeasV1Beta1::Service::GetVulnerabilityOccurrencesSummary), this)));
}

GrafeasV1Beta1::Service::~Service() {
}

::grpc::Status GrafeasV1Beta1::Service::GetOccurrence(::grpc::ServerContext* context, const ::grafeas::v1beta1::GetOccurrenceRequest* request, ::grafeas::v1beta1::Occurrence* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::ListOccurrences(::grpc::ServerContext* context, const ::grafeas::v1beta1::ListOccurrencesRequest* request, ::grafeas::v1beta1::ListOccurrencesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::DeleteOccurrence(::grpc::ServerContext* context, const ::grafeas::v1beta1::DeleteOccurrenceRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::CreateOccurrence(::grpc::ServerContext* context, const ::grafeas::v1beta1::CreateOccurrenceRequest* request, ::grafeas::v1beta1::Occurrence* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::BatchCreateOccurrences(::grpc::ServerContext* context, const ::grafeas::v1beta1::BatchCreateOccurrencesRequest* request, ::grafeas::v1beta1::BatchCreateOccurrencesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::UpdateOccurrence(::grpc::ServerContext* context, const ::grafeas::v1beta1::UpdateOccurrenceRequest* request, ::grafeas::v1beta1::Occurrence* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::GetOccurrenceNote(::grpc::ServerContext* context, const ::grafeas::v1beta1::GetOccurrenceNoteRequest* request, ::grafeas::v1beta1::Note* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::GetNote(::grpc::ServerContext* context, const ::grafeas::v1beta1::GetNoteRequest* request, ::grafeas::v1beta1::Note* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::ListNotes(::grpc::ServerContext* context, const ::grafeas::v1beta1::ListNotesRequest* request, ::grafeas::v1beta1::ListNotesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::DeleteNote(::grpc::ServerContext* context, const ::grafeas::v1beta1::DeleteNoteRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::CreateNote(::grpc::ServerContext* context, const ::grafeas::v1beta1::CreateNoteRequest* request, ::grafeas::v1beta1::Note* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::BatchCreateNotes(::grpc::ServerContext* context, const ::grafeas::v1beta1::BatchCreateNotesRequest* request, ::grafeas::v1beta1::BatchCreateNotesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::UpdateNote(::grpc::ServerContext* context, const ::grafeas::v1beta1::UpdateNoteRequest* request, ::grafeas::v1beta1::Note* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::ListNoteOccurrences(::grpc::ServerContext* context, const ::grafeas::v1beta1::ListNoteOccurrencesRequest* request, ::grafeas::v1beta1::ListNoteOccurrencesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GrafeasV1Beta1::Service::GetVulnerabilityOccurrencesSummary(::grpc::ServerContext* context, const ::grafeas::v1beta1::GetVulnerabilityOccurrencesSummaryRequest* request, ::grafeas::v1beta1::VulnerabilityOccurrencesSummary* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace grafeas
}  // namespace v1beta1

