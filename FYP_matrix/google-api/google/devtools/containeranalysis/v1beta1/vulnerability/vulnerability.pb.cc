// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/containeranalysis/v1beta1/vulnerability/vulnerability.proto

#include "google/devtools/containeranalysis/v1beta1/vulnerability/vulnerability.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcommon_2fcommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcommon_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RelatedUrl;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcommon_2fcommon_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fpackage_2fpackage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fpackage_2fpackage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Version;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fpackage_2fpackage_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PackageIssue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VulnerabilityLocation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Vulnerability_Detail;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto
namespace grafeas {
namespace v1beta1 {
namespace vulnerability {
class Vulnerability_DetailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vulnerability_Detail>
      _instance;
} _Vulnerability_Detail_default_instance_;
class VulnerabilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vulnerability>
      _instance;
} _Vulnerability_default_instance_;
class DetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Details>
      _instance;
} _Details_default_instance_;
class PackageIssueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PackageIssue>
      _instance;
} _PackageIssue_default_instance_;
class VulnerabilityLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VulnerabilityLocation>
      _instance;
} _VulnerabilityLocation_default_instance_;
}  // namespace vulnerability
}  // namespace v1beta1
}  // namespace grafeas
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto {
static void InitDefaultsVulnerability_Detail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::vulnerability::_Vulnerability_Detail_default_instance_;
    new (ptr) ::grafeas::v1beta1::vulnerability::Vulnerability_Detail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::vulnerability::Vulnerability_Detail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Vulnerability_Detail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVulnerability_Detail}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fpackage_2fpackage_2eproto::scc_info_Version.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_VulnerabilityLocation.base,}};

static void InitDefaultsVulnerability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::vulnerability::_Vulnerability_default_instance_;
    new (ptr) ::grafeas::v1beta1::vulnerability::Vulnerability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::vulnerability::Vulnerability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Vulnerability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVulnerability}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_Vulnerability_Detail.base,}};

static void InitDefaultsDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::vulnerability::_Details_default_instance_;
    new (ptr) ::grafeas::v1beta1::vulnerability::Details();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::vulnerability::Details::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Details =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDetails}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_PackageIssue.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcommon_2fcommon_2eproto::scc_info_RelatedUrl.base,}};

static void InitDefaultsPackageIssue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::vulnerability::_PackageIssue_default_instance_;
    new (ptr) ::grafeas::v1beta1::vulnerability::PackageIssue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::vulnerability::PackageIssue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PackageIssue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPackageIssue}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_VulnerabilityLocation.base,}};

static void InitDefaultsVulnerabilityLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::vulnerability::_VulnerabilityLocation_default_instance_;
    new (ptr) ::grafeas::v1beta1::vulnerability::VulnerabilityLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::vulnerability::VulnerabilityLocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VulnerabilityLocation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVulnerabilityLocation}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fpackage_2fpackage_2eproto::scc_info_Version.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Vulnerability_Detail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vulnerability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Details.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PackageIssue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VulnerabilityLocation.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability_Detail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability_Detail, cpe_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability_Detail, package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability_Detail, min_affected_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability_Detail, max_affected_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability_Detail, severity_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability_Detail, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability_Detail, fixed_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability_Detail, package_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability_Detail, is_obsolete_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability, cvss_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability, severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Vulnerability, details_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Details, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Details, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Details, severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Details, cvss_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Details, package_issue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Details, short_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Details, long_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::Details, related_urls_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::PackageIssue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::PackageIssue, affected_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::PackageIssue, fixed_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::PackageIssue, severity_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::VulnerabilityLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::VulnerabilityLocation, cpe_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::VulnerabilityLocation, package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::vulnerability::VulnerabilityLocation, version_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grafeas::v1beta1::vulnerability::Vulnerability_Detail)},
  { 14, -1, sizeof(::grafeas::v1beta1::vulnerability::Vulnerability)},
  { 22, -1, sizeof(::grafeas::v1beta1::vulnerability::Details)},
  { 34, -1, sizeof(::grafeas::v1beta1::vulnerability::PackageIssue)},
  { 42, -1, sizeof(::grafeas::v1beta1::vulnerability::VulnerabilityLocation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::vulnerability::_Vulnerability_Detail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::vulnerability::_Vulnerability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::vulnerability::_Details_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::vulnerability::_PackageIssue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::vulnerability::_VulnerabilityLocation_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/devtools/containeranalysis/v1beta1/vulnerability/vulnerability.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nKgoogle/devtools/containeranalysis/v1be"
      "ta1/vulnerability/vulnerability.proto\022\035g"
      "rafeas.v1beta1.vulnerability\032=google/dev"
      "tools/containeranalysis/v1beta1/common/c"
      "ommon.proto\032\?google/devtools/containeran"
      "alysis/v1beta1/package/package.proto\"\366\003\n"
      "\rVulnerability\022\022\n\ncvss_score\030\001 \001(\002\0229\n\010se"
      "verity\030\002 \001(\0162\'.grafeas.v1beta1.vulnerabi"
      "lity.Severity\022D\n\007details\030\003 \003(\01323.grafeas"
      ".v1beta1.vulnerability.Vulnerability.Det"
      "ail\032\317\002\n\006Detail\022\017\n\007cpe_uri\030\001 \001(\t\022\017\n\007packa"
      "ge\030\002 \001(\t\022>\n\024min_affected_version\030\003 \001(\0132 "
      ".grafeas.v1beta1.package.Version\022>\n\024max_"
      "affected_version\030\004 \001(\0132 .grafeas.v1beta1"
      ".package.Version\022\025\n\rseverity_name\030\005 \001(\t\022"
      "\023\n\013description\030\006 \001(\t\022L\n\016fixed_location\030\007"
      " \001(\01324.grafeas.v1beta1.vulnerability.Vul"
      "nerabilityLocation\022\024\n\014package_type\030\010 \001(\t"
      "\022\023\n\013is_obsolete\030\t \001(\010\"\222\002\n\007Details\022\014\n\004typ"
      "e\030\001 \001(\t\0229\n\010severity\030\002 \001(\0162\'.grafeas.v1be"
      "ta1.vulnerability.Severity\022\022\n\ncvss_score"
      "\030\003 \001(\002\022B\n\rpackage_issue\030\004 \003(\0132+.grafeas."
      "v1beta1.vulnerability.PackageIssue\022\031\n\021sh"
      "ort_description\030\005 \001(\t\022\030\n\020long_descriptio"
      "n\030\006 \001(\t\0221\n\014related_urls\030\007 \003(\0132\033.grafeas."
      "v1beta1.RelatedUrl\"\304\001\n\014PackageIssue\022O\n\021a"
      "ffected_location\030\001 \001(\01324.grafeas.v1beta1"
      ".vulnerability.VulnerabilityLocation\022L\n\016"
      "fixed_location\030\002 \001(\01324.grafeas.v1beta1.v"
      "ulnerability.VulnerabilityLocation\022\025\n\rse"
      "verity_name\030\003 \001(\t\"l\n\025VulnerabilityLocati"
      "on\022\017\n\007cpe_uri\030\001 \001(\t\022\017\n\007package\030\002 \001(\t\0221\n\007"
      "version\030\003 \001(\0132 .grafeas.v1beta1.package."
      "Version*^\n\010Severity\022\030\n\024SEVERITY_UNSPECIF"
      "IED\020\000\022\013\n\007MINIMAL\020\001\022\007\n\003LOW\020\002\022\n\n\006MEDIUM\020\003\022"
      "\010\n\004HIGH\020\004\022\014\n\010CRITICAL\020\005B\220\001\n io.grafeas.v"
      "1beta1.vulnerabilityP\001Zdgoogle.golang.or"
      "g/genproto/googleapis/devtools/container"
      "analysis/v1beta1/vulnerability;vulnerabi"
      "lity\242\002\003GRAb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1578);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/containeranalysis/v1beta1/vulnerability/vulnerability.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcommon_2fcommon_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fpackage_2fpackage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto
namespace grafeas {
namespace v1beta1 {
namespace vulnerability {
const ::google::protobuf::EnumDescriptor* Severity_descriptor() {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::file_level_enum_descriptors[0];
}
bool Severity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Vulnerability_Detail::InitAsDefaultInstance() {
  ::grafeas::v1beta1::vulnerability::_Vulnerability_Detail_default_instance_._instance.get_mutable()->min_affected_version_ = const_cast< ::grafeas::v1beta1::package::Version*>(
      ::grafeas::v1beta1::package::Version::internal_default_instance());
  ::grafeas::v1beta1::vulnerability::_Vulnerability_Detail_default_instance_._instance.get_mutable()->max_affected_version_ = const_cast< ::grafeas::v1beta1::package::Version*>(
      ::grafeas::v1beta1::package::Version::internal_default_instance());
  ::grafeas::v1beta1::vulnerability::_Vulnerability_Detail_default_instance_._instance.get_mutable()->fixed_location_ = const_cast< ::grafeas::v1beta1::vulnerability::VulnerabilityLocation*>(
      ::grafeas::v1beta1::vulnerability::VulnerabilityLocation::internal_default_instance());
}
void Vulnerability_Detail::clear_min_affected_version() {
  if (GetArenaNoVirtual() == NULL && min_affected_version_ != NULL) {
    delete min_affected_version_;
  }
  min_affected_version_ = NULL;
}
void Vulnerability_Detail::clear_max_affected_version() {
  if (GetArenaNoVirtual() == NULL && max_affected_version_ != NULL) {
    delete max_affected_version_;
  }
  max_affected_version_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vulnerability_Detail::kCpeUriFieldNumber;
const int Vulnerability_Detail::kPackageFieldNumber;
const int Vulnerability_Detail::kMinAffectedVersionFieldNumber;
const int Vulnerability_Detail::kMaxAffectedVersionFieldNumber;
const int Vulnerability_Detail::kSeverityNameFieldNumber;
const int Vulnerability_Detail::kDescriptionFieldNumber;
const int Vulnerability_Detail::kFixedLocationFieldNumber;
const int Vulnerability_Detail::kPackageTypeFieldNumber;
const int Vulnerability_Detail::kIsObsoleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vulnerability_Detail::Vulnerability_Detail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_Vulnerability_Detail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
}
Vulnerability_Detail::Vulnerability_Detail(const Vulnerability_Detail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cpe_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cpe_uri().size() > 0) {
    cpe_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpe_uri_);
  }
  package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.package().size() > 0) {
    package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  severity_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.severity_name().size() > 0) {
    severity_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.severity_name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  package_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.package_type().size() > 0) {
    package_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_type_);
  }
  if (from.has_min_affected_version()) {
    min_affected_version_ = new ::grafeas::v1beta1::package::Version(*from.min_affected_version_);
  } else {
    min_affected_version_ = NULL;
  }
  if (from.has_max_affected_version()) {
    max_affected_version_ = new ::grafeas::v1beta1::package::Version(*from.max_affected_version_);
  } else {
    max_affected_version_ = NULL;
  }
  if (from.has_fixed_location()) {
    fixed_location_ = new ::grafeas::v1beta1::vulnerability::VulnerabilityLocation(*from.fixed_location_);
  } else {
    fixed_location_ = NULL;
  }
  is_obsolete_ = from.is_obsolete_;
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
}

void Vulnerability_Detail::SharedCtor() {
  cpe_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  severity_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&min_affected_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_obsolete_) -
      reinterpret_cast<char*>(&min_affected_version_)) + sizeof(is_obsolete_));
}

Vulnerability_Detail::~Vulnerability_Detail() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
  SharedDtor();
}

void Vulnerability_Detail::SharedDtor() {
  cpe_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  severity_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete min_affected_version_;
  if (this != internal_default_instance()) delete max_affected_version_;
  if (this != internal_default_instance()) delete fixed_location_;
}

void Vulnerability_Detail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vulnerability_Detail::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vulnerability_Detail& Vulnerability_Detail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_Vulnerability_Detail.base);
  return *internal_default_instance();
}


void Vulnerability_Detail::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cpe_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  severity_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && min_affected_version_ != NULL) {
    delete min_affected_version_;
  }
  min_affected_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_affected_version_ != NULL) {
    delete max_affected_version_;
  }
  max_affected_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && fixed_location_ != NULL) {
    delete fixed_location_;
  }
  fixed_location_ = NULL;
  is_obsolete_ = false;
  _internal_metadata_.Clear();
}

bool Vulnerability_Detail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cpe_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpe_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cpe_uri().data(), static_cast<int>(this->cpe_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.vulnerability.Vulnerability.Detail.cpe_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string package = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package().data(), static_cast<int>(this->package().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.vulnerability.Vulnerability.Detail.package"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.package.Version min_affected_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_affected_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.package.Version max_affected_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_affected_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string severity_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_severity_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->severity_name().data(), static_cast<int>(this->severity_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.vulnerability.Vulnerability.Detail.severity_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.vulnerability.Vulnerability.Detail.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.vulnerability.VulnerabilityLocation fixed_location = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fixed_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string package_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package_type().data(), static_cast<int>(this->package_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.vulnerability.Vulnerability.Detail.package_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_obsolete = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_obsolete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
  return false;
#undef DO_
}

void Vulnerability_Detail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cpe_uri = 1;
  if (this->cpe_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpe_uri().data(), static_cast<int>(this->cpe_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Vulnerability.Detail.cpe_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cpe_uri(), output);
  }

  // string package = 2;
  if (this->package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package().data(), static_cast<int>(this->package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Vulnerability.Detail.package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->package(), output);
  }

  // .grafeas.v1beta1.package.Version min_affected_version = 3;
  if (this->has_min_affected_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_min_affected_version(), output);
  }

  // .grafeas.v1beta1.package.Version max_affected_version = 4;
  if (this->has_max_affected_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_max_affected_version(), output);
  }

  // string severity_name = 5;
  if (this->severity_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->severity_name().data(), static_cast<int>(this->severity_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Vulnerability.Detail.severity_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->severity_name(), output);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Vulnerability.Detail.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // .grafeas.v1beta1.vulnerability.VulnerabilityLocation fixed_location = 7;
  if (this->has_fixed_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_fixed_location(), output);
  }

  // string package_type = 8;
  if (this->package_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_type().data(), static_cast<int>(this->package_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Vulnerability.Detail.package_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->package_type(), output);
  }

  // bool is_obsolete = 9;
  if (this->is_obsolete() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_obsolete(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
}

::google::protobuf::uint8* Vulnerability_Detail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cpe_uri = 1;
  if (this->cpe_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpe_uri().data(), static_cast<int>(this->cpe_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Vulnerability.Detail.cpe_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cpe_uri(), target);
  }

  // string package = 2;
  if (this->package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package().data(), static_cast<int>(this->package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Vulnerability.Detail.package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->package(), target);
  }

  // .grafeas.v1beta1.package.Version min_affected_version = 3;
  if (this->has_min_affected_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_min_affected_version(), deterministic, target);
  }

  // .grafeas.v1beta1.package.Version max_affected_version = 4;
  if (this->has_max_affected_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_max_affected_version(), deterministic, target);
  }

  // string severity_name = 5;
  if (this->severity_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->severity_name().data(), static_cast<int>(this->severity_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Vulnerability.Detail.severity_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->severity_name(), target);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Vulnerability.Detail.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // .grafeas.v1beta1.vulnerability.VulnerabilityLocation fixed_location = 7;
  if (this->has_fixed_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_fixed_location(), deterministic, target);
  }

  // string package_type = 8;
  if (this->package_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_type().data(), static_cast<int>(this->package_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Vulnerability.Detail.package_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->package_type(), target);
  }

  // bool is_obsolete = 9;
  if (this->is_obsolete() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_obsolete(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
  return target;
}

size_t Vulnerability_Detail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cpe_uri = 1;
  if (this->cpe_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cpe_uri());
  }

  // string package = 2;
  if (this->package().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package());
  }

  // string severity_name = 5;
  if (this->severity_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->severity_name());
  }

  // string description = 6;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string package_type = 8;
  if (this->package_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package_type());
  }

  // .grafeas.v1beta1.package.Version min_affected_version = 3;
  if (this->has_min_affected_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_affected_version_);
  }

  // .grafeas.v1beta1.package.Version max_affected_version = 4;
  if (this->has_max_affected_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_affected_version_);
  }

  // .grafeas.v1beta1.vulnerability.VulnerabilityLocation fixed_location = 7;
  if (this->has_fixed_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fixed_location_);
  }

  // bool is_obsolete = 9;
  if (this->is_obsolete() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vulnerability_Detail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
  GOOGLE_DCHECK_NE(&from, this);
  const Vulnerability_Detail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vulnerability_Detail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
    MergeFrom(*source);
  }
}

void Vulnerability_Detail::MergeFrom(const Vulnerability_Detail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cpe_uri().size() > 0) {

    cpe_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpe_uri_);
  }
  if (from.package().size() > 0) {

    package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  if (from.severity_name().size() > 0) {

    severity_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.severity_name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.package_type().size() > 0) {

    package_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_type_);
  }
  if (from.has_min_affected_version()) {
    mutable_min_affected_version()->::grafeas::v1beta1::package::Version::MergeFrom(from.min_affected_version());
  }
  if (from.has_max_affected_version()) {
    mutable_max_affected_version()->::grafeas::v1beta1::package::Version::MergeFrom(from.max_affected_version());
  }
  if (from.has_fixed_location()) {
    mutable_fixed_location()->::grafeas::v1beta1::vulnerability::VulnerabilityLocation::MergeFrom(from.fixed_location());
  }
  if (from.is_obsolete() != 0) {
    set_is_obsolete(from.is_obsolete());
  }
}

void Vulnerability_Detail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vulnerability_Detail::CopyFrom(const Vulnerability_Detail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.vulnerability.Vulnerability.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vulnerability_Detail::IsInitialized() const {
  return true;
}

void Vulnerability_Detail::Swap(Vulnerability_Detail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vulnerability_Detail::InternalSwap(Vulnerability_Detail* other) {
  using std::swap;
  cpe_uri_.Swap(&other->cpe_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  package_.Swap(&other->package_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  severity_name_.Swap(&other->severity_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  package_type_.Swap(&other->package_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(min_affected_version_, other->min_affected_version_);
  swap(max_affected_version_, other->max_affected_version_);
  swap(fixed_location_, other->fixed_location_);
  swap(is_obsolete_, other->is_obsolete_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vulnerability_Detail::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vulnerability::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vulnerability::kCvssScoreFieldNumber;
const int Vulnerability::kSeverityFieldNumber;
const int Vulnerability::kDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vulnerability::Vulnerability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_Vulnerability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.vulnerability.Vulnerability)
}
Vulnerability::Vulnerability(const Vulnerability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      details_(from.details_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cvss_score_, &from.cvss_score_,
    static_cast<size_t>(reinterpret_cast<char*>(&severity_) -
    reinterpret_cast<char*>(&cvss_score_)) + sizeof(severity_));
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.vulnerability.Vulnerability)
}

void Vulnerability::SharedCtor() {
  ::memset(&cvss_score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&cvss_score_)) + sizeof(severity_));
}

Vulnerability::~Vulnerability() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.vulnerability.Vulnerability)
  SharedDtor();
}

void Vulnerability::SharedDtor() {
}

void Vulnerability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vulnerability::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vulnerability& Vulnerability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_Vulnerability.base);
  return *internal_default_instance();
}


void Vulnerability::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.vulnerability.Vulnerability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  details_.Clear();
  ::memset(&cvss_score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&cvss_score_)) + sizeof(severity_));
  _internal_metadata_.Clear();
}

bool Vulnerability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.vulnerability.Vulnerability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float cvss_score = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cvss_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.vulnerability.Severity severity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_severity(static_cast< ::grafeas::v1beta1::vulnerability::Severity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .grafeas.v1beta1.vulnerability.Vulnerability.Detail details = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.vulnerability.Vulnerability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.vulnerability.Vulnerability)
  return false;
#undef DO_
}

void Vulnerability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.vulnerability.Vulnerability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float cvss_score = 1;
  if (this->cvss_score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->cvss_score(), output);
  }

  // .grafeas.v1beta1.vulnerability.Severity severity = 2;
  if (this->severity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->severity(), output);
  }

  // repeated .grafeas.v1beta1.vulnerability.Vulnerability.Detail details = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->details_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->details(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.vulnerability.Vulnerability)
}

::google::protobuf::uint8* Vulnerability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.vulnerability.Vulnerability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float cvss_score = 1;
  if (this->cvss_score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->cvss_score(), target);
  }

  // .grafeas.v1beta1.vulnerability.Severity severity = 2;
  if (this->severity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->severity(), target);
  }

  // repeated .grafeas.v1beta1.vulnerability.Vulnerability.Detail details = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->details_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->details(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.vulnerability.Vulnerability)
  return target;
}

size_t Vulnerability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.vulnerability.Vulnerability)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .grafeas.v1beta1.vulnerability.Vulnerability.Detail details = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->details_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->details(static_cast<int>(i)));
    }
  }

  // float cvss_score = 1;
  if (this->cvss_score() != 0) {
    total_size += 1 + 4;
  }

  // .grafeas.v1beta1.vulnerability.Severity severity = 2;
  if (this->severity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->severity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vulnerability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.vulnerability.Vulnerability)
  GOOGLE_DCHECK_NE(&from, this);
  const Vulnerability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vulnerability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.vulnerability.Vulnerability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.vulnerability.Vulnerability)
    MergeFrom(*source);
  }
}

void Vulnerability::MergeFrom(const Vulnerability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.vulnerability.Vulnerability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  details_.MergeFrom(from.details_);
  if (from.cvss_score() != 0) {
    set_cvss_score(from.cvss_score());
  }
  if (from.severity() != 0) {
    set_severity(from.severity());
  }
}

void Vulnerability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.vulnerability.Vulnerability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vulnerability::CopyFrom(const Vulnerability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.vulnerability.Vulnerability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vulnerability::IsInitialized() const {
  return true;
}

void Vulnerability::Swap(Vulnerability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vulnerability::InternalSwap(Vulnerability* other) {
  using std::swap;
  CastToBase(&details_)->InternalSwap(CastToBase(&other->details_));
  swap(cvss_score_, other->cvss_score_);
  swap(severity_, other->severity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vulnerability::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Details::InitAsDefaultInstance() {
}
void Details::clear_related_urls() {
  related_urls_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Details::kTypeFieldNumber;
const int Details::kSeverityFieldNumber;
const int Details::kCvssScoreFieldNumber;
const int Details::kPackageIssueFieldNumber;
const int Details::kShortDescriptionFieldNumber;
const int Details::kLongDescriptionFieldNumber;
const int Details::kRelatedUrlsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Details::Details()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_Details.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.vulnerability.Details)
}
Details::Details(const Details& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      package_issue_(from.package_issue_),
      related_urls_(from.related_urls_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  short_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.short_description().size() > 0) {
    short_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_description_);
  }
  long_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.long_description().size() > 0) {
    long_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.long_description_);
  }
  ::memcpy(&severity_, &from.severity_,
    static_cast<size_t>(reinterpret_cast<char*>(&cvss_score_) -
    reinterpret_cast<char*>(&severity_)) + sizeof(cvss_score_));
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.vulnerability.Details)
}

void Details::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&severity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cvss_score_) -
      reinterpret_cast<char*>(&severity_)) + sizeof(cvss_score_));
}

Details::~Details() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.vulnerability.Details)
  SharedDtor();
}

void Details::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Details::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Details::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Details& Details::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_Details.base);
  return *internal_default_instance();
}


void Details::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.vulnerability.Details)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  package_issue_.Clear();
  related_urls_.Clear();
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&severity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cvss_score_) -
      reinterpret_cast<char*>(&severity_)) + sizeof(cvss_score_));
  _internal_metadata_.Clear();
}

bool Details::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.vulnerability.Details)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.vulnerability.Details.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.vulnerability.Severity severity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_severity(static_cast< ::grafeas::v1beta1::vulnerability::Severity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cvss_score = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cvss_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .grafeas.v1beta1.vulnerability.PackageIssue package_issue = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_package_issue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string short_description = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_short_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->short_description().data(), static_cast<int>(this->short_description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.vulnerability.Details.short_description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string long_description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_long_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->long_description().data(), static_cast<int>(this->long_description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.vulnerability.Details.long_description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .grafeas.v1beta1.RelatedUrl related_urls = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_related_urls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.vulnerability.Details)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.vulnerability.Details)
  return false;
#undef DO_
}

void Details::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.vulnerability.Details)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Details.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // .grafeas.v1beta1.vulnerability.Severity severity = 2;
  if (this->severity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->severity(), output);
  }

  // float cvss_score = 3;
  if (this->cvss_score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->cvss_score(), output);
  }

  // repeated .grafeas.v1beta1.vulnerability.PackageIssue package_issue = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->package_issue_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->package_issue(static_cast<int>(i)),
      output);
  }

  // string short_description = 5;
  if (this->short_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->short_description().data(), static_cast<int>(this->short_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Details.short_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->short_description(), output);
  }

  // string long_description = 6;
  if (this->long_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->long_description().data(), static_cast<int>(this->long_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Details.long_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->long_description(), output);
  }

  // repeated .grafeas.v1beta1.RelatedUrl related_urls = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->related_urls_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->related_urls(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.vulnerability.Details)
}

::google::protobuf::uint8* Details::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.vulnerability.Details)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Details.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // .grafeas.v1beta1.vulnerability.Severity severity = 2;
  if (this->severity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->severity(), target);
  }

  // float cvss_score = 3;
  if (this->cvss_score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->cvss_score(), target);
  }

  // repeated .grafeas.v1beta1.vulnerability.PackageIssue package_issue = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->package_issue_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->package_issue(static_cast<int>(i)), deterministic, target);
  }

  // string short_description = 5;
  if (this->short_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->short_description().data(), static_cast<int>(this->short_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Details.short_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->short_description(), target);
  }

  // string long_description = 6;
  if (this->long_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->long_description().data(), static_cast<int>(this->long_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.Details.long_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->long_description(), target);
  }

  // repeated .grafeas.v1beta1.RelatedUrl related_urls = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->related_urls_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->related_urls(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.vulnerability.Details)
  return target;
}

size_t Details::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.vulnerability.Details)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .grafeas.v1beta1.vulnerability.PackageIssue package_issue = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->package_issue_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->package_issue(static_cast<int>(i)));
    }
  }

  // repeated .grafeas.v1beta1.RelatedUrl related_urls = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->related_urls_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->related_urls(static_cast<int>(i)));
    }
  }

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string short_description = 5;
  if (this->short_description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->short_description());
  }

  // string long_description = 6;
  if (this->long_description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->long_description());
  }

  // .grafeas.v1beta1.vulnerability.Severity severity = 2;
  if (this->severity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->severity());
  }

  // float cvss_score = 3;
  if (this->cvss_score() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Details::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.vulnerability.Details)
  GOOGLE_DCHECK_NE(&from, this);
  const Details* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Details>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.vulnerability.Details)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.vulnerability.Details)
    MergeFrom(*source);
  }
}

void Details::MergeFrom(const Details& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.vulnerability.Details)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  package_issue_.MergeFrom(from.package_issue_);
  related_urls_.MergeFrom(from.related_urls_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.short_description().size() > 0) {

    short_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_description_);
  }
  if (from.long_description().size() > 0) {

    long_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.long_description_);
  }
  if (from.severity() != 0) {
    set_severity(from.severity());
  }
  if (from.cvss_score() != 0) {
    set_cvss_score(from.cvss_score());
  }
}

void Details::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.vulnerability.Details)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Details::CopyFrom(const Details& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.vulnerability.Details)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Details::IsInitialized() const {
  return true;
}

void Details::Swap(Details* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Details::InternalSwap(Details* other) {
  using std::swap;
  CastToBase(&package_issue_)->InternalSwap(CastToBase(&other->package_issue_));
  CastToBase(&related_urls_)->InternalSwap(CastToBase(&other->related_urls_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  short_description_.Swap(&other->short_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  long_description_.Swap(&other->long_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(severity_, other->severity_);
  swap(cvss_score_, other->cvss_score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Details::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PackageIssue::InitAsDefaultInstance() {
  ::grafeas::v1beta1::vulnerability::_PackageIssue_default_instance_._instance.get_mutable()->affected_location_ = const_cast< ::grafeas::v1beta1::vulnerability::VulnerabilityLocation*>(
      ::grafeas::v1beta1::vulnerability::VulnerabilityLocation::internal_default_instance());
  ::grafeas::v1beta1::vulnerability::_PackageIssue_default_instance_._instance.get_mutable()->fixed_location_ = const_cast< ::grafeas::v1beta1::vulnerability::VulnerabilityLocation*>(
      ::grafeas::v1beta1::vulnerability::VulnerabilityLocation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackageIssue::kAffectedLocationFieldNumber;
const int PackageIssue::kFixedLocationFieldNumber;
const int PackageIssue::kSeverityNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackageIssue::PackageIssue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_PackageIssue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.vulnerability.PackageIssue)
}
PackageIssue::PackageIssue(const PackageIssue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  severity_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.severity_name().size() > 0) {
    severity_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.severity_name_);
  }
  if (from.has_affected_location()) {
    affected_location_ = new ::grafeas::v1beta1::vulnerability::VulnerabilityLocation(*from.affected_location_);
  } else {
    affected_location_ = NULL;
  }
  if (from.has_fixed_location()) {
    fixed_location_ = new ::grafeas::v1beta1::vulnerability::VulnerabilityLocation(*from.fixed_location_);
  } else {
    fixed_location_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.vulnerability.PackageIssue)
}

void PackageIssue::SharedCtor() {
  severity_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&affected_location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fixed_location_) -
      reinterpret_cast<char*>(&affected_location_)) + sizeof(fixed_location_));
}

PackageIssue::~PackageIssue() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.vulnerability.PackageIssue)
  SharedDtor();
}

void PackageIssue::SharedDtor() {
  severity_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete affected_location_;
  if (this != internal_default_instance()) delete fixed_location_;
}

void PackageIssue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PackageIssue::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PackageIssue& PackageIssue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_PackageIssue.base);
  return *internal_default_instance();
}


void PackageIssue::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.vulnerability.PackageIssue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  severity_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && affected_location_ != NULL) {
    delete affected_location_;
  }
  affected_location_ = NULL;
  if (GetArenaNoVirtual() == NULL && fixed_location_ != NULL) {
    delete fixed_location_;
  }
  fixed_location_ = NULL;
  _internal_metadata_.Clear();
}

bool PackageIssue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.vulnerability.PackageIssue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grafeas.v1beta1.vulnerability.VulnerabilityLocation affected_location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_affected_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.vulnerability.VulnerabilityLocation fixed_location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fixed_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string severity_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_severity_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->severity_name().data(), static_cast<int>(this->severity_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.vulnerability.PackageIssue.severity_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.vulnerability.PackageIssue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.vulnerability.PackageIssue)
  return false;
#undef DO_
}

void PackageIssue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.vulnerability.PackageIssue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grafeas.v1beta1.vulnerability.VulnerabilityLocation affected_location = 1;
  if (this->has_affected_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_affected_location(), output);
  }

  // .grafeas.v1beta1.vulnerability.VulnerabilityLocation fixed_location = 2;
  if (this->has_fixed_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_fixed_location(), output);
  }

  // string severity_name = 3;
  if (this->severity_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->severity_name().data(), static_cast<int>(this->severity_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.PackageIssue.severity_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->severity_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.vulnerability.PackageIssue)
}

::google::protobuf::uint8* PackageIssue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.vulnerability.PackageIssue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grafeas.v1beta1.vulnerability.VulnerabilityLocation affected_location = 1;
  if (this->has_affected_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_affected_location(), deterministic, target);
  }

  // .grafeas.v1beta1.vulnerability.VulnerabilityLocation fixed_location = 2;
  if (this->has_fixed_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_fixed_location(), deterministic, target);
  }

  // string severity_name = 3;
  if (this->severity_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->severity_name().data(), static_cast<int>(this->severity_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.PackageIssue.severity_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->severity_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.vulnerability.PackageIssue)
  return target;
}

size_t PackageIssue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.vulnerability.PackageIssue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string severity_name = 3;
  if (this->severity_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->severity_name());
  }

  // .grafeas.v1beta1.vulnerability.VulnerabilityLocation affected_location = 1;
  if (this->has_affected_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *affected_location_);
  }

  // .grafeas.v1beta1.vulnerability.VulnerabilityLocation fixed_location = 2;
  if (this->has_fixed_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fixed_location_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageIssue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.vulnerability.PackageIssue)
  GOOGLE_DCHECK_NE(&from, this);
  const PackageIssue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackageIssue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.vulnerability.PackageIssue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.vulnerability.PackageIssue)
    MergeFrom(*source);
  }
}

void PackageIssue::MergeFrom(const PackageIssue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.vulnerability.PackageIssue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.severity_name().size() > 0) {

    severity_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.severity_name_);
  }
  if (from.has_affected_location()) {
    mutable_affected_location()->::grafeas::v1beta1::vulnerability::VulnerabilityLocation::MergeFrom(from.affected_location());
  }
  if (from.has_fixed_location()) {
    mutable_fixed_location()->::grafeas::v1beta1::vulnerability::VulnerabilityLocation::MergeFrom(from.fixed_location());
  }
}

void PackageIssue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.vulnerability.PackageIssue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageIssue::CopyFrom(const PackageIssue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.vulnerability.PackageIssue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageIssue::IsInitialized() const {
  return true;
}

void PackageIssue::Swap(PackageIssue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackageIssue::InternalSwap(PackageIssue* other) {
  using std::swap;
  severity_name_.Swap(&other->severity_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(affected_location_, other->affected_location_);
  swap(fixed_location_, other->fixed_location_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PackageIssue::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VulnerabilityLocation::InitAsDefaultInstance() {
  ::grafeas::v1beta1::vulnerability::_VulnerabilityLocation_default_instance_._instance.get_mutable()->version_ = const_cast< ::grafeas::v1beta1::package::Version*>(
      ::grafeas::v1beta1::package::Version::internal_default_instance());
}
void VulnerabilityLocation::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VulnerabilityLocation::kCpeUriFieldNumber;
const int VulnerabilityLocation::kPackageFieldNumber;
const int VulnerabilityLocation::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VulnerabilityLocation::VulnerabilityLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_VulnerabilityLocation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
}
VulnerabilityLocation::VulnerabilityLocation(const VulnerabilityLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cpe_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cpe_uri().size() > 0) {
    cpe_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpe_uri_);
  }
  package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.package().size() > 0) {
    package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  if (from.has_version()) {
    version_ = new ::grafeas::v1beta1::package::Version(*from.version_);
  } else {
    version_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
}

void VulnerabilityLocation::SharedCtor() {
  cpe_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = NULL;
}

VulnerabilityLocation::~VulnerabilityLocation() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
  SharedDtor();
}

void VulnerabilityLocation::SharedDtor() {
  cpe_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete version_;
}

void VulnerabilityLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VulnerabilityLocation::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VulnerabilityLocation& VulnerabilityLocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::scc_info_VulnerabilityLocation.base);
  return *internal_default_instance();
}


void VulnerabilityLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cpe_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  _internal_metadata_.Clear();
}

bool VulnerabilityLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cpe_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpe_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cpe_uri().data(), static_cast<int>(this->cpe_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.vulnerability.VulnerabilityLocation.cpe_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string package = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package().data(), static_cast<int>(this->package().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grafeas.v1beta1.vulnerability.VulnerabilityLocation.package"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.package.Version version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
  return false;
#undef DO_
}

void VulnerabilityLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cpe_uri = 1;
  if (this->cpe_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpe_uri().data(), static_cast<int>(this->cpe_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.VulnerabilityLocation.cpe_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cpe_uri(), output);
  }

  // string package = 2;
  if (this->package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package().data(), static_cast<int>(this->package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.VulnerabilityLocation.package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->package(), output);
  }

  // .grafeas.v1beta1.package.Version version = 3;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
}

::google::protobuf::uint8* VulnerabilityLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cpe_uri = 1;
  if (this->cpe_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpe_uri().data(), static_cast<int>(this->cpe_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.VulnerabilityLocation.cpe_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cpe_uri(), target);
  }

  // string package = 2;
  if (this->package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package().data(), static_cast<int>(this->package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grafeas.v1beta1.vulnerability.VulnerabilityLocation.package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->package(), target);
  }

  // .grafeas.v1beta1.package.Version version = 3;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_version(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
  return target;
}

size_t VulnerabilityLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cpe_uri = 1;
  if (this->cpe_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cpe_uri());
  }

  // string package = 2;
  if (this->package().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package());
  }

  // .grafeas.v1beta1.package.Version version = 3;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VulnerabilityLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const VulnerabilityLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VulnerabilityLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
    MergeFrom(*source);
  }
}

void VulnerabilityLocation::MergeFrom(const VulnerabilityLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cpe_uri().size() > 0) {

    cpe_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpe_uri_);
  }
  if (from.package().size() > 0) {

    package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  if (from.has_version()) {
    mutable_version()->::grafeas::v1beta1::package::Version::MergeFrom(from.version());
  }
}

void VulnerabilityLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VulnerabilityLocation::CopyFrom(const VulnerabilityLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.vulnerability.VulnerabilityLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VulnerabilityLocation::IsInitialized() const {
  return true;
}

void VulnerabilityLocation::Swap(VulnerabilityLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VulnerabilityLocation::InternalSwap(VulnerabilityLocation* other) {
  using std::swap;
  cpe_uri_.Swap(&other->cpe_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  package_.Swap(&other->package_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VulnerabilityLocation::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fvulnerability_2fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace vulnerability
}  // namespace v1beta1
}  // namespace grafeas
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::vulnerability::Vulnerability_Detail* Arena::CreateMaybeMessage< ::grafeas::v1beta1::vulnerability::Vulnerability_Detail >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::vulnerability::Vulnerability_Detail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::vulnerability::Vulnerability* Arena::CreateMaybeMessage< ::grafeas::v1beta1::vulnerability::Vulnerability >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::vulnerability::Vulnerability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::vulnerability::Details* Arena::CreateMaybeMessage< ::grafeas::v1beta1::vulnerability::Details >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::vulnerability::Details >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::vulnerability::PackageIssue* Arena::CreateMaybeMessage< ::grafeas::v1beta1::vulnerability::PackageIssue >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::vulnerability::PackageIssue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::vulnerability::VulnerabilityLocation* Arena::CreateMaybeMessage< ::grafeas::v1beta1::vulnerability::VulnerabilityLocation >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::vulnerability::VulnerabilityLocation >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
