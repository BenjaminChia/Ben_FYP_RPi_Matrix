// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/containeranalysis/v1beta1/discovery/discovery.proto

#include "google/devtools/containeranalysis/v1beta1/discovery/discovery.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Discovered;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_google_2frpc_2fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2frpc_2fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Status;
}  // namespace protobuf_google_2frpc_2fstatus_2eproto
namespace grafeas {
namespace v1beta1 {
namespace discovery {
class DiscoveryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Discovery>
      _instance;
} _Discovery_default_instance_;
class DetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Details>
      _instance;
} _Details_default_instance_;
class DiscoveredDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Discovered>
      _instance;
} _Discovered_default_instance_;
}  // namespace discovery
}  // namespace v1beta1
}  // namespace grafeas
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto {
static void InitDefaultsDiscovery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::discovery::_Discovery_default_instance_;
    new (ptr) ::grafeas::v1beta1::discovery::Discovery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::discovery::Discovery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Discovery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiscovery}, {}};

static void InitDefaultsDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::discovery::_Details_default_instance_;
    new (ptr) ::grafeas::v1beta1::discovery::Details();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::discovery::Details::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Details =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDetails}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::scc_info_Discovered.base,}};

static void InitDefaultsDiscovered() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grafeas::v1beta1::discovery::_Discovered_default_instance_;
    new (ptr) ::grafeas::v1beta1::discovery::Discovered();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grafeas::v1beta1::discovery::Discovered::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Discovered =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDiscovered}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Discovery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Details.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Discovered.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::discovery::Discovery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::discovery::Discovery, analysis_kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::discovery::Details, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::discovery::Details, discovered_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::discovery::Discovered, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::discovery::Discovered, continuous_analysis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::discovery::Discovered, last_analysis_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::discovery::Discovered, analysis_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grafeas::v1beta1::discovery::Discovered, analysis_status_error_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grafeas::v1beta1::discovery::Discovery)},
  { 6, -1, sizeof(::grafeas::v1beta1::discovery::Details)},
  { 12, -1, sizeof(::grafeas::v1beta1::discovery::Discovered)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::discovery::_Discovery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::discovery::_Details_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grafeas::v1beta1::discovery::_Discovered_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/devtools/containeranalysis/v1beta1/discovery/discovery.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nCgoogle/devtools/containeranalysis/v1be"
      "ta1/discovery/discovery.proto\022\031grafeas.v"
      "1beta1.discovery\032=google/devtools/contai"
      "neranalysis/v1beta1/common/common.proto\032"
      "\037google/protobuf/timestamp.proto\032\027google"
      "/rpc/status.proto\"=\n\tDiscovery\0220\n\ranalys"
      "is_kind\030\001 \001(\0162\031.grafeas.v1beta1.NoteKind"
      "\"D\n\007Details\0229\n\ndiscovered\030\001 \001(\0132%.grafea"
      "s.v1beta1.discovery.Discovered\"\206\004\n\nDisco"
      "vered\022U\n\023continuous_analysis\030\001 \001(\01628.gra"
      "feas.v1beta1.discovery.Discovered.Contin"
      "uousAnalysis\0226\n\022last_analysis_time\030\002 \001(\013"
      "2\032.google.protobuf.Timestamp\022M\n\017analysis"
      "_status\030\003 \001(\01624.grafeas.v1beta1.discover"
      "y.Discovered.AnalysisStatus\0221\n\025analysis_"
      "status_error\030\004 \001(\0132\022.google.rpc.Status\"S"
      "\n\022ContinuousAnalysis\022#\n\037CONTINUOUS_ANALY"
      "SIS_UNSPECIFIED\020\000\022\n\n\006ACTIVE\020\001\022\014\n\010INACTIV"
      "E\020\002\"\221\001\n\016AnalysisStatus\022\037\n\033ANALYSIS_STATU"
      "S_UNSPECIFIED\020\000\022\013\n\007PENDING\020\001\022\014\n\010SCANNING"
      "\020\002\022\024\n\020FINISHED_SUCCESS\020\003\022\023\n\017FINISHED_FAI"
      "LED\020\004\022\030\n\024FINISHED_UNSUPPORTED\020\005B\204\001\n\034io.g"
      "rafeas.v1beta1.discoveryP\001Z\\google.golan"
      "g.org/genproto/googleapis/devtools/conta"
      "ineranalysis/v1beta1/discovery;discovery"
      "\242\002\003GRAb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1014);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/containeranalysis/v1beta1/discovery/discovery.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fcommon_2fcommon_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto
namespace grafeas {
namespace v1beta1 {
namespace discovery {
const ::google::protobuf::EnumDescriptor* Discovered_ContinuousAnalysis_descriptor() {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::file_level_enum_descriptors[0];
}
bool Discovered_ContinuousAnalysis_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Discovered_ContinuousAnalysis Discovered::CONTINUOUS_ANALYSIS_UNSPECIFIED;
const Discovered_ContinuousAnalysis Discovered::ACTIVE;
const Discovered_ContinuousAnalysis Discovered::INACTIVE;
const Discovered_ContinuousAnalysis Discovered::ContinuousAnalysis_MIN;
const Discovered_ContinuousAnalysis Discovered::ContinuousAnalysis_MAX;
const int Discovered::ContinuousAnalysis_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Discovered_AnalysisStatus_descriptor() {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::file_level_enum_descriptors[1];
}
bool Discovered_AnalysisStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Discovered_AnalysisStatus Discovered::ANALYSIS_STATUS_UNSPECIFIED;
const Discovered_AnalysisStatus Discovered::PENDING;
const Discovered_AnalysisStatus Discovered::SCANNING;
const Discovered_AnalysisStatus Discovered::FINISHED_SUCCESS;
const Discovered_AnalysisStatus Discovered::FINISHED_FAILED;
const Discovered_AnalysisStatus Discovered::FINISHED_UNSUPPORTED;
const Discovered_AnalysisStatus Discovered::AnalysisStatus_MIN;
const Discovered_AnalysisStatus Discovered::AnalysisStatus_MAX;
const int Discovered::AnalysisStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Discovery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Discovery::kAnalysisKindFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Discovery::Discovery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::scc_info_Discovery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.discovery.Discovery)
}
Discovery::Discovery(const Discovery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  analysis_kind_ = from.analysis_kind_;
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.discovery.Discovery)
}

void Discovery::SharedCtor() {
  analysis_kind_ = 0;
}

Discovery::~Discovery() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.discovery.Discovery)
  SharedDtor();
}

void Discovery::SharedDtor() {
}

void Discovery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Discovery::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Discovery& Discovery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::scc_info_Discovery.base);
  return *internal_default_instance();
}


void Discovery::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.discovery.Discovery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  analysis_kind_ = 0;
  _internal_metadata_.Clear();
}

bool Discovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.discovery.Discovery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grafeas.v1beta1.NoteKind analysis_kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_analysis_kind(static_cast< ::grafeas::v1beta1::NoteKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.discovery.Discovery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.discovery.Discovery)
  return false;
#undef DO_
}

void Discovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.discovery.Discovery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grafeas.v1beta1.NoteKind analysis_kind = 1;
  if (this->analysis_kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->analysis_kind(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.discovery.Discovery)
}

::google::protobuf::uint8* Discovery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.discovery.Discovery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grafeas.v1beta1.NoteKind analysis_kind = 1;
  if (this->analysis_kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->analysis_kind(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.discovery.Discovery)
  return target;
}

size_t Discovery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.discovery.Discovery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grafeas.v1beta1.NoteKind analysis_kind = 1;
  if (this->analysis_kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->analysis_kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Discovery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.discovery.Discovery)
  GOOGLE_DCHECK_NE(&from, this);
  const Discovery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Discovery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.discovery.Discovery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.discovery.Discovery)
    MergeFrom(*source);
  }
}

void Discovery::MergeFrom(const Discovery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.discovery.Discovery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.analysis_kind() != 0) {
    set_analysis_kind(from.analysis_kind());
  }
}

void Discovery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.discovery.Discovery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Discovery::CopyFrom(const Discovery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.discovery.Discovery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Discovery::IsInitialized() const {
  return true;
}

void Discovery::Swap(Discovery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Discovery::InternalSwap(Discovery* other) {
  using std::swap;
  swap(analysis_kind_, other->analysis_kind_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Discovery::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Details::InitAsDefaultInstance() {
  ::grafeas::v1beta1::discovery::_Details_default_instance_._instance.get_mutable()->discovered_ = const_cast< ::grafeas::v1beta1::discovery::Discovered*>(
      ::grafeas::v1beta1::discovery::Discovered::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Details::kDiscoveredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Details::Details()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::scc_info_Details.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.discovery.Details)
}
Details::Details(const Details& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_discovered()) {
    discovered_ = new ::grafeas::v1beta1::discovery::Discovered(*from.discovered_);
  } else {
    discovered_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.discovery.Details)
}

void Details::SharedCtor() {
  discovered_ = NULL;
}

Details::~Details() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.discovery.Details)
  SharedDtor();
}

void Details::SharedDtor() {
  if (this != internal_default_instance()) delete discovered_;
}

void Details::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Details::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Details& Details::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::scc_info_Details.base);
  return *internal_default_instance();
}


void Details::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.discovery.Details)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && discovered_ != NULL) {
    delete discovered_;
  }
  discovered_ = NULL;
  _internal_metadata_.Clear();
}

bool Details::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.discovery.Details)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grafeas.v1beta1.discovery.Discovered discovered = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_discovered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.discovery.Details)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.discovery.Details)
  return false;
#undef DO_
}

void Details::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.discovery.Details)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grafeas.v1beta1.discovery.Discovered discovered = 1;
  if (this->has_discovered()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_discovered(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.discovery.Details)
}

::google::protobuf::uint8* Details::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.discovery.Details)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grafeas.v1beta1.discovery.Discovered discovered = 1;
  if (this->has_discovered()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_discovered(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.discovery.Details)
  return target;
}

size_t Details::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.discovery.Details)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grafeas.v1beta1.discovery.Discovered discovered = 1;
  if (this->has_discovered()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *discovered_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Details::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.discovery.Details)
  GOOGLE_DCHECK_NE(&from, this);
  const Details* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Details>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.discovery.Details)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.discovery.Details)
    MergeFrom(*source);
  }
}

void Details::MergeFrom(const Details& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.discovery.Details)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_discovered()) {
    mutable_discovered()->::grafeas::v1beta1::discovery::Discovered::MergeFrom(from.discovered());
  }
}

void Details::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.discovery.Details)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Details::CopyFrom(const Details& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.discovery.Details)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Details::IsInitialized() const {
  return true;
}

void Details::Swap(Details* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Details::InternalSwap(Details* other) {
  using std::swap;
  swap(discovered_, other->discovered_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Details::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Discovered::InitAsDefaultInstance() {
  ::grafeas::v1beta1::discovery::_Discovered_default_instance_._instance.get_mutable()->last_analysis_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::grafeas::v1beta1::discovery::_Discovered_default_instance_._instance.get_mutable()->analysis_status_error_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void Discovered::clear_last_analysis_time() {
  if (GetArenaNoVirtual() == NULL && last_analysis_time_ != NULL) {
    delete last_analysis_time_;
  }
  last_analysis_time_ = NULL;
}
void Discovered::clear_analysis_status_error() {
  if (GetArenaNoVirtual() == NULL && analysis_status_error_ != NULL) {
    delete analysis_status_error_;
  }
  analysis_status_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Discovered::kContinuousAnalysisFieldNumber;
const int Discovered::kLastAnalysisTimeFieldNumber;
const int Discovered::kAnalysisStatusFieldNumber;
const int Discovered::kAnalysisStatusErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Discovered::Discovered()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::scc_info_Discovered.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grafeas.v1beta1.discovery.Discovered)
}
Discovered::Discovered(const Discovered& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_last_analysis_time()) {
    last_analysis_time_ = new ::google::protobuf::Timestamp(*from.last_analysis_time_);
  } else {
    last_analysis_time_ = NULL;
  }
  if (from.has_analysis_status_error()) {
    analysis_status_error_ = new ::google::rpc::Status(*from.analysis_status_error_);
  } else {
    analysis_status_error_ = NULL;
  }
  ::memcpy(&continuous_analysis_, &from.continuous_analysis_,
    static_cast<size_t>(reinterpret_cast<char*>(&analysis_status_) -
    reinterpret_cast<char*>(&continuous_analysis_)) + sizeof(analysis_status_));
  // @@protoc_insertion_point(copy_constructor:grafeas.v1beta1.discovery.Discovered)
}

void Discovered::SharedCtor() {
  ::memset(&last_analysis_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&analysis_status_) -
      reinterpret_cast<char*>(&last_analysis_time_)) + sizeof(analysis_status_));
}

Discovered::~Discovered() {
  // @@protoc_insertion_point(destructor:grafeas.v1beta1.discovery.Discovered)
  SharedDtor();
}

void Discovered::SharedDtor() {
  if (this != internal_default_instance()) delete last_analysis_time_;
  if (this != internal_default_instance()) delete analysis_status_error_;
}

void Discovered::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Discovered::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Discovered& Discovered::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::scc_info_Discovered.base);
  return *internal_default_instance();
}


void Discovered::Clear() {
// @@protoc_insertion_point(message_clear_start:grafeas.v1beta1.discovery.Discovered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && last_analysis_time_ != NULL) {
    delete last_analysis_time_;
  }
  last_analysis_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && analysis_status_error_ != NULL) {
    delete analysis_status_error_;
  }
  analysis_status_error_ = NULL;
  ::memset(&continuous_analysis_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&analysis_status_) -
      reinterpret_cast<char*>(&continuous_analysis_)) + sizeof(analysis_status_));
  _internal_metadata_.Clear();
}

bool Discovered::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grafeas.v1beta1.discovery.Discovered)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grafeas.v1beta1.discovery.Discovered.ContinuousAnalysis continuous_analysis = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_continuous_analysis(static_cast< ::grafeas::v1beta1::discovery::Discovered_ContinuousAnalysis >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp last_analysis_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_analysis_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grafeas.v1beta1.discovery.Discovered.AnalysisStatus analysis_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_analysis_status(static_cast< ::grafeas::v1beta1::discovery::Discovered_AnalysisStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status analysis_status_error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_analysis_status_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grafeas.v1beta1.discovery.Discovered)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grafeas.v1beta1.discovery.Discovered)
  return false;
#undef DO_
}

void Discovered::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grafeas.v1beta1.discovery.Discovered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grafeas.v1beta1.discovery.Discovered.ContinuousAnalysis continuous_analysis = 1;
  if (this->continuous_analysis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->continuous_analysis(), output);
  }

  // .google.protobuf.Timestamp last_analysis_time = 2;
  if (this->has_last_analysis_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_last_analysis_time(), output);
  }

  // .grafeas.v1beta1.discovery.Discovered.AnalysisStatus analysis_status = 3;
  if (this->analysis_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->analysis_status(), output);
  }

  // .google.rpc.Status analysis_status_error = 4;
  if (this->has_analysis_status_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_analysis_status_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grafeas.v1beta1.discovery.Discovered)
}

::google::protobuf::uint8* Discovered::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grafeas.v1beta1.discovery.Discovered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grafeas.v1beta1.discovery.Discovered.ContinuousAnalysis continuous_analysis = 1;
  if (this->continuous_analysis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->continuous_analysis(), target);
  }

  // .google.protobuf.Timestamp last_analysis_time = 2;
  if (this->has_last_analysis_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_last_analysis_time(), deterministic, target);
  }

  // .grafeas.v1beta1.discovery.Discovered.AnalysisStatus analysis_status = 3;
  if (this->analysis_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->analysis_status(), target);
  }

  // .google.rpc.Status analysis_status_error = 4;
  if (this->has_analysis_status_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_analysis_status_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grafeas.v1beta1.discovery.Discovered)
  return target;
}

size_t Discovered::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grafeas.v1beta1.discovery.Discovered)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Timestamp last_analysis_time = 2;
  if (this->has_last_analysis_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_analysis_time_);
  }

  // .google.rpc.Status analysis_status_error = 4;
  if (this->has_analysis_status_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *analysis_status_error_);
  }

  // .grafeas.v1beta1.discovery.Discovered.ContinuousAnalysis continuous_analysis = 1;
  if (this->continuous_analysis() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->continuous_analysis());
  }

  // .grafeas.v1beta1.discovery.Discovered.AnalysisStatus analysis_status = 3;
  if (this->analysis_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->analysis_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Discovered::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grafeas.v1beta1.discovery.Discovered)
  GOOGLE_DCHECK_NE(&from, this);
  const Discovered* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Discovered>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grafeas.v1beta1.discovery.Discovered)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grafeas.v1beta1.discovery.Discovered)
    MergeFrom(*source);
  }
}

void Discovered::MergeFrom(const Discovered& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grafeas.v1beta1.discovery.Discovered)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_last_analysis_time()) {
    mutable_last_analysis_time()->::google::protobuf::Timestamp::MergeFrom(from.last_analysis_time());
  }
  if (from.has_analysis_status_error()) {
    mutable_analysis_status_error()->::google::rpc::Status::MergeFrom(from.analysis_status_error());
  }
  if (from.continuous_analysis() != 0) {
    set_continuous_analysis(from.continuous_analysis());
  }
  if (from.analysis_status() != 0) {
    set_analysis_status(from.analysis_status());
  }
}

void Discovered::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grafeas.v1beta1.discovery.Discovered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Discovered::CopyFrom(const Discovered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grafeas.v1beta1.discovery.Discovered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Discovered::IsInitialized() const {
  return true;
}

void Discovered::Swap(Discovered* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Discovered::InternalSwap(Discovered* other) {
  using std::swap;
  swap(last_analysis_time_, other->last_analysis_time_);
  swap(analysis_status_error_, other->analysis_status_error_);
  swap(continuous_analysis_, other->continuous_analysis_);
  swap(analysis_status_, other->analysis_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Discovered::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1beta1_2fdiscovery_2fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace discovery
}  // namespace v1beta1
}  // namespace grafeas
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::discovery::Discovery* Arena::CreateMaybeMessage< ::grafeas::v1beta1::discovery::Discovery >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::discovery::Discovery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::discovery::Details* Arena::CreateMaybeMessage< ::grafeas::v1beta1::discovery::Details >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::discovery::Details >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grafeas::v1beta1::discovery::Discovered* Arena::CreateMaybeMessage< ::grafeas::v1beta1::discovery::Discovered >(Arena* arena) {
  return Arena::CreateInternal< ::grafeas::v1beta1::discovery::Discovered >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
