// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/containeranalysis/v1alpha1/image_basis.proto

#include "google/devtools/containeranalysis/v1alpha1/image_basis.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DockerImage_Fingerprint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DockerImage_Layer;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto
namespace google {
namespace devtools {
namespace containeranalysis {
namespace v1alpha1 {
class DockerImage_LayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DockerImage_Layer>
      _instance;
} _DockerImage_Layer_default_instance_;
class DockerImage_FingerprintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DockerImage_Fingerprint>
      _instance;
} _DockerImage_Fingerprint_default_instance_;
class DockerImage_BasisDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DockerImage_Basis>
      _instance;
} _DockerImage_Basis_default_instance_;
class DockerImage_DerivedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DockerImage_Derived>
      _instance;
} _DockerImage_Derived_default_instance_;
class DockerImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DockerImage>
      _instance;
} _DockerImage_default_instance_;
}  // namespace v1alpha1
}  // namespace containeranalysis
}  // namespace devtools
}  // namespace google
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto {
static void InitDefaultsDockerImage_Layer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_DockerImage_Layer_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::DockerImage_Layer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::DockerImage_Layer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DockerImage_Layer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDockerImage_Layer}, {}};

static void InitDefaultsDockerImage_Fingerprint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_DockerImage_Fingerprint_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DockerImage_Fingerprint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDockerImage_Fingerprint}, {}};

static void InitDefaultsDockerImage_Basis() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_DockerImage_Basis_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DockerImage_Basis =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDockerImage_Basis}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage_Fingerprint.base,}};

static void InitDefaultsDockerImage_Derived() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_DockerImage_Derived_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DockerImage_Derived =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDockerImage_Derived}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage_Fingerprint.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage_Layer.base,}};

static void InitDefaultsDockerImage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_DockerImage_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::DockerImage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::DockerImage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DockerImage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDockerImage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DockerImage_Layer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DockerImage_Fingerprint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DockerImage_Basis.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DockerImage_Derived.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DockerImage.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Layer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Layer, directive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Layer, arguments_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint, v1_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint, v2_blob_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint, v2_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis, resource_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis, fingerprint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived, fingerprint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived, layer_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived, base_resource_url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DockerImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::DockerImage_Layer)},
  { 7, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint)},
  { 15, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis)},
  { 22, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived)},
  { 31, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::DockerImage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_DockerImage_Layer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_DockerImage_Fingerprint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_DockerImage_Basis_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_DockerImage_Derived_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_DockerImage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/devtools/containeranalysis/v1alpha1/image_basis.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n<google/devtools/containeranalysis/v1al"
      "pha1/image_basis.proto\022*google.devtools."
      "containeranalysis.v1alpha1\032\034google/api/a"
      "nnotations.proto\"\232\006\n\013DockerImage\032\351\002\n\005Lay"
      "er\022Z\n\tdirective\030\001 \001(\0162G.google.devtools."
      "containeranalysis.v1alpha1.DockerImage.L"
      "ayer.Directive\022\021\n\targuments\030\002 \001(\t\"\360\001\n\tDi"
      "rective\022\031\n\025DIRECTIVE_UNSPECIFIED\020\000\022\016\n\nMA"
      "INTAINER\020\001\022\007\n\003RUN\020\002\022\007\n\003CMD\020\003\022\t\n\005LABEL\020\004\022"
      "\n\n\006EXPOSE\020\005\022\007\n\003ENV\020\006\022\007\n\003ADD\020\007\022\010\n\004COPY\020\010\022"
      "\016\n\nENTRYPOINT\020\t\022\n\n\006VOLUME\020\n\022\010\n\004USER\020\013\022\013\n"
      "\007WORKDIR\020\014\022\007\n\003ARG\020\r\022\013\n\007ONBUILD\020\016\022\016\n\nSTOP"
      "SIGNAL\020\017\022\017\n\013HEALTHCHECK\020\020\022\t\n\005SHELL\020\021\032@\n\013"
      "Fingerprint\022\017\n\007v1_name\030\001 \001(\t\022\017\n\007v2_blob\030"
      "\002 \003(\t\022\017\n\007v2_name\030\003 \001(\t\032w\n\005Basis\022\024\n\014resou"
      "rce_url\030\001 \001(\t\022X\n\013fingerprint\030\002 \001(\0132C.goo"
      "gle.devtools.containeranalysis.v1alpha1."
      "DockerImage.Fingerprint\032\343\001\n\007Derived\022X\n\013f"
      "ingerprint\030\001 \001(\0132C.google.devtools.conta"
      "ineranalysis.v1alpha1.DockerImage.Finger"
      "print\022\020\n\010distance\030\002 \001(\r\022Q\n\nlayer_info\030\003 "
      "\003(\0132=.google.devtools.containeranalysis."
      "v1alpha1.DockerImage.Layer\022\031\n\021base_resou"
      "rce_url\030\004 \001(\tB\214\001\n%com.google.containeran"
      "alysis.v1alpha1P\001Z[google.golang.org/gen"
      "proto/googleapis/devtools/containeranaly"
      "sis/v1alpha1;containeranalysis\242\002\003GCAb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1084);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/containeranalysis/v1alpha1/image_basis.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto
namespace google {
namespace devtools {
namespace containeranalysis {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* DockerImage_Layer_Directive_descriptor() {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::file_level_enum_descriptors[0];
}
bool DockerImage_Layer_Directive_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DockerImage_Layer_Directive DockerImage_Layer::DIRECTIVE_UNSPECIFIED;
const DockerImage_Layer_Directive DockerImage_Layer::MAINTAINER;
const DockerImage_Layer_Directive DockerImage_Layer::RUN;
const DockerImage_Layer_Directive DockerImage_Layer::CMD;
const DockerImage_Layer_Directive DockerImage_Layer::LABEL;
const DockerImage_Layer_Directive DockerImage_Layer::EXPOSE;
const DockerImage_Layer_Directive DockerImage_Layer::ENV;
const DockerImage_Layer_Directive DockerImage_Layer::ADD;
const DockerImage_Layer_Directive DockerImage_Layer::COPY;
const DockerImage_Layer_Directive DockerImage_Layer::ENTRYPOINT;
const DockerImage_Layer_Directive DockerImage_Layer::VOLUME;
const DockerImage_Layer_Directive DockerImage_Layer::USER;
const DockerImage_Layer_Directive DockerImage_Layer::WORKDIR;
const DockerImage_Layer_Directive DockerImage_Layer::ARG;
const DockerImage_Layer_Directive DockerImage_Layer::ONBUILD;
const DockerImage_Layer_Directive DockerImage_Layer::STOPSIGNAL;
const DockerImage_Layer_Directive DockerImage_Layer::HEALTHCHECK;
const DockerImage_Layer_Directive DockerImage_Layer::SHELL;
const DockerImage_Layer_Directive DockerImage_Layer::Directive_MIN;
const DockerImage_Layer_Directive DockerImage_Layer::Directive_MAX;
const int DockerImage_Layer::Directive_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void DockerImage_Layer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DockerImage_Layer::kDirectiveFieldNumber;
const int DockerImage_Layer::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DockerImage_Layer::DockerImage_Layer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage_Layer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
}
DockerImage_Layer::DockerImage_Layer(const DockerImage_Layer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  arguments_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.arguments().size() > 0) {
    arguments_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arguments_);
  }
  directive_ = from.directive_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
}

void DockerImage_Layer::SharedCtor() {
  arguments_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directive_ = 0;
}

DockerImage_Layer::~DockerImage_Layer() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
  SharedDtor();
}

void DockerImage_Layer::SharedDtor() {
  arguments_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DockerImage_Layer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DockerImage_Layer::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DockerImage_Layer& DockerImage_Layer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage_Layer.base);
  return *internal_default_instance();
}


void DockerImage_Layer::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directive_ = 0;
  _internal_metadata_.Clear();
}

bool DockerImage_Layer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.containeranalysis.v1alpha1.DockerImage.Layer.Directive directive = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_directive(static_cast< ::google::devtools::containeranalysis::v1alpha1::DockerImage_Layer_Directive >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string arguments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arguments()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->arguments().data(), static_cast<int>(this->arguments().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.DockerImage.Layer.arguments"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
  return false;
#undef DO_
}

void DockerImage_Layer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.DockerImage.Layer.Directive directive = 1;
  if (this->directive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->directive(), output);
  }

  // string arguments = 2;
  if (this->arguments().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arguments().data(), static_cast<int>(this->arguments().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DockerImage.Layer.arguments");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->arguments(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
}

::google::protobuf::uint8* DockerImage_Layer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.DockerImage.Layer.Directive directive = 1;
  if (this->directive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->directive(), target);
  }

  // string arguments = 2;
  if (this->arguments().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arguments().data(), static_cast<int>(this->arguments().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DockerImage.Layer.arguments");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->arguments(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
  return target;
}

size_t DockerImage_Layer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string arguments = 2;
  if (this->arguments().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->arguments());
  }

  // .google.devtools.containeranalysis.v1alpha1.DockerImage.Layer.Directive directive = 1;
  if (this->directive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->directive());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DockerImage_Layer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
  GOOGLE_DCHECK_NE(&from, this);
  const DockerImage_Layer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DockerImage_Layer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
    MergeFrom(*source);
  }
}

void DockerImage_Layer::MergeFrom(const DockerImage_Layer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.arguments().size() > 0) {

    arguments_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arguments_);
  }
  if (from.directive() != 0) {
    set_directive(from.directive());
  }
}

void DockerImage_Layer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DockerImage_Layer::CopyFrom(const DockerImage_Layer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DockerImage_Layer::IsInitialized() const {
  return true;
}

void DockerImage_Layer::Swap(DockerImage_Layer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DockerImage_Layer::InternalSwap(DockerImage_Layer* other) {
  using std::swap;
  arguments_.Swap(&other->arguments_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(directive_, other->directive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DockerImage_Layer::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DockerImage_Fingerprint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DockerImage_Fingerprint::kV1NameFieldNumber;
const int DockerImage_Fingerprint::kV2BlobFieldNumber;
const int DockerImage_Fingerprint::kV2NameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DockerImage_Fingerprint::DockerImage_Fingerprint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage_Fingerprint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
}
DockerImage_Fingerprint::DockerImage_Fingerprint(const DockerImage_Fingerprint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      v2_blob_(from.v2_blob_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  v1_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.v1_name().size() > 0) {
    v1_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.v1_name_);
  }
  v2_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.v2_name().size() > 0) {
    v2_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.v2_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
}

void DockerImage_Fingerprint::SharedCtor() {
  v1_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  v2_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DockerImage_Fingerprint::~DockerImage_Fingerprint() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
  SharedDtor();
}

void DockerImage_Fingerprint::SharedDtor() {
  v1_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  v2_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DockerImage_Fingerprint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DockerImage_Fingerprint::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DockerImage_Fingerprint& DockerImage_Fingerprint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage_Fingerprint.base);
  return *internal_default_instance();
}


void DockerImage_Fingerprint::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  v2_blob_.Clear();
  v1_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  v2_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DockerImage_Fingerprint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string v1_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_v1_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->v1_name().data(), static_cast<int>(this->v1_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint.v1_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string v2_blob = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_v2_blob()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->v2_blob(this->v2_blob_size() - 1).data(),
            static_cast<int>(this->v2_blob(this->v2_blob_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint.v2_blob"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string v2_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_v2_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->v2_name().data(), static_cast<int>(this->v2_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint.v2_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
  return false;
#undef DO_
}

void DockerImage_Fingerprint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string v1_name = 1;
  if (this->v1_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->v1_name().data(), static_cast<int>(this->v1_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint.v1_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->v1_name(), output);
  }

  // repeated string v2_blob = 2;
  for (int i = 0, n = this->v2_blob_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->v2_blob(i).data(), static_cast<int>(this->v2_blob(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint.v2_blob");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->v2_blob(i), output);
  }

  // string v2_name = 3;
  if (this->v2_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->v2_name().data(), static_cast<int>(this->v2_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint.v2_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->v2_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
}

::google::protobuf::uint8* DockerImage_Fingerprint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string v1_name = 1;
  if (this->v1_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->v1_name().data(), static_cast<int>(this->v1_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint.v1_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->v1_name(), target);
  }

  // repeated string v2_blob = 2;
  for (int i = 0, n = this->v2_blob_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->v2_blob(i).data(), static_cast<int>(this->v2_blob(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint.v2_blob");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->v2_blob(i), target);
  }

  // string v2_name = 3;
  if (this->v2_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->v2_name().data(), static_cast<int>(this->v2_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint.v2_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->v2_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
  return target;
}

size_t DockerImage_Fingerprint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string v2_blob = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->v2_blob_size());
  for (int i = 0, n = this->v2_blob_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->v2_blob(i));
  }

  // string v1_name = 1;
  if (this->v1_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->v1_name());
  }

  // string v2_name = 3;
  if (this->v2_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->v2_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DockerImage_Fingerprint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
  GOOGLE_DCHECK_NE(&from, this);
  const DockerImage_Fingerprint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DockerImage_Fingerprint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
    MergeFrom(*source);
  }
}

void DockerImage_Fingerprint::MergeFrom(const DockerImage_Fingerprint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  v2_blob_.MergeFrom(from.v2_blob_);
  if (from.v1_name().size() > 0) {

    v1_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.v1_name_);
  }
  if (from.v2_name().size() > 0) {

    v2_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.v2_name_);
  }
}

void DockerImage_Fingerprint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DockerImage_Fingerprint::CopyFrom(const DockerImage_Fingerprint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DockerImage_Fingerprint::IsInitialized() const {
  return true;
}

void DockerImage_Fingerprint::Swap(DockerImage_Fingerprint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DockerImage_Fingerprint::InternalSwap(DockerImage_Fingerprint* other) {
  using std::swap;
  v2_blob_.InternalSwap(CastToBase(&other->v2_blob_));
  v1_name_.Swap(&other->v1_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  v2_name_.Swap(&other->v2_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DockerImage_Fingerprint::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DockerImage_Basis::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_DockerImage_Basis_default_instance_._instance.get_mutable()->fingerprint_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint*>(
      ::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DockerImage_Basis::kResourceUrlFieldNumber;
const int DockerImage_Basis::kFingerprintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DockerImage_Basis::DockerImage_Basis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage_Basis.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
}
DockerImage_Basis::DockerImage_Basis(const DockerImage_Basis& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_url().size() > 0) {
    resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_url_);
  }
  if (from.has_fingerprint()) {
    fingerprint_ = new ::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint(*from.fingerprint_);
  } else {
    fingerprint_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
}

void DockerImage_Basis::SharedCtor() {
  resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fingerprint_ = NULL;
}

DockerImage_Basis::~DockerImage_Basis() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
  SharedDtor();
}

void DockerImage_Basis::SharedDtor() {
  resource_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fingerprint_;
}

void DockerImage_Basis::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DockerImage_Basis::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DockerImage_Basis& DockerImage_Basis::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage_Basis.base);
  return *internal_default_instance();
}


void DockerImage_Basis::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && fingerprint_ != NULL) {
    delete fingerprint_;
  }
  fingerprint_ = NULL;
  _internal_metadata_.Clear();
}

bool DockerImage_Basis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_url().data(), static_cast<int>(this->resource_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.DockerImage.Basis.resource_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint fingerprint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fingerprint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
  return false;
#undef DO_
}

void DockerImage_Basis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_url = 1;
  if (this->resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_url().data(), static_cast<int>(this->resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DockerImage.Basis.resource_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_url(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint fingerprint = 2;
  if (this->has_fingerprint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_fingerprint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
}

::google::protobuf::uint8* DockerImage_Basis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_url = 1;
  if (this->resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_url().data(), static_cast<int>(this->resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DockerImage.Basis.resource_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_url(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint fingerprint = 2;
  if (this->has_fingerprint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_fingerprint(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
  return target;
}

size_t DockerImage_Basis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string resource_url = 1;
  if (this->resource_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_url());
  }

  // .google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint fingerprint = 2;
  if (this->has_fingerprint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fingerprint_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DockerImage_Basis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
  GOOGLE_DCHECK_NE(&from, this);
  const DockerImage_Basis* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DockerImage_Basis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
    MergeFrom(*source);
  }
}

void DockerImage_Basis::MergeFrom(const DockerImage_Basis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_url().size() > 0) {

    resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_url_);
  }
  if (from.has_fingerprint()) {
    mutable_fingerprint()->::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint::MergeFrom(from.fingerprint());
  }
}

void DockerImage_Basis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DockerImage_Basis::CopyFrom(const DockerImage_Basis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Basis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DockerImage_Basis::IsInitialized() const {
  return true;
}

void DockerImage_Basis::Swap(DockerImage_Basis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DockerImage_Basis::InternalSwap(DockerImage_Basis* other) {
  using std::swap;
  resource_url_.Swap(&other->resource_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(fingerprint_, other->fingerprint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DockerImage_Basis::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DockerImage_Derived::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_DockerImage_Derived_default_instance_._instance.get_mutable()->fingerprint_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint*>(
      ::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DockerImage_Derived::kFingerprintFieldNumber;
const int DockerImage_Derived::kDistanceFieldNumber;
const int DockerImage_Derived::kLayerInfoFieldNumber;
const int DockerImage_Derived::kBaseResourceUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DockerImage_Derived::DockerImage_Derived()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage_Derived.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
}
DockerImage_Derived::DockerImage_Derived(const DockerImage_Derived& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      layer_info_(from.layer_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  base_resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.base_resource_url().size() > 0) {
    base_resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_resource_url_);
  }
  if (from.has_fingerprint()) {
    fingerprint_ = new ::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint(*from.fingerprint_);
  } else {
    fingerprint_ = NULL;
  }
  distance_ = from.distance_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
}

void DockerImage_Derived::SharedCtor() {
  base_resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fingerprint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&fingerprint_)) + sizeof(distance_));
}

DockerImage_Derived::~DockerImage_Derived() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
  SharedDtor();
}

void DockerImage_Derived::SharedDtor() {
  base_resource_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fingerprint_;
}

void DockerImage_Derived::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DockerImage_Derived::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DockerImage_Derived& DockerImage_Derived::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage_Derived.base);
  return *internal_default_instance();
}


void DockerImage_Derived::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  layer_info_.Clear();
  base_resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && fingerprint_ != NULL) {
    delete fingerprint_;
  }
  fingerprint_ = NULL;
  distance_ = 0u;
  _internal_metadata_.Clear();
}

bool DockerImage_Derived::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint fingerprint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fingerprint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 distance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.containeranalysis.v1alpha1.DockerImage.Layer layer_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_layer_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string base_resource_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_resource_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->base_resource_url().data(), static_cast<int>(this->base_resource_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.DockerImage.Derived.base_resource_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
  return false;
#undef DO_
}

void DockerImage_Derived::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint fingerprint = 1;
  if (this->has_fingerprint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_fingerprint(), output);
  }

  // uint32 distance = 2;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->distance(), output);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.DockerImage.Layer layer_info = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layer_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->layer_info(static_cast<int>(i)),
      output);
  }

  // string base_resource_url = 4;
  if (this->base_resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_resource_url().data(), static_cast<int>(this->base_resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DockerImage.Derived.base_resource_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->base_resource_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
}

::google::protobuf::uint8* DockerImage_Derived::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint fingerprint = 1;
  if (this->has_fingerprint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_fingerprint(), deterministic, target);
  }

  // uint32 distance = 2;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->distance(), target);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.DockerImage.Layer layer_info = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layer_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->layer_info(static_cast<int>(i)), deterministic, target);
  }

  // string base_resource_url = 4;
  if (this->base_resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_resource_url().data(), static_cast<int>(this->base_resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DockerImage.Derived.base_resource_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->base_resource_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
  return target;
}

size_t DockerImage_Derived::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.containeranalysis.v1alpha1.DockerImage.Layer layer_info = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->layer_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->layer_info(static_cast<int>(i)));
    }
  }

  // string base_resource_url = 4;
  if (this->base_resource_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base_resource_url());
  }

  // .google.devtools.containeranalysis.v1alpha1.DockerImage.Fingerprint fingerprint = 1;
  if (this->has_fingerprint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fingerprint_);
  }

  // uint32 distance = 2;
  if (this->distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->distance());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DockerImage_Derived::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
  GOOGLE_DCHECK_NE(&from, this);
  const DockerImage_Derived* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DockerImage_Derived>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
    MergeFrom(*source);
  }
}

void DockerImage_Derived::MergeFrom(const DockerImage_Derived& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  layer_info_.MergeFrom(from.layer_info_);
  if (from.base_resource_url().size() > 0) {

    base_resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_resource_url_);
  }
  if (from.has_fingerprint()) {
    mutable_fingerprint()->::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint::MergeFrom(from.fingerprint());
  }
  if (from.distance() != 0) {
    set_distance(from.distance());
  }
}

void DockerImage_Derived::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DockerImage_Derived::CopyFrom(const DockerImage_Derived& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage.Derived)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DockerImage_Derived::IsInitialized() const {
  return true;
}

void DockerImage_Derived::Swap(DockerImage_Derived* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DockerImage_Derived::InternalSwap(DockerImage_Derived* other) {
  using std::swap;
  CastToBase(&layer_info_)->InternalSwap(CastToBase(&other->layer_info_));
  base_resource_url_.Swap(&other->base_resource_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(fingerprint_, other->fingerprint_);
  swap(distance_, other->distance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DockerImage_Derived::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DockerImage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DockerImage::DockerImage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.DockerImage)
}
DockerImage::DockerImage(const DockerImage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.DockerImage)
}

void DockerImage::SharedCtor() {
}

DockerImage::~DockerImage() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.DockerImage)
  SharedDtor();
}

void DockerImage::SharedDtor() {
}

void DockerImage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DockerImage::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DockerImage& DockerImage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage.base);
  return *internal_default_instance();
}


void DockerImage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.DockerImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DockerImage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.DockerImage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.DockerImage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.DockerImage)
  return false;
#undef DO_
}

void DockerImage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.DockerImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.DockerImage)
}

::google::protobuf::uint8* DockerImage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.DockerImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.DockerImage)
  return target;
}

size_t DockerImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.DockerImage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DockerImage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage)
  GOOGLE_DCHECK_NE(&from, this);
  const DockerImage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DockerImage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.DockerImage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.DockerImage)
    MergeFrom(*source);
  }
}

void DockerImage::MergeFrom(const DockerImage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DockerImage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DockerImage::CopyFrom(const DockerImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.DockerImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DockerImage::IsInitialized() const {
  return true;
}

void DockerImage::Swap(DockerImage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DockerImage::InternalSwap(DockerImage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DockerImage::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace containeranalysis
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::DockerImage_Layer* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::DockerImage_Layer >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::DockerImage_Layer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::DockerImage_Fingerprint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::DockerImage* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::DockerImage >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::DockerImage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
