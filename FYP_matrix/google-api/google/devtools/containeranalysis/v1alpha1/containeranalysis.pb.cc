// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/containeranalysis/v1alpha1/containeranalysis.proto

#include "google/devtools/containeranalysis/v1alpha1/containeranalysis.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fbill_5fof_5fmaterials_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fbill_5fof_5fmaterials_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PackageManager_Installation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fbill_5fof_5fmaterials_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PackageManager_Package;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fbill_5fof_5fmaterials_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AttestationAuthority_AttestationAuthorityHint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BuildSignature;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Deployable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Discovery;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetVulnzOccurrencesSummaryResponse_SeverityCount;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Note_RelatedUrl;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PgpSignedAttestation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ScanConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AttestationAuthority;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AttestationAuthority_Attestation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BuildDetails;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BuildType;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Deployable_Deployment;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Resource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Discovery_Discovered;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_Note;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_Occurrence;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DockerImage_Basis;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DockerImage_Derived;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VulnerabilityType;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VulnerabilityType_VulnerabilityDetails;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Hash;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_BuildProvenance;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto
namespace protobuf_google_2flongrunning_2foperations_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2flongrunning_2foperations_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Operation;
}  // namespace protobuf_google_2flongrunning_2foperations_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_google_2frpc_2fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2frpc_2fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Status;
}  // namespace protobuf_google_2frpc_2fstatus_2eproto
namespace google {
namespace devtools {
namespace containeranalysis {
namespace v1alpha1 {
class OccurrenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Occurrence>
      _instance;
  const ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails* vulnerability_details_;
  const ::google::devtools::containeranalysis::v1alpha1::BuildDetails* build_details_;
  const ::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived* derived_image_;
  const ::google::devtools::containeranalysis::v1alpha1::PackageManager_Installation* installation_;
  const ::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment* deployment_;
  const ::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered* discovered_;
  const ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation* attestation_;
} _Occurrence_default_instance_;
class ResourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Resource>
      _instance;
} _Resource_default_instance_;
class Note_RelatedUrlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Note_RelatedUrl>
      _instance;
} _Note_RelatedUrl_default_instance_;
class NoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Note>
      _instance;
  const ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType* vulnerability_type_;
  const ::google::devtools::containeranalysis::v1alpha1::BuildType* build_type_;
  const ::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis* base_image_;
  const ::google::devtools::containeranalysis::v1alpha1::PackageManager_Package* package_;
  const ::google::devtools::containeranalysis::v1alpha1::Deployable* deployable_;
  const ::google::devtools::containeranalysis::v1alpha1::Discovery* discovery_;
  const ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority* attestation_authority_;
} _Note_default_instance_;
class Deployable_DeploymentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Deployable_Deployment>
      _instance;
} _Deployable_Deployment_default_instance_;
class DeployableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Deployable>
      _instance;
} _Deployable_default_instance_;
class Discovery_DiscoveredDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Discovery_Discovered>
      _instance;
} _Discovery_Discovered_default_instance_;
class DiscoveryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Discovery>
      _instance;
} _Discovery_default_instance_;
class BuildTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuildType>
      _instance;
} _BuildType_default_instance_;
class BuildSignatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuildSignature>
      _instance;
} _BuildSignature_default_instance_;
class PgpSignedAttestationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PgpSignedAttestation>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr pgp_key_id_;
} _PgpSignedAttestation_default_instance_;
class AttestationAuthority_AttestationAuthorityHintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttestationAuthority_AttestationAuthorityHint>
      _instance;
} _AttestationAuthority_AttestationAuthorityHint_default_instance_;
class AttestationAuthority_AttestationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttestationAuthority_Attestation>
      _instance;
  const ::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation* pgp_signed_attestation_;
} _AttestationAuthority_Attestation_default_instance_;
class AttestationAuthorityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttestationAuthority>
      _instance;
} _AttestationAuthority_default_instance_;
class BuildDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuildDetails>
      _instance;
} _BuildDetails_default_instance_;
class ScanConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScanConfig>
      _instance;
} _ScanConfig_default_instance_;
class GetOccurrenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOccurrenceRequest>
      _instance;
} _GetOccurrenceRequest_default_instance_;
class ListOccurrencesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListOccurrencesRequest>
      _instance;
} _ListOccurrencesRequest_default_instance_;
class ListOccurrencesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListOccurrencesResponse>
      _instance;
} _ListOccurrencesResponse_default_instance_;
class DeleteOccurrenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteOccurrenceRequest>
      _instance;
} _DeleteOccurrenceRequest_default_instance_;
class CreateOccurrenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateOccurrenceRequest>
      _instance;
} _CreateOccurrenceRequest_default_instance_;
class UpdateOccurrenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateOccurrenceRequest>
      _instance;
} _UpdateOccurrenceRequest_default_instance_;
class GetNoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetNoteRequest>
      _instance;
} _GetNoteRequest_default_instance_;
class GetOccurrenceNoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOccurrenceNoteRequest>
      _instance;
} _GetOccurrenceNoteRequest_default_instance_;
class ListNotesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNotesRequest>
      _instance;
} _ListNotesRequest_default_instance_;
class ListNotesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNotesResponse>
      _instance;
} _ListNotesResponse_default_instance_;
class DeleteNoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteNoteRequest>
      _instance;
} _DeleteNoteRequest_default_instance_;
class CreateNoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateNoteRequest>
      _instance;
} _CreateNoteRequest_default_instance_;
class UpdateNoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateNoteRequest>
      _instance;
} _UpdateNoteRequest_default_instance_;
class ListNoteOccurrencesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNoteOccurrencesRequest>
      _instance;
} _ListNoteOccurrencesRequest_default_instance_;
class ListNoteOccurrencesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNoteOccurrencesResponse>
      _instance;
} _ListNoteOccurrencesResponse_default_instance_;
class CreateOperationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateOperationRequest>
      _instance;
} _CreateOperationRequest_default_instance_;
class UpdateOperationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateOperationRequest>
      _instance;
} _UpdateOperationRequest_default_instance_;
class OperationMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationMetadata>
      _instance;
} _OperationMetadata_default_instance_;
class GetVulnzOccurrencesSummaryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVulnzOccurrencesSummaryRequest>
      _instance;
} _GetVulnzOccurrencesSummaryRequest_default_instance_;
class GetVulnzOccurrencesSummaryResponse_SeverityCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVulnzOccurrencesSummaryResponse_SeverityCount>
      _instance;
} _GetVulnzOccurrencesSummaryResponse_SeverityCount_default_instance_;
class GetVulnzOccurrencesSummaryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVulnzOccurrencesSummaryResponse>
      _instance;
} _GetVulnzOccurrencesSummaryResponse_default_instance_;
class GetScanConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetScanConfigRequest>
      _instance;
} _GetScanConfigRequest_default_instance_;
class ListScanConfigsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListScanConfigsRequest>
      _instance;
} _ListScanConfigsRequest_default_instance_;
class ListScanConfigsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListScanConfigsResponse>
      _instance;
} _ListScanConfigsResponse_default_instance_;
class UpdateScanConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateScanConfigRequest>
      _instance;
} _UpdateScanConfigRequest_default_instance_;
}  // namespace v1alpha1
}  // namespace containeranalysis
}  // namespace devtools
}  // namespace google
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto {
static void InitDefaultsOccurrence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_Occurrence_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::Occurrence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::Occurrence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_Occurrence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsOccurrence}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Resource.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_VulnerabilityDetails.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_BuildDetails.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage_Derived.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fbill_5fof_5fmaterials_2eproto::scc_info_PackageManager_Installation.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Deployable_Deployment.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Discovery_Discovered.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_AttestationAuthority_Attestation.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsResource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_Resource_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::Resource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::Resource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Resource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResource}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Hash.base,}};

static void InitDefaultsNote_RelatedUrl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_Note_RelatedUrl_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::Note_RelatedUrl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::Note_RelatedUrl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Note_RelatedUrl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNote_RelatedUrl}, {}};

static void InitDefaultsNote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_Note_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::Note();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::Note::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_Note =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsNote}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_BuildType.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::scc_info_DockerImage_Basis.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fbill_5fof_5fmaterials_2eproto::scc_info_PackageManager_Package.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Deployable.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Discovery.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_AttestationAuthority.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Note_RelatedUrl.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsDeployable_Deployment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_Deployable_Deployment_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Deployable_Deployment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeployable_Deployment}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsDeployable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_Deployable_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::Deployable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::Deployable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Deployable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeployable}, {}};

static void InitDefaultsDiscovery_Discovered() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_Discovery_Discovered_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Discovery_Discovered =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDiscovery_Discovered}, {
      &protobuf_google_2flongrunning_2foperations_2eproto::scc_info_Operation.base,
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,}};

static void InitDefaultsDiscovery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_Discovery_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::Discovery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::Discovery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Discovery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiscovery}, {}};

static void InitDefaultsBuildType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_BuildType_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::BuildType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::BuildType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BuildType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBuildType}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_BuildSignature.base,}};

static void InitDefaultsBuildSignature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_BuildSignature_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::BuildSignature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::BuildSignature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BuildSignature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBuildSignature}, {}};

static void InitDefaultsPgpSignedAttestation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_PgpSignedAttestation_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PgpSignedAttestation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPgpSignedAttestation}, {}};

static void InitDefaultsAttestationAuthority_AttestationAuthorityHint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_AttestationAuthority_AttestationAuthorityHint_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_AttestationAuthorityHint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_AttestationAuthorityHint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AttestationAuthority_AttestationAuthorityHint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAttestationAuthority_AttestationAuthorityHint}, {}};

static void InitDefaultsAttestationAuthority_Attestation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_AttestationAuthority_Attestation_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AttestationAuthority_Attestation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAttestationAuthority_Attestation}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_PgpSignedAttestation.base,}};

static void InitDefaultsAttestationAuthority() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_AttestationAuthority_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AttestationAuthority =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAttestationAuthority}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_AttestationAuthority_AttestationAuthorityHint.base,}};

static void InitDefaultsBuildDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_BuildDetails_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::BuildDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::BuildDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BuildDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBuildDetails}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_BuildProvenance.base,}};

static void InitDefaultsScanConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_ScanConfig_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::ScanConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::ScanConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScanConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScanConfig}, {}};

static void InitDefaultsGetOccurrenceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_GetOccurrenceRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetOccurrenceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetOccurrenceRequest}, {}};

static void InitDefaultsListOccurrencesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_ListOccurrencesRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListOccurrencesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListOccurrencesRequest}, {}};

static void InitDefaultsListOccurrencesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_ListOccurrencesResponse_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListOccurrencesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListOccurrencesResponse}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Occurrence.base,}};

static void InitDefaultsDeleteOccurrenceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_DeleteOccurrenceRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::DeleteOccurrenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::DeleteOccurrenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteOccurrenceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteOccurrenceRequest}, {}};

static void InitDefaultsCreateOccurrenceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_CreateOccurrenceRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateOccurrenceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateOccurrenceRequest}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Occurrence.base,}};

static void InitDefaultsUpdateOccurrenceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_UpdateOccurrenceRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateOccurrenceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateOccurrenceRequest}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Occurrence.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

static void InitDefaultsGetNoteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_GetNoteRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::GetNoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::GetNoteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetNoteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetNoteRequest}, {}};

static void InitDefaultsGetOccurrenceNoteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_GetOccurrenceNoteRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceNoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceNoteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetOccurrenceNoteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetOccurrenceNoteRequest}, {}};

static void InitDefaultsListNotesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_ListNotesRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::ListNotesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::ListNotesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListNotesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListNotesRequest}, {}};

static void InitDefaultsListNotesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_ListNotesResponse_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::ListNotesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::ListNotesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListNotesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListNotesResponse}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Note.base,}};

static void InitDefaultsDeleteNoteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_DeleteNoteRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::DeleteNoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::DeleteNoteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteNoteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteNoteRequest}, {}};

static void InitDefaultsCreateNoteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_CreateNoteRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateNoteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateNoteRequest}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Note.base,}};

static void InitDefaultsUpdateNoteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_UpdateNoteRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateNoteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateNoteRequest}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Note.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

static void InitDefaultsListNoteOccurrencesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_ListNoteOccurrencesRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListNoteOccurrencesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListNoteOccurrencesRequest}, {}};

static void InitDefaultsListNoteOccurrencesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_ListNoteOccurrencesResponse_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListNoteOccurrencesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListNoteOccurrencesResponse}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Occurrence.base,}};

static void InitDefaultsCreateOperationRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_CreateOperationRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateOperationRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateOperationRequest}, {
      &protobuf_google_2flongrunning_2foperations_2eproto::scc_info_Operation.base,}};

static void InitDefaultsUpdateOperationRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_UpdateOperationRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateOperationRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateOperationRequest}, {
      &protobuf_google_2flongrunning_2foperations_2eproto::scc_info_Operation.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

static void InitDefaultsOperationMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_OperationMetadata_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::OperationMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::OperationMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OperationMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOperationMetadata}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsGetVulnzOccurrencesSummaryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_GetVulnzOccurrencesSummaryRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetVulnzOccurrencesSummaryRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetVulnzOccurrencesSummaryRequest}, {}};

static void InitDefaultsGetVulnzOccurrencesSummaryResponse_SeverityCount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_GetVulnzOccurrencesSummaryResponse_SeverityCount_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse_SeverityCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse_SeverityCount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetVulnzOccurrencesSummaryResponse_SeverityCount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetVulnzOccurrencesSummaryResponse_SeverityCount}, {}};

static void InitDefaultsGetVulnzOccurrencesSummaryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_GetVulnzOccurrencesSummaryResponse_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetVulnzOccurrencesSummaryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetVulnzOccurrencesSummaryResponse}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetVulnzOccurrencesSummaryResponse_SeverityCount.base,}};

static void InitDefaultsGetScanConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_GetScanConfigRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::GetScanConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::GetScanConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetScanConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetScanConfigRequest}, {}};

static void InitDefaultsListScanConfigsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_ListScanConfigsRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListScanConfigsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListScanConfigsRequest}, {}};

static void InitDefaultsListScanConfigsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_ListScanConfigsResponse_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListScanConfigsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListScanConfigsResponse}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ScanConfig.base,}};

static void InitDefaultsUpdateScanConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_UpdateScanConfigRequest_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateScanConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateScanConfigRequest}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ScanConfig.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Occurrence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Resource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Note_RelatedUrl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Note.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Deployable_Deployment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Deployable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Discovery_Discovered.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Discovery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BuildType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BuildSignature.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PgpSignedAttestation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AttestationAuthority_AttestationAuthorityHint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AttestationAuthority_Attestation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AttestationAuthority.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BuildDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScanConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetOccurrenceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListOccurrencesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListOccurrencesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteOccurrenceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateOccurrenceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateOccurrenceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetNoteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetOccurrenceNoteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNotesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNotesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteNoteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateNoteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateNoteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNoteOccurrencesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNoteOccurrencesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateOperationRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateOperationRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVulnzOccurrencesSummaryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVulnzOccurrencesSummaryResponse_SeverityCount.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVulnzOccurrencesSummaryResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetScanConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListScanConfigsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListScanConfigsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateScanConfigRequest.base);
}

::google::protobuf::Metadata file_level_metadata[41];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Occurrence, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Occurrence, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Occurrence, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Occurrence, resource_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Occurrence, resource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Occurrence, note_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Occurrence, kind_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::OccurrenceDefaultTypeInternal, vulnerability_details_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::OccurrenceDefaultTypeInternal, build_details_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::OccurrenceDefaultTypeInternal, derived_image_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::OccurrenceDefaultTypeInternal, installation_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::OccurrenceDefaultTypeInternal, deployment_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::OccurrenceDefaultTypeInternal, discovered_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::OccurrenceDefaultTypeInternal, attestation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Occurrence, remediation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Occurrence, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Occurrence, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Occurrence, details_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Resource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Resource, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Resource, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Resource, content_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note_RelatedUrl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note_RelatedUrl, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note_RelatedUrl, label_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note, short_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note, long_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note, kind_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::NoteDefaultTypeInternal, vulnerability_type_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::NoteDefaultTypeInternal, build_type_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::NoteDefaultTypeInternal, base_image_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::NoteDefaultTypeInternal, package_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::NoteDefaultTypeInternal, deployable_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::NoteDefaultTypeInternal, discovery_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::NoteDefaultTypeInternal, attestation_authority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note, related_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note, expiration_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Note, note_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment, user_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment, deploy_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment, undeploy_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment, resource_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment, platform_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Deployable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Deployable, resource_uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered, operation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered, analysis_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered, analysis_status_error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Discovery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Discovery, analysis_kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildType, builder_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildType, signature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildSignature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildSignature, public_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildSignature, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildSignature, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildSignature, key_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation, content_type_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestationDefaultTypeInternal, pgp_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation, key_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_AttestationAuthorityHint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_AttestationAuthorityHint, human_readable_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_AttestationDefaultTypeInternal, pgp_signed_attestation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation, signature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::AttestationAuthority, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::AttestationAuthority, hint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildDetails, provenance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildDetails, provenance_bytes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ScanConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ScanConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ScanConfig, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ScanConfig, enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetOccurrenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetOccurrenceRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest, kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse, occurrences_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DeleteOccurrenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DeleteOccurrenceRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest, occurrence_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest, occurrence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetNoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetNoteRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetOccurrenceNoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetOccurrenceNoteRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNotesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNotesRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNotesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNotesRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNotesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNotesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNotesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNotesResponse, notes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNotesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DeleteNoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::DeleteNoteRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest, note_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest, note_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest, note_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse, occurrences_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest, operation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest, operation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest, operation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::OperationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::OperationMetadata, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::OperationMetadata, end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest, filter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse_SeverityCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse_SeverityCount, severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse_SeverityCount, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse, counts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetScanConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::GetScanConfigRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse, scan_configs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest, scan_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest, update_mask_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::Occurrence)},
  { 21, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::Resource)},
  { 29, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::Note_RelatedUrl)},
  { 36, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::Note)},
  { 57, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment)},
  { 69, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::Deployable)},
  { 75, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered)},
  { 83, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::Discovery)},
  { 89, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::BuildType)},
  { 96, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::BuildSignature)},
  { 105, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation)},
  { 114, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_AttestationAuthorityHint)},
  { 120, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation)},
  { 127, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::AttestationAuthority)},
  { 133, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::BuildDetails)},
  { 140, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::ScanConfig)},
  { 148, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::GetOccurrenceRequest)},
  { 154, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest)},
  { 165, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse)},
  { 172, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::DeleteOccurrenceRequest)},
  { 178, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest)},
  { 186, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest)},
  { 194, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::GetNoteRequest)},
  { 200, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::GetOccurrenceNoteRequest)},
  { 206, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::ListNotesRequest)},
  { 216, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::ListNotesResponse)},
  { 223, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::DeleteNoteRequest)},
  { 229, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest)},
  { 238, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest)},
  { 246, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest)},
  { 255, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse)},
  { 262, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest)},
  { 270, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest)},
  { 278, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::OperationMetadata)},
  { 285, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest)},
  { 292, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse_SeverityCount)},
  { 299, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse)},
  { 305, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::GetScanConfigRequest)},
  { 311, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest)},
  { 320, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse)},
  { 327, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_Occurrence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_Resource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_Note_RelatedUrl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_Note_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_Deployable_Deployment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_Deployable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_Discovery_Discovered_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_Discovery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_BuildType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_BuildSignature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_PgpSignedAttestation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_AttestationAuthority_AttestationAuthorityHint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_AttestationAuthority_Attestation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_AttestationAuthority_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_BuildDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_ScanConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_GetOccurrenceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_ListOccurrencesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_ListOccurrencesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_DeleteOccurrenceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_CreateOccurrenceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_UpdateOccurrenceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_GetNoteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_GetOccurrenceNoteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_ListNotesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_ListNotesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_DeleteNoteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_CreateNoteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_UpdateNoteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_ListNoteOccurrencesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_ListNoteOccurrencesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_CreateOperationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_UpdateOperationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_OperationMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_GetVulnzOccurrencesSummaryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_GetVulnzOccurrencesSummaryResponse_SeverityCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_GetVulnzOccurrencesSummaryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_GetScanConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_ListScanConfigsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_ListScanConfigsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_UpdateScanConfigRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/devtools/containeranalysis/v1alpha1/containeranalysis.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 41);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nBgoogle/devtools/containeranalysis/v1al"
      "pha1/containeranalysis.proto\022*google.dev"
      "tools.containeranalysis.v1alpha1\032\034google"
      "/api/annotations.proto\032Bgoogle/devtools/"
      "containeranalysis/v1alpha1/bill_of_mater"
      "ials.proto\032<google/devtools/containerana"
      "lysis/v1alpha1/image_basis.proto\032Fgoogle"
      "/devtools/containeranalysis/v1alpha1/pac"
      "kage_vulnerability.proto\032;google/devtool"
      "s/containeranalysis/v1alpha1/provenance."
      "proto\032\036google/iam/v1/iam_policy.proto\032\032g"
      "oogle/iam/v1/policy.proto\032#google/longru"
      "nning/operations.proto\032\031google/protobuf/"
      "any.proto\032\033google/protobuf/empty.proto\032 "
      "google/protobuf/field_mask.proto\032\037google"
      "/protobuf/timestamp.proto\032\027google/rpc/st"
      "atus.proto\"\353\007\n\nOccurrence\022\014\n\004name\030\001 \001(\t\022"
      "\024\n\014resource_url\030\002 \001(\t\022F\n\010resource\030\021 \001(\0132"
      "4.google.devtools.containeranalysis.v1al"
      "pha1.Resource\022\021\n\tnote_name\030\003 \001(\t\022C\n\004kind"
      "\030\006 \001(\01625.google.devtools.containeranalys"
      "is.v1alpha1.Note.Kind\022s\n\025vulnerability_d"
      "etails\030\010 \001(\0132R.google.devtools.container"
      "analysis.v1alpha1.VulnerabilityType.Vuln"
      "erabilityDetailsH\000\022Q\n\rbuild_details\030\007 \001("
      "\01328.google.devtools.containeranalysis.v1"
      "alpha1.BuildDetailsH\000\022X\n\rderived_image\030\013"
      " \001(\0132\?.google.devtools.containeranalysis"
      ".v1alpha1.DockerImage.DerivedH\000\022_\n\014insta"
      "llation\030\014 \001(\0132G.google.devtools.containe"
      "ranalysis.v1alpha1.PackageManager.Instal"
      "lationH\000\022W\n\ndeployment\030\016 \001(\0132A.google.de"
      "vtools.containeranalysis.v1alpha1.Deploy"
      "able.DeploymentH\000\022V\n\ndiscovered\030\017 \001(\0132@."
      "google.devtools.containeranalysis.v1alph"
      "a1.Discovery.DiscoveredH\000\022c\n\013attestation"
      "\030\020 \001(\0132L.google.devtools.containeranalys"
      "is.v1alpha1.AttestationAuthority.Attesta"
      "tionH\000\022\023\n\013remediation\030\005 \001(\t\022/\n\013create_ti"
      "me\030\t \001(\0132\032.google.protobuf.Timestamp\022/\n\013"
      "update_time\030\n \001(\0132\032.google.protobuf.Time"
      "stampB\t\n\007details\"m\n\010Resource\022\014\n\004name\030\001 \001"
      "(\t\022\013\n\003uri\030\002 \001(\t\022F\n\014content_hash\030\003 \001(\01320."
      "google.devtools.containeranalysis.v1alph"
      "a1.Hash\"\256\t\n\004Note\022\014\n\004name\030\001 \001(\t\022\031\n\021short_"
      "description\030\003 \001(\t\022\030\n\020long_description\030\004 "
      "\001(\t\022C\n\004kind\030\t \001(\01625.google.devtools.cont"
      "aineranalysis.v1alpha1.Note.Kind\022[\n\022vuln"
      "erability_type\030\006 \001(\0132=.google.devtools.c"
      "ontaineranalysis.v1alpha1.VulnerabilityT"
      "ypeH\000\022K\n\nbuild_type\030\010 \001(\01325.google.devto"
      "ols.containeranalysis.v1alpha1.BuildType"
      "H\000\022S\n\nbase_image\030\r \001(\0132=.google.devtools"
      ".containeranalysis.v1alpha1.DockerImage."
      "BasisH\000\022U\n\007package\030\016 \001(\0132B.google.devtoo"
      "ls.containeranalysis.v1alpha1.PackageMan"
      "ager.PackageH\000\022L\n\ndeployable\030\021 \001(\01326.goo"
      "gle.devtools.containeranalysis.v1alpha1."
      "DeployableH\000\022J\n\tdiscovery\030\022 \001(\01325.google"
      ".devtools.containeranalysis.v1alpha1.Dis"
      "coveryH\000\022a\n\025attestation_authority\030\023 \001(\0132"
      "@.google.devtools.containeranalysis.v1al"
      "pha1.AttestationAuthorityH\000\022P\n\013related_u"
      "rl\030\007 \003(\0132;.google.devtools.containeranal"
      "ysis.v1alpha1.Note.RelatedUrl\0223\n\017expirat"
      "ion_time\030\n \001(\0132\032.google.protobuf.Timesta"
      "mp\022/\n\013create_time\030\013 \001(\0132\032.google.protobu"
      "f.Timestamp\022/\n\013update_time\030\014 \001(\0132\032.googl"
      "e.protobuf.Timestamp\032(\n\nRelatedUrl\022\013\n\003ur"
      "l\030\001 \001(\t\022\r\n\005label\030\002 \001(\t\"\252\001\n\004Kind\022\024\n\020KIND_"
      "UNSPECIFIED\020\000\022\031\n\025PACKAGE_VULNERABILITY\020\002"
      "\022\021\n\rBUILD_DETAILS\020\003\022\017\n\013IMAGE_BASIS\020\004\022\023\n\017"
      "PACKAGE_MANAGER\020\005\022\016\n\nDEPLOYABLE\020\006\022\r\n\tDIS"
      "COVERY\020\007\022\031\n\025ATTESTATION_AUTHORITY\020\010B\013\n\tn"
      "ote_type\"\203\003\n\nDeployable\022\024\n\014resource_uri\030"
      "\001 \003(\t\032\336\002\n\nDeployment\022\022\n\nuser_email\030\001 \001(\t"
      "\022/\n\013deploy_time\030\002 \001(\0132\032.google.protobuf."
      "Timestamp\0221\n\rundeploy_time\030\003 \001(\0132\032.googl"
      "e.protobuf.Timestamp\022\016\n\006config\030\010 \001(\t\022\017\n\007"
      "address\030\005 \001(\t\022\024\n\014resource_uri\030\006 \003(\t\022\\\n\010p"
      "latform\030\007 \001(\0162J.google.devtools.containe"
      "ranalysis.v1alpha1.Deployable.Deployment"
      ".Platform\"C\n\010Platform\022\030\n\024PLATFORM_UNSPEC"
      "IFIED\020\000\022\007\n\003GKE\020\001\022\010\n\004FLEX\020\002\022\n\n\006CUSTOM\020\003\"\313"
      "\003\n\tDiscovery\022L\n\ranalysis_kind\030\001 \001(\01625.go"
      "ogle.devtools.containeranalysis.v1alpha1"
      ".Note.Kind\032\357\002\n\nDiscovered\0220\n\toperation\030\001"
      " \001(\0132\035.google.longrunning.Operation\022h\n\017a"
      "nalysis_status\030\005 \001(\0162O.google.devtools.c"
      "ontaineranalysis.v1alpha1.Discovery.Disc"
      "overed.AnalysisStatus\0221\n\025analysis_status"
      "_error\030\006 \001(\0132\022.google.rpc.Status\"\221\001\n\016Ana"
      "lysisStatus\022\037\n\033ANALYSIS_STATUS_UNSPECIFI"
      "ED\020\000\022\013\n\007PENDING\020\001\022\014\n\010SCANNING\020\002\022\024\n\020FINIS"
      "HED_SUCCESS\020\003\022\023\n\017FINISHED_FAILED\020\004\022\030\n\024UN"
      "SUPPORTED_RESOURCE\020\005\"s\n\tBuildType\022\027\n\017bui"
      "lder_version\030\001 \001(\t\022M\n\tsignature\030\002 \001(\0132:."
      "google.devtools.containeranalysis.v1alph"
      "a1.BuildSignature\"\347\001\n\016BuildSignature\022\022\n\n"
      "public_key\030\001 \001(\t\022\021\n\tsignature\030\002 \001(\t\022\016\n\006k"
      "ey_id\030\003 \001(\t\022T\n\010key_type\030\004 \001(\0162B.google.d"
      "evtools.containeranalysis.v1alpha1.Build"
      "Signature.KeyType\"H\n\007KeyType\022\030\n\024KEY_TYPE"
      "_UNSPECIFIED\020\000\022\025\n\021PGP_ASCII_ARMORED\020\001\022\014\n"
      "\010PKIX_PEM\020\002\"\363\001\n\024PgpSignedAttestation\022\021\n\t"
      "signature\030\001 \001(\t\022b\n\014content_type\030\003 \001(\0162L."
      "google.devtools.containeranalysis.v1alph"
      "a1.PgpSignedAttestation.ContentType\022\024\n\np"
      "gp_key_id\030\002 \001(\tH\000\"D\n\013ContentType\022\034\n\030CONT"
      "ENT_TYPE_UNSPECIFIED\020\000\022\027\n\023SIMPLE_SIGNING"
      "_JSON\020\001B\010\n\006key_id\"\270\002\n\024AttestationAuthori"
      "ty\022g\n\004hint\030\001 \001(\0132Y.google.devtools.conta"
      "ineranalysis.v1alpha1.AttestationAuthori"
      "ty.AttestationAuthorityHint\0327\n\030Attestati"
      "onAuthorityHint\022\033\n\023human_readable_name\030\001"
      " \001(\t\032~\n\013Attestation\022b\n\026pgp_signed_attest"
      "ation\030\001 \001(\0132@.google.devtools.containera"
      "nalysis.v1alpha1.PgpSignedAttestationH\000B"
      "\013\n\tsignature\"y\n\014BuildDetails\022O\n\nprovenan"
      "ce\030\001 \001(\0132;.google.devtools.containeranal"
      "ysis.v1alpha1.BuildProvenance\022\030\n\020provena"
      "nce_bytes\030\002 \001(\t\"@\n\nScanConfig\022\014\n\004name\030\001 "
      "\001(\t\022\023\n\013description\030\002 \001(\t\022\017\n\007enabled\030\003 \001("
      "\010\"$\n\024GetOccurrenceRequest\022\014\n\004name\030\001 \001(\t\""
      "\262\001\n\026ListOccurrencesRequest\022\014\n\004name\030\001 \001(\t"
      "\022\016\n\006parent\030\005 \001(\t\022\016\n\006filter\030\002 \001(\t\022\021\n\tpage"
      "_size\030\003 \001(\005\022\022\n\npage_token\030\004 \001(\t\022C\n\004kind\030"
      "\006 \001(\01625.google.devtools.containeranalysi"
      "s.v1alpha1.Note.Kind\"\177\n\027ListOccurrencesR"
      "esponse\022K\n\013occurrences\030\001 \003(\01326.google.de"
      "vtools.containeranalysis.v1alpha1.Occurr"
      "ence\022\027\n\017next_page_token\030\002 \001(\t\"\'\n\027DeleteO"
      "ccurrenceRequest\022\014\n\004name\030\001 \001(\t\"\203\001\n\027Creat"
      "eOccurrenceRequest\022\014\n\004name\030\001 \001(\t\022\016\n\006pare"
      "nt\030\003 \001(\t\022J\n\noccurrence\030\002 \001(\01326.google.de"
      "vtools.containeranalysis.v1alpha1.Occurr"
      "ence\"\244\001\n\027UpdateOccurrenceRequest\022\014\n\004name"
      "\030\001 \001(\t\022J\n\noccurrence\030\002 \001(\01326.google.devt"
      "ools.containeranalysis.v1alpha1.Occurren"
      "ce\022/\n\013update_mask\030\003 \001(\0132\032.google.protobu"
      "f.FieldMask\"\036\n\016GetNoteRequest\022\014\n\004name\030\001 "
      "\001(\t\"(\n\030GetOccurrenceNoteRequest\022\014\n\004name\030"
      "\001 \001(\t\"g\n\020ListNotesRequest\022\014\n\004name\030\001 \001(\t\022"
      "\016\n\006parent\030\005 \001(\t\022\016\n\006filter\030\002 \001(\t\022\021\n\tpage_"
      "size\030\003 \001(\005\022\022\n\npage_token\030\004 \001(\t\"m\n\021ListNo"
      "tesResponse\022\?\n\005notes\030\001 \003(\01320.google.devt"
      "ools.containeranalysis.v1alpha1.Note\022\027\n\017"
      "next_page_token\030\002 \001(\t\"!\n\021DeleteNoteReque"
      "st\022\014\n\004name\030\001 \001(\t\"\202\001\n\021CreateNoteRequest\022\014"
      "\n\004name\030\001 \001(\t\022\016\n\006parent\030\004 \001(\t\022\017\n\007note_id\030"
      "\002 \001(\t\022>\n\004note\030\003 \001(\01320.google.devtools.co"
      "ntaineranalysis.v1alpha1.Note\"\222\001\n\021Update"
      "NoteRequest\022\014\n\004name\030\001 \001(\t\022>\n\004note\030\002 \001(\0132"
      "0.google.devtools.containeranalysis.v1al"
      "pha1.Note\022/\n\013update_mask\030\003 \001(\0132\032.google."
      "protobuf.FieldMask\"a\n\032ListNoteOccurrence"
      "sRequest\022\014\n\004name\030\001 \001(\t\022\016\n\006filter\030\002 \001(\t\022\021"
      "\n\tpage_size\030\003 \001(\005\022\022\n\npage_token\030\004 \001(\t\"\203\001"
      "\n\033ListNoteOccurrencesResponse\022K\n\013occurre"
      "nces\030\001 \003(\01326.google.devtools.containeran"
      "alysis.v1alpha1.Occurrence\022\027\n\017next_page_"
      "token\030\002 \001(\t\"p\n\026CreateOperationRequest\022\016\n"
      "\006parent\030\001 \001(\t\022\024\n\014operation_id\030\002 \001(\t\0220\n\to"
      "peration\030\003 \001(\0132\035.google.longrunning.Oper"
      "ation\"\211\001\n\026UpdateOperationRequest\022\014\n\004name"
      "\030\001 \001(\t\0220\n\toperation\030\003 \001(\0132\035.google.longr"
      "unning.Operation\022/\n\013update_mask\030\004 \001(\0132\032."
      "google.protobuf.FieldMask\"r\n\021OperationMe"
      "tadata\022/\n\013create_time\030\001 \001(\0132\032.google.pro"
      "tobuf.Timestamp\022,\n\010end_time\030\002 \001(\0132\032.goog"
      "le.protobuf.Timestamp\"C\n!GetVulnzOccurre"
      "ncesSummaryRequest\022\016\n\006parent\030\001 \001(\t\022\016\n\006fi"
      "lter\030\002 \001(\t\"\214\002\n\"GetVulnzOccurrencesSummar"
      "yResponse\022l\n\006counts\030\001 \003(\0132\\.google.devto"
      "ols.containeranalysis.v1alpha1.GetVulnzO"
      "ccurrencesSummaryResponse.SeverityCount\032"
      "x\n\rSeverityCount\022X\n\010severity\030\001 \001(\0162F.goo"
      "gle.devtools.containeranalysis.v1alpha1."
      "VulnerabilityType.Severity\022\r\n\005count\030\002 \001("
      "\003\"$\n\024GetScanConfigRequest\022\014\n\004name\030\001 \001(\t\""
      "_\n\026ListScanConfigsRequest\022\016\n\006parent\030\001 \001("
      "\t\022\016\n\006filter\030\002 \001(\t\022\021\n\tpage_size\030\003 \001(\005\022\022\n\n"
      "page_token\030\004 \001(\t\"\200\001\n\027ListScanConfigsResp"
      "onse\022L\n\014scan_configs\030\001 \003(\01326.google.devt"
      "ools.containeranalysis.v1alpha1.ScanConf"
      "ig\022\027\n\017next_page_token\030\002 \001(\t\"\245\001\n\027UpdateSc"
      "anConfigRequest\022\014\n\004name\030\001 \001(\t\022K\n\013scan_co"
      "nfig\030\002 \001(\01326.google.devtools.containeran"
      "alysis.v1alpha1.ScanConfig\022/\n\013update_mas"
      "k\030\003 \001(\0132\032.google.protobuf.FieldMask2\306 \n\021"
      "ContainerAnalysis\022\274\001\n\rGetOccurrence\022@.go"
      "ogle.devtools.containeranalysis.v1alpha1"
      ".GetOccurrenceRequest\0326.google.devtools."
      "containeranalysis.v1alpha1.Occurrence\"1\202"
      "\323\344\223\002+\022)/v1alpha1/{name=projects/*/occurr"
      "ences/*}\022\315\001\n\017ListOccurrences\022B.google.de"
      "vtools.containeranalysis.v1alpha1.ListOc"
      "currencesRequest\032C.google.devtools.conta"
      "ineranalysis.v1alpha1.ListOccurrencesRes"
      "ponse\"1\202\323\344\223\002+\022)/v1alpha1/{parent=project"
      "s/*}/occurrences\022\242\001\n\020DeleteOccurrence\022C."
      "google.devtools.containeranalysis.v1alph"
      "a1.DeleteOccurrenceRequest\032\026.google.prot"
      "obuf.Empty\"1\202\323\344\223\002+*)/v1alpha1/{name=proj"
      "ects/*/occurrences/*}\022\316\001\n\020CreateOccurren"
      "ce\022C.google.devtools.containeranalysis.v"
      "1alpha1.CreateOccurrenceRequest\0326.google"
      ".devtools.containeranalysis.v1alpha1.Occ"
      "urrence\"=\202\323\344\223\0027\")/v1alpha1/{parent=proje"
      "cts/*}/occurrences:\noccurrence\022\316\001\n\020Updat"
      "eOccurrence\022C.google.devtools.containera"
      "nalysis.v1alpha1.UpdateOccurrenceRequest"
      "\0326.google.devtools.containeranalysis.v1a"
      "lpha1.Occurrence\"=\202\323\344\223\00272)/v1alpha1/{nam"
      "e=projects/*/occurrences/*}:\noccurrence\022"
      "\304\001\n\021GetOccurrenceNote\022D.google.devtools."
      "containeranalysis.v1alpha1.GetOccurrence"
      "NoteRequest\0320.google.devtools.containera"
      "nalysis.v1alpha1.Note\"7\202\323\344\223\0021\022//v1alpha1"
      "/{name=projects/*/occurrences/*}/notes\022\244"
      "\001\n\007GetNote\022:.google.devtools.containeran"
      "alysis.v1alpha1.GetNoteRequest\0320.google."
      "devtools.containeranalysis.v1alpha1.Note"
      "\"+\202\323\344\223\002%\022#/v1alpha1/{name=projects/*/not"
      "es/*}\022\265\001\n\tListNotes\022<.google.devtools.co"
      "ntaineranalysis.v1alpha1.ListNotesReques"
      "t\032=.google.devtools.containeranalysis.v1"
      "alpha1.ListNotesResponse\"+\202\323\344\223\002%\022#/v1alp"
      "ha1/{parent=projects/*}/notes\022\220\001\n\nDelete"
      "Note\022=.google.devtools.containeranalysis"
      ".v1alpha1.DeleteNoteRequest\032\026.google.pro"
      "tobuf.Empty\"+\202\323\344\223\002%*#/v1alpha1/{name=pro"
      "jects/*/notes/*}\022\260\001\n\nCreateNote\022=.google"
      ".devtools.containeranalysis.v1alpha1.Cre"
      "ateNoteRequest\0320.google.devtools.contain"
      "eranalysis.v1alpha1.Note\"1\202\323\344\223\002+\"#/v1alp"
      "ha1/{parent=projects/*}/notes:\004note\022\260\001\n\n"
      "UpdateNote\022=.google.devtools.containeran"
      "alysis.v1alpha1.UpdateNoteRequest\0320.goog"
      "le.devtools.containeranalysis.v1alpha1.N"
      "ote\"1\202\323\344\223\002+2#/v1alpha1/{name=projects/*/"
      "notes/*}:\004note\022\337\001\n\023ListNoteOccurrences\022F"
      ".google.devtools.containeranalysis.v1alp"
      "ha1.ListNoteOccurrencesRequest\032G.google."
      "devtools.containeranalysis.v1alpha1.List"
      "NoteOccurrencesResponse\"7\202\323\344\223\0021\022//v1alph"
      "a1/{name=projects/*/notes/*}/occurrences"
      "\022\203\002\n\032GetVulnzOccurrencesSummary\022M.google"
      ".devtools.containeranalysis.v1alpha1.Get"
      "VulnzOccurrencesSummaryRequest\032N.google."
      "devtools.containeranalysis.v1alpha1.GetV"
      "ulnzOccurrencesSummaryResponse\"F\202\323\344\223\002@\022>"
      "/v1alpha1/{parent=projects/*}/occurrence"
      "s:vulnerabilitySummary\022\314\001\n\014SetIamPolicy\022"
      "\".google.iam.v1.SetIamPolicyRequest\032\025.go"
      "ogle.iam.v1.Policy\"\200\001\202\323\344\223\002z\"4/v1alpha1/{"
      "resource=projects/*/notes/*}:setIamPolic"
      "y:\001*Z\?\":/v1alpha1/{resource=projects/*/o"
      "ccurrences/*}:setIamPolicy:\001*\022\314\001\n\014GetIam"
      "Policy\022\".google.iam.v1.GetIamPolicyReque"
      "st\032\025.google.iam.v1.Policy\"\200\001\202\323\344\223\002z\"4/v1a"
      "lpha1/{resource=projects/*/notes/*}:getI"
      "amPolicy:\001*Z\?\":/v1alpha1/{resource=proje"
      "cts/*/occurrences/*}:getIamPolicy:\001*\022\371\001\n"
      "\022TestIamPermissions\022(.google.iam.v1.Test"
      "IamPermissionsRequest\032).google.iam.v1.Te"
      "stIamPermissionsResponse\"\215\001\202\323\344\223\002\206\001\":/v1a"
      "lpha1/{resource=projects/*/notes/*}:test"
      "IamPermissions:\001*ZE\"@/v1alpha1/{resource"
      "=projects/*/occurrences/*}:testIamPermis"
      "sions:\001*\022\251\001\n\017CreateOperation\022B.google.de"
      "vtools.containeranalysis.v1alpha1.Create"
      "OperationRequest\032\035.google.longrunning.Op"
      "eration\"3\202\323\344\223\002-\"(/v1alpha1/{parent=proje"
      "cts/*}/operations:\001*\022\251\001\n\017UpdateOperation"
      "\022B.google.devtools.containeranalysis.v1a"
      "lpha1.UpdateOperationRequest\032\035.google.lo"
      "ngrunning.Operation\"3\202\323\344\223\002-2(/v1alpha1/{"
      "name=projects/*/operations/*}:\001*\022\275\001\n\rGet"
      "ScanConfig\022@.google.devtools.containeran"
      "alysis.v1alpha1.GetScanConfigRequest\0326.g"
      "oogle.devtools.containeranalysis.v1alpha"
      "1.ScanConfig\"2\202\323\344\223\002,\022*/v1alpha1/{name=pr"
      "ojects/*/scan_configs/*}\022\316\001\n\017ListScanCon"
      "figs\022B.google.devtools.containeranalysis"
      ".v1alpha1.ListScanConfigsRequest\032C.googl"
      "e.devtools.containeranalysis.v1alpha1.Li"
      "stScanConfigsResponse\"2\202\323\344\223\002,\022*/v1alpha1"
      "/{parent=projects/*}/scan_configs\022\320\001\n\020Up"
      "dateScanConfig\022C.google.devtools.contain"
      "eranalysis.v1alpha1.UpdateScanConfigRequ"
      "est\0326.google.devtools.containeranalysis."
      "v1alpha1.ScanConfig\"\?\202\323\344\223\00292*/v1alpha1/{"
      "name=projects/*/scan_configs/*}:\013scan_co"
      "nfigB\214\001\n%com.google.containeranalysis.v1"
      "alpha1P\001Z[google.golang.org/genproto/goo"
      "gleapis/devtools/containeranalysis/v1alp"
      "ha1;containeranalysis\242\002\003GCAb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 11915);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/containeranalysis/v1alpha1/containeranalysis.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fbill_5fof_5fmaterials_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fimage_5fbasis_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::AddDescriptors();
  ::protobuf_google_2fiam_2fv1_2fiam_5fpolicy_2eproto::AddDescriptors();
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto
namespace google {
namespace devtools {
namespace containeranalysis {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* Note_Kind_descriptor() {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_enum_descriptors[0];
}
bool Note_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Note_Kind Note::KIND_UNSPECIFIED;
const Note_Kind Note::PACKAGE_VULNERABILITY;
const Note_Kind Note::BUILD_DETAILS;
const Note_Kind Note::IMAGE_BASIS;
const Note_Kind Note::PACKAGE_MANAGER;
const Note_Kind Note::DEPLOYABLE;
const Note_Kind Note::DISCOVERY;
const Note_Kind Note::ATTESTATION_AUTHORITY;
const Note_Kind Note::Kind_MIN;
const Note_Kind Note::Kind_MAX;
const int Note::Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Deployable_Deployment_Platform_descriptor() {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_enum_descriptors[1];
}
bool Deployable_Deployment_Platform_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Deployable_Deployment_Platform Deployable_Deployment::PLATFORM_UNSPECIFIED;
const Deployable_Deployment_Platform Deployable_Deployment::GKE;
const Deployable_Deployment_Platform Deployable_Deployment::FLEX;
const Deployable_Deployment_Platform Deployable_Deployment::CUSTOM;
const Deployable_Deployment_Platform Deployable_Deployment::Platform_MIN;
const Deployable_Deployment_Platform Deployable_Deployment::Platform_MAX;
const int Deployable_Deployment::Platform_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Discovery_Discovered_AnalysisStatus_descriptor() {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_enum_descriptors[2];
}
bool Discovery_Discovered_AnalysisStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Discovery_Discovered_AnalysisStatus Discovery_Discovered::ANALYSIS_STATUS_UNSPECIFIED;
const Discovery_Discovered_AnalysisStatus Discovery_Discovered::PENDING;
const Discovery_Discovered_AnalysisStatus Discovery_Discovered::SCANNING;
const Discovery_Discovered_AnalysisStatus Discovery_Discovered::FINISHED_SUCCESS;
const Discovery_Discovered_AnalysisStatus Discovery_Discovered::FINISHED_FAILED;
const Discovery_Discovered_AnalysisStatus Discovery_Discovered::UNSUPPORTED_RESOURCE;
const Discovery_Discovered_AnalysisStatus Discovery_Discovered::AnalysisStatus_MIN;
const Discovery_Discovered_AnalysisStatus Discovery_Discovered::AnalysisStatus_MAX;
const int Discovery_Discovered::AnalysisStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BuildSignature_KeyType_descriptor() {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_enum_descriptors[3];
}
bool BuildSignature_KeyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BuildSignature_KeyType BuildSignature::KEY_TYPE_UNSPECIFIED;
const BuildSignature_KeyType BuildSignature::PGP_ASCII_ARMORED;
const BuildSignature_KeyType BuildSignature::PKIX_PEM;
const BuildSignature_KeyType BuildSignature::KeyType_MIN;
const BuildSignature_KeyType BuildSignature::KeyType_MAX;
const int BuildSignature::KeyType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PgpSignedAttestation_ContentType_descriptor() {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_enum_descriptors[4];
}
bool PgpSignedAttestation_ContentType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PgpSignedAttestation_ContentType PgpSignedAttestation::CONTENT_TYPE_UNSPECIFIED;
const PgpSignedAttestation_ContentType PgpSignedAttestation::SIMPLE_SIGNING_JSON;
const PgpSignedAttestation_ContentType PgpSignedAttestation::ContentType_MIN;
const PgpSignedAttestation_ContentType PgpSignedAttestation::ContentType_MAX;
const int PgpSignedAttestation::ContentType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Occurrence::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_Occurrence_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::Resource*>(
      ::google::devtools::containeranalysis::v1alpha1::Resource::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Occurrence_default_instance_.vulnerability_details_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails*>(
      ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Occurrence_default_instance_.build_details_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::BuildDetails*>(
      ::google::devtools::containeranalysis::v1alpha1::BuildDetails::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Occurrence_default_instance_.derived_image_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived*>(
      ::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Occurrence_default_instance_.installation_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::PackageManager_Installation*>(
      ::google::devtools::containeranalysis::v1alpha1::PackageManager_Installation::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Occurrence_default_instance_.deployment_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment*>(
      ::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Occurrence_default_instance_.discovered_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered*>(
      ::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Occurrence_default_instance_.attestation_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation*>(
      ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Occurrence_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Occurrence_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Occurrence::set_allocated_vulnerability_details(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails* vulnerability_details) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (vulnerability_details) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vulnerability_details = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vulnerability_details, submessage_arena);
    }
    set_has_vulnerability_details();
    details_.vulnerability_details_ = vulnerability_details;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Occurrence.vulnerability_details)
}
void Occurrence::clear_vulnerability_details() {
  if (has_vulnerability_details()) {
    delete details_.vulnerability_details_;
    clear_has_details();
  }
}
void Occurrence::set_allocated_build_details(::google::devtools::containeranalysis::v1alpha1::BuildDetails* build_details) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (build_details) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      build_details = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, build_details, submessage_arena);
    }
    set_has_build_details();
    details_.build_details_ = build_details;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Occurrence.build_details)
}
void Occurrence::set_allocated_derived_image(::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived* derived_image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (derived_image) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      derived_image = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, derived_image, submessage_arena);
    }
    set_has_derived_image();
    details_.derived_image_ = derived_image;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Occurrence.derived_image)
}
void Occurrence::clear_derived_image() {
  if (has_derived_image()) {
    delete details_.derived_image_;
    clear_has_details();
  }
}
void Occurrence::set_allocated_installation(::google::devtools::containeranalysis::v1alpha1::PackageManager_Installation* installation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (installation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      installation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, installation, submessage_arena);
    }
    set_has_installation();
    details_.installation_ = installation;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Occurrence.installation)
}
void Occurrence::clear_installation() {
  if (has_installation()) {
    delete details_.installation_;
    clear_has_details();
  }
}
void Occurrence::set_allocated_deployment(::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment* deployment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (deployment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deployment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deployment, submessage_arena);
    }
    set_has_deployment();
    details_.deployment_ = deployment;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Occurrence.deployment)
}
void Occurrence::set_allocated_discovered(::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered* discovered) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (discovered) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      discovered = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, discovered, submessage_arena);
    }
    set_has_discovered();
    details_.discovered_ = discovered;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Occurrence.discovered)
}
void Occurrence::set_allocated_attestation(::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation* attestation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (attestation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attestation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attestation, submessage_arena);
    }
    set_has_attestation();
    details_.attestation_ = attestation;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Occurrence.attestation)
}
void Occurrence::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void Occurrence::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Occurrence::kNameFieldNumber;
const int Occurrence::kResourceUrlFieldNumber;
const int Occurrence::kResourceFieldNumber;
const int Occurrence::kNoteNameFieldNumber;
const int Occurrence::kKindFieldNumber;
const int Occurrence::kVulnerabilityDetailsFieldNumber;
const int Occurrence::kBuildDetailsFieldNumber;
const int Occurrence::kDerivedImageFieldNumber;
const int Occurrence::kInstallationFieldNumber;
const int Occurrence::kDeploymentFieldNumber;
const int Occurrence::kDiscoveredFieldNumber;
const int Occurrence::kAttestationFieldNumber;
const int Occurrence::kRemediationFieldNumber;
const int Occurrence::kCreateTimeFieldNumber;
const int Occurrence::kUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Occurrence::Occurrence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Occurrence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.Occurrence)
}
Occurrence::Occurrence(const Occurrence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_url().size() > 0) {
    resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_url_);
  }
  note_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.note_name().size() > 0) {
    note_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.note_name_);
  }
  remediation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remediation().size() > 0) {
    remediation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remediation_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = NULL;
  }
  if (from.has_resource()) {
    resource_ = new ::google::devtools::containeranalysis::v1alpha1::Resource(*from.resource_);
  } else {
    resource_ = NULL;
  }
  kind_ = from.kind_;
  clear_has_details();
  switch (from.details_case()) {
    case kVulnerabilityDetails: {
      mutable_vulnerability_details()->::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails::MergeFrom(from.vulnerability_details());
      break;
    }
    case kBuildDetails: {
      mutable_build_details()->::google::devtools::containeranalysis::v1alpha1::BuildDetails::MergeFrom(from.build_details());
      break;
    }
    case kDerivedImage: {
      mutable_derived_image()->::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived::MergeFrom(from.derived_image());
      break;
    }
    case kInstallation: {
      mutable_installation()->::google::devtools::containeranalysis::v1alpha1::PackageManager_Installation::MergeFrom(from.installation());
      break;
    }
    case kDeployment: {
      mutable_deployment()->::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment::MergeFrom(from.deployment());
      break;
    }
    case kDiscovered: {
      mutable_discovered()->::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered::MergeFrom(from.discovered());
      break;
    }
    case kAttestation: {
      mutable_attestation()->::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation::MergeFrom(from.attestation());
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.Occurrence)
}

void Occurrence::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remediation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(kind_));
  clear_has_details();
}

Occurrence::~Occurrence() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.Occurrence)
  SharedDtor();
}

void Occurrence::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remediation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
  if (this != internal_default_instance()) delete resource_;
  if (has_details()) {
    clear_details();
  }
}

void Occurrence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Occurrence::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Occurrence& Occurrence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Occurrence.base);
  return *internal_default_instance();
}


void Occurrence::clear_details() {
// @@protoc_insertion_point(one_of_clear_start:google.devtools.containeranalysis.v1alpha1.Occurrence)
  switch (details_case()) {
    case kVulnerabilityDetails: {
      delete details_.vulnerability_details_;
      break;
    }
    case kBuildDetails: {
      delete details_.build_details_;
      break;
    }
    case kDerivedImage: {
      delete details_.derived_image_;
      break;
    }
    case kInstallation: {
      delete details_.installation_;
      break;
    }
    case kDeployment: {
      delete details_.deployment_;
      break;
    }
    case kDiscovered: {
      delete details_.discovered_;
      break;
    }
    case kAttestation: {
      delete details_.attestation_;
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAILS_NOT_SET;
}


void Occurrence::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.Occurrence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remediation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  kind_ = 0;
  clear_details();
  _internal_metadata_.Clear();
}

bool Occurrence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.Occurrence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Occurrence.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resource_url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_url().data(), static_cast<int>(this->resource_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Occurrence.resource_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string note_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_note_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->note_name().data(), static_cast<int>(this->note_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Occurrence.note_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remediation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remediation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remediation().data(), static_cast<int>(this->remediation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Occurrence.remediation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Note.Kind kind = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::google::devtools::containeranalysis::v1alpha1::Note_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.BuildDetails build_details = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_build_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails vulnerability_details = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vulnerability_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.DockerImage.Derived derived_image = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_derived_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.PackageManager.Installation installation = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_installation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Deployable.Deployment deployment = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deployment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Discovery.Discovered discovered = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_discovered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation attestation = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attestation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Resource resource = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.Occurrence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.Occurrence)
  return false;
#undef DO_
}

void Occurrence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.Occurrence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Occurrence.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string resource_url = 2;
  if (this->resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_url().data(), static_cast<int>(this->resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Occurrence.resource_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resource_url(), output);
  }

  // string note_name = 3;
  if (this->note_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->note_name().data(), static_cast<int>(this->note_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Occurrence.note_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->note_name(), output);
  }

  // string remediation = 5;
  if (this->remediation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remediation().data(), static_cast<int>(this->remediation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Occurrence.remediation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->remediation(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Note.Kind kind = 6;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->kind(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.BuildDetails build_details = 7;
  if (has_build_details()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_build_details(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails vulnerability_details = 8;
  if (has_vulnerability_details()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_vulnerability_details(), output);
  }

  // .google.protobuf.Timestamp create_time = 9;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_create_time(), output);
  }

  // .google.protobuf.Timestamp update_time = 10;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_update_time(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.DockerImage.Derived derived_image = 11;
  if (has_derived_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_derived_image(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.PackageManager.Installation installation = 12;
  if (has_installation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_installation(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Deployable.Deployment deployment = 14;
  if (has_deployment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_deployment(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Discovery.Discovered discovered = 15;
  if (has_discovered()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_discovered(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation attestation = 16;
  if (has_attestation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_attestation(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Resource resource = 17;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_resource(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.Occurrence)
}

::google::protobuf::uint8* Occurrence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.Occurrence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Occurrence.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string resource_url = 2;
  if (this->resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_url().data(), static_cast<int>(this->resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Occurrence.resource_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resource_url(), target);
  }

  // string note_name = 3;
  if (this->note_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->note_name().data(), static_cast<int>(this->note_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Occurrence.note_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->note_name(), target);
  }

  // string remediation = 5;
  if (this->remediation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remediation().data(), static_cast<int>(this->remediation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Occurrence.remediation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->remediation(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Note.Kind kind = 6;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->kind(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.BuildDetails build_details = 7;
  if (has_build_details()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_build_details(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails vulnerability_details = 8;
  if (has_vulnerability_details()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_vulnerability_details(), deterministic, target);
  }

  // .google.protobuf.Timestamp create_time = 9;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_create_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp update_time = 10;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_update_time(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.DockerImage.Derived derived_image = 11;
  if (has_derived_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_derived_image(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.PackageManager.Installation installation = 12;
  if (has_installation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_installation(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Deployable.Deployment deployment = 14;
  if (has_deployment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_deployment(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Discovery.Discovered discovered = 15;
  if (has_discovered()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_discovered(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation attestation = 16;
  if (has_attestation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_attestation(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Resource resource = 17;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_resource(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.Occurrence)
  return target;
}

size_t Occurrence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.Occurrence)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string resource_url = 2;
  if (this->resource_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_url());
  }

  // string note_name = 3;
  if (this->note_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->note_name());
  }

  // string remediation = 5;
  if (this->remediation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remediation());
  }

  // .google.protobuf.Timestamp create_time = 9;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 10;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // .google.devtools.containeranalysis.v1alpha1.Resource resource = 17;
  if (this->has_resource()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resource_);
  }

  // .google.devtools.containeranalysis.v1alpha1.Note.Kind kind = 6;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (details_case()) {
    // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails vulnerability_details = 8;
    case kVulnerabilityDetails: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.vulnerability_details_);
      break;
    }
    // .google.devtools.containeranalysis.v1alpha1.BuildDetails build_details = 7;
    case kBuildDetails: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.build_details_);
      break;
    }
    // .google.devtools.containeranalysis.v1alpha1.DockerImage.Derived derived_image = 11;
    case kDerivedImage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.derived_image_);
      break;
    }
    // .google.devtools.containeranalysis.v1alpha1.PackageManager.Installation installation = 12;
    case kInstallation: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.installation_);
      break;
    }
    // .google.devtools.containeranalysis.v1alpha1.Deployable.Deployment deployment = 14;
    case kDeployment: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.deployment_);
      break;
    }
    // .google.devtools.containeranalysis.v1alpha1.Discovery.Discovered discovered = 15;
    case kDiscovered: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.discovered_);
      break;
    }
    // .google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation attestation = 16;
    case kAttestation: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.attestation_);
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Occurrence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.Occurrence)
  GOOGLE_DCHECK_NE(&from, this);
  const Occurrence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Occurrence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.Occurrence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.Occurrence)
    MergeFrom(*source);
  }
}

void Occurrence::MergeFrom(const Occurrence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.Occurrence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.resource_url().size() > 0) {

    resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_url_);
  }
  if (from.note_name().size() > 0) {

    note_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.note_name_);
  }
  if (from.remediation().size() > 0) {

    remediation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remediation_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.has_resource()) {
    mutable_resource()->::google::devtools::containeranalysis::v1alpha1::Resource::MergeFrom(from.resource());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.details_case()) {
    case kVulnerabilityDetails: {
      mutable_vulnerability_details()->::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails::MergeFrom(from.vulnerability_details());
      break;
    }
    case kBuildDetails: {
      mutable_build_details()->::google::devtools::containeranalysis::v1alpha1::BuildDetails::MergeFrom(from.build_details());
      break;
    }
    case kDerivedImage: {
      mutable_derived_image()->::google::devtools::containeranalysis::v1alpha1::DockerImage_Derived::MergeFrom(from.derived_image());
      break;
    }
    case kInstallation: {
      mutable_installation()->::google::devtools::containeranalysis::v1alpha1::PackageManager_Installation::MergeFrom(from.installation());
      break;
    }
    case kDeployment: {
      mutable_deployment()->::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment::MergeFrom(from.deployment());
      break;
    }
    case kDiscovered: {
      mutable_discovered()->::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered::MergeFrom(from.discovered());
      break;
    }
    case kAttestation: {
      mutable_attestation()->::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation::MergeFrom(from.attestation());
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
}

void Occurrence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.Occurrence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Occurrence::CopyFrom(const Occurrence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.Occurrence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Occurrence::IsInitialized() const {
  return true;
}

void Occurrence::Swap(Occurrence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Occurrence::InternalSwap(Occurrence* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  resource_url_.Swap(&other->resource_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  note_name_.Swap(&other->note_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remediation_.Swap(&other->remediation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(resource_, other->resource_);
  swap(kind_, other->kind_);
  swap(details_, other->details_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Occurrence::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Resource::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_Resource_default_instance_._instance.get_mutable()->content_hash_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::Hash*>(
      ::google::devtools::containeranalysis::v1alpha1::Hash::internal_default_instance());
}
void Resource::clear_content_hash() {
  if (GetArenaNoVirtual() == NULL && content_hash_ != NULL) {
    delete content_hash_;
  }
  content_hash_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Resource::kNameFieldNumber;
const int Resource::kUriFieldNumber;
const int Resource::kContentHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Resource::Resource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Resource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.Resource)
}
Resource::Resource(const Resource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.has_content_hash()) {
    content_hash_ = new ::google::devtools::containeranalysis::v1alpha1::Hash(*from.content_hash_);
  } else {
    content_hash_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.Resource)
}

void Resource::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_hash_ = NULL;
}

Resource::~Resource() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.Resource)
  SharedDtor();
}

void Resource::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete content_hash_;
}

void Resource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Resource::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Resource& Resource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Resource.base);
  return *internal_default_instance();
}


void Resource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && content_hash_ != NULL) {
    delete content_hash_;
  }
  content_hash_ = NULL;
  _internal_metadata_.Clear();
}

bool Resource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.Resource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Resource.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Resource.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Hash content_hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_content_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.Resource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.Resource)
  return false;
#undef DO_
}

void Resource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Resource.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Resource.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uri(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Hash content_hash = 3;
  if (this->has_content_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_content_hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.Resource)
}

::google::protobuf::uint8* Resource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Resource.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Resource.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uri(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Hash content_hash = 3;
  if (this->has_content_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_content_hash(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.Resource)
  return target;
}

size_t Resource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.Resource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // .google.devtools.containeranalysis.v1alpha1.Hash content_hash = 3;
  if (this->has_content_hash()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *content_hash_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Resource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.Resource)
  GOOGLE_DCHECK_NE(&from, this);
  const Resource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Resource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.Resource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.Resource)
    MergeFrom(*source);
  }
}

void Resource::MergeFrom(const Resource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.Resource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.has_content_hash()) {
    mutable_content_hash()->::google::devtools::containeranalysis::v1alpha1::Hash::MergeFrom(from.content_hash());
  }
}

void Resource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Resource::CopyFrom(const Resource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Resource::IsInitialized() const {
  return true;
}

void Resource::Swap(Resource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Resource::InternalSwap(Resource* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(content_hash_, other->content_hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Resource::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Note_RelatedUrl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Note_RelatedUrl::kUrlFieldNumber;
const int Note_RelatedUrl::kLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Note_RelatedUrl::Note_RelatedUrl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Note_RelatedUrl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
}
Note_RelatedUrl::Note_RelatedUrl(const Note_RelatedUrl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
}

void Note_RelatedUrl::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Note_RelatedUrl::~Note_RelatedUrl() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
  SharedDtor();
}

void Note_RelatedUrl::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Note_RelatedUrl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Note_RelatedUrl::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Note_RelatedUrl& Note_RelatedUrl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Note_RelatedUrl.base);
  return *internal_default_instance();
}


void Note_RelatedUrl::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Note_RelatedUrl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
  return false;
#undef DO_
}

void Note_RelatedUrl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
}

::google::protobuf::uint8* Note_RelatedUrl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
  return target;
}

size_t Note_RelatedUrl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Note_RelatedUrl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
  GOOGLE_DCHECK_NE(&from, this);
  const Note_RelatedUrl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Note_RelatedUrl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
    MergeFrom(*source);
  }
}

void Note_RelatedUrl::MergeFrom(const Note_RelatedUrl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
}

void Note_RelatedUrl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Note_RelatedUrl::CopyFrom(const Note_RelatedUrl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Note_RelatedUrl::IsInitialized() const {
  return true;
}

void Note_RelatedUrl::Swap(Note_RelatedUrl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Note_RelatedUrl::InternalSwap(Note_RelatedUrl* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Note_RelatedUrl::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Note::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_Note_default_instance_.vulnerability_type_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType*>(
      ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Note_default_instance_.build_type_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::BuildType*>(
      ::google::devtools::containeranalysis::v1alpha1::BuildType::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Note_default_instance_.base_image_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis*>(
      ::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Note_default_instance_.package_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::PackageManager_Package*>(
      ::google::devtools::containeranalysis::v1alpha1::PackageManager_Package::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Note_default_instance_.deployable_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::Deployable*>(
      ::google::devtools::containeranalysis::v1alpha1::Deployable::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Note_default_instance_.discovery_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::Discovery*>(
      ::google::devtools::containeranalysis::v1alpha1::Discovery::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Note_default_instance_.attestation_authority_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority*>(
      ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Note_default_instance_._instance.get_mutable()->expiration_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Note_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Note_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Note::set_allocated_vulnerability_type(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType* vulnerability_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_note_type();
  if (vulnerability_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vulnerability_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vulnerability_type, submessage_arena);
    }
    set_has_vulnerability_type();
    note_type_.vulnerability_type_ = vulnerability_type;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Note.vulnerability_type)
}
void Note::clear_vulnerability_type() {
  if (has_vulnerability_type()) {
    delete note_type_.vulnerability_type_;
    clear_has_note_type();
  }
}
void Note::set_allocated_build_type(::google::devtools::containeranalysis::v1alpha1::BuildType* build_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_note_type();
  if (build_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      build_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, build_type, submessage_arena);
    }
    set_has_build_type();
    note_type_.build_type_ = build_type;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Note.build_type)
}
void Note::set_allocated_base_image(::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis* base_image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_note_type();
  if (base_image) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base_image = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base_image, submessage_arena);
    }
    set_has_base_image();
    note_type_.base_image_ = base_image;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Note.base_image)
}
void Note::clear_base_image() {
  if (has_base_image()) {
    delete note_type_.base_image_;
    clear_has_note_type();
  }
}
void Note::set_allocated_package(::google::devtools::containeranalysis::v1alpha1::PackageManager_Package* package) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_note_type();
  if (package) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      package = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, package, submessage_arena);
    }
    set_has_package();
    note_type_.package_ = package;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Note.package)
}
void Note::clear_package() {
  if (has_package()) {
    delete note_type_.package_;
    clear_has_note_type();
  }
}
void Note::set_allocated_deployable(::google::devtools::containeranalysis::v1alpha1::Deployable* deployable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_note_type();
  if (deployable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deployable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deployable, submessage_arena);
    }
    set_has_deployable();
    note_type_.deployable_ = deployable;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Note.deployable)
}
void Note::set_allocated_discovery(::google::devtools::containeranalysis::v1alpha1::Discovery* discovery) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_note_type();
  if (discovery) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      discovery = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, discovery, submessage_arena);
    }
    set_has_discovery();
    note_type_.discovery_ = discovery;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Note.discovery)
}
void Note::set_allocated_attestation_authority(::google::devtools::containeranalysis::v1alpha1::AttestationAuthority* attestation_authority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_note_type();
  if (attestation_authority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attestation_authority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attestation_authority, submessage_arena);
    }
    set_has_attestation_authority();
    note_type_.attestation_authority_ = attestation_authority;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Note.attestation_authority)
}
void Note::clear_expiration_time() {
  if (GetArenaNoVirtual() == NULL && expiration_time_ != NULL) {
    delete expiration_time_;
  }
  expiration_time_ = NULL;
}
void Note::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void Note::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Note::kNameFieldNumber;
const int Note::kShortDescriptionFieldNumber;
const int Note::kLongDescriptionFieldNumber;
const int Note::kKindFieldNumber;
const int Note::kVulnerabilityTypeFieldNumber;
const int Note::kBuildTypeFieldNumber;
const int Note::kBaseImageFieldNumber;
const int Note::kPackageFieldNumber;
const int Note::kDeployableFieldNumber;
const int Note::kDiscoveryFieldNumber;
const int Note::kAttestationAuthorityFieldNumber;
const int Note::kRelatedUrlFieldNumber;
const int Note::kExpirationTimeFieldNumber;
const int Note::kCreateTimeFieldNumber;
const int Note::kUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Note::Note()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Note.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.Note)
}
Note::Note(const Note& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      related_url_(from.related_url_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  short_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.short_description().size() > 0) {
    short_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_description_);
  }
  long_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.long_description().size() > 0) {
    long_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.long_description_);
  }
  if (from.has_expiration_time()) {
    expiration_time_ = new ::google::protobuf::Timestamp(*from.expiration_time_);
  } else {
    expiration_time_ = NULL;
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = NULL;
  }
  kind_ = from.kind_;
  clear_has_note_type();
  switch (from.note_type_case()) {
    case kVulnerabilityType: {
      mutable_vulnerability_type()->::google::devtools::containeranalysis::v1alpha1::VulnerabilityType::MergeFrom(from.vulnerability_type());
      break;
    }
    case kBuildType: {
      mutable_build_type()->::google::devtools::containeranalysis::v1alpha1::BuildType::MergeFrom(from.build_type());
      break;
    }
    case kBaseImage: {
      mutable_base_image()->::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis::MergeFrom(from.base_image());
      break;
    }
    case kPackage: {
      mutable_package()->::google::devtools::containeranalysis::v1alpha1::PackageManager_Package::MergeFrom(from.package());
      break;
    }
    case kDeployable: {
      mutable_deployable()->::google::devtools::containeranalysis::v1alpha1::Deployable::MergeFrom(from.deployable());
      break;
    }
    case kDiscovery: {
      mutable_discovery()->::google::devtools::containeranalysis::v1alpha1::Discovery::MergeFrom(from.discovery());
      break;
    }
    case kAttestationAuthority: {
      mutable_attestation_authority()->::google::devtools::containeranalysis::v1alpha1::AttestationAuthority::MergeFrom(from.attestation_authority());
      break;
    }
    case NOTE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.Note)
}

void Note::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&expiration_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&expiration_time_)) + sizeof(kind_));
  clear_has_note_type();
}

Note::~Note() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.Note)
  SharedDtor();
}

void Note::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expiration_time_;
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
  if (has_note_type()) {
    clear_note_type();
  }
}

void Note::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Note::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Note& Note::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Note.base);
  return *internal_default_instance();
}


void Note::clear_note_type() {
// @@protoc_insertion_point(one_of_clear_start:google.devtools.containeranalysis.v1alpha1.Note)
  switch (note_type_case()) {
    case kVulnerabilityType: {
      delete note_type_.vulnerability_type_;
      break;
    }
    case kBuildType: {
      delete note_type_.build_type_;
      break;
    }
    case kBaseImage: {
      delete note_type_.base_image_;
      break;
    }
    case kPackage: {
      delete note_type_.package_;
      break;
    }
    case kDeployable: {
      delete note_type_.deployable_;
      break;
    }
    case kDiscovery: {
      delete note_type_.discovery_;
      break;
    }
    case kAttestationAuthority: {
      delete note_type_.attestation_authority_;
      break;
    }
    case NOTE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = NOTE_TYPE_NOT_SET;
}


void Note::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.Note)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  related_url_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  long_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && expiration_time_ != NULL) {
    delete expiration_time_;
  }
  expiration_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
  kind_ = 0;
  clear_note_type();
  _internal_metadata_.Clear();
}

bool Note::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.Note)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Note.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string short_description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_short_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->short_description().data(), static_cast<int>(this->short_description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Note.short_description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string long_description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_long_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->long_description().data(), static_cast<int>(this->long_description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Note.long_description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType vulnerability_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vulnerability_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl related_url = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_related_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.BuildType build_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_build_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Note.Kind kind = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::google::devtools::containeranalysis::v1alpha1::Note_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expiration_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expiration_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.DockerImage.Basis base_image = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.PackageManager.Package package = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_package()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Deployable deployable = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deployable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Discovery discovery = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_discovery()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.AttestationAuthority attestation_authority = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attestation_authority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.Note)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.Note)
  return false;
#undef DO_
}

void Note::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.Note)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Note.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string short_description = 3;
  if (this->short_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->short_description().data(), static_cast<int>(this->short_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Note.short_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->short_description(), output);
  }

  // string long_description = 4;
  if (this->long_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->long_description().data(), static_cast<int>(this->long_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Note.long_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->long_description(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType vulnerability_type = 6;
  if (has_vulnerability_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_vulnerability_type(), output);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl related_url = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->related_url_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->related_url(static_cast<int>(i)),
      output);
  }

  // .google.devtools.containeranalysis.v1alpha1.BuildType build_type = 8;
  if (has_build_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_build_type(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Note.Kind kind = 9;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->kind(), output);
  }

  // .google.protobuf.Timestamp expiration_time = 10;
  if (this->has_expiration_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_expiration_time(), output);
  }

  // .google.protobuf.Timestamp create_time = 11;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_create_time(), output);
  }

  // .google.protobuf.Timestamp update_time = 12;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_update_time(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.DockerImage.Basis base_image = 13;
  if (has_base_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_base_image(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.PackageManager.Package package = 14;
  if (has_package()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_package(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Deployable deployable = 17;
  if (has_deployable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_deployable(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Discovery discovery = 18;
  if (has_discovery()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_discovery(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.AttestationAuthority attestation_authority = 19;
  if (has_attestation_authority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_attestation_authority(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.Note)
}

::google::protobuf::uint8* Note::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.Note)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Note.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string short_description = 3;
  if (this->short_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->short_description().data(), static_cast<int>(this->short_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Note.short_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->short_description(), target);
  }

  // string long_description = 4;
  if (this->long_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->long_description().data(), static_cast<int>(this->long_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Note.long_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->long_description(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType vulnerability_type = 6;
  if (has_vulnerability_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_vulnerability_type(), deterministic, target);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl related_url = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->related_url_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->related_url(static_cast<int>(i)), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.BuildType build_type = 8;
  if (has_build_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_build_type(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Note.Kind kind = 9;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->kind(), target);
  }

  // .google.protobuf.Timestamp expiration_time = 10;
  if (this->has_expiration_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_expiration_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp create_time = 11;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_create_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp update_time = 12;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_update_time(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.DockerImage.Basis base_image = 13;
  if (has_base_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_base_image(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.PackageManager.Package package = 14;
  if (has_package()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_package(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Deployable deployable = 17;
  if (has_deployable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_deployable(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Discovery discovery = 18;
  if (has_discovery()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_discovery(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.AttestationAuthority attestation_authority = 19;
  if (has_attestation_authority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_attestation_authority(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.Note)
  return target;
}

size_t Note::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.Note)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.containeranalysis.v1alpha1.Note.RelatedUrl related_url = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->related_url_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->related_url(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string short_description = 3;
  if (this->short_description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->short_description());
  }

  // string long_description = 4;
  if (this->long_description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->long_description());
  }

  // .google.protobuf.Timestamp expiration_time = 10;
  if (this->has_expiration_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expiration_time_);
  }

  // .google.protobuf.Timestamp create_time = 11;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 12;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // .google.devtools.containeranalysis.v1alpha1.Note.Kind kind = 9;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (note_type_case()) {
    // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType vulnerability_type = 6;
    case kVulnerabilityType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *note_type_.vulnerability_type_);
      break;
    }
    // .google.devtools.containeranalysis.v1alpha1.BuildType build_type = 8;
    case kBuildType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *note_type_.build_type_);
      break;
    }
    // .google.devtools.containeranalysis.v1alpha1.DockerImage.Basis base_image = 13;
    case kBaseImage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *note_type_.base_image_);
      break;
    }
    // .google.devtools.containeranalysis.v1alpha1.PackageManager.Package package = 14;
    case kPackage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *note_type_.package_);
      break;
    }
    // .google.devtools.containeranalysis.v1alpha1.Deployable deployable = 17;
    case kDeployable: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *note_type_.deployable_);
      break;
    }
    // .google.devtools.containeranalysis.v1alpha1.Discovery discovery = 18;
    case kDiscovery: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *note_type_.discovery_);
      break;
    }
    // .google.devtools.containeranalysis.v1alpha1.AttestationAuthority attestation_authority = 19;
    case kAttestationAuthority: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *note_type_.attestation_authority_);
      break;
    }
    case NOTE_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Note::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.Note)
  GOOGLE_DCHECK_NE(&from, this);
  const Note* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Note>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.Note)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.Note)
    MergeFrom(*source);
  }
}

void Note::MergeFrom(const Note& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.Note)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  related_url_.MergeFrom(from.related_url_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.short_description().size() > 0) {

    short_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_description_);
  }
  if (from.long_description().size() > 0) {

    long_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.long_description_);
  }
  if (from.has_expiration_time()) {
    mutable_expiration_time()->::google::protobuf::Timestamp::MergeFrom(from.expiration_time());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.note_type_case()) {
    case kVulnerabilityType: {
      mutable_vulnerability_type()->::google::devtools::containeranalysis::v1alpha1::VulnerabilityType::MergeFrom(from.vulnerability_type());
      break;
    }
    case kBuildType: {
      mutable_build_type()->::google::devtools::containeranalysis::v1alpha1::BuildType::MergeFrom(from.build_type());
      break;
    }
    case kBaseImage: {
      mutable_base_image()->::google::devtools::containeranalysis::v1alpha1::DockerImage_Basis::MergeFrom(from.base_image());
      break;
    }
    case kPackage: {
      mutable_package()->::google::devtools::containeranalysis::v1alpha1::PackageManager_Package::MergeFrom(from.package());
      break;
    }
    case kDeployable: {
      mutable_deployable()->::google::devtools::containeranalysis::v1alpha1::Deployable::MergeFrom(from.deployable());
      break;
    }
    case kDiscovery: {
      mutable_discovery()->::google::devtools::containeranalysis::v1alpha1::Discovery::MergeFrom(from.discovery());
      break;
    }
    case kAttestationAuthority: {
      mutable_attestation_authority()->::google::devtools::containeranalysis::v1alpha1::AttestationAuthority::MergeFrom(from.attestation_authority());
      break;
    }
    case NOTE_TYPE_NOT_SET: {
      break;
    }
  }
}

void Note::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.Note)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Note::CopyFrom(const Note& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.Note)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Note::IsInitialized() const {
  return true;
}

void Note::Swap(Note* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Note::InternalSwap(Note* other) {
  using std::swap;
  CastToBase(&related_url_)->InternalSwap(CastToBase(&other->related_url_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  short_description_.Swap(&other->short_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  long_description_.Swap(&other->long_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expiration_time_, other->expiration_time_);
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(kind_, other->kind_);
  swap(note_type_, other->note_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Note::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Deployable_Deployment::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_Deployable_Deployment_default_instance_._instance.get_mutable()->deploy_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Deployable_Deployment_default_instance_._instance.get_mutable()->undeploy_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Deployable_Deployment::clear_deploy_time() {
  if (GetArenaNoVirtual() == NULL && deploy_time_ != NULL) {
    delete deploy_time_;
  }
  deploy_time_ = NULL;
}
void Deployable_Deployment::clear_undeploy_time() {
  if (GetArenaNoVirtual() == NULL && undeploy_time_ != NULL) {
    delete undeploy_time_;
  }
  undeploy_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Deployable_Deployment::kUserEmailFieldNumber;
const int Deployable_Deployment::kDeployTimeFieldNumber;
const int Deployable_Deployment::kUndeployTimeFieldNumber;
const int Deployable_Deployment::kConfigFieldNumber;
const int Deployable_Deployment::kAddressFieldNumber;
const int Deployable_Deployment::kResourceUriFieldNumber;
const int Deployable_Deployment::kPlatformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Deployable_Deployment::Deployable_Deployment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Deployable_Deployment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
}
Deployable_Deployment::Deployable_Deployment(const Deployable_Deployment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      resource_uri_(from.resource_uri_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_email().size() > 0) {
    user_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_email_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.config().size() > 0) {
    config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_);
  }
  if (from.has_deploy_time()) {
    deploy_time_ = new ::google::protobuf::Timestamp(*from.deploy_time_);
  } else {
    deploy_time_ = NULL;
  }
  if (from.has_undeploy_time()) {
    undeploy_time_ = new ::google::protobuf::Timestamp(*from.undeploy_time_);
  } else {
    undeploy_time_ = NULL;
  }
  platform_ = from.platform_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
}

void Deployable_Deployment::SharedCtor() {
  user_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&deploy_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&platform_) -
      reinterpret_cast<char*>(&deploy_time_)) + sizeof(platform_));
}

Deployable_Deployment::~Deployable_Deployment() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
  SharedDtor();
}

void Deployable_Deployment::SharedDtor() {
  user_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete deploy_time_;
  if (this != internal_default_instance()) delete undeploy_time_;
}

void Deployable_Deployment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Deployable_Deployment::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Deployable_Deployment& Deployable_Deployment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Deployable_Deployment.base);
  return *internal_default_instance();
}


void Deployable_Deployment::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_uri_.Clear();
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && deploy_time_ != NULL) {
    delete deploy_time_;
  }
  deploy_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && undeploy_time_ != NULL) {
    delete undeploy_time_;
  }
  undeploy_time_ = NULL;
  platform_ = 0;
  _internal_metadata_.Clear();
}

bool Deployable_Deployment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_email().data(), static_cast<int>(this->user_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.user_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp deploy_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deploy_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp undeploy_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_undeploy_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string resource_uri = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_resource_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_uri(this->resource_uri_size() - 1).data(),
            static_cast<int>(this->resource_uri(this->resource_uri_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.resource_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.Platform platform = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_platform(static_cast< ::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment_Platform >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string config = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->config().data(), static_cast<int>(this->config().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.config"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
  return false;
#undef DO_
}

void Deployable_Deployment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_email = 1;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), static_cast<int>(this->user_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.user_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_email(), output);
  }

  // .google.protobuf.Timestamp deploy_time = 2;
  if (this->has_deploy_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_deploy_time(), output);
  }

  // .google.protobuf.Timestamp undeploy_time = 3;
  if (this->has_undeploy_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_undeploy_time(), output);
  }

  // string address = 5;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->address(), output);
  }

  // repeated string resource_uri = 6;
  for (int i = 0, n = this->resource_uri_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_uri(i).data(), static_cast<int>(this->resource_uri(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.resource_uri");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->resource_uri(i), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.Platform platform = 7;
  if (this->platform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->platform(), output);
  }

  // string config = 8;
  if (this->config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config().data(), static_cast<int>(this->config().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.config");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
}

::google::protobuf::uint8* Deployable_Deployment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_email = 1;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), static_cast<int>(this->user_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.user_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_email(), target);
  }

  // .google.protobuf.Timestamp deploy_time = 2;
  if (this->has_deploy_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_deploy_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp undeploy_time = 3;
  if (this->has_undeploy_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_undeploy_time(), deterministic, target);
  }

  // string address = 5;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->address(), target);
  }

  // repeated string resource_uri = 6;
  for (int i = 0, n = this->resource_uri_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_uri(i).data(), static_cast<int>(this->resource_uri(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.resource_uri");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->resource_uri(i), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.Platform platform = 7;
  if (this->platform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->platform(), target);
  }

  // string config = 8;
  if (this->config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config().data(), static_cast<int>(this->config().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.config");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->config(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
  return target;
}

size_t Deployable_Deployment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string resource_uri = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resource_uri_size());
  for (int i = 0, n = this->resource_uri_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->resource_uri(i));
  }

  // string user_email = 1;
  if (this->user_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_email());
  }

  // string address = 5;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string config = 8;
  if (this->config().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->config());
  }

  // .google.protobuf.Timestamp deploy_time = 2;
  if (this->has_deploy_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *deploy_time_);
  }

  // .google.protobuf.Timestamp undeploy_time = 3;
  if (this->has_undeploy_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *undeploy_time_);
  }

  // .google.devtools.containeranalysis.v1alpha1.Deployable.Deployment.Platform platform = 7;
  if (this->platform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Deployable_Deployment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
  GOOGLE_DCHECK_NE(&from, this);
  const Deployable_Deployment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Deployable_Deployment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
    MergeFrom(*source);
  }
}

void Deployable_Deployment::MergeFrom(const Deployable_Deployment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_uri_.MergeFrom(from.resource_uri_);
  if (from.user_email().size() > 0) {

    user_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_email_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.config().size() > 0) {

    config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_);
  }
  if (from.has_deploy_time()) {
    mutable_deploy_time()->::google::protobuf::Timestamp::MergeFrom(from.deploy_time());
  }
  if (from.has_undeploy_time()) {
    mutable_undeploy_time()->::google::protobuf::Timestamp::MergeFrom(from.undeploy_time());
  }
  if (from.platform() != 0) {
    set_platform(from.platform());
  }
}

void Deployable_Deployment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deployable_Deployment::CopyFrom(const Deployable_Deployment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.Deployable.Deployment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deployable_Deployment::IsInitialized() const {
  return true;
}

void Deployable_Deployment::Swap(Deployable_Deployment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Deployable_Deployment::InternalSwap(Deployable_Deployment* other) {
  using std::swap;
  resource_uri_.InternalSwap(CastToBase(&other->resource_uri_));
  user_email_.Swap(&other->user_email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  config_.Swap(&other->config_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(deploy_time_, other->deploy_time_);
  swap(undeploy_time_, other->undeploy_time_);
  swap(platform_, other->platform_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Deployable_Deployment::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Deployable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Deployable::kResourceUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Deployable::Deployable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Deployable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.Deployable)
}
Deployable::Deployable(const Deployable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      resource_uri_(from.resource_uri_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.Deployable)
}

void Deployable::SharedCtor() {
}

Deployable::~Deployable() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.Deployable)
  SharedDtor();
}

void Deployable::SharedDtor() {
}

void Deployable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Deployable::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Deployable& Deployable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Deployable.base);
  return *internal_default_instance();
}


void Deployable::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.Deployable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_uri_.Clear();
  _internal_metadata_.Clear();
}

bool Deployable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.Deployable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string resource_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_resource_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_uri(this->resource_uri_size() - 1).data(),
            static_cast<int>(this->resource_uri(this->resource_uri_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Deployable.resource_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.Deployable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.Deployable)
  return false;
#undef DO_
}

void Deployable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.Deployable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string resource_uri = 1;
  for (int i = 0, n = this->resource_uri_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_uri(i).data(), static_cast<int>(this->resource_uri(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Deployable.resource_uri");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->resource_uri(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.Deployable)
}

::google::protobuf::uint8* Deployable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.Deployable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string resource_uri = 1;
  for (int i = 0, n = this->resource_uri_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_uri(i).data(), static_cast<int>(this->resource_uri(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Deployable.resource_uri");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->resource_uri(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.Deployable)
  return target;
}

size_t Deployable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.Deployable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string resource_uri = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resource_uri_size());
  for (int i = 0, n = this->resource_uri_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->resource_uri(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Deployable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.Deployable)
  GOOGLE_DCHECK_NE(&from, this);
  const Deployable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Deployable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.Deployable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.Deployable)
    MergeFrom(*source);
  }
}

void Deployable::MergeFrom(const Deployable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.Deployable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_uri_.MergeFrom(from.resource_uri_);
}

void Deployable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.Deployable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deployable::CopyFrom(const Deployable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.Deployable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deployable::IsInitialized() const {
  return true;
}

void Deployable::Swap(Deployable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Deployable::InternalSwap(Deployable* other) {
  using std::swap;
  resource_uri_.InternalSwap(CastToBase(&other->resource_uri_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Deployable::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Discovery_Discovered::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_Discovery_Discovered_default_instance_._instance.get_mutable()->operation_ = const_cast< ::google::longrunning::Operation*>(
      ::google::longrunning::Operation::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Discovery_Discovered_default_instance_._instance.get_mutable()->analysis_status_error_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void Discovery_Discovered::clear_operation() {
  if (GetArenaNoVirtual() == NULL && operation_ != NULL) {
    delete operation_;
  }
  operation_ = NULL;
}
void Discovery_Discovered::clear_analysis_status_error() {
  if (GetArenaNoVirtual() == NULL && analysis_status_error_ != NULL) {
    delete analysis_status_error_;
  }
  analysis_status_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Discovery_Discovered::kOperationFieldNumber;
const int Discovery_Discovered::kAnalysisStatusFieldNumber;
const int Discovery_Discovered::kAnalysisStatusErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Discovery_Discovered::Discovery_Discovered()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Discovery_Discovered.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
}
Discovery_Discovered::Discovery_Discovered(const Discovery_Discovered& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_operation()) {
    operation_ = new ::google::longrunning::Operation(*from.operation_);
  } else {
    operation_ = NULL;
  }
  if (from.has_analysis_status_error()) {
    analysis_status_error_ = new ::google::rpc::Status(*from.analysis_status_error_);
  } else {
    analysis_status_error_ = NULL;
  }
  analysis_status_ = from.analysis_status_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
}

void Discovery_Discovered::SharedCtor() {
  ::memset(&operation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&analysis_status_) -
      reinterpret_cast<char*>(&operation_)) + sizeof(analysis_status_));
}

Discovery_Discovered::~Discovery_Discovered() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
  SharedDtor();
}

void Discovery_Discovered::SharedDtor() {
  if (this != internal_default_instance()) delete operation_;
  if (this != internal_default_instance()) delete analysis_status_error_;
}

void Discovery_Discovered::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Discovery_Discovered::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Discovery_Discovered& Discovery_Discovered::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Discovery_Discovered.base);
  return *internal_default_instance();
}


void Discovery_Discovered::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && operation_ != NULL) {
    delete operation_;
  }
  operation_ = NULL;
  if (GetArenaNoVirtual() == NULL && analysis_status_error_ != NULL) {
    delete analysis_status_error_;
  }
  analysis_status_error_ = NULL;
  analysis_status_ = 0;
  _internal_metadata_.Clear();
}

bool Discovery_Discovered::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.longrunning.Operation operation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Discovery.Discovered.AnalysisStatus analysis_status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_analysis_status(static_cast< ::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered_AnalysisStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status analysis_status_error = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_analysis_status_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
  return false;
#undef DO_
}

void Discovery_Discovered::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.longrunning.Operation operation = 1;
  if (this->has_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_operation(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Discovery.Discovered.AnalysisStatus analysis_status = 5;
  if (this->analysis_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->analysis_status(), output);
  }

  // .google.rpc.Status analysis_status_error = 6;
  if (this->has_analysis_status_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_analysis_status_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
}

::google::protobuf::uint8* Discovery_Discovered::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.longrunning.Operation operation = 1;
  if (this->has_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_operation(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Discovery.Discovered.AnalysisStatus analysis_status = 5;
  if (this->analysis_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->analysis_status(), target);
  }

  // .google.rpc.Status analysis_status_error = 6;
  if (this->has_analysis_status_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_analysis_status_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
  return target;
}

size_t Discovery_Discovered::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.longrunning.Operation operation = 1;
  if (this->has_operation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *operation_);
  }

  // .google.rpc.Status analysis_status_error = 6;
  if (this->has_analysis_status_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *analysis_status_error_);
  }

  // .google.devtools.containeranalysis.v1alpha1.Discovery.Discovered.AnalysisStatus analysis_status = 5;
  if (this->analysis_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->analysis_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Discovery_Discovered::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
  GOOGLE_DCHECK_NE(&from, this);
  const Discovery_Discovered* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Discovery_Discovered>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
    MergeFrom(*source);
  }
}

void Discovery_Discovered::MergeFrom(const Discovery_Discovered& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_operation()) {
    mutable_operation()->::google::longrunning::Operation::MergeFrom(from.operation());
  }
  if (from.has_analysis_status_error()) {
    mutable_analysis_status_error()->::google::rpc::Status::MergeFrom(from.analysis_status_error());
  }
  if (from.analysis_status() != 0) {
    set_analysis_status(from.analysis_status());
  }
}

void Discovery_Discovered::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Discovery_Discovered::CopyFrom(const Discovery_Discovered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.Discovery.Discovered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Discovery_Discovered::IsInitialized() const {
  return true;
}

void Discovery_Discovered::Swap(Discovery_Discovered* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Discovery_Discovered::InternalSwap(Discovery_Discovered* other) {
  using std::swap;
  swap(operation_, other->operation_);
  swap(analysis_status_error_, other->analysis_status_error_);
  swap(analysis_status_, other->analysis_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Discovery_Discovered::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Discovery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Discovery::kAnalysisKindFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Discovery::Discovery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Discovery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.Discovery)
}
Discovery::Discovery(const Discovery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  analysis_kind_ = from.analysis_kind_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.Discovery)
}

void Discovery::SharedCtor() {
  analysis_kind_ = 0;
}

Discovery::~Discovery() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.Discovery)
  SharedDtor();
}

void Discovery::SharedDtor() {
}

void Discovery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Discovery::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Discovery& Discovery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_Discovery.base);
  return *internal_default_instance();
}


void Discovery::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.Discovery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  analysis_kind_ = 0;
  _internal_metadata_.Clear();
}

bool Discovery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.Discovery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.containeranalysis.v1alpha1.Note.Kind analysis_kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_analysis_kind(static_cast< ::google::devtools::containeranalysis::v1alpha1::Note_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.Discovery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.Discovery)
  return false;
#undef DO_
}

void Discovery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.Discovery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.Note.Kind analysis_kind = 1;
  if (this->analysis_kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->analysis_kind(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.Discovery)
}

::google::protobuf::uint8* Discovery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.Discovery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.Note.Kind analysis_kind = 1;
  if (this->analysis_kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->analysis_kind(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.Discovery)
  return target;
}

size_t Discovery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.Discovery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.devtools.containeranalysis.v1alpha1.Note.Kind analysis_kind = 1;
  if (this->analysis_kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->analysis_kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Discovery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.Discovery)
  GOOGLE_DCHECK_NE(&from, this);
  const Discovery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Discovery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.Discovery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.Discovery)
    MergeFrom(*source);
  }
}

void Discovery::MergeFrom(const Discovery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.Discovery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.analysis_kind() != 0) {
    set_analysis_kind(from.analysis_kind());
  }
}

void Discovery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.Discovery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Discovery::CopyFrom(const Discovery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.Discovery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Discovery::IsInitialized() const {
  return true;
}

void Discovery::Swap(Discovery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Discovery::InternalSwap(Discovery* other) {
  using std::swap;
  swap(analysis_kind_, other->analysis_kind_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Discovery::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BuildType::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_BuildType_default_instance_._instance.get_mutable()->signature_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::BuildSignature*>(
      ::google::devtools::containeranalysis::v1alpha1::BuildSignature::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildType::kBuilderVersionFieldNumber;
const int BuildType::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildType::BuildType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_BuildType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.BuildType)
}
BuildType::BuildType(const BuildType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  builder_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.builder_version().size() > 0) {
    builder_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.builder_version_);
  }
  if (from.has_signature()) {
    signature_ = new ::google::devtools::containeranalysis::v1alpha1::BuildSignature(*from.signature_);
  } else {
    signature_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.BuildType)
}

void BuildType::SharedCtor() {
  builder_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_ = NULL;
}

BuildType::~BuildType() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.BuildType)
  SharedDtor();
}

void BuildType::SharedDtor() {
  builder_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete signature_;
}

void BuildType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BuildType::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuildType& BuildType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_BuildType.base);
  return *internal_default_instance();
}


void BuildType::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.BuildType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  builder_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && signature_ != NULL) {
    delete signature_;
  }
  signature_ = NULL;
  _internal_metadata_.Clear();
}

bool BuildType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.BuildType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string builder_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_builder_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->builder_version().data(), static_cast<int>(this->builder_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.BuildType.builder_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.BuildSignature signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.BuildType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.BuildType)
  return false;
#undef DO_
}

void BuildType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.BuildType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string builder_version = 1;
  if (this->builder_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->builder_version().data(), static_cast<int>(this->builder_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildType.builder_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->builder_version(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.BuildSignature signature = 2;
  if (this->has_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.BuildType)
}

::google::protobuf::uint8* BuildType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.BuildType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string builder_version = 1;
  if (this->builder_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->builder_version().data(), static_cast<int>(this->builder_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildType.builder_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->builder_version(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.BuildSignature signature = 2;
  if (this->has_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_signature(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.BuildType)
  return target;
}

size_t BuildType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.BuildType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string builder_version = 1;
  if (this->builder_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->builder_version());
  }

  // .google.devtools.containeranalysis.v1alpha1.BuildSignature signature = 2;
  if (this->has_signature()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *signature_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuildType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.BuildType)
  GOOGLE_DCHECK_NE(&from, this);
  const BuildType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuildType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.BuildType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.BuildType)
    MergeFrom(*source);
  }
}

void BuildType::MergeFrom(const BuildType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.BuildType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.builder_version().size() > 0) {

    builder_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.builder_version_);
  }
  if (from.has_signature()) {
    mutable_signature()->::google::devtools::containeranalysis::v1alpha1::BuildSignature::MergeFrom(from.signature());
  }
}

void BuildType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.BuildType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildType::CopyFrom(const BuildType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.BuildType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildType::IsInitialized() const {
  return true;
}

void BuildType::Swap(BuildType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildType::InternalSwap(BuildType* other) {
  using std::swap;
  builder_version_.Swap(&other->builder_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(signature_, other->signature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BuildType::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BuildSignature::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildSignature::kPublicKeyFieldNumber;
const int BuildSignature::kSignatureFieldNumber;
const int BuildSignature::kKeyIdFieldNumber;
const int BuildSignature::kKeyTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildSignature::BuildSignature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_BuildSignature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.BuildSignature)
}
BuildSignature::BuildSignature(const BuildSignature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.public_key().size() > 0) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  key_type_ = from.key_type_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.BuildSignature)
}

void BuildSignature::SharedCtor() {
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_type_ = 0;
}

BuildSignature::~BuildSignature() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.BuildSignature)
  SharedDtor();
}

void BuildSignature::SharedDtor() {
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BuildSignature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BuildSignature::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuildSignature& BuildSignature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_BuildSignature.base);
  return *internal_default_instance();
}


void BuildSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.BuildSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_type_ = 0;
  _internal_metadata_.Clear();
}

bool BuildSignature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.BuildSignature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->public_key().data(), static_cast<int>(this->public_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.BuildSignature.public_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.BuildSignature.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key_id().data(), static_cast<int>(this->key_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.BuildSignature.key_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.BuildSignature.KeyType key_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_key_type(static_cast< ::google::devtools::containeranalysis::v1alpha1::BuildSignature_KeyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.BuildSignature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.BuildSignature)
  return false;
#undef DO_
}

void BuildSignature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.BuildSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildSignature.public_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->public_key(), output);
  }

  // string signature = 2;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildSignature.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->signature(), output);
  }

  // string key_id = 3;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), static_cast<int>(this->key_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildSignature.key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key_id(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.BuildSignature.KeyType key_type = 4;
  if (this->key_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->key_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.BuildSignature)
}

::google::protobuf::uint8* BuildSignature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.BuildSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildSignature.public_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->public_key(), target);
  }

  // string signature = 2;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildSignature.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->signature(), target);
  }

  // string key_id = 3;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), static_cast<int>(this->key_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildSignature.key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key_id(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.BuildSignature.KeyType key_type = 4;
  if (this->key_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->key_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.BuildSignature)
  return target;
}

size_t BuildSignature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.BuildSignature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string public_key = 1;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_key());
  }

  // string signature = 2;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // string key_id = 3;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_id());
  }

  // .google.devtools.containeranalysis.v1alpha1.BuildSignature.KeyType key_type = 4;
  if (this->key_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->key_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuildSignature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.BuildSignature)
  GOOGLE_DCHECK_NE(&from, this);
  const BuildSignature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuildSignature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.BuildSignature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.BuildSignature)
    MergeFrom(*source);
  }
}

void BuildSignature::MergeFrom(const BuildSignature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.BuildSignature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {

    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.key_type() != 0) {
    set_key_type(from.key_type());
  }
}

void BuildSignature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.BuildSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildSignature::CopyFrom(const BuildSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.BuildSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildSignature::IsInitialized() const {
  return true;
}

void BuildSignature::Swap(BuildSignature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildSignature::InternalSwap(BuildSignature* other) {
  using std::swap;
  public_key_.Swap(&other->public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_id_.Swap(&other->key_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_type_, other->key_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BuildSignature::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PgpSignedAttestation::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_PgpSignedAttestation_default_instance_.pgp_key_id_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PgpSignedAttestation::kSignatureFieldNumber;
const int PgpSignedAttestation::kContentTypeFieldNumber;
const int PgpSignedAttestation::kPgpKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PgpSignedAttestation::PgpSignedAttestation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_PgpSignedAttestation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
}
PgpSignedAttestation::PgpSignedAttestation(const PgpSignedAttestation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  content_type_ = from.content_type_;
  clear_has_key_id();
  switch (from.key_id_case()) {
    case kPgpKeyId: {
      set_pgp_key_id(from.pgp_key_id());
      break;
    }
    case KEY_ID_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
}

void PgpSignedAttestation::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_ = 0;
  clear_has_key_id();
}

PgpSignedAttestation::~PgpSignedAttestation() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  SharedDtor();
}

void PgpSignedAttestation::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_key_id()) {
    clear_key_id();
  }
}

void PgpSignedAttestation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PgpSignedAttestation::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PgpSignedAttestation& PgpSignedAttestation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_PgpSignedAttestation.base);
  return *internal_default_instance();
}


void PgpSignedAttestation::clear_key_id() {
// @@protoc_insertion_point(one_of_clear_start:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  switch (key_id_case()) {
    case kPgpKeyId: {
      key_id_.pgp_key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case KEY_ID_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KEY_ID_NOT_SET;
}


void PgpSignedAttestation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_ = 0;
  clear_key_id();
  _internal_metadata_.Clear();
}

bool PgpSignedAttestation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pgp_key_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pgp_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pgp_key_id().data(), static_cast<int>(this->pgp_key_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation.pgp_key_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation.ContentType content_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_content_type(static_cast< ::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation_ContentType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  return false;
#undef DO_
}

void PgpSignedAttestation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signature(), output);
  }

  // string pgp_key_id = 2;
  if (has_pgp_key_id()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pgp_key_id().data(), static_cast<int>(this->pgp_key_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation.pgp_key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pgp_key_id(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation.ContentType content_type = 3;
  if (this->content_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->content_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
}

::google::protobuf::uint8* PgpSignedAttestation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signature(), target);
  }

  // string pgp_key_id = 2;
  if (has_pgp_key_id()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pgp_key_id().data(), static_cast<int>(this->pgp_key_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation.pgp_key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pgp_key_id(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation.ContentType content_type = 3;
  if (this->content_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->content_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  return target;
}

size_t PgpSignedAttestation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // .google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation.ContentType content_type = 3;
  if (this->content_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->content_type());
  }

  switch (key_id_case()) {
    // string pgp_key_id = 2;
    case kPgpKeyId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pgp_key_id());
      break;
    }
    case KEY_ID_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PgpSignedAttestation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  GOOGLE_DCHECK_NE(&from, this);
  const PgpSignedAttestation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PgpSignedAttestation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
    MergeFrom(*source);
  }
}

void PgpSignedAttestation::MergeFrom(const PgpSignedAttestation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.content_type() != 0) {
    set_content_type(from.content_type());
  }
  switch (from.key_id_case()) {
    case kPgpKeyId: {
      set_pgp_key_id(from.pgp_key_id());
      break;
    }
    case KEY_ID_NOT_SET: {
      break;
    }
  }
}

void PgpSignedAttestation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PgpSignedAttestation::CopyFrom(const PgpSignedAttestation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PgpSignedAttestation::IsInitialized() const {
  return true;
}

void PgpSignedAttestation::Swap(PgpSignedAttestation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PgpSignedAttestation::InternalSwap(PgpSignedAttestation* other) {
  using std::swap;
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(content_type_, other->content_type_);
  swap(key_id_, other->key_id_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PgpSignedAttestation::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttestationAuthority_AttestationAuthorityHint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttestationAuthority_AttestationAuthorityHint::kHumanReadableNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttestationAuthority_AttestationAuthorityHint::AttestationAuthority_AttestationAuthorityHint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_AttestationAuthority_AttestationAuthorityHint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
}
AttestationAuthority_AttestationAuthorityHint::AttestationAuthority_AttestationAuthorityHint(const AttestationAuthority_AttestationAuthorityHint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  human_readable_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.human_readable_name().size() > 0) {
    human_readable_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.human_readable_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
}

void AttestationAuthority_AttestationAuthorityHint::SharedCtor() {
  human_readable_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AttestationAuthority_AttestationAuthorityHint::~AttestationAuthority_AttestationAuthorityHint() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
  SharedDtor();
}

void AttestationAuthority_AttestationAuthorityHint::SharedDtor() {
  human_readable_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttestationAuthority_AttestationAuthorityHint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AttestationAuthority_AttestationAuthorityHint::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttestationAuthority_AttestationAuthorityHint& AttestationAuthority_AttestationAuthorityHint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_AttestationAuthority_AttestationAuthorityHint.base);
  return *internal_default_instance();
}


void AttestationAuthority_AttestationAuthorityHint::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  human_readable_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AttestationAuthority_AttestationAuthorityHint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string human_readable_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_human_readable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->human_readable_name().data(), static_cast<int>(this->human_readable_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint.human_readable_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
  return false;
#undef DO_
}

void AttestationAuthority_AttestationAuthorityHint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string human_readable_name = 1;
  if (this->human_readable_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->human_readable_name().data(), static_cast<int>(this->human_readable_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint.human_readable_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->human_readable_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
}

::google::protobuf::uint8* AttestationAuthority_AttestationAuthorityHint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string human_readable_name = 1;
  if (this->human_readable_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->human_readable_name().data(), static_cast<int>(this->human_readable_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint.human_readable_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->human_readable_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
  return target;
}

size_t AttestationAuthority_AttestationAuthorityHint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string human_readable_name = 1;
  if (this->human_readable_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->human_readable_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttestationAuthority_AttestationAuthorityHint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
  GOOGLE_DCHECK_NE(&from, this);
  const AttestationAuthority_AttestationAuthorityHint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttestationAuthority_AttestationAuthorityHint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
    MergeFrom(*source);
  }
}

void AttestationAuthority_AttestationAuthorityHint::MergeFrom(const AttestationAuthority_AttestationAuthorityHint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.human_readable_name().size() > 0) {

    human_readable_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.human_readable_name_);
  }
}

void AttestationAuthority_AttestationAuthorityHint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttestationAuthority_AttestationAuthorityHint::CopyFrom(const AttestationAuthority_AttestationAuthorityHint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttestationAuthority_AttestationAuthorityHint::IsInitialized() const {
  return true;
}

void AttestationAuthority_AttestationAuthorityHint::Swap(AttestationAuthority_AttestationAuthorityHint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttestationAuthority_AttestationAuthorityHint::InternalSwap(AttestationAuthority_AttestationAuthorityHint* other) {
  using std::swap;
  human_readable_name_.Swap(&other->human_readable_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AttestationAuthority_AttestationAuthorityHint::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttestationAuthority_Attestation::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_AttestationAuthority_Attestation_default_instance_.pgp_signed_attestation_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation*>(
      ::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation::internal_default_instance());
}
void AttestationAuthority_Attestation::set_allocated_pgp_signed_attestation(::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation* pgp_signed_attestation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_signature();
  if (pgp_signed_attestation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pgp_signed_attestation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pgp_signed_attestation, submessage_arena);
    }
    set_has_pgp_signed_attestation();
    signature_.pgp_signed_attestation_ = pgp_signed_attestation;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation.pgp_signed_attestation)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttestationAuthority_Attestation::kPgpSignedAttestationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttestationAuthority_Attestation::AttestationAuthority_Attestation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_AttestationAuthority_Attestation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
}
AttestationAuthority_Attestation::AttestationAuthority_Attestation(const AttestationAuthority_Attestation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_signature();
  switch (from.signature_case()) {
    case kPgpSignedAttestation: {
      mutable_pgp_signed_attestation()->::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation::MergeFrom(from.pgp_signed_attestation());
      break;
    }
    case SIGNATURE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
}

void AttestationAuthority_Attestation::SharedCtor() {
  clear_has_signature();
}

AttestationAuthority_Attestation::~AttestationAuthority_Attestation() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  SharedDtor();
}

void AttestationAuthority_Attestation::SharedDtor() {
  if (has_signature()) {
    clear_signature();
  }
}

void AttestationAuthority_Attestation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AttestationAuthority_Attestation::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttestationAuthority_Attestation& AttestationAuthority_Attestation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_AttestationAuthority_Attestation.base);
  return *internal_default_instance();
}


void AttestationAuthority_Attestation::clear_signature() {
// @@protoc_insertion_point(one_of_clear_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  switch (signature_case()) {
    case kPgpSignedAttestation: {
      delete signature_.pgp_signed_attestation_;
      break;
    }
    case SIGNATURE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SIGNATURE_NOT_SET;
}


void AttestationAuthority_Attestation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_signature();
  _internal_metadata_.Clear();
}

bool AttestationAuthority_Attestation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation pgp_signed_attestation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pgp_signed_attestation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  return false;
#undef DO_
}

void AttestationAuthority_Attestation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation pgp_signed_attestation = 1;
  if (has_pgp_signed_attestation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pgp_signed_attestation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
}

::google::protobuf::uint8* AttestationAuthority_Attestation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation pgp_signed_attestation = 1;
  if (has_pgp_signed_attestation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pgp_signed_attestation(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  return target;
}

size_t AttestationAuthority_Attestation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (signature_case()) {
    // .google.devtools.containeranalysis.v1alpha1.PgpSignedAttestation pgp_signed_attestation = 1;
    case kPgpSignedAttestation: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *signature_.pgp_signed_attestation_);
      break;
    }
    case SIGNATURE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttestationAuthority_Attestation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  GOOGLE_DCHECK_NE(&from, this);
  const AttestationAuthority_Attestation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttestationAuthority_Attestation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
    MergeFrom(*source);
  }
}

void AttestationAuthority_Attestation::MergeFrom(const AttestationAuthority_Attestation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.signature_case()) {
    case kPgpSignedAttestation: {
      mutable_pgp_signed_attestation()->::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation::MergeFrom(from.pgp_signed_attestation());
      break;
    }
    case SIGNATURE_NOT_SET: {
      break;
    }
  }
}

void AttestationAuthority_Attestation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttestationAuthority_Attestation::CopyFrom(const AttestationAuthority_Attestation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority.Attestation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttestationAuthority_Attestation::IsInitialized() const {
  return true;
}

void AttestationAuthority_Attestation::Swap(AttestationAuthority_Attestation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttestationAuthority_Attestation::InternalSwap(AttestationAuthority_Attestation* other) {
  using std::swap;
  swap(signature_, other->signature_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AttestationAuthority_Attestation::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttestationAuthority::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_AttestationAuthority_default_instance_._instance.get_mutable()->hint_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_AttestationAuthorityHint*>(
      ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_AttestationAuthorityHint::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttestationAuthority::kHintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttestationAuthority::AttestationAuthority()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_AttestationAuthority.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
}
AttestationAuthority::AttestationAuthority(const AttestationAuthority& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hint()) {
    hint_ = new ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_AttestationAuthorityHint(*from.hint_);
  } else {
    hint_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
}

void AttestationAuthority::SharedCtor() {
  hint_ = NULL;
}

AttestationAuthority::~AttestationAuthority() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
  SharedDtor();
}

void AttestationAuthority::SharedDtor() {
  if (this != internal_default_instance()) delete hint_;
}

void AttestationAuthority::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AttestationAuthority::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttestationAuthority& AttestationAuthority::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_AttestationAuthority.base);
  return *internal_default_instance();
}


void AttestationAuthority::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && hint_ != NULL) {
    delete hint_;
  }
  hint_ = NULL;
  _internal_metadata_.Clear();
}

bool AttestationAuthority::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint hint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
  return false;
#undef DO_
}

void AttestationAuthority::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint hint = 1;
  if (this->has_hint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_hint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
}

::google::protobuf::uint8* AttestationAuthority::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint hint = 1;
  if (this->has_hint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_hint(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
  return target;
}

size_t AttestationAuthority::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.devtools.containeranalysis.v1alpha1.AttestationAuthority.AttestationAuthorityHint hint = 1;
  if (this->has_hint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hint_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttestationAuthority::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
  GOOGLE_DCHECK_NE(&from, this);
  const AttestationAuthority* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttestationAuthority>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
    MergeFrom(*source);
  }
}

void AttestationAuthority::MergeFrom(const AttestationAuthority& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hint()) {
    mutable_hint()->::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_AttestationAuthorityHint::MergeFrom(from.hint());
  }
}

void AttestationAuthority::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttestationAuthority::CopyFrom(const AttestationAuthority& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.AttestationAuthority)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttestationAuthority::IsInitialized() const {
  return true;
}

void AttestationAuthority::Swap(AttestationAuthority* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttestationAuthority::InternalSwap(AttestationAuthority* other) {
  using std::swap;
  swap(hint_, other->hint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AttestationAuthority::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BuildDetails::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_BuildDetails_default_instance_._instance.get_mutable()->provenance_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::BuildProvenance*>(
      ::google::devtools::containeranalysis::v1alpha1::BuildProvenance::internal_default_instance());
}
void BuildDetails::clear_provenance() {
  if (GetArenaNoVirtual() == NULL && provenance_ != NULL) {
    delete provenance_;
  }
  provenance_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildDetails::kProvenanceFieldNumber;
const int BuildDetails::kProvenanceBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildDetails::BuildDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_BuildDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.BuildDetails)
}
BuildDetails::BuildDetails(const BuildDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  provenance_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.provenance_bytes().size() > 0) {
    provenance_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provenance_bytes_);
  }
  if (from.has_provenance()) {
    provenance_ = new ::google::devtools::containeranalysis::v1alpha1::BuildProvenance(*from.provenance_);
  } else {
    provenance_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.BuildDetails)
}

void BuildDetails::SharedCtor() {
  provenance_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  provenance_ = NULL;
}

BuildDetails::~BuildDetails() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.BuildDetails)
  SharedDtor();
}

void BuildDetails::SharedDtor() {
  provenance_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete provenance_;
}

void BuildDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BuildDetails::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuildDetails& BuildDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_BuildDetails.base);
  return *internal_default_instance();
}


void BuildDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.BuildDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  provenance_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && provenance_ != NULL) {
    delete provenance_;
  }
  provenance_ = NULL;
  _internal_metadata_.Clear();
}

bool BuildDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.BuildDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.containeranalysis.v1alpha1.BuildProvenance provenance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_provenance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string provenance_bytes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_provenance_bytes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->provenance_bytes().data(), static_cast<int>(this->provenance_bytes().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.BuildDetails.provenance_bytes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.BuildDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.BuildDetails)
  return false;
#undef DO_
}

void BuildDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.BuildDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.BuildProvenance provenance = 1;
  if (this->has_provenance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_provenance(), output);
  }

  // string provenance_bytes = 2;
  if (this->provenance_bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->provenance_bytes().data(), static_cast<int>(this->provenance_bytes().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildDetails.provenance_bytes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->provenance_bytes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.BuildDetails)
}

::google::protobuf::uint8* BuildDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.BuildDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.BuildProvenance provenance = 1;
  if (this->has_provenance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_provenance(), deterministic, target);
  }

  // string provenance_bytes = 2;
  if (this->provenance_bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->provenance_bytes().data(), static_cast<int>(this->provenance_bytes().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildDetails.provenance_bytes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->provenance_bytes(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.BuildDetails)
  return target;
}

size_t BuildDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.BuildDetails)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string provenance_bytes = 2;
  if (this->provenance_bytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->provenance_bytes());
  }

  // .google.devtools.containeranalysis.v1alpha1.BuildProvenance provenance = 1;
  if (this->has_provenance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *provenance_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuildDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.BuildDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const BuildDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuildDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.BuildDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.BuildDetails)
    MergeFrom(*source);
  }
}

void BuildDetails::MergeFrom(const BuildDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.BuildDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.provenance_bytes().size() > 0) {

    provenance_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provenance_bytes_);
  }
  if (from.has_provenance()) {
    mutable_provenance()->::google::devtools::containeranalysis::v1alpha1::BuildProvenance::MergeFrom(from.provenance());
  }
}

void BuildDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.BuildDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildDetails::CopyFrom(const BuildDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.BuildDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildDetails::IsInitialized() const {
  return true;
}

void BuildDetails::Swap(BuildDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildDetails::InternalSwap(BuildDetails* other) {
  using std::swap;
  provenance_bytes_.Swap(&other->provenance_bytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(provenance_, other->provenance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BuildDetails::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScanConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanConfig::kNameFieldNumber;
const int ScanConfig::kDescriptionFieldNumber;
const int ScanConfig::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanConfig::ScanConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ScanConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.ScanConfig)
}
ScanConfig::ScanConfig(const ScanConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.ScanConfig)
}

void ScanConfig::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enabled_ = false;
}

ScanConfig::~ScanConfig() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.ScanConfig)
  SharedDtor();
}

void ScanConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScanConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScanConfig::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanConfig& ScanConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ScanConfig.base);
  return *internal_default_instance();
}


void ScanConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.ScanConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enabled_ = false;
  _internal_metadata_.Clear();
}

bool ScanConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.ScanConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ScanConfig.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ScanConfig.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enabled = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.ScanConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.ScanConfig)
  return false;
#undef DO_
}

void ScanConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.ScanConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ScanConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ScanConfig.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // bool enabled = 3;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.ScanConfig)
}

::google::protobuf::uint8* ScanConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.ScanConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ScanConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ScanConfig.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // bool enabled = 3;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enabled(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.ScanConfig)
  return target;
}

size_t ScanConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.ScanConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // bool enabled = 3;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.ScanConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.ScanConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.ScanConfig)
    MergeFrom(*source);
  }
}

void ScanConfig::MergeFrom(const ScanConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.ScanConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void ScanConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.ScanConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanConfig::CopyFrom(const ScanConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.ScanConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanConfig::IsInitialized() const {
  return true;
}

void ScanConfig::Swap(ScanConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanConfig::InternalSwap(ScanConfig* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(enabled_, other->enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScanConfig::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetOccurrenceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOccurrenceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOccurrenceRequest::GetOccurrenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetOccurrenceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
}
GetOccurrenceRequest::GetOccurrenceRequest(const GetOccurrenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
}

void GetOccurrenceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetOccurrenceRequest::~GetOccurrenceRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
  SharedDtor();
}

void GetOccurrenceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOccurrenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetOccurrenceRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOccurrenceRequest& GetOccurrenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetOccurrenceRequest.base);
  return *internal_default_instance();
}


void GetOccurrenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetOccurrenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
  return false;
#undef DO_
}

void GetOccurrenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
}

::google::protobuf::uint8* GetOccurrenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
  return target;
}

size_t GetOccurrenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOccurrenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOccurrenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOccurrenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
    MergeFrom(*source);
  }
}

void GetOccurrenceRequest::MergeFrom(const GetOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetOccurrenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOccurrenceRequest::CopyFrom(const GetOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOccurrenceRequest::IsInitialized() const {
  return true;
}

void GetOccurrenceRequest::Swap(GetOccurrenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOccurrenceRequest::InternalSwap(GetOccurrenceRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetOccurrenceRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListOccurrencesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListOccurrencesRequest::kNameFieldNumber;
const int ListOccurrencesRequest::kParentFieldNumber;
const int ListOccurrencesRequest::kFilterFieldNumber;
const int ListOccurrencesRequest::kPageSizeFieldNumber;
const int ListOccurrencesRequest::kPageTokenFieldNumber;
const int ListOccurrencesRequest::kKindFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListOccurrencesRequest::ListOccurrencesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListOccurrencesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
}
ListOccurrencesRequest::ListOccurrencesRequest(const ListOccurrencesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  ::memcpy(&page_size_, &from.page_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&page_size_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
}

void ListOccurrencesRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(kind_));
}

ListOccurrencesRequest::~ListOccurrencesRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
  SharedDtor();
}

void ListOccurrencesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListOccurrencesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListOccurrencesRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListOccurrencesRequest& ListOccurrencesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListOccurrencesRequest.base);
  return *internal_default_instance();
}


void ListOccurrencesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(kind_));
  _internal_metadata_.Clear();
}

bool ListOccurrencesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Note.Kind kind = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::google::devtools::containeranalysis::v1alpha1::Note_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
  return false;
#undef DO_
}

void ListOccurrencesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->parent(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Note.Kind kind = 6;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->kind(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
}

::google::protobuf::uint8* ListOccurrencesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->parent(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Note.Kind kind = 6;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->kind(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
  return target;
}

size_t ListOccurrencesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // .google.devtools.containeranalysis.v1alpha1.Note.Kind kind = 6;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListOccurrencesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListOccurrencesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListOccurrencesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
    MergeFrom(*source);
  }
}

void ListOccurrencesRequest::MergeFrom(const ListOccurrencesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void ListOccurrencesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListOccurrencesRequest::CopyFrom(const ListOccurrencesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOccurrencesRequest::IsInitialized() const {
  return true;
}

void ListOccurrencesRequest::Swap(ListOccurrencesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListOccurrencesRequest::InternalSwap(ListOccurrencesRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  swap(kind_, other->kind_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListOccurrencesRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListOccurrencesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListOccurrencesResponse::kOccurrencesFieldNumber;
const int ListOccurrencesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListOccurrencesResponse::ListOccurrencesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListOccurrencesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
}
ListOccurrencesResponse::ListOccurrencesResponse(const ListOccurrencesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      occurrences_(from.occurrences_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
}

void ListOccurrencesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListOccurrencesResponse::~ListOccurrencesResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
  SharedDtor();
}

void ListOccurrencesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListOccurrencesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListOccurrencesResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListOccurrencesResponse& ListOccurrencesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListOccurrencesResponse.base);
  return *internal_default_instance();
}


void ListOccurrencesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  occurrences_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListOccurrencesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.containeranalysis.v1alpha1.Occurrence occurrences = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_occurrences()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
  return false;
#undef DO_
}

void ListOccurrencesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1alpha1.Occurrence occurrences = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->occurrences_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->occurrences(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
}

::google::protobuf::uint8* ListOccurrencesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1alpha1.Occurrence occurrences = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->occurrences_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->occurrences(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
  return target;
}

size_t ListOccurrencesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.containeranalysis.v1alpha1.Occurrence occurrences = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->occurrences_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->occurrences(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListOccurrencesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListOccurrencesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListOccurrencesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
    MergeFrom(*source);
  }
}

void ListOccurrencesResponse::MergeFrom(const ListOccurrencesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  occurrences_.MergeFrom(from.occurrences_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListOccurrencesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListOccurrencesResponse::CopyFrom(const ListOccurrencesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListOccurrencesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOccurrencesResponse::IsInitialized() const {
  return true;
}

void ListOccurrencesResponse::Swap(ListOccurrencesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListOccurrencesResponse::InternalSwap(ListOccurrencesResponse* other) {
  using std::swap;
  CastToBase(&occurrences_)->InternalSwap(CastToBase(&other->occurrences_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListOccurrencesResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteOccurrenceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteOccurrenceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteOccurrenceRequest::DeleteOccurrenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_DeleteOccurrenceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
}
DeleteOccurrenceRequest::DeleteOccurrenceRequest(const DeleteOccurrenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
}

void DeleteOccurrenceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteOccurrenceRequest::~DeleteOccurrenceRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
  SharedDtor();
}

void DeleteOccurrenceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteOccurrenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteOccurrenceRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteOccurrenceRequest& DeleteOccurrenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_DeleteOccurrenceRequest.base);
  return *internal_default_instance();
}


void DeleteOccurrenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteOccurrenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
  return false;
#undef DO_
}

void DeleteOccurrenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
}

::google::protobuf::uint8* DeleteOccurrenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
  return target;
}

size_t DeleteOccurrenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteOccurrenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteOccurrenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteOccurrenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
    MergeFrom(*source);
  }
}

void DeleteOccurrenceRequest::MergeFrom(const DeleteOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteOccurrenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOccurrenceRequest::CopyFrom(const DeleteOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.DeleteOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOccurrenceRequest::IsInitialized() const {
  return true;
}

void DeleteOccurrenceRequest::Swap(DeleteOccurrenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteOccurrenceRequest::InternalSwap(DeleteOccurrenceRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteOccurrenceRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateOccurrenceRequest::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_CreateOccurrenceRequest_default_instance_._instance.get_mutable()->occurrence_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::Occurrence*>(
      ::google::devtools::containeranalysis::v1alpha1::Occurrence::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateOccurrenceRequest::kNameFieldNumber;
const int CreateOccurrenceRequest::kParentFieldNumber;
const int CreateOccurrenceRequest::kOccurrenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateOccurrenceRequest::CreateOccurrenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_CreateOccurrenceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
}
CreateOccurrenceRequest::CreateOccurrenceRequest(const CreateOccurrenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_occurrence()) {
    occurrence_ = new ::google::devtools::containeranalysis::v1alpha1::Occurrence(*from.occurrence_);
  } else {
    occurrence_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
}

void CreateOccurrenceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  occurrence_ = NULL;
}

CreateOccurrenceRequest::~CreateOccurrenceRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
  SharedDtor();
}

void CreateOccurrenceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete occurrence_;
}

void CreateOccurrenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateOccurrenceRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateOccurrenceRequest& CreateOccurrenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_CreateOccurrenceRequest.base);
  return *internal_default_instance();
}


void CreateOccurrenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && occurrence_ != NULL) {
    delete occurrence_;
  }
  occurrence_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateOccurrenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Occurrence occurrence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_occurrence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
  return false;
#undef DO_
}

void CreateOccurrenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Occurrence occurrence = 2;
  if (this->has_occurrence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_occurrence(), output);
  }

  // string parent = 3;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->parent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
}

::google::protobuf::uint8* CreateOccurrenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Occurrence occurrence = 2;
  if (this->has_occurrence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_occurrence(), deterministic, target);
  }

  // string parent = 3;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->parent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
  return target;
}

size_t CreateOccurrenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string parent = 3;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.devtools.containeranalysis.v1alpha1.Occurrence occurrence = 2;
  if (this->has_occurrence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *occurrence_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOccurrenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOccurrenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateOccurrenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
    MergeFrom(*source);
  }
}

void CreateOccurrenceRequest::MergeFrom(const CreateOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_occurrence()) {
    mutable_occurrence()->::google::devtools::containeranalysis::v1alpha1::Occurrence::MergeFrom(from.occurrence());
  }
}

void CreateOccurrenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOccurrenceRequest::CopyFrom(const CreateOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.CreateOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOccurrenceRequest::IsInitialized() const {
  return true;
}

void CreateOccurrenceRequest::Swap(CreateOccurrenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateOccurrenceRequest::InternalSwap(CreateOccurrenceRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(occurrence_, other->occurrence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateOccurrenceRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateOccurrenceRequest::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_UpdateOccurrenceRequest_default_instance_._instance.get_mutable()->occurrence_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::Occurrence*>(
      ::google::devtools::containeranalysis::v1alpha1::Occurrence::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_UpdateOccurrenceRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateOccurrenceRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateOccurrenceRequest::kNameFieldNumber;
const int UpdateOccurrenceRequest::kOccurrenceFieldNumber;
const int UpdateOccurrenceRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateOccurrenceRequest::UpdateOccurrenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_UpdateOccurrenceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
}
UpdateOccurrenceRequest::UpdateOccurrenceRequest(const UpdateOccurrenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_occurrence()) {
    occurrence_ = new ::google::devtools::containeranalysis::v1alpha1::Occurrence(*from.occurrence_);
  } else {
    occurrence_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
}

void UpdateOccurrenceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&occurrence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&occurrence_)) + sizeof(update_mask_));
}

UpdateOccurrenceRequest::~UpdateOccurrenceRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
  SharedDtor();
}

void UpdateOccurrenceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete occurrence_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateOccurrenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateOccurrenceRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateOccurrenceRequest& UpdateOccurrenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_UpdateOccurrenceRequest.base);
  return *internal_default_instance();
}


void UpdateOccurrenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && occurrence_ != NULL) {
    delete occurrence_;
  }
  occurrence_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateOccurrenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Occurrence occurrence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_occurrence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
  return false;
#undef DO_
}

void UpdateOccurrenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Occurrence occurrence = 2;
  if (this->has_occurrence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_occurrence(), output);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_update_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
}

::google::protobuf::uint8* UpdateOccurrenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Occurrence occurrence = 2;
  if (this->has_occurrence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_occurrence(), deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_update_mask(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
  return target;
}

size_t UpdateOccurrenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.devtools.containeranalysis.v1alpha1.Occurrence occurrence = 2;
  if (this->has_occurrence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *occurrence_);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateOccurrenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateOccurrenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateOccurrenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
    MergeFrom(*source);
  }
}

void UpdateOccurrenceRequest::MergeFrom(const UpdateOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_occurrence()) {
    mutable_occurrence()->::google::devtools::containeranalysis::v1alpha1::Occurrence::MergeFrom(from.occurrence());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateOccurrenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateOccurrenceRequest::CopyFrom(const UpdateOccurrenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.UpdateOccurrenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOccurrenceRequest::IsInitialized() const {
  return true;
}

void UpdateOccurrenceRequest::Swap(UpdateOccurrenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateOccurrenceRequest::InternalSwap(UpdateOccurrenceRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(occurrence_, other->occurrence_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateOccurrenceRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetNoteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNoteRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNoteRequest::GetNoteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetNoteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
}
GetNoteRequest::GetNoteRequest(const GetNoteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
}

void GetNoteRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetNoteRequest::~GetNoteRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
  SharedDtor();
}

void GetNoteRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetNoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetNoteRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetNoteRequest& GetNoteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetNoteRequest.base);
  return *internal_default_instance();
}


void GetNoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetNoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.GetNoteRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
  return false;
#undef DO_
}

void GetNoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.GetNoteRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
}

::google::protobuf::uint8* GetNoteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.GetNoteRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
  return target;
}

size_t GetNoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNoteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNoteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNoteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
    MergeFrom(*source);
  }
}

void GetNoteRequest::MergeFrom(const GetNoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetNoteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNoteRequest::CopyFrom(const GetNoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNoteRequest::IsInitialized() const {
  return true;
}

void GetNoteRequest::Swap(GetNoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNoteRequest::InternalSwap(GetNoteRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetNoteRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetOccurrenceNoteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOccurrenceNoteRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOccurrenceNoteRequest::GetOccurrenceNoteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetOccurrenceNoteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
}
GetOccurrenceNoteRequest::GetOccurrenceNoteRequest(const GetOccurrenceNoteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
}

void GetOccurrenceNoteRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetOccurrenceNoteRequest::~GetOccurrenceNoteRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
  SharedDtor();
}

void GetOccurrenceNoteRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOccurrenceNoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetOccurrenceNoteRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOccurrenceNoteRequest& GetOccurrenceNoteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetOccurrenceNoteRequest.base);
  return *internal_default_instance();
}


void GetOccurrenceNoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetOccurrenceNoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
  return false;
#undef DO_
}

void GetOccurrenceNoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
}

::google::protobuf::uint8* GetOccurrenceNoteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
  return target;
}

size_t GetOccurrenceNoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOccurrenceNoteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOccurrenceNoteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOccurrenceNoteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
    MergeFrom(*source);
  }
}

void GetOccurrenceNoteRequest::MergeFrom(const GetOccurrenceNoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetOccurrenceNoteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOccurrenceNoteRequest::CopyFrom(const GetOccurrenceNoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetOccurrenceNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOccurrenceNoteRequest::IsInitialized() const {
  return true;
}

void GetOccurrenceNoteRequest::Swap(GetOccurrenceNoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOccurrenceNoteRequest::InternalSwap(GetOccurrenceNoteRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetOccurrenceNoteRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListNotesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNotesRequest::kNameFieldNumber;
const int ListNotesRequest::kParentFieldNumber;
const int ListNotesRequest::kFilterFieldNumber;
const int ListNotesRequest::kPageSizeFieldNumber;
const int ListNotesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNotesRequest::ListNotesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListNotesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
}
ListNotesRequest::ListNotesRequest(const ListNotesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
}

void ListNotesRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListNotesRequest::~ListNotesRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
  SharedDtor();
}

void ListNotesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNotesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListNotesRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNotesRequest& ListNotesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListNotesRequest.base);
  return *internal_default_instance();
}


void ListNotesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListNotesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListNotesRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListNotesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListNotesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListNotesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
  return false;
#undef DO_
}

void ListNotesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNotesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNotesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNotesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNotesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->parent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
}

::google::protobuf::uint8* ListNotesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNotesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNotesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNotesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNotesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->parent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
  return target;
}

size_t ListNotesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNotesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNotesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNotesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
    MergeFrom(*source);
  }
}

void ListNotesRequest::MergeFrom(const ListNotesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListNotesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNotesRequest::CopyFrom(const ListNotesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListNotesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNotesRequest::IsInitialized() const {
  return true;
}

void ListNotesRequest::Swap(ListNotesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNotesRequest::InternalSwap(ListNotesRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListNotesRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListNotesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNotesResponse::kNotesFieldNumber;
const int ListNotesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNotesResponse::ListNotesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListNotesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
}
ListNotesResponse::ListNotesResponse(const ListNotesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notes_(from.notes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
}

void ListNotesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListNotesResponse::~ListNotesResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
  SharedDtor();
}

void ListNotesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNotesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListNotesResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNotesResponse& ListNotesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListNotesResponse.base);
  return *internal_default_instance();
}


void ListNotesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notes_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListNotesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.containeranalysis.v1alpha1.Note notes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_notes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListNotesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
  return false;
#undef DO_
}

void ListNotesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1alpha1.Note notes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->notes(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNotesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
}

::google::protobuf::uint8* ListNotesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1alpha1.Note notes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->notes(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNotesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
  return target;
}

size_t ListNotesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.containeranalysis.v1alpha1.Note notes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->notes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notes(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNotesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNotesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNotesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
    MergeFrom(*source);
  }
}

void ListNotesResponse::MergeFrom(const ListNotesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notes_.MergeFrom(from.notes_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListNotesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNotesResponse::CopyFrom(const ListNotesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListNotesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNotesResponse::IsInitialized() const {
  return true;
}

void ListNotesResponse::Swap(ListNotesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNotesResponse::InternalSwap(ListNotesResponse* other) {
  using std::swap;
  CastToBase(&notes_)->InternalSwap(CastToBase(&other->notes_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListNotesResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteNoteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteNoteRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteNoteRequest::DeleteNoteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_DeleteNoteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
}
DeleteNoteRequest::DeleteNoteRequest(const DeleteNoteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
}

void DeleteNoteRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteNoteRequest::~DeleteNoteRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
  SharedDtor();
}

void DeleteNoteRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteNoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteNoteRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteNoteRequest& DeleteNoteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_DeleteNoteRequest.base);
  return *internal_default_instance();
}


void DeleteNoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteNoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
  return false;
#undef DO_
}

void DeleteNoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
}

::google::protobuf::uint8* DeleteNoteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
  return target;
}

size_t DeleteNoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteNoteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteNoteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteNoteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
    MergeFrom(*source);
  }
}

void DeleteNoteRequest::MergeFrom(const DeleteNoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteNoteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNoteRequest::CopyFrom(const DeleteNoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.DeleteNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNoteRequest::IsInitialized() const {
  return true;
}

void DeleteNoteRequest::Swap(DeleteNoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteNoteRequest::InternalSwap(DeleteNoteRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteNoteRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateNoteRequest::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_CreateNoteRequest_default_instance_._instance.get_mutable()->note_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::Note*>(
      ::google::devtools::containeranalysis::v1alpha1::Note::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNoteRequest::kNameFieldNumber;
const int CreateNoteRequest::kParentFieldNumber;
const int CreateNoteRequest::kNoteIdFieldNumber;
const int CreateNoteRequest::kNoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNoteRequest::CreateNoteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_CreateNoteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
}
CreateNoteRequest::CreateNoteRequest(const CreateNoteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  note_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.note_id().size() > 0) {
    note_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.note_id_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_note()) {
    note_ = new ::google::devtools::containeranalysis::v1alpha1::Note(*from.note_);
  } else {
    note_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
}

void CreateNoteRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_ = NULL;
}

CreateNoteRequest::~CreateNoteRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
  SharedDtor();
}

void CreateNoteRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete note_;
}

void CreateNoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateNoteRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNoteRequest& CreateNoteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_CreateNoteRequest.base);
  return *internal_default_instance();
}


void CreateNoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && note_ != NULL) {
    delete note_;
  }
  note_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateNoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.CreateNoteRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string note_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_note_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->note_id().data(), static_cast<int>(this->note_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.CreateNoteRequest.note_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Note note = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.CreateNoteRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
  return false;
#undef DO_
}

void CreateNoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateNoteRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string note_id = 2;
  if (this->note_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->note_id().data(), static_cast<int>(this->note_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateNoteRequest.note_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->note_id(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Note note = 3;
  if (this->has_note()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_note(), output);
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateNoteRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
}

::google::protobuf::uint8* CreateNoteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateNoteRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string note_id = 2;
  if (this->note_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->note_id().data(), static_cast<int>(this->note_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateNoteRequest.note_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->note_id(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Note note = 3;
  if (this->has_note()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_note(), deterministic, target);
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateNoteRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
  return target;
}

size_t CreateNoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string note_id = 2;
  if (this->note_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->note_id());
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.devtools.containeranalysis.v1alpha1.Note note = 3;
  if (this->has_note()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *note_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateNoteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNoteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNoteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
    MergeFrom(*source);
  }
}

void CreateNoteRequest::MergeFrom(const CreateNoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.note_id().size() > 0) {

    note_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.note_id_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_note()) {
    mutable_note()->::google::devtools::containeranalysis::v1alpha1::Note::MergeFrom(from.note());
  }
}

void CreateNoteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNoteRequest::CopyFrom(const CreateNoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.CreateNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNoteRequest::IsInitialized() const {
  return true;
}

void CreateNoteRequest::Swap(CreateNoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNoteRequest::InternalSwap(CreateNoteRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  note_id_.Swap(&other->note_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(note_, other->note_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateNoteRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateNoteRequest::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_UpdateNoteRequest_default_instance_._instance.get_mutable()->note_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::Note*>(
      ::google::devtools::containeranalysis::v1alpha1::Note::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_UpdateNoteRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateNoteRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateNoteRequest::kNameFieldNumber;
const int UpdateNoteRequest::kNoteFieldNumber;
const int UpdateNoteRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateNoteRequest::UpdateNoteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_UpdateNoteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
}
UpdateNoteRequest::UpdateNoteRequest(const UpdateNoteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_note()) {
    note_ = new ::google::devtools::containeranalysis::v1alpha1::Note(*from.note_);
  } else {
    note_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
}

void UpdateNoteRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&note_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&note_)) + sizeof(update_mask_));
}

UpdateNoteRequest::~UpdateNoteRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
  SharedDtor();
}

void UpdateNoteRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete note_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateNoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateNoteRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateNoteRequest& UpdateNoteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_UpdateNoteRequest.base);
  return *internal_default_instance();
}


void UpdateNoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && note_ != NULL) {
    delete note_;
  }
  note_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateNoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Note note = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
  return false;
#undef DO_
}

void UpdateNoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Note note = 2;
  if (this->has_note()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_note(), output);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_update_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
}

::google::protobuf::uint8* UpdateNoteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Note note = 2;
  if (this->has_note()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_note(), deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_update_mask(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
  return target;
}

size_t UpdateNoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.devtools.containeranalysis.v1alpha1.Note note = 2;
  if (this->has_note()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *note_);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateNoteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateNoteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateNoteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
    MergeFrom(*source);
  }
}

void UpdateNoteRequest::MergeFrom(const UpdateNoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_note()) {
    mutable_note()->::google::devtools::containeranalysis::v1alpha1::Note::MergeFrom(from.note());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateNoteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateNoteRequest::CopyFrom(const UpdateNoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.UpdateNoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNoteRequest::IsInitialized() const {
  return true;
}

void UpdateNoteRequest::Swap(UpdateNoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateNoteRequest::InternalSwap(UpdateNoteRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(note_, other->note_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateNoteRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListNoteOccurrencesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNoteOccurrencesRequest::kNameFieldNumber;
const int ListNoteOccurrencesRequest::kFilterFieldNumber;
const int ListNoteOccurrencesRequest::kPageSizeFieldNumber;
const int ListNoteOccurrencesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNoteOccurrencesRequest::ListNoteOccurrencesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListNoteOccurrencesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
}
ListNoteOccurrencesRequest::ListNoteOccurrencesRequest(const ListNoteOccurrencesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
}

void ListNoteOccurrencesRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListNoteOccurrencesRequest::~ListNoteOccurrencesRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
  SharedDtor();
}

void ListNoteOccurrencesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNoteOccurrencesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListNoteOccurrencesRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNoteOccurrencesRequest& ListNoteOccurrencesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListNoteOccurrencesRequest.base);
  return *internal_default_instance();
}


void ListNoteOccurrencesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListNoteOccurrencesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
  return false;
#undef DO_
}

void ListNoteOccurrencesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
}

::google::protobuf::uint8* ListNoteOccurrencesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
  return target;
}

size_t ListNoteOccurrencesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNoteOccurrencesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNoteOccurrencesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNoteOccurrencesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
    MergeFrom(*source);
  }
}

void ListNoteOccurrencesRequest::MergeFrom(const ListNoteOccurrencesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListNoteOccurrencesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNoteOccurrencesRequest::CopyFrom(const ListNoteOccurrencesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNoteOccurrencesRequest::IsInitialized() const {
  return true;
}

void ListNoteOccurrencesRequest::Swap(ListNoteOccurrencesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNoteOccurrencesRequest::InternalSwap(ListNoteOccurrencesRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListNoteOccurrencesRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListNoteOccurrencesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNoteOccurrencesResponse::kOccurrencesFieldNumber;
const int ListNoteOccurrencesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNoteOccurrencesResponse::ListNoteOccurrencesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListNoteOccurrencesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
}
ListNoteOccurrencesResponse::ListNoteOccurrencesResponse(const ListNoteOccurrencesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      occurrences_(from.occurrences_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
}

void ListNoteOccurrencesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListNoteOccurrencesResponse::~ListNoteOccurrencesResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
  SharedDtor();
}

void ListNoteOccurrencesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNoteOccurrencesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListNoteOccurrencesResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNoteOccurrencesResponse& ListNoteOccurrencesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListNoteOccurrencesResponse.base);
  return *internal_default_instance();
}


void ListNoteOccurrencesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  occurrences_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListNoteOccurrencesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.containeranalysis.v1alpha1.Occurrence occurrences = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_occurrences()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
  return false;
#undef DO_
}

void ListNoteOccurrencesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1alpha1.Occurrence occurrences = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->occurrences_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->occurrences(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
}

::google::protobuf::uint8* ListNoteOccurrencesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1alpha1.Occurrence occurrences = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->occurrences_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->occurrences(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
  return target;
}

size_t ListNoteOccurrencesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.containeranalysis.v1alpha1.Occurrence occurrences = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->occurrences_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->occurrences(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNoteOccurrencesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNoteOccurrencesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNoteOccurrencesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
    MergeFrom(*source);
  }
}

void ListNoteOccurrencesResponse::MergeFrom(const ListNoteOccurrencesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  occurrences_.MergeFrom(from.occurrences_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListNoteOccurrencesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNoteOccurrencesResponse::CopyFrom(const ListNoteOccurrencesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListNoteOccurrencesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNoteOccurrencesResponse::IsInitialized() const {
  return true;
}

void ListNoteOccurrencesResponse::Swap(ListNoteOccurrencesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNoteOccurrencesResponse::InternalSwap(ListNoteOccurrencesResponse* other) {
  using std::swap;
  CastToBase(&occurrences_)->InternalSwap(CastToBase(&other->occurrences_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListNoteOccurrencesResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateOperationRequest::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_CreateOperationRequest_default_instance_._instance.get_mutable()->operation_ = const_cast< ::google::longrunning::Operation*>(
      ::google::longrunning::Operation::internal_default_instance());
}
void CreateOperationRequest::clear_operation() {
  if (GetArenaNoVirtual() == NULL && operation_ != NULL) {
    delete operation_;
  }
  operation_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateOperationRequest::kParentFieldNumber;
const int CreateOperationRequest::kOperationIdFieldNumber;
const int CreateOperationRequest::kOperationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateOperationRequest::CreateOperationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_CreateOperationRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
}
CreateOperationRequest::CreateOperationRequest(const CreateOperationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  if (from.has_operation()) {
    operation_ = new ::google::longrunning::Operation(*from.operation_);
  } else {
    operation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
}

void CreateOperationRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_ = NULL;
}

CreateOperationRequest::~CreateOperationRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
  SharedDtor();
}

void CreateOperationRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete operation_;
}

void CreateOperationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateOperationRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateOperationRequest& CreateOperationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_CreateOperationRequest.base);
  return *internal_default_instance();
}


void CreateOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && operation_ != NULL) {
    delete operation_;
  }
  operation_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateOperationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.CreateOperationRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string operation_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.CreateOperationRequest.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.longrunning.Operation operation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
  return false;
#undef DO_
}

void CreateOperationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateOperationRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string operation_id = 2;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateOperationRequest.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->operation_id(), output);
  }

  // .google.longrunning.Operation operation = 3;
  if (this->has_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_operation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
}

::google::protobuf::uint8* CreateOperationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateOperationRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string operation_id = 2;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.CreateOperationRequest.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->operation_id(), target);
  }

  // .google.longrunning.Operation operation = 3;
  if (this->has_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_operation(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
  return target;
}

size_t CreateOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string operation_id = 2;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // .google.longrunning.Operation operation = 3;
  if (this->has_operation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *operation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOperationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOperationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateOperationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
    MergeFrom(*source);
  }
}

void CreateOperationRequest::MergeFrom(const CreateOperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.operation_id().size() > 0) {

    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  if (from.has_operation()) {
    mutable_operation()->::google::longrunning::Operation::MergeFrom(from.operation());
  }
}

void CreateOperationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOperationRequest::CopyFrom(const CreateOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.CreateOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOperationRequest::IsInitialized() const {
  return true;
}

void CreateOperationRequest::Swap(CreateOperationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateOperationRequest::InternalSwap(CreateOperationRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  operation_id_.Swap(&other->operation_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(operation_, other->operation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateOperationRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateOperationRequest::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_UpdateOperationRequest_default_instance_._instance.get_mutable()->operation_ = const_cast< ::google::longrunning::Operation*>(
      ::google::longrunning::Operation::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_UpdateOperationRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateOperationRequest::clear_operation() {
  if (GetArenaNoVirtual() == NULL && operation_ != NULL) {
    delete operation_;
  }
  operation_ = NULL;
}
void UpdateOperationRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateOperationRequest::kNameFieldNumber;
const int UpdateOperationRequest::kOperationFieldNumber;
const int UpdateOperationRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateOperationRequest::UpdateOperationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_UpdateOperationRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
}
UpdateOperationRequest::UpdateOperationRequest(const UpdateOperationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_operation()) {
    operation_ = new ::google::longrunning::Operation(*from.operation_);
  } else {
    operation_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
}

void UpdateOperationRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&operation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&operation_)) + sizeof(update_mask_));
}

UpdateOperationRequest::~UpdateOperationRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
  SharedDtor();
}

void UpdateOperationRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete operation_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateOperationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateOperationRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateOperationRequest& UpdateOperationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_UpdateOperationRequest.base);
  return *internal_default_instance();
}


void UpdateOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && operation_ != NULL) {
    delete operation_;
  }
  operation_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateOperationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.longrunning.Operation operation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
  return false;
#undef DO_
}

void UpdateOperationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.longrunning.Operation operation = 3;
  if (this->has_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_operation(), output);
  }

  // .google.protobuf.FieldMask update_mask = 4;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_update_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
}

::google::protobuf::uint8* UpdateOperationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.longrunning.Operation operation = 3;
  if (this->has_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_operation(), deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 4;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_update_mask(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
  return target;
}

size_t UpdateOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.longrunning.Operation operation = 3;
  if (this->has_operation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *operation_);
  }

  // .google.protobuf.FieldMask update_mask = 4;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateOperationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateOperationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateOperationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
    MergeFrom(*source);
  }
}

void UpdateOperationRequest::MergeFrom(const UpdateOperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_operation()) {
    mutable_operation()->::google::longrunning::Operation::MergeFrom(from.operation());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateOperationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateOperationRequest::CopyFrom(const UpdateOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.UpdateOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOperationRequest::IsInitialized() const {
  return true;
}

void UpdateOperationRequest::Swap(UpdateOperationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateOperationRequest::InternalSwap(UpdateOperationRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(operation_, other->operation_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateOperationRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationMetadata::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_OperationMetadata_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_OperationMetadata_default_instance_._instance.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void OperationMetadata::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void OperationMetadata::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationMetadata::kCreateTimeFieldNumber;
const int OperationMetadata::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationMetadata::OperationMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_OperationMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
}
OperationMetadata::OperationMetadata(const OperationMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
}

void OperationMetadata::SharedCtor() {
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(end_time_));
}

OperationMetadata::~OperationMetadata() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
  SharedDtor();
}

void OperationMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete end_time_;
}

void OperationMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperationMetadata::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationMetadata& OperationMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_OperationMetadata.base);
  return *internal_default_instance();
}


void OperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
  _internal_metadata_.Clear();
}

bool OperationMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp create_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
  return false;
#undef DO_
}

void OperationMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp create_time = 1;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_create_time(), output);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_end_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
}

::google::protobuf::uint8* OperationMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp create_time = 1;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_create_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_end_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
  return target;
}

size_t OperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Timestamp create_time = 1;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
    MergeFrom(*source);
  }
}

void OperationMetadata::MergeFrom(const OperationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
}

void OperationMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationMetadata::CopyFrom(const OperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.OperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationMetadata::IsInitialized() const {
  return true;
}

void OperationMetadata::Swap(OperationMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationMetadata::InternalSwap(OperationMetadata* other) {
  using std::swap;
  swap(create_time_, other->create_time_);
  swap(end_time_, other->end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperationMetadata::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetVulnzOccurrencesSummaryRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVulnzOccurrencesSummaryRequest::kParentFieldNumber;
const int GetVulnzOccurrencesSummaryRequest::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVulnzOccurrencesSummaryRequest::GetVulnzOccurrencesSummaryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetVulnzOccurrencesSummaryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
}
GetVulnzOccurrencesSummaryRequest::GetVulnzOccurrencesSummaryRequest(const GetVulnzOccurrencesSummaryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
}

void GetVulnzOccurrencesSummaryRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetVulnzOccurrencesSummaryRequest::~GetVulnzOccurrencesSummaryRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
  SharedDtor();
}

void GetVulnzOccurrencesSummaryRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetVulnzOccurrencesSummaryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetVulnzOccurrencesSummaryRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVulnzOccurrencesSummaryRequest& GetVulnzOccurrencesSummaryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetVulnzOccurrencesSummaryRequest.base);
  return *internal_default_instance();
}


void GetVulnzOccurrencesSummaryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetVulnzOccurrencesSummaryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
  return false;
#undef DO_
}

void GetVulnzOccurrencesSummaryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
}

::google::protobuf::uint8* GetVulnzOccurrencesSummaryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
  return target;
}

size_t GetVulnzOccurrencesSummaryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVulnzOccurrencesSummaryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVulnzOccurrencesSummaryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVulnzOccurrencesSummaryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
    MergeFrom(*source);
  }
}

void GetVulnzOccurrencesSummaryRequest::MergeFrom(const GetVulnzOccurrencesSummaryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
}

void GetVulnzOccurrencesSummaryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVulnzOccurrencesSummaryRequest::CopyFrom(const GetVulnzOccurrencesSummaryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVulnzOccurrencesSummaryRequest::IsInitialized() const {
  return true;
}

void GetVulnzOccurrencesSummaryRequest::Swap(GetVulnzOccurrencesSummaryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVulnzOccurrencesSummaryRequest::InternalSwap(GetVulnzOccurrencesSummaryRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetVulnzOccurrencesSummaryRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetVulnzOccurrencesSummaryResponse_SeverityCount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVulnzOccurrencesSummaryResponse_SeverityCount::kSeverityFieldNumber;
const int GetVulnzOccurrencesSummaryResponse_SeverityCount::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVulnzOccurrencesSummaryResponse_SeverityCount::GetVulnzOccurrencesSummaryResponse_SeverityCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetVulnzOccurrencesSummaryResponse_SeverityCount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
}
GetVulnzOccurrencesSummaryResponse_SeverityCount::GetVulnzOccurrencesSummaryResponse_SeverityCount(const GetVulnzOccurrencesSummaryResponse_SeverityCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&severity_) -
    reinterpret_cast<char*>(&count_)) + sizeof(severity_));
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
}

void GetVulnzOccurrencesSummaryResponse_SeverityCount::SharedCtor() {
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&count_)) + sizeof(severity_));
}

GetVulnzOccurrencesSummaryResponse_SeverityCount::~GetVulnzOccurrencesSummaryResponse_SeverityCount() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
  SharedDtor();
}

void GetVulnzOccurrencesSummaryResponse_SeverityCount::SharedDtor() {
}

void GetVulnzOccurrencesSummaryResponse_SeverityCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetVulnzOccurrencesSummaryResponse_SeverityCount::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVulnzOccurrencesSummaryResponse_SeverityCount& GetVulnzOccurrencesSummaryResponse_SeverityCount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetVulnzOccurrencesSummaryResponse_SeverityCount.base);
  return *internal_default_instance();
}


void GetVulnzOccurrencesSummaryResponse_SeverityCount::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&count_)) + sizeof(severity_));
  _internal_metadata_.Clear();
}

bool GetVulnzOccurrencesSummaryResponse_SeverityCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Severity severity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_severity(static_cast< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Severity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
  return false;
#undef DO_
}

void GetVulnzOccurrencesSummaryResponse_SeverityCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Severity severity = 1;
  if (this->severity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->severity(), output);
  }

  // int64 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
}

::google::protobuf::uint8* GetVulnzOccurrencesSummaryResponse_SeverityCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Severity severity = 1;
  if (this->severity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->severity(), target);
  }

  // int64 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
  return target;
}

size_t GetVulnzOccurrencesSummaryResponse_SeverityCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Severity severity = 1;
  if (this->severity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->severity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVulnzOccurrencesSummaryResponse_SeverityCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVulnzOccurrencesSummaryResponse_SeverityCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVulnzOccurrencesSummaryResponse_SeverityCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
    MergeFrom(*source);
  }
}

void GetVulnzOccurrencesSummaryResponse_SeverityCount::MergeFrom(const GetVulnzOccurrencesSummaryResponse_SeverityCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.severity() != 0) {
    set_severity(from.severity());
  }
}

void GetVulnzOccurrencesSummaryResponse_SeverityCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVulnzOccurrencesSummaryResponse_SeverityCount::CopyFrom(const GetVulnzOccurrencesSummaryResponse_SeverityCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVulnzOccurrencesSummaryResponse_SeverityCount::IsInitialized() const {
  return true;
}

void GetVulnzOccurrencesSummaryResponse_SeverityCount::Swap(GetVulnzOccurrencesSummaryResponse_SeverityCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVulnzOccurrencesSummaryResponse_SeverityCount::InternalSwap(GetVulnzOccurrencesSummaryResponse_SeverityCount* other) {
  using std::swap;
  swap(count_, other->count_);
  swap(severity_, other->severity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetVulnzOccurrencesSummaryResponse_SeverityCount::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetVulnzOccurrencesSummaryResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVulnzOccurrencesSummaryResponse::kCountsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVulnzOccurrencesSummaryResponse::GetVulnzOccurrencesSummaryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetVulnzOccurrencesSummaryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
}
GetVulnzOccurrencesSummaryResponse::GetVulnzOccurrencesSummaryResponse(const GetVulnzOccurrencesSummaryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      counts_(from.counts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
}

void GetVulnzOccurrencesSummaryResponse::SharedCtor() {
}

GetVulnzOccurrencesSummaryResponse::~GetVulnzOccurrencesSummaryResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
  SharedDtor();
}

void GetVulnzOccurrencesSummaryResponse::SharedDtor() {
}

void GetVulnzOccurrencesSummaryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetVulnzOccurrencesSummaryResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetVulnzOccurrencesSummaryResponse& GetVulnzOccurrencesSummaryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetVulnzOccurrencesSummaryResponse.base);
  return *internal_default_instance();
}


void GetVulnzOccurrencesSummaryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  counts_.Clear();
  _internal_metadata_.Clear();
}

bool GetVulnzOccurrencesSummaryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount counts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_counts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
  return false;
#undef DO_
}

void GetVulnzOccurrencesSummaryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount counts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->counts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->counts(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
}

::google::protobuf::uint8* GetVulnzOccurrencesSummaryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount counts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->counts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->counts(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
  return target;
}

size_t GetVulnzOccurrencesSummaryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse.SeverityCount counts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->counts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->counts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVulnzOccurrencesSummaryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVulnzOccurrencesSummaryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVulnzOccurrencesSummaryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
    MergeFrom(*source);
  }
}

void GetVulnzOccurrencesSummaryResponse::MergeFrom(const GetVulnzOccurrencesSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  counts_.MergeFrom(from.counts_);
}

void GetVulnzOccurrencesSummaryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVulnzOccurrencesSummaryResponse::CopyFrom(const GetVulnzOccurrencesSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetVulnzOccurrencesSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVulnzOccurrencesSummaryResponse::IsInitialized() const {
  return true;
}

void GetVulnzOccurrencesSummaryResponse::Swap(GetVulnzOccurrencesSummaryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVulnzOccurrencesSummaryResponse::InternalSwap(GetVulnzOccurrencesSummaryResponse* other) {
  using std::swap;
  CastToBase(&counts_)->InternalSwap(CastToBase(&other->counts_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetVulnzOccurrencesSummaryResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetScanConfigRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetScanConfigRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetScanConfigRequest::GetScanConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetScanConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
}
GetScanConfigRequest::GetScanConfigRequest(const GetScanConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
}

void GetScanConfigRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetScanConfigRequest::~GetScanConfigRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
  SharedDtor();
}

void GetScanConfigRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetScanConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetScanConfigRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetScanConfigRequest& GetScanConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_GetScanConfigRequest.base);
  return *internal_default_instance();
}


void GetScanConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetScanConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
  return false;
#undef DO_
}

void GetScanConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
}

::google::protobuf::uint8* GetScanConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
  return target;
}

size_t GetScanConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetScanConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetScanConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetScanConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
    MergeFrom(*source);
  }
}

void GetScanConfigRequest::MergeFrom(const GetScanConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetScanConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetScanConfigRequest::CopyFrom(const GetScanConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.GetScanConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetScanConfigRequest::IsInitialized() const {
  return true;
}

void GetScanConfigRequest::Swap(GetScanConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetScanConfigRequest::InternalSwap(GetScanConfigRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetScanConfigRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListScanConfigsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListScanConfigsRequest::kParentFieldNumber;
const int ListScanConfigsRequest::kFilterFieldNumber;
const int ListScanConfigsRequest::kPageSizeFieldNumber;
const int ListScanConfigsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListScanConfigsRequest::ListScanConfigsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListScanConfigsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
}
ListScanConfigsRequest::ListScanConfigsRequest(const ListScanConfigsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
}

void ListScanConfigsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListScanConfigsRequest::~ListScanConfigsRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
  SharedDtor();
}

void ListScanConfigsRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListScanConfigsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListScanConfigsRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListScanConfigsRequest& ListScanConfigsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListScanConfigsRequest.base);
  return *internal_default_instance();
}


void ListScanConfigsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListScanConfigsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
  return false;
#undef DO_
}

void ListScanConfigsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
}

::google::protobuf::uint8* ListScanConfigsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
  return target;
}

size_t ListScanConfigsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListScanConfigsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListScanConfigsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListScanConfigsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
    MergeFrom(*source);
  }
}

void ListScanConfigsRequest::MergeFrom(const ListScanConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListScanConfigsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListScanConfigsRequest::CopyFrom(const ListScanConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListScanConfigsRequest::IsInitialized() const {
  return true;
}

void ListScanConfigsRequest::Swap(ListScanConfigsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListScanConfigsRequest::InternalSwap(ListScanConfigsRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListScanConfigsRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListScanConfigsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListScanConfigsResponse::kScanConfigsFieldNumber;
const int ListScanConfigsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListScanConfigsResponse::ListScanConfigsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListScanConfigsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
}
ListScanConfigsResponse::ListScanConfigsResponse(const ListScanConfigsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scan_configs_(from.scan_configs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
}

void ListScanConfigsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListScanConfigsResponse::~ListScanConfigsResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
  SharedDtor();
}

void ListScanConfigsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListScanConfigsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListScanConfigsResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListScanConfigsResponse& ListScanConfigsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_ListScanConfigsResponse.base);
  return *internal_default_instance();
}


void ListScanConfigsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scan_configs_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListScanConfigsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.containeranalysis.v1alpha1.ScanConfig scan_configs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_scan_configs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
  return false;
#undef DO_
}

void ListScanConfigsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1alpha1.ScanConfig scan_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scan_configs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->scan_configs(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
}

::google::protobuf::uint8* ListScanConfigsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1alpha1.ScanConfig scan_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scan_configs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->scan_configs(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
  return target;
}

size_t ListScanConfigsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.containeranalysis.v1alpha1.ScanConfig scan_configs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->scan_configs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->scan_configs(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListScanConfigsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListScanConfigsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListScanConfigsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
    MergeFrom(*source);
  }
}

void ListScanConfigsResponse::MergeFrom(const ListScanConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scan_configs_.MergeFrom(from.scan_configs_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListScanConfigsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListScanConfigsResponse::CopyFrom(const ListScanConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.ListScanConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListScanConfigsResponse::IsInitialized() const {
  return true;
}

void ListScanConfigsResponse::Swap(ListScanConfigsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListScanConfigsResponse::InternalSwap(ListScanConfigsResponse* other) {
  using std::swap;
  CastToBase(&scan_configs_)->InternalSwap(CastToBase(&other->scan_configs_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListScanConfigsResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateScanConfigRequest::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_UpdateScanConfigRequest_default_instance_._instance.get_mutable()->scan_config_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::ScanConfig*>(
      ::google::devtools::containeranalysis::v1alpha1::ScanConfig::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_UpdateScanConfigRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateScanConfigRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateScanConfigRequest::kNameFieldNumber;
const int UpdateScanConfigRequest::kScanConfigFieldNumber;
const int UpdateScanConfigRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateScanConfigRequest::UpdateScanConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_UpdateScanConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
}
UpdateScanConfigRequest::UpdateScanConfigRequest(const UpdateScanConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_scan_config()) {
    scan_config_ = new ::google::devtools::containeranalysis::v1alpha1::ScanConfig(*from.scan_config_);
  } else {
    scan_config_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
}

void UpdateScanConfigRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scan_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&scan_config_)) + sizeof(update_mask_));
}

UpdateScanConfigRequest::~UpdateScanConfigRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
  SharedDtor();
}

void UpdateScanConfigRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete scan_config_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateScanConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateScanConfigRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateScanConfigRequest& UpdateScanConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::scc_info_UpdateScanConfigRequest.base);
  return *internal_default_instance();
}


void UpdateScanConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && scan_config_ != NULL) {
    delete scan_config_;
  }
  scan_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateScanConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.ScanConfig scan_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scan_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
  return false;
#undef DO_
}

void UpdateScanConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.ScanConfig scan_config = 2;
  if (this->has_scan_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_scan_config(), output);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_update_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
}

::google::protobuf::uint8* UpdateScanConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.ScanConfig scan_config = 2;
  if (this->has_scan_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_scan_config(), deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_update_mask(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
  return target;
}

size_t UpdateScanConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.devtools.containeranalysis.v1alpha1.ScanConfig scan_config = 2;
  if (this->has_scan_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scan_config_);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateScanConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateScanConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateScanConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
    MergeFrom(*source);
  }
}

void UpdateScanConfigRequest::MergeFrom(const UpdateScanConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_scan_config()) {
    mutable_scan_config()->::google::devtools::containeranalysis::v1alpha1::ScanConfig::MergeFrom(from.scan_config());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateScanConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateScanConfigRequest::CopyFrom(const UpdateScanConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.UpdateScanConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateScanConfigRequest::IsInitialized() const {
  return true;
}

void UpdateScanConfigRequest::Swap(UpdateScanConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateScanConfigRequest::InternalSwap(UpdateScanConfigRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(scan_config_, other->scan_config_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateScanConfigRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fcontaineranalysis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace containeranalysis
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::Occurrence* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::Occurrence >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::Occurrence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::Resource* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::Resource >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::Resource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::Note_RelatedUrl* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::Note_RelatedUrl >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::Note_RelatedUrl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::Note* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::Note >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::Note >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::Deployable_Deployment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::Deployable* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::Deployable >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::Deployable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::Discovery_Discovered >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::Discovery* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::Discovery >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::Discovery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::BuildType* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::BuildType >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::BuildType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::BuildSignature* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::BuildSignature >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::BuildSignature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::PgpSignedAttestation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_AttestationAuthorityHint* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_AttestationAuthorityHint >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_AttestationAuthorityHint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority_Attestation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::AttestationAuthority >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::BuildDetails* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::BuildDetails >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::BuildDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::ScanConfig* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::ScanConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::ScanConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::DeleteOccurrenceRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::DeleteOccurrenceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::DeleteOccurrenceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::GetNoteRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::GetNoteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::GetNoteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceNoteRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceNoteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceNoteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::ListNotesRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::ListNotesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::ListNotesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::ListNotesResponse* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::ListNotesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::ListNotesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::DeleteNoteRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::DeleteNoteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::DeleteNoteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::OperationMetadata* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::OperationMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::OperationMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse_SeverityCount* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse_SeverityCount >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse_SeverityCount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::GetScanConfigRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::GetScanConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::GetScanConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
