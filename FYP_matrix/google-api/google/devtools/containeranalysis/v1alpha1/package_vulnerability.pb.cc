// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto

#include "google/devtools/containeranalysis/v1alpha1/package_vulnerability.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VulnerabilityType_Version;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VulnerabilityType_PackageIssue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VulnerabilityType_VulnerabilityLocation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_VulnerabilityType_Detail;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto
namespace google {
namespace devtools {
namespace containeranalysis {
namespace v1alpha1 {
class VulnerabilityType_VersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VulnerabilityType_Version>
      _instance;
} _VulnerabilityType_Version_default_instance_;
class VulnerabilityType_DetailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VulnerabilityType_Detail>
      _instance;
} _VulnerabilityType_Detail_default_instance_;
class VulnerabilityType_VulnerabilityDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VulnerabilityType_VulnerabilityDetails>
      _instance;
} _VulnerabilityType_VulnerabilityDetails_default_instance_;
class VulnerabilityType_PackageIssueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VulnerabilityType_PackageIssue>
      _instance;
} _VulnerabilityType_PackageIssue_default_instance_;
class VulnerabilityType_VulnerabilityLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VulnerabilityType_VulnerabilityLocation>
      _instance;
} _VulnerabilityType_VulnerabilityLocation_default_instance_;
class VulnerabilityTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VulnerabilityType>
      _instance;
} _VulnerabilityType_default_instance_;
}  // namespace v1alpha1
}  // namespace containeranalysis
}  // namespace devtools
}  // namespace google
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto {
static void InitDefaultsVulnerabilityType_Version() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_Version_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VulnerabilityType_Version =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVulnerabilityType_Version}, {}};

static void InitDefaultsVulnerabilityType_Detail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_Detail_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_VulnerabilityType_Detail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVulnerabilityType_Detail}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_Version.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_VulnerabilityLocation.base,}};

static void InitDefaultsVulnerabilityType_VulnerabilityDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_VulnerabilityDetails_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VulnerabilityType_VulnerabilityDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVulnerabilityType_VulnerabilityDetails}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_PackageIssue.base,}};

static void InitDefaultsVulnerabilityType_PackageIssue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_PackageIssue_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_PackageIssue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_PackageIssue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VulnerabilityType_PackageIssue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVulnerabilityType_PackageIssue}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_VulnerabilityLocation.base,}};

static void InitDefaultsVulnerabilityType_VulnerabilityLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_VulnerabilityLocation_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VulnerabilityType_VulnerabilityLocation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVulnerabilityType_VulnerabilityLocation}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_Version.base,}};

static void InitDefaultsVulnerabilityType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VulnerabilityType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVulnerabilityType}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_Detail.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VulnerabilityType_Version.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VulnerabilityType_Detail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VulnerabilityType_VulnerabilityDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VulnerabilityType_PackageIssue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VulnerabilityType_VulnerabilityLocation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VulnerabilityType.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version, epoch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version, revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version, kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail, cpe_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail, package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail, min_affected_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail, max_affected_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail, severity_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail, fixed_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail, package_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail, is_obsolete_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails, severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails, cvss_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails, package_issue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_PackageIssue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_PackageIssue, affected_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_PackageIssue, fixed_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_PackageIssue, severity_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation, cpe_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation, package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType, cvss_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType, severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType, details_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version)},
  { 9, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail)},
  { 23, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails)},
  { 32, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_PackageIssue)},
  { 40, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation)},
  { 48, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::VulnerabilityType)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_Version_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_Detail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_VulnerabilityDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_PackageIssue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_VulnerabilityLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nFgoogle/devtools/containeranalysis/v1al"
      "pha1/package_vulnerability.proto\022*google"
      ".devtools.containeranalysis.v1alpha1\032\034go"
      "ogle/api/annotations.proto\"\325\014\n\021Vulnerabi"
      "lityType\022\022\n\ncvss_score\030\002 \001(\002\022X\n\010severity"
      "\030\003 \001(\0162F.google.devtools.containeranalys"
      "is.v1alpha1.VulnerabilityType.Severity\022U"
      "\n\007details\030\004 \003(\0132D.google.devtools.contai"
      "neranalysis.v1alpha1.VulnerabilityType.D"
      "etail\032\316\001\n\007Version\022\r\n\005epoch\030\001 \001(\005\022\014\n\004name"
      "\030\002 \001(\t\022\020\n\010revision\030\003 \001(\t\022_\n\004kind\030\005 \001(\0162Q"
      ".google.devtools.containeranalysis.v1alp"
      "ha1.VulnerabilityType.Version.VersionKin"
      "d\"3\n\013VersionKind\022\n\n\006NORMAL\020\000\022\013\n\007MINIMUM\020"
      "\001\022\013\n\007MAXIMUM\020\002\032\270\003\n\006Detail\022\017\n\007cpe_uri\030\001 \001"
      "(\t\022\017\n\007package\030\010 \001(\t\022c\n\024min_affected_vers"
      "ion\030\006 \001(\0132E.google.devtools.containerana"
      "lysis.v1alpha1.VulnerabilityType.Version"
      "\022c\n\024max_affected_version\030\007 \001(\0132E.google."
      "devtools.containeranalysis.v1alpha1.Vuln"
      "erabilityType.Version\022\025\n\rseverity_name\030\004"
      " \001(\t\022\023\n\013description\030\t \001(\t\022k\n\016fixed_locat"
      "ion\030\005 \001(\0132S.google.devtools.containerana"
      "lysis.v1alpha1.VulnerabilityType.Vulnera"
      "bilityLocation\022\024\n\014package_type\030\n \001(\t\022\023\n\013"
      "is_obsolete\030\013 \001(\010\032\365\001\n\024VulnerabilityDetai"
      "ls\022\014\n\004type\030\003 \001(\t\022X\n\010severity\030\004 \001(\0162F.goo"
      "gle.devtools.containeranalysis.v1alpha1."
      "VulnerabilityType.Severity\022\022\n\ncvss_score"
      "\030\005 \001(\002\022a\n\rpackage_issue\030\006 \003(\0132J.google.d"
      "evtools.containeranalysis.v1alpha1.Vulne"
      "rabilityType.PackageIssue\032\202\002\n\014PackageIss"
      "ue\022n\n\021affected_location\030\001 \001(\0132S.google.d"
      "evtools.containeranalysis.v1alpha1.Vulne"
      "rabilityType.VulnerabilityLocation\022k\n\016fi"
      "xed_location\030\002 \001(\0132S.google.devtools.con"
      "taineranalysis.v1alpha1.VulnerabilityTyp"
      "e.VulnerabilityLocation\022\025\n\rseverity_name"
      "\030\003 \001(\t\032\221\001\n\025VulnerabilityLocation\022\017\n\007cpe_"
      "uri\030\001 \001(\t\022\017\n\007package\030\002 \001(\t\022V\n\007version\030\004 "
      "\001(\0132E.google.devtools.containeranalysis."
      "v1alpha1.VulnerabilityType.Version\"^\n\010Se"
      "verity\022\030\n\024SEVERITY_UNSPECIFIED\020\000\022\013\n\007MINI"
      "MAL\020\001\022\007\n\003LOW\020\002\022\n\n\006MEDIUM\020\003\022\010\n\004HIGH\020\004\022\014\n\010"
      "CRITICAL\020\005B\214\001\n%com.google.containeranaly"
      "sis.v1alpha1P\001Z[google.golang.org/genpro"
      "to/googleapis/devtools/containeranalysis"
      "/v1alpha1;containeranalysis\242\002\003GCAb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1921);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto
namespace google {
namespace devtools {
namespace containeranalysis {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* VulnerabilityType_Version_VersionKind_descriptor() {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_enum_descriptors[0];
}
bool VulnerabilityType_Version_VersionKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VulnerabilityType_Version_VersionKind VulnerabilityType_Version::NORMAL;
const VulnerabilityType_Version_VersionKind VulnerabilityType_Version::MINIMUM;
const VulnerabilityType_Version_VersionKind VulnerabilityType_Version::MAXIMUM;
const VulnerabilityType_Version_VersionKind VulnerabilityType_Version::VersionKind_MIN;
const VulnerabilityType_Version_VersionKind VulnerabilityType_Version::VersionKind_MAX;
const int VulnerabilityType_Version::VersionKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* VulnerabilityType_Severity_descriptor() {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_enum_descriptors[1];
}
bool VulnerabilityType_Severity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VulnerabilityType_Severity VulnerabilityType::SEVERITY_UNSPECIFIED;
const VulnerabilityType_Severity VulnerabilityType::MINIMAL;
const VulnerabilityType_Severity VulnerabilityType::LOW;
const VulnerabilityType_Severity VulnerabilityType::MEDIUM;
const VulnerabilityType_Severity VulnerabilityType::HIGH;
const VulnerabilityType_Severity VulnerabilityType::CRITICAL;
const VulnerabilityType_Severity VulnerabilityType::Severity_MIN;
const VulnerabilityType_Severity VulnerabilityType::Severity_MAX;
const int VulnerabilityType::Severity_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void VulnerabilityType_Version::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VulnerabilityType_Version::kEpochFieldNumber;
const int VulnerabilityType_Version::kNameFieldNumber;
const int VulnerabilityType_Version::kRevisionFieldNumber;
const int VulnerabilityType_Version::kKindFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VulnerabilityType_Version::VulnerabilityType_Version()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_Version.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
}
VulnerabilityType_Version::VulnerabilityType_Version(const VulnerabilityType_Version& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.revision().size() > 0) {
    revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revision_);
  }
  ::memcpy(&epoch_, &from.epoch_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&epoch_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
}

void VulnerabilityType_Version::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&epoch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&epoch_)) + sizeof(kind_));
}

VulnerabilityType_Version::~VulnerabilityType_Version() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
  SharedDtor();
}

void VulnerabilityType_Version::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VulnerabilityType_Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VulnerabilityType_Version::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VulnerabilityType_Version& VulnerabilityType_Version::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_Version.base);
  return *internal_default_instance();
}


void VulnerabilityType_Version::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&epoch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&epoch_)) + sizeof(kind_));
  _internal_metadata_.Clear();
}

bool VulnerabilityType_Version::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 epoch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &epoch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string revision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revision()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->revision().data(), static_cast<int>(this->revision().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version.revision"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version.VersionKind kind = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version_VersionKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
  return false;
#undef DO_
}

void VulnerabilityType_Version::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 epoch = 1;
  if (this->epoch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->epoch(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string revision = 3;
  if (this->revision().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->revision().data(), static_cast<int>(this->revision().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version.revision");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->revision(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version.VersionKind kind = 5;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->kind(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
}

::google::protobuf::uint8* VulnerabilityType_Version::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 epoch = 1;
  if (this->epoch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->epoch(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string revision = 3;
  if (this->revision().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->revision().data(), static_cast<int>(this->revision().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version.revision");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->revision(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version.VersionKind kind = 5;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->kind(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
  return target;
}

size_t VulnerabilityType_Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string revision = 3;
  if (this->revision().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->revision());
  }

  // int32 epoch = 1;
  if (this->epoch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->epoch());
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version.VersionKind kind = 5;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VulnerabilityType_Version::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
  GOOGLE_DCHECK_NE(&from, this);
  const VulnerabilityType_Version* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VulnerabilityType_Version>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
    MergeFrom(*source);
  }
}

void VulnerabilityType_Version::MergeFrom(const VulnerabilityType_Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.revision().size() > 0) {

    revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revision_);
  }
  if (from.epoch() != 0) {
    set_epoch(from.epoch());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void VulnerabilityType_Version::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VulnerabilityType_Version::CopyFrom(const VulnerabilityType_Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VulnerabilityType_Version::IsInitialized() const {
  return true;
}

void VulnerabilityType_Version::Swap(VulnerabilityType_Version* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VulnerabilityType_Version::InternalSwap(VulnerabilityType_Version* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  revision_.Swap(&other->revision_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(epoch_, other->epoch_);
  swap(kind_, other->kind_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VulnerabilityType_Version::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VulnerabilityType_Detail::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_Detail_default_instance_._instance.get_mutable()->min_affected_version_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version*>(
      ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_Detail_default_instance_._instance.get_mutable()->max_affected_version_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version*>(
      ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_Detail_default_instance_._instance.get_mutable()->fixed_location_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation*>(
      ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VulnerabilityType_Detail::kCpeUriFieldNumber;
const int VulnerabilityType_Detail::kPackageFieldNumber;
const int VulnerabilityType_Detail::kMinAffectedVersionFieldNumber;
const int VulnerabilityType_Detail::kMaxAffectedVersionFieldNumber;
const int VulnerabilityType_Detail::kSeverityNameFieldNumber;
const int VulnerabilityType_Detail::kDescriptionFieldNumber;
const int VulnerabilityType_Detail::kFixedLocationFieldNumber;
const int VulnerabilityType_Detail::kPackageTypeFieldNumber;
const int VulnerabilityType_Detail::kIsObsoleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VulnerabilityType_Detail::VulnerabilityType_Detail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_Detail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
}
VulnerabilityType_Detail::VulnerabilityType_Detail(const VulnerabilityType_Detail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cpe_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cpe_uri().size() > 0) {
    cpe_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpe_uri_);
  }
  severity_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.severity_name().size() > 0) {
    severity_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.severity_name_);
  }
  package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.package().size() > 0) {
    package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  package_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.package_type().size() > 0) {
    package_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_type_);
  }
  if (from.has_fixed_location()) {
    fixed_location_ = new ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation(*from.fixed_location_);
  } else {
    fixed_location_ = NULL;
  }
  if (from.has_min_affected_version()) {
    min_affected_version_ = new ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version(*from.min_affected_version_);
  } else {
    min_affected_version_ = NULL;
  }
  if (from.has_max_affected_version()) {
    max_affected_version_ = new ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version(*from.max_affected_version_);
  } else {
    max_affected_version_ = NULL;
  }
  is_obsolete_ = from.is_obsolete_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
}

void VulnerabilityType_Detail::SharedCtor() {
  cpe_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  severity_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fixed_location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_obsolete_) -
      reinterpret_cast<char*>(&fixed_location_)) + sizeof(is_obsolete_));
}

VulnerabilityType_Detail::~VulnerabilityType_Detail() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
  SharedDtor();
}

void VulnerabilityType_Detail::SharedDtor() {
  cpe_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  severity_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fixed_location_;
  if (this != internal_default_instance()) delete min_affected_version_;
  if (this != internal_default_instance()) delete max_affected_version_;
}

void VulnerabilityType_Detail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VulnerabilityType_Detail::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VulnerabilityType_Detail& VulnerabilityType_Detail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_Detail.base);
  return *internal_default_instance();
}


void VulnerabilityType_Detail::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cpe_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  severity_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && fixed_location_ != NULL) {
    delete fixed_location_;
  }
  fixed_location_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_affected_version_ != NULL) {
    delete min_affected_version_;
  }
  min_affected_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_affected_version_ != NULL) {
    delete max_affected_version_;
  }
  max_affected_version_ = NULL;
  is_obsolete_ = false;
  _internal_metadata_.Clear();
}

bool VulnerabilityType_Detail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cpe_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpe_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cpe_uri().data(), static_cast<int>(this->cpe_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.cpe_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string severity_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_severity_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->severity_name().data(), static_cast<int>(this->severity_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.severity_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation fixed_location = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fixed_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version min_affected_version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_affected_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version max_affected_version = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_affected_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string package = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package().data(), static_cast<int>(this->package().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.package"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string package_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package_type().data(), static_cast<int>(this->package_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.package_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_obsolete = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_obsolete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
  return false;
#undef DO_
}

void VulnerabilityType_Detail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cpe_uri = 1;
  if (this->cpe_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpe_uri().data(), static_cast<int>(this->cpe_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.cpe_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cpe_uri(), output);
  }

  // string severity_name = 4;
  if (this->severity_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->severity_name().data(), static_cast<int>(this->severity_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.severity_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->severity_name(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation fixed_location = 5;
  if (this->has_fixed_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_fixed_location(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version min_affected_version = 6;
  if (this->has_min_affected_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_min_affected_version(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version max_affected_version = 7;
  if (this->has_max_affected_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_max_affected_version(), output);
  }

  // string package = 8;
  if (this->package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package().data(), static_cast<int>(this->package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->package(), output);
  }

  // string description = 9;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->description(), output);
  }

  // string package_type = 10;
  if (this->package_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_type().data(), static_cast<int>(this->package_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.package_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->package_type(), output);
  }

  // bool is_obsolete = 11;
  if (this->is_obsolete() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_obsolete(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
}

::google::protobuf::uint8* VulnerabilityType_Detail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cpe_uri = 1;
  if (this->cpe_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpe_uri().data(), static_cast<int>(this->cpe_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.cpe_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cpe_uri(), target);
  }

  // string severity_name = 4;
  if (this->severity_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->severity_name().data(), static_cast<int>(this->severity_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.severity_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->severity_name(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation fixed_location = 5;
  if (this->has_fixed_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_fixed_location(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version min_affected_version = 6;
  if (this->has_min_affected_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_min_affected_version(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version max_affected_version = 7;
  if (this->has_max_affected_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_max_affected_version(), deterministic, target);
  }

  // string package = 8;
  if (this->package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package().data(), static_cast<int>(this->package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->package(), target);
  }

  // string description = 9;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->description(), target);
  }

  // string package_type = 10;
  if (this->package_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_type().data(), static_cast<int>(this->package_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail.package_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->package_type(), target);
  }

  // bool is_obsolete = 11;
  if (this->is_obsolete() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_obsolete(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
  return target;
}

size_t VulnerabilityType_Detail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cpe_uri = 1;
  if (this->cpe_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cpe_uri());
  }

  // string severity_name = 4;
  if (this->severity_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->severity_name());
  }

  // string package = 8;
  if (this->package().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package());
  }

  // string description = 9;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string package_type = 10;
  if (this->package_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package_type());
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation fixed_location = 5;
  if (this->has_fixed_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fixed_location_);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version min_affected_version = 6;
  if (this->has_min_affected_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_affected_version_);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version max_affected_version = 7;
  if (this->has_max_affected_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_affected_version_);
  }

  // bool is_obsolete = 11;
  if (this->is_obsolete() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VulnerabilityType_Detail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
  GOOGLE_DCHECK_NE(&from, this);
  const VulnerabilityType_Detail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VulnerabilityType_Detail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
    MergeFrom(*source);
  }
}

void VulnerabilityType_Detail::MergeFrom(const VulnerabilityType_Detail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cpe_uri().size() > 0) {

    cpe_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpe_uri_);
  }
  if (from.severity_name().size() > 0) {

    severity_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.severity_name_);
  }
  if (from.package().size() > 0) {

    package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.package_type().size() > 0) {

    package_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_type_);
  }
  if (from.has_fixed_location()) {
    mutable_fixed_location()->::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation::MergeFrom(from.fixed_location());
  }
  if (from.has_min_affected_version()) {
    mutable_min_affected_version()->::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version::MergeFrom(from.min_affected_version());
  }
  if (from.has_max_affected_version()) {
    mutable_max_affected_version()->::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version::MergeFrom(from.max_affected_version());
  }
  if (from.is_obsolete() != 0) {
    set_is_obsolete(from.is_obsolete());
  }
}

void VulnerabilityType_Detail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VulnerabilityType_Detail::CopyFrom(const VulnerabilityType_Detail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VulnerabilityType_Detail::IsInitialized() const {
  return true;
}

void VulnerabilityType_Detail::Swap(VulnerabilityType_Detail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VulnerabilityType_Detail::InternalSwap(VulnerabilityType_Detail* other) {
  using std::swap;
  cpe_uri_.Swap(&other->cpe_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  severity_name_.Swap(&other->severity_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  package_.Swap(&other->package_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  package_type_.Swap(&other->package_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(fixed_location_, other->fixed_location_);
  swap(min_affected_version_, other->min_affected_version_);
  swap(max_affected_version_, other->max_affected_version_);
  swap(is_obsolete_, other->is_obsolete_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VulnerabilityType_Detail::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VulnerabilityType_VulnerabilityDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VulnerabilityType_VulnerabilityDetails::kTypeFieldNumber;
const int VulnerabilityType_VulnerabilityDetails::kSeverityFieldNumber;
const int VulnerabilityType_VulnerabilityDetails::kCvssScoreFieldNumber;
const int VulnerabilityType_VulnerabilityDetails::kPackageIssueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VulnerabilityType_VulnerabilityDetails::VulnerabilityType_VulnerabilityDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_VulnerabilityDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
}
VulnerabilityType_VulnerabilityDetails::VulnerabilityType_VulnerabilityDetails(const VulnerabilityType_VulnerabilityDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      package_issue_(from.package_issue_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  ::memcpy(&severity_, &from.severity_,
    static_cast<size_t>(reinterpret_cast<char*>(&cvss_score_) -
    reinterpret_cast<char*>(&severity_)) + sizeof(cvss_score_));
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
}

void VulnerabilityType_VulnerabilityDetails::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&severity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cvss_score_) -
      reinterpret_cast<char*>(&severity_)) + sizeof(cvss_score_));
}

VulnerabilityType_VulnerabilityDetails::~VulnerabilityType_VulnerabilityDetails() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
  SharedDtor();
}

void VulnerabilityType_VulnerabilityDetails::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VulnerabilityType_VulnerabilityDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VulnerabilityType_VulnerabilityDetails::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VulnerabilityType_VulnerabilityDetails& VulnerabilityType_VulnerabilityDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_VulnerabilityDetails.base);
  return *internal_default_instance();
}


void VulnerabilityType_VulnerabilityDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  package_issue_.Clear();
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&severity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cvss_score_) -
      reinterpret_cast<char*>(&severity_)) + sizeof(cvss_score_));
  _internal_metadata_.Clear();
}

bool VulnerabilityType_VulnerabilityDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Severity severity = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_severity(static_cast< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Severity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cvss_score = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cvss_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue package_issue = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_package_issue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
  return false;
#undef DO_
}

void VulnerabilityType_VulnerabilityDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Severity severity = 4;
  if (this->severity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->severity(), output);
  }

  // float cvss_score = 5;
  if (this->cvss_score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->cvss_score(), output);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue package_issue = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->package_issue_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->package_issue(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
}

::google::protobuf::uint8* VulnerabilityType_VulnerabilityDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Severity severity = 4;
  if (this->severity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->severity(), target);
  }

  // float cvss_score = 5;
  if (this->cvss_score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->cvss_score(), target);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue package_issue = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->package_issue_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->package_issue(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
  return target;
}

size_t VulnerabilityType_VulnerabilityDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue package_issue = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->package_issue_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->package_issue(static_cast<int>(i)));
    }
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Severity severity = 4;
  if (this->severity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->severity());
  }

  // float cvss_score = 5;
  if (this->cvss_score() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VulnerabilityType_VulnerabilityDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const VulnerabilityType_VulnerabilityDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VulnerabilityType_VulnerabilityDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
    MergeFrom(*source);
  }
}

void VulnerabilityType_VulnerabilityDetails::MergeFrom(const VulnerabilityType_VulnerabilityDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  package_issue_.MergeFrom(from.package_issue_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.severity() != 0) {
    set_severity(from.severity());
  }
  if (from.cvss_score() != 0) {
    set_cvss_score(from.cvss_score());
  }
}

void VulnerabilityType_VulnerabilityDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VulnerabilityType_VulnerabilityDetails::CopyFrom(const VulnerabilityType_VulnerabilityDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VulnerabilityType_VulnerabilityDetails::IsInitialized() const {
  return true;
}

void VulnerabilityType_VulnerabilityDetails::Swap(VulnerabilityType_VulnerabilityDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VulnerabilityType_VulnerabilityDetails::InternalSwap(VulnerabilityType_VulnerabilityDetails* other) {
  using std::swap;
  CastToBase(&package_issue_)->InternalSwap(CastToBase(&other->package_issue_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(severity_, other->severity_);
  swap(cvss_score_, other->cvss_score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VulnerabilityType_VulnerabilityDetails::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VulnerabilityType_PackageIssue::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_PackageIssue_default_instance_._instance.get_mutable()->affected_location_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation*>(
      ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_PackageIssue_default_instance_._instance.get_mutable()->fixed_location_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation*>(
      ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VulnerabilityType_PackageIssue::kAffectedLocationFieldNumber;
const int VulnerabilityType_PackageIssue::kFixedLocationFieldNumber;
const int VulnerabilityType_PackageIssue::kSeverityNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VulnerabilityType_PackageIssue::VulnerabilityType_PackageIssue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_PackageIssue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
}
VulnerabilityType_PackageIssue::VulnerabilityType_PackageIssue(const VulnerabilityType_PackageIssue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  severity_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.severity_name().size() > 0) {
    severity_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.severity_name_);
  }
  if (from.has_affected_location()) {
    affected_location_ = new ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation(*from.affected_location_);
  } else {
    affected_location_ = NULL;
  }
  if (from.has_fixed_location()) {
    fixed_location_ = new ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation(*from.fixed_location_);
  } else {
    fixed_location_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
}

void VulnerabilityType_PackageIssue::SharedCtor() {
  severity_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&affected_location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fixed_location_) -
      reinterpret_cast<char*>(&affected_location_)) + sizeof(fixed_location_));
}

VulnerabilityType_PackageIssue::~VulnerabilityType_PackageIssue() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
  SharedDtor();
}

void VulnerabilityType_PackageIssue::SharedDtor() {
  severity_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete affected_location_;
  if (this != internal_default_instance()) delete fixed_location_;
}

void VulnerabilityType_PackageIssue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VulnerabilityType_PackageIssue::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VulnerabilityType_PackageIssue& VulnerabilityType_PackageIssue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_PackageIssue.base);
  return *internal_default_instance();
}


void VulnerabilityType_PackageIssue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  severity_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && affected_location_ != NULL) {
    delete affected_location_;
  }
  affected_location_ = NULL;
  if (GetArenaNoVirtual() == NULL && fixed_location_ != NULL) {
    delete fixed_location_;
  }
  fixed_location_ = NULL;
  _internal_metadata_.Clear();
}

bool VulnerabilityType_PackageIssue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation affected_location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_affected_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation fixed_location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fixed_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string severity_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_severity_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->severity_name().data(), static_cast<int>(this->severity_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue.severity_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
  return false;
#undef DO_
}

void VulnerabilityType_PackageIssue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation affected_location = 1;
  if (this->has_affected_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_affected_location(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation fixed_location = 2;
  if (this->has_fixed_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_fixed_location(), output);
  }

  // string severity_name = 3;
  if (this->severity_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->severity_name().data(), static_cast<int>(this->severity_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue.severity_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->severity_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
}

::google::protobuf::uint8* VulnerabilityType_PackageIssue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation affected_location = 1;
  if (this->has_affected_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_affected_location(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation fixed_location = 2;
  if (this->has_fixed_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_fixed_location(), deterministic, target);
  }

  // string severity_name = 3;
  if (this->severity_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->severity_name().data(), static_cast<int>(this->severity_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue.severity_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->severity_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
  return target;
}

size_t VulnerabilityType_PackageIssue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string severity_name = 3;
  if (this->severity_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->severity_name());
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation affected_location = 1;
  if (this->has_affected_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *affected_location_);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation fixed_location = 2;
  if (this->has_fixed_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fixed_location_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VulnerabilityType_PackageIssue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
  GOOGLE_DCHECK_NE(&from, this);
  const VulnerabilityType_PackageIssue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VulnerabilityType_PackageIssue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
    MergeFrom(*source);
  }
}

void VulnerabilityType_PackageIssue::MergeFrom(const VulnerabilityType_PackageIssue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.severity_name().size() > 0) {

    severity_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.severity_name_);
  }
  if (from.has_affected_location()) {
    mutable_affected_location()->::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation::MergeFrom(from.affected_location());
  }
  if (from.has_fixed_location()) {
    mutable_fixed_location()->::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation::MergeFrom(from.fixed_location());
  }
}

void VulnerabilityType_PackageIssue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VulnerabilityType_PackageIssue::CopyFrom(const VulnerabilityType_PackageIssue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VulnerabilityType_PackageIssue::IsInitialized() const {
  return true;
}

void VulnerabilityType_PackageIssue::Swap(VulnerabilityType_PackageIssue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VulnerabilityType_PackageIssue::InternalSwap(VulnerabilityType_PackageIssue* other) {
  using std::swap;
  severity_name_.Swap(&other->severity_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(affected_location_, other->affected_location_);
  swap(fixed_location_, other->fixed_location_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VulnerabilityType_PackageIssue::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VulnerabilityType_VulnerabilityLocation::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_VulnerabilityType_VulnerabilityLocation_default_instance_._instance.get_mutable()->version_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version*>(
      ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VulnerabilityType_VulnerabilityLocation::kCpeUriFieldNumber;
const int VulnerabilityType_VulnerabilityLocation::kPackageFieldNumber;
const int VulnerabilityType_VulnerabilityLocation::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VulnerabilityType_VulnerabilityLocation::VulnerabilityType_VulnerabilityLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_VulnerabilityLocation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
}
VulnerabilityType_VulnerabilityLocation::VulnerabilityType_VulnerabilityLocation(const VulnerabilityType_VulnerabilityLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cpe_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cpe_uri().size() > 0) {
    cpe_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpe_uri_);
  }
  package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.package().size() > 0) {
    package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  if (from.has_version()) {
    version_ = new ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version(*from.version_);
  } else {
    version_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
}

void VulnerabilityType_VulnerabilityLocation::SharedCtor() {
  cpe_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = NULL;
}

VulnerabilityType_VulnerabilityLocation::~VulnerabilityType_VulnerabilityLocation() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
  SharedDtor();
}

void VulnerabilityType_VulnerabilityLocation::SharedDtor() {
  cpe_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete version_;
}

void VulnerabilityType_VulnerabilityLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VulnerabilityType_VulnerabilityLocation::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VulnerabilityType_VulnerabilityLocation& VulnerabilityType_VulnerabilityLocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType_VulnerabilityLocation.base);
  return *internal_default_instance();
}


void VulnerabilityType_VulnerabilityLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cpe_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  _internal_metadata_.Clear();
}

bool VulnerabilityType_VulnerabilityLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cpe_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpe_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cpe_uri().data(), static_cast<int>(this->cpe_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation.cpe_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string package = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package().data(), static_cast<int>(this->package().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation.package"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
  return false;
#undef DO_
}

void VulnerabilityType_VulnerabilityLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cpe_uri = 1;
  if (this->cpe_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpe_uri().data(), static_cast<int>(this->cpe_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation.cpe_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cpe_uri(), output);
  }

  // string package = 2;
  if (this->package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package().data(), static_cast<int>(this->package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation.package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->package(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version version = 4;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
}

::google::protobuf::uint8* VulnerabilityType_VulnerabilityLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cpe_uri = 1;
  if (this->cpe_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpe_uri().data(), static_cast<int>(this->cpe_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation.cpe_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cpe_uri(), target);
  }

  // string package = 2;
  if (this->package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package().data(), static_cast<int>(this->package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation.package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->package(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version version = 4;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_version(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
  return target;
}

size_t VulnerabilityType_VulnerabilityLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cpe_uri = 1;
  if (this->cpe_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cpe_uri());
  }

  // string package = 2;
  if (this->package().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package());
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version version = 4;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VulnerabilityType_VulnerabilityLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const VulnerabilityType_VulnerabilityLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VulnerabilityType_VulnerabilityLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
    MergeFrom(*source);
  }
}

void VulnerabilityType_VulnerabilityLocation::MergeFrom(const VulnerabilityType_VulnerabilityLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cpe_uri().size() > 0) {

    cpe_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpe_uri_);
  }
  if (from.package().size() > 0) {

    package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  if (from.has_version()) {
    mutable_version()->::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version::MergeFrom(from.version());
  }
}

void VulnerabilityType_VulnerabilityLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VulnerabilityType_VulnerabilityLocation::CopyFrom(const VulnerabilityType_VulnerabilityLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VulnerabilityType_VulnerabilityLocation::IsInitialized() const {
  return true;
}

void VulnerabilityType_VulnerabilityLocation::Swap(VulnerabilityType_VulnerabilityLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VulnerabilityType_VulnerabilityLocation::InternalSwap(VulnerabilityType_VulnerabilityLocation* other) {
  using std::swap;
  cpe_uri_.Swap(&other->cpe_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  package_.Swap(&other->package_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VulnerabilityType_VulnerabilityLocation::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VulnerabilityType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VulnerabilityType::kCvssScoreFieldNumber;
const int VulnerabilityType::kSeverityFieldNumber;
const int VulnerabilityType::kDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VulnerabilityType::VulnerabilityType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
}
VulnerabilityType::VulnerabilityType(const VulnerabilityType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      details_(from.details_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cvss_score_, &from.cvss_score_,
    static_cast<size_t>(reinterpret_cast<char*>(&severity_) -
    reinterpret_cast<char*>(&cvss_score_)) + sizeof(severity_));
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
}

void VulnerabilityType::SharedCtor() {
  ::memset(&cvss_score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&cvss_score_)) + sizeof(severity_));
}

VulnerabilityType::~VulnerabilityType() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
  SharedDtor();
}

void VulnerabilityType::SharedDtor() {
}

void VulnerabilityType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VulnerabilityType::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VulnerabilityType& VulnerabilityType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::scc_info_VulnerabilityType.base);
  return *internal_default_instance();
}


void VulnerabilityType::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  details_.Clear();
  ::memset(&cvss_score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&cvss_score_)) + sizeof(severity_));
  _internal_metadata_.Clear();
}

bool VulnerabilityType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float cvss_score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cvss_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Severity severity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_severity(static_cast< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Severity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail details = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
  return false;
#undef DO_
}

void VulnerabilityType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float cvss_score = 2;
  if (this->cvss_score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->cvss_score(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Severity severity = 3;
  if (this->severity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->severity(), output);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail details = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->details_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->details(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
}

::google::protobuf::uint8* VulnerabilityType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float cvss_score = 2;
  if (this->cvss_score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->cvss_score(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Severity severity = 3;
  if (this->severity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->severity(), target);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail details = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->details_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->details(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
  return target;
}

size_t VulnerabilityType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail details = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->details_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->details(static_cast<int>(i)));
    }
  }

  // float cvss_score = 2;
  if (this->cvss_score() != 0) {
    total_size += 1 + 4;
  }

  // .google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Severity severity = 3;
  if (this->severity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->severity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VulnerabilityType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
  GOOGLE_DCHECK_NE(&from, this);
  const VulnerabilityType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VulnerabilityType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
    MergeFrom(*source);
  }
}

void VulnerabilityType::MergeFrom(const VulnerabilityType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  details_.MergeFrom(from.details_);
  if (from.cvss_score() != 0) {
    set_cvss_score(from.cvss_score());
  }
  if (from.severity() != 0) {
    set_severity(from.severity());
  }
}

void VulnerabilityType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VulnerabilityType::CopyFrom(const VulnerabilityType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.VulnerabilityType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VulnerabilityType::IsInitialized() const {
  return true;
}

void VulnerabilityType::Swap(VulnerabilityType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VulnerabilityType::InternalSwap(VulnerabilityType* other) {
  using std::swap;
  CastToBase(&details_)->InternalSwap(CastToBase(&other->details_));
  swap(cvss_score_, other->cvss_score_);
  swap(severity_, other->severity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VulnerabilityType::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fpackage_5fvulnerability_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace containeranalysis
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Version >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_Detail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_PackageIssue* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_PackageIssue >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_PackageIssue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType_VulnerabilityLocation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::VulnerabilityType >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
