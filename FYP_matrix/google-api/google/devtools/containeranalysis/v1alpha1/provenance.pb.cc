// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/containeranalysis/v1alpha1/provenance.proto

#include "google/devtools/containeranalysis/v1alpha1/provenance.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Artifact;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BuildProvenance_BuildOptionsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Command;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Hash;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RepoSource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StorageSource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FileHashes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Source_FileHashesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Source;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fsource_5fcontext_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fsource_5fcontext_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_SourceContext;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fsource_5fcontext_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace devtools {
namespace containeranalysis {
namespace v1alpha1 {
class BuildProvenance_BuildOptionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuildProvenance_BuildOptionsEntry_DoNotUse>
      _instance;
} _BuildProvenance_BuildOptionsEntry_DoNotUse_default_instance_;
class BuildProvenanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuildProvenance>
      _instance;
} _BuildProvenance_default_instance_;
class Source_FileHashesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Source_FileHashesEntry_DoNotUse>
      _instance;
} _Source_FileHashesEntry_DoNotUse_default_instance_;
class SourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Source>
      _instance;
  const ::google::devtools::containeranalysis::v1alpha1::StorageSource* storage_source_;
  const ::google::devtools::containeranalysis::v1alpha1::RepoSource* repo_source_;
} _Source_default_instance_;
class FileHashesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileHashes>
      _instance;
} _FileHashes_default_instance_;
class HashDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Hash>
      _instance;
} _Hash_default_instance_;
class StorageSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StorageSource>
      _instance;
} _StorageSource_default_instance_;
class RepoSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RepoSource>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr branch_name_;
  ::google::protobuf::internal::ArenaStringPtr tag_name_;
  ::google::protobuf::internal::ArenaStringPtr commit_sha_;
} _RepoSource_default_instance_;
class CommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command>
      _instance;
} _Command_default_instance_;
class ArtifactDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Artifact>
      _instance;
} _Artifact_default_instance_;
}  // namespace v1alpha1
}  // namespace containeranalysis
}  // namespace devtools
}  // namespace google
namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto {
static void InitDefaultsBuildProvenance_BuildOptionsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_BuildProvenance_BuildOptionsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::BuildProvenance_BuildOptionsEntry_DoNotUse();
  }
  ::google::devtools::containeranalysis::v1alpha1::BuildProvenance_BuildOptionsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BuildProvenance_BuildOptionsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBuildProvenance_BuildOptionsEntry_DoNotUse}, {}};

static void InitDefaultsBuildProvenance() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_BuildProvenance_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::BuildProvenance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::BuildProvenance::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_BuildProvenance =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsBuildProvenance}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Command.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Artifact.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Source.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_BuildProvenance_BuildOptionsEntry_DoNotUse.base,}};

static void InitDefaultsSource_FileHashesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_Source_FileHashesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::Source_FileHashesEntry_DoNotUse();
  }
  ::google::devtools::containeranalysis::v1alpha1::Source_FileHashesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Source_FileHashesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSource_FileHashesEntry_DoNotUse}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_FileHashes.base,}};

static void InitDefaultsSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_Source_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::Source();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::Source::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Source =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsSource}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_StorageSource.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_RepoSource.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Source_FileHashesEntry_DoNotUse.base,
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fsource_5fcontext_2eproto::scc_info_SourceContext.base,}};

static void InitDefaultsFileHashes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_FileHashes_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::FileHashes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::FileHashes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FileHashes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFileHashes}, {
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Hash.base,}};

static void InitDefaultsHash() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_Hash_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::Hash();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::Hash::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Hash =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHash}, {}};

static void InitDefaultsStorageSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_StorageSource_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::StorageSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::StorageSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StorageSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStorageSource}, {}};

static void InitDefaultsRepoSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_RepoSource_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::RepoSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::RepoSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RepoSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRepoSource}, {}};

static void InitDefaultsCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_Command_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::Command();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::Command::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Command =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommand}, {}};

static void InitDefaultsArtifact() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::containeranalysis::v1alpha1::_Artifact_default_instance_;
    new (ptr) ::google::devtools::containeranalysis::v1alpha1::Artifact();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::containeranalysis::v1alpha1::Artifact::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Artifact =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsArtifact}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BuildProvenance_BuildOptionsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BuildProvenance.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Source_FileHashesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Source.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileHashes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Hash.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StorageSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RepoSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Command.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Artifact.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance_BuildOptionsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance_BuildOptionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance_BuildOptionsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance_BuildOptionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, commands_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, built_artifacts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, finish_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, creator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, logs_bucket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, source_provenance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, trigger_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, build_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::BuildProvenance, builder_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Source_FileHashesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Source_FileHashesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Source_FileHashesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Source_FileHashesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Source, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Source, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::devtools::containeranalysis::v1alpha1::SourceDefaultTypeInternal, storage_source_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::SourceDefaultTypeInternal, repo_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Source, artifact_storage_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Source, file_hashes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Source, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Source, additional_contexts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Source, source_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::FileHashes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::FileHashes, file_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Hash, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Hash, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Hash, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::StorageSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::StorageSource, bucket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::StorageSource, object_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::StorageSource, generation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::RepoSource, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::RepoSource, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::RepoSource, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::RepoSource, repo_name_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::RepoSourceDefaultTypeInternal, branch_name_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::RepoSourceDefaultTypeInternal, tag_name_),
  offsetof(::google::devtools::containeranalysis::v1alpha1::RepoSourceDefaultTypeInternal, commit_sha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::RepoSource, revision_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Command, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Command, env_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Command, args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Command, dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Command, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Command, wait_for_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Artifact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Artifact, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Artifact, checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Artifact, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::containeranalysis::v1alpha1::Artifact, names_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::devtools::containeranalysis::v1alpha1::BuildProvenance_BuildOptionsEntry_DoNotUse)},
  { 9, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::BuildProvenance)},
  { 27, 34, sizeof(::google::devtools::containeranalysis::v1alpha1::Source_FileHashesEntry_DoNotUse)},
  { 36, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::Source)},
  { 48, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::FileHashes)},
  { 54, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::Hash)},
  { 61, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::StorageSource)},
  { 69, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::RepoSource)},
  { 80, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::Command)},
  { 91, -1, sizeof(::google::devtools::containeranalysis::v1alpha1::Artifact)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_BuildProvenance_BuildOptionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_BuildProvenance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_Source_FileHashesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_Source_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_FileHashes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_Hash_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_StorageSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_RepoSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_Command_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::containeranalysis::v1alpha1::_Artifact_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/devtools/containeranalysis/v1alpha1/provenance.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n;google/devtools/containeranalysis/v1al"
      "pha1/provenance.proto\022*google.devtools.c"
      "ontaineranalysis.v1alpha1\032\034google/api/an"
      "notations.proto\032\?google/devtools/contain"
      "eranalysis/v1alpha1/source_context.proto"
      "\032\037google/protobuf/timestamp.proto\"\226\005\n\017Bu"
      "ildProvenance\022\n\n\002id\030\001 \001(\t\022\022\n\nproject_id\030"
      "\002 \001(\t\022E\n\010commands\030\005 \003(\01323.google.devtool"
      "s.containeranalysis.v1alpha1.Command\022M\n\017"
      "built_artifacts\030\006 \003(\01324.google.devtools."
      "containeranalysis.v1alpha1.Artifact\022/\n\013c"
      "reate_time\030\007 \001(\0132\032.google.protobuf.Times"
      "tamp\022.\n\nstart_time\030\010 \001(\0132\032.google.protob"
      "uf.Timestamp\022/\n\013finish_time\030\t \001(\0132\032.goog"
      "le.protobuf.Timestamp\022\017\n\007creator\030\013 \001(\t\022\023"
      "\n\013logs_bucket\030\r \001(\t\022M\n\021source_provenance"
      "\030\016 \001(\01322.google.devtools.containeranalys"
      "is.v1alpha1.Source\022\022\n\ntrigger_id\030\017 \001(\t\022d"
      "\n\rbuild_options\030\020 \003(\0132M.google.devtools."
      "containeranalysis.v1alpha1.BuildProvenan"
      "ce.BuildOptionsEntry\022\027\n\017builder_version\030"
      "\021 \001(\t\0323\n\021BuildOptionsEntry\022\013\n\003key\030\001 \001(\t\022"
      "\r\n\005value\030\002 \001(\t:\0028\001\"\372\004\n\006Source\022S\n\016storage"
      "_source\030\001 \001(\01329.google.devtools.containe"
      "ranalysis.v1alpha1.StorageSourceH\000\022M\n\013re"
      "po_source\030\002 \001(\01326.google.devtools.contai"
      "neranalysis.v1alpha1.RepoSourceH\000\022Z\n\027art"
      "ifact_storage_source\030\004 \001(\01329.google.devt"
      "ools.containeranalysis.v1alpha1.StorageS"
      "ource\022W\n\013file_hashes\030\003 \003(\0132B.google.devt"
      "ools.containeranalysis.v1alpha1.Source.F"
      "ileHashesEntry\022J\n\007context\030\007 \001(\01329.google"
      ".devtools.containeranalysis.v1alpha1.Sou"
      "rceContext\022V\n\023additional_contexts\030\010 \003(\0132"
      "9.google.devtools.containeranalysis.v1al"
      "pha1.SourceContext\032i\n\017FileHashesEntry\022\013\n"
      "\003key\030\001 \001(\t\022E\n\005value\030\002 \001(\01326.google.devto"
      "ols.containeranalysis.v1alpha1.FileHashe"
      "s:\0028\001B\010\n\006source\"Q\n\nFileHashes\022C\n\tfile_ha"
      "sh\030\001 \003(\01320.google.devtools.containeranal"
      "ysis.v1alpha1.Hash\"\200\001\n\004Hash\022G\n\004type\030\001 \001("
      "\01629.google.devtools.containeranalysis.v1"
      "alpha1.Hash.HashType\022\r\n\005value\030\002 \001(\014\" \n\010H"
      "ashType\022\010\n\004NONE\020\000\022\n\n\006SHA256\020\001\"C\n\rStorage"
      "Source\022\016\n\006bucket\030\001 \001(\t\022\016\n\006object\030\002 \001(\t\022\022"
      "\n\ngeneration\030\003 \001(\003\"\200\001\n\nRepoSource\022\022\n\npro"
      "ject_id\030\001 \001(\t\022\021\n\trepo_name\030\002 \001(\t\022\025\n\013bran"
      "ch_name\030\003 \001(\tH\000\022\022\n\010tag_name\030\004 \001(\tH\000\022\024\n\nc"
      "ommit_sha\030\005 \001(\tH\000B\n\n\010revision\"]\n\007Command"
      "\022\014\n\004name\030\001 \001(\t\022\013\n\003env\030\002 \003(\t\022\014\n\004args\030\003 \003("
      "\t\022\013\n\003dir\030\004 \001(\t\022\n\n\002id\030\005 \001(\t\022\020\n\010wait_for\030\006"
      " \003(\t\"E\n\010Artifact\022\014\n\004name\030\001 \001(\t\022\020\n\010checks"
      "um\030\002 \001(\t\022\n\n\002id\030\003 \001(\t\022\r\n\005names\030\004 \003(\tB\214\001\n%"
      "com.google.containeranalysis.v1alpha1P\001Z"
      "[google.golang.org/genproto/googleapis/d"
      "evtools/containeranalysis/v1alpha1;conta"
      "ineranalysis\242\002\003GCAb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2266);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/containeranalysis/v1alpha1/provenance.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fsource_5fcontext_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto
namespace google {
namespace devtools {
namespace containeranalysis {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* Hash_HashType_descriptor() {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_enum_descriptors[0];
}
bool Hash_HashType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Hash_HashType Hash::NONE;
const Hash_HashType Hash::SHA256;
const Hash_HashType Hash::HashType_MIN;
const Hash_HashType Hash::HashType_MAX;
const int Hash::HashType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

BuildProvenance_BuildOptionsEntry_DoNotUse::BuildProvenance_BuildOptionsEntry_DoNotUse() {}
BuildProvenance_BuildOptionsEntry_DoNotUse::BuildProvenance_BuildOptionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void BuildProvenance_BuildOptionsEntry_DoNotUse::MergeFrom(const BuildProvenance_BuildOptionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata BuildProvenance_BuildOptionsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[0];
}
void BuildProvenance_BuildOptionsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void BuildProvenance::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_BuildProvenance_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_BuildProvenance_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_BuildProvenance_default_instance_._instance.get_mutable()->finish_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_BuildProvenance_default_instance_._instance.get_mutable()->source_provenance_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::Source*>(
      ::google::devtools::containeranalysis::v1alpha1::Source::internal_default_instance());
}
void BuildProvenance::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void BuildProvenance::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
}
void BuildProvenance::clear_finish_time() {
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) {
    delete finish_time_;
  }
  finish_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildProvenance::kIdFieldNumber;
const int BuildProvenance::kProjectIdFieldNumber;
const int BuildProvenance::kCommandsFieldNumber;
const int BuildProvenance::kBuiltArtifactsFieldNumber;
const int BuildProvenance::kCreateTimeFieldNumber;
const int BuildProvenance::kStartTimeFieldNumber;
const int BuildProvenance::kFinishTimeFieldNumber;
const int BuildProvenance::kCreatorFieldNumber;
const int BuildProvenance::kLogsBucketFieldNumber;
const int BuildProvenance::kSourceProvenanceFieldNumber;
const int BuildProvenance::kTriggerIdFieldNumber;
const int BuildProvenance::kBuildOptionsFieldNumber;
const int BuildProvenance::kBuilderVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildProvenance::BuildProvenance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_BuildProvenance.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
}
BuildProvenance::BuildProvenance(const BuildProvenance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      commands_(from.commands_),
      built_artifacts_(from.built_artifacts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  build_options_.MergeFrom(from.build_options_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  creator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.creator().size() > 0) {
    creator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creator_);
  }
  logs_bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logs_bucket().size() > 0) {
    logs_bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logs_bucket_);
  }
  trigger_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trigger_id().size() > 0) {
    trigger_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trigger_id_);
  }
  builder_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.builder_version().size() > 0) {
    builder_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.builder_version_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_finish_time()) {
    finish_time_ = new ::google::protobuf::Timestamp(*from.finish_time_);
  } else {
    finish_time_ = NULL;
  }
  if (from.has_source_provenance()) {
    source_provenance_ = new ::google::devtools::containeranalysis::v1alpha1::Source(*from.source_provenance_);
  } else {
    source_provenance_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
}

void BuildProvenance::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  builder_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_provenance_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(source_provenance_));
}

BuildProvenance::~BuildProvenance() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
  SharedDtor();
}

void BuildProvenance::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_bucket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  builder_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete finish_time_;
  if (this != internal_default_instance()) delete source_provenance_;
}

void BuildProvenance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BuildProvenance::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuildProvenance& BuildProvenance::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_BuildProvenance.base);
  return *internal_default_instance();
}


void BuildProvenance::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  commands_.Clear();
  built_artifacts_.Clear();
  build_options_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  builder_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) {
    delete finish_time_;
  }
  finish_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_provenance_ != NULL) {
    delete source_provenance_;
  }
  source_provenance_ = NULL;
  _internal_metadata_.Clear();
}

bool BuildProvenance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.BuildProvenance.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.BuildProvenance.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.containeranalysis.v1alpha1.Command commands = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_commands()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.containeranalysis.v1alpha1.Artifact built_artifacts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_built_artifacts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp finish_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_finish_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string creator = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->creator().data(), static_cast<int>(this->creator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.BuildProvenance.creator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logs_bucket = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logs_bucket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logs_bucket().data(), static_cast<int>(this->logs_bucket().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.BuildProvenance.logs_bucket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.Source source_provenance = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_provenance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trigger_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trigger_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trigger_id().data(), static_cast<int>(this->trigger_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.BuildProvenance.trigger_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> build_options = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          BuildProvenance_BuildOptionsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              BuildProvenance_BuildOptionsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&build_options_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.BuildProvenance.BuildOptionsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.BuildProvenance.BuildOptionsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string builder_version = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_builder_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->builder_version().data(), static_cast<int>(this->builder_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.BuildProvenance.builder_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
  return false;
#undef DO_
}

void BuildProvenance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildProvenance.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildProvenance.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->project_id(), output);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.Command commands = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->commands_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->commands(static_cast<int>(i)),
      output);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.Artifact built_artifacts = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->built_artifacts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->built_artifacts(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Timestamp create_time = 7;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_create_time(), output);
  }

  // .google.protobuf.Timestamp start_time = 8;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_start_time(), output);
  }

  // .google.protobuf.Timestamp finish_time = 9;
  if (this->has_finish_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_finish_time(), output);
  }

  // string creator = 11;
  if (this->creator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->creator().data(), static_cast<int>(this->creator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildProvenance.creator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->creator(), output);
  }

  // string logs_bucket = 13;
  if (this->logs_bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logs_bucket().data(), static_cast<int>(this->logs_bucket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildProvenance.logs_bucket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->logs_bucket(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.Source source_provenance = 14;
  if (this->has_source_provenance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_source_provenance(), output);
  }

  // string trigger_id = 15;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), static_cast<int>(this->trigger_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildProvenance.trigger_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->trigger_id(), output);
  }

  // map<string, string> build_options = 16;
  if (!this->build_options().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.containeranalysis.v1alpha1.BuildProvenance.BuildOptionsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.containeranalysis.v1alpha1.BuildProvenance.BuildOptionsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->build_options().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->build_options().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->build_options().begin();
          it != this->build_options().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<BuildProvenance_BuildOptionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(build_options_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            16, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<BuildProvenance_BuildOptionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->build_options().begin();
          it != this->build_options().end(); ++it) {
        entry.reset(build_options_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            16, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string builder_version = 17;
  if (this->builder_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->builder_version().data(), static_cast<int>(this->builder_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildProvenance.builder_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->builder_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
}

::google::protobuf::uint8* BuildProvenance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildProvenance.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildProvenance.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project_id(), target);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.Command commands = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->commands_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->commands(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.Artifact built_artifacts = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->built_artifacts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->built_artifacts(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Timestamp create_time = 7;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_create_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp start_time = 8;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_start_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp finish_time = 9;
  if (this->has_finish_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_finish_time(), deterministic, target);
  }

  // string creator = 11;
  if (this->creator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->creator().data(), static_cast<int>(this->creator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildProvenance.creator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->creator(), target);
  }

  // string logs_bucket = 13;
  if (this->logs_bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logs_bucket().data(), static_cast<int>(this->logs_bucket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildProvenance.logs_bucket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->logs_bucket(), target);
  }

  // .google.devtools.containeranalysis.v1alpha1.Source source_provenance = 14;
  if (this->has_source_provenance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_source_provenance(), deterministic, target);
  }

  // string trigger_id = 15;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), static_cast<int>(this->trigger_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildProvenance.trigger_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->trigger_id(), target);
  }

  // map<string, string> build_options = 16;
  if (!this->build_options().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.containeranalysis.v1alpha1.BuildProvenance.BuildOptionsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.containeranalysis.v1alpha1.BuildProvenance.BuildOptionsEntry.value");
      }
    };

    if (deterministic &&
        this->build_options().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->build_options().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->build_options().begin();
          it != this->build_options().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<BuildProvenance_BuildOptionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(build_options_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       16, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<BuildProvenance_BuildOptionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->build_options().begin();
          it != this->build_options().end(); ++it) {
        entry.reset(build_options_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       16, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string builder_version = 17;
  if (this->builder_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->builder_version().data(), static_cast<int>(this->builder_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.BuildProvenance.builder_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->builder_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
  return target;
}

size_t BuildProvenance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.containeranalysis.v1alpha1.Command commands = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->commands_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->commands(static_cast<int>(i)));
    }
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.Artifact built_artifacts = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->built_artifacts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->built_artifacts(static_cast<int>(i)));
    }
  }

  // map<string, string> build_options = 16;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->build_options_size());
  {
    ::std::unique_ptr<BuildProvenance_BuildOptionsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->build_options().begin();
        it != this->build_options().end(); ++it) {
      entry.reset(build_options_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string project_id = 2;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string creator = 11;
  if (this->creator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creator());
  }

  // string logs_bucket = 13;
  if (this->logs_bucket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logs_bucket());
  }

  // string trigger_id = 15;
  if (this->trigger_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trigger_id());
  }

  // string builder_version = 17;
  if (this->builder_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->builder_version());
  }

  // .google.protobuf.Timestamp create_time = 7;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp start_time = 8;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // .google.protobuf.Timestamp finish_time = 9;
  if (this->has_finish_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *finish_time_);
  }

  // .google.devtools.containeranalysis.v1alpha1.Source source_provenance = 14;
  if (this->has_source_provenance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_provenance_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuildProvenance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
  GOOGLE_DCHECK_NE(&from, this);
  const BuildProvenance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuildProvenance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
    MergeFrom(*source);
  }
}

void BuildProvenance::MergeFrom(const BuildProvenance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  commands_.MergeFrom(from.commands_);
  built_artifacts_.MergeFrom(from.built_artifacts_);
  build_options_.MergeFrom(from.build_options_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.creator().size() > 0) {

    creator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creator_);
  }
  if (from.logs_bucket().size() > 0) {

    logs_bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logs_bucket_);
  }
  if (from.trigger_id().size() > 0) {

    trigger_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trigger_id_);
  }
  if (from.builder_version().size() > 0) {

    builder_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.builder_version_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_finish_time()) {
    mutable_finish_time()->::google::protobuf::Timestamp::MergeFrom(from.finish_time());
  }
  if (from.has_source_provenance()) {
    mutable_source_provenance()->::google::devtools::containeranalysis::v1alpha1::Source::MergeFrom(from.source_provenance());
  }
}

void BuildProvenance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildProvenance::CopyFrom(const BuildProvenance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.BuildProvenance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildProvenance::IsInitialized() const {
  return true;
}

void BuildProvenance::Swap(BuildProvenance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildProvenance::InternalSwap(BuildProvenance* other) {
  using std::swap;
  CastToBase(&commands_)->InternalSwap(CastToBase(&other->commands_));
  CastToBase(&built_artifacts_)->InternalSwap(CastToBase(&other->built_artifacts_));
  build_options_.Swap(&other->build_options_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  creator_.Swap(&other->creator_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logs_bucket_.Swap(&other->logs_bucket_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  trigger_id_.Swap(&other->trigger_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  builder_version_.Swap(&other->builder_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(start_time_, other->start_time_);
  swap(finish_time_, other->finish_time_);
  swap(source_provenance_, other->source_provenance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BuildProvenance::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Source_FileHashesEntry_DoNotUse::Source_FileHashesEntry_DoNotUse() {}
Source_FileHashesEntry_DoNotUse::Source_FileHashesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Source_FileHashesEntry_DoNotUse::MergeFrom(const Source_FileHashesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Source_FileHashesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[2];
}
void Source_FileHashesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Source::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_Source_default_instance_.storage_source_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::StorageSource*>(
      ::google::devtools::containeranalysis::v1alpha1::StorageSource::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Source_default_instance_.repo_source_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::RepoSource*>(
      ::google::devtools::containeranalysis::v1alpha1::RepoSource::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Source_default_instance_._instance.get_mutable()->artifact_storage_source_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::StorageSource*>(
      ::google::devtools::containeranalysis::v1alpha1::StorageSource::internal_default_instance());
  ::google::devtools::containeranalysis::v1alpha1::_Source_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::devtools::containeranalysis::v1alpha1::SourceContext*>(
      ::google::devtools::containeranalysis::v1alpha1::SourceContext::internal_default_instance());
}
void Source::set_allocated_storage_source(::google::devtools::containeranalysis::v1alpha1::StorageSource* storage_source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_source();
  if (storage_source) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      storage_source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, storage_source, submessage_arena);
    }
    set_has_storage_source();
    source_.storage_source_ = storage_source;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Source.storage_source)
}
void Source::set_allocated_repo_source(::google::devtools::containeranalysis::v1alpha1::RepoSource* repo_source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_source();
  if (repo_source) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      repo_source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, repo_source, submessage_arena);
    }
    set_has_repo_source();
    source_.repo_source_ = repo_source;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.containeranalysis.v1alpha1.Source.repo_source)
}
void Source::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
void Source::clear_additional_contexts() {
  additional_contexts_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Source::kStorageSourceFieldNumber;
const int Source::kRepoSourceFieldNumber;
const int Source::kArtifactStorageSourceFieldNumber;
const int Source::kFileHashesFieldNumber;
const int Source::kContextFieldNumber;
const int Source::kAdditionalContextsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Source::Source()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Source.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.Source)
}
Source::Source(const Source& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      additional_contexts_(from.additional_contexts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_hashes_.MergeFrom(from.file_hashes_);
  if (from.has_artifact_storage_source()) {
    artifact_storage_source_ = new ::google::devtools::containeranalysis::v1alpha1::StorageSource(*from.artifact_storage_source_);
  } else {
    artifact_storage_source_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::devtools::containeranalysis::v1alpha1::SourceContext(*from.context_);
  } else {
    context_ = NULL;
  }
  clear_has_source();
  switch (from.source_case()) {
    case kStorageSource: {
      mutable_storage_source()->::google::devtools::containeranalysis::v1alpha1::StorageSource::MergeFrom(from.storage_source());
      break;
    }
    case kRepoSource: {
      mutable_repo_source()->::google::devtools::containeranalysis::v1alpha1::RepoSource::MergeFrom(from.repo_source());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.Source)
}

void Source::SharedCtor() {
  ::memset(&artifact_storage_source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&context_) -
      reinterpret_cast<char*>(&artifact_storage_source_)) + sizeof(context_));
  clear_has_source();
}

Source::~Source() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.Source)
  SharedDtor();
}

void Source::SharedDtor() {
  if (this != internal_default_instance()) delete artifact_storage_source_;
  if (this != internal_default_instance()) delete context_;
  if (has_source()) {
    clear_source();
  }
}

void Source::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Source::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Source& Source::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Source.base);
  return *internal_default_instance();
}


void Source::clear_source() {
// @@protoc_insertion_point(one_of_clear_start:google.devtools.containeranalysis.v1alpha1.Source)
  switch (source_case()) {
    case kStorageSource: {
      delete source_.storage_source_;
      break;
    }
    case kRepoSource: {
      delete source_.repo_source_;
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SOURCE_NOT_SET;
}


void Source::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.Source)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_hashes_.Clear();
  additional_contexts_.Clear();
  if (GetArenaNoVirtual() == NULL && artifact_storage_source_ != NULL) {
    delete artifact_storage_source_;
  }
  artifact_storage_source_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  clear_source();
  _internal_metadata_.Clear();
}

bool Source::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.Source)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_storage_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_repo_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.devtools.containeranalysis.v1alpha1.FileHashes> file_hashes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          Source_FileHashesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Source_FileHashesEntry_DoNotUse,
              ::std::string, ::google::devtools::containeranalysis::v1alpha1::FileHashes,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::devtools::containeranalysis::v1alpha1::FileHashes > > parser(&file_hashes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Source.FileHashesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_artifact_storage_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_additional_contexts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.Source)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.Source)
  return false;
#undef DO_
}

void Source::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.Source)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;
  if (has_storage_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_storage_source(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;
  if (has_repo_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_repo_source(), output);
  }

  // map<string, .google.devtools.containeranalysis.v1alpha1.FileHashes> file_hashes = 3;
  if (!this->file_hashes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::devtools::containeranalysis::v1alpha1::FileHashes >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.containeranalysis.v1alpha1.Source.FileHashesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->file_hashes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->file_hashes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::devtools::containeranalysis::v1alpha1::FileHashes >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::devtools::containeranalysis::v1alpha1::FileHashes >::const_iterator
          it = this->file_hashes().begin();
          it != this->file_hashes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Source_FileHashesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(file_hashes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Source_FileHashesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::devtools::containeranalysis::v1alpha1::FileHashes >::const_iterator
          it = this->file_hashes().begin();
          it != this->file_hashes().end(); ++it) {
        entry.reset(file_hashes_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;
  if (this->has_artifact_storage_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_artifact_storage_source(), output);
  }

  // .google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_context(), output);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->additional_contexts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->additional_contexts(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.Source)
}

::google::protobuf::uint8* Source::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.Source)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;
  if (has_storage_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_storage_source(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;
  if (has_repo_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_repo_source(), deterministic, target);
  }

  // map<string, .google.devtools.containeranalysis.v1alpha1.FileHashes> file_hashes = 3;
  if (!this->file_hashes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::devtools::containeranalysis::v1alpha1::FileHashes >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.containeranalysis.v1alpha1.Source.FileHashesEntry.key");
      }
    };

    if (deterministic &&
        this->file_hashes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->file_hashes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::devtools::containeranalysis::v1alpha1::FileHashes >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::devtools::containeranalysis::v1alpha1::FileHashes >::const_iterator
          it = this->file_hashes().begin();
          it != this->file_hashes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Source_FileHashesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(file_hashes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Source_FileHashesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::devtools::containeranalysis::v1alpha1::FileHashes >::const_iterator
          it = this->file_hashes().begin();
          it != this->file_hashes().end(); ++it) {
        entry.reset(file_hashes_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;
  if (this->has_artifact_storage_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_artifact_storage_source(), deterministic, target);
  }

  // .google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_context(), deterministic, target);
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->additional_contexts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->additional_contexts(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.Source)
  return target;
}

size_t Source::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.Source)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .google.devtools.containeranalysis.v1alpha1.FileHashes> file_hashes = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->file_hashes_size());
  {
    ::std::unique_ptr<Source_FileHashesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::devtools::containeranalysis::v1alpha1::FileHashes >::const_iterator
        it = this->file_hashes().begin();
        it != this->file_hashes().end(); ++it) {
      entry.reset(file_hashes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->additional_contexts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->additional_contexts(static_cast<int>(i)));
    }
  }

  // .google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;
  if (this->has_artifact_storage_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *artifact_storage_source_);
  }

  // .google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  switch (source_case()) {
    // .google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;
    case kStorageSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_.storage_source_);
      break;
    }
    // .google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;
    case kRepoSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_.repo_source_);
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Source::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.Source)
  GOOGLE_DCHECK_NE(&from, this);
  const Source* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Source>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.Source)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.Source)
    MergeFrom(*source);
  }
}

void Source::MergeFrom(const Source& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.Source)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_hashes_.MergeFrom(from.file_hashes_);
  additional_contexts_.MergeFrom(from.additional_contexts_);
  if (from.has_artifact_storage_source()) {
    mutable_artifact_storage_source()->::google::devtools::containeranalysis::v1alpha1::StorageSource::MergeFrom(from.artifact_storage_source());
  }
  if (from.has_context()) {
    mutable_context()->::google::devtools::containeranalysis::v1alpha1::SourceContext::MergeFrom(from.context());
  }
  switch (from.source_case()) {
    case kStorageSource: {
      mutable_storage_source()->::google::devtools::containeranalysis::v1alpha1::StorageSource::MergeFrom(from.storage_source());
      break;
    }
    case kRepoSource: {
      mutable_repo_source()->::google::devtools::containeranalysis::v1alpha1::RepoSource::MergeFrom(from.repo_source());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
}

void Source::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Source::CopyFrom(const Source& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Source::IsInitialized() const {
  return true;
}

void Source::Swap(Source* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Source::InternalSwap(Source* other) {
  using std::swap;
  file_hashes_.Swap(&other->file_hashes_);
  CastToBase(&additional_contexts_)->InternalSwap(CastToBase(&other->additional_contexts_));
  swap(artifact_storage_source_, other->artifact_storage_source_);
  swap(context_, other->context_);
  swap(source_, other->source_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Source::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileHashes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileHashes::kFileHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileHashes::FileHashes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_FileHashes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.FileHashes)
}
FileHashes::FileHashes(const FileHashes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      file_hash_(from.file_hash_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.FileHashes)
}

void FileHashes::SharedCtor() {
}

FileHashes::~FileHashes() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.FileHashes)
  SharedDtor();
}

void FileHashes::SharedDtor() {
}

void FileHashes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileHashes::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileHashes& FileHashes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_FileHashes.base);
  return *internal_default_instance();
}


void FileHashes::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.FileHashes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_hash_.Clear();
  _internal_metadata_.Clear();
}

bool FileHashes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.FileHashes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.containeranalysis.v1alpha1.Hash file_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_file_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.FileHashes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.FileHashes)
  return false;
#undef DO_
}

void FileHashes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.FileHashes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1alpha1.Hash file_hash = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->file_hash_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->file_hash(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.FileHashes)
}

::google::protobuf::uint8* FileHashes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.FileHashes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.containeranalysis.v1alpha1.Hash file_hash = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->file_hash_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->file_hash(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.FileHashes)
  return target;
}

size_t FileHashes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.FileHashes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.containeranalysis.v1alpha1.Hash file_hash = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->file_hash_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->file_hash(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileHashes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.FileHashes)
  GOOGLE_DCHECK_NE(&from, this);
  const FileHashes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileHashes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.FileHashes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.FileHashes)
    MergeFrom(*source);
  }
}

void FileHashes::MergeFrom(const FileHashes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.FileHashes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_hash_.MergeFrom(from.file_hash_);
}

void FileHashes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.FileHashes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileHashes::CopyFrom(const FileHashes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.FileHashes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileHashes::IsInitialized() const {
  return true;
}

void FileHashes::Swap(FileHashes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileHashes::InternalSwap(FileHashes* other) {
  using std::swap;
  CastToBase(&file_hash_)->InternalSwap(CastToBase(&other->file_hash_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileHashes::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Hash::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hash::kTypeFieldNumber;
const int Hash::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hash::Hash()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Hash.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.Hash)
}
Hash::Hash(const Hash& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.Hash)
}

void Hash::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

Hash::~Hash() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.Hash)
  SharedDtor();
}

void Hash::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Hash::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Hash::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Hash& Hash::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Hash.base);
  return *internal_default_instance();
}


void Hash::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.Hash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Hash::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.Hash)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.containeranalysis.v1alpha1.Hash.HashType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::devtools::containeranalysis::v1alpha1::Hash_HashType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.Hash)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.Hash)
  return false;
#undef DO_
}

void Hash::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.Hash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.Hash.HashType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.Hash)
}

::google::protobuf::uint8* Hash::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.Hash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.containeranalysis.v1alpha1.Hash.HashType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.Hash)
  return target;
}

size_t Hash::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.Hash)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .google.devtools.containeranalysis.v1alpha1.Hash.HashType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Hash::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.Hash)
  GOOGLE_DCHECK_NE(&from, this);
  const Hash* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Hash>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.Hash)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.Hash)
    MergeFrom(*source);
  }
}

void Hash::MergeFrom(const Hash& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.Hash)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Hash::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.Hash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hash::CopyFrom(const Hash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.Hash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hash::IsInitialized() const {
  return true;
}

void Hash::Swap(Hash* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hash::InternalSwap(Hash* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Hash::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StorageSource::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageSource::kBucketFieldNumber;
const int StorageSource::kObjectFieldNumber;
const int StorageSource::kGenerationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageSource::StorageSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_StorageSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.StorageSource)
}
StorageSource::StorageSource(const StorageSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bucket().size() > 0) {
    bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bucket_);
  }
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object().size() > 0) {
    object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
  generation_ = from.generation_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.StorageSource)
}

void StorageSource::SharedCtor() {
  bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  generation_ = GOOGLE_LONGLONG(0);
}

StorageSource::~StorageSource() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.StorageSource)
  SharedDtor();
}

void StorageSource::SharedDtor() {
  bucket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StorageSource::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageSource& StorageSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_StorageSource.base);
  return *internal_default_instance();
}


void StorageSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.StorageSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  generation_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool StorageSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.StorageSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string bucket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bucket().data(), static_cast<int>(this->bucket().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.StorageSource.bucket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string object = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object().data(), static_cast<int>(this->object().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.StorageSource.object"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 generation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &generation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.StorageSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.StorageSource)
  return false;
#undef DO_
}

void StorageSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.StorageSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bucket = 1;
  if (this->bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket().data(), static_cast<int>(this->bucket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.StorageSource.bucket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bucket(), output);
  }

  // string object = 2;
  if (this->object().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object().data(), static_cast<int>(this->object().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.StorageSource.object");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->object(), output);
  }

  // int64 generation = 3;
  if (this->generation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->generation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.StorageSource)
}

::google::protobuf::uint8* StorageSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.StorageSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bucket = 1;
  if (this->bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket().data(), static_cast<int>(this->bucket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.StorageSource.bucket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bucket(), target);
  }

  // string object = 2;
  if (this->object().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object().data(), static_cast<int>(this->object().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.StorageSource.object");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->object(), target);
  }

  // int64 generation = 3;
  if (this->generation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->generation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.StorageSource)
  return target;
}

size_t StorageSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.StorageSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string bucket = 1;
  if (this->bucket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bucket());
  }

  // string object = 2;
  if (this->object().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object());
  }

  // int64 generation = 3;
  if (this->generation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->generation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StorageSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.StorageSource)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.StorageSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.StorageSource)
    MergeFrom(*source);
  }
}

void StorageSource::MergeFrom(const StorageSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.StorageSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bucket().size() > 0) {

    bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bucket_);
  }
  if (from.object().size() > 0) {

    object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
  if (from.generation() != 0) {
    set_generation(from.generation());
  }
}

void StorageSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.StorageSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageSource::CopyFrom(const StorageSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.StorageSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageSource::IsInitialized() const {
  return true;
}

void StorageSource::Swap(StorageSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageSource::InternalSwap(StorageSource* other) {
  using std::swap;
  bucket_.Swap(&other->bucket_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  object_.Swap(&other->object_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(generation_, other->generation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StorageSource::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RepoSource::InitAsDefaultInstance() {
  ::google::devtools::containeranalysis::v1alpha1::_RepoSource_default_instance_.branch_name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::devtools::containeranalysis::v1alpha1::_RepoSource_default_instance_.tag_name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::devtools::containeranalysis::v1alpha1::_RepoSource_default_instance_.commit_sha_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepoSource::kProjectIdFieldNumber;
const int RepoSource::kRepoNameFieldNumber;
const int RepoSource::kBranchNameFieldNumber;
const int RepoSource::kTagNameFieldNumber;
const int RepoSource::kCommitShaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepoSource::RepoSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_RepoSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.RepoSource)
}
RepoSource::RepoSource(const RepoSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  repo_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repo_name().size() > 0) {
    repo_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_name_);
  }
  clear_has_revision();
  switch (from.revision_case()) {
    case kBranchName: {
      set_branch_name(from.branch_name());
      break;
    }
    case kTagName: {
      set_tag_name(from.tag_name());
      break;
    }
    case kCommitSha: {
      set_commit_sha(from.commit_sha());
      break;
    }
    case REVISION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.RepoSource)
}

void RepoSource::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_revision();
}

RepoSource::~RepoSource() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.RepoSource)
  SharedDtor();
}

void RepoSource::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_revision()) {
    clear_revision();
  }
}

void RepoSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RepoSource::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RepoSource& RepoSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_RepoSource.base);
  return *internal_default_instance();
}


void RepoSource::clear_revision() {
// @@protoc_insertion_point(one_of_clear_start:google.devtools.containeranalysis.v1alpha1.RepoSource)
  switch (revision_case()) {
    case kBranchName: {
      revision_.branch_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTagName: {
      revision_.tag_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kCommitSha: {
      revision_.commit_sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case REVISION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REVISION_NOT_SET;
}


void RepoSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.RepoSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_revision();
  _internal_metadata_.Clear();
}

bool RepoSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.RepoSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.RepoSource.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repo_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_name().data(), static_cast<int>(this->repo_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.RepoSource.repo_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string branch_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->branch_name().data(), static_cast<int>(this->branch_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.RepoSource.branch_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tag_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag_name().data(), static_cast<int>(this->tag_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.RepoSource.tag_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string commit_sha = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commit_sha()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commit_sha().data(), static_cast<int>(this->commit_sha().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.RepoSource.commit_sha"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.RepoSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.RepoSource)
  return false;
#undef DO_
}

void RepoSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.RepoSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.RepoSource.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string repo_name = 2;
  if (this->repo_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_name().data(), static_cast<int>(this->repo_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.RepoSource.repo_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->repo_name(), output);
  }

  // string branch_name = 3;
  if (has_branch_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch_name().data(), static_cast<int>(this->branch_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.RepoSource.branch_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->branch_name(), output);
  }

  // string tag_name = 4;
  if (has_tag_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag_name().data(), static_cast<int>(this->tag_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.RepoSource.tag_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tag_name(), output);
  }

  // string commit_sha = 5;
  if (has_commit_sha()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commit_sha().data(), static_cast<int>(this->commit_sha().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.RepoSource.commit_sha");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->commit_sha(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.RepoSource)
}

::google::protobuf::uint8* RepoSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.RepoSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.RepoSource.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string repo_name = 2;
  if (this->repo_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_name().data(), static_cast<int>(this->repo_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.RepoSource.repo_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->repo_name(), target);
  }

  // string branch_name = 3;
  if (has_branch_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch_name().data(), static_cast<int>(this->branch_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.RepoSource.branch_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->branch_name(), target);
  }

  // string tag_name = 4;
  if (has_tag_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag_name().data(), static_cast<int>(this->tag_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.RepoSource.tag_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tag_name(), target);
  }

  // string commit_sha = 5;
  if (has_commit_sha()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commit_sha().data(), static_cast<int>(this->commit_sha().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.RepoSource.commit_sha");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->commit_sha(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.RepoSource)
  return target;
}

size_t RepoSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.RepoSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string repo_name = 2;
  if (this->repo_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_name());
  }

  switch (revision_case()) {
    // string branch_name = 3;
    case kBranchName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->branch_name());
      break;
    }
    // string tag_name = 4;
    case kTagName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag_name());
      break;
    }
    // string commit_sha = 5;
    case kCommitSha: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->commit_sha());
      break;
    }
    case REVISION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepoSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.RepoSource)
  GOOGLE_DCHECK_NE(&from, this);
  const RepoSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RepoSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.RepoSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.RepoSource)
    MergeFrom(*source);
  }
}

void RepoSource::MergeFrom(const RepoSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.RepoSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.repo_name().size() > 0) {

    repo_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_name_);
  }
  switch (from.revision_case()) {
    case kBranchName: {
      set_branch_name(from.branch_name());
      break;
    }
    case kTagName: {
      set_tag_name(from.tag_name());
      break;
    }
    case kCommitSha: {
      set_commit_sha(from.commit_sha());
      break;
    }
    case REVISION_NOT_SET: {
      break;
    }
  }
}

void RepoSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.RepoSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepoSource::CopyFrom(const RepoSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.RepoSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepoSource::IsInitialized() const {
  return true;
}

void RepoSource::Swap(RepoSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepoSource::InternalSwap(RepoSource* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  repo_name_.Swap(&other->repo_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(revision_, other->revision_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RepoSource::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Command::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command::kNameFieldNumber;
const int Command::kEnvFieldNumber;
const int Command::kArgsFieldNumber;
const int Command::kDirFieldNumber;
const int Command::kIdFieldNumber;
const int Command::kWaitForFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command::Command()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Command.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.Command)
}
Command::Command(const Command& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      env_(from.env_),
      args_(from.args_),
      wait_for_(from.wait_for_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dir().size() > 0) {
    dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.Command)
}

void Command::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.Command)
  SharedDtor();
}

void Command::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Command::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Command::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Command& Command::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Command.base);
  return *internal_default_instance();
}


void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  env_.Clear();
  args_.Clear();
  wait_for_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.Command)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Command.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string env = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_env()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->env(this->env_size() - 1).data(),
            static_cast<int>(this->env(this->env_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Command.env"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string args = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args(this->args_size() - 1).data(),
            static_cast<int>(this->args(this->args_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Command.args"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dir = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dir()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dir().data(), static_cast<int>(this->dir().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Command.dir"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Command.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string wait_for = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_wait_for()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wait_for(this->wait_for_size() - 1).data(),
            static_cast<int>(this->wait_for(this->wait_for_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Command.wait_for"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.Command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.Command)
  return false;
#undef DO_
}

void Command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Command.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string env = 2;
  for (int i = 0, n = this->env_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->env(i).data(), static_cast<int>(this->env(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Command.env");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->env(i), output);
  }

  // repeated string args = 3;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Command.args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->args(i), output);
  }

  // string dir = 4;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), static_cast<int>(this->dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Command.dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->dir(), output);
  }

  // string id = 5;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Command.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->id(), output);
  }

  // repeated string wait_for = 6;
  for (int i = 0, n = this->wait_for_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wait_for(i).data(), static_cast<int>(this->wait_for(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Command.wait_for");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->wait_for(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.Command)
}

::google::protobuf::uint8* Command::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Command.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string env = 2;
  for (int i = 0, n = this->env_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->env(i).data(), static_cast<int>(this->env(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Command.env");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->env(i), target);
  }

  // repeated string args = 3;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Command.args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->args(i), target);
  }

  // string dir = 4;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), static_cast<int>(this->dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Command.dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->dir(), target);
  }

  // string id = 5;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Command.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->id(), target);
  }

  // repeated string wait_for = 6;
  for (int i = 0, n = this->wait_for_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wait_for(i).data(), static_cast<int>(this->wait_for(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Command.wait_for");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->wait_for(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.Command)
  return target;
}

size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.Command)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string env = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->env_size());
  for (int i = 0, n = this->env_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->env(i));
  }

  // repeated string args = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->args_size());
  for (int i = 0, n = this->args_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }

  // repeated string wait_for = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->wait_for_size());
  for (int i = 0, n = this->wait_for_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->wait_for(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string dir = 4;
  if (this->dir().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dir());
  }

  // string id = 5;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.Command)
  GOOGLE_DCHECK_NE(&from, this);
  const Command* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Command>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.Command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.Command)
    MergeFrom(*source);
  }
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.Command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  env_.MergeFrom(from.env_);
  args_.MergeFrom(from.args_);
  wait_for_.MergeFrom(from.wait_for_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.dir().size() > 0) {

    dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void Command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command::IsInitialized() const {
  return true;
}

void Command::Swap(Command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command::InternalSwap(Command* other) {
  using std::swap;
  env_.InternalSwap(CastToBase(&other->env_));
  args_.InternalSwap(CastToBase(&other->args_));
  wait_for_.InternalSwap(CastToBase(&other->wait_for_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dir_.Swap(&other->dir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Command::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Artifact::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Artifact::kNameFieldNumber;
const int Artifact::kChecksumFieldNumber;
const int Artifact::kIdFieldNumber;
const int Artifact::kNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Artifact::Artifact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Artifact.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.containeranalysis.v1alpha1.Artifact)
}
Artifact::Artifact(const Artifact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      names_(from.names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.checksum().size() > 0) {
    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.containeranalysis.v1alpha1.Artifact)
}

void Artifact::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Artifact::~Artifact() {
  // @@protoc_insertion_point(destructor:google.devtools.containeranalysis.v1alpha1.Artifact)
  SharedDtor();
}

void Artifact::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Artifact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Artifact::descriptor() {
  ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Artifact& Artifact::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::scc_info_Artifact.base);
  return *internal_default_instance();
}


void Artifact::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.containeranalysis.v1alpha1.Artifact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  names_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Artifact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.containeranalysis.v1alpha1.Artifact)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Artifact.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string checksum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_checksum()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->checksum().data(), static_cast<int>(this->checksum().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Artifact.checksum"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Artifact.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string names = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->names(this->names_size() - 1).data(),
            static_cast<int>(this->names(this->names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.containeranalysis.v1alpha1.Artifact.names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.containeranalysis.v1alpha1.Artifact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.containeranalysis.v1alpha1.Artifact)
  return false;
#undef DO_
}

void Artifact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.containeranalysis.v1alpha1.Artifact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Artifact.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string checksum = 2;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum().data(), static_cast<int>(this->checksum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Artifact.checksum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->checksum(), output);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Artifact.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->id(), output);
  }

  // repeated string names = 4;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Artifact.names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->names(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.containeranalysis.v1alpha1.Artifact)
}

::google::protobuf::uint8* Artifact::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.containeranalysis.v1alpha1.Artifact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Artifact.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string checksum = 2;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum().data(), static_cast<int>(this->checksum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Artifact.checksum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->checksum(), target);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Artifact.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->id(), target);
  }

  // repeated string names = 4;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.containeranalysis.v1alpha1.Artifact.names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->names(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.containeranalysis.v1alpha1.Artifact)
  return target;
}

size_t Artifact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.containeranalysis.v1alpha1.Artifact)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string names = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->names_size());
  for (int i = 0, n = this->names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string checksum = 2;
  if (this->checksum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->checksum());
  }

  // string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Artifact::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.containeranalysis.v1alpha1.Artifact)
  GOOGLE_DCHECK_NE(&from, this);
  const Artifact* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Artifact>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.containeranalysis.v1alpha1.Artifact)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.containeranalysis.v1alpha1.Artifact)
    MergeFrom(*source);
  }
}

void Artifact::MergeFrom(const Artifact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.containeranalysis.v1alpha1.Artifact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  names_.MergeFrom(from.names_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.checksum().size() > 0) {

    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void Artifact::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.containeranalysis.v1alpha1.Artifact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Artifact::CopyFrom(const Artifact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.containeranalysis.v1alpha1.Artifact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Artifact::IsInitialized() const {
  return true;
}

void Artifact::Swap(Artifact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Artifact::InternalSwap(Artifact* other) {
  using std::swap;
  names_.InternalSwap(CastToBase(&other->names_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  checksum_.Swap(&other->checksum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Artifact::GetMetadata() const {
  protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fcontaineranalysis_2fv1alpha1_2fprovenance_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace containeranalysis
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::BuildProvenance_BuildOptionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::BuildProvenance_BuildOptionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::BuildProvenance_BuildOptionsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::BuildProvenance* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::BuildProvenance >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::BuildProvenance >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::Source_FileHashesEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::Source_FileHashesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::Source_FileHashesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::Source* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::Source >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::Source >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::FileHashes* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::FileHashes >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::FileHashes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::Hash* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::Hash >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::Hash >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::StorageSource* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::StorageSource >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::StorageSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::RepoSource* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::RepoSource >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::RepoSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::Command* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::Command >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::Command >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::containeranalysis::v1alpha1::Artifact* Arena::CreateMaybeMessage< ::google::devtools::containeranalysis::v1alpha1::Artifact >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::containeranalysis::v1alpha1::Artifact >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
