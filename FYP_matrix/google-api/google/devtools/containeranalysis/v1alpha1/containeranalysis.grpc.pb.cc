// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/devtools/containeranalysis/v1alpha1/containeranalysis.proto

#include "google/devtools/containeranalysis/v1alpha1/containeranalysis.pb.h"
#include "google/devtools/containeranalysis/v1alpha1/containeranalysis.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace devtools {
namespace containeranalysis {
namespace v1alpha1 {

static const char* ContainerAnalysis_method_names[] = {
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/GetOccurrence",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/ListOccurrences",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/DeleteOccurrence",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/CreateOccurrence",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/UpdateOccurrence",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/GetOccurrenceNote",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/GetNote",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/ListNotes",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/DeleteNote",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/CreateNote",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/UpdateNote",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/ListNoteOccurrences",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/GetVulnzOccurrencesSummary",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/SetIamPolicy",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/GetIamPolicy",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/TestIamPermissions",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/CreateOperation",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/UpdateOperation",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/GetScanConfig",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/ListScanConfigs",
  "/google.devtools.containeranalysis.v1alpha1.ContainerAnalysis/UpdateScanConfig",
};

std::unique_ptr< ContainerAnalysis::Stub> ContainerAnalysis::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ContainerAnalysis::Stub> stub(new ContainerAnalysis::Stub(channel));
  return stub;
}

ContainerAnalysis::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_GetOccurrence_(ContainerAnalysis_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListOccurrences_(ContainerAnalysis_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteOccurrence_(ContainerAnalysis_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateOccurrence_(ContainerAnalysis_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateOccurrence_(ContainerAnalysis_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetOccurrenceNote_(ContainerAnalysis_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetNote_(ContainerAnalysis_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListNotes_(ContainerAnalysis_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteNote_(ContainerAnalysis_method_names[8], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateNote_(ContainerAnalysis_method_names[9], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateNote_(ContainerAnalysis_method_names[10], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListNoteOccurrences_(ContainerAnalysis_method_names[11], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetVulnzOccurrencesSummary_(ContainerAnalysis_method_names[12], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SetIamPolicy_(ContainerAnalysis_method_names[13], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIamPolicy_(ContainerAnalysis_method_names[14], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_TestIamPermissions_(ContainerAnalysis_method_names[15], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateOperation_(ContainerAnalysis_method_names[16], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateOperation_(ContainerAnalysis_method_names[17], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetScanConfig_(ContainerAnalysis_method_names[18], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListScanConfigs_(ContainerAnalysis_method_names[19], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateScanConfig_(ContainerAnalysis_method_names[20], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ContainerAnalysis::Stub::GetOccurrence(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceRequest& request, ::google::devtools::containeranalysis::v1alpha1::Occurrence* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetOccurrence_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Occurrence>* ContainerAnalysis::Stub::AsyncGetOccurrenceRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Occurrence>::Create(channel_.get(), cq, rpcmethod_GetOccurrence_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Occurrence>* ContainerAnalysis::Stub::PrepareAsyncGetOccurrenceRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Occurrence>::Create(channel_.get(), cq, rpcmethod_GetOccurrence_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::ListOccurrences(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest& request, ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListOccurrences_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse>* ContainerAnalysis::Stub::AsyncListOccurrencesRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse>::Create(channel_.get(), cq, rpcmethod_ListOccurrences_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse>* ContainerAnalysis::Stub::PrepareAsyncListOccurrencesRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse>::Create(channel_.get(), cq, rpcmethod_ListOccurrences_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::DeleteOccurrence(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::DeleteOccurrenceRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteOccurrence_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ContainerAnalysis::Stub::AsyncDeleteOccurrenceRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::DeleteOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteOccurrence_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ContainerAnalysis::Stub::PrepareAsyncDeleteOccurrenceRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::DeleteOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteOccurrence_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::CreateOccurrence(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest& request, ::google::devtools::containeranalysis::v1alpha1::Occurrence* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateOccurrence_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Occurrence>* ContainerAnalysis::Stub::AsyncCreateOccurrenceRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Occurrence>::Create(channel_.get(), cq, rpcmethod_CreateOccurrence_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Occurrence>* ContainerAnalysis::Stub::PrepareAsyncCreateOccurrenceRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Occurrence>::Create(channel_.get(), cq, rpcmethod_CreateOccurrence_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::UpdateOccurrence(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest& request, ::google::devtools::containeranalysis::v1alpha1::Occurrence* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateOccurrence_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Occurrence>* ContainerAnalysis::Stub::AsyncUpdateOccurrenceRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Occurrence>::Create(channel_.get(), cq, rpcmethod_UpdateOccurrence_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Occurrence>* ContainerAnalysis::Stub::PrepareAsyncUpdateOccurrenceRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Occurrence>::Create(channel_.get(), cq, rpcmethod_UpdateOccurrence_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::GetOccurrenceNote(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceNoteRequest& request, ::google::devtools::containeranalysis::v1alpha1::Note* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetOccurrenceNote_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Note>* ContainerAnalysis::Stub::AsyncGetOccurrenceNoteRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Note>::Create(channel_.get(), cq, rpcmethod_GetOccurrenceNote_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Note>* ContainerAnalysis::Stub::PrepareAsyncGetOccurrenceNoteRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Note>::Create(channel_.get(), cq, rpcmethod_GetOccurrenceNote_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::GetNote(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetNoteRequest& request, ::google::devtools::containeranalysis::v1alpha1::Note* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetNote_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Note>* ContainerAnalysis::Stub::AsyncGetNoteRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Note>::Create(channel_.get(), cq, rpcmethod_GetNote_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Note>* ContainerAnalysis::Stub::PrepareAsyncGetNoteRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Note>::Create(channel_.get(), cq, rpcmethod_GetNote_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::ListNotes(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListNotesRequest& request, ::google::devtools::containeranalysis::v1alpha1::ListNotesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListNotes_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::ListNotesResponse>* ContainerAnalysis::Stub::AsyncListNotesRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListNotesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::ListNotesResponse>::Create(channel_.get(), cq, rpcmethod_ListNotes_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::ListNotesResponse>* ContainerAnalysis::Stub::PrepareAsyncListNotesRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListNotesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::ListNotesResponse>::Create(channel_.get(), cq, rpcmethod_ListNotes_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::DeleteNote(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::DeleteNoteRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteNote_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ContainerAnalysis::Stub::AsyncDeleteNoteRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::DeleteNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteNote_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ContainerAnalysis::Stub::PrepareAsyncDeleteNoteRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::DeleteNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteNote_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::CreateNote(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest& request, ::google::devtools::containeranalysis::v1alpha1::Note* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateNote_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Note>* ContainerAnalysis::Stub::AsyncCreateNoteRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Note>::Create(channel_.get(), cq, rpcmethod_CreateNote_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Note>* ContainerAnalysis::Stub::PrepareAsyncCreateNoteRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Note>::Create(channel_.get(), cq, rpcmethod_CreateNote_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::UpdateNote(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest& request, ::google::devtools::containeranalysis::v1alpha1::Note* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateNote_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Note>* ContainerAnalysis::Stub::AsyncUpdateNoteRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Note>::Create(channel_.get(), cq, rpcmethod_UpdateNote_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::Note>* ContainerAnalysis::Stub::PrepareAsyncUpdateNoteRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::Note>::Create(channel_.get(), cq, rpcmethod_UpdateNote_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::ListNoteOccurrences(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest& request, ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListNoteOccurrences_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse>* ContainerAnalysis::Stub::AsyncListNoteOccurrencesRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse>::Create(channel_.get(), cq, rpcmethod_ListNoteOccurrences_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse>* ContainerAnalysis::Stub::PrepareAsyncListNoteOccurrencesRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse>::Create(channel_.get(), cq, rpcmethod_ListNoteOccurrences_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::GetVulnzOccurrencesSummary(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest& request, ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetVulnzOccurrencesSummary_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse>* ContainerAnalysis::Stub::AsyncGetVulnzOccurrencesSummaryRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse>::Create(channel_.get(), cq, rpcmethod_GetVulnzOccurrencesSummary_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse>* ContainerAnalysis::Stub::PrepareAsyncGetVulnzOccurrencesSummaryRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse>::Create(channel_.get(), cq, rpcmethod_GetVulnzOccurrencesSummary_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::SetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::google::iam::v1::Policy* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SetIamPolicy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* ContainerAnalysis::Stub::AsyncSetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::v1::Policy>::Create(channel_.get(), cq, rpcmethod_SetIamPolicy_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* ContainerAnalysis::Stub::PrepareAsyncSetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::v1::Policy>::Create(channel_.get(), cq, rpcmethod_SetIamPolicy_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::GetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::google::iam::v1::Policy* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetIamPolicy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* ContainerAnalysis::Stub::AsyncGetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::v1::Policy>::Create(channel_.get(), cq, rpcmethod_GetIamPolicy_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* ContainerAnalysis::Stub::PrepareAsyncGetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::v1::Policy>::Create(channel_.get(), cq, rpcmethod_GetIamPolicy_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::TestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::google::iam::v1::TestIamPermissionsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_TestIamPermissions_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>* ContainerAnalysis::Stub::AsyncTestIamPermissionsRaw(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::v1::TestIamPermissionsResponse>::Create(channel_.get(), cq, rpcmethod_TestIamPermissions_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>* ContainerAnalysis::Stub::PrepareAsyncTestIamPermissionsRaw(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::v1::TestIamPermissionsResponse>::Create(channel_.get(), cq, rpcmethod_TestIamPermissions_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::CreateOperation(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateOperation_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* ContainerAnalysis::Stub::AsyncCreateOperationRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateOperation_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* ContainerAnalysis::Stub::PrepareAsyncCreateOperationRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateOperation_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::UpdateOperation(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateOperation_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* ContainerAnalysis::Stub::AsyncUpdateOperationRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_UpdateOperation_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* ContainerAnalysis::Stub::PrepareAsyncUpdateOperationRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_UpdateOperation_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::GetScanConfig(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetScanConfigRequest& request, ::google::devtools::containeranalysis::v1alpha1::ScanConfig* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetScanConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::ScanConfig>* ContainerAnalysis::Stub::AsyncGetScanConfigRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetScanConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::ScanConfig>::Create(channel_.get(), cq, rpcmethod_GetScanConfig_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::ScanConfig>* ContainerAnalysis::Stub::PrepareAsyncGetScanConfigRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetScanConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::ScanConfig>::Create(channel_.get(), cq, rpcmethod_GetScanConfig_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::ListScanConfigs(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest& request, ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListScanConfigs_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse>* ContainerAnalysis::Stub::AsyncListScanConfigsRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse>::Create(channel_.get(), cq, rpcmethod_ListScanConfigs_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse>* ContainerAnalysis::Stub::PrepareAsyncListScanConfigsRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse>::Create(channel_.get(), cq, rpcmethod_ListScanConfigs_, context, request, false);
}

::grpc::Status ContainerAnalysis::Stub::UpdateScanConfig(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest& request, ::google::devtools::containeranalysis::v1alpha1::ScanConfig* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateScanConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::ScanConfig>* ContainerAnalysis::Stub::AsyncUpdateScanConfigRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::ScanConfig>::Create(channel_.get(), cq, rpcmethod_UpdateScanConfig_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::devtools::containeranalysis::v1alpha1::ScanConfig>* ContainerAnalysis::Stub::PrepareAsyncUpdateScanConfigRaw(::grpc::ClientContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::devtools::containeranalysis::v1alpha1::ScanConfig>::Create(channel_.get(), cq, rpcmethod_UpdateScanConfig_, context, request, false);
}

ContainerAnalysis::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceRequest, ::google::devtools::containeranalysis::v1alpha1::Occurrence>(
          std::mem_fn(&ContainerAnalysis::Service::GetOccurrence), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest, ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse>(
          std::mem_fn(&ContainerAnalysis::Service::ListOccurrences), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::DeleteOccurrenceRequest, ::google::protobuf::Empty>(
          std::mem_fn(&ContainerAnalysis::Service::DeleteOccurrence), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest, ::google::devtools::containeranalysis::v1alpha1::Occurrence>(
          std::mem_fn(&ContainerAnalysis::Service::CreateOccurrence), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest, ::google::devtools::containeranalysis::v1alpha1::Occurrence>(
          std::mem_fn(&ContainerAnalysis::Service::UpdateOccurrence), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceNoteRequest, ::google::devtools::containeranalysis::v1alpha1::Note>(
          std::mem_fn(&ContainerAnalysis::Service::GetOccurrenceNote), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::GetNoteRequest, ::google::devtools::containeranalysis::v1alpha1::Note>(
          std::mem_fn(&ContainerAnalysis::Service::GetNote), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::ListNotesRequest, ::google::devtools::containeranalysis::v1alpha1::ListNotesResponse>(
          std::mem_fn(&ContainerAnalysis::Service::ListNotes), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::DeleteNoteRequest, ::google::protobuf::Empty>(
          std::mem_fn(&ContainerAnalysis::Service::DeleteNote), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest, ::google::devtools::containeranalysis::v1alpha1::Note>(
          std::mem_fn(&ContainerAnalysis::Service::CreateNote), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest, ::google::devtools::containeranalysis::v1alpha1::Note>(
          std::mem_fn(&ContainerAnalysis::Service::UpdateNote), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest, ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse>(
          std::mem_fn(&ContainerAnalysis::Service::ListNoteOccurrences), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest, ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse>(
          std::mem_fn(&ContainerAnalysis::Service::GetVulnzOccurrencesSummary), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::iam::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>(
          std::mem_fn(&ContainerAnalysis::Service::SetIamPolicy), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::iam::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>(
          std::mem_fn(&ContainerAnalysis::Service::GetIamPolicy), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::iam::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>(
          std::mem_fn(&ContainerAnalysis::Service::TestIamPermissions), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[16],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest, ::google::longrunning::Operation>(
          std::mem_fn(&ContainerAnalysis::Service::CreateOperation), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[17],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest, ::google::longrunning::Operation>(
          std::mem_fn(&ContainerAnalysis::Service::UpdateOperation), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[18],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::GetScanConfigRequest, ::google::devtools::containeranalysis::v1alpha1::ScanConfig>(
          std::mem_fn(&ContainerAnalysis::Service::GetScanConfig), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[19],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest, ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse>(
          std::mem_fn(&ContainerAnalysis::Service::ListScanConfigs), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ContainerAnalysis_method_names[20],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ContainerAnalysis::Service, ::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest, ::google::devtools::containeranalysis::v1alpha1::ScanConfig>(
          std::mem_fn(&ContainerAnalysis::Service::UpdateScanConfig), this)));
}

ContainerAnalysis::Service::~Service() {
}

::grpc::Status ContainerAnalysis::Service::GetOccurrence(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceRequest* request, ::google::devtools::containeranalysis::v1alpha1::Occurrence* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::ListOccurrences(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesRequest* request, ::google::devtools::containeranalysis::v1alpha1::ListOccurrencesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::DeleteOccurrence(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::DeleteOccurrenceRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::CreateOccurrence(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::CreateOccurrenceRequest* request, ::google::devtools::containeranalysis::v1alpha1::Occurrence* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::UpdateOccurrence(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateOccurrenceRequest* request, ::google::devtools::containeranalysis::v1alpha1::Occurrence* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::GetOccurrenceNote(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetOccurrenceNoteRequest* request, ::google::devtools::containeranalysis::v1alpha1::Note* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::GetNote(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetNoteRequest* request, ::google::devtools::containeranalysis::v1alpha1::Note* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::ListNotes(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListNotesRequest* request, ::google::devtools::containeranalysis::v1alpha1::ListNotesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::DeleteNote(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::DeleteNoteRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::CreateNote(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::CreateNoteRequest* request, ::google::devtools::containeranalysis::v1alpha1::Note* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::UpdateNote(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateNoteRequest* request, ::google::devtools::containeranalysis::v1alpha1::Note* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::ListNoteOccurrences(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesRequest* request, ::google::devtools::containeranalysis::v1alpha1::ListNoteOccurrencesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::GetVulnzOccurrencesSummary(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryRequest* request, ::google::devtools::containeranalysis::v1alpha1::GetVulnzOccurrencesSummaryResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::SetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::GetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::TestIamPermissions(::grpc::ServerContext* context, const ::google::iam::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::CreateOperation(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::CreateOperationRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::UpdateOperation(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateOperationRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::GetScanConfig(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::GetScanConfigRequest* request, ::google::devtools::containeranalysis::v1alpha1::ScanConfig* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::ListScanConfigs(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsRequest* request, ::google::devtools::containeranalysis::v1alpha1::ListScanConfigsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ContainerAnalysis::Service::UpdateScanConfig(::grpc::ServerContext* context, const ::google::devtools::containeranalysis::v1alpha1::UpdateScanConfigRequest* request, ::google::devtools::containeranalysis::v1alpha1::ScanConfig* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace devtools
}  // namespace containeranalysis
}  // namespace v1alpha1

