// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouderrorreporting/v1beta1/error_group_service.proto

#ifndef PROTOBUF_INCLUDED_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fgroup_5fservice_2eproto
#define PROTOBUF_INCLUDED_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fgroup_5fservice_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/devtools/clouderrorreporting/v1beta1/common.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fgroup_5fservice_2eproto 

namespace protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fgroup_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fgroup_5fservice_2eproto
namespace google {
namespace devtools {
namespace clouderrorreporting {
namespace v1beta1 {
class GetGroupRequest;
class GetGroupRequestDefaultTypeInternal;
extern GetGroupRequestDefaultTypeInternal _GetGroupRequest_default_instance_;
class UpdateGroupRequest;
class UpdateGroupRequestDefaultTypeInternal;
extern UpdateGroupRequestDefaultTypeInternal _UpdateGroupRequest_default_instance_;
}  // namespace v1beta1
}  // namespace clouderrorreporting
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::devtools::clouderrorreporting::v1beta1::GetGroupRequest* Arena::CreateMaybeMessage<::google::devtools::clouderrorreporting::v1beta1::GetGroupRequest>(Arena*);
template<> ::google::devtools::clouderrorreporting::v1beta1::UpdateGroupRequest* Arena::CreateMaybeMessage<::google::devtools::clouderrorreporting::v1beta1::UpdateGroupRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace devtools {
namespace clouderrorreporting {
namespace v1beta1 {

// ===================================================================

class GetGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.GetGroupRequest) */ {
 public:
  GetGroupRequest();
  virtual ~GetGroupRequest();

  GetGroupRequest(const GetGroupRequest& from);

  inline GetGroupRequest& operator=(const GetGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGroupRequest(GetGroupRequest&& from) noexcept
    : GetGroupRequest() {
    *this = ::std::move(from);
  }

  inline GetGroupRequest& operator=(GetGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGroupRequest* internal_default_instance() {
    return reinterpret_cast<const GetGroupRequest*>(
               &_GetGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GetGroupRequest* other);
  friend void swap(GetGroupRequest& a, GetGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGroupRequest* New() const final {
    return CreateMaybeMessage<GetGroupRequest>(NULL);
  }

  GetGroupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetGroupRequest& from);
  void MergeFrom(const GetGroupRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string group_name = 1;
  void clear_group_name();
  static const int kGroupNameFieldNumber = 1;
  const ::std::string& group_name() const;
  void set_group_name(const ::std::string& value);
  #if LANG_CXX11
  void set_group_name(::std::string&& value);
  #endif
  void set_group_name(const char* value);
  void set_group_name(const char* value, size_t size);
  ::std::string* mutable_group_name();
  ::std::string* release_group_name();
  void set_allocated_group_name(::std::string* group_name);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.GetGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr group_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fgroup_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.UpdateGroupRequest) */ {
 public:
  UpdateGroupRequest();
  virtual ~UpdateGroupRequest();

  UpdateGroupRequest(const UpdateGroupRequest& from);

  inline UpdateGroupRequest& operator=(const UpdateGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateGroupRequest(UpdateGroupRequest&& from) noexcept
    : UpdateGroupRequest() {
    *this = ::std::move(from);
  }

  inline UpdateGroupRequest& operator=(UpdateGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateGroupRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateGroupRequest*>(
               &_UpdateGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(UpdateGroupRequest* other);
  friend void swap(UpdateGroupRequest& a, UpdateGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateGroupRequest* New() const final {
    return CreateMaybeMessage<UpdateGroupRequest>(NULL);
  }

  UpdateGroupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateGroupRequest& from);
  void MergeFrom(const UpdateGroupRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
  bool has_group() const;
  void clear_group();
  static const int kGroupFieldNumber = 1;
  private:
  const ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup& _internal_group() const;
  public:
  const ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup& group() const;
  ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* release_group();
  ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* mutable_group();
  void set_allocated_group(::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* group);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.UpdateGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* group_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fgroup_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetGroupRequest

// string group_name = 1;
inline void GetGroupRequest::clear_group_name() {
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGroupRequest::group_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.GetGroupRequest.group_name)
  return group_name_.GetNoArena();
}
inline void GetGroupRequest::set_group_name(const ::std::string& value) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.GetGroupRequest.group_name)
}
#if LANG_CXX11
inline void GetGroupRequest::set_group_name(::std::string&& value) {
  
  group_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.clouderrorreporting.v1beta1.GetGroupRequest.group_name)
}
#endif
inline void GetGroupRequest::set_group_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.GetGroupRequest.group_name)
}
inline void GetGroupRequest::set_group_name(const char* value, size_t size) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.GetGroupRequest.group_name)
}
inline ::std::string* GetGroupRequest::mutable_group_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.GetGroupRequest.group_name)
  return group_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGroupRequest::release_group_name() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.GetGroupRequest.group_name)
  
  return group_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGroupRequest::set_allocated_group_name(::std::string* group_name) {
  if (group_name != NULL) {
    
  } else {
    
  }
  group_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.GetGroupRequest.group_name)
}

// -------------------------------------------------------------------

// UpdateGroupRequest

// .google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
inline bool UpdateGroupRequest::has_group() const {
  return this != internal_default_instance() && group_ != NULL;
}
inline const ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup& UpdateGroupRequest::_internal_group() const {
  return *group_;
}
inline const ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup& UpdateGroupRequest::group() const {
  const ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* p = group_;
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.UpdateGroupRequest.group)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup*>(
      &::google::devtools::clouderrorreporting::v1beta1::_ErrorGroup_default_instance_);
}
inline ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* UpdateGroupRequest::release_group() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.UpdateGroupRequest.group)
  
  ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* temp = group_;
  group_ = NULL;
  return temp;
}
inline ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* UpdateGroupRequest::mutable_group() {
  
  if (group_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::clouderrorreporting::v1beta1::ErrorGroup>(GetArenaNoVirtual());
    group_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.UpdateGroupRequest.group)
  return group_;
}
inline void UpdateGroupRequest::set_allocated_group(::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* group) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(group_);
  }
  if (group) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group, submessage_arena);
    }
    
  } else {
    
  }
  group_ = group;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.UpdateGroupRequest.group)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace clouderrorreporting
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fgroup_5fservice_2eproto
