// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouderrorreporting/v1beta1/report_errors_service.proto

#include "google/devtools/clouderrorreporting/v1beta1/report_errors_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServiceContext;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ErrorContext;
}  // namespace protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto
namespace protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ReportedErrorEvent;
}  // namespace protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace devtools {
namespace clouderrorreporting {
namespace v1beta1 {
class ReportErrorEventRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportErrorEventRequest>
      _instance;
} _ReportErrorEventRequest_default_instance_;
class ReportErrorEventResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportErrorEventResponse>
      _instance;
} _ReportErrorEventResponse_default_instance_;
class ReportedErrorEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportedErrorEvent>
      _instance;
} _ReportedErrorEvent_default_instance_;
}  // namespace v1beta1
}  // namespace clouderrorreporting
}  // namespace devtools
}  // namespace google
namespace protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto {
static void InitDefaultsReportErrorEventRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::clouderrorreporting::v1beta1::_ReportErrorEventRequest_default_instance_;
    new (ptr) ::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReportErrorEventRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReportErrorEventRequest}, {
      &protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::scc_info_ReportedErrorEvent.base,}};

static void InitDefaultsReportErrorEventResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::clouderrorreporting::v1beta1::_ReportErrorEventResponse_default_instance_;
    new (ptr) ::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReportErrorEventResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReportErrorEventResponse}, {}};

static void InitDefaultsReportedErrorEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::clouderrorreporting::v1beta1::_ReportedErrorEvent_default_instance_;
    new (ptr) ::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ReportedErrorEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsReportedErrorEvent}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto::scc_info_ServiceContext.base,
      &protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto::scc_info_ErrorContext.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ReportErrorEventRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportErrorEventResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportedErrorEvent.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventRequest, project_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventRequest, event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent, event_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent, service_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent, context_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventRequest)},
  { 7, -1, sizeof(::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventResponse)},
  { 12, -1, sizeof(::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::clouderrorreporting::v1beta1::_ReportErrorEventRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::clouderrorreporting::v1beta1::_ReportErrorEventResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::clouderrorreporting::v1beta1::_ReportedErrorEvent_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/devtools/clouderrorreporting/v1beta1/report_errors_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nGgoogle/devtools/clouderrorreporting/v1"
      "beta1/report_errors_service.proto\022+googl"
      "e.devtools.clouderrorreporting.v1beta1\032\034"
      "google/api/annotations.proto\0328google/dev"
      "tools/clouderrorreporting/v1beta1/common"
      ".proto\032\037google/protobuf/timestamp.proto\""
      "\177\n\027ReportErrorEventRequest\022\024\n\014project_na"
      "me\030\001 \001(\t\022N\n\005event\030\002 \001(\0132\?.google.devtool"
      "s.clouderrorreporting.v1beta1.ReportedEr"
      "rorEvent\"\032\n\030ReportErrorEventResponse\"\367\001\n"
      "\022ReportedErrorEvent\022.\n\nevent_time\030\001 \001(\0132"
      "\032.google.protobuf.Timestamp\022T\n\017service_c"
      "ontext\030\002 \001(\0132;.google.devtools.clouderro"
      "rreporting.v1beta1.ServiceContext\022\017\n\007mes"
      "sage\030\003 \001(\t\022J\n\007context\030\004 \001(\01329.google.dev"
      "tools.clouderrorreporting.v1beta1.ErrorC"
      "ontext2\370\001\n\023ReportErrorsService\022\340\001\n\020Repor"
      "tErrorEvent\022D.google.devtools.clouderror"
      "reporting.v1beta1.ReportErrorEventReques"
      "t\032E.google.devtools.clouderrorreporting."
      "v1beta1.ReportErrorEventResponse\"\?\202\323\344\223\0029"
      "\"0/v1beta1/{project_name=projects/*}/eve"
      "nts:report:\005eventB\371\001\n/com.google.devtool"
      "s.clouderrorreporting.v1beta1B\030ReportErr"
      "orsServiceProtoP\001Z^google.golang.org/gen"
      "proto/googleapis/devtools/clouderrorrepo"
      "rting/v1beta1;clouderrorreporting\252\002#Goog"
      "le.Cloud.ErrorReporting.V1Beta1\312\002#Google"
      "\\Cloud\\ErrorReporting\\V1beta1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1157);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/clouderrorreporting/v1beta1/report_errors_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto
namespace google {
namespace devtools {
namespace clouderrorreporting {
namespace v1beta1 {

// ===================================================================

void ReportErrorEventRequest::InitAsDefaultInstance() {
  ::google::devtools::clouderrorreporting::v1beta1::_ReportErrorEventRequest_default_instance_._instance.get_mutable()->event_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent*>(
      ::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportErrorEventRequest::kProjectNameFieldNumber;
const int ReportErrorEventRequest::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportErrorEventRequest::ReportErrorEventRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::scc_info_ReportErrorEventRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
}
ReportErrorEventRequest::ReportErrorEventRequest(const ReportErrorEventRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_name().size() > 0) {
    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  if (from.has_event()) {
    event_ = new ::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
}

void ReportErrorEventRequest::SharedCtor() {
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_ = NULL;
}

ReportErrorEventRequest::~ReportErrorEventRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  SharedDtor();
}

void ReportErrorEventRequest::SharedDtor() {
  project_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete event_;
}

void ReportErrorEventRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportErrorEventRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportErrorEventRequest& ReportErrorEventRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::scc_info_ReportErrorEventRequest.base);
  return *internal_default_instance();
}


void ReportErrorEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
  _internal_metadata_.Clear();
}

bool ReportErrorEventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_name().data(), static_cast<int>(this->project_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.project_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  return false;
#undef DO_
}

void ReportErrorEventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), static_cast<int>(this->project_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.project_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_name(), output);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent event = 2;
  if (this->has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_event(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
}

::google::protobuf::uint8* ReportErrorEventRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), static_cast<int>(this->project_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.project_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_name(), target);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent event = 2;
  if (this->has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_event(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  return target;
}

size_t ReportErrorEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_name = 1;
  if (this->project_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_name());
  }

  // .google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent event = 2;
  if (this->has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportErrorEventRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportErrorEventRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportErrorEventRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
    MergeFrom(*source);
  }
}

void ReportErrorEventRequest::MergeFrom(const ReportErrorEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_name().size() > 0) {

    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  if (from.has_event()) {
    mutable_event()->::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent::MergeFrom(from.event());
  }
}

void ReportErrorEventRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportErrorEventRequest::CopyFrom(const ReportErrorEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportErrorEventRequest::IsInitialized() const {
  return true;
}

void ReportErrorEventRequest::Swap(ReportErrorEventRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportErrorEventRequest::InternalSwap(ReportErrorEventRequest* other) {
  using std::swap;
  project_name_.Swap(&other->project_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(event_, other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportErrorEventRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportErrorEventResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportErrorEventResponse::ReportErrorEventResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::scc_info_ReportErrorEventResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
}
ReportErrorEventResponse::ReportErrorEventResponse(const ReportErrorEventResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
}

void ReportErrorEventResponse::SharedCtor() {
}

ReportErrorEventResponse::~ReportErrorEventResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  SharedDtor();
}

void ReportErrorEventResponse::SharedDtor() {
}

void ReportErrorEventResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportErrorEventResponse::descriptor() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportErrorEventResponse& ReportErrorEventResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::scc_info_ReportErrorEventResponse.base);
  return *internal_default_instance();
}


void ReportErrorEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReportErrorEventResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  return false;
#undef DO_
}

void ReportErrorEventResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
}

::google::protobuf::uint8* ReportErrorEventResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  return target;
}

size_t ReportErrorEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportErrorEventResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportErrorEventResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportErrorEventResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
    MergeFrom(*source);
  }
}

void ReportErrorEventResponse::MergeFrom(const ReportErrorEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReportErrorEventResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportErrorEventResponse::CopyFrom(const ReportErrorEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportErrorEventResponse::IsInitialized() const {
  return true;
}

void ReportErrorEventResponse::Swap(ReportErrorEventResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportErrorEventResponse::InternalSwap(ReportErrorEventResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportErrorEventResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportedErrorEvent::InitAsDefaultInstance() {
  ::google::devtools::clouderrorreporting::v1beta1::_ReportedErrorEvent_default_instance_._instance.get_mutable()->event_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::clouderrorreporting::v1beta1::_ReportedErrorEvent_default_instance_._instance.get_mutable()->service_context_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ServiceContext*>(
      ::google::devtools::clouderrorreporting::v1beta1::ServiceContext::internal_default_instance());
  ::google::devtools::clouderrorreporting::v1beta1::_ReportedErrorEvent_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ErrorContext*>(
      ::google::devtools::clouderrorreporting::v1beta1::ErrorContext::internal_default_instance());
}
void ReportedErrorEvent::clear_event_time() {
  if (GetArenaNoVirtual() == NULL && event_time_ != NULL) {
    delete event_time_;
  }
  event_time_ = NULL;
}
void ReportedErrorEvent::clear_service_context() {
  if (GetArenaNoVirtual() == NULL && service_context_ != NULL) {
    delete service_context_;
  }
  service_context_ = NULL;
}
void ReportedErrorEvent::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportedErrorEvent::kEventTimeFieldNumber;
const int ReportedErrorEvent::kServiceContextFieldNumber;
const int ReportedErrorEvent::kMessageFieldNumber;
const int ReportedErrorEvent::kContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportedErrorEvent::ReportedErrorEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::scc_info_ReportedErrorEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
}
ReportedErrorEvent::ReportedErrorEvent(const ReportedErrorEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_event_time()) {
    event_time_ = new ::google::protobuf::Timestamp(*from.event_time_);
  } else {
    event_time_ = NULL;
  }
  if (from.has_service_context()) {
    service_context_ = new ::google::devtools::clouderrorreporting::v1beta1::ServiceContext(*from.service_context_);
  } else {
    service_context_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::devtools::clouderrorreporting::v1beta1::ErrorContext(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
}

void ReportedErrorEvent::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&event_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&context_) -
      reinterpret_cast<char*>(&event_time_)) + sizeof(context_));
}

ReportedErrorEvent::~ReportedErrorEvent() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  SharedDtor();
}

void ReportedErrorEvent::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete event_time_;
  if (this != internal_default_instance()) delete service_context_;
  if (this != internal_default_instance()) delete context_;
}

void ReportedErrorEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportedErrorEvent::descriptor() {
  ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportedErrorEvent& ReportedErrorEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::scc_info_ReportedErrorEvent.base);
  return *internal_default_instance();
}


void ReportedErrorEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && event_time_ != NULL) {
    delete event_time_;
  }
  event_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && service_context_ != NULL) {
    delete service_context_;
  }
  service_context_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  _internal_metadata_.Clear();
}

bool ReportedErrorEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp event_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_service_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  return false;
#undef DO_
}

void ReportedErrorEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp event_time = 1;
  if (this->has_event_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_event_time(), output);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
  if (this->has_service_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_service_context(), output);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 4;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_context(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
}

::google::protobuf::uint8* ReportedErrorEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp event_time = 1;
  if (this->has_event_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_event_time(), deterministic, target);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
  if (this->has_service_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_service_context(), deterministic, target);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 4;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_context(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  return target;
}

size_t ReportedErrorEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .google.protobuf.Timestamp event_time = 1;
  if (this->has_event_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_time_);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
  if (this->has_service_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *service_context_);
  }

  // .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 4;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportedErrorEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportedErrorEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportedErrorEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
    MergeFrom(*source);
  }
}

void ReportedErrorEvent::MergeFrom(const ReportedErrorEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_event_time()) {
    mutable_event_time()->::google::protobuf::Timestamp::MergeFrom(from.event_time());
  }
  if (from.has_service_context()) {
    mutable_service_context()->::google::devtools::clouderrorreporting::v1beta1::ServiceContext::MergeFrom(from.service_context());
  }
  if (from.has_context()) {
    mutable_context()->::google::devtools::clouderrorreporting::v1beta1::ErrorContext::MergeFrom(from.context());
  }
}

void ReportedErrorEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportedErrorEvent::CopyFrom(const ReportedErrorEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportedErrorEvent::IsInitialized() const {
  return true;
}

void ReportedErrorEvent::Swap(ReportedErrorEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportedErrorEvent::InternalSwap(ReportedErrorEvent* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(event_time_, other->event_time_);
  swap(service_context_, other->service_context_);
  swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportedErrorEvent::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace clouderrorreporting
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventRequest* Arena::CreateMaybeMessage< ::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventResponse* Arena::CreateMaybeMessage< ::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::clouderrorreporting::v1beta1::ReportErrorEventResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent* Arena::CreateMaybeMessage< ::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
