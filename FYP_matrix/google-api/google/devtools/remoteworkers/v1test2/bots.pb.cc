// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/remoteworkers/v1test2/bots.proto

#include "google/devtools/remoteworkers/v1test2/bots.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_BotSession;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Lease;
}  // namespace protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto
namespace protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fworker_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fworker_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Worker;
}  // namespace protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fworker_2eproto
namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_google_2frpc_2fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2frpc_2fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Status;
}  // namespace protobuf_google_2frpc_2fstatus_2eproto
namespace google {
namespace devtools {
namespace remoteworkers {
namespace v1test2 {
class BotSessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BotSession>
      _instance;
} _BotSession_default_instance_;
class LeaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lease>
      _instance;
} _Lease_default_instance_;
class AdminTempDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdminTemp>
      _instance;
} _AdminTemp_default_instance_;
class CreateBotSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateBotSessionRequest>
      _instance;
} _CreateBotSessionRequest_default_instance_;
class UpdateBotSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateBotSessionRequest>
      _instance;
} _UpdateBotSessionRequest_default_instance_;
class PostBotEventTempRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PostBotEventTempRequest>
      _instance;
} _PostBotEventTempRequest_default_instance_;
}  // namespace v1test2
}  // namespace remoteworkers
}  // namespace devtools
}  // namespace google
namespace protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto {
static void InitDefaultsBotSession() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::remoteworkers::v1test2::_BotSession_default_instance_;
    new (ptr) ::google::devtools::remoteworkers::v1test2::BotSession();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::remoteworkers::v1test2::BotSession::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_BotSession =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsBotSession}, {
      &protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fworker_2eproto::scc_info_Worker.base,
      &protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_Lease.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsLease() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::remoteworkers::v1test2::_Lease_default_instance_;
    new (ptr) ::google::devtools::remoteworkers::v1test2::Lease();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::remoteworkers::v1test2::Lease::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Lease =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsLease}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,
      &protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fworker_2eproto::scc_info_Worker.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsAdminTemp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::remoteworkers::v1test2::_AdminTemp_default_instance_;
    new (ptr) ::google::devtools::remoteworkers::v1test2::AdminTemp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::remoteworkers::v1test2::AdminTemp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AdminTemp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdminTemp}, {}};

static void InitDefaultsCreateBotSessionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::remoteworkers::v1test2::_CreateBotSessionRequest_default_instance_;
    new (ptr) ::google::devtools::remoteworkers::v1test2::CreateBotSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::remoteworkers::v1test2::CreateBotSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateBotSessionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateBotSessionRequest}, {
      &protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_BotSession.base,}};

static void InitDefaultsUpdateBotSessionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::remoteworkers::v1test2::_UpdateBotSessionRequest_default_instance_;
    new (ptr) ::google::devtools::remoteworkers::v1test2::UpdateBotSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::remoteworkers::v1test2::UpdateBotSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateBotSessionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateBotSessionRequest}, {
      &protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_BotSession.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

static void InitDefaultsPostBotEventTempRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::remoteworkers::v1test2::_PostBotEventTempRequest_default_instance_;
    new (ptr) ::google::devtools::remoteworkers::v1test2::PostBotEventTempRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::remoteworkers::v1test2::PostBotEventTempRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PostBotEventTempRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPostBotEventTempRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BotSession.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Lease.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdminTemp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateBotSessionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateBotSessionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PostBotEventTempRequest.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::BotSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::BotSession, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::BotSession, bot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::BotSession, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::BotSession, worker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::BotSession, leases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::BotSession, expire_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::BotSession, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::Lease, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::Lease, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::Lease, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::Lease, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::Lease, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::Lease, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::Lease, requirements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::Lease, expire_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::Lease, assignment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::Lease, inline_assignment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::AdminTemp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::AdminTemp, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::AdminTemp, arg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::CreateBotSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::CreateBotSessionRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::CreateBotSessionRequest, bot_session_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::UpdateBotSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::UpdateBotSessionRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::UpdateBotSessionRequest, bot_session_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::UpdateBotSessionRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::PostBotEventTempRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::PostBotEventTempRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::PostBotEventTempRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::remoteworkers::v1test2::PostBotEventTempRequest, msg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::devtools::remoteworkers::v1test2::BotSession)},
  { 12, -1, sizeof(::google::devtools::remoteworkers::v1test2::Lease)},
  { 26, -1, sizeof(::google::devtools::remoteworkers::v1test2::AdminTemp)},
  { 33, -1, sizeof(::google::devtools::remoteworkers::v1test2::CreateBotSessionRequest)},
  { 40, -1, sizeof(::google::devtools::remoteworkers::v1test2::UpdateBotSessionRequest)},
  { 48, -1, sizeof(::google::devtools::remoteworkers::v1test2::PostBotEventTempRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::remoteworkers::v1test2::_BotSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::remoteworkers::v1test2::_Lease_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::remoteworkers::v1test2::_AdminTemp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::remoteworkers::v1test2::_CreateBotSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::remoteworkers::v1test2::_UpdateBotSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::remoteworkers::v1test2::_PostBotEventTempRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/devtools/remoteworkers/v1test2/bots.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n0google/devtools/remoteworkers/v1test2/"
      "bots.proto\022%google.devtools.remoteworker"
      "s.v1test2\032\034google/api/annotations.proto\032"
      "2google/devtools/remoteworkers/v1test2/w"
      "orker.proto\032\031google/protobuf/any.proto\032\033"
      "google/protobuf/empty.proto\032 google/prot"
      "obuf/field_mask.proto\032\037google/protobuf/t"
      "imestamp.proto\032\027google/rpc/status.proto\""
      "\253\002\n\nBotSession\022\014\n\004name\030\001 \001(\t\022\016\n\006bot_id\030\002"
      " \001(\t\022@\n\006status\030\003 \001(\01620.google.devtools.r"
      "emoteworkers.v1test2.BotStatus\022=\n\006worker"
      "\030\004 \001(\0132-.google.devtools.remoteworkers.v"
      "1test2.Worker\022<\n\006leases\030\005 \003(\0132,.google.d"
      "evtools.remoteworkers.v1test2.Lease\022/\n\013e"
      "xpire_time\030\006 \001(\0132\032.google.protobuf.Times"
      "tamp\022\017\n\007version\030\007 \001(\t\"\211\003\n\005Lease\022\n\n\002id\030\007 "
      "\001(\t\022%\n\007payload\030\010 \001(\0132\024.google.protobuf.A"
      "ny\022$\n\006result\030\t \001(\0132\024.google.protobuf.Any"
      "\022@\n\005state\030\002 \001(\01621.google.devtools.remote"
      "workers.v1test2.LeaseState\022\"\n\006status\030\003 \001"
      "(\0132\022.google.rpc.Status\022C\n\014requirements\030\004"
      " \001(\0132-.google.devtools.remoteworkers.v1t"
      "est2.Worker\022/\n\013expire_time\030\005 \001(\0132\032.googl"
      "e.protobuf.Timestamp\022\026\n\nassignment\030\001 \001(\t"
      "B\002\030\001\0223\n\021inline_assignment\030\006 \001(\0132\024.google"
      ".protobuf.AnyB\002\030\001\"\305\001\n\tAdminTemp\022I\n\007comma"
      "nd\030\001 \001(\01628.google.devtools.remoteworkers"
      ".v1test2.AdminTemp.Command\022\013\n\003arg\030\002 \001(\t\""
      "`\n\007Command\022\017\n\013UNSPECIFIED\020\000\022\016\n\nBOT_UPDAT"
      "E\020\001\022\017\n\013BOT_RESTART\020\002\022\021\n\rBOT_TERMINATE\020\003\022"
      "\020\n\014HOST_RESTART\020\004\"q\n\027CreateBotSessionReq"
      "uest\022\016\n\006parent\030\001 \001(\t\022F\n\013bot_session\030\002 \001("
      "\01321.google.devtools.remoteworkers.v1test"
      "2.BotSession\"\240\001\n\027UpdateBotSessionRequest"
      "\022\014\n\004name\030\001 \001(\t\022F\n\013bot_session\030\002 \001(\01321.go"
      "ogle.devtools.remoteworkers.v1test2.BotS"
      "ession\022/\n\013update_mask\030\003 \001(\0132\032.google.pro"
      "tobuf.FieldMask\"\265\001\n\027PostBotEventTempRequ"
      "est\022\014\n\004name\030\001 \001(\t\022Q\n\004type\030\002 \001(\0162C.google"
      ".devtools.remoteworkers.v1test2.PostBotE"
      "ventTempRequest.Type\022\013\n\003msg\030\003 \001(\t\",\n\004Typ"
      "e\022\017\n\013UNSPECIFIED\020\000\022\010\n\004INFO\020\001\022\t\n\005ERROR\020\002*"
      "g\n\tBotStatus\022\032\n\026BOT_STATUS_UNSPECIFIED\020\000"
      "\022\006\n\002OK\020\001\022\r\n\tUNHEALTHY\020\002\022\022\n\016HOST_REBOOTIN"
      "G\020\003\022\023\n\017BOT_TERMINATING\020\004*`\n\nLeaseState\022\033"
      "\n\027LEASE_STATE_UNSPECIFIED\020\000\022\013\n\007PENDING\020\001"
      "\022\n\n\006ACTIVE\020\002\022\r\n\tCOMPLETED\020\004\022\r\n\tCANCELLED"
      "\020\0052\250\004\n\004Bots\022\274\001\n\020CreateBotSession\022>.googl"
      "e.devtools.remoteworkers.v1test2.CreateB"
      "otSessionRequest\0321.google.devtools.remot"
      "eworkers.v1test2.BotSession\"5\202\323\344\223\002/\" /v1"
      "test2/{parent=**}/botSessions:\013bot_sessi"
      "on\022\274\001\n\020UpdateBotSession\022>.google.devtool"
      "s.remoteworkers.v1test2.UpdateBotSession"
      "Request\0321.google.devtools.remoteworkers."
      "v1test2.BotSession\"5\202\323\344\223\002/2 /v1test2/{na"
      "me=**/botSessions/*}:\013bot_session\022\241\001\n\020Po"
      "stBotEventTemp\022>.google.devtools.remotew"
      "orkers.v1test2.PostBotEventTempRequest\032\026"
      ".google.protobuf.Empty\"5\202\323\344\223\002/\"*/v1test2"
      "/{name=**/botSessions/*}:postEvent:\001*B\301\001"
      "\n)com.google.devtools.remoteworkers.v1te"
      "st2B\021RemoteWorkersBotsP\001ZRgoogle.golang."
      "org/genproto/googleapis/devtools/remotew"
      "orkers/v1test2;remoteworkers\242\002\002RW\252\002%Goog"
      "le.DevTools.RemoteWorkers.V1Test2b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2641);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/remoteworkers/v1test2/bots.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fworker_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto
namespace google {
namespace devtools {
namespace remoteworkers {
namespace v1test2 {
const ::google::protobuf::EnumDescriptor* AdminTemp_Command_descriptor() {
  protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_enum_descriptors[0];
}
bool AdminTemp_Command_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AdminTemp_Command AdminTemp::UNSPECIFIED;
const AdminTemp_Command AdminTemp::BOT_UPDATE;
const AdminTemp_Command AdminTemp::BOT_RESTART;
const AdminTemp_Command AdminTemp::BOT_TERMINATE;
const AdminTemp_Command AdminTemp::HOST_RESTART;
const AdminTemp_Command AdminTemp::Command_MIN;
const AdminTemp_Command AdminTemp::Command_MAX;
const int AdminTemp::Command_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PostBotEventTempRequest_Type_descriptor() {
  protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_enum_descriptors[1];
}
bool PostBotEventTempRequest_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PostBotEventTempRequest_Type PostBotEventTempRequest::UNSPECIFIED;
const PostBotEventTempRequest_Type PostBotEventTempRequest::INFO;
const PostBotEventTempRequest_Type PostBotEventTempRequest::ERROR;
const PostBotEventTempRequest_Type PostBotEventTempRequest::Type_MIN;
const PostBotEventTempRequest_Type PostBotEventTempRequest::Type_MAX;
const int PostBotEventTempRequest::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BotStatus_descriptor() {
  protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_enum_descriptors[2];
}
bool BotStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LeaseState_descriptor() {
  protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_enum_descriptors[3];
}
bool LeaseState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void BotSession::InitAsDefaultInstance() {
  ::google::devtools::remoteworkers::v1test2::_BotSession_default_instance_._instance.get_mutable()->worker_ = const_cast< ::google::devtools::remoteworkers::v1test2::Worker*>(
      ::google::devtools::remoteworkers::v1test2::Worker::internal_default_instance());
  ::google::devtools::remoteworkers::v1test2::_BotSession_default_instance_._instance.get_mutable()->expire_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void BotSession::clear_worker() {
  if (GetArenaNoVirtual() == NULL && worker_ != NULL) {
    delete worker_;
  }
  worker_ = NULL;
}
void BotSession::clear_expire_time() {
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BotSession::kNameFieldNumber;
const int BotSession::kBotIdFieldNumber;
const int BotSession::kStatusFieldNumber;
const int BotSession::kWorkerFieldNumber;
const int BotSession::kLeasesFieldNumber;
const int BotSession::kExpireTimeFieldNumber;
const int BotSession::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BotSession::BotSession()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_BotSession.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.remoteworkers.v1test2.BotSession)
}
BotSession::BotSession(const BotSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      leases_(from.leases_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  bot_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bot_id().size() > 0) {
    bot_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bot_id_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.has_worker()) {
    worker_ = new ::google::devtools::remoteworkers::v1test2::Worker(*from.worker_);
  } else {
    worker_ = NULL;
  }
  if (from.has_expire_time()) {
    expire_time_ = new ::google::protobuf::Timestamp(*from.expire_time_);
  } else {
    expire_time_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.remoteworkers.v1test2.BotSession)
}

void BotSession::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bot_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&worker_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&worker_)) + sizeof(status_));
}

BotSession::~BotSession() {
  // @@protoc_insertion_point(destructor:google.devtools.remoteworkers.v1test2.BotSession)
  SharedDtor();
}

void BotSession::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bot_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete worker_;
  if (this != internal_default_instance()) delete expire_time_;
}

void BotSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BotSession::descriptor() {
  ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BotSession& BotSession::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_BotSession.base);
  return *internal_default_instance();
}


void BotSession::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.remoteworkers.v1test2.BotSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  leases_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bot_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && worker_ != NULL) {
    delete worker_;
  }
  worker_ = NULL;
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
  status_ = 0;
  _internal_metadata_.Clear();
}

bool BotSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.remoteworkers.v1test2.BotSession)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.remoteworkers.v1test2.BotSession.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bot_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bot_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bot_id().data(), static_cast<int>(this->bot_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.remoteworkers.v1test2.BotSession.bot_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.remoteworkers.v1test2.BotStatus status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::devtools::remoteworkers::v1test2::BotStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.remoteworkers.v1test2.Worker worker = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_worker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.remoteworkers.v1test2.Lease leases = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_leases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expire_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expire_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.remoteworkers.v1test2.BotSession.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.remoteworkers.v1test2.BotSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.remoteworkers.v1test2.BotSession)
  return false;
#undef DO_
}

void BotSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.remoteworkers.v1test2.BotSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.BotSession.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string bot_id = 2;
  if (this->bot_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bot_id().data(), static_cast<int>(this->bot_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.BotSession.bot_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bot_id(), output);
  }

  // .google.devtools.remoteworkers.v1test2.BotStatus status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // .google.devtools.remoteworkers.v1test2.Worker worker = 4;
  if (this->has_worker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_worker(), output);
  }

  // repeated .google.devtools.remoteworkers.v1test2.Lease leases = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->leases_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->leases(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Timestamp expire_time = 6;
  if (this->has_expire_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_expire_time(), output);
  }

  // string version = 7;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.BotSession.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.remoteworkers.v1test2.BotSession)
}

::google::protobuf::uint8* BotSession::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.remoteworkers.v1test2.BotSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.BotSession.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string bot_id = 2;
  if (this->bot_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bot_id().data(), static_cast<int>(this->bot_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.BotSession.bot_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bot_id(), target);
  }

  // .google.devtools.remoteworkers.v1test2.BotStatus status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // .google.devtools.remoteworkers.v1test2.Worker worker = 4;
  if (this->has_worker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_worker(), deterministic, target);
  }

  // repeated .google.devtools.remoteworkers.v1test2.Lease leases = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->leases_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->leases(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Timestamp expire_time = 6;
  if (this->has_expire_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_expire_time(), deterministic, target);
  }

  // string version = 7;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.BotSession.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.remoteworkers.v1test2.BotSession)
  return target;
}

size_t BotSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.remoteworkers.v1test2.BotSession)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.remoteworkers.v1test2.Lease leases = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->leases_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->leases(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string bot_id = 2;
  if (this->bot_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bot_id());
  }

  // string version = 7;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // .google.devtools.remoteworkers.v1test2.Worker worker = 4;
  if (this->has_worker()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *worker_);
  }

  // .google.protobuf.Timestamp expire_time = 6;
  if (this->has_expire_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expire_time_);
  }

  // .google.devtools.remoteworkers.v1test2.BotStatus status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BotSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.remoteworkers.v1test2.BotSession)
  GOOGLE_DCHECK_NE(&from, this);
  const BotSession* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BotSession>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.remoteworkers.v1test2.BotSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.remoteworkers.v1test2.BotSession)
    MergeFrom(*source);
  }
}

void BotSession::MergeFrom(const BotSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.remoteworkers.v1test2.BotSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  leases_.MergeFrom(from.leases_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.bot_id().size() > 0) {

    bot_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bot_id_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.has_worker()) {
    mutable_worker()->::google::devtools::remoteworkers::v1test2::Worker::MergeFrom(from.worker());
  }
  if (from.has_expire_time()) {
    mutable_expire_time()->::google::protobuf::Timestamp::MergeFrom(from.expire_time());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void BotSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.remoteworkers.v1test2.BotSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BotSession::CopyFrom(const BotSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.remoteworkers.v1test2.BotSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BotSession::IsInitialized() const {
  return true;
}

void BotSession::Swap(BotSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BotSession::InternalSwap(BotSession* other) {
  using std::swap;
  CastToBase(&leases_)->InternalSwap(CastToBase(&other->leases_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bot_id_.Swap(&other->bot_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(worker_, other->worker_);
  swap(expire_time_, other->expire_time_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BotSession::GetMetadata() const {
  protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lease::InitAsDefaultInstance() {
  ::google::devtools::remoteworkers::v1test2::_Lease_default_instance_._instance.get_mutable()->payload_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::google::devtools::remoteworkers::v1test2::_Lease_default_instance_._instance.get_mutable()->result_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::google::devtools::remoteworkers::v1test2::_Lease_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
  ::google::devtools::remoteworkers::v1test2::_Lease_default_instance_._instance.get_mutable()->requirements_ = const_cast< ::google::devtools::remoteworkers::v1test2::Worker*>(
      ::google::devtools::remoteworkers::v1test2::Worker::internal_default_instance());
  ::google::devtools::remoteworkers::v1test2::_Lease_default_instance_._instance.get_mutable()->expire_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::devtools::remoteworkers::v1test2::_Lease_default_instance_._instance.get_mutable()->inline_assignment_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void Lease::clear_payload() {
  if (GetArenaNoVirtual() == NULL && payload_ != NULL) {
    delete payload_;
  }
  payload_ = NULL;
}
void Lease::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
}
void Lease::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void Lease::clear_requirements() {
  if (GetArenaNoVirtual() == NULL && requirements_ != NULL) {
    delete requirements_;
  }
  requirements_ = NULL;
}
void Lease::clear_expire_time() {
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
}
void Lease::clear_inline_assignment() {
  if (GetArenaNoVirtual() == NULL && inline_assignment_ != NULL) {
    delete inline_assignment_;
  }
  inline_assignment_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lease::kIdFieldNumber;
const int Lease::kPayloadFieldNumber;
const int Lease::kResultFieldNumber;
const int Lease::kStateFieldNumber;
const int Lease::kStatusFieldNumber;
const int Lease::kRequirementsFieldNumber;
const int Lease::kExpireTimeFieldNumber;
const int Lease::kAssignmentFieldNumber;
const int Lease::kInlineAssignmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lease::Lease()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_Lease.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.remoteworkers.v1test2.Lease)
}
Lease::Lease(const Lease& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  assignment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.assignment().size() > 0) {
    assignment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.assignment_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_requirements()) {
    requirements_ = new ::google::devtools::remoteworkers::v1test2::Worker(*from.requirements_);
  } else {
    requirements_ = NULL;
  }
  if (from.has_expire_time()) {
    expire_time_ = new ::google::protobuf::Timestamp(*from.expire_time_);
  } else {
    expire_time_ = NULL;
  }
  if (from.has_inline_assignment()) {
    inline_assignment_ = new ::google::protobuf::Any(*from.inline_assignment_);
  } else {
    inline_assignment_ = NULL;
  }
  if (from.has_payload()) {
    payload_ = new ::google::protobuf::Any(*from.payload_);
  } else {
    payload_ = NULL;
  }
  if (from.has_result()) {
    result_ = new ::google::protobuf::Any(*from.result_);
  } else {
    result_ = NULL;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.remoteworkers.v1test2.Lease)
}

void Lease::SharedCtor() {
  assignment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&status_)) + sizeof(state_));
}

Lease::~Lease() {
  // @@protoc_insertion_point(destructor:google.devtools.remoteworkers.v1test2.Lease)
  SharedDtor();
}

void Lease::SharedDtor() {
  assignment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete requirements_;
  if (this != internal_default_instance()) delete expire_time_;
  if (this != internal_default_instance()) delete inline_assignment_;
  if (this != internal_default_instance()) delete payload_;
  if (this != internal_default_instance()) delete result_;
}

void Lease::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Lease::descriptor() {
  ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lease& Lease::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_Lease.base);
  return *internal_default_instance();
}


void Lease::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.remoteworkers.v1test2.Lease)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  assignment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && requirements_ != NULL) {
    delete requirements_;
  }
  requirements_ = NULL;
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && inline_assignment_ != NULL) {
    delete inline_assignment_;
  }
  inline_assignment_ = NULL;
  if (GetArenaNoVirtual() == NULL && payload_ != NULL) {
    delete payload_;
  }
  payload_ = NULL;
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
  state_ = 0;
  _internal_metadata_.Clear();
}

bool Lease::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.remoteworkers.v1test2.Lease)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string assignment = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_assignment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->assignment().data(), static_cast<int>(this->assignment().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.remoteworkers.v1test2.Lease.assignment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.remoteworkers.v1test2.LeaseState state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::devtools::remoteworkers::v1test2::LeaseState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.remoteworkers.v1test2.Worker requirements = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_requirements()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expire_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expire_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any inline_assignment = 6 [deprecated = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inline_assignment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.remoteworkers.v1test2.Lease.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any payload = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any result = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.remoteworkers.v1test2.Lease)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.remoteworkers.v1test2.Lease)
  return false;
#undef DO_
}

void Lease::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.remoteworkers.v1test2.Lease)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string assignment = 1 [deprecated = true];
  if (this->assignment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->assignment().data(), static_cast<int>(this->assignment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.Lease.assignment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->assignment(), output);
  }

  // .google.devtools.remoteworkers.v1test2.LeaseState state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // .google.rpc.Status status = 3;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_status(), output);
  }

  // .google.devtools.remoteworkers.v1test2.Worker requirements = 4;
  if (this->has_requirements()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_requirements(), output);
  }

  // .google.protobuf.Timestamp expire_time = 5;
  if (this->has_expire_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_expire_time(), output);
  }

  // .google.protobuf.Any inline_assignment = 6 [deprecated = true];
  if (this->has_inline_assignment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_inline_assignment(), output);
  }

  // string id = 7;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.Lease.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->id(), output);
  }

  // .google.protobuf.Any payload = 8;
  if (this->has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_payload(), output);
  }

  // .google.protobuf.Any result = 9;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.remoteworkers.v1test2.Lease)
}

::google::protobuf::uint8* Lease::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.remoteworkers.v1test2.Lease)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string assignment = 1 [deprecated = true];
  if (this->assignment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->assignment().data(), static_cast<int>(this->assignment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.Lease.assignment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->assignment(), target);
  }

  // .google.devtools.remoteworkers.v1test2.LeaseState state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // .google.rpc.Status status = 3;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_status(), deterministic, target);
  }

  // .google.devtools.remoteworkers.v1test2.Worker requirements = 4;
  if (this->has_requirements()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_requirements(), deterministic, target);
  }

  // .google.protobuf.Timestamp expire_time = 5;
  if (this->has_expire_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_expire_time(), deterministic, target);
  }

  // .google.protobuf.Any inline_assignment = 6 [deprecated = true];
  if (this->has_inline_assignment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_inline_assignment(), deterministic, target);
  }

  // string id = 7;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.Lease.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->id(), target);
  }

  // .google.protobuf.Any payload = 8;
  if (this->has_payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_payload(), deterministic, target);
  }

  // .google.protobuf.Any result = 9;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_result(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.remoteworkers.v1test2.Lease)
  return target;
}

size_t Lease::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.remoteworkers.v1test2.Lease)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string assignment = 1 [deprecated = true];
  if (this->assignment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->assignment());
  }

  // string id = 7;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .google.rpc.Status status = 3;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.devtools.remoteworkers.v1test2.Worker requirements = 4;
  if (this->has_requirements()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *requirements_);
  }

  // .google.protobuf.Timestamp expire_time = 5;
  if (this->has_expire_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expire_time_);
  }

  // .google.protobuf.Any inline_assignment = 6 [deprecated = true];
  if (this->has_inline_assignment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inline_assignment_);
  }

  // .google.protobuf.Any payload = 8;
  if (this->has_payload()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *payload_);
  }

  // .google.protobuf.Any result = 9;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .google.devtools.remoteworkers.v1test2.LeaseState state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Lease::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.remoteworkers.v1test2.Lease)
  GOOGLE_DCHECK_NE(&from, this);
  const Lease* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lease>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.remoteworkers.v1test2.Lease)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.remoteworkers.v1test2.Lease)
    MergeFrom(*source);
  }
}

void Lease::MergeFrom(const Lease& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.remoteworkers.v1test2.Lease)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.assignment().size() > 0) {

    assignment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.assignment_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
  if (from.has_requirements()) {
    mutable_requirements()->::google::devtools::remoteworkers::v1test2::Worker::MergeFrom(from.requirements());
  }
  if (from.has_expire_time()) {
    mutable_expire_time()->::google::protobuf::Timestamp::MergeFrom(from.expire_time());
  }
  if (from.has_inline_assignment()) {
    mutable_inline_assignment()->::google::protobuf::Any::MergeFrom(from.inline_assignment());
  }
  if (from.has_payload()) {
    mutable_payload()->::google::protobuf::Any::MergeFrom(from.payload());
  }
  if (from.has_result()) {
    mutable_result()->::google::protobuf::Any::MergeFrom(from.result());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void Lease::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.remoteworkers.v1test2.Lease)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lease::CopyFrom(const Lease& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.remoteworkers.v1test2.Lease)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lease::IsInitialized() const {
  return true;
}

void Lease::Swap(Lease* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lease::InternalSwap(Lease* other) {
  using std::swap;
  assignment_.Swap(&other->assignment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  swap(requirements_, other->requirements_);
  swap(expire_time_, other->expire_time_);
  swap(inline_assignment_, other->inline_assignment_);
  swap(payload_, other->payload_);
  swap(result_, other->result_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Lease::GetMetadata() const {
  protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AdminTemp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdminTemp::kCommandFieldNumber;
const int AdminTemp::kArgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdminTemp::AdminTemp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_AdminTemp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.remoteworkers.v1test2.AdminTemp)
}
AdminTemp::AdminTemp(const AdminTemp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.arg().size() > 0) {
    arg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arg_);
  }
  command_ = from.command_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.remoteworkers.v1test2.AdminTemp)
}

void AdminTemp::SharedCtor() {
  arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_ = 0;
}

AdminTemp::~AdminTemp() {
  // @@protoc_insertion_point(destructor:google.devtools.remoteworkers.v1test2.AdminTemp)
  SharedDtor();
}

void AdminTemp::SharedDtor() {
  arg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AdminTemp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdminTemp::descriptor() {
  ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdminTemp& AdminTemp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_AdminTemp.base);
  return *internal_default_instance();
}


void AdminTemp::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.remoteworkers.v1test2.AdminTemp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_ = 0;
  _internal_metadata_.Clear();
}

bool AdminTemp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.remoteworkers.v1test2.AdminTemp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.remoteworkers.v1test2.AdminTemp.Command command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_command(static_cast< ::google::devtools::remoteworkers::v1test2::AdminTemp_Command >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string arg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->arg().data(), static_cast<int>(this->arg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.remoteworkers.v1test2.AdminTemp.arg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.remoteworkers.v1test2.AdminTemp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.remoteworkers.v1test2.AdminTemp)
  return false;
#undef DO_
}

void AdminTemp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.remoteworkers.v1test2.AdminTemp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.remoteworkers.v1test2.AdminTemp.Command command = 1;
  if (this->command() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->command(), output);
  }

  // string arg = 2;
  if (this->arg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arg().data(), static_cast<int>(this->arg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.AdminTemp.arg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->arg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.remoteworkers.v1test2.AdminTemp)
}

::google::protobuf::uint8* AdminTemp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.remoteworkers.v1test2.AdminTemp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.remoteworkers.v1test2.AdminTemp.Command command = 1;
  if (this->command() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->command(), target);
  }

  // string arg = 2;
  if (this->arg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arg().data(), static_cast<int>(this->arg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.AdminTemp.arg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->arg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.remoteworkers.v1test2.AdminTemp)
  return target;
}

size_t AdminTemp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.remoteworkers.v1test2.AdminTemp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string arg = 2;
  if (this->arg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->arg());
  }

  // .google.devtools.remoteworkers.v1test2.AdminTemp.Command command = 1;
  if (this->command() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdminTemp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.remoteworkers.v1test2.AdminTemp)
  GOOGLE_DCHECK_NE(&from, this);
  const AdminTemp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdminTemp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.remoteworkers.v1test2.AdminTemp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.remoteworkers.v1test2.AdminTemp)
    MergeFrom(*source);
  }
}

void AdminTemp::MergeFrom(const AdminTemp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.remoteworkers.v1test2.AdminTemp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.arg().size() > 0) {

    arg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arg_);
  }
  if (from.command() != 0) {
    set_command(from.command());
  }
}

void AdminTemp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.remoteworkers.v1test2.AdminTemp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdminTemp::CopyFrom(const AdminTemp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.remoteworkers.v1test2.AdminTemp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdminTemp::IsInitialized() const {
  return true;
}

void AdminTemp::Swap(AdminTemp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdminTemp::InternalSwap(AdminTemp* other) {
  using std::swap;
  arg_.Swap(&other->arg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(command_, other->command_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdminTemp::GetMetadata() const {
  protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateBotSessionRequest::InitAsDefaultInstance() {
  ::google::devtools::remoteworkers::v1test2::_CreateBotSessionRequest_default_instance_._instance.get_mutable()->bot_session_ = const_cast< ::google::devtools::remoteworkers::v1test2::BotSession*>(
      ::google::devtools::remoteworkers::v1test2::BotSession::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateBotSessionRequest::kParentFieldNumber;
const int CreateBotSessionRequest::kBotSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateBotSessionRequest::CreateBotSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_CreateBotSessionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
}
CreateBotSessionRequest::CreateBotSessionRequest(const CreateBotSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_bot_session()) {
    bot_session_ = new ::google::devtools::remoteworkers::v1test2::BotSession(*from.bot_session_);
  } else {
    bot_session_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
}

void CreateBotSessionRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bot_session_ = NULL;
}

CreateBotSessionRequest::~CreateBotSessionRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
  SharedDtor();
}

void CreateBotSessionRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bot_session_;
}

void CreateBotSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateBotSessionRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateBotSessionRequest& CreateBotSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_CreateBotSessionRequest.base);
  return *internal_default_instance();
}


void CreateBotSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && bot_session_ != NULL) {
    delete bot_session_;
  }
  bot_session_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateBotSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.remoteworkers.v1test2.CreateBotSessionRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.remoteworkers.v1test2.BotSession bot_session = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bot_session()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
  return false;
#undef DO_
}

void CreateBotSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.CreateBotSessionRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.devtools.remoteworkers.v1test2.BotSession bot_session = 2;
  if (this->has_bot_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_bot_session(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
}

::google::protobuf::uint8* CreateBotSessionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.CreateBotSessionRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.devtools.remoteworkers.v1test2.BotSession bot_session = 2;
  if (this->has_bot_session()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_bot_session(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
  return target;
}

size_t CreateBotSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.devtools.remoteworkers.v1test2.BotSession bot_session = 2;
  if (this->has_bot_session()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bot_session_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateBotSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateBotSessionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateBotSessionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
    MergeFrom(*source);
  }
}

void CreateBotSessionRequest::MergeFrom(const CreateBotSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_bot_session()) {
    mutable_bot_session()->::google::devtools::remoteworkers::v1test2::BotSession::MergeFrom(from.bot_session());
  }
}

void CreateBotSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBotSessionRequest::CopyFrom(const CreateBotSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.remoteworkers.v1test2.CreateBotSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBotSessionRequest::IsInitialized() const {
  return true;
}

void CreateBotSessionRequest::Swap(CreateBotSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateBotSessionRequest::InternalSwap(CreateBotSessionRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bot_session_, other->bot_session_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateBotSessionRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateBotSessionRequest::InitAsDefaultInstance() {
  ::google::devtools::remoteworkers::v1test2::_UpdateBotSessionRequest_default_instance_._instance.get_mutable()->bot_session_ = const_cast< ::google::devtools::remoteworkers::v1test2::BotSession*>(
      ::google::devtools::remoteworkers::v1test2::BotSession::internal_default_instance());
  ::google::devtools::remoteworkers::v1test2::_UpdateBotSessionRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateBotSessionRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateBotSessionRequest::kNameFieldNumber;
const int UpdateBotSessionRequest::kBotSessionFieldNumber;
const int UpdateBotSessionRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateBotSessionRequest::UpdateBotSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_UpdateBotSessionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
}
UpdateBotSessionRequest::UpdateBotSessionRequest(const UpdateBotSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_bot_session()) {
    bot_session_ = new ::google::devtools::remoteworkers::v1test2::BotSession(*from.bot_session_);
  } else {
    bot_session_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
}

void UpdateBotSessionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bot_session_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&bot_session_)) + sizeof(update_mask_));
}

UpdateBotSessionRequest::~UpdateBotSessionRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
  SharedDtor();
}

void UpdateBotSessionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bot_session_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateBotSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateBotSessionRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateBotSessionRequest& UpdateBotSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_UpdateBotSessionRequest.base);
  return *internal_default_instance();
}


void UpdateBotSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && bot_session_ != NULL) {
    delete bot_session_;
  }
  bot_session_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateBotSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.remoteworkers.v1test2.BotSession bot_session = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bot_session()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
  return false;
#undef DO_
}

void UpdateBotSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.devtools.remoteworkers.v1test2.BotSession bot_session = 2;
  if (this->has_bot_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_bot_session(), output);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_update_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
}

::google::protobuf::uint8* UpdateBotSessionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.devtools.remoteworkers.v1test2.BotSession bot_session = 2;
  if (this->has_bot_session()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_bot_session(), deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_update_mask(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
  return target;
}

size_t UpdateBotSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.devtools.remoteworkers.v1test2.BotSession bot_session = 2;
  if (this->has_bot_session()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bot_session_);
  }

  // .google.protobuf.FieldMask update_mask = 3;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateBotSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateBotSessionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateBotSessionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
    MergeFrom(*source);
  }
}

void UpdateBotSessionRequest::MergeFrom(const UpdateBotSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_bot_session()) {
    mutable_bot_session()->::google::devtools::remoteworkers::v1test2::BotSession::MergeFrom(from.bot_session());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateBotSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateBotSessionRequest::CopyFrom(const UpdateBotSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.remoteworkers.v1test2.UpdateBotSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBotSessionRequest::IsInitialized() const {
  return true;
}

void UpdateBotSessionRequest::Swap(UpdateBotSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateBotSessionRequest::InternalSwap(UpdateBotSessionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bot_session_, other->bot_session_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateBotSessionRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PostBotEventTempRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PostBotEventTempRequest::kNameFieldNumber;
const int PostBotEventTempRequest::kTypeFieldNumber;
const int PostBotEventTempRequest::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PostBotEventTempRequest::PostBotEventTempRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_PostBotEventTempRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
}
PostBotEventTempRequest::PostBotEventTempRequest(const PostBotEventTempRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
}

void PostBotEventTempRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

PostBotEventTempRequest::~PostBotEventTempRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
  SharedDtor();
}

void PostBotEventTempRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PostBotEventTempRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PostBotEventTempRequest::descriptor() {
  ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PostBotEventTempRequest& PostBotEventTempRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::scc_info_PostBotEventTempRequest.base);
  return *internal_default_instance();
}


void PostBotEventTempRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool PostBotEventTempRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.remoteworkers.v1test2.PostBotEventTempRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.remoteworkers.v1test2.PostBotEventTempRequest.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::devtools::remoteworkers::v1test2::PostBotEventTempRequest_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.remoteworkers.v1test2.PostBotEventTempRequest.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
  return false;
#undef DO_
}

void PostBotEventTempRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.PostBotEventTempRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.devtools.remoteworkers.v1test2.PostBotEventTempRequest.Type type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.PostBotEventTempRequest.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
}

::google::protobuf::uint8* PostBotEventTempRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.PostBotEventTempRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.devtools.remoteworkers.v1test2.PostBotEventTempRequest.Type type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.remoteworkers.v1test2.PostBotEventTempRequest.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
  return target;
}

size_t PostBotEventTempRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // .google.devtools.remoteworkers.v1test2.PostBotEventTempRequest.Type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PostBotEventTempRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PostBotEventTempRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PostBotEventTempRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
    MergeFrom(*source);
  }
}

void PostBotEventTempRequest::MergeFrom(const PostBotEventTempRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void PostBotEventTempRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostBotEventTempRequest::CopyFrom(const PostBotEventTempRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.remoteworkers.v1test2.PostBotEventTempRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostBotEventTempRequest::IsInitialized() const {
  return true;
}

void PostBotEventTempRequest::Swap(PostBotEventTempRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PostBotEventTempRequest::InternalSwap(PostBotEventTempRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PostBotEventTempRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fremoteworkers_2fv1test2_2fbots_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1test2
}  // namespace remoteworkers
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::remoteworkers::v1test2::BotSession* Arena::CreateMaybeMessage< ::google::devtools::remoteworkers::v1test2::BotSession >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::remoteworkers::v1test2::BotSession >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::remoteworkers::v1test2::Lease* Arena::CreateMaybeMessage< ::google::devtools::remoteworkers::v1test2::Lease >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::remoteworkers::v1test2::Lease >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::remoteworkers::v1test2::AdminTemp* Arena::CreateMaybeMessage< ::google::devtools::remoteworkers::v1test2::AdminTemp >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::remoteworkers::v1test2::AdminTemp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::remoteworkers::v1test2::CreateBotSessionRequest* Arena::CreateMaybeMessage< ::google::devtools::remoteworkers::v1test2::CreateBotSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::remoteworkers::v1test2::CreateBotSessionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::remoteworkers::v1test2::UpdateBotSessionRequest* Arena::CreateMaybeMessage< ::google::devtools::remoteworkers::v1test2::UpdateBotSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::remoteworkers::v1test2::UpdateBotSessionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::remoteworkers::v1test2::PostBotEventTempRequest* Arena::CreateMaybeMessage< ::google::devtools::remoteworkers::v1test2::PostBotEventTempRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::remoteworkers::v1test2::PostBotEventTempRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
