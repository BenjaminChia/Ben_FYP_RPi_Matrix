// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/configuration.proto

#ifndef PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2fconfiguration_2eproto
#define PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2fconfiguration_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/devtools/resultstore/v2/common.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fresultstore_2fv2_2fconfiguration_2eproto 

namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fconfiguration_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fconfiguration_2eproto
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {
class Configuration;
class ConfigurationDefaultTypeInternal;
extern ConfigurationDefaultTypeInternal _Configuration_default_instance_;
class ConfigurationAttributes;
class ConfigurationAttributesDefaultTypeInternal;
extern ConfigurationAttributesDefaultTypeInternal _ConfigurationAttributes_default_instance_;
class Configuration_Id;
class Configuration_IdDefaultTypeInternal;
extern Configuration_IdDefaultTypeInternal _Configuration_Id_default_instance_;
}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::devtools::resultstore::v2::Configuration* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::Configuration>(Arena*);
template<> ::google::devtools::resultstore::v2::ConfigurationAttributes* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ConfigurationAttributes>(Arena*);
template<> ::google::devtools::resultstore::v2::Configuration_Id* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::Configuration_Id>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {

// ===================================================================

class Configuration_Id : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.Configuration.Id) */ {
 public:
  Configuration_Id();
  virtual ~Configuration_Id();

  Configuration_Id(const Configuration_Id& from);

  inline Configuration_Id& operator=(const Configuration_Id& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Configuration_Id(Configuration_Id&& from) noexcept
    : Configuration_Id() {
    *this = ::std::move(from);
  }

  inline Configuration_Id& operator=(Configuration_Id&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Configuration_Id& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Configuration_Id* internal_default_instance() {
    return reinterpret_cast<const Configuration_Id*>(
               &_Configuration_Id_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Configuration_Id* other);
  friend void swap(Configuration_Id& a, Configuration_Id& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Configuration_Id* New() const final {
    return CreateMaybeMessage<Configuration_Id>(NULL);
  }

  Configuration_Id* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Configuration_Id>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Configuration_Id& from);
  void MergeFrom(const Configuration_Id& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Configuration_Id* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string invocation_id = 1;
  void clear_invocation_id();
  static const int kInvocationIdFieldNumber = 1;
  const ::std::string& invocation_id() const;
  void set_invocation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_invocation_id(::std::string&& value);
  #endif
  void set_invocation_id(const char* value);
  void set_invocation_id(const char* value, size_t size);
  ::std::string* mutable_invocation_id();
  ::std::string* release_invocation_id();
  void set_allocated_invocation_id(::std::string* invocation_id);

  // string configuration_id = 2;
  void clear_configuration_id();
  static const int kConfigurationIdFieldNumber = 2;
  const ::std::string& configuration_id() const;
  void set_configuration_id(const ::std::string& value);
  #if LANG_CXX11
  void set_configuration_id(::std::string&& value);
  #endif
  void set_configuration_id(const char* value);
  void set_configuration_id(const char* value, size_t size);
  ::std::string* mutable_configuration_id();
  ::std::string* release_configuration_id();
  void set_allocated_configuration_id(::std::string* configuration_id);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.Configuration.Id)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr invocation_id_;
  ::google::protobuf::internal::ArenaStringPtr configuration_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fconfiguration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Configuration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.Configuration) */ {
 public:
  Configuration();
  virtual ~Configuration();

  Configuration(const Configuration& from);

  inline Configuration& operator=(const Configuration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Configuration(Configuration&& from) noexcept
    : Configuration() {
    *this = ::std::move(from);
  }

  inline Configuration& operator=(Configuration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Configuration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Configuration* internal_default_instance() {
    return reinterpret_cast<const Configuration*>(
               &_Configuration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Configuration* other);
  friend void swap(Configuration& a, Configuration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Configuration* New() const final {
    return CreateMaybeMessage<Configuration>(NULL);
  }

  Configuration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Configuration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Configuration& from);
  void MergeFrom(const Configuration& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Configuration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Configuration_Id Id;

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.Property properties = 6;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 6;
  ::google::devtools::resultstore::v2::Property* mutable_properties(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >*
      mutable_properties();
  const ::google::devtools::resultstore::v2::Property& properties(int index) const;
  ::google::devtools::resultstore::v2::Property* add_properties();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >&
      properties() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.devtools.resultstore.v2.Configuration.Id id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::devtools::resultstore::v2::Configuration_Id& _internal_id() const;
  public:
  const ::google::devtools::resultstore::v2::Configuration_Id& id() const;
  ::google::devtools::resultstore::v2::Configuration_Id* release_id();
  ::google::devtools::resultstore::v2::Configuration_Id* mutable_id();
  void set_allocated_id(::google::devtools::resultstore::v2::Configuration_Id* id);

  // .google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;
  bool has_status_attributes() const;
  void clear_status_attributes();
  static const int kStatusAttributesFieldNumber = 3;
  private:
  const ::google::devtools::resultstore::v2::StatusAttributes& _internal_status_attributes() const;
  public:
  const ::google::devtools::resultstore::v2::StatusAttributes& status_attributes() const;
  ::google::devtools::resultstore::v2::StatusAttributes* release_status_attributes();
  ::google::devtools::resultstore::v2::StatusAttributes* mutable_status_attributes();
  void set_allocated_status_attributes(::google::devtools::resultstore::v2::StatusAttributes* status_attributes);

  // .google.devtools.resultstore.v2.ConfigurationAttributes configuration_attributes = 5;
  bool has_configuration_attributes() const;
  void clear_configuration_attributes();
  static const int kConfigurationAttributesFieldNumber = 5;
  private:
  const ::google::devtools::resultstore::v2::ConfigurationAttributes& _internal_configuration_attributes() const;
  public:
  const ::google::devtools::resultstore::v2::ConfigurationAttributes& configuration_attributes() const;
  ::google::devtools::resultstore::v2::ConfigurationAttributes* release_configuration_attributes();
  ::google::devtools::resultstore::v2::ConfigurationAttributes* mutable_configuration_attributes();
  void set_allocated_configuration_attributes(::google::devtools::resultstore::v2::ConfigurationAttributes* configuration_attributes);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.Configuration)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property > properties_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::devtools::resultstore::v2::Configuration_Id* id_;
  ::google::devtools::resultstore::v2::StatusAttributes* status_attributes_;
  ::google::devtools::resultstore::v2::ConfigurationAttributes* configuration_attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fconfiguration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigurationAttributes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ConfigurationAttributes) */ {
 public:
  ConfigurationAttributes();
  virtual ~ConfigurationAttributes();

  ConfigurationAttributes(const ConfigurationAttributes& from);

  inline ConfigurationAttributes& operator=(const ConfigurationAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigurationAttributes(ConfigurationAttributes&& from) noexcept
    : ConfigurationAttributes() {
    *this = ::std::move(from);
  }

  inline ConfigurationAttributes& operator=(ConfigurationAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigurationAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigurationAttributes* internal_default_instance() {
    return reinterpret_cast<const ConfigurationAttributes*>(
               &_ConfigurationAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ConfigurationAttributes* other);
  friend void swap(ConfigurationAttributes& a, ConfigurationAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigurationAttributes* New() const final {
    return CreateMaybeMessage<ConfigurationAttributes>(NULL);
  }

  ConfigurationAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigurationAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigurationAttributes& from);
  void MergeFrom(const ConfigurationAttributes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigurationAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cpu = 1;
  void clear_cpu();
  static const int kCpuFieldNumber = 1;
  const ::std::string& cpu() const;
  void set_cpu(const ::std::string& value);
  #if LANG_CXX11
  void set_cpu(::std::string&& value);
  #endif
  void set_cpu(const char* value);
  void set_cpu(const char* value, size_t size);
  ::std::string* mutable_cpu();
  ::std::string* release_cpu();
  void set_allocated_cpu(::std::string* cpu);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ConfigurationAttributes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cpu_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fconfiguration_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Configuration_Id

// string invocation_id = 1;
inline void Configuration_Id::clear_invocation_id() {
  invocation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration_Id::invocation_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Configuration.Id.invocation_id)
  return invocation_id_.GetNoArena();
}
inline void Configuration_Id::set_invocation_id(const ::std::string& value) {
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Configuration.Id.invocation_id)
}
#if LANG_CXX11
inline void Configuration_Id::set_invocation_id(::std::string&& value) {
  
  invocation_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Configuration.Id.invocation_id)
}
#endif
inline void Configuration_Id::set_invocation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Configuration.Id.invocation_id)
}
inline void Configuration_Id::set_invocation_id(const char* value, size_t size) {
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Configuration.Id.invocation_id)
}
inline ::std::string* Configuration_Id::mutable_invocation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Configuration.Id.invocation_id)
  return invocation_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration_Id::release_invocation_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Configuration.Id.invocation_id)
  
  return invocation_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration_Id::set_allocated_invocation_id(::std::string* invocation_id) {
  if (invocation_id != NULL) {
    
  } else {
    
  }
  invocation_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invocation_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Configuration.Id.invocation_id)
}

// string configuration_id = 2;
inline void Configuration_Id::clear_configuration_id() {
  configuration_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration_Id::configuration_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Configuration.Id.configuration_id)
  return configuration_id_.GetNoArena();
}
inline void Configuration_Id::set_configuration_id(const ::std::string& value) {
  
  configuration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Configuration.Id.configuration_id)
}
#if LANG_CXX11
inline void Configuration_Id::set_configuration_id(::std::string&& value) {
  
  configuration_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Configuration.Id.configuration_id)
}
#endif
inline void Configuration_Id::set_configuration_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  configuration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Configuration.Id.configuration_id)
}
inline void Configuration_Id::set_configuration_id(const char* value, size_t size) {
  
  configuration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Configuration.Id.configuration_id)
}
inline ::std::string* Configuration_Id::mutable_configuration_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Configuration.Id.configuration_id)
  return configuration_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration_Id::release_configuration_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Configuration.Id.configuration_id)
  
  return configuration_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration_Id::set_allocated_configuration_id(::std::string* configuration_id) {
  if (configuration_id != NULL) {
    
  } else {
    
  }
  configuration_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), configuration_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Configuration.Id.configuration_id)
}

// -------------------------------------------------------------------

// Configuration

// string name = 1;
inline void Configuration::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Configuration.name)
  return name_.GetNoArena();
}
inline void Configuration::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Configuration.name)
}
#if LANG_CXX11
inline void Configuration::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Configuration.name)
}
#endif
inline void Configuration::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Configuration.name)
}
inline void Configuration::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Configuration.name)
}
inline ::std::string* Configuration::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Configuration.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Configuration.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Configuration.name)
}

// .google.devtools.resultstore.v2.Configuration.Id id = 2;
inline bool Configuration::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void Configuration::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
inline const ::google::devtools::resultstore::v2::Configuration_Id& Configuration::_internal_id() const {
  return *id_;
}
inline const ::google::devtools::resultstore::v2::Configuration_Id& Configuration::id() const {
  const ::google::devtools::resultstore::v2::Configuration_Id* p = id_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Configuration.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::Configuration_Id*>(
      &::google::devtools::resultstore::v2::_Configuration_Id_default_instance_);
}
inline ::google::devtools::resultstore::v2::Configuration_Id* Configuration::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Configuration.id)
  
  ::google::devtools::resultstore::v2::Configuration_Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::Configuration_Id* Configuration::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::Configuration_Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Configuration.id)
  return id_;
}
inline void Configuration::set_allocated_id(::google::devtools::resultstore::v2::Configuration_Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete id_;
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Configuration.id)
}

// .google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;
inline bool Configuration::has_status_attributes() const {
  return this != internal_default_instance() && status_attributes_ != NULL;
}
inline const ::google::devtools::resultstore::v2::StatusAttributes& Configuration::_internal_status_attributes() const {
  return *status_attributes_;
}
inline const ::google::devtools::resultstore::v2::StatusAttributes& Configuration::status_attributes() const {
  const ::google::devtools::resultstore::v2::StatusAttributes* p = status_attributes_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Configuration.status_attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::StatusAttributes*>(
      &::google::devtools::resultstore::v2::_StatusAttributes_default_instance_);
}
inline ::google::devtools::resultstore::v2::StatusAttributes* Configuration::release_status_attributes() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Configuration.status_attributes)
  
  ::google::devtools::resultstore::v2::StatusAttributes* temp = status_attributes_;
  status_attributes_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::StatusAttributes* Configuration::mutable_status_attributes() {
  
  if (status_attributes_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::StatusAttributes>(GetArenaNoVirtual());
    status_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Configuration.status_attributes)
  return status_attributes_;
}
inline void Configuration::set_allocated_status_attributes(::google::devtools::resultstore::v2::StatusAttributes* status_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_attributes_);
  }
  if (status_attributes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status_attributes, submessage_arena);
    }
    
  } else {
    
  }
  status_attributes_ = status_attributes;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Configuration.status_attributes)
}

// .google.devtools.resultstore.v2.ConfigurationAttributes configuration_attributes = 5;
inline bool Configuration::has_configuration_attributes() const {
  return this != internal_default_instance() && configuration_attributes_ != NULL;
}
inline void Configuration::clear_configuration_attributes() {
  if (GetArenaNoVirtual() == NULL && configuration_attributes_ != NULL) {
    delete configuration_attributes_;
  }
  configuration_attributes_ = NULL;
}
inline const ::google::devtools::resultstore::v2::ConfigurationAttributes& Configuration::_internal_configuration_attributes() const {
  return *configuration_attributes_;
}
inline const ::google::devtools::resultstore::v2::ConfigurationAttributes& Configuration::configuration_attributes() const {
  const ::google::devtools::resultstore::v2::ConfigurationAttributes* p = configuration_attributes_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Configuration.configuration_attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::ConfigurationAttributes*>(
      &::google::devtools::resultstore::v2::_ConfigurationAttributes_default_instance_);
}
inline ::google::devtools::resultstore::v2::ConfigurationAttributes* Configuration::release_configuration_attributes() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Configuration.configuration_attributes)
  
  ::google::devtools::resultstore::v2::ConfigurationAttributes* temp = configuration_attributes_;
  configuration_attributes_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::ConfigurationAttributes* Configuration::mutable_configuration_attributes() {
  
  if (configuration_attributes_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::ConfigurationAttributes>(GetArenaNoVirtual());
    configuration_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Configuration.configuration_attributes)
  return configuration_attributes_;
}
inline void Configuration::set_allocated_configuration_attributes(::google::devtools::resultstore::v2::ConfigurationAttributes* configuration_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete configuration_attributes_;
  }
  if (configuration_attributes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      configuration_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, configuration_attributes, submessage_arena);
    }
    
  } else {
    
  }
  configuration_attributes_ = configuration_attributes;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Configuration.configuration_attributes)
}

// repeated .google.devtools.resultstore.v2.Property properties = 6;
inline int Configuration::properties_size() const {
  return properties_.size();
}
inline ::google::devtools::resultstore::v2::Property* Configuration::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Configuration.properties)
  return properties_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >*
Configuration::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.Configuration.properties)
  return &properties_;
}
inline const ::google::devtools::resultstore::v2::Property& Configuration::properties(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Configuration.properties)
  return properties_.Get(index);
}
inline ::google::devtools::resultstore::v2::Property* Configuration::add_properties() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.Configuration.properties)
  return properties_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >&
Configuration::properties() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.Configuration.properties)
  return properties_;
}

// -------------------------------------------------------------------

// ConfigurationAttributes

// string cpu = 1;
inline void ConfigurationAttributes::clear_cpu() {
  cpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigurationAttributes::cpu() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfigurationAttributes.cpu)
  return cpu_.GetNoArena();
}
inline void ConfigurationAttributes::set_cpu(const ::std::string& value) {
  
  cpu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ConfigurationAttributes.cpu)
}
#if LANG_CXX11
inline void ConfigurationAttributes::set_cpu(::std::string&& value) {
  
  cpu_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ConfigurationAttributes.cpu)
}
#endif
inline void ConfigurationAttributes::set_cpu(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cpu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ConfigurationAttributes.cpu)
}
inline void ConfigurationAttributes::set_cpu(const char* value, size_t size) {
  
  cpu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ConfigurationAttributes.cpu)
}
inline ::std::string* ConfigurationAttributes::mutable_cpu() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ConfigurationAttributes.cpu)
  return cpu_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigurationAttributes::release_cpu() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ConfigurationAttributes.cpu)
  
  return cpu_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigurationAttributes::set_allocated_cpu(::std::string* cpu) {
  if (cpu != NULL) {
    
  } else {
    
  }
  cpu_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cpu);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ConfigurationAttributes.cpu)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2fconfiguration_2eproto
