// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/action.proto

#ifndef PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto
#define PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/devtools/resultstore/v2/common.pb.h"
#include "google/devtools/resultstore/v2/coverage.pb.h"
#include "google/devtools/resultstore/v2/coverage_summary.pb.h"
#include "google/devtools/resultstore/v2/file.pb.h"
#include "google/devtools/resultstore/v2/test_suite.pb.h"
#include <google/protobuf/duration.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto 

namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[13];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {
class Action;
class ActionDefaultTypeInternal;
extern ActionDefaultTypeInternal _Action_default_instance_;
class ActionAttributes;
class ActionAttributesDefaultTypeInternal;
extern ActionAttributesDefaultTypeInternal _ActionAttributes_default_instance_;
class Action_Id;
class Action_IdDefaultTypeInternal;
extern Action_IdDefaultTypeInternal _Action_Id_default_instance_;
class BuildAction;
class BuildActionDefaultTypeInternal;
extern BuildActionDefaultTypeInternal _BuildAction_default_instance_;
class FileProcessingError;
class FileProcessingErrorDefaultTypeInternal;
extern FileProcessingErrorDefaultTypeInternal _FileProcessingError_default_instance_;
class FileProcessingErrors;
class FileProcessingErrorsDefaultTypeInternal;
extern FileProcessingErrorsDefaultTypeInternal _FileProcessingErrors_default_instance_;
class InputFileInfo;
class InputFileInfoDefaultTypeInternal;
extern InputFileInfoDefaultTypeInternal _InputFileInfo_default_instance_;
class LocalTestTiming;
class LocalTestTimingDefaultTypeInternal;
extern LocalTestTimingDefaultTypeInternal _LocalTestTiming_default_instance_;
class RemoteTestAttemptTiming;
class RemoteTestAttemptTimingDefaultTypeInternal;
extern RemoteTestAttemptTimingDefaultTypeInternal _RemoteTestAttemptTiming_default_instance_;
class RemoteTestTiming;
class RemoteTestTimingDefaultTypeInternal;
extern RemoteTestTimingDefaultTypeInternal _RemoteTestTiming_default_instance_;
class TestAction;
class TestActionDefaultTypeInternal;
extern TestActionDefaultTypeInternal _TestAction_default_instance_;
class TestTiming;
class TestTimingDefaultTypeInternal;
extern TestTimingDefaultTypeInternal _TestTiming_default_instance_;
class TestWarning;
class TestWarningDefaultTypeInternal;
extern TestWarningDefaultTypeInternal _TestWarning_default_instance_;
}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::devtools::resultstore::v2::Action* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::Action>(Arena*);
template<> ::google::devtools::resultstore::v2::ActionAttributes* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ActionAttributes>(Arena*);
template<> ::google::devtools::resultstore::v2::Action_Id* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::Action_Id>(Arena*);
template<> ::google::devtools::resultstore::v2::BuildAction* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::BuildAction>(Arena*);
template<> ::google::devtools::resultstore::v2::FileProcessingError* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::FileProcessingError>(Arena*);
template<> ::google::devtools::resultstore::v2::FileProcessingErrors* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::FileProcessingErrors>(Arena*);
template<> ::google::devtools::resultstore::v2::InputFileInfo* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::InputFileInfo>(Arena*);
template<> ::google::devtools::resultstore::v2::LocalTestTiming* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::LocalTestTiming>(Arena*);
template<> ::google::devtools::resultstore::v2::RemoteTestAttemptTiming* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::RemoteTestAttemptTiming>(Arena*);
template<> ::google::devtools::resultstore::v2::RemoteTestTiming* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::RemoteTestTiming>(Arena*);
template<> ::google::devtools::resultstore::v2::TestAction* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::TestAction>(Arena*);
template<> ::google::devtools::resultstore::v2::TestTiming* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::TestTiming>(Arena*);
template<> ::google::devtools::resultstore::v2::TestWarning* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::TestWarning>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {

enum ExecutionStrategy {
  EXECUTION_STRATEGY_UNSPECIFIED = 0,
  OTHER_ENVIRONMENT = 1,
  REMOTE_SERVICE = 2,
  LOCAL_PARALLEL = 3,
  LOCAL_SEQUENTIAL = 4,
  ExecutionStrategy_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExecutionStrategy_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExecutionStrategy_IsValid(int value);
const ExecutionStrategy ExecutionStrategy_MIN = EXECUTION_STRATEGY_UNSPECIFIED;
const ExecutionStrategy ExecutionStrategy_MAX = LOCAL_SEQUENTIAL;
const int ExecutionStrategy_ARRAYSIZE = ExecutionStrategy_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExecutionStrategy_descriptor();
inline const ::std::string& ExecutionStrategy_Name(ExecutionStrategy value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExecutionStrategy_descriptor(), value);
}
inline bool ExecutionStrategy_Parse(
    const ::std::string& name, ExecutionStrategy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExecutionStrategy>(
    ExecutionStrategy_descriptor(), name, value);
}
enum TestCaching {
  TEST_CACHING_UNSPECIFIED = 0,
  LOCAL_CACHE_HIT = 1,
  REMOTE_CACHE_HIT = 2,
  CACHE_MISS = 3,
  TestCaching_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestCaching_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestCaching_IsValid(int value);
const TestCaching TestCaching_MIN = TEST_CACHING_UNSPECIFIED;
const TestCaching TestCaching_MAX = CACHE_MISS;
const int TestCaching_ARRAYSIZE = TestCaching_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestCaching_descriptor();
inline const ::std::string& TestCaching_Name(TestCaching value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestCaching_descriptor(), value);
}
inline bool TestCaching_Parse(
    const ::std::string& name, TestCaching* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestCaching>(
    TestCaching_descriptor(), name, value);
}
enum FileProcessingErrorType {
  FILE_PROCESSING_ERROR_TYPE_UNSPECIFIED = 0,
  GENERIC_READ_ERROR = 1,
  GENERIC_PARSE_ERROR = 2,
  FILE_TOO_LARGE = 3,
  OUTPUT_TOO_LARGE = 4,
  ACCESS_DENIED = 5,
  DEADLINE_EXCEEDED = 6,
  NOT_FOUND = 7,
  FileProcessingErrorType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FileProcessingErrorType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FileProcessingErrorType_IsValid(int value);
const FileProcessingErrorType FileProcessingErrorType_MIN = FILE_PROCESSING_ERROR_TYPE_UNSPECIFIED;
const FileProcessingErrorType FileProcessingErrorType_MAX = NOT_FOUND;
const int FileProcessingErrorType_ARRAYSIZE = FileProcessingErrorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FileProcessingErrorType_descriptor();
inline const ::std::string& FileProcessingErrorType_Name(FileProcessingErrorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FileProcessingErrorType_descriptor(), value);
}
inline bool FileProcessingErrorType_Parse(
    const ::std::string& name, FileProcessingErrorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FileProcessingErrorType>(
    FileProcessingErrorType_descriptor(), name, value);
}
// ===================================================================

class Action_Id : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.Action.Id) */ {
 public:
  Action_Id();
  virtual ~Action_Id();

  Action_Id(const Action_Id& from);

  inline Action_Id& operator=(const Action_Id& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Action_Id(Action_Id&& from) noexcept
    : Action_Id() {
    *this = ::std::move(from);
  }

  inline Action_Id& operator=(Action_Id&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Action_Id& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Action_Id* internal_default_instance() {
    return reinterpret_cast<const Action_Id*>(
               &_Action_Id_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Action_Id* other);
  friend void swap(Action_Id& a, Action_Id& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Action_Id* New() const final {
    return CreateMaybeMessage<Action_Id>(NULL);
  }

  Action_Id* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Action_Id>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Action_Id& from);
  void MergeFrom(const Action_Id& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Action_Id* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string invocation_id = 1;
  void clear_invocation_id();
  static const int kInvocationIdFieldNumber = 1;
  const ::std::string& invocation_id() const;
  void set_invocation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_invocation_id(::std::string&& value);
  #endif
  void set_invocation_id(const char* value);
  void set_invocation_id(const char* value, size_t size);
  ::std::string* mutable_invocation_id();
  ::std::string* release_invocation_id();
  void set_allocated_invocation_id(::std::string* invocation_id);

  // string target_id = 2;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  const ::std::string& target_id() const;
  void set_target_id(const ::std::string& value);
  #if LANG_CXX11
  void set_target_id(::std::string&& value);
  #endif
  void set_target_id(const char* value);
  void set_target_id(const char* value, size_t size);
  ::std::string* mutable_target_id();
  ::std::string* release_target_id();
  void set_allocated_target_id(::std::string* target_id);

  // string configuration_id = 3;
  void clear_configuration_id();
  static const int kConfigurationIdFieldNumber = 3;
  const ::std::string& configuration_id() const;
  void set_configuration_id(const ::std::string& value);
  #if LANG_CXX11
  void set_configuration_id(::std::string&& value);
  #endif
  void set_configuration_id(const char* value);
  void set_configuration_id(const char* value, size_t size);
  ::std::string* mutable_configuration_id();
  ::std::string* release_configuration_id();
  void set_allocated_configuration_id(::std::string* configuration_id);

  // string action_id = 4;
  void clear_action_id();
  static const int kActionIdFieldNumber = 4;
  const ::std::string& action_id() const;
  void set_action_id(const ::std::string& value);
  #if LANG_CXX11
  void set_action_id(::std::string&& value);
  #endif
  void set_action_id(const char* value);
  void set_action_id(const char* value, size_t size);
  ::std::string* mutable_action_id();
  ::std::string* release_action_id();
  void set_allocated_action_id(::std::string* action_id);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.Action.Id)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr invocation_id_;
  ::google::protobuf::internal::ArenaStringPtr target_id_;
  ::google::protobuf::internal::ArenaStringPtr configuration_id_;
  ::google::protobuf::internal::ArenaStringPtr action_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Action : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.Action) */ {
 public:
  Action();
  virtual ~Action();

  Action(const Action& from);

  inline Action& operator=(const Action& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Action(Action&& from) noexcept
    : Action() {
    *this = ::std::move(from);
  }

  inline Action& operator=(Action&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Action& default_instance();

  enum ActionTypeCase {
    kBuildAction = 9,
    kTestAction = 10,
    ACTION_TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Action* internal_default_instance() {
    return reinterpret_cast<const Action*>(
               &_Action_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Action* other);
  friend void swap(Action& a, Action& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Action* New() const final {
    return CreateMaybeMessage<Action>(NULL);
  }

  Action* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Action>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Action& from);
  void MergeFrom(const Action& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Action* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Action_Id Id;

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.Property properties = 7;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 7;
  ::google::devtools::resultstore::v2::Property* mutable_properties(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >*
      mutable_properties();
  const ::google::devtools::resultstore::v2::Property& properties(int index) const;
  ::google::devtools::resultstore::v2::Property* add_properties();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >&
      properties() const;

  // repeated .google.devtools.resultstore.v2.File files = 8;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 8;
  ::google::devtools::resultstore::v2::File* mutable_files(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >*
      mutable_files();
  const ::google::devtools::resultstore::v2::File& files(int index) const;
  ::google::devtools::resultstore::v2::File* add_files();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >&
      files() const;

  // repeated .google.devtools.resultstore.v2.LanguageCoverageSummary coverage_summaries = 12;
  int coverage_summaries_size() const;
  void clear_coverage_summaries();
  static const int kCoverageSummariesFieldNumber = 12;
  ::google::devtools::resultstore::v2::LanguageCoverageSummary* mutable_coverage_summaries(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary >*
      mutable_coverage_summaries();
  const ::google::devtools::resultstore::v2::LanguageCoverageSummary& coverage_summaries(int index) const;
  ::google::devtools::resultstore::v2::LanguageCoverageSummary* add_coverage_summaries();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary >&
      coverage_summaries() const;

  // repeated .google.devtools.resultstore.v2.FileProcessingErrors file_processing_errors = 13;
  int file_processing_errors_size() const;
  void clear_file_processing_errors();
  static const int kFileProcessingErrorsFieldNumber = 13;
  ::google::devtools::resultstore::v2::FileProcessingErrors* mutable_file_processing_errors(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileProcessingErrors >*
      mutable_file_processing_errors();
  const ::google::devtools::resultstore::v2::FileProcessingErrors& file_processing_errors(int index) const;
  ::google::devtools::resultstore::v2::FileProcessingErrors* add_file_processing_errors();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileProcessingErrors >&
      file_processing_errors() const;

  // repeated .google.devtools.resultstore.v2.Dependency action_dependencies = 14;
  int action_dependencies_size() const;
  void clear_action_dependencies();
  static const int kActionDependenciesFieldNumber = 14;
  ::google::devtools::resultstore::v2::Dependency* mutable_action_dependencies(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Dependency >*
      mutable_action_dependencies();
  const ::google::devtools::resultstore::v2::Dependency& action_dependencies(int index) const;
  ::google::devtools::resultstore::v2::Dependency* add_action_dependencies();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Dependency >&
      action_dependencies() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.devtools.resultstore.v2.Action.Id id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::devtools::resultstore::v2::Action_Id& _internal_id() const;
  public:
  const ::google::devtools::resultstore::v2::Action_Id& id() const;
  ::google::devtools::resultstore::v2::Action_Id* release_id();
  ::google::devtools::resultstore::v2::Action_Id* mutable_id();
  void set_allocated_id(::google::devtools::resultstore::v2::Action_Id* id);

  // .google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;
  bool has_status_attributes() const;
  void clear_status_attributes();
  static const int kStatusAttributesFieldNumber = 3;
  private:
  const ::google::devtools::resultstore::v2::StatusAttributes& _internal_status_attributes() const;
  public:
  const ::google::devtools::resultstore::v2::StatusAttributes& status_attributes() const;
  ::google::devtools::resultstore::v2::StatusAttributes* release_status_attributes();
  ::google::devtools::resultstore::v2::StatusAttributes* mutable_status_attributes();
  void set_allocated_status_attributes(::google::devtools::resultstore::v2::StatusAttributes* status_attributes);

  // .google.devtools.resultstore.v2.Timing timing = 4;
  bool has_timing() const;
  void clear_timing();
  static const int kTimingFieldNumber = 4;
  private:
  const ::google::devtools::resultstore::v2::Timing& _internal_timing() const;
  public:
  const ::google::devtools::resultstore::v2::Timing& timing() const;
  ::google::devtools::resultstore::v2::Timing* release_timing();
  ::google::devtools::resultstore::v2::Timing* mutable_timing();
  void set_allocated_timing(::google::devtools::resultstore::v2::Timing* timing);

  // .google.devtools.resultstore.v2.ActionAttributes action_attributes = 5;
  bool has_action_attributes() const;
  void clear_action_attributes();
  static const int kActionAttributesFieldNumber = 5;
  private:
  const ::google::devtools::resultstore::v2::ActionAttributes& _internal_action_attributes() const;
  public:
  const ::google::devtools::resultstore::v2::ActionAttributes& action_attributes() const;
  ::google::devtools::resultstore::v2::ActionAttributes* release_action_attributes();
  ::google::devtools::resultstore::v2::ActionAttributes* mutable_action_attributes();
  void set_allocated_action_attributes(::google::devtools::resultstore::v2::ActionAttributes* action_attributes);

  // .google.devtools.resultstore.v2.ActionCoverage coverage = 11;
  bool has_coverage() const;
  void clear_coverage();
  static const int kCoverageFieldNumber = 11;
  private:
  const ::google::devtools::resultstore::v2::ActionCoverage& _internal_coverage() const;
  public:
  const ::google::devtools::resultstore::v2::ActionCoverage& coverage() const;
  ::google::devtools::resultstore::v2::ActionCoverage* release_coverage();
  ::google::devtools::resultstore::v2::ActionCoverage* mutable_coverage();
  void set_allocated_coverage(::google::devtools::resultstore::v2::ActionCoverage* coverage);

  // .google.devtools.resultstore.v2.BuildAction build_action = 9;
  bool has_build_action() const;
  void clear_build_action();
  static const int kBuildActionFieldNumber = 9;
  private:
  const ::google::devtools::resultstore::v2::BuildAction& _internal_build_action() const;
  public:
  const ::google::devtools::resultstore::v2::BuildAction& build_action() const;
  ::google::devtools::resultstore::v2::BuildAction* release_build_action();
  ::google::devtools::resultstore::v2::BuildAction* mutable_build_action();
  void set_allocated_build_action(::google::devtools::resultstore::v2::BuildAction* build_action);

  // .google.devtools.resultstore.v2.TestAction test_action = 10;
  bool has_test_action() const;
  void clear_test_action();
  static const int kTestActionFieldNumber = 10;
  private:
  const ::google::devtools::resultstore::v2::TestAction& _internal_test_action() const;
  public:
  const ::google::devtools::resultstore::v2::TestAction& test_action() const;
  ::google::devtools::resultstore::v2::TestAction* release_test_action();
  ::google::devtools::resultstore::v2::TestAction* mutable_test_action();
  void set_allocated_test_action(::google::devtools::resultstore::v2::TestAction* test_action);

  void clear_action_type();
  ActionTypeCase action_type_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.Action)
 private:
  void set_has_build_action();
  void set_has_test_action();

  inline bool has_action_type() const;
  inline void clear_has_action_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property > properties_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File > files_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary > coverage_summaries_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileProcessingErrors > file_processing_errors_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Dependency > action_dependencies_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::devtools::resultstore::v2::Action_Id* id_;
  ::google::devtools::resultstore::v2::StatusAttributes* status_attributes_;
  ::google::devtools::resultstore::v2::Timing* timing_;
  ::google::devtools::resultstore::v2::ActionAttributes* action_attributes_;
  ::google::devtools::resultstore::v2::ActionCoverage* coverage_;
  union ActionTypeUnion {
    ActionTypeUnion() {}
    ::google::devtools::resultstore::v2::BuildAction* build_action_;
    ::google::devtools::resultstore::v2::TestAction* test_action_;
  } action_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BuildAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.BuildAction) */ {
 public:
  BuildAction();
  virtual ~BuildAction();

  BuildAction(const BuildAction& from);

  inline BuildAction& operator=(const BuildAction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildAction(BuildAction&& from) noexcept
    : BuildAction() {
    *this = ::std::move(from);
  }

  inline BuildAction& operator=(BuildAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildAction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuildAction* internal_default_instance() {
    return reinterpret_cast<const BuildAction*>(
               &_BuildAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(BuildAction* other);
  friend void swap(BuildAction& a, BuildAction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildAction* New() const final {
    return CreateMaybeMessage<BuildAction>(NULL);
  }

  BuildAction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BuildAction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BuildAction& from);
  void MergeFrom(const BuildAction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuildAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string primary_input_path = 2;
  void clear_primary_input_path();
  static const int kPrimaryInputPathFieldNumber = 2;
  const ::std::string& primary_input_path() const;
  void set_primary_input_path(const ::std::string& value);
  #if LANG_CXX11
  void set_primary_input_path(::std::string&& value);
  #endif
  void set_primary_input_path(const char* value);
  void set_primary_input_path(const char* value, size_t size);
  ::std::string* mutable_primary_input_path();
  ::std::string* release_primary_input_path();
  void set_allocated_primary_input_path(::std::string* primary_input_path);

  // string primary_output_path = 3;
  void clear_primary_output_path();
  static const int kPrimaryOutputPathFieldNumber = 3;
  const ::std::string& primary_output_path() const;
  void set_primary_output_path(const ::std::string& value);
  #if LANG_CXX11
  void set_primary_output_path(::std::string&& value);
  #endif
  void set_primary_output_path(const char* value);
  void set_primary_output_path(const char* value, size_t size);
  ::std::string* mutable_primary_output_path();
  ::std::string* release_primary_output_path();
  void set_allocated_primary_output_path(::std::string* primary_output_path);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.BuildAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr primary_input_path_;
  ::google::protobuf::internal::ArenaStringPtr primary_output_path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.TestAction) */ {
 public:
  TestAction();
  virtual ~TestAction();

  TestAction(const TestAction& from);

  inline TestAction& operator=(const TestAction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestAction(TestAction&& from) noexcept
    : TestAction() {
    *this = ::std::move(from);
  }

  inline TestAction& operator=(TestAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestAction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestAction* internal_default_instance() {
    return reinterpret_cast<const TestAction*>(
               &_TestAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(TestAction* other);
  friend void swap(TestAction& a, TestAction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestAction* New() const final {
    return CreateMaybeMessage<TestAction>(NULL);
  }

  TestAction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestAction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestAction& from);
  void MergeFrom(const TestAction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.TestWarning warnings = 8;
  int warnings_size() const;
  void clear_warnings();
  static const int kWarningsFieldNumber = 8;
  ::google::devtools::resultstore::v2::TestWarning* mutable_warnings(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::TestWarning >*
      mutable_warnings();
  const ::google::devtools::resultstore::v2::TestWarning& warnings(int index) const;
  ::google::devtools::resultstore::v2::TestWarning* add_warnings();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::TestWarning >&
      warnings() const;

  // .google.devtools.resultstore.v2.TestTiming test_timing = 1;
  bool has_test_timing() const;
  void clear_test_timing();
  static const int kTestTimingFieldNumber = 1;
  private:
  const ::google::devtools::resultstore::v2::TestTiming& _internal_test_timing() const;
  public:
  const ::google::devtools::resultstore::v2::TestTiming& test_timing() const;
  ::google::devtools::resultstore::v2::TestTiming* release_test_timing();
  ::google::devtools::resultstore::v2::TestTiming* mutable_test_timing();
  void set_allocated_test_timing(::google::devtools::resultstore::v2::TestTiming* test_timing);

  // .google.devtools.resultstore.v2.TestSuite test_suite = 5;
  bool has_test_suite() const;
  void clear_test_suite();
  static const int kTestSuiteFieldNumber = 5;
  private:
  const ::google::devtools::resultstore::v2::TestSuite& _internal_test_suite() const;
  public:
  const ::google::devtools::resultstore::v2::TestSuite& test_suite() const;
  ::google::devtools::resultstore::v2::TestSuite* release_test_suite();
  ::google::devtools::resultstore::v2::TestSuite* mutable_test_suite();
  void set_allocated_test_suite(::google::devtools::resultstore::v2::TestSuite* test_suite);

  // int32 shard_number = 2;
  void clear_shard_number();
  static const int kShardNumberFieldNumber = 2;
  ::google::protobuf::int32 shard_number() const;
  void set_shard_number(::google::protobuf::int32 value);

  // int32 run_number = 3;
  void clear_run_number();
  static const int kRunNumberFieldNumber = 3;
  ::google::protobuf::int32 run_number() const;
  void set_run_number(::google::protobuf::int32 value);

  // int32 attempt_number = 4;
  void clear_attempt_number();
  static const int kAttemptNumberFieldNumber = 4;
  ::google::protobuf::int32 attempt_number() const;
  void set_attempt_number(::google::protobuf::int32 value);

  // int64 estimated_memory_bytes = 10;
  void clear_estimated_memory_bytes();
  static const int kEstimatedMemoryBytesFieldNumber = 10;
  ::google::protobuf::int64 estimated_memory_bytes() const;
  void set_estimated_memory_bytes(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.TestAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::TestWarning > warnings_;
  ::google::devtools::resultstore::v2::TestTiming* test_timing_;
  ::google::devtools::resultstore::v2::TestSuite* test_suite_;
  ::google::protobuf::int32 shard_number_;
  ::google::protobuf::int32 run_number_;
  ::google::protobuf::int32 attempt_number_;
  ::google::protobuf::int64 estimated_memory_bytes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionAttributes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ActionAttributes) */ {
 public:
  ActionAttributes();
  virtual ~ActionAttributes();

  ActionAttributes(const ActionAttributes& from);

  inline ActionAttributes& operator=(const ActionAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionAttributes(ActionAttributes&& from) noexcept
    : ActionAttributes() {
    *this = ::std::move(from);
  }

  inline ActionAttributes& operator=(ActionAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionAttributes* internal_default_instance() {
    return reinterpret_cast<const ActionAttributes*>(
               &_ActionAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ActionAttributes* other);
  friend void swap(ActionAttributes& a, ActionAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionAttributes* New() const final {
    return CreateMaybeMessage<ActionAttributes>(NULL);
  }

  ActionAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionAttributes& from);
  void MergeFrom(const ActionAttributes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hostname = 3;
  void clear_hostname();
  static const int kHostnameFieldNumber = 3;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // .google.devtools.resultstore.v2.InputFileInfo input_file_info = 4;
  bool has_input_file_info() const;
  void clear_input_file_info();
  static const int kInputFileInfoFieldNumber = 4;
  private:
  const ::google::devtools::resultstore::v2::InputFileInfo& _internal_input_file_info() const;
  public:
  const ::google::devtools::resultstore::v2::InputFileInfo& input_file_info() const;
  ::google::devtools::resultstore::v2::InputFileInfo* release_input_file_info();
  ::google::devtools::resultstore::v2::InputFileInfo* mutable_input_file_info();
  void set_allocated_input_file_info(::google::devtools::resultstore::v2::InputFileInfo* input_file_info);

  // .google.devtools.resultstore.v2.ExecutionStrategy execution_strategy = 1;
  void clear_execution_strategy();
  static const int kExecutionStrategyFieldNumber = 1;
  ::google::devtools::resultstore::v2::ExecutionStrategy execution_strategy() const;
  void set_execution_strategy(::google::devtools::resultstore::v2::ExecutionStrategy value);

  // int32 exit_code = 2;
  void clear_exit_code();
  static const int kExitCodeFieldNumber = 2;
  ::google::protobuf::int32 exit_code() const;
  void set_exit_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ActionAttributes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::google::devtools::resultstore::v2::InputFileInfo* input_file_info_;
  int execution_strategy_;
  ::google::protobuf::int32 exit_code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputFileInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.InputFileInfo) */ {
 public:
  InputFileInfo();
  virtual ~InputFileInfo();

  InputFileInfo(const InputFileInfo& from);

  inline InputFileInfo& operator=(const InputFileInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputFileInfo(InputFileInfo&& from) noexcept
    : InputFileInfo() {
    *this = ::std::move(from);
  }

  inline InputFileInfo& operator=(InputFileInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InputFileInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputFileInfo* internal_default_instance() {
    return reinterpret_cast<const InputFileInfo*>(
               &_InputFileInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(InputFileInfo* other);
  friend void swap(InputFileInfo& a, InputFileInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputFileInfo* New() const final {
    return CreateMaybeMessage<InputFileInfo>(NULL);
  }

  InputFileInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputFileInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputFileInfo& from);
  void MergeFrom(const InputFileInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputFileInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // int64 distinct_count = 2;
  void clear_distinct_count();
  static const int kDistinctCountFieldNumber = 2;
  ::google::protobuf::int64 distinct_count() const;
  void set_distinct_count(::google::protobuf::int64 value);

  // int64 count_limit = 3;
  void clear_count_limit();
  static const int kCountLimitFieldNumber = 3;
  ::google::protobuf::int64 count_limit() const;
  void set_count_limit(::google::protobuf::int64 value);

  // int64 distinct_bytes = 4;
  void clear_distinct_bytes();
  static const int kDistinctBytesFieldNumber = 4;
  ::google::protobuf::int64 distinct_bytes() const;
  void set_distinct_bytes(::google::protobuf::int64 value);

  // int64 distinct_byte_limit = 5;
  void clear_distinct_byte_limit();
  static const int kDistinctByteLimitFieldNumber = 5;
  ::google::protobuf::int64 distinct_byte_limit() const;
  void set_distinct_byte_limit(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.InputFileInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 count_;
  ::google::protobuf::int64 distinct_count_;
  ::google::protobuf::int64 count_limit_;
  ::google::protobuf::int64 distinct_bytes_;
  ::google::protobuf::int64 distinct_byte_limit_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LocalTestTiming : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.LocalTestTiming) */ {
 public:
  LocalTestTiming();
  virtual ~LocalTestTiming();

  LocalTestTiming(const LocalTestTiming& from);

  inline LocalTestTiming& operator=(const LocalTestTiming& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalTestTiming(LocalTestTiming&& from) noexcept
    : LocalTestTiming() {
    *this = ::std::move(from);
  }

  inline LocalTestTiming& operator=(LocalTestTiming&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalTestTiming& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalTestTiming* internal_default_instance() {
    return reinterpret_cast<const LocalTestTiming*>(
               &_LocalTestTiming_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(LocalTestTiming* other);
  friend void swap(LocalTestTiming& a, LocalTestTiming& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalTestTiming* New() const final {
    return CreateMaybeMessage<LocalTestTiming>(NULL);
  }

  LocalTestTiming* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocalTestTiming>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocalTestTiming& from);
  void MergeFrom(const LocalTestTiming& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocalTestTiming* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Duration test_process_duration = 1;
  bool has_test_process_duration() const;
  void clear_test_process_duration();
  static const int kTestProcessDurationFieldNumber = 1;
  private:
  const ::google::protobuf::Duration& _internal_test_process_duration() const;
  public:
  const ::google::protobuf::Duration& test_process_duration() const;
  ::google::protobuf::Duration* release_test_process_duration();
  ::google::protobuf::Duration* mutable_test_process_duration();
  void set_allocated_test_process_duration(::google::protobuf::Duration* test_process_duration);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.LocalTestTiming)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Duration* test_process_duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoteTestAttemptTiming : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.RemoteTestAttemptTiming) */ {
 public:
  RemoteTestAttemptTiming();
  virtual ~RemoteTestAttemptTiming();

  RemoteTestAttemptTiming(const RemoteTestAttemptTiming& from);

  inline RemoteTestAttemptTiming& operator=(const RemoteTestAttemptTiming& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoteTestAttemptTiming(RemoteTestAttemptTiming&& from) noexcept
    : RemoteTestAttemptTiming() {
    *this = ::std::move(from);
  }

  inline RemoteTestAttemptTiming& operator=(RemoteTestAttemptTiming&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoteTestAttemptTiming& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteTestAttemptTiming* internal_default_instance() {
    return reinterpret_cast<const RemoteTestAttemptTiming*>(
               &_RemoteTestAttemptTiming_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(RemoteTestAttemptTiming* other);
  friend void swap(RemoteTestAttemptTiming& a, RemoteTestAttemptTiming& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoteTestAttemptTiming* New() const final {
    return CreateMaybeMessage<RemoteTestAttemptTiming>(NULL);
  }

  RemoteTestAttemptTiming* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoteTestAttemptTiming>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoteTestAttemptTiming& from);
  void MergeFrom(const RemoteTestAttemptTiming& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoteTestAttemptTiming* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Duration queue_duration = 1;
  bool has_queue_duration() const;
  void clear_queue_duration();
  static const int kQueueDurationFieldNumber = 1;
  private:
  const ::google::protobuf::Duration& _internal_queue_duration() const;
  public:
  const ::google::protobuf::Duration& queue_duration() const;
  ::google::protobuf::Duration* release_queue_duration();
  ::google::protobuf::Duration* mutable_queue_duration();
  void set_allocated_queue_duration(::google::protobuf::Duration* queue_duration);

  // .google.protobuf.Duration upload_duration = 2;
  bool has_upload_duration() const;
  void clear_upload_duration();
  static const int kUploadDurationFieldNumber = 2;
  private:
  const ::google::protobuf::Duration& _internal_upload_duration() const;
  public:
  const ::google::protobuf::Duration& upload_duration() const;
  ::google::protobuf::Duration* release_upload_duration();
  ::google::protobuf::Duration* mutable_upload_duration();
  void set_allocated_upload_duration(::google::protobuf::Duration* upload_duration);

  // .google.protobuf.Duration machine_setup_duration = 3;
  bool has_machine_setup_duration() const;
  void clear_machine_setup_duration();
  static const int kMachineSetupDurationFieldNumber = 3;
  private:
  const ::google::protobuf::Duration& _internal_machine_setup_duration() const;
  public:
  const ::google::protobuf::Duration& machine_setup_duration() const;
  ::google::protobuf::Duration* release_machine_setup_duration();
  ::google::protobuf::Duration* mutable_machine_setup_duration();
  void set_allocated_machine_setup_duration(::google::protobuf::Duration* machine_setup_duration);

  // .google.protobuf.Duration test_process_duration = 4;
  bool has_test_process_duration() const;
  void clear_test_process_duration();
  static const int kTestProcessDurationFieldNumber = 4;
  private:
  const ::google::protobuf::Duration& _internal_test_process_duration() const;
  public:
  const ::google::protobuf::Duration& test_process_duration() const;
  ::google::protobuf::Duration* release_test_process_duration();
  ::google::protobuf::Duration* mutable_test_process_duration();
  void set_allocated_test_process_duration(::google::protobuf::Duration* test_process_duration);

  // .google.protobuf.Duration download_duration = 5;
  bool has_download_duration() const;
  void clear_download_duration();
  static const int kDownloadDurationFieldNumber = 5;
  private:
  const ::google::protobuf::Duration& _internal_download_duration() const;
  public:
  const ::google::protobuf::Duration& download_duration() const;
  ::google::protobuf::Duration* release_download_duration();
  ::google::protobuf::Duration* mutable_download_duration();
  void set_allocated_download_duration(::google::protobuf::Duration* download_duration);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.RemoteTestAttemptTiming)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Duration* queue_duration_;
  ::google::protobuf::Duration* upload_duration_;
  ::google::protobuf::Duration* machine_setup_duration_;
  ::google::protobuf::Duration* test_process_duration_;
  ::google::protobuf::Duration* download_duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoteTestTiming : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.RemoteTestTiming) */ {
 public:
  RemoteTestTiming();
  virtual ~RemoteTestTiming();

  RemoteTestTiming(const RemoteTestTiming& from);

  inline RemoteTestTiming& operator=(const RemoteTestTiming& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoteTestTiming(RemoteTestTiming&& from) noexcept
    : RemoteTestTiming() {
    *this = ::std::move(from);
  }

  inline RemoteTestTiming& operator=(RemoteTestTiming&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoteTestTiming& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteTestTiming* internal_default_instance() {
    return reinterpret_cast<const RemoteTestTiming*>(
               &_RemoteTestTiming_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(RemoteTestTiming* other);
  friend void swap(RemoteTestTiming& a, RemoteTestTiming& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoteTestTiming* New() const final {
    return CreateMaybeMessage<RemoteTestTiming>(NULL);
  }

  RemoteTestTiming* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoteTestTiming>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoteTestTiming& from);
  void MergeFrom(const RemoteTestTiming& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoteTestTiming* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.RemoteTestAttemptTiming attempts = 2;
  int attempts_size() const;
  void clear_attempts();
  static const int kAttemptsFieldNumber = 2;
  ::google::devtools::resultstore::v2::RemoteTestAttemptTiming* mutable_attempts(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::RemoteTestAttemptTiming >*
      mutable_attempts();
  const ::google::devtools::resultstore::v2::RemoteTestAttemptTiming& attempts(int index) const;
  ::google::devtools::resultstore::v2::RemoteTestAttemptTiming* add_attempts();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::RemoteTestAttemptTiming >&
      attempts() const;

  // .google.protobuf.Duration local_analysis_duration = 1;
  bool has_local_analysis_duration() const;
  void clear_local_analysis_duration();
  static const int kLocalAnalysisDurationFieldNumber = 1;
  private:
  const ::google::protobuf::Duration& _internal_local_analysis_duration() const;
  public:
  const ::google::protobuf::Duration& local_analysis_duration() const;
  ::google::protobuf::Duration* release_local_analysis_duration();
  ::google::protobuf::Duration* mutable_local_analysis_duration();
  void set_allocated_local_analysis_duration(::google::protobuf::Duration* local_analysis_duration);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.RemoteTestTiming)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::RemoteTestAttemptTiming > attempts_;
  ::google::protobuf::Duration* local_analysis_duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestTiming : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.TestTiming) */ {
 public:
  TestTiming();
  virtual ~TestTiming();

  TestTiming(const TestTiming& from);

  inline TestTiming& operator=(const TestTiming& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestTiming(TestTiming&& from) noexcept
    : TestTiming() {
    *this = ::std::move(from);
  }

  inline TestTiming& operator=(TestTiming&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestTiming& default_instance();

  enum LocationCase {
    kLocal = 1,
    kRemote = 2,
    LOCATION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestTiming* internal_default_instance() {
    return reinterpret_cast<const TestTiming*>(
               &_TestTiming_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(TestTiming* other);
  friend void swap(TestTiming& a, TestTiming& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestTiming* New() const final {
    return CreateMaybeMessage<TestTiming>(NULL);
  }

  TestTiming* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestTiming>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestTiming& from);
  void MergeFrom(const TestTiming& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestTiming* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Duration system_time_duration = 3;
  bool has_system_time_duration() const;
  void clear_system_time_duration();
  static const int kSystemTimeDurationFieldNumber = 3;
  private:
  const ::google::protobuf::Duration& _internal_system_time_duration() const;
  public:
  const ::google::protobuf::Duration& system_time_duration() const;
  ::google::protobuf::Duration* release_system_time_duration();
  ::google::protobuf::Duration* mutable_system_time_duration();
  void set_allocated_system_time_duration(::google::protobuf::Duration* system_time_duration);

  // .google.protobuf.Duration user_time_duration = 4;
  bool has_user_time_duration() const;
  void clear_user_time_duration();
  static const int kUserTimeDurationFieldNumber = 4;
  private:
  const ::google::protobuf::Duration& _internal_user_time_duration() const;
  public:
  const ::google::protobuf::Duration& user_time_duration() const;
  ::google::protobuf::Duration* release_user_time_duration();
  ::google::protobuf::Duration* mutable_user_time_duration();
  void set_allocated_user_time_duration(::google::protobuf::Duration* user_time_duration);

  // .google.devtools.resultstore.v2.TestCaching test_caching = 5;
  void clear_test_caching();
  static const int kTestCachingFieldNumber = 5;
  ::google::devtools::resultstore::v2::TestCaching test_caching() const;
  void set_test_caching(::google::devtools::resultstore::v2::TestCaching value);

  // .google.devtools.resultstore.v2.LocalTestTiming local = 1;
  bool has_local() const;
  void clear_local();
  static const int kLocalFieldNumber = 1;
  private:
  const ::google::devtools::resultstore::v2::LocalTestTiming& _internal_local() const;
  public:
  const ::google::devtools::resultstore::v2::LocalTestTiming& local() const;
  ::google::devtools::resultstore::v2::LocalTestTiming* release_local();
  ::google::devtools::resultstore::v2::LocalTestTiming* mutable_local();
  void set_allocated_local(::google::devtools::resultstore::v2::LocalTestTiming* local);

  // .google.devtools.resultstore.v2.RemoteTestTiming remote = 2;
  bool has_remote() const;
  void clear_remote();
  static const int kRemoteFieldNumber = 2;
  private:
  const ::google::devtools::resultstore::v2::RemoteTestTiming& _internal_remote() const;
  public:
  const ::google::devtools::resultstore::v2::RemoteTestTiming& remote() const;
  ::google::devtools::resultstore::v2::RemoteTestTiming* release_remote();
  ::google::devtools::resultstore::v2::RemoteTestTiming* mutable_remote();
  void set_allocated_remote(::google::devtools::resultstore::v2::RemoteTestTiming* remote);

  void clear_location();
  LocationCase location_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.TestTiming)
 private:
  void set_has_local();
  void set_has_remote();

  inline bool has_location() const;
  inline void clear_has_location();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Duration* system_time_duration_;
  ::google::protobuf::Duration* user_time_duration_;
  int test_caching_;
  union LocationUnion {
    LocationUnion() {}
    ::google::devtools::resultstore::v2::LocalTestTiming* local_;
    ::google::devtools::resultstore::v2::RemoteTestTiming* remote_;
  } location_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestWarning : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.TestWarning) */ {
 public:
  TestWarning();
  virtual ~TestWarning();

  TestWarning(const TestWarning& from);

  inline TestWarning& operator=(const TestWarning& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestWarning(TestWarning&& from) noexcept
    : TestWarning() {
    *this = ::std::move(from);
  }

  inline TestWarning& operator=(TestWarning&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestWarning& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestWarning* internal_default_instance() {
    return reinterpret_cast<const TestWarning*>(
               &_TestWarning_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(TestWarning* other);
  friend void swap(TestWarning& a, TestWarning& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestWarning* New() const final {
    return CreateMaybeMessage<TestWarning>(NULL);
  }

  TestWarning* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestWarning>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestWarning& from);
  void MergeFrom(const TestWarning& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestWarning* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string warning_message = 1;
  void clear_warning_message();
  static const int kWarningMessageFieldNumber = 1;
  const ::std::string& warning_message() const;
  void set_warning_message(const ::std::string& value);
  #if LANG_CXX11
  void set_warning_message(::std::string&& value);
  #endif
  void set_warning_message(const char* value);
  void set_warning_message(const char* value, size_t size);
  ::std::string* mutable_warning_message();
  ::std::string* release_warning_message();
  void set_allocated_warning_message(::std::string* warning_message);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.TestWarning)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr warning_message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileProcessingErrors : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.FileProcessingErrors) */ {
 public:
  FileProcessingErrors();
  virtual ~FileProcessingErrors();

  FileProcessingErrors(const FileProcessingErrors& from);

  inline FileProcessingErrors& operator=(const FileProcessingErrors& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileProcessingErrors(FileProcessingErrors&& from) noexcept
    : FileProcessingErrors() {
    *this = ::std::move(from);
  }

  inline FileProcessingErrors& operator=(FileProcessingErrors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileProcessingErrors& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileProcessingErrors* internal_default_instance() {
    return reinterpret_cast<const FileProcessingErrors*>(
               &_FileProcessingErrors_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(FileProcessingErrors* other);
  friend void swap(FileProcessingErrors& a, FileProcessingErrors& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileProcessingErrors* New() const final {
    return CreateMaybeMessage<FileProcessingErrors>(NULL);
  }

  FileProcessingErrors* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FileProcessingErrors>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FileProcessingErrors& from);
  void MergeFrom(const FileProcessingErrors& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FileProcessingErrors* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.FileProcessingError file_processing_errors = 3;
  int file_processing_errors_size() const;
  void clear_file_processing_errors();
  static const int kFileProcessingErrorsFieldNumber = 3;
  ::google::devtools::resultstore::v2::FileProcessingError* mutable_file_processing_errors(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileProcessingError >*
      mutable_file_processing_errors();
  const ::google::devtools::resultstore::v2::FileProcessingError& file_processing_errors(int index) const;
  ::google::devtools::resultstore::v2::FileProcessingError* add_file_processing_errors();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileProcessingError >&
      file_processing_errors() const;

  // string file_uid = 1;
  void clear_file_uid();
  static const int kFileUidFieldNumber = 1;
  const ::std::string& file_uid() const;
  void set_file_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_file_uid(::std::string&& value);
  #endif
  void set_file_uid(const char* value);
  void set_file_uid(const char* value, size_t size);
  ::std::string* mutable_file_uid();
  ::std::string* release_file_uid();
  void set_allocated_file_uid(::std::string* file_uid);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.FileProcessingErrors)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileProcessingError > file_processing_errors_;
  ::google::protobuf::internal::ArenaStringPtr file_uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileProcessingError : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.FileProcessingError) */ {
 public:
  FileProcessingError();
  virtual ~FileProcessingError();

  FileProcessingError(const FileProcessingError& from);

  inline FileProcessingError& operator=(const FileProcessingError& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileProcessingError(FileProcessingError&& from) noexcept
    : FileProcessingError() {
    *this = ::std::move(from);
  }

  inline FileProcessingError& operator=(FileProcessingError&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileProcessingError& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileProcessingError* internal_default_instance() {
    return reinterpret_cast<const FileProcessingError*>(
               &_FileProcessingError_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(FileProcessingError* other);
  friend void swap(FileProcessingError& a, FileProcessingError& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileProcessingError* New() const final {
    return CreateMaybeMessage<FileProcessingError>(NULL);
  }

  FileProcessingError* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FileProcessingError>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FileProcessingError& from);
  void MergeFrom(const FileProcessingError& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FileProcessingError* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .google.devtools.resultstore.v2.FileProcessingErrorType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::devtools::resultstore::v2::FileProcessingErrorType type() const;
  void set_type(::google::devtools::resultstore::v2::FileProcessingErrorType value);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.FileProcessingError)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Action_Id

// string invocation_id = 1;
inline void Action_Id::clear_invocation_id() {
  invocation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Action_Id::invocation_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.Id.invocation_id)
  return invocation_id_.GetNoArena();
}
inline void Action_Id::set_invocation_id(const ::std::string& value) {
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Action.Id.invocation_id)
}
#if LANG_CXX11
inline void Action_Id::set_invocation_id(::std::string&& value) {
  
  invocation_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Action.Id.invocation_id)
}
#endif
inline void Action_Id::set_invocation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Action.Id.invocation_id)
}
inline void Action_Id::set_invocation_id(const char* value, size_t size) {
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Action.Id.invocation_id)
}
inline ::std::string* Action_Id::mutable_invocation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.Id.invocation_id)
  return invocation_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Action_Id::release_invocation_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Action.Id.invocation_id)
  
  return invocation_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action_Id::set_allocated_invocation_id(::std::string* invocation_id) {
  if (invocation_id != NULL) {
    
  } else {
    
  }
  invocation_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invocation_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Action.Id.invocation_id)
}

// string target_id = 2;
inline void Action_Id::clear_target_id() {
  target_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Action_Id::target_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.Id.target_id)
  return target_id_.GetNoArena();
}
inline void Action_Id::set_target_id(const ::std::string& value) {
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Action.Id.target_id)
}
#if LANG_CXX11
inline void Action_Id::set_target_id(::std::string&& value) {
  
  target_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Action.Id.target_id)
}
#endif
inline void Action_Id::set_target_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Action.Id.target_id)
}
inline void Action_Id::set_target_id(const char* value, size_t size) {
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Action.Id.target_id)
}
inline ::std::string* Action_Id::mutable_target_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.Id.target_id)
  return target_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Action_Id::release_target_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Action.Id.target_id)
  
  return target_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action_Id::set_allocated_target_id(::std::string* target_id) {
  if (target_id != NULL) {
    
  } else {
    
  }
  target_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Action.Id.target_id)
}

// string configuration_id = 3;
inline void Action_Id::clear_configuration_id() {
  configuration_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Action_Id::configuration_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.Id.configuration_id)
  return configuration_id_.GetNoArena();
}
inline void Action_Id::set_configuration_id(const ::std::string& value) {
  
  configuration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Action.Id.configuration_id)
}
#if LANG_CXX11
inline void Action_Id::set_configuration_id(::std::string&& value) {
  
  configuration_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Action.Id.configuration_id)
}
#endif
inline void Action_Id::set_configuration_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  configuration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Action.Id.configuration_id)
}
inline void Action_Id::set_configuration_id(const char* value, size_t size) {
  
  configuration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Action.Id.configuration_id)
}
inline ::std::string* Action_Id::mutable_configuration_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.Id.configuration_id)
  return configuration_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Action_Id::release_configuration_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Action.Id.configuration_id)
  
  return configuration_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action_Id::set_allocated_configuration_id(::std::string* configuration_id) {
  if (configuration_id != NULL) {
    
  } else {
    
  }
  configuration_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), configuration_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Action.Id.configuration_id)
}

// string action_id = 4;
inline void Action_Id::clear_action_id() {
  action_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Action_Id::action_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.Id.action_id)
  return action_id_.GetNoArena();
}
inline void Action_Id::set_action_id(const ::std::string& value) {
  
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Action.Id.action_id)
}
#if LANG_CXX11
inline void Action_Id::set_action_id(::std::string&& value) {
  
  action_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Action.Id.action_id)
}
#endif
inline void Action_Id::set_action_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Action.Id.action_id)
}
inline void Action_Id::set_action_id(const char* value, size_t size) {
  
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Action.Id.action_id)
}
inline ::std::string* Action_Id::mutable_action_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.Id.action_id)
  return action_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Action_Id::release_action_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Action.Id.action_id)
  
  return action_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action_Id::set_allocated_action_id(::std::string* action_id) {
  if (action_id != NULL) {
    
  } else {
    
  }
  action_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Action.Id.action_id)
}

// -------------------------------------------------------------------

// Action

// string name = 1;
inline void Action::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Action::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.name)
  return name_.GetNoArena();
}
inline void Action::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Action.name)
}
#if LANG_CXX11
inline void Action::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Action.name)
}
#endif
inline void Action::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Action.name)
}
inline void Action::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Action.name)
}
inline ::std::string* Action::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Action::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Action.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Action.name)
}

// .google.devtools.resultstore.v2.Action.Id id = 2;
inline bool Action::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void Action::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
inline const ::google::devtools::resultstore::v2::Action_Id& Action::_internal_id() const {
  return *id_;
}
inline const ::google::devtools::resultstore::v2::Action_Id& Action::id() const {
  const ::google::devtools::resultstore::v2::Action_Id* p = id_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::Action_Id*>(
      &::google::devtools::resultstore::v2::_Action_Id_default_instance_);
}
inline ::google::devtools::resultstore::v2::Action_Id* Action::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Action.id)
  
  ::google::devtools::resultstore::v2::Action_Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::Action_Id* Action::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::Action_Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.id)
  return id_;
}
inline void Action::set_allocated_id(::google::devtools::resultstore::v2::Action_Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete id_;
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Action.id)
}

// .google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;
inline bool Action::has_status_attributes() const {
  return this != internal_default_instance() && status_attributes_ != NULL;
}
inline const ::google::devtools::resultstore::v2::StatusAttributes& Action::_internal_status_attributes() const {
  return *status_attributes_;
}
inline const ::google::devtools::resultstore::v2::StatusAttributes& Action::status_attributes() const {
  const ::google::devtools::resultstore::v2::StatusAttributes* p = status_attributes_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.status_attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::StatusAttributes*>(
      &::google::devtools::resultstore::v2::_StatusAttributes_default_instance_);
}
inline ::google::devtools::resultstore::v2::StatusAttributes* Action::release_status_attributes() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Action.status_attributes)
  
  ::google::devtools::resultstore::v2::StatusAttributes* temp = status_attributes_;
  status_attributes_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::StatusAttributes* Action::mutable_status_attributes() {
  
  if (status_attributes_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::StatusAttributes>(GetArenaNoVirtual());
    status_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.status_attributes)
  return status_attributes_;
}
inline void Action::set_allocated_status_attributes(::google::devtools::resultstore::v2::StatusAttributes* status_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_attributes_);
  }
  if (status_attributes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status_attributes, submessage_arena);
    }
    
  } else {
    
  }
  status_attributes_ = status_attributes;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Action.status_attributes)
}

// .google.devtools.resultstore.v2.Timing timing = 4;
inline bool Action::has_timing() const {
  return this != internal_default_instance() && timing_ != NULL;
}
inline const ::google::devtools::resultstore::v2::Timing& Action::_internal_timing() const {
  return *timing_;
}
inline const ::google::devtools::resultstore::v2::Timing& Action::timing() const {
  const ::google::devtools::resultstore::v2::Timing* p = timing_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.timing)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::Timing*>(
      &::google::devtools::resultstore::v2::_Timing_default_instance_);
}
inline ::google::devtools::resultstore::v2::Timing* Action::release_timing() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Action.timing)
  
  ::google::devtools::resultstore::v2::Timing* temp = timing_;
  timing_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::Timing* Action::mutable_timing() {
  
  if (timing_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::Timing>(GetArenaNoVirtual());
    timing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.timing)
  return timing_;
}
inline void Action::set_allocated_timing(::google::devtools::resultstore::v2::Timing* timing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timing_);
  }
  if (timing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timing, submessage_arena);
    }
    
  } else {
    
  }
  timing_ = timing;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Action.timing)
}

// .google.devtools.resultstore.v2.BuildAction build_action = 9;
inline bool Action::has_build_action() const {
  return action_type_case() == kBuildAction;
}
inline void Action::set_has_build_action() {
  _oneof_case_[0] = kBuildAction;
}
inline void Action::clear_build_action() {
  if (has_build_action()) {
    delete action_type_.build_action_;
    clear_has_action_type();
  }
}
inline const ::google::devtools::resultstore::v2::BuildAction& Action::_internal_build_action() const {
  return *action_type_.build_action_;
}
inline ::google::devtools::resultstore::v2::BuildAction* Action::release_build_action() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Action.build_action)
  if (has_build_action()) {
    clear_has_action_type();
      ::google::devtools::resultstore::v2::BuildAction* temp = action_type_.build_action_;
    action_type_.build_action_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::devtools::resultstore::v2::BuildAction& Action::build_action() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.build_action)
  return has_build_action()
      ? *action_type_.build_action_
      : *reinterpret_cast< ::google::devtools::resultstore::v2::BuildAction*>(&::google::devtools::resultstore::v2::_BuildAction_default_instance_);
}
inline ::google::devtools::resultstore::v2::BuildAction* Action::mutable_build_action() {
  if (!has_build_action()) {
    clear_action_type();
    set_has_build_action();
    action_type_.build_action_ = CreateMaybeMessage< ::google::devtools::resultstore::v2::BuildAction >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.build_action)
  return action_type_.build_action_;
}

// .google.devtools.resultstore.v2.TestAction test_action = 10;
inline bool Action::has_test_action() const {
  return action_type_case() == kTestAction;
}
inline void Action::set_has_test_action() {
  _oneof_case_[0] = kTestAction;
}
inline void Action::clear_test_action() {
  if (has_test_action()) {
    delete action_type_.test_action_;
    clear_has_action_type();
  }
}
inline const ::google::devtools::resultstore::v2::TestAction& Action::_internal_test_action() const {
  return *action_type_.test_action_;
}
inline ::google::devtools::resultstore::v2::TestAction* Action::release_test_action() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Action.test_action)
  if (has_test_action()) {
    clear_has_action_type();
      ::google::devtools::resultstore::v2::TestAction* temp = action_type_.test_action_;
    action_type_.test_action_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::devtools::resultstore::v2::TestAction& Action::test_action() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.test_action)
  return has_test_action()
      ? *action_type_.test_action_
      : *reinterpret_cast< ::google::devtools::resultstore::v2::TestAction*>(&::google::devtools::resultstore::v2::_TestAction_default_instance_);
}
inline ::google::devtools::resultstore::v2::TestAction* Action::mutable_test_action() {
  if (!has_test_action()) {
    clear_action_type();
    set_has_test_action();
    action_type_.test_action_ = CreateMaybeMessage< ::google::devtools::resultstore::v2::TestAction >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.test_action)
  return action_type_.test_action_;
}

// .google.devtools.resultstore.v2.ActionAttributes action_attributes = 5;
inline bool Action::has_action_attributes() const {
  return this != internal_default_instance() && action_attributes_ != NULL;
}
inline void Action::clear_action_attributes() {
  if (GetArenaNoVirtual() == NULL && action_attributes_ != NULL) {
    delete action_attributes_;
  }
  action_attributes_ = NULL;
}
inline const ::google::devtools::resultstore::v2::ActionAttributes& Action::_internal_action_attributes() const {
  return *action_attributes_;
}
inline const ::google::devtools::resultstore::v2::ActionAttributes& Action::action_attributes() const {
  const ::google::devtools::resultstore::v2::ActionAttributes* p = action_attributes_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.action_attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::ActionAttributes*>(
      &::google::devtools::resultstore::v2::_ActionAttributes_default_instance_);
}
inline ::google::devtools::resultstore::v2::ActionAttributes* Action::release_action_attributes() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Action.action_attributes)
  
  ::google::devtools::resultstore::v2::ActionAttributes* temp = action_attributes_;
  action_attributes_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::ActionAttributes* Action::mutable_action_attributes() {
  
  if (action_attributes_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::ActionAttributes>(GetArenaNoVirtual());
    action_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.action_attributes)
  return action_attributes_;
}
inline void Action::set_allocated_action_attributes(::google::devtools::resultstore::v2::ActionAttributes* action_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete action_attributes_;
  }
  if (action_attributes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      action_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_attributes, submessage_arena);
    }
    
  } else {
    
  }
  action_attributes_ = action_attributes;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Action.action_attributes)
}

// repeated .google.devtools.resultstore.v2.Dependency action_dependencies = 14;
inline int Action::action_dependencies_size() const {
  return action_dependencies_.size();
}
inline ::google::devtools::resultstore::v2::Dependency* Action::mutable_action_dependencies(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.action_dependencies)
  return action_dependencies_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Dependency >*
Action::mutable_action_dependencies() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.Action.action_dependencies)
  return &action_dependencies_;
}
inline const ::google::devtools::resultstore::v2::Dependency& Action::action_dependencies(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.action_dependencies)
  return action_dependencies_.Get(index);
}
inline ::google::devtools::resultstore::v2::Dependency* Action::add_action_dependencies() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.Action.action_dependencies)
  return action_dependencies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Dependency >&
Action::action_dependencies() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.Action.action_dependencies)
  return action_dependencies_;
}

// repeated .google.devtools.resultstore.v2.Property properties = 7;
inline int Action::properties_size() const {
  return properties_.size();
}
inline ::google::devtools::resultstore::v2::Property* Action::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.properties)
  return properties_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >*
Action::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.Action.properties)
  return &properties_;
}
inline const ::google::devtools::resultstore::v2::Property& Action::properties(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.properties)
  return properties_.Get(index);
}
inline ::google::devtools::resultstore::v2::Property* Action::add_properties() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.Action.properties)
  return properties_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >&
Action::properties() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.Action.properties)
  return properties_;
}

// repeated .google.devtools.resultstore.v2.File files = 8;
inline int Action::files_size() const {
  return files_.size();
}
inline ::google::devtools::resultstore::v2::File* Action::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.files)
  return files_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >*
Action::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.Action.files)
  return &files_;
}
inline const ::google::devtools::resultstore::v2::File& Action::files(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.files)
  return files_.Get(index);
}
inline ::google::devtools::resultstore::v2::File* Action::add_files() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.Action.files)
  return files_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >&
Action::files() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.Action.files)
  return files_;
}

// .google.devtools.resultstore.v2.ActionCoverage coverage = 11;
inline bool Action::has_coverage() const {
  return this != internal_default_instance() && coverage_ != NULL;
}
inline const ::google::devtools::resultstore::v2::ActionCoverage& Action::_internal_coverage() const {
  return *coverage_;
}
inline const ::google::devtools::resultstore::v2::ActionCoverage& Action::coverage() const {
  const ::google::devtools::resultstore::v2::ActionCoverage* p = coverage_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.coverage)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::ActionCoverage*>(
      &::google::devtools::resultstore::v2::_ActionCoverage_default_instance_);
}
inline ::google::devtools::resultstore::v2::ActionCoverage* Action::release_coverage() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Action.coverage)
  
  ::google::devtools::resultstore::v2::ActionCoverage* temp = coverage_;
  coverage_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::ActionCoverage* Action::mutable_coverage() {
  
  if (coverage_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::ActionCoverage>(GetArenaNoVirtual());
    coverage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.coverage)
  return coverage_;
}
inline void Action::set_allocated_coverage(::google::devtools::resultstore::v2::ActionCoverage* coverage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(coverage_);
  }
  if (coverage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coverage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coverage, submessage_arena);
    }
    
  } else {
    
  }
  coverage_ = coverage;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Action.coverage)
}

// repeated .google.devtools.resultstore.v2.LanguageCoverageSummary coverage_summaries = 12;
inline int Action::coverage_summaries_size() const {
  return coverage_summaries_.size();
}
inline ::google::devtools::resultstore::v2::LanguageCoverageSummary* Action::mutable_coverage_summaries(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.coverage_summaries)
  return coverage_summaries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary >*
Action::mutable_coverage_summaries() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.Action.coverage_summaries)
  return &coverage_summaries_;
}
inline const ::google::devtools::resultstore::v2::LanguageCoverageSummary& Action::coverage_summaries(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.coverage_summaries)
  return coverage_summaries_.Get(index);
}
inline ::google::devtools::resultstore::v2::LanguageCoverageSummary* Action::add_coverage_summaries() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.Action.coverage_summaries)
  return coverage_summaries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary >&
Action::coverage_summaries() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.Action.coverage_summaries)
  return coverage_summaries_;
}

// repeated .google.devtools.resultstore.v2.FileProcessingErrors file_processing_errors = 13;
inline int Action::file_processing_errors_size() const {
  return file_processing_errors_.size();
}
inline void Action::clear_file_processing_errors() {
  file_processing_errors_.Clear();
}
inline ::google::devtools::resultstore::v2::FileProcessingErrors* Action::mutable_file_processing_errors(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Action.file_processing_errors)
  return file_processing_errors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileProcessingErrors >*
Action::mutable_file_processing_errors() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.Action.file_processing_errors)
  return &file_processing_errors_;
}
inline const ::google::devtools::resultstore::v2::FileProcessingErrors& Action::file_processing_errors(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Action.file_processing_errors)
  return file_processing_errors_.Get(index);
}
inline ::google::devtools::resultstore::v2::FileProcessingErrors* Action::add_file_processing_errors() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.Action.file_processing_errors)
  return file_processing_errors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileProcessingErrors >&
Action::file_processing_errors() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.Action.file_processing_errors)
  return file_processing_errors_;
}

inline bool Action::has_action_type() const {
  return action_type_case() != ACTION_TYPE_NOT_SET;
}
inline void Action::clear_has_action_type() {
  _oneof_case_[0] = ACTION_TYPE_NOT_SET;
}
inline Action::ActionTypeCase Action::action_type_case() const {
  return Action::ActionTypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// BuildAction

// string type = 1;
inline void BuildAction::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildAction::type() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.BuildAction.type)
  return type_.GetNoArena();
}
inline void BuildAction::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.BuildAction.type)
}
#if LANG_CXX11
inline void BuildAction::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.BuildAction.type)
}
#endif
inline void BuildAction::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.BuildAction.type)
}
inline void BuildAction::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.BuildAction.type)
}
inline ::std::string* BuildAction::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.BuildAction.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildAction::release_type() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.BuildAction.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildAction::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.BuildAction.type)
}

// string primary_input_path = 2;
inline void BuildAction::clear_primary_input_path() {
  primary_input_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildAction::primary_input_path() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.BuildAction.primary_input_path)
  return primary_input_path_.GetNoArena();
}
inline void BuildAction::set_primary_input_path(const ::std::string& value) {
  
  primary_input_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.BuildAction.primary_input_path)
}
#if LANG_CXX11
inline void BuildAction::set_primary_input_path(::std::string&& value) {
  
  primary_input_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.BuildAction.primary_input_path)
}
#endif
inline void BuildAction::set_primary_input_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  primary_input_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.BuildAction.primary_input_path)
}
inline void BuildAction::set_primary_input_path(const char* value, size_t size) {
  
  primary_input_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.BuildAction.primary_input_path)
}
inline ::std::string* BuildAction::mutable_primary_input_path() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.BuildAction.primary_input_path)
  return primary_input_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildAction::release_primary_input_path() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.BuildAction.primary_input_path)
  
  return primary_input_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildAction::set_allocated_primary_input_path(::std::string* primary_input_path) {
  if (primary_input_path != NULL) {
    
  } else {
    
  }
  primary_input_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), primary_input_path);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.BuildAction.primary_input_path)
}

// string primary_output_path = 3;
inline void BuildAction::clear_primary_output_path() {
  primary_output_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuildAction::primary_output_path() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.BuildAction.primary_output_path)
  return primary_output_path_.GetNoArena();
}
inline void BuildAction::set_primary_output_path(const ::std::string& value) {
  
  primary_output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.BuildAction.primary_output_path)
}
#if LANG_CXX11
inline void BuildAction::set_primary_output_path(::std::string&& value) {
  
  primary_output_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.BuildAction.primary_output_path)
}
#endif
inline void BuildAction::set_primary_output_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  primary_output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.BuildAction.primary_output_path)
}
inline void BuildAction::set_primary_output_path(const char* value, size_t size) {
  
  primary_output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.BuildAction.primary_output_path)
}
inline ::std::string* BuildAction::mutable_primary_output_path() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.BuildAction.primary_output_path)
  return primary_output_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuildAction::release_primary_output_path() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.BuildAction.primary_output_path)
  
  return primary_output_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuildAction::set_allocated_primary_output_path(::std::string* primary_output_path) {
  if (primary_output_path != NULL) {
    
  } else {
    
  }
  primary_output_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), primary_output_path);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.BuildAction.primary_output_path)
}

// -------------------------------------------------------------------

// TestAction

// .google.devtools.resultstore.v2.TestTiming test_timing = 1;
inline bool TestAction::has_test_timing() const {
  return this != internal_default_instance() && test_timing_ != NULL;
}
inline void TestAction::clear_test_timing() {
  if (GetArenaNoVirtual() == NULL && test_timing_ != NULL) {
    delete test_timing_;
  }
  test_timing_ = NULL;
}
inline const ::google::devtools::resultstore::v2::TestTiming& TestAction::_internal_test_timing() const {
  return *test_timing_;
}
inline const ::google::devtools::resultstore::v2::TestTiming& TestAction::test_timing() const {
  const ::google::devtools::resultstore::v2::TestTiming* p = test_timing_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestAction.test_timing)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::TestTiming*>(
      &::google::devtools::resultstore::v2::_TestTiming_default_instance_);
}
inline ::google::devtools::resultstore::v2::TestTiming* TestAction::release_test_timing() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.TestAction.test_timing)
  
  ::google::devtools::resultstore::v2::TestTiming* temp = test_timing_;
  test_timing_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::TestTiming* TestAction::mutable_test_timing() {
  
  if (test_timing_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::TestTiming>(GetArenaNoVirtual());
    test_timing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.TestAction.test_timing)
  return test_timing_;
}
inline void TestAction::set_allocated_test_timing(::google::devtools::resultstore::v2::TestTiming* test_timing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete test_timing_;
  }
  if (test_timing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      test_timing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, test_timing, submessage_arena);
    }
    
  } else {
    
  }
  test_timing_ = test_timing;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.TestAction.test_timing)
}

// int32 shard_number = 2;
inline void TestAction::clear_shard_number() {
  shard_number_ = 0;
}
inline ::google::protobuf::int32 TestAction::shard_number() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestAction.shard_number)
  return shard_number_;
}
inline void TestAction::set_shard_number(::google::protobuf::int32 value) {
  
  shard_number_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.TestAction.shard_number)
}

// int32 run_number = 3;
inline void TestAction::clear_run_number() {
  run_number_ = 0;
}
inline ::google::protobuf::int32 TestAction::run_number() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestAction.run_number)
  return run_number_;
}
inline void TestAction::set_run_number(::google::protobuf::int32 value) {
  
  run_number_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.TestAction.run_number)
}

// int32 attempt_number = 4;
inline void TestAction::clear_attempt_number() {
  attempt_number_ = 0;
}
inline ::google::protobuf::int32 TestAction::attempt_number() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestAction.attempt_number)
  return attempt_number_;
}
inline void TestAction::set_attempt_number(::google::protobuf::int32 value) {
  
  attempt_number_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.TestAction.attempt_number)
}

// .google.devtools.resultstore.v2.TestSuite test_suite = 5;
inline bool TestAction::has_test_suite() const {
  return this != internal_default_instance() && test_suite_ != NULL;
}
inline const ::google::devtools::resultstore::v2::TestSuite& TestAction::_internal_test_suite() const {
  return *test_suite_;
}
inline const ::google::devtools::resultstore::v2::TestSuite& TestAction::test_suite() const {
  const ::google::devtools::resultstore::v2::TestSuite* p = test_suite_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestAction.test_suite)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::TestSuite*>(
      &::google::devtools::resultstore::v2::_TestSuite_default_instance_);
}
inline ::google::devtools::resultstore::v2::TestSuite* TestAction::release_test_suite() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.TestAction.test_suite)
  
  ::google::devtools::resultstore::v2::TestSuite* temp = test_suite_;
  test_suite_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::TestSuite* TestAction::mutable_test_suite() {
  
  if (test_suite_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::TestSuite>(GetArenaNoVirtual());
    test_suite_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.TestAction.test_suite)
  return test_suite_;
}
inline void TestAction::set_allocated_test_suite(::google::devtools::resultstore::v2::TestSuite* test_suite) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(test_suite_);
  }
  if (test_suite) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      test_suite = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, test_suite, submessage_arena);
    }
    
  } else {
    
  }
  test_suite_ = test_suite;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.TestAction.test_suite)
}

// repeated .google.devtools.resultstore.v2.TestWarning warnings = 8;
inline int TestAction::warnings_size() const {
  return warnings_.size();
}
inline void TestAction::clear_warnings() {
  warnings_.Clear();
}
inline ::google::devtools::resultstore::v2::TestWarning* TestAction::mutable_warnings(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.TestAction.warnings)
  return warnings_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::TestWarning >*
TestAction::mutable_warnings() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.TestAction.warnings)
  return &warnings_;
}
inline const ::google::devtools::resultstore::v2::TestWarning& TestAction::warnings(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestAction.warnings)
  return warnings_.Get(index);
}
inline ::google::devtools::resultstore::v2::TestWarning* TestAction::add_warnings() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.TestAction.warnings)
  return warnings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::TestWarning >&
TestAction::warnings() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.TestAction.warnings)
  return warnings_;
}

// int64 estimated_memory_bytes = 10;
inline void TestAction::clear_estimated_memory_bytes() {
  estimated_memory_bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TestAction::estimated_memory_bytes() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestAction.estimated_memory_bytes)
  return estimated_memory_bytes_;
}
inline void TestAction::set_estimated_memory_bytes(::google::protobuf::int64 value) {
  
  estimated_memory_bytes_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.TestAction.estimated_memory_bytes)
}

// -------------------------------------------------------------------

// ActionAttributes

// .google.devtools.resultstore.v2.ExecutionStrategy execution_strategy = 1;
inline void ActionAttributes::clear_execution_strategy() {
  execution_strategy_ = 0;
}
inline ::google::devtools::resultstore::v2::ExecutionStrategy ActionAttributes::execution_strategy() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ActionAttributes.execution_strategy)
  return static_cast< ::google::devtools::resultstore::v2::ExecutionStrategy >(execution_strategy_);
}
inline void ActionAttributes::set_execution_strategy(::google::devtools::resultstore::v2::ExecutionStrategy value) {
  
  execution_strategy_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ActionAttributes.execution_strategy)
}

// int32 exit_code = 2;
inline void ActionAttributes::clear_exit_code() {
  exit_code_ = 0;
}
inline ::google::protobuf::int32 ActionAttributes::exit_code() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ActionAttributes.exit_code)
  return exit_code_;
}
inline void ActionAttributes::set_exit_code(::google::protobuf::int32 value) {
  
  exit_code_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ActionAttributes.exit_code)
}

// string hostname = 3;
inline void ActionAttributes::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActionAttributes::hostname() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ActionAttributes.hostname)
  return hostname_.GetNoArena();
}
inline void ActionAttributes::set_hostname(const ::std::string& value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ActionAttributes.hostname)
}
#if LANG_CXX11
inline void ActionAttributes::set_hostname(::std::string&& value) {
  
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ActionAttributes.hostname)
}
#endif
inline void ActionAttributes::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ActionAttributes.hostname)
}
inline void ActionAttributes::set_hostname(const char* value, size_t size) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ActionAttributes.hostname)
}
inline ::std::string* ActionAttributes::mutable_hostname() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ActionAttributes.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActionAttributes::release_hostname() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ActionAttributes.hostname)
  
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActionAttributes::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ActionAttributes.hostname)
}

// .google.devtools.resultstore.v2.InputFileInfo input_file_info = 4;
inline bool ActionAttributes::has_input_file_info() const {
  return this != internal_default_instance() && input_file_info_ != NULL;
}
inline void ActionAttributes::clear_input_file_info() {
  if (GetArenaNoVirtual() == NULL && input_file_info_ != NULL) {
    delete input_file_info_;
  }
  input_file_info_ = NULL;
}
inline const ::google::devtools::resultstore::v2::InputFileInfo& ActionAttributes::_internal_input_file_info() const {
  return *input_file_info_;
}
inline const ::google::devtools::resultstore::v2::InputFileInfo& ActionAttributes::input_file_info() const {
  const ::google::devtools::resultstore::v2::InputFileInfo* p = input_file_info_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ActionAttributes.input_file_info)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::InputFileInfo*>(
      &::google::devtools::resultstore::v2::_InputFileInfo_default_instance_);
}
inline ::google::devtools::resultstore::v2::InputFileInfo* ActionAttributes::release_input_file_info() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ActionAttributes.input_file_info)
  
  ::google::devtools::resultstore::v2::InputFileInfo* temp = input_file_info_;
  input_file_info_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::InputFileInfo* ActionAttributes::mutable_input_file_info() {
  
  if (input_file_info_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::InputFileInfo>(GetArenaNoVirtual());
    input_file_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ActionAttributes.input_file_info)
  return input_file_info_;
}
inline void ActionAttributes::set_allocated_input_file_info(::google::devtools::resultstore::v2::InputFileInfo* input_file_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_file_info_;
  }
  if (input_file_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_file_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_file_info, submessage_arena);
    }
    
  } else {
    
  }
  input_file_info_ = input_file_info;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ActionAttributes.input_file_info)
}

// -------------------------------------------------------------------

// InputFileInfo

// int64 count = 1;
inline void InputFileInfo::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InputFileInfo::count() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.InputFileInfo.count)
  return count_;
}
inline void InputFileInfo::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.InputFileInfo.count)
}

// int64 distinct_count = 2;
inline void InputFileInfo::clear_distinct_count() {
  distinct_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InputFileInfo::distinct_count() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.InputFileInfo.distinct_count)
  return distinct_count_;
}
inline void InputFileInfo::set_distinct_count(::google::protobuf::int64 value) {
  
  distinct_count_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.InputFileInfo.distinct_count)
}

// int64 count_limit = 3;
inline void InputFileInfo::clear_count_limit() {
  count_limit_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InputFileInfo::count_limit() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.InputFileInfo.count_limit)
  return count_limit_;
}
inline void InputFileInfo::set_count_limit(::google::protobuf::int64 value) {
  
  count_limit_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.InputFileInfo.count_limit)
}

// int64 distinct_bytes = 4;
inline void InputFileInfo::clear_distinct_bytes() {
  distinct_bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InputFileInfo::distinct_bytes() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.InputFileInfo.distinct_bytes)
  return distinct_bytes_;
}
inline void InputFileInfo::set_distinct_bytes(::google::protobuf::int64 value) {
  
  distinct_bytes_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.InputFileInfo.distinct_bytes)
}

// int64 distinct_byte_limit = 5;
inline void InputFileInfo::clear_distinct_byte_limit() {
  distinct_byte_limit_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InputFileInfo::distinct_byte_limit() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.InputFileInfo.distinct_byte_limit)
  return distinct_byte_limit_;
}
inline void InputFileInfo::set_distinct_byte_limit(::google::protobuf::int64 value) {
  
  distinct_byte_limit_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.InputFileInfo.distinct_byte_limit)
}

// -------------------------------------------------------------------

// LocalTestTiming

// .google.protobuf.Duration test_process_duration = 1;
inline bool LocalTestTiming::has_test_process_duration() const {
  return this != internal_default_instance() && test_process_duration_ != NULL;
}
inline const ::google::protobuf::Duration& LocalTestTiming::_internal_test_process_duration() const {
  return *test_process_duration_;
}
inline const ::google::protobuf::Duration& LocalTestTiming::test_process_duration() const {
  const ::google::protobuf::Duration* p = test_process_duration_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.LocalTestTiming.test_process_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* LocalTestTiming::release_test_process_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.LocalTestTiming.test_process_duration)
  
  ::google::protobuf::Duration* temp = test_process_duration_;
  test_process_duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* LocalTestTiming::mutable_test_process_duration() {
  
  if (test_process_duration_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    test_process_duration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.LocalTestTiming.test_process_duration)
  return test_process_duration_;
}
inline void LocalTestTiming::set_allocated_test_process_duration(::google::protobuf::Duration* test_process_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(test_process_duration_);
  }
  if (test_process_duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(test_process_duration)->GetArena();
    if (message_arena != submessage_arena) {
      test_process_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, test_process_duration, submessage_arena);
    }
    
  } else {
    
  }
  test_process_duration_ = test_process_duration;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.LocalTestTiming.test_process_duration)
}

// -------------------------------------------------------------------

// RemoteTestAttemptTiming

// .google.protobuf.Duration queue_duration = 1;
inline bool RemoteTestAttemptTiming::has_queue_duration() const {
  return this != internal_default_instance() && queue_duration_ != NULL;
}
inline const ::google::protobuf::Duration& RemoteTestAttemptTiming::_internal_queue_duration() const {
  return *queue_duration_;
}
inline const ::google::protobuf::Duration& RemoteTestAttemptTiming::queue_duration() const {
  const ::google::protobuf::Duration* p = queue_duration_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.RemoteTestAttemptTiming.queue_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* RemoteTestAttemptTiming::release_queue_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.RemoteTestAttemptTiming.queue_duration)
  
  ::google::protobuf::Duration* temp = queue_duration_;
  queue_duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* RemoteTestAttemptTiming::mutable_queue_duration() {
  
  if (queue_duration_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    queue_duration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.RemoteTestAttemptTiming.queue_duration)
  return queue_duration_;
}
inline void RemoteTestAttemptTiming::set_allocated_queue_duration(::google::protobuf::Duration* queue_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(queue_duration_);
  }
  if (queue_duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(queue_duration)->GetArena();
    if (message_arena != submessage_arena) {
      queue_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, queue_duration, submessage_arena);
    }
    
  } else {
    
  }
  queue_duration_ = queue_duration;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.RemoteTestAttemptTiming.queue_duration)
}

// .google.protobuf.Duration upload_duration = 2;
inline bool RemoteTestAttemptTiming::has_upload_duration() const {
  return this != internal_default_instance() && upload_duration_ != NULL;
}
inline const ::google::protobuf::Duration& RemoteTestAttemptTiming::_internal_upload_duration() const {
  return *upload_duration_;
}
inline const ::google::protobuf::Duration& RemoteTestAttemptTiming::upload_duration() const {
  const ::google::protobuf::Duration* p = upload_duration_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.RemoteTestAttemptTiming.upload_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* RemoteTestAttemptTiming::release_upload_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.RemoteTestAttemptTiming.upload_duration)
  
  ::google::protobuf::Duration* temp = upload_duration_;
  upload_duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* RemoteTestAttemptTiming::mutable_upload_duration() {
  
  if (upload_duration_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    upload_duration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.RemoteTestAttemptTiming.upload_duration)
  return upload_duration_;
}
inline void RemoteTestAttemptTiming::set_allocated_upload_duration(::google::protobuf::Duration* upload_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(upload_duration_);
  }
  if (upload_duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(upload_duration)->GetArena();
    if (message_arena != submessage_arena) {
      upload_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, upload_duration, submessage_arena);
    }
    
  } else {
    
  }
  upload_duration_ = upload_duration;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.RemoteTestAttemptTiming.upload_duration)
}

// .google.protobuf.Duration machine_setup_duration = 3;
inline bool RemoteTestAttemptTiming::has_machine_setup_duration() const {
  return this != internal_default_instance() && machine_setup_duration_ != NULL;
}
inline const ::google::protobuf::Duration& RemoteTestAttemptTiming::_internal_machine_setup_duration() const {
  return *machine_setup_duration_;
}
inline const ::google::protobuf::Duration& RemoteTestAttemptTiming::machine_setup_duration() const {
  const ::google::protobuf::Duration* p = machine_setup_duration_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.RemoteTestAttemptTiming.machine_setup_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* RemoteTestAttemptTiming::release_machine_setup_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.RemoteTestAttemptTiming.machine_setup_duration)
  
  ::google::protobuf::Duration* temp = machine_setup_duration_;
  machine_setup_duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* RemoteTestAttemptTiming::mutable_machine_setup_duration() {
  
  if (machine_setup_duration_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    machine_setup_duration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.RemoteTestAttemptTiming.machine_setup_duration)
  return machine_setup_duration_;
}
inline void RemoteTestAttemptTiming::set_allocated_machine_setup_duration(::google::protobuf::Duration* machine_setup_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(machine_setup_duration_);
  }
  if (machine_setup_duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(machine_setup_duration)->GetArena();
    if (message_arena != submessage_arena) {
      machine_setup_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, machine_setup_duration, submessage_arena);
    }
    
  } else {
    
  }
  machine_setup_duration_ = machine_setup_duration;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.RemoteTestAttemptTiming.machine_setup_duration)
}

// .google.protobuf.Duration test_process_duration = 4;
inline bool RemoteTestAttemptTiming::has_test_process_duration() const {
  return this != internal_default_instance() && test_process_duration_ != NULL;
}
inline const ::google::protobuf::Duration& RemoteTestAttemptTiming::_internal_test_process_duration() const {
  return *test_process_duration_;
}
inline const ::google::protobuf::Duration& RemoteTestAttemptTiming::test_process_duration() const {
  const ::google::protobuf::Duration* p = test_process_duration_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.RemoteTestAttemptTiming.test_process_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* RemoteTestAttemptTiming::release_test_process_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.RemoteTestAttemptTiming.test_process_duration)
  
  ::google::protobuf::Duration* temp = test_process_duration_;
  test_process_duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* RemoteTestAttemptTiming::mutable_test_process_duration() {
  
  if (test_process_duration_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    test_process_duration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.RemoteTestAttemptTiming.test_process_duration)
  return test_process_duration_;
}
inline void RemoteTestAttemptTiming::set_allocated_test_process_duration(::google::protobuf::Duration* test_process_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(test_process_duration_);
  }
  if (test_process_duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(test_process_duration)->GetArena();
    if (message_arena != submessage_arena) {
      test_process_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, test_process_duration, submessage_arena);
    }
    
  } else {
    
  }
  test_process_duration_ = test_process_duration;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.RemoteTestAttemptTiming.test_process_duration)
}

// .google.protobuf.Duration download_duration = 5;
inline bool RemoteTestAttemptTiming::has_download_duration() const {
  return this != internal_default_instance() && download_duration_ != NULL;
}
inline const ::google::protobuf::Duration& RemoteTestAttemptTiming::_internal_download_duration() const {
  return *download_duration_;
}
inline const ::google::protobuf::Duration& RemoteTestAttemptTiming::download_duration() const {
  const ::google::protobuf::Duration* p = download_duration_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.RemoteTestAttemptTiming.download_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* RemoteTestAttemptTiming::release_download_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.RemoteTestAttemptTiming.download_duration)
  
  ::google::protobuf::Duration* temp = download_duration_;
  download_duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* RemoteTestAttemptTiming::mutable_download_duration() {
  
  if (download_duration_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    download_duration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.RemoteTestAttemptTiming.download_duration)
  return download_duration_;
}
inline void RemoteTestAttemptTiming::set_allocated_download_duration(::google::protobuf::Duration* download_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(download_duration_);
  }
  if (download_duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(download_duration)->GetArena();
    if (message_arena != submessage_arena) {
      download_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, download_duration, submessage_arena);
    }
    
  } else {
    
  }
  download_duration_ = download_duration;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.RemoteTestAttemptTiming.download_duration)
}

// -------------------------------------------------------------------

// RemoteTestTiming

// .google.protobuf.Duration local_analysis_duration = 1;
inline bool RemoteTestTiming::has_local_analysis_duration() const {
  return this != internal_default_instance() && local_analysis_duration_ != NULL;
}
inline const ::google::protobuf::Duration& RemoteTestTiming::_internal_local_analysis_duration() const {
  return *local_analysis_duration_;
}
inline const ::google::protobuf::Duration& RemoteTestTiming::local_analysis_duration() const {
  const ::google::protobuf::Duration* p = local_analysis_duration_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.RemoteTestTiming.local_analysis_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* RemoteTestTiming::release_local_analysis_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.RemoteTestTiming.local_analysis_duration)
  
  ::google::protobuf::Duration* temp = local_analysis_duration_;
  local_analysis_duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* RemoteTestTiming::mutable_local_analysis_duration() {
  
  if (local_analysis_duration_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    local_analysis_duration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.RemoteTestTiming.local_analysis_duration)
  return local_analysis_duration_;
}
inline void RemoteTestTiming::set_allocated_local_analysis_duration(::google::protobuf::Duration* local_analysis_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(local_analysis_duration_);
  }
  if (local_analysis_duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(local_analysis_duration)->GetArena();
    if (message_arena != submessage_arena) {
      local_analysis_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, local_analysis_duration, submessage_arena);
    }
    
  } else {
    
  }
  local_analysis_duration_ = local_analysis_duration;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.RemoteTestTiming.local_analysis_duration)
}

// repeated .google.devtools.resultstore.v2.RemoteTestAttemptTiming attempts = 2;
inline int RemoteTestTiming::attempts_size() const {
  return attempts_.size();
}
inline void RemoteTestTiming::clear_attempts() {
  attempts_.Clear();
}
inline ::google::devtools::resultstore::v2::RemoteTestAttemptTiming* RemoteTestTiming::mutable_attempts(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.RemoteTestTiming.attempts)
  return attempts_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::RemoteTestAttemptTiming >*
RemoteTestTiming::mutable_attempts() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.RemoteTestTiming.attempts)
  return &attempts_;
}
inline const ::google::devtools::resultstore::v2::RemoteTestAttemptTiming& RemoteTestTiming::attempts(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.RemoteTestTiming.attempts)
  return attempts_.Get(index);
}
inline ::google::devtools::resultstore::v2::RemoteTestAttemptTiming* RemoteTestTiming::add_attempts() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.RemoteTestTiming.attempts)
  return attempts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::RemoteTestAttemptTiming >&
RemoteTestTiming::attempts() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.RemoteTestTiming.attempts)
  return attempts_;
}

// -------------------------------------------------------------------

// TestTiming

// .google.devtools.resultstore.v2.LocalTestTiming local = 1;
inline bool TestTiming::has_local() const {
  return location_case() == kLocal;
}
inline void TestTiming::set_has_local() {
  _oneof_case_[0] = kLocal;
}
inline void TestTiming::clear_local() {
  if (has_local()) {
    delete location_.local_;
    clear_has_location();
  }
}
inline const ::google::devtools::resultstore::v2::LocalTestTiming& TestTiming::_internal_local() const {
  return *location_.local_;
}
inline ::google::devtools::resultstore::v2::LocalTestTiming* TestTiming::release_local() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.TestTiming.local)
  if (has_local()) {
    clear_has_location();
      ::google::devtools::resultstore::v2::LocalTestTiming* temp = location_.local_;
    location_.local_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::devtools::resultstore::v2::LocalTestTiming& TestTiming::local() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestTiming.local)
  return has_local()
      ? *location_.local_
      : *reinterpret_cast< ::google::devtools::resultstore::v2::LocalTestTiming*>(&::google::devtools::resultstore::v2::_LocalTestTiming_default_instance_);
}
inline ::google::devtools::resultstore::v2::LocalTestTiming* TestTiming::mutable_local() {
  if (!has_local()) {
    clear_location();
    set_has_local();
    location_.local_ = CreateMaybeMessage< ::google::devtools::resultstore::v2::LocalTestTiming >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.TestTiming.local)
  return location_.local_;
}

// .google.devtools.resultstore.v2.RemoteTestTiming remote = 2;
inline bool TestTiming::has_remote() const {
  return location_case() == kRemote;
}
inline void TestTiming::set_has_remote() {
  _oneof_case_[0] = kRemote;
}
inline void TestTiming::clear_remote() {
  if (has_remote()) {
    delete location_.remote_;
    clear_has_location();
  }
}
inline const ::google::devtools::resultstore::v2::RemoteTestTiming& TestTiming::_internal_remote() const {
  return *location_.remote_;
}
inline ::google::devtools::resultstore::v2::RemoteTestTiming* TestTiming::release_remote() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.TestTiming.remote)
  if (has_remote()) {
    clear_has_location();
      ::google::devtools::resultstore::v2::RemoteTestTiming* temp = location_.remote_;
    location_.remote_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::devtools::resultstore::v2::RemoteTestTiming& TestTiming::remote() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestTiming.remote)
  return has_remote()
      ? *location_.remote_
      : *reinterpret_cast< ::google::devtools::resultstore::v2::RemoteTestTiming*>(&::google::devtools::resultstore::v2::_RemoteTestTiming_default_instance_);
}
inline ::google::devtools::resultstore::v2::RemoteTestTiming* TestTiming::mutable_remote() {
  if (!has_remote()) {
    clear_location();
    set_has_remote();
    location_.remote_ = CreateMaybeMessage< ::google::devtools::resultstore::v2::RemoteTestTiming >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.TestTiming.remote)
  return location_.remote_;
}

// .google.protobuf.Duration system_time_duration = 3;
inline bool TestTiming::has_system_time_duration() const {
  return this != internal_default_instance() && system_time_duration_ != NULL;
}
inline const ::google::protobuf::Duration& TestTiming::_internal_system_time_duration() const {
  return *system_time_duration_;
}
inline const ::google::protobuf::Duration& TestTiming::system_time_duration() const {
  const ::google::protobuf::Duration* p = system_time_duration_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestTiming.system_time_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* TestTiming::release_system_time_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.TestTiming.system_time_duration)
  
  ::google::protobuf::Duration* temp = system_time_duration_;
  system_time_duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* TestTiming::mutable_system_time_duration() {
  
  if (system_time_duration_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    system_time_duration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.TestTiming.system_time_duration)
  return system_time_duration_;
}
inline void TestTiming::set_allocated_system_time_duration(::google::protobuf::Duration* system_time_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(system_time_duration_);
  }
  if (system_time_duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(system_time_duration)->GetArena();
    if (message_arena != submessage_arena) {
      system_time_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, system_time_duration, submessage_arena);
    }
    
  } else {
    
  }
  system_time_duration_ = system_time_duration;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.TestTiming.system_time_duration)
}

// .google.protobuf.Duration user_time_duration = 4;
inline bool TestTiming::has_user_time_duration() const {
  return this != internal_default_instance() && user_time_duration_ != NULL;
}
inline const ::google::protobuf::Duration& TestTiming::_internal_user_time_duration() const {
  return *user_time_duration_;
}
inline const ::google::protobuf::Duration& TestTiming::user_time_duration() const {
  const ::google::protobuf::Duration* p = user_time_duration_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestTiming.user_time_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* TestTiming::release_user_time_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.TestTiming.user_time_duration)
  
  ::google::protobuf::Duration* temp = user_time_duration_;
  user_time_duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* TestTiming::mutable_user_time_duration() {
  
  if (user_time_duration_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    user_time_duration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.TestTiming.user_time_duration)
  return user_time_duration_;
}
inline void TestTiming::set_allocated_user_time_duration(::google::protobuf::Duration* user_time_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(user_time_duration_);
  }
  if (user_time_duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(user_time_duration)->GetArena();
    if (message_arena != submessage_arena) {
      user_time_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_time_duration, submessage_arena);
    }
    
  } else {
    
  }
  user_time_duration_ = user_time_duration;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.TestTiming.user_time_duration)
}

// .google.devtools.resultstore.v2.TestCaching test_caching = 5;
inline void TestTiming::clear_test_caching() {
  test_caching_ = 0;
}
inline ::google::devtools::resultstore::v2::TestCaching TestTiming::test_caching() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestTiming.test_caching)
  return static_cast< ::google::devtools::resultstore::v2::TestCaching >(test_caching_);
}
inline void TestTiming::set_test_caching(::google::devtools::resultstore::v2::TestCaching value) {
  
  test_caching_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.TestTiming.test_caching)
}

inline bool TestTiming::has_location() const {
  return location_case() != LOCATION_NOT_SET;
}
inline void TestTiming::clear_has_location() {
  _oneof_case_[0] = LOCATION_NOT_SET;
}
inline TestTiming::LocationCase TestTiming::location_case() const {
  return TestTiming::LocationCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// TestWarning

// string warning_message = 1;
inline void TestWarning::clear_warning_message() {
  warning_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TestWarning::warning_message() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestWarning.warning_message)
  return warning_message_.GetNoArena();
}
inline void TestWarning::set_warning_message(const ::std::string& value) {
  
  warning_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.TestWarning.warning_message)
}
#if LANG_CXX11
inline void TestWarning::set_warning_message(::std::string&& value) {
  
  warning_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.TestWarning.warning_message)
}
#endif
inline void TestWarning::set_warning_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  warning_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.TestWarning.warning_message)
}
inline void TestWarning::set_warning_message(const char* value, size_t size) {
  
  warning_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.TestWarning.warning_message)
}
inline ::std::string* TestWarning::mutable_warning_message() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.TestWarning.warning_message)
  return warning_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TestWarning::release_warning_message() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.TestWarning.warning_message)
  
  return warning_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TestWarning::set_allocated_warning_message(::std::string* warning_message) {
  if (warning_message != NULL) {
    
  } else {
    
  }
  warning_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warning_message);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.TestWarning.warning_message)
}

// -------------------------------------------------------------------

// FileProcessingErrors

// string file_uid = 1;
inline void FileProcessingErrors::clear_file_uid() {
  file_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileProcessingErrors::file_uid() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.FileProcessingErrors.file_uid)
  return file_uid_.GetNoArena();
}
inline void FileProcessingErrors::set_file_uid(const ::std::string& value) {
  
  file_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.FileProcessingErrors.file_uid)
}
#if LANG_CXX11
inline void FileProcessingErrors::set_file_uid(::std::string&& value) {
  
  file_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.FileProcessingErrors.file_uid)
}
#endif
inline void FileProcessingErrors::set_file_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.FileProcessingErrors.file_uid)
}
inline void FileProcessingErrors::set_file_uid(const char* value, size_t size) {
  
  file_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.FileProcessingErrors.file_uid)
}
inline ::std::string* FileProcessingErrors::mutable_file_uid() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.FileProcessingErrors.file_uid)
  return file_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileProcessingErrors::release_file_uid() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.FileProcessingErrors.file_uid)
  
  return file_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileProcessingErrors::set_allocated_file_uid(::std::string* file_uid) {
  if (file_uid != NULL) {
    
  } else {
    
  }
  file_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_uid);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.FileProcessingErrors.file_uid)
}

// repeated .google.devtools.resultstore.v2.FileProcessingError file_processing_errors = 3;
inline int FileProcessingErrors::file_processing_errors_size() const {
  return file_processing_errors_.size();
}
inline void FileProcessingErrors::clear_file_processing_errors() {
  file_processing_errors_.Clear();
}
inline ::google::devtools::resultstore::v2::FileProcessingError* FileProcessingErrors::mutable_file_processing_errors(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.FileProcessingErrors.file_processing_errors)
  return file_processing_errors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileProcessingError >*
FileProcessingErrors::mutable_file_processing_errors() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.FileProcessingErrors.file_processing_errors)
  return &file_processing_errors_;
}
inline const ::google::devtools::resultstore::v2::FileProcessingError& FileProcessingErrors::file_processing_errors(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.FileProcessingErrors.file_processing_errors)
  return file_processing_errors_.Get(index);
}
inline ::google::devtools::resultstore::v2::FileProcessingError* FileProcessingErrors::add_file_processing_errors() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.FileProcessingErrors.file_processing_errors)
  return file_processing_errors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileProcessingError >&
FileProcessingErrors::file_processing_errors() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.FileProcessingErrors.file_processing_errors)
  return file_processing_errors_;
}

// -------------------------------------------------------------------

// FileProcessingError

// .google.devtools.resultstore.v2.FileProcessingErrorType type = 1;
inline void FileProcessingError::clear_type() {
  type_ = 0;
}
inline ::google::devtools::resultstore::v2::FileProcessingErrorType FileProcessingError::type() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.FileProcessingError.type)
  return static_cast< ::google::devtools::resultstore::v2::FileProcessingErrorType >(type_);
}
inline void FileProcessingError::set_type(::google::devtools::resultstore::v2::FileProcessingErrorType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.FileProcessingError.type)
}

// string message = 2;
inline void FileProcessingError::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileProcessingError::message() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.FileProcessingError.message)
  return message_.GetNoArena();
}
inline void FileProcessingError::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.FileProcessingError.message)
}
#if LANG_CXX11
inline void FileProcessingError::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.FileProcessingError.message)
}
#endif
inline void FileProcessingError::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.FileProcessingError.message)
}
inline void FileProcessingError::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.FileProcessingError.message)
}
inline ::std::string* FileProcessingError::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.FileProcessingError.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileProcessingError::release_message() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.FileProcessingError.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileProcessingError::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.FileProcessingError.message)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::devtools::resultstore::v2::ExecutionStrategy> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::resultstore::v2::ExecutionStrategy>() {
  return ::google::devtools::resultstore::v2::ExecutionStrategy_descriptor();
}
template <> struct is_proto_enum< ::google::devtools::resultstore::v2::TestCaching> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::resultstore::v2::TestCaching>() {
  return ::google::devtools::resultstore::v2::TestCaching_descriptor();
}
template <> struct is_proto_enum< ::google::devtools::resultstore::v2::FileProcessingErrorType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::resultstore::v2::FileProcessingErrorType>() {
  return ::google::devtools::resultstore::v2::FileProcessingErrorType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2faction_2eproto
