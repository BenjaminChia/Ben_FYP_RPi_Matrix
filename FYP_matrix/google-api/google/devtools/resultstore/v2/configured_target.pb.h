// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/configured_target.proto

#ifndef PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2fconfigured_5ftarget_2eproto
#define PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2fconfigured_5ftarget_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/devtools/resultstore/v2/common.pb.h"
#include "google/devtools/resultstore/v2/coverage_summary.pb.h"
#include "google/devtools/resultstore/v2/file.pb.h"
#include <google/protobuf/duration.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fresultstore_2fv2_2fconfigured_5ftarget_2eproto 

namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fconfigured_5ftarget_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fconfigured_5ftarget_2eproto
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {
class ConfiguredTarget;
class ConfiguredTargetDefaultTypeInternal;
extern ConfiguredTargetDefaultTypeInternal _ConfiguredTarget_default_instance_;
class ConfiguredTarget_Id;
class ConfiguredTarget_IdDefaultTypeInternal;
extern ConfiguredTarget_IdDefaultTypeInternal _ConfiguredTarget_Id_default_instance_;
class ConfiguredTestAttributes;
class ConfiguredTestAttributesDefaultTypeInternal;
extern ConfiguredTestAttributesDefaultTypeInternal _ConfiguredTestAttributes_default_instance_;
}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::devtools::resultstore::v2::ConfiguredTarget* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ConfiguredTarget>(Arena*);
template<> ::google::devtools::resultstore::v2::ConfiguredTarget_Id* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ConfiguredTarget_Id>(Arena*);
template<> ::google::devtools::resultstore::v2::ConfiguredTestAttributes* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ConfiguredTestAttributes>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {

// ===================================================================

class ConfiguredTarget_Id : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ConfiguredTarget.Id) */ {
 public:
  ConfiguredTarget_Id();
  virtual ~ConfiguredTarget_Id();

  ConfiguredTarget_Id(const ConfiguredTarget_Id& from);

  inline ConfiguredTarget_Id& operator=(const ConfiguredTarget_Id& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfiguredTarget_Id(ConfiguredTarget_Id&& from) noexcept
    : ConfiguredTarget_Id() {
    *this = ::std::move(from);
  }

  inline ConfiguredTarget_Id& operator=(ConfiguredTarget_Id&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfiguredTarget_Id& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfiguredTarget_Id* internal_default_instance() {
    return reinterpret_cast<const ConfiguredTarget_Id*>(
               &_ConfiguredTarget_Id_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ConfiguredTarget_Id* other);
  friend void swap(ConfiguredTarget_Id& a, ConfiguredTarget_Id& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfiguredTarget_Id* New() const final {
    return CreateMaybeMessage<ConfiguredTarget_Id>(NULL);
  }

  ConfiguredTarget_Id* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfiguredTarget_Id>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfiguredTarget_Id& from);
  void MergeFrom(const ConfiguredTarget_Id& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfiguredTarget_Id* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string invocation_id = 1;
  void clear_invocation_id();
  static const int kInvocationIdFieldNumber = 1;
  const ::std::string& invocation_id() const;
  void set_invocation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_invocation_id(::std::string&& value);
  #endif
  void set_invocation_id(const char* value);
  void set_invocation_id(const char* value, size_t size);
  ::std::string* mutable_invocation_id();
  ::std::string* release_invocation_id();
  void set_allocated_invocation_id(::std::string* invocation_id);

  // string target_id = 2;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  const ::std::string& target_id() const;
  void set_target_id(const ::std::string& value);
  #if LANG_CXX11
  void set_target_id(::std::string&& value);
  #endif
  void set_target_id(const char* value);
  void set_target_id(const char* value, size_t size);
  ::std::string* mutable_target_id();
  ::std::string* release_target_id();
  void set_allocated_target_id(::std::string* target_id);

  // string configuration_id = 3;
  void clear_configuration_id();
  static const int kConfigurationIdFieldNumber = 3;
  const ::std::string& configuration_id() const;
  void set_configuration_id(const ::std::string& value);
  #if LANG_CXX11
  void set_configuration_id(::std::string&& value);
  #endif
  void set_configuration_id(const char* value);
  void set_configuration_id(const char* value, size_t size);
  ::std::string* mutable_configuration_id();
  ::std::string* release_configuration_id();
  void set_allocated_configuration_id(::std::string* configuration_id);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ConfiguredTarget.Id)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr invocation_id_;
  ::google::protobuf::internal::ArenaStringPtr target_id_;
  ::google::protobuf::internal::ArenaStringPtr configuration_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fconfigured_5ftarget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfiguredTarget : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ConfiguredTarget) */ {
 public:
  ConfiguredTarget();
  virtual ~ConfiguredTarget();

  ConfiguredTarget(const ConfiguredTarget& from);

  inline ConfiguredTarget& operator=(const ConfiguredTarget& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfiguredTarget(ConfiguredTarget&& from) noexcept
    : ConfiguredTarget() {
    *this = ::std::move(from);
  }

  inline ConfiguredTarget& operator=(ConfiguredTarget&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfiguredTarget& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfiguredTarget* internal_default_instance() {
    return reinterpret_cast<const ConfiguredTarget*>(
               &_ConfiguredTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ConfiguredTarget* other);
  friend void swap(ConfiguredTarget& a, ConfiguredTarget& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfiguredTarget* New() const final {
    return CreateMaybeMessage<ConfiguredTarget>(NULL);
  }

  ConfiguredTarget* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfiguredTarget>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfiguredTarget& from);
  void MergeFrom(const ConfiguredTarget& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfiguredTarget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConfiguredTarget_Id Id;

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.Property properties = 7;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 7;
  ::google::devtools::resultstore::v2::Property* mutable_properties(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >*
      mutable_properties();
  const ::google::devtools::resultstore::v2::Property& properties(int index) const;
  ::google::devtools::resultstore::v2::Property* add_properties();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >&
      properties() const;

  // repeated .google.devtools.resultstore.v2.File files = 8;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 8;
  ::google::devtools::resultstore::v2::File* mutable_files(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >*
      mutable_files();
  const ::google::devtools::resultstore::v2::File& files(int index) const;
  ::google::devtools::resultstore::v2::File* add_files();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >&
      files() const;

  // repeated .google.devtools.resultstore.v2.LanguageCoverageSummary coverage_summaries = 9;
  int coverage_summaries_size() const;
  void clear_coverage_summaries();
  static const int kCoverageSummariesFieldNumber = 9;
  ::google::devtools::resultstore::v2::LanguageCoverageSummary* mutable_coverage_summaries(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary >*
      mutable_coverage_summaries();
  const ::google::devtools::resultstore::v2::LanguageCoverageSummary& coverage_summaries(int index) const;
  ::google::devtools::resultstore::v2::LanguageCoverageSummary* add_coverage_summaries();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary >&
      coverage_summaries() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.devtools.resultstore.v2.ConfiguredTarget.Id id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::devtools::resultstore::v2::ConfiguredTarget_Id& _internal_id() const;
  public:
  const ::google::devtools::resultstore::v2::ConfiguredTarget_Id& id() const;
  ::google::devtools::resultstore::v2::ConfiguredTarget_Id* release_id();
  ::google::devtools::resultstore::v2::ConfiguredTarget_Id* mutable_id();
  void set_allocated_id(::google::devtools::resultstore::v2::ConfiguredTarget_Id* id);

  // .google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;
  bool has_status_attributes() const;
  void clear_status_attributes();
  static const int kStatusAttributesFieldNumber = 3;
  private:
  const ::google::devtools::resultstore::v2::StatusAttributes& _internal_status_attributes() const;
  public:
  const ::google::devtools::resultstore::v2::StatusAttributes& status_attributes() const;
  ::google::devtools::resultstore::v2::StatusAttributes* release_status_attributes();
  ::google::devtools::resultstore::v2::StatusAttributes* mutable_status_attributes();
  void set_allocated_status_attributes(::google::devtools::resultstore::v2::StatusAttributes* status_attributes);

  // .google.devtools.resultstore.v2.Timing timing = 4;
  bool has_timing() const;
  void clear_timing();
  static const int kTimingFieldNumber = 4;
  private:
  const ::google::devtools::resultstore::v2::Timing& _internal_timing() const;
  public:
  const ::google::devtools::resultstore::v2::Timing& timing() const;
  ::google::devtools::resultstore::v2::Timing* release_timing();
  ::google::devtools::resultstore::v2::Timing* mutable_timing();
  void set_allocated_timing(::google::devtools::resultstore::v2::Timing* timing);

  // .google.devtools.resultstore.v2.ConfiguredTestAttributes test_attributes = 6;
  bool has_test_attributes() const;
  void clear_test_attributes();
  static const int kTestAttributesFieldNumber = 6;
  private:
  const ::google::devtools::resultstore::v2::ConfiguredTestAttributes& _internal_test_attributes() const;
  public:
  const ::google::devtools::resultstore::v2::ConfiguredTestAttributes& test_attributes() const;
  ::google::devtools::resultstore::v2::ConfiguredTestAttributes* release_test_attributes();
  ::google::devtools::resultstore::v2::ConfiguredTestAttributes* mutable_test_attributes();
  void set_allocated_test_attributes(::google::devtools::resultstore::v2::ConfiguredTestAttributes* test_attributes);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ConfiguredTarget)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property > properties_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File > files_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary > coverage_summaries_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::devtools::resultstore::v2::ConfiguredTarget_Id* id_;
  ::google::devtools::resultstore::v2::StatusAttributes* status_attributes_;
  ::google::devtools::resultstore::v2::Timing* timing_;
  ::google::devtools::resultstore::v2::ConfiguredTestAttributes* test_attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fconfigured_5ftarget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfiguredTestAttributes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ConfiguredTestAttributes) */ {
 public:
  ConfiguredTestAttributes();
  virtual ~ConfiguredTestAttributes();

  ConfiguredTestAttributes(const ConfiguredTestAttributes& from);

  inline ConfiguredTestAttributes& operator=(const ConfiguredTestAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfiguredTestAttributes(ConfiguredTestAttributes&& from) noexcept
    : ConfiguredTestAttributes() {
    *this = ::std::move(from);
  }

  inline ConfiguredTestAttributes& operator=(ConfiguredTestAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfiguredTestAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfiguredTestAttributes* internal_default_instance() {
    return reinterpret_cast<const ConfiguredTestAttributes*>(
               &_ConfiguredTestAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ConfiguredTestAttributes* other);
  friend void swap(ConfiguredTestAttributes& a, ConfiguredTestAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfiguredTestAttributes* New() const final {
    return CreateMaybeMessage<ConfiguredTestAttributes>(NULL);
  }

  ConfiguredTestAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfiguredTestAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfiguredTestAttributes& from);
  void MergeFrom(const ConfiguredTestAttributes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfiguredTestAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Duration timeout_duration = 5;
  bool has_timeout_duration() const;
  void clear_timeout_duration();
  static const int kTimeoutDurationFieldNumber = 5;
  private:
  const ::google::protobuf::Duration& _internal_timeout_duration() const;
  public:
  const ::google::protobuf::Duration& timeout_duration() const;
  ::google::protobuf::Duration* release_timeout_duration();
  ::google::protobuf::Duration* mutable_timeout_duration();
  void set_allocated_timeout_duration(::google::protobuf::Duration* timeout_duration);

  // int32 total_run_count = 2;
  void clear_total_run_count();
  static const int kTotalRunCountFieldNumber = 2;
  ::google::protobuf::int32 total_run_count() const;
  void set_total_run_count(::google::protobuf::int32 value);

  // int32 total_shard_count = 3;
  void clear_total_shard_count();
  static const int kTotalShardCountFieldNumber = 3;
  ::google::protobuf::int32 total_shard_count() const;
  void set_total_shard_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ConfiguredTestAttributes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Duration* timeout_duration_;
  ::google::protobuf::int32 total_run_count_;
  ::google::protobuf::int32 total_shard_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fconfigured_5ftarget_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConfiguredTarget_Id

// string invocation_id = 1;
inline void ConfiguredTarget_Id::clear_invocation_id() {
  invocation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfiguredTarget_Id::invocation_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTarget.Id.invocation_id)
  return invocation_id_.GetNoArena();
}
inline void ConfiguredTarget_Id::set_invocation_id(const ::std::string& value) {
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ConfiguredTarget.Id.invocation_id)
}
#if LANG_CXX11
inline void ConfiguredTarget_Id::set_invocation_id(::std::string&& value) {
  
  invocation_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ConfiguredTarget.Id.invocation_id)
}
#endif
inline void ConfiguredTarget_Id::set_invocation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ConfiguredTarget.Id.invocation_id)
}
inline void ConfiguredTarget_Id::set_invocation_id(const char* value, size_t size) {
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ConfiguredTarget.Id.invocation_id)
}
inline ::std::string* ConfiguredTarget_Id::mutable_invocation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ConfiguredTarget.Id.invocation_id)
  return invocation_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfiguredTarget_Id::release_invocation_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ConfiguredTarget.Id.invocation_id)
  
  return invocation_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfiguredTarget_Id::set_allocated_invocation_id(::std::string* invocation_id) {
  if (invocation_id != NULL) {
    
  } else {
    
  }
  invocation_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invocation_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ConfiguredTarget.Id.invocation_id)
}

// string target_id = 2;
inline void ConfiguredTarget_Id::clear_target_id() {
  target_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfiguredTarget_Id::target_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTarget.Id.target_id)
  return target_id_.GetNoArena();
}
inline void ConfiguredTarget_Id::set_target_id(const ::std::string& value) {
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ConfiguredTarget.Id.target_id)
}
#if LANG_CXX11
inline void ConfiguredTarget_Id::set_target_id(::std::string&& value) {
  
  target_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ConfiguredTarget.Id.target_id)
}
#endif
inline void ConfiguredTarget_Id::set_target_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ConfiguredTarget.Id.target_id)
}
inline void ConfiguredTarget_Id::set_target_id(const char* value, size_t size) {
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ConfiguredTarget.Id.target_id)
}
inline ::std::string* ConfiguredTarget_Id::mutable_target_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ConfiguredTarget.Id.target_id)
  return target_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfiguredTarget_Id::release_target_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ConfiguredTarget.Id.target_id)
  
  return target_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfiguredTarget_Id::set_allocated_target_id(::std::string* target_id) {
  if (target_id != NULL) {
    
  } else {
    
  }
  target_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ConfiguredTarget.Id.target_id)
}

// string configuration_id = 3;
inline void ConfiguredTarget_Id::clear_configuration_id() {
  configuration_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfiguredTarget_Id::configuration_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTarget.Id.configuration_id)
  return configuration_id_.GetNoArena();
}
inline void ConfiguredTarget_Id::set_configuration_id(const ::std::string& value) {
  
  configuration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ConfiguredTarget.Id.configuration_id)
}
#if LANG_CXX11
inline void ConfiguredTarget_Id::set_configuration_id(::std::string&& value) {
  
  configuration_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ConfiguredTarget.Id.configuration_id)
}
#endif
inline void ConfiguredTarget_Id::set_configuration_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  configuration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ConfiguredTarget.Id.configuration_id)
}
inline void ConfiguredTarget_Id::set_configuration_id(const char* value, size_t size) {
  
  configuration_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ConfiguredTarget.Id.configuration_id)
}
inline ::std::string* ConfiguredTarget_Id::mutable_configuration_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ConfiguredTarget.Id.configuration_id)
  return configuration_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfiguredTarget_Id::release_configuration_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ConfiguredTarget.Id.configuration_id)
  
  return configuration_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfiguredTarget_Id::set_allocated_configuration_id(::std::string* configuration_id) {
  if (configuration_id != NULL) {
    
  } else {
    
  }
  configuration_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), configuration_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ConfiguredTarget.Id.configuration_id)
}

// -------------------------------------------------------------------

// ConfiguredTarget

// string name = 1;
inline void ConfiguredTarget::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfiguredTarget::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTarget.name)
  return name_.GetNoArena();
}
inline void ConfiguredTarget::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ConfiguredTarget.name)
}
#if LANG_CXX11
inline void ConfiguredTarget::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ConfiguredTarget.name)
}
#endif
inline void ConfiguredTarget::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ConfiguredTarget.name)
}
inline void ConfiguredTarget::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ConfiguredTarget.name)
}
inline ::std::string* ConfiguredTarget::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ConfiguredTarget.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfiguredTarget::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ConfiguredTarget.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfiguredTarget::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ConfiguredTarget.name)
}

// .google.devtools.resultstore.v2.ConfiguredTarget.Id id = 2;
inline bool ConfiguredTarget::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void ConfiguredTarget::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
inline const ::google::devtools::resultstore::v2::ConfiguredTarget_Id& ConfiguredTarget::_internal_id() const {
  return *id_;
}
inline const ::google::devtools::resultstore::v2::ConfiguredTarget_Id& ConfiguredTarget::id() const {
  const ::google::devtools::resultstore::v2::ConfiguredTarget_Id* p = id_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTarget.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::ConfiguredTarget_Id*>(
      &::google::devtools::resultstore::v2::_ConfiguredTarget_Id_default_instance_);
}
inline ::google::devtools::resultstore::v2::ConfiguredTarget_Id* ConfiguredTarget::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ConfiguredTarget.id)
  
  ::google::devtools::resultstore::v2::ConfiguredTarget_Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::ConfiguredTarget_Id* ConfiguredTarget::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::ConfiguredTarget_Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ConfiguredTarget.id)
  return id_;
}
inline void ConfiguredTarget::set_allocated_id(::google::devtools::resultstore::v2::ConfiguredTarget_Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete id_;
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ConfiguredTarget.id)
}

// .google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;
inline bool ConfiguredTarget::has_status_attributes() const {
  return this != internal_default_instance() && status_attributes_ != NULL;
}
inline const ::google::devtools::resultstore::v2::StatusAttributes& ConfiguredTarget::_internal_status_attributes() const {
  return *status_attributes_;
}
inline const ::google::devtools::resultstore::v2::StatusAttributes& ConfiguredTarget::status_attributes() const {
  const ::google::devtools::resultstore::v2::StatusAttributes* p = status_attributes_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTarget.status_attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::StatusAttributes*>(
      &::google::devtools::resultstore::v2::_StatusAttributes_default_instance_);
}
inline ::google::devtools::resultstore::v2::StatusAttributes* ConfiguredTarget::release_status_attributes() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ConfiguredTarget.status_attributes)
  
  ::google::devtools::resultstore::v2::StatusAttributes* temp = status_attributes_;
  status_attributes_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::StatusAttributes* ConfiguredTarget::mutable_status_attributes() {
  
  if (status_attributes_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::StatusAttributes>(GetArenaNoVirtual());
    status_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ConfiguredTarget.status_attributes)
  return status_attributes_;
}
inline void ConfiguredTarget::set_allocated_status_attributes(::google::devtools::resultstore::v2::StatusAttributes* status_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_attributes_);
  }
  if (status_attributes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status_attributes, submessage_arena);
    }
    
  } else {
    
  }
  status_attributes_ = status_attributes;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ConfiguredTarget.status_attributes)
}

// .google.devtools.resultstore.v2.Timing timing = 4;
inline bool ConfiguredTarget::has_timing() const {
  return this != internal_default_instance() && timing_ != NULL;
}
inline const ::google::devtools::resultstore::v2::Timing& ConfiguredTarget::_internal_timing() const {
  return *timing_;
}
inline const ::google::devtools::resultstore::v2::Timing& ConfiguredTarget::timing() const {
  const ::google::devtools::resultstore::v2::Timing* p = timing_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTarget.timing)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::Timing*>(
      &::google::devtools::resultstore::v2::_Timing_default_instance_);
}
inline ::google::devtools::resultstore::v2::Timing* ConfiguredTarget::release_timing() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ConfiguredTarget.timing)
  
  ::google::devtools::resultstore::v2::Timing* temp = timing_;
  timing_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::Timing* ConfiguredTarget::mutable_timing() {
  
  if (timing_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::Timing>(GetArenaNoVirtual());
    timing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ConfiguredTarget.timing)
  return timing_;
}
inline void ConfiguredTarget::set_allocated_timing(::google::devtools::resultstore::v2::Timing* timing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timing_);
  }
  if (timing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timing, submessage_arena);
    }
    
  } else {
    
  }
  timing_ = timing;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ConfiguredTarget.timing)
}

// .google.devtools.resultstore.v2.ConfiguredTestAttributes test_attributes = 6;
inline bool ConfiguredTarget::has_test_attributes() const {
  return this != internal_default_instance() && test_attributes_ != NULL;
}
inline void ConfiguredTarget::clear_test_attributes() {
  if (GetArenaNoVirtual() == NULL && test_attributes_ != NULL) {
    delete test_attributes_;
  }
  test_attributes_ = NULL;
}
inline const ::google::devtools::resultstore::v2::ConfiguredTestAttributes& ConfiguredTarget::_internal_test_attributes() const {
  return *test_attributes_;
}
inline const ::google::devtools::resultstore::v2::ConfiguredTestAttributes& ConfiguredTarget::test_attributes() const {
  const ::google::devtools::resultstore::v2::ConfiguredTestAttributes* p = test_attributes_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTarget.test_attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::ConfiguredTestAttributes*>(
      &::google::devtools::resultstore::v2::_ConfiguredTestAttributes_default_instance_);
}
inline ::google::devtools::resultstore::v2::ConfiguredTestAttributes* ConfiguredTarget::release_test_attributes() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ConfiguredTarget.test_attributes)
  
  ::google::devtools::resultstore::v2::ConfiguredTestAttributes* temp = test_attributes_;
  test_attributes_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::ConfiguredTestAttributes* ConfiguredTarget::mutable_test_attributes() {
  
  if (test_attributes_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::ConfiguredTestAttributes>(GetArenaNoVirtual());
    test_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ConfiguredTarget.test_attributes)
  return test_attributes_;
}
inline void ConfiguredTarget::set_allocated_test_attributes(::google::devtools::resultstore::v2::ConfiguredTestAttributes* test_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete test_attributes_;
  }
  if (test_attributes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      test_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, test_attributes, submessage_arena);
    }
    
  } else {
    
  }
  test_attributes_ = test_attributes;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ConfiguredTarget.test_attributes)
}

// repeated .google.devtools.resultstore.v2.Property properties = 7;
inline int ConfiguredTarget::properties_size() const {
  return properties_.size();
}
inline ::google::devtools::resultstore::v2::Property* ConfiguredTarget::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ConfiguredTarget.properties)
  return properties_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >*
ConfiguredTarget::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.ConfiguredTarget.properties)
  return &properties_;
}
inline const ::google::devtools::resultstore::v2::Property& ConfiguredTarget::properties(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTarget.properties)
  return properties_.Get(index);
}
inline ::google::devtools::resultstore::v2::Property* ConfiguredTarget::add_properties() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.ConfiguredTarget.properties)
  return properties_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >&
ConfiguredTarget::properties() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.ConfiguredTarget.properties)
  return properties_;
}

// repeated .google.devtools.resultstore.v2.File files = 8;
inline int ConfiguredTarget::files_size() const {
  return files_.size();
}
inline ::google::devtools::resultstore::v2::File* ConfiguredTarget::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ConfiguredTarget.files)
  return files_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >*
ConfiguredTarget::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.ConfiguredTarget.files)
  return &files_;
}
inline const ::google::devtools::resultstore::v2::File& ConfiguredTarget::files(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTarget.files)
  return files_.Get(index);
}
inline ::google::devtools::resultstore::v2::File* ConfiguredTarget::add_files() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.ConfiguredTarget.files)
  return files_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >&
ConfiguredTarget::files() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.ConfiguredTarget.files)
  return files_;
}

// repeated .google.devtools.resultstore.v2.LanguageCoverageSummary coverage_summaries = 9;
inline int ConfiguredTarget::coverage_summaries_size() const {
  return coverage_summaries_.size();
}
inline ::google::devtools::resultstore::v2::LanguageCoverageSummary* ConfiguredTarget::mutable_coverage_summaries(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ConfiguredTarget.coverage_summaries)
  return coverage_summaries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary >*
ConfiguredTarget::mutable_coverage_summaries() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.ConfiguredTarget.coverage_summaries)
  return &coverage_summaries_;
}
inline const ::google::devtools::resultstore::v2::LanguageCoverageSummary& ConfiguredTarget::coverage_summaries(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTarget.coverage_summaries)
  return coverage_summaries_.Get(index);
}
inline ::google::devtools::resultstore::v2::LanguageCoverageSummary* ConfiguredTarget::add_coverage_summaries() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.ConfiguredTarget.coverage_summaries)
  return coverage_summaries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary >&
ConfiguredTarget::coverage_summaries() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.ConfiguredTarget.coverage_summaries)
  return coverage_summaries_;
}

// -------------------------------------------------------------------

// ConfiguredTestAttributes

// int32 total_run_count = 2;
inline void ConfiguredTestAttributes::clear_total_run_count() {
  total_run_count_ = 0;
}
inline ::google::protobuf::int32 ConfiguredTestAttributes::total_run_count() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTestAttributes.total_run_count)
  return total_run_count_;
}
inline void ConfiguredTestAttributes::set_total_run_count(::google::protobuf::int32 value) {
  
  total_run_count_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ConfiguredTestAttributes.total_run_count)
}

// int32 total_shard_count = 3;
inline void ConfiguredTestAttributes::clear_total_shard_count() {
  total_shard_count_ = 0;
}
inline ::google::protobuf::int32 ConfiguredTestAttributes::total_shard_count() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTestAttributes.total_shard_count)
  return total_shard_count_;
}
inline void ConfiguredTestAttributes::set_total_shard_count(::google::protobuf::int32 value) {
  
  total_shard_count_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ConfiguredTestAttributes.total_shard_count)
}

// .google.protobuf.Duration timeout_duration = 5;
inline bool ConfiguredTestAttributes::has_timeout_duration() const {
  return this != internal_default_instance() && timeout_duration_ != NULL;
}
inline const ::google::protobuf::Duration& ConfiguredTestAttributes::_internal_timeout_duration() const {
  return *timeout_duration_;
}
inline const ::google::protobuf::Duration& ConfiguredTestAttributes::timeout_duration() const {
  const ::google::protobuf::Duration* p = timeout_duration_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ConfiguredTestAttributes.timeout_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* ConfiguredTestAttributes::release_timeout_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ConfiguredTestAttributes.timeout_duration)
  
  ::google::protobuf::Duration* temp = timeout_duration_;
  timeout_duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* ConfiguredTestAttributes::mutable_timeout_duration() {
  
  if (timeout_duration_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    timeout_duration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ConfiguredTestAttributes.timeout_duration)
  return timeout_duration_;
}
inline void ConfiguredTestAttributes::set_allocated_timeout_duration(::google::protobuf::Duration* timeout_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_duration_);
  }
  if (timeout_duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(timeout_duration)->GetArena();
    if (message_arena != submessage_arena) {
      timeout_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout_duration, submessage_arena);
    }
    
  } else {
    
  }
  timeout_duration_ = timeout_duration;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ConfiguredTestAttributes.timeout_duration)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2fconfigured_5ftarget_2eproto
