// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/coverage.proto

#include "google/devtools/resultstore/v2/coverage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BranchCoverage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LineCoverage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_FileCoverage;
}  // namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {
class LineCoverageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LineCoverage>
      _instance;
} _LineCoverage_default_instance_;
class BranchCoverageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BranchCoverage>
      _instance;
} _BranchCoverage_default_instance_;
class FileCoverageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileCoverage>
      _instance;
} _FileCoverage_default_instance_;
class ActionCoverageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionCoverage>
      _instance;
} _ActionCoverage_default_instance_;
}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google
namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto {
static void InitDefaultsLineCoverage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::resultstore::v2::_LineCoverage_default_instance_;
    new (ptr) ::google::devtools::resultstore::v2::LineCoverage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::resultstore::v2::LineCoverage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LineCoverage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLineCoverage}, {}};

static void InitDefaultsBranchCoverage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::resultstore::v2::_BranchCoverage_default_instance_;
    new (ptr) ::google::devtools::resultstore::v2::BranchCoverage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::resultstore::v2::BranchCoverage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BranchCoverage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBranchCoverage}, {}};

static void InitDefaultsFileCoverage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::resultstore::v2::_FileCoverage_default_instance_;
    new (ptr) ::google::devtools::resultstore::v2::FileCoverage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::resultstore::v2::FileCoverage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_FileCoverage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFileCoverage}, {
      &protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::scc_info_LineCoverage.base,
      &protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::scc_info_BranchCoverage.base,}};

static void InitDefaultsActionCoverage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::resultstore::v2::_ActionCoverage_default_instance_;
    new (ptr) ::google::devtools::resultstore::v2::ActionCoverage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::resultstore::v2::ActionCoverage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ActionCoverage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsActionCoverage}, {
      &protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::scc_info_FileCoverage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LineCoverage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BranchCoverage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileCoverage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionCoverage.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::LineCoverage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::LineCoverage, instrumented_lines_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::LineCoverage, executed_lines_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::BranchCoverage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::BranchCoverage, branch_present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::BranchCoverage, branches_in_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::BranchCoverage, executed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::BranchCoverage, taken_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::FileCoverage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::FileCoverage, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::FileCoverage, line_coverage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::FileCoverage, branch_coverage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::ActionCoverage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::ActionCoverage, file_coverages_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::devtools::resultstore::v2::LineCoverage)},
  { 7, -1, sizeof(::google::devtools::resultstore::v2::BranchCoverage)},
  { 16, -1, sizeof(::google::devtools::resultstore::v2::FileCoverage)},
  { 24, -1, sizeof(::google::devtools::resultstore::v2::ActionCoverage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::resultstore::v2::_LineCoverage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::resultstore::v2::_BranchCoverage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::resultstore::v2::_FileCoverage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::resultstore::v2::_ActionCoverage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/devtools/resultstore/v2/coverage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n-google/devtools/resultstore/v2/coverag"
      "e.proto\022\036google.devtools.resultstore.v2\""
      "B\n\014LineCoverage\022\032\n\022instrumented_lines\030\001 "
      "\001(\014\022\026\n\016executed_lines\030\002 \001(\014\"c\n\016BranchCov"
      "erage\022\026\n\016branch_present\030\001 \001(\014\022\030\n\020branche"
      "s_in_line\030\002 \003(\005\022\020\n\010executed\030\003 \001(\014\022\r\n\005tak"
      "en\030\004 \001(\014\"\252\001\n\014FileCoverage\022\014\n\004path\030\001 \001(\t\022"
      "C\n\rline_coverage\030\002 \001(\0132,.google.devtools"
      ".resultstore.v2.LineCoverage\022G\n\017branch_c"
      "overage\030\003 \001(\0132..google.devtools.resultst"
      "ore.v2.BranchCoverage\"V\n\016ActionCoverage\022"
      "D\n\016file_coverages\030\002 \003(\0132,.google.devtool"
      "s.resultstore.v2.FileCoverageBq\n\"com.goo"
      "gle.devtools.resultstore.v2P\001ZIgoogle.go"
      "lang.org/genproto/googleapis/devtools/re"
      "sultstore/v2;resultstoreb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 632);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/resultstore/v2/coverage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {

// ===================================================================

void LineCoverage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LineCoverage::kInstrumentedLinesFieldNumber;
const int LineCoverage::kExecutedLinesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LineCoverage::LineCoverage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::scc_info_LineCoverage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.resultstore.v2.LineCoverage)
}
LineCoverage::LineCoverage(const LineCoverage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instrumented_lines_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrumented_lines().size() > 0) {
    instrumented_lines_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrumented_lines_);
  }
  executed_lines_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.executed_lines().size() > 0) {
    executed_lines_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.executed_lines_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.resultstore.v2.LineCoverage)
}

void LineCoverage::SharedCtor() {
  instrumented_lines_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  executed_lines_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LineCoverage::~LineCoverage() {
  // @@protoc_insertion_point(destructor:google.devtools.resultstore.v2.LineCoverage)
  SharedDtor();
}

void LineCoverage::SharedDtor() {
  instrumented_lines_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  executed_lines_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LineCoverage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LineCoverage::descriptor() {
  ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LineCoverage& LineCoverage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::scc_info_LineCoverage.base);
  return *internal_default_instance();
}


void LineCoverage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.resultstore.v2.LineCoverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instrumented_lines_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  executed_lines_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LineCoverage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.resultstore.v2.LineCoverage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes instrumented_lines = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_instrumented_lines()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes executed_lines = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_executed_lines()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.resultstore.v2.LineCoverage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.resultstore.v2.LineCoverage)
  return false;
#undef DO_
}

void LineCoverage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.resultstore.v2.LineCoverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes instrumented_lines = 1;
  if (this->instrumented_lines().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->instrumented_lines(), output);
  }

  // bytes executed_lines = 2;
  if (this->executed_lines().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->executed_lines(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.resultstore.v2.LineCoverage)
}

::google::protobuf::uint8* LineCoverage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.resultstore.v2.LineCoverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes instrumented_lines = 1;
  if (this->instrumented_lines().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->instrumented_lines(), target);
  }

  // bytes executed_lines = 2;
  if (this->executed_lines().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->executed_lines(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.resultstore.v2.LineCoverage)
  return target;
}

size_t LineCoverage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.resultstore.v2.LineCoverage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes instrumented_lines = 1;
  if (this->instrumented_lines().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->instrumented_lines());
  }

  // bytes executed_lines = 2;
  if (this->executed_lines().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->executed_lines());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LineCoverage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.resultstore.v2.LineCoverage)
  GOOGLE_DCHECK_NE(&from, this);
  const LineCoverage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LineCoverage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.resultstore.v2.LineCoverage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.resultstore.v2.LineCoverage)
    MergeFrom(*source);
  }
}

void LineCoverage::MergeFrom(const LineCoverage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.resultstore.v2.LineCoverage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instrumented_lines().size() > 0) {

    instrumented_lines_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrumented_lines_);
  }
  if (from.executed_lines().size() > 0) {

    executed_lines_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.executed_lines_);
  }
}

void LineCoverage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.resultstore.v2.LineCoverage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LineCoverage::CopyFrom(const LineCoverage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.resultstore.v2.LineCoverage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LineCoverage::IsInitialized() const {
  return true;
}

void LineCoverage::Swap(LineCoverage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LineCoverage::InternalSwap(LineCoverage* other) {
  using std::swap;
  instrumented_lines_.Swap(&other->instrumented_lines_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  executed_lines_.Swap(&other->executed_lines_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LineCoverage::GetMetadata() const {
  protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BranchCoverage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BranchCoverage::kBranchPresentFieldNumber;
const int BranchCoverage::kBranchesInLineFieldNumber;
const int BranchCoverage::kExecutedFieldNumber;
const int BranchCoverage::kTakenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BranchCoverage::BranchCoverage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::scc_info_BranchCoverage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.resultstore.v2.BranchCoverage)
}
BranchCoverage::BranchCoverage(const BranchCoverage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      branches_in_line_(from.branches_in_line_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  branch_present_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.branch_present().size() > 0) {
    branch_present_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_present_);
  }
  executed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.executed().size() > 0) {
    executed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.executed_);
  }
  taken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taken().size() > 0) {
    taken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taken_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.resultstore.v2.BranchCoverage)
}

void BranchCoverage::SharedCtor() {
  branch_present_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  executed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BranchCoverage::~BranchCoverage() {
  // @@protoc_insertion_point(destructor:google.devtools.resultstore.v2.BranchCoverage)
  SharedDtor();
}

void BranchCoverage::SharedDtor() {
  branch_present_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  executed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BranchCoverage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BranchCoverage::descriptor() {
  ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BranchCoverage& BranchCoverage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::scc_info_BranchCoverage.base);
  return *internal_default_instance();
}


void BranchCoverage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.resultstore.v2.BranchCoverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  branches_in_line_.Clear();
  branch_present_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  executed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BranchCoverage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.resultstore.v2.BranchCoverage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes branch_present = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_branch_present()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 branches_in_line = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_branches_in_line())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_branches_in_line())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes executed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_executed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes taken = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_taken()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.resultstore.v2.BranchCoverage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.resultstore.v2.BranchCoverage)
  return false;
#undef DO_
}

void BranchCoverage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.resultstore.v2.BranchCoverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes branch_present = 1;
  if (this->branch_present().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->branch_present(), output);
  }

  // repeated int32 branches_in_line = 2;
  if (this->branches_in_line_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _branches_in_line_cached_byte_size_));
  }
  for (int i = 0, n = this->branches_in_line_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->branches_in_line(i), output);
  }

  // bytes executed = 3;
  if (this->executed().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->executed(), output);
  }

  // bytes taken = 4;
  if (this->taken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->taken(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.resultstore.v2.BranchCoverage)
}

::google::protobuf::uint8* BranchCoverage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.resultstore.v2.BranchCoverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes branch_present = 1;
  if (this->branch_present().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->branch_present(), target);
  }

  // repeated int32 branches_in_line = 2;
  if (this->branches_in_line_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _branches_in_line_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->branches_in_line_, target);
  }

  // bytes executed = 3;
  if (this->executed().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->executed(), target);
  }

  // bytes taken = 4;
  if (this->taken().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->taken(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.resultstore.v2.BranchCoverage)
  return target;
}

size_t BranchCoverage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.resultstore.v2.BranchCoverage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 branches_in_line = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->branches_in_line_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _branches_in_line_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes branch_present = 1;
  if (this->branch_present().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->branch_present());
  }

  // bytes executed = 3;
  if (this->executed().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->executed());
  }

  // bytes taken = 4;
  if (this->taken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->taken());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BranchCoverage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.resultstore.v2.BranchCoverage)
  GOOGLE_DCHECK_NE(&from, this);
  const BranchCoverage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BranchCoverage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.resultstore.v2.BranchCoverage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.resultstore.v2.BranchCoverage)
    MergeFrom(*source);
  }
}

void BranchCoverage::MergeFrom(const BranchCoverage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.resultstore.v2.BranchCoverage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  branches_in_line_.MergeFrom(from.branches_in_line_);
  if (from.branch_present().size() > 0) {

    branch_present_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_present_);
  }
  if (from.executed().size() > 0) {

    executed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.executed_);
  }
  if (from.taken().size() > 0) {

    taken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taken_);
  }
}

void BranchCoverage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.resultstore.v2.BranchCoverage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BranchCoverage::CopyFrom(const BranchCoverage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.resultstore.v2.BranchCoverage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BranchCoverage::IsInitialized() const {
  return true;
}

void BranchCoverage::Swap(BranchCoverage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BranchCoverage::InternalSwap(BranchCoverage* other) {
  using std::swap;
  branches_in_line_.InternalSwap(&other->branches_in_line_);
  branch_present_.Swap(&other->branch_present_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  executed_.Swap(&other->executed_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  taken_.Swap(&other->taken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BranchCoverage::GetMetadata() const {
  protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileCoverage::InitAsDefaultInstance() {
  ::google::devtools::resultstore::v2::_FileCoverage_default_instance_._instance.get_mutable()->line_coverage_ = const_cast< ::google::devtools::resultstore::v2::LineCoverage*>(
      ::google::devtools::resultstore::v2::LineCoverage::internal_default_instance());
  ::google::devtools::resultstore::v2::_FileCoverage_default_instance_._instance.get_mutable()->branch_coverage_ = const_cast< ::google::devtools::resultstore::v2::BranchCoverage*>(
      ::google::devtools::resultstore::v2::BranchCoverage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileCoverage::kPathFieldNumber;
const int FileCoverage::kLineCoverageFieldNumber;
const int FileCoverage::kBranchCoverageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileCoverage::FileCoverage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::scc_info_FileCoverage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.resultstore.v2.FileCoverage)
}
FileCoverage::FileCoverage(const FileCoverage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_line_coverage()) {
    line_coverage_ = new ::google::devtools::resultstore::v2::LineCoverage(*from.line_coverage_);
  } else {
    line_coverage_ = NULL;
  }
  if (from.has_branch_coverage()) {
    branch_coverage_ = new ::google::devtools::resultstore::v2::BranchCoverage(*from.branch_coverage_);
  } else {
    branch_coverage_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.resultstore.v2.FileCoverage)
}

void FileCoverage::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&line_coverage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&branch_coverage_) -
      reinterpret_cast<char*>(&line_coverage_)) + sizeof(branch_coverage_));
}

FileCoverage::~FileCoverage() {
  // @@protoc_insertion_point(destructor:google.devtools.resultstore.v2.FileCoverage)
  SharedDtor();
}

void FileCoverage::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete line_coverage_;
  if (this != internal_default_instance()) delete branch_coverage_;
}

void FileCoverage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileCoverage::descriptor() {
  ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileCoverage& FileCoverage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::scc_info_FileCoverage.base);
  return *internal_default_instance();
}


void FileCoverage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.resultstore.v2.FileCoverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && line_coverage_ != NULL) {
    delete line_coverage_;
  }
  line_coverage_ = NULL;
  if (GetArenaNoVirtual() == NULL && branch_coverage_ != NULL) {
    delete branch_coverage_;
  }
  branch_coverage_ = NULL;
  _internal_metadata_.Clear();
}

bool FileCoverage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.resultstore.v2.FileCoverage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.resultstore.v2.FileCoverage.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.resultstore.v2.LineCoverage line_coverage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_line_coverage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_branch_coverage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.resultstore.v2.FileCoverage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.resultstore.v2.FileCoverage)
  return false;
#undef DO_
}

void FileCoverage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.resultstore.v2.FileCoverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.resultstore.v2.FileCoverage.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // .google.devtools.resultstore.v2.LineCoverage line_coverage = 2;
  if (this->has_line_coverage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_line_coverage(), output);
  }

  // .google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;
  if (this->has_branch_coverage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_branch_coverage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.resultstore.v2.FileCoverage)
}

::google::protobuf::uint8* FileCoverage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.resultstore.v2.FileCoverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.resultstore.v2.FileCoverage.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // .google.devtools.resultstore.v2.LineCoverage line_coverage = 2;
  if (this->has_line_coverage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_line_coverage(), deterministic, target);
  }

  // .google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;
  if (this->has_branch_coverage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_branch_coverage(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.resultstore.v2.FileCoverage)
  return target;
}

size_t FileCoverage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.resultstore.v2.FileCoverage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // .google.devtools.resultstore.v2.LineCoverage line_coverage = 2;
  if (this->has_line_coverage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *line_coverage_);
  }

  // .google.devtools.resultstore.v2.BranchCoverage branch_coverage = 3;
  if (this->has_branch_coverage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *branch_coverage_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileCoverage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.resultstore.v2.FileCoverage)
  GOOGLE_DCHECK_NE(&from, this);
  const FileCoverage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileCoverage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.resultstore.v2.FileCoverage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.resultstore.v2.FileCoverage)
    MergeFrom(*source);
  }
}

void FileCoverage::MergeFrom(const FileCoverage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.resultstore.v2.FileCoverage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_line_coverage()) {
    mutable_line_coverage()->::google::devtools::resultstore::v2::LineCoverage::MergeFrom(from.line_coverage());
  }
  if (from.has_branch_coverage()) {
    mutable_branch_coverage()->::google::devtools::resultstore::v2::BranchCoverage::MergeFrom(from.branch_coverage());
  }
}

void FileCoverage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.resultstore.v2.FileCoverage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileCoverage::CopyFrom(const FileCoverage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.resultstore.v2.FileCoverage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileCoverage::IsInitialized() const {
  return true;
}

void FileCoverage::Swap(FileCoverage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileCoverage::InternalSwap(FileCoverage* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(line_coverage_, other->line_coverage_);
  swap(branch_coverage_, other->branch_coverage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileCoverage::GetMetadata() const {
  protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionCoverage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionCoverage::kFileCoveragesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionCoverage::ActionCoverage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::scc_info_ActionCoverage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.resultstore.v2.ActionCoverage)
}
ActionCoverage::ActionCoverage(const ActionCoverage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      file_coverages_(from.file_coverages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.devtools.resultstore.v2.ActionCoverage)
}

void ActionCoverage::SharedCtor() {
}

ActionCoverage::~ActionCoverage() {
  // @@protoc_insertion_point(destructor:google.devtools.resultstore.v2.ActionCoverage)
  SharedDtor();
}

void ActionCoverage::SharedDtor() {
}

void ActionCoverage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionCoverage::descriptor() {
  ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionCoverage& ActionCoverage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::scc_info_ActionCoverage.base);
  return *internal_default_instance();
}


void ActionCoverage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.resultstore.v2.ActionCoverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_coverages_.Clear();
  _internal_metadata_.Clear();
}

bool ActionCoverage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.resultstore.v2.ActionCoverage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.resultstore.v2.FileCoverage file_coverages = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_file_coverages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.resultstore.v2.ActionCoverage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.resultstore.v2.ActionCoverage)
  return false;
#undef DO_
}

void ActionCoverage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.resultstore.v2.ActionCoverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.resultstore.v2.FileCoverage file_coverages = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->file_coverages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->file_coverages(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.resultstore.v2.ActionCoverage)
}

::google::protobuf::uint8* ActionCoverage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.resultstore.v2.ActionCoverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.resultstore.v2.FileCoverage file_coverages = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->file_coverages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->file_coverages(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.resultstore.v2.ActionCoverage)
  return target;
}

size_t ActionCoverage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.resultstore.v2.ActionCoverage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.devtools.resultstore.v2.FileCoverage file_coverages = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->file_coverages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->file_coverages(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionCoverage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.resultstore.v2.ActionCoverage)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionCoverage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionCoverage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.resultstore.v2.ActionCoverage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.resultstore.v2.ActionCoverage)
    MergeFrom(*source);
  }
}

void ActionCoverage::MergeFrom(const ActionCoverage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.resultstore.v2.ActionCoverage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_coverages_.MergeFrom(from.file_coverages_);
}

void ActionCoverage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.resultstore.v2.ActionCoverage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionCoverage::CopyFrom(const ActionCoverage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.resultstore.v2.ActionCoverage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionCoverage::IsInitialized() const {
  return true;
}

void ActionCoverage::Swap(ActionCoverage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionCoverage::InternalSwap(ActionCoverage* other) {
  using std::swap;
  CastToBase(&file_coverages_)->InternalSwap(CastToBase(&other->file_coverages_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionCoverage::GetMetadata() const {
  protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::resultstore::v2::LineCoverage* Arena::CreateMaybeMessage< ::google::devtools::resultstore::v2::LineCoverage >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::resultstore::v2::LineCoverage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::resultstore::v2::BranchCoverage* Arena::CreateMaybeMessage< ::google::devtools::resultstore::v2::BranchCoverage >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::resultstore::v2::BranchCoverage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::resultstore::v2::FileCoverage* Arena::CreateMaybeMessage< ::google::devtools::resultstore::v2::FileCoverage >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::resultstore::v2::FileCoverage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::resultstore::v2::ActionCoverage* Arena::CreateMaybeMessage< ::google::devtools::resultstore::v2::ActionCoverage >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::resultstore::v2::ActionCoverage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
