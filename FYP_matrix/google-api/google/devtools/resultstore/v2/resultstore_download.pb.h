// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/resultstore_download.proto

#ifndef PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto
#define PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/devtools/resultstore/v2/action.pb.h"
#include "google/devtools/resultstore/v2/common.pb.h"
#include "google/devtools/resultstore/v2/configuration.pb.h"
#include "google/devtools/resultstore/v2/configured_target.pb.h"
#include "google/devtools/resultstore/v2/file_set.pb.h"
#include "google/devtools/resultstore/v2/invocation.pb.h"
#include "google/devtools/resultstore/v2/target.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto 

namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[18];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {
class GetActionRequest;
class GetActionRequestDefaultTypeInternal;
extern GetActionRequestDefaultTypeInternal _GetActionRequest_default_instance_;
class GetConfigurationRequest;
class GetConfigurationRequestDefaultTypeInternal;
extern GetConfigurationRequestDefaultTypeInternal _GetConfigurationRequest_default_instance_;
class GetConfiguredTargetRequest;
class GetConfiguredTargetRequestDefaultTypeInternal;
extern GetConfiguredTargetRequestDefaultTypeInternal _GetConfiguredTargetRequest_default_instance_;
class GetFileSetRequest;
class GetFileSetRequestDefaultTypeInternal;
extern GetFileSetRequestDefaultTypeInternal _GetFileSetRequest_default_instance_;
class GetInvocationRequest;
class GetInvocationRequestDefaultTypeInternal;
extern GetInvocationRequestDefaultTypeInternal _GetInvocationRequest_default_instance_;
class GetTargetRequest;
class GetTargetRequestDefaultTypeInternal;
extern GetTargetRequestDefaultTypeInternal _GetTargetRequest_default_instance_;
class ListActionsRequest;
class ListActionsRequestDefaultTypeInternal;
extern ListActionsRequestDefaultTypeInternal _ListActionsRequest_default_instance_;
class ListActionsResponse;
class ListActionsResponseDefaultTypeInternal;
extern ListActionsResponseDefaultTypeInternal _ListActionsResponse_default_instance_;
class ListConfigurationsRequest;
class ListConfigurationsRequestDefaultTypeInternal;
extern ListConfigurationsRequestDefaultTypeInternal _ListConfigurationsRequest_default_instance_;
class ListConfigurationsResponse;
class ListConfigurationsResponseDefaultTypeInternal;
extern ListConfigurationsResponseDefaultTypeInternal _ListConfigurationsResponse_default_instance_;
class ListConfiguredTargetsRequest;
class ListConfiguredTargetsRequestDefaultTypeInternal;
extern ListConfiguredTargetsRequestDefaultTypeInternal _ListConfiguredTargetsRequest_default_instance_;
class ListConfiguredTargetsResponse;
class ListConfiguredTargetsResponseDefaultTypeInternal;
extern ListConfiguredTargetsResponseDefaultTypeInternal _ListConfiguredTargetsResponse_default_instance_;
class ListFileSetsRequest;
class ListFileSetsRequestDefaultTypeInternal;
extern ListFileSetsRequestDefaultTypeInternal _ListFileSetsRequest_default_instance_;
class ListFileSetsResponse;
class ListFileSetsResponseDefaultTypeInternal;
extern ListFileSetsResponseDefaultTypeInternal _ListFileSetsResponse_default_instance_;
class ListTargetsRequest;
class ListTargetsRequestDefaultTypeInternal;
extern ListTargetsRequestDefaultTypeInternal _ListTargetsRequest_default_instance_;
class ListTargetsResponse;
class ListTargetsResponseDefaultTypeInternal;
extern ListTargetsResponseDefaultTypeInternal _ListTargetsResponse_default_instance_;
class SearchInvocationsRequest;
class SearchInvocationsRequestDefaultTypeInternal;
extern SearchInvocationsRequestDefaultTypeInternal _SearchInvocationsRequest_default_instance_;
class SearchInvocationsResponse;
class SearchInvocationsResponseDefaultTypeInternal;
extern SearchInvocationsResponseDefaultTypeInternal _SearchInvocationsResponse_default_instance_;
}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::devtools::resultstore::v2::GetActionRequest* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::GetActionRequest>(Arena*);
template<> ::google::devtools::resultstore::v2::GetConfigurationRequest* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::GetConfigurationRequest>(Arena*);
template<> ::google::devtools::resultstore::v2::GetConfiguredTargetRequest* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::GetConfiguredTargetRequest>(Arena*);
template<> ::google::devtools::resultstore::v2::GetFileSetRequest* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::GetFileSetRequest>(Arena*);
template<> ::google::devtools::resultstore::v2::GetInvocationRequest* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::GetInvocationRequest>(Arena*);
template<> ::google::devtools::resultstore::v2::GetTargetRequest* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::GetTargetRequest>(Arena*);
template<> ::google::devtools::resultstore::v2::ListActionsRequest* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ListActionsRequest>(Arena*);
template<> ::google::devtools::resultstore::v2::ListActionsResponse* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ListActionsResponse>(Arena*);
template<> ::google::devtools::resultstore::v2::ListConfigurationsRequest* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ListConfigurationsRequest>(Arena*);
template<> ::google::devtools::resultstore::v2::ListConfigurationsResponse* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ListConfigurationsResponse>(Arena*);
template<> ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ListConfiguredTargetsRequest>(Arena*);
template<> ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>(Arena*);
template<> ::google::devtools::resultstore::v2::ListFileSetsRequest* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ListFileSetsRequest>(Arena*);
template<> ::google::devtools::resultstore::v2::ListFileSetsResponse* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ListFileSetsResponse>(Arena*);
template<> ::google::devtools::resultstore::v2::ListTargetsRequest* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ListTargetsRequest>(Arena*);
template<> ::google::devtools::resultstore::v2::ListTargetsResponse* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ListTargetsResponse>(Arena*);
template<> ::google::devtools::resultstore::v2::SearchInvocationsRequest* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::SearchInvocationsRequest>(Arena*);
template<> ::google::devtools::resultstore::v2::SearchInvocationsResponse* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::SearchInvocationsResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {

// ===================================================================

class GetInvocationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.GetInvocationRequest) */ {
 public:
  GetInvocationRequest();
  virtual ~GetInvocationRequest();

  GetInvocationRequest(const GetInvocationRequest& from);

  inline GetInvocationRequest& operator=(const GetInvocationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetInvocationRequest(GetInvocationRequest&& from) noexcept
    : GetInvocationRequest() {
    *this = ::std::move(from);
  }

  inline GetInvocationRequest& operator=(GetInvocationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInvocationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetInvocationRequest* internal_default_instance() {
    return reinterpret_cast<const GetInvocationRequest*>(
               &_GetInvocationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GetInvocationRequest* other);
  friend void swap(GetInvocationRequest& a, GetInvocationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetInvocationRequest* New() const final {
    return CreateMaybeMessage<GetInvocationRequest>(NULL);
  }

  GetInvocationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetInvocationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetInvocationRequest& from);
  void MergeFrom(const GetInvocationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetInvocationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.GetInvocationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchInvocationsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.SearchInvocationsRequest) */ {
 public:
  SearchInvocationsRequest();
  virtual ~SearchInvocationsRequest();

  SearchInvocationsRequest(const SearchInvocationsRequest& from);

  inline SearchInvocationsRequest& operator=(const SearchInvocationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchInvocationsRequest(SearchInvocationsRequest&& from) noexcept
    : SearchInvocationsRequest() {
    *this = ::std::move(from);
  }

  inline SearchInvocationsRequest& operator=(SearchInvocationsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchInvocationsRequest& default_instance();

  enum PageStartCase {
    kPageToken = 2,
    kOffset = 3,
    PAGE_START_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchInvocationsRequest* internal_default_instance() {
    return reinterpret_cast<const SearchInvocationsRequest*>(
               &_SearchInvocationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SearchInvocationsRequest* other);
  friend void swap(SearchInvocationsRequest& a, SearchInvocationsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchInvocationsRequest* New() const final {
    return CreateMaybeMessage<SearchInvocationsRequest>(NULL);
  }

  SearchInvocationsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SearchInvocationsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SearchInvocationsRequest& from);
  void MergeFrom(const SearchInvocationsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SearchInvocationsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string query = 4;
  void clear_query();
  static const int kQueryFieldNumber = 4;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // string project_id = 5;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 5;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // int32 page_size = 1;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 1;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // string page_token = 2;
  private:
  bool has_page_token() const;
  public:
  void clear_page_token();
  static const int kPageTokenFieldNumber = 2;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int64 offset = 3;
  private:
  bool has_offset() const;
  public:
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  void clear_page_start();
  PageStartCase page_start_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.SearchInvocationsRequest)
 private:
  void set_has_page_token();
  void set_has_offset();

  inline bool has_page_start() const;
  inline void clear_has_page_start();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::int32 page_size_;
  union PageStartUnion {
    PageStartUnion() {}
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    ::google::protobuf::int64 offset_;
  } page_start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchInvocationsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.SearchInvocationsResponse) */ {
 public:
  SearchInvocationsResponse();
  virtual ~SearchInvocationsResponse();

  SearchInvocationsResponse(const SearchInvocationsResponse& from);

  inline SearchInvocationsResponse& operator=(const SearchInvocationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchInvocationsResponse(SearchInvocationsResponse&& from) noexcept
    : SearchInvocationsResponse() {
    *this = ::std::move(from);
  }

  inline SearchInvocationsResponse& operator=(SearchInvocationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchInvocationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchInvocationsResponse* internal_default_instance() {
    return reinterpret_cast<const SearchInvocationsResponse*>(
               &_SearchInvocationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SearchInvocationsResponse* other);
  friend void swap(SearchInvocationsResponse& a, SearchInvocationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchInvocationsResponse* New() const final {
    return CreateMaybeMessage<SearchInvocationsResponse>(NULL);
  }

  SearchInvocationsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SearchInvocationsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SearchInvocationsResponse& from);
  void MergeFrom(const SearchInvocationsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SearchInvocationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.Invocation invocations = 1;
  int invocations_size() const;
  void clear_invocations();
  static const int kInvocationsFieldNumber = 1;
  ::google::devtools::resultstore::v2::Invocation* mutable_invocations(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Invocation >*
      mutable_invocations();
  const ::google::devtools::resultstore::v2::Invocation& invocations(int index) const;
  ::google::devtools::resultstore::v2::Invocation* add_invocations();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Invocation >&
      invocations() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.SearchInvocationsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Invocation > invocations_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetConfigurationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.GetConfigurationRequest) */ {
 public:
  GetConfigurationRequest();
  virtual ~GetConfigurationRequest();

  GetConfigurationRequest(const GetConfigurationRequest& from);

  inline GetConfigurationRequest& operator=(const GetConfigurationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetConfigurationRequest(GetConfigurationRequest&& from) noexcept
    : GetConfigurationRequest() {
    *this = ::std::move(from);
  }

  inline GetConfigurationRequest& operator=(GetConfigurationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetConfigurationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetConfigurationRequest* internal_default_instance() {
    return reinterpret_cast<const GetConfigurationRequest*>(
               &_GetConfigurationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GetConfigurationRequest* other);
  friend void swap(GetConfigurationRequest& a, GetConfigurationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetConfigurationRequest* New() const final {
    return CreateMaybeMessage<GetConfigurationRequest>(NULL);
  }

  GetConfigurationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetConfigurationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetConfigurationRequest& from);
  void MergeFrom(const GetConfigurationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetConfigurationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.GetConfigurationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListConfigurationsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ListConfigurationsRequest) */ {
 public:
  ListConfigurationsRequest();
  virtual ~ListConfigurationsRequest();

  ListConfigurationsRequest(const ListConfigurationsRequest& from);

  inline ListConfigurationsRequest& operator=(const ListConfigurationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListConfigurationsRequest(ListConfigurationsRequest&& from) noexcept
    : ListConfigurationsRequest() {
    *this = ::std::move(from);
  }

  inline ListConfigurationsRequest& operator=(ListConfigurationsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListConfigurationsRequest& default_instance();

  enum PageStartCase {
    kPageToken = 3,
    kOffset = 4,
    PAGE_START_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListConfigurationsRequest* internal_default_instance() {
    return reinterpret_cast<const ListConfigurationsRequest*>(
               &_ListConfigurationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ListConfigurationsRequest* other);
  friend void swap(ListConfigurationsRequest& a, ListConfigurationsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListConfigurationsRequest* New() const final {
    return CreateMaybeMessage<ListConfigurationsRequest>(NULL);
  }

  ListConfigurationsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListConfigurationsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListConfigurationsRequest& from);
  void MergeFrom(const ListConfigurationsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListConfigurationsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // string page_token = 3;
  private:
  bool has_page_token() const;
  public:
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int64 offset = 4;
  private:
  bool has_offset() const;
  public:
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  void clear_page_start();
  PageStartCase page_start_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ListConfigurationsRequest)
 private:
  void set_has_page_token();
  void set_has_offset();

  inline bool has_page_start() const;
  inline void clear_has_page_start();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::int32 page_size_;
  union PageStartUnion {
    PageStartUnion() {}
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    ::google::protobuf::int64 offset_;
  } page_start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListConfigurationsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ListConfigurationsResponse) */ {
 public:
  ListConfigurationsResponse();
  virtual ~ListConfigurationsResponse();

  ListConfigurationsResponse(const ListConfigurationsResponse& from);

  inline ListConfigurationsResponse& operator=(const ListConfigurationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListConfigurationsResponse(ListConfigurationsResponse&& from) noexcept
    : ListConfigurationsResponse() {
    *this = ::std::move(from);
  }

  inline ListConfigurationsResponse& operator=(ListConfigurationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListConfigurationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListConfigurationsResponse* internal_default_instance() {
    return reinterpret_cast<const ListConfigurationsResponse*>(
               &_ListConfigurationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ListConfigurationsResponse* other);
  friend void swap(ListConfigurationsResponse& a, ListConfigurationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListConfigurationsResponse* New() const final {
    return CreateMaybeMessage<ListConfigurationsResponse>(NULL);
  }

  ListConfigurationsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListConfigurationsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListConfigurationsResponse& from);
  void MergeFrom(const ListConfigurationsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListConfigurationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.Configuration configurations = 1;
  int configurations_size() const;
  void clear_configurations();
  static const int kConfigurationsFieldNumber = 1;
  ::google::devtools::resultstore::v2::Configuration* mutable_configurations(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Configuration >*
      mutable_configurations();
  const ::google::devtools::resultstore::v2::Configuration& configurations(int index) const;
  ::google::devtools::resultstore::v2::Configuration* add_configurations();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Configuration >&
      configurations() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ListConfigurationsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Configuration > configurations_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetTargetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.GetTargetRequest) */ {
 public:
  GetTargetRequest();
  virtual ~GetTargetRequest();

  GetTargetRequest(const GetTargetRequest& from);

  inline GetTargetRequest& operator=(const GetTargetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTargetRequest(GetTargetRequest&& from) noexcept
    : GetTargetRequest() {
    *this = ::std::move(from);
  }

  inline GetTargetRequest& operator=(GetTargetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTargetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTargetRequest* internal_default_instance() {
    return reinterpret_cast<const GetTargetRequest*>(
               &_GetTargetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(GetTargetRequest* other);
  friend void swap(GetTargetRequest& a, GetTargetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTargetRequest* New() const final {
    return CreateMaybeMessage<GetTargetRequest>(NULL);
  }

  GetTargetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetTargetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetTargetRequest& from);
  void MergeFrom(const GetTargetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTargetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.GetTargetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListTargetsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ListTargetsRequest) */ {
 public:
  ListTargetsRequest();
  virtual ~ListTargetsRequest();

  ListTargetsRequest(const ListTargetsRequest& from);

  inline ListTargetsRequest& operator=(const ListTargetsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListTargetsRequest(ListTargetsRequest&& from) noexcept
    : ListTargetsRequest() {
    *this = ::std::move(from);
  }

  inline ListTargetsRequest& operator=(ListTargetsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTargetsRequest& default_instance();

  enum PageStartCase {
    kPageToken = 3,
    kOffset = 4,
    PAGE_START_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListTargetsRequest* internal_default_instance() {
    return reinterpret_cast<const ListTargetsRequest*>(
               &_ListTargetsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ListTargetsRequest* other);
  friend void swap(ListTargetsRequest& a, ListTargetsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListTargetsRequest* New() const final {
    return CreateMaybeMessage<ListTargetsRequest>(NULL);
  }

  ListTargetsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListTargetsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListTargetsRequest& from);
  void MergeFrom(const ListTargetsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListTargetsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // string page_token = 3;
  private:
  bool has_page_token() const;
  public:
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int64 offset = 4;
  private:
  bool has_offset() const;
  public:
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  void clear_page_start();
  PageStartCase page_start_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ListTargetsRequest)
 private:
  void set_has_page_token();
  void set_has_offset();

  inline bool has_page_start() const;
  inline void clear_has_page_start();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::int32 page_size_;
  union PageStartUnion {
    PageStartUnion() {}
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    ::google::protobuf::int64 offset_;
  } page_start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListTargetsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ListTargetsResponse) */ {
 public:
  ListTargetsResponse();
  virtual ~ListTargetsResponse();

  ListTargetsResponse(const ListTargetsResponse& from);

  inline ListTargetsResponse& operator=(const ListTargetsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListTargetsResponse(ListTargetsResponse&& from) noexcept
    : ListTargetsResponse() {
    *this = ::std::move(from);
  }

  inline ListTargetsResponse& operator=(ListTargetsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTargetsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListTargetsResponse* internal_default_instance() {
    return reinterpret_cast<const ListTargetsResponse*>(
               &_ListTargetsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ListTargetsResponse* other);
  friend void swap(ListTargetsResponse& a, ListTargetsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListTargetsResponse* New() const final {
    return CreateMaybeMessage<ListTargetsResponse>(NULL);
  }

  ListTargetsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListTargetsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListTargetsResponse& from);
  void MergeFrom(const ListTargetsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListTargetsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.Target targets = 1;
  int targets_size() const;
  void clear_targets();
  static const int kTargetsFieldNumber = 1;
  ::google::devtools::resultstore::v2::Target* mutable_targets(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Target >*
      mutable_targets();
  const ::google::devtools::resultstore::v2::Target& targets(int index) const;
  ::google::devtools::resultstore::v2::Target* add_targets();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Target >&
      targets() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ListTargetsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Target > targets_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetConfiguredTargetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.GetConfiguredTargetRequest) */ {
 public:
  GetConfiguredTargetRequest();
  virtual ~GetConfiguredTargetRequest();

  GetConfiguredTargetRequest(const GetConfiguredTargetRequest& from);

  inline GetConfiguredTargetRequest& operator=(const GetConfiguredTargetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetConfiguredTargetRequest(GetConfiguredTargetRequest&& from) noexcept
    : GetConfiguredTargetRequest() {
    *this = ::std::move(from);
  }

  inline GetConfiguredTargetRequest& operator=(GetConfiguredTargetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetConfiguredTargetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetConfiguredTargetRequest* internal_default_instance() {
    return reinterpret_cast<const GetConfiguredTargetRequest*>(
               &_GetConfiguredTargetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(GetConfiguredTargetRequest* other);
  friend void swap(GetConfiguredTargetRequest& a, GetConfiguredTargetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetConfiguredTargetRequest* New() const final {
    return CreateMaybeMessage<GetConfiguredTargetRequest>(NULL);
  }

  GetConfiguredTargetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetConfiguredTargetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetConfiguredTargetRequest& from);
  void MergeFrom(const GetConfiguredTargetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetConfiguredTargetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.GetConfiguredTargetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListConfiguredTargetsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ListConfiguredTargetsRequest) */ {
 public:
  ListConfiguredTargetsRequest();
  virtual ~ListConfiguredTargetsRequest();

  ListConfiguredTargetsRequest(const ListConfiguredTargetsRequest& from);

  inline ListConfiguredTargetsRequest& operator=(const ListConfiguredTargetsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListConfiguredTargetsRequest(ListConfiguredTargetsRequest&& from) noexcept
    : ListConfiguredTargetsRequest() {
    *this = ::std::move(from);
  }

  inline ListConfiguredTargetsRequest& operator=(ListConfiguredTargetsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListConfiguredTargetsRequest& default_instance();

  enum PageStartCase {
    kPageToken = 3,
    kOffset = 4,
    PAGE_START_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListConfiguredTargetsRequest* internal_default_instance() {
    return reinterpret_cast<const ListConfiguredTargetsRequest*>(
               &_ListConfiguredTargetsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ListConfiguredTargetsRequest* other);
  friend void swap(ListConfiguredTargetsRequest& a, ListConfiguredTargetsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListConfiguredTargetsRequest* New() const final {
    return CreateMaybeMessage<ListConfiguredTargetsRequest>(NULL);
  }

  ListConfiguredTargetsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListConfiguredTargetsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListConfiguredTargetsRequest& from);
  void MergeFrom(const ListConfiguredTargetsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListConfiguredTargetsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // string page_token = 3;
  private:
  bool has_page_token() const;
  public:
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int64 offset = 4;
  private:
  bool has_offset() const;
  public:
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  void clear_page_start();
  PageStartCase page_start_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ListConfiguredTargetsRequest)
 private:
  void set_has_page_token();
  void set_has_offset();

  inline bool has_page_start() const;
  inline void clear_has_page_start();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::int32 page_size_;
  union PageStartUnion {
    PageStartUnion() {}
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    ::google::protobuf::int64 offset_;
  } page_start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListConfiguredTargetsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ListConfiguredTargetsResponse) */ {
 public:
  ListConfiguredTargetsResponse();
  virtual ~ListConfiguredTargetsResponse();

  ListConfiguredTargetsResponse(const ListConfiguredTargetsResponse& from);

  inline ListConfiguredTargetsResponse& operator=(const ListConfiguredTargetsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListConfiguredTargetsResponse(ListConfiguredTargetsResponse&& from) noexcept
    : ListConfiguredTargetsResponse() {
    *this = ::std::move(from);
  }

  inline ListConfiguredTargetsResponse& operator=(ListConfiguredTargetsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListConfiguredTargetsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListConfiguredTargetsResponse* internal_default_instance() {
    return reinterpret_cast<const ListConfiguredTargetsResponse*>(
               &_ListConfiguredTargetsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ListConfiguredTargetsResponse* other);
  friend void swap(ListConfiguredTargetsResponse& a, ListConfiguredTargetsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListConfiguredTargetsResponse* New() const final {
    return CreateMaybeMessage<ListConfiguredTargetsResponse>(NULL);
  }

  ListConfiguredTargetsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListConfiguredTargetsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListConfiguredTargetsResponse& from);
  void MergeFrom(const ListConfiguredTargetsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListConfiguredTargetsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.ConfiguredTarget configured_targets = 1;
  int configured_targets_size() const;
  void clear_configured_targets();
  static const int kConfiguredTargetsFieldNumber = 1;
  ::google::devtools::resultstore::v2::ConfiguredTarget* mutable_configured_targets(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::ConfiguredTarget >*
      mutable_configured_targets();
  const ::google::devtools::resultstore::v2::ConfiguredTarget& configured_targets(int index) const;
  ::google::devtools::resultstore::v2::ConfiguredTarget* add_configured_targets();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::ConfiguredTarget >&
      configured_targets() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ListConfiguredTargetsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::ConfiguredTarget > configured_targets_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetActionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.GetActionRequest) */ {
 public:
  GetActionRequest();
  virtual ~GetActionRequest();

  GetActionRequest(const GetActionRequest& from);

  inline GetActionRequest& operator=(const GetActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetActionRequest(GetActionRequest&& from) noexcept
    : GetActionRequest() {
    *this = ::std::move(from);
  }

  inline GetActionRequest& operator=(GetActionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetActionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetActionRequest* internal_default_instance() {
    return reinterpret_cast<const GetActionRequest*>(
               &_GetActionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(GetActionRequest* other);
  friend void swap(GetActionRequest& a, GetActionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetActionRequest* New() const final {
    return CreateMaybeMessage<GetActionRequest>(NULL);
  }

  GetActionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetActionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetActionRequest& from);
  void MergeFrom(const GetActionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetActionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.GetActionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListActionsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ListActionsRequest) */ {
 public:
  ListActionsRequest();
  virtual ~ListActionsRequest();

  ListActionsRequest(const ListActionsRequest& from);

  inline ListActionsRequest& operator=(const ListActionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListActionsRequest(ListActionsRequest&& from) noexcept
    : ListActionsRequest() {
    *this = ::std::move(from);
  }

  inline ListActionsRequest& operator=(ListActionsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListActionsRequest& default_instance();

  enum PageStartCase {
    kPageToken = 3,
    kOffset = 4,
    PAGE_START_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListActionsRequest* internal_default_instance() {
    return reinterpret_cast<const ListActionsRequest*>(
               &_ListActionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ListActionsRequest* other);
  friend void swap(ListActionsRequest& a, ListActionsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListActionsRequest* New() const final {
    return CreateMaybeMessage<ListActionsRequest>(NULL);
  }

  ListActionsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListActionsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListActionsRequest& from);
  void MergeFrom(const ListActionsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListActionsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // string page_token = 3;
  private:
  bool has_page_token() const;
  public:
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int64 offset = 4;
  private:
  bool has_offset() const;
  public:
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  void clear_page_start();
  PageStartCase page_start_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ListActionsRequest)
 private:
  void set_has_page_token();
  void set_has_offset();

  inline bool has_page_start() const;
  inline void clear_has_page_start();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::int32 page_size_;
  union PageStartUnion {
    PageStartUnion() {}
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    ::google::protobuf::int64 offset_;
  } page_start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListActionsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ListActionsResponse) */ {
 public:
  ListActionsResponse();
  virtual ~ListActionsResponse();

  ListActionsResponse(const ListActionsResponse& from);

  inline ListActionsResponse& operator=(const ListActionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListActionsResponse(ListActionsResponse&& from) noexcept
    : ListActionsResponse() {
    *this = ::std::move(from);
  }

  inline ListActionsResponse& operator=(ListActionsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListActionsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListActionsResponse* internal_default_instance() {
    return reinterpret_cast<const ListActionsResponse*>(
               &_ListActionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(ListActionsResponse* other);
  friend void swap(ListActionsResponse& a, ListActionsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListActionsResponse* New() const final {
    return CreateMaybeMessage<ListActionsResponse>(NULL);
  }

  ListActionsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListActionsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListActionsResponse& from);
  void MergeFrom(const ListActionsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListActionsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.Action actions = 1;
  int actions_size() const;
  void clear_actions();
  static const int kActionsFieldNumber = 1;
  ::google::devtools::resultstore::v2::Action* mutable_actions(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Action >*
      mutable_actions();
  const ::google::devtools::resultstore::v2::Action& actions(int index) const;
  ::google::devtools::resultstore::v2::Action* add_actions();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Action >&
      actions() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ListActionsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Action > actions_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFileSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.GetFileSetRequest) */ {
 public:
  GetFileSetRequest();
  virtual ~GetFileSetRequest();

  GetFileSetRequest(const GetFileSetRequest& from);

  inline GetFileSetRequest& operator=(const GetFileSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFileSetRequest(GetFileSetRequest&& from) noexcept
    : GetFileSetRequest() {
    *this = ::std::move(from);
  }

  inline GetFileSetRequest& operator=(GetFileSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFileSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFileSetRequest* internal_default_instance() {
    return reinterpret_cast<const GetFileSetRequest*>(
               &_GetFileSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(GetFileSetRequest* other);
  friend void swap(GetFileSetRequest& a, GetFileSetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFileSetRequest* New() const final {
    return CreateMaybeMessage<GetFileSetRequest>(NULL);
  }

  GetFileSetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetFileSetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetFileSetRequest& from);
  void MergeFrom(const GetFileSetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFileSetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.GetFileSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFileSetsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ListFileSetsRequest) */ {
 public:
  ListFileSetsRequest();
  virtual ~ListFileSetsRequest();

  ListFileSetsRequest(const ListFileSetsRequest& from);

  inline ListFileSetsRequest& operator=(const ListFileSetsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFileSetsRequest(ListFileSetsRequest&& from) noexcept
    : ListFileSetsRequest() {
    *this = ::std::move(from);
  }

  inline ListFileSetsRequest& operator=(ListFileSetsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFileSetsRequest& default_instance();

  enum PageStartCase {
    kPageToken = 3,
    kOffset = 4,
    PAGE_START_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFileSetsRequest* internal_default_instance() {
    return reinterpret_cast<const ListFileSetsRequest*>(
               &_ListFileSetsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(ListFileSetsRequest* other);
  friend void swap(ListFileSetsRequest& a, ListFileSetsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFileSetsRequest* New() const final {
    return CreateMaybeMessage<ListFileSetsRequest>(NULL);
  }

  ListFileSetsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFileSetsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFileSetsRequest& from);
  void MergeFrom(const ListFileSetsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFileSetsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // string page_token = 3;
  private:
  bool has_page_token() const;
  public:
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int64 offset = 4;
  private:
  bool has_offset() const;
  public:
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  void clear_page_start();
  PageStartCase page_start_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ListFileSetsRequest)
 private:
  void set_has_page_token();
  void set_has_offset();

  inline bool has_page_start() const;
  inline void clear_has_page_start();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::int32 page_size_;
  union PageStartUnion {
    PageStartUnion() {}
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    ::google::protobuf::int64 offset_;
  } page_start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFileSetsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ListFileSetsResponse) */ {
 public:
  ListFileSetsResponse();
  virtual ~ListFileSetsResponse();

  ListFileSetsResponse(const ListFileSetsResponse& from);

  inline ListFileSetsResponse& operator=(const ListFileSetsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFileSetsResponse(ListFileSetsResponse&& from) noexcept
    : ListFileSetsResponse() {
    *this = ::std::move(from);
  }

  inline ListFileSetsResponse& operator=(ListFileSetsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFileSetsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFileSetsResponse* internal_default_instance() {
    return reinterpret_cast<const ListFileSetsResponse*>(
               &_ListFileSetsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(ListFileSetsResponse* other);
  friend void swap(ListFileSetsResponse& a, ListFileSetsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFileSetsResponse* New() const final {
    return CreateMaybeMessage<ListFileSetsResponse>(NULL);
  }

  ListFileSetsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFileSetsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFileSetsResponse& from);
  void MergeFrom(const ListFileSetsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFileSetsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.FileSet file_sets = 1;
  int file_sets_size() const;
  void clear_file_sets();
  static const int kFileSetsFieldNumber = 1;
  ::google::devtools::resultstore::v2::FileSet* mutable_file_sets(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileSet >*
      mutable_file_sets();
  const ::google::devtools::resultstore::v2::FileSet& file_sets(int index) const;
  ::google::devtools::resultstore::v2::FileSet* add_file_sets();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileSet >&
      file_sets() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ListFileSetsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileSet > file_sets_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetInvocationRequest

// string name = 1;
inline void GetInvocationRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetInvocationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.GetInvocationRequest.name)
  return name_.GetNoArena();
}
inline void GetInvocationRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.GetInvocationRequest.name)
}
#if LANG_CXX11
inline void GetInvocationRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.GetInvocationRequest.name)
}
#endif
inline void GetInvocationRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.GetInvocationRequest.name)
}
inline void GetInvocationRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.GetInvocationRequest.name)
}
inline ::std::string* GetInvocationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.GetInvocationRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetInvocationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.GetInvocationRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetInvocationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.GetInvocationRequest.name)
}

// -------------------------------------------------------------------

// SearchInvocationsRequest

// int32 page_size = 1;
inline void SearchInvocationsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 SearchInvocationsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.SearchInvocationsRequest.page_size)
  return page_size_;
}
inline void SearchInvocationsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.SearchInvocationsRequest.page_size)
}

// string page_token = 2;
inline bool SearchInvocationsRequest::has_page_token() const {
  return page_start_case() == kPageToken;
}
inline void SearchInvocationsRequest::set_has_page_token() {
  _oneof_case_[0] = kPageToken;
}
inline void SearchInvocationsRequest::clear_page_token() {
  if (has_page_token()) {
    page_start_.page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_page_start();
  }
}
inline const ::std::string& SearchInvocationsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.SearchInvocationsRequest.page_token)
  if (has_page_token()) {
    return page_start_.page_token_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void SearchInvocationsRequest::set_page_token(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.SearchInvocationsRequest.page_token)
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.SearchInvocationsRequest.page_token)
}
#if LANG_CXX11
inline void SearchInvocationsRequest::set_page_token(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.SearchInvocationsRequest.page_token)
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.SearchInvocationsRequest.page_token)
}
#endif
inline void SearchInvocationsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.SearchInvocationsRequest.page_token)
}
inline void SearchInvocationsRequest::set_page_token(const char* value, size_t size) {
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.SearchInvocationsRequest.page_token)
}
inline ::std::string* SearchInvocationsRequest::mutable_page_token() {
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.SearchInvocationsRequest.page_token)
  return page_start_.page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchInvocationsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.SearchInvocationsRequest.page_token)
  if (has_page_token()) {
    clear_has_page_start();
    return page_start_.page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void SearchInvocationsRequest::set_allocated_page_token(::std::string* page_token) {
  if (!has_page_token()) {
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_page_start();
  if (page_token != NULL) {
    set_has_page_token();
    page_start_.page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.SearchInvocationsRequest.page_token)
}

// int64 offset = 3;
inline bool SearchInvocationsRequest::has_offset() const {
  return page_start_case() == kOffset;
}
inline void SearchInvocationsRequest::set_has_offset() {
  _oneof_case_[0] = kOffset;
}
inline void SearchInvocationsRequest::clear_offset() {
  if (has_offset()) {
    page_start_.offset_ = GOOGLE_LONGLONG(0);
    clear_has_page_start();
  }
}
inline ::google::protobuf::int64 SearchInvocationsRequest::offset() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.SearchInvocationsRequest.offset)
  if (has_offset()) {
    return page_start_.offset_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void SearchInvocationsRequest::set_offset(::google::protobuf::int64 value) {
  if (!has_offset()) {
    clear_page_start();
    set_has_offset();
  }
  page_start_.offset_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.SearchInvocationsRequest.offset)
}

// string query = 4;
inline void SearchInvocationsRequest::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchInvocationsRequest::query() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.SearchInvocationsRequest.query)
  return query_.GetNoArena();
}
inline void SearchInvocationsRequest::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.SearchInvocationsRequest.query)
}
#if LANG_CXX11
inline void SearchInvocationsRequest::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.SearchInvocationsRequest.query)
}
#endif
inline void SearchInvocationsRequest::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.SearchInvocationsRequest.query)
}
inline void SearchInvocationsRequest::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.SearchInvocationsRequest.query)
}
inline ::std::string* SearchInvocationsRequest::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.SearchInvocationsRequest.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchInvocationsRequest::release_query() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.SearchInvocationsRequest.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchInvocationsRequest::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.SearchInvocationsRequest.query)
}

// string project_id = 5;
inline void SearchInvocationsRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchInvocationsRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.SearchInvocationsRequest.project_id)
  return project_id_.GetNoArena();
}
inline void SearchInvocationsRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.SearchInvocationsRequest.project_id)
}
#if LANG_CXX11
inline void SearchInvocationsRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.SearchInvocationsRequest.project_id)
}
#endif
inline void SearchInvocationsRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.SearchInvocationsRequest.project_id)
}
inline void SearchInvocationsRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.SearchInvocationsRequest.project_id)
}
inline ::std::string* SearchInvocationsRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.SearchInvocationsRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchInvocationsRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.SearchInvocationsRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchInvocationsRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.SearchInvocationsRequest.project_id)
}

inline bool SearchInvocationsRequest::has_page_start() const {
  return page_start_case() != PAGE_START_NOT_SET;
}
inline void SearchInvocationsRequest::clear_has_page_start() {
  _oneof_case_[0] = PAGE_START_NOT_SET;
}
inline SearchInvocationsRequest::PageStartCase SearchInvocationsRequest::page_start_case() const {
  return SearchInvocationsRequest::PageStartCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SearchInvocationsResponse

// repeated .google.devtools.resultstore.v2.Invocation invocations = 1;
inline int SearchInvocationsResponse::invocations_size() const {
  return invocations_.size();
}
inline ::google::devtools::resultstore::v2::Invocation* SearchInvocationsResponse::mutable_invocations(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.SearchInvocationsResponse.invocations)
  return invocations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Invocation >*
SearchInvocationsResponse::mutable_invocations() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.SearchInvocationsResponse.invocations)
  return &invocations_;
}
inline const ::google::devtools::resultstore::v2::Invocation& SearchInvocationsResponse::invocations(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.SearchInvocationsResponse.invocations)
  return invocations_.Get(index);
}
inline ::google::devtools::resultstore::v2::Invocation* SearchInvocationsResponse::add_invocations() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.SearchInvocationsResponse.invocations)
  return invocations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Invocation >&
SearchInvocationsResponse::invocations() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.SearchInvocationsResponse.invocations)
  return invocations_;
}

// string next_page_token = 2;
inline void SearchInvocationsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchInvocationsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.SearchInvocationsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void SearchInvocationsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.SearchInvocationsResponse.next_page_token)
}
#if LANG_CXX11
inline void SearchInvocationsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.SearchInvocationsResponse.next_page_token)
}
#endif
inline void SearchInvocationsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.SearchInvocationsResponse.next_page_token)
}
inline void SearchInvocationsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.SearchInvocationsResponse.next_page_token)
}
inline ::std::string* SearchInvocationsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.SearchInvocationsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchInvocationsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.SearchInvocationsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchInvocationsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.SearchInvocationsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetConfigurationRequest

// string name = 1;
inline void GetConfigurationRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetConfigurationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.GetConfigurationRequest.name)
  return name_.GetNoArena();
}
inline void GetConfigurationRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.GetConfigurationRequest.name)
}
#if LANG_CXX11
inline void GetConfigurationRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.GetConfigurationRequest.name)
}
#endif
inline void GetConfigurationRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.GetConfigurationRequest.name)
}
inline void GetConfigurationRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.GetConfigurationRequest.name)
}
inline ::std::string* GetConfigurationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.GetConfigurationRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetConfigurationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.GetConfigurationRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetConfigurationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.GetConfigurationRequest.name)
}

// -------------------------------------------------------------------

// ListConfigurationsRequest

// string parent = 1;
inline void ListConfigurationsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListConfigurationsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListConfigurationsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListConfigurationsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfigurationsRequest.parent)
}
#if LANG_CXX11
inline void ListConfigurationsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListConfigurationsRequest.parent)
}
#endif
inline void ListConfigurationsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListConfigurationsRequest.parent)
}
inline void ListConfigurationsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListConfigurationsRequest.parent)
}
inline ::std::string* ListConfigurationsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListConfigurationsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListConfigurationsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListConfigurationsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListConfigurationsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListConfigurationsRequest.parent)
}

// int32 page_size = 2;
inline void ListConfigurationsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListConfigurationsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListConfigurationsRequest.page_size)
  return page_size_;
}
inline void ListConfigurationsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfigurationsRequest.page_size)
}

// string page_token = 3;
inline bool ListConfigurationsRequest::has_page_token() const {
  return page_start_case() == kPageToken;
}
inline void ListConfigurationsRequest::set_has_page_token() {
  _oneof_case_[0] = kPageToken;
}
inline void ListConfigurationsRequest::clear_page_token() {
  if (has_page_token()) {
    page_start_.page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_page_start();
  }
}
inline const ::std::string& ListConfigurationsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListConfigurationsRequest.page_token)
  if (has_page_token()) {
    return page_start_.page_token_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ListConfigurationsRequest::set_page_token(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfigurationsRequest.page_token)
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfigurationsRequest.page_token)
}
#if LANG_CXX11
inline void ListConfigurationsRequest::set_page_token(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfigurationsRequest.page_token)
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListConfigurationsRequest.page_token)
}
#endif
inline void ListConfigurationsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListConfigurationsRequest.page_token)
}
inline void ListConfigurationsRequest::set_page_token(const char* value, size_t size) {
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListConfigurationsRequest.page_token)
}
inline ::std::string* ListConfigurationsRequest::mutable_page_token() {
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListConfigurationsRequest.page_token)
  return page_start_.page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListConfigurationsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListConfigurationsRequest.page_token)
  if (has_page_token()) {
    clear_has_page_start();
    return page_start_.page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ListConfigurationsRequest::set_allocated_page_token(::std::string* page_token) {
  if (!has_page_token()) {
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_page_start();
  if (page_token != NULL) {
    set_has_page_token();
    page_start_.page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListConfigurationsRequest.page_token)
}

// int64 offset = 4;
inline bool ListConfigurationsRequest::has_offset() const {
  return page_start_case() == kOffset;
}
inline void ListConfigurationsRequest::set_has_offset() {
  _oneof_case_[0] = kOffset;
}
inline void ListConfigurationsRequest::clear_offset() {
  if (has_offset()) {
    page_start_.offset_ = GOOGLE_LONGLONG(0);
    clear_has_page_start();
  }
}
inline ::google::protobuf::int64 ListConfigurationsRequest::offset() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListConfigurationsRequest.offset)
  if (has_offset()) {
    return page_start_.offset_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void ListConfigurationsRequest::set_offset(::google::protobuf::int64 value) {
  if (!has_offset()) {
    clear_page_start();
    set_has_offset();
  }
  page_start_.offset_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfigurationsRequest.offset)
}

inline bool ListConfigurationsRequest::has_page_start() const {
  return page_start_case() != PAGE_START_NOT_SET;
}
inline void ListConfigurationsRequest::clear_has_page_start() {
  _oneof_case_[0] = PAGE_START_NOT_SET;
}
inline ListConfigurationsRequest::PageStartCase ListConfigurationsRequest::page_start_case() const {
  return ListConfigurationsRequest::PageStartCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ListConfigurationsResponse

// repeated .google.devtools.resultstore.v2.Configuration configurations = 1;
inline int ListConfigurationsResponse::configurations_size() const {
  return configurations_.size();
}
inline ::google::devtools::resultstore::v2::Configuration* ListConfigurationsResponse::mutable_configurations(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListConfigurationsResponse.configurations)
  return configurations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Configuration >*
ListConfigurationsResponse::mutable_configurations() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.ListConfigurationsResponse.configurations)
  return &configurations_;
}
inline const ::google::devtools::resultstore::v2::Configuration& ListConfigurationsResponse::configurations(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListConfigurationsResponse.configurations)
  return configurations_.Get(index);
}
inline ::google::devtools::resultstore::v2::Configuration* ListConfigurationsResponse::add_configurations() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.ListConfigurationsResponse.configurations)
  return configurations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Configuration >&
ListConfigurationsResponse::configurations() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.ListConfigurationsResponse.configurations)
  return configurations_;
}

// string next_page_token = 2;
inline void ListConfigurationsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListConfigurationsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListConfigurationsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListConfigurationsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfigurationsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListConfigurationsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListConfigurationsResponse.next_page_token)
}
#endif
inline void ListConfigurationsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListConfigurationsResponse.next_page_token)
}
inline void ListConfigurationsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListConfigurationsResponse.next_page_token)
}
inline ::std::string* ListConfigurationsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListConfigurationsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListConfigurationsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListConfigurationsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListConfigurationsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListConfigurationsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetTargetRequest

// string name = 1;
inline void GetTargetRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetTargetRequest::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.GetTargetRequest.name)
  return name_.GetNoArena();
}
inline void GetTargetRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.GetTargetRequest.name)
}
#if LANG_CXX11
inline void GetTargetRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.GetTargetRequest.name)
}
#endif
inline void GetTargetRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.GetTargetRequest.name)
}
inline void GetTargetRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.GetTargetRequest.name)
}
inline ::std::string* GetTargetRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.GetTargetRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTargetRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.GetTargetRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTargetRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.GetTargetRequest.name)
}

// -------------------------------------------------------------------

// ListTargetsRequest

// string parent = 1;
inline void ListTargetsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTargetsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListTargetsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListTargetsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListTargetsRequest.parent)
}
#if LANG_CXX11
inline void ListTargetsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListTargetsRequest.parent)
}
#endif
inline void ListTargetsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListTargetsRequest.parent)
}
inline void ListTargetsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListTargetsRequest.parent)
}
inline ::std::string* ListTargetsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListTargetsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTargetsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListTargetsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTargetsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListTargetsRequest.parent)
}

// int32 page_size = 2;
inline void ListTargetsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListTargetsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListTargetsRequest.page_size)
  return page_size_;
}
inline void ListTargetsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListTargetsRequest.page_size)
}

// string page_token = 3;
inline bool ListTargetsRequest::has_page_token() const {
  return page_start_case() == kPageToken;
}
inline void ListTargetsRequest::set_has_page_token() {
  _oneof_case_[0] = kPageToken;
}
inline void ListTargetsRequest::clear_page_token() {
  if (has_page_token()) {
    page_start_.page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_page_start();
  }
}
inline const ::std::string& ListTargetsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListTargetsRequest.page_token)
  if (has_page_token()) {
    return page_start_.page_token_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ListTargetsRequest::set_page_token(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListTargetsRequest.page_token)
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListTargetsRequest.page_token)
}
#if LANG_CXX11
inline void ListTargetsRequest::set_page_token(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListTargetsRequest.page_token)
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListTargetsRequest.page_token)
}
#endif
inline void ListTargetsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListTargetsRequest.page_token)
}
inline void ListTargetsRequest::set_page_token(const char* value, size_t size) {
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListTargetsRequest.page_token)
}
inline ::std::string* ListTargetsRequest::mutable_page_token() {
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListTargetsRequest.page_token)
  return page_start_.page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTargetsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListTargetsRequest.page_token)
  if (has_page_token()) {
    clear_has_page_start();
    return page_start_.page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ListTargetsRequest::set_allocated_page_token(::std::string* page_token) {
  if (!has_page_token()) {
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_page_start();
  if (page_token != NULL) {
    set_has_page_token();
    page_start_.page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListTargetsRequest.page_token)
}

// int64 offset = 4;
inline bool ListTargetsRequest::has_offset() const {
  return page_start_case() == kOffset;
}
inline void ListTargetsRequest::set_has_offset() {
  _oneof_case_[0] = kOffset;
}
inline void ListTargetsRequest::clear_offset() {
  if (has_offset()) {
    page_start_.offset_ = GOOGLE_LONGLONG(0);
    clear_has_page_start();
  }
}
inline ::google::protobuf::int64 ListTargetsRequest::offset() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListTargetsRequest.offset)
  if (has_offset()) {
    return page_start_.offset_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void ListTargetsRequest::set_offset(::google::protobuf::int64 value) {
  if (!has_offset()) {
    clear_page_start();
    set_has_offset();
  }
  page_start_.offset_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListTargetsRequest.offset)
}

inline bool ListTargetsRequest::has_page_start() const {
  return page_start_case() != PAGE_START_NOT_SET;
}
inline void ListTargetsRequest::clear_has_page_start() {
  _oneof_case_[0] = PAGE_START_NOT_SET;
}
inline ListTargetsRequest::PageStartCase ListTargetsRequest::page_start_case() const {
  return ListTargetsRequest::PageStartCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ListTargetsResponse

// repeated .google.devtools.resultstore.v2.Target targets = 1;
inline int ListTargetsResponse::targets_size() const {
  return targets_.size();
}
inline ::google::devtools::resultstore::v2::Target* ListTargetsResponse::mutable_targets(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListTargetsResponse.targets)
  return targets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Target >*
ListTargetsResponse::mutable_targets() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.ListTargetsResponse.targets)
  return &targets_;
}
inline const ::google::devtools::resultstore::v2::Target& ListTargetsResponse::targets(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListTargetsResponse.targets)
  return targets_.Get(index);
}
inline ::google::devtools::resultstore::v2::Target* ListTargetsResponse::add_targets() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.ListTargetsResponse.targets)
  return targets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Target >&
ListTargetsResponse::targets() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.ListTargetsResponse.targets)
  return targets_;
}

// string next_page_token = 2;
inline void ListTargetsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTargetsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListTargetsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListTargetsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListTargetsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListTargetsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListTargetsResponse.next_page_token)
}
#endif
inline void ListTargetsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListTargetsResponse.next_page_token)
}
inline void ListTargetsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListTargetsResponse.next_page_token)
}
inline ::std::string* ListTargetsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListTargetsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTargetsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListTargetsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTargetsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListTargetsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetConfiguredTargetRequest

// string name = 1;
inline void GetConfiguredTargetRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetConfiguredTargetRequest::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.GetConfiguredTargetRequest.name)
  return name_.GetNoArena();
}
inline void GetConfiguredTargetRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.GetConfiguredTargetRequest.name)
}
#if LANG_CXX11
inline void GetConfiguredTargetRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.GetConfiguredTargetRequest.name)
}
#endif
inline void GetConfiguredTargetRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.GetConfiguredTargetRequest.name)
}
inline void GetConfiguredTargetRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.GetConfiguredTargetRequest.name)
}
inline ::std::string* GetConfiguredTargetRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.GetConfiguredTargetRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetConfiguredTargetRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.GetConfiguredTargetRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetConfiguredTargetRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.GetConfiguredTargetRequest.name)
}

// -------------------------------------------------------------------

// ListConfiguredTargetsRequest

// string parent = 1;
inline void ListConfiguredTargetsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListConfiguredTargetsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListConfiguredTargetsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.parent)
}
#if LANG_CXX11
inline void ListConfiguredTargetsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.parent)
}
#endif
inline void ListConfiguredTargetsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.parent)
}
inline void ListConfiguredTargetsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.parent)
}
inline ::std::string* ListConfiguredTargetsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListConfiguredTargetsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListConfiguredTargetsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.parent)
}

// int32 page_size = 2;
inline void ListConfiguredTargetsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListConfiguredTargetsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.page_size)
  return page_size_;
}
inline void ListConfiguredTargetsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.page_size)
}

// string page_token = 3;
inline bool ListConfiguredTargetsRequest::has_page_token() const {
  return page_start_case() == kPageToken;
}
inline void ListConfiguredTargetsRequest::set_has_page_token() {
  _oneof_case_[0] = kPageToken;
}
inline void ListConfiguredTargetsRequest::clear_page_token() {
  if (has_page_token()) {
    page_start_.page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_page_start();
  }
}
inline const ::std::string& ListConfiguredTargetsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.page_token)
  if (has_page_token()) {
    return page_start_.page_token_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ListConfiguredTargetsRequest::set_page_token(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.page_token)
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.page_token)
}
#if LANG_CXX11
inline void ListConfiguredTargetsRequest::set_page_token(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.page_token)
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.page_token)
}
#endif
inline void ListConfiguredTargetsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.page_token)
}
inline void ListConfiguredTargetsRequest::set_page_token(const char* value, size_t size) {
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.page_token)
}
inline ::std::string* ListConfiguredTargetsRequest::mutable_page_token() {
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.page_token)
  return page_start_.page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListConfiguredTargetsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.page_token)
  if (has_page_token()) {
    clear_has_page_start();
    return page_start_.page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ListConfiguredTargetsRequest::set_allocated_page_token(::std::string* page_token) {
  if (!has_page_token()) {
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_page_start();
  if (page_token != NULL) {
    set_has_page_token();
    page_start_.page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.page_token)
}

// int64 offset = 4;
inline bool ListConfiguredTargetsRequest::has_offset() const {
  return page_start_case() == kOffset;
}
inline void ListConfiguredTargetsRequest::set_has_offset() {
  _oneof_case_[0] = kOffset;
}
inline void ListConfiguredTargetsRequest::clear_offset() {
  if (has_offset()) {
    page_start_.offset_ = GOOGLE_LONGLONG(0);
    clear_has_page_start();
  }
}
inline ::google::protobuf::int64 ListConfiguredTargetsRequest::offset() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.offset)
  if (has_offset()) {
    return page_start_.offset_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void ListConfiguredTargetsRequest::set_offset(::google::protobuf::int64 value) {
  if (!has_offset()) {
    clear_page_start();
    set_has_offset();
  }
  page_start_.offset_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfiguredTargetsRequest.offset)
}

inline bool ListConfiguredTargetsRequest::has_page_start() const {
  return page_start_case() != PAGE_START_NOT_SET;
}
inline void ListConfiguredTargetsRequest::clear_has_page_start() {
  _oneof_case_[0] = PAGE_START_NOT_SET;
}
inline ListConfiguredTargetsRequest::PageStartCase ListConfiguredTargetsRequest::page_start_case() const {
  return ListConfiguredTargetsRequest::PageStartCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ListConfiguredTargetsResponse

// repeated .google.devtools.resultstore.v2.ConfiguredTarget configured_targets = 1;
inline int ListConfiguredTargetsResponse::configured_targets_size() const {
  return configured_targets_.size();
}
inline ::google::devtools::resultstore::v2::ConfiguredTarget* ListConfiguredTargetsResponse::mutable_configured_targets(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListConfiguredTargetsResponse.configured_targets)
  return configured_targets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::ConfiguredTarget >*
ListConfiguredTargetsResponse::mutable_configured_targets() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.ListConfiguredTargetsResponse.configured_targets)
  return &configured_targets_;
}
inline const ::google::devtools::resultstore::v2::ConfiguredTarget& ListConfiguredTargetsResponse::configured_targets(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListConfiguredTargetsResponse.configured_targets)
  return configured_targets_.Get(index);
}
inline ::google::devtools::resultstore::v2::ConfiguredTarget* ListConfiguredTargetsResponse::add_configured_targets() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.ListConfiguredTargetsResponse.configured_targets)
  return configured_targets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::ConfiguredTarget >&
ListConfiguredTargetsResponse::configured_targets() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.ListConfiguredTargetsResponse.configured_targets)
  return configured_targets_;
}

// string next_page_token = 2;
inline void ListConfiguredTargetsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListConfiguredTargetsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListConfiguredTargetsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListConfiguredTargetsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListConfiguredTargetsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListConfiguredTargetsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListConfiguredTargetsResponse.next_page_token)
}
#endif
inline void ListConfiguredTargetsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListConfiguredTargetsResponse.next_page_token)
}
inline void ListConfiguredTargetsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListConfiguredTargetsResponse.next_page_token)
}
inline ::std::string* ListConfiguredTargetsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListConfiguredTargetsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListConfiguredTargetsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListConfiguredTargetsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListConfiguredTargetsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListConfiguredTargetsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetActionRequest

// string name = 1;
inline void GetActionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetActionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.GetActionRequest.name)
  return name_.GetNoArena();
}
inline void GetActionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.GetActionRequest.name)
}
#if LANG_CXX11
inline void GetActionRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.GetActionRequest.name)
}
#endif
inline void GetActionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.GetActionRequest.name)
}
inline void GetActionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.GetActionRequest.name)
}
inline ::std::string* GetActionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.GetActionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetActionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.GetActionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetActionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.GetActionRequest.name)
}

// -------------------------------------------------------------------

// ListActionsRequest

// string parent = 1;
inline void ListActionsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListActionsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListActionsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListActionsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListActionsRequest.parent)
}
#if LANG_CXX11
inline void ListActionsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListActionsRequest.parent)
}
#endif
inline void ListActionsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListActionsRequest.parent)
}
inline void ListActionsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListActionsRequest.parent)
}
inline ::std::string* ListActionsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListActionsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListActionsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListActionsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListActionsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListActionsRequest.parent)
}

// int32 page_size = 2;
inline void ListActionsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListActionsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListActionsRequest.page_size)
  return page_size_;
}
inline void ListActionsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListActionsRequest.page_size)
}

// string page_token = 3;
inline bool ListActionsRequest::has_page_token() const {
  return page_start_case() == kPageToken;
}
inline void ListActionsRequest::set_has_page_token() {
  _oneof_case_[0] = kPageToken;
}
inline void ListActionsRequest::clear_page_token() {
  if (has_page_token()) {
    page_start_.page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_page_start();
  }
}
inline const ::std::string& ListActionsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListActionsRequest.page_token)
  if (has_page_token()) {
    return page_start_.page_token_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ListActionsRequest::set_page_token(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListActionsRequest.page_token)
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListActionsRequest.page_token)
}
#if LANG_CXX11
inline void ListActionsRequest::set_page_token(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListActionsRequest.page_token)
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListActionsRequest.page_token)
}
#endif
inline void ListActionsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListActionsRequest.page_token)
}
inline void ListActionsRequest::set_page_token(const char* value, size_t size) {
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListActionsRequest.page_token)
}
inline ::std::string* ListActionsRequest::mutable_page_token() {
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListActionsRequest.page_token)
  return page_start_.page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListActionsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListActionsRequest.page_token)
  if (has_page_token()) {
    clear_has_page_start();
    return page_start_.page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ListActionsRequest::set_allocated_page_token(::std::string* page_token) {
  if (!has_page_token()) {
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_page_start();
  if (page_token != NULL) {
    set_has_page_token();
    page_start_.page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListActionsRequest.page_token)
}

// int64 offset = 4;
inline bool ListActionsRequest::has_offset() const {
  return page_start_case() == kOffset;
}
inline void ListActionsRequest::set_has_offset() {
  _oneof_case_[0] = kOffset;
}
inline void ListActionsRequest::clear_offset() {
  if (has_offset()) {
    page_start_.offset_ = GOOGLE_LONGLONG(0);
    clear_has_page_start();
  }
}
inline ::google::protobuf::int64 ListActionsRequest::offset() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListActionsRequest.offset)
  if (has_offset()) {
    return page_start_.offset_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void ListActionsRequest::set_offset(::google::protobuf::int64 value) {
  if (!has_offset()) {
    clear_page_start();
    set_has_offset();
  }
  page_start_.offset_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListActionsRequest.offset)
}

inline bool ListActionsRequest::has_page_start() const {
  return page_start_case() != PAGE_START_NOT_SET;
}
inline void ListActionsRequest::clear_has_page_start() {
  _oneof_case_[0] = PAGE_START_NOT_SET;
}
inline ListActionsRequest::PageStartCase ListActionsRequest::page_start_case() const {
  return ListActionsRequest::PageStartCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ListActionsResponse

// repeated .google.devtools.resultstore.v2.Action actions = 1;
inline int ListActionsResponse::actions_size() const {
  return actions_.size();
}
inline ::google::devtools::resultstore::v2::Action* ListActionsResponse::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListActionsResponse.actions)
  return actions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Action >*
ListActionsResponse::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.ListActionsResponse.actions)
  return &actions_;
}
inline const ::google::devtools::resultstore::v2::Action& ListActionsResponse::actions(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListActionsResponse.actions)
  return actions_.Get(index);
}
inline ::google::devtools::resultstore::v2::Action* ListActionsResponse::add_actions() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.ListActionsResponse.actions)
  return actions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Action >&
ListActionsResponse::actions() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.ListActionsResponse.actions)
  return actions_;
}

// string next_page_token = 2;
inline void ListActionsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListActionsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListActionsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListActionsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListActionsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListActionsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListActionsResponse.next_page_token)
}
#endif
inline void ListActionsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListActionsResponse.next_page_token)
}
inline void ListActionsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListActionsResponse.next_page_token)
}
inline ::std::string* ListActionsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListActionsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListActionsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListActionsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListActionsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListActionsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetFileSetRequest

// string name = 1;
inline void GetFileSetRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetFileSetRequest::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.GetFileSetRequest.name)
  return name_.GetNoArena();
}
inline void GetFileSetRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.GetFileSetRequest.name)
}
#if LANG_CXX11
inline void GetFileSetRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.GetFileSetRequest.name)
}
#endif
inline void GetFileSetRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.GetFileSetRequest.name)
}
inline void GetFileSetRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.GetFileSetRequest.name)
}
inline ::std::string* GetFileSetRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.GetFileSetRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFileSetRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.GetFileSetRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileSetRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.GetFileSetRequest.name)
}

// -------------------------------------------------------------------

// ListFileSetsRequest

// string parent = 1;
inline void ListFileSetsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListFileSetsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListFileSetsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListFileSetsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListFileSetsRequest.parent)
}
#if LANG_CXX11
inline void ListFileSetsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListFileSetsRequest.parent)
}
#endif
inline void ListFileSetsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListFileSetsRequest.parent)
}
inline void ListFileSetsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListFileSetsRequest.parent)
}
inline ::std::string* ListFileSetsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListFileSetsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListFileSetsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListFileSetsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListFileSetsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListFileSetsRequest.parent)
}

// int32 page_size = 2;
inline void ListFileSetsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListFileSetsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListFileSetsRequest.page_size)
  return page_size_;
}
inline void ListFileSetsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListFileSetsRequest.page_size)
}

// string page_token = 3;
inline bool ListFileSetsRequest::has_page_token() const {
  return page_start_case() == kPageToken;
}
inline void ListFileSetsRequest::set_has_page_token() {
  _oneof_case_[0] = kPageToken;
}
inline void ListFileSetsRequest::clear_page_token() {
  if (has_page_token()) {
    page_start_.page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_page_start();
  }
}
inline const ::std::string& ListFileSetsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListFileSetsRequest.page_token)
  if (has_page_token()) {
    return page_start_.page_token_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ListFileSetsRequest::set_page_token(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListFileSetsRequest.page_token)
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListFileSetsRequest.page_token)
}
#if LANG_CXX11
inline void ListFileSetsRequest::set_page_token(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListFileSetsRequest.page_token)
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListFileSetsRequest.page_token)
}
#endif
inline void ListFileSetsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListFileSetsRequest.page_token)
}
inline void ListFileSetsRequest::set_page_token(const char* value, size_t size) {
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  page_start_.page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListFileSetsRequest.page_token)
}
inline ::std::string* ListFileSetsRequest::mutable_page_token() {
  if (!has_page_token()) {
    clear_page_start();
    set_has_page_token();
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListFileSetsRequest.page_token)
  return page_start_.page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListFileSetsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListFileSetsRequest.page_token)
  if (has_page_token()) {
    clear_has_page_start();
    return page_start_.page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ListFileSetsRequest::set_allocated_page_token(::std::string* page_token) {
  if (!has_page_token()) {
    page_start_.page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_page_start();
  if (page_token != NULL) {
    set_has_page_token();
    page_start_.page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListFileSetsRequest.page_token)
}

// int64 offset = 4;
inline bool ListFileSetsRequest::has_offset() const {
  return page_start_case() == kOffset;
}
inline void ListFileSetsRequest::set_has_offset() {
  _oneof_case_[0] = kOffset;
}
inline void ListFileSetsRequest::clear_offset() {
  if (has_offset()) {
    page_start_.offset_ = GOOGLE_LONGLONG(0);
    clear_has_page_start();
  }
}
inline ::google::protobuf::int64 ListFileSetsRequest::offset() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListFileSetsRequest.offset)
  if (has_offset()) {
    return page_start_.offset_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void ListFileSetsRequest::set_offset(::google::protobuf::int64 value) {
  if (!has_offset()) {
    clear_page_start();
    set_has_offset();
  }
  page_start_.offset_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListFileSetsRequest.offset)
}

inline bool ListFileSetsRequest::has_page_start() const {
  return page_start_case() != PAGE_START_NOT_SET;
}
inline void ListFileSetsRequest::clear_has_page_start() {
  _oneof_case_[0] = PAGE_START_NOT_SET;
}
inline ListFileSetsRequest::PageStartCase ListFileSetsRequest::page_start_case() const {
  return ListFileSetsRequest::PageStartCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ListFileSetsResponse

// repeated .google.devtools.resultstore.v2.FileSet file_sets = 1;
inline int ListFileSetsResponse::file_sets_size() const {
  return file_sets_.size();
}
inline ::google::devtools::resultstore::v2::FileSet* ListFileSetsResponse::mutable_file_sets(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListFileSetsResponse.file_sets)
  return file_sets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileSet >*
ListFileSetsResponse::mutable_file_sets() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.ListFileSetsResponse.file_sets)
  return &file_sets_;
}
inline const ::google::devtools::resultstore::v2::FileSet& ListFileSetsResponse::file_sets(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListFileSetsResponse.file_sets)
  return file_sets_.Get(index);
}
inline ::google::devtools::resultstore::v2::FileSet* ListFileSetsResponse::add_file_sets() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.ListFileSetsResponse.file_sets)
  return file_sets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::FileSet >&
ListFileSetsResponse::file_sets() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.ListFileSetsResponse.file_sets)
  return file_sets_;
}

// string next_page_token = 2;
inline void ListFileSetsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListFileSetsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ListFileSetsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListFileSetsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ListFileSetsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListFileSetsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ListFileSetsResponse.next_page_token)
}
#endif
inline void ListFileSetsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ListFileSetsResponse.next_page_token)
}
inline void ListFileSetsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ListFileSetsResponse.next_page_token)
}
inline ::std::string* ListFileSetsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ListFileSetsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListFileSetsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ListFileSetsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListFileSetsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ListFileSetsResponse.next_page_token)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto
