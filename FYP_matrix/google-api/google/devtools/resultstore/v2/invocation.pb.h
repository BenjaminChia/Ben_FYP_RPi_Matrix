// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/invocation.proto

#ifndef PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2finvocation_2eproto
#define PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2finvocation_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/devtools/resultstore/v2/common.pb.h"
#include "google/devtools/resultstore/v2/coverage_summary.pb.h"
#include "google/devtools/resultstore/v2/file.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fresultstore_2fv2_2finvocation_2eproto 

namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2finvocation_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2finvocation_2eproto
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {
class CommandLine;
class CommandLineDefaultTypeInternal;
extern CommandLineDefaultTypeInternal _CommandLine_default_instance_;
class Invocation;
class InvocationDefaultTypeInternal;
extern InvocationDefaultTypeInternal _Invocation_default_instance_;
class InvocationAttributes;
class InvocationAttributesDefaultTypeInternal;
extern InvocationAttributesDefaultTypeInternal _InvocationAttributes_default_instance_;
class Invocation_Id;
class Invocation_IdDefaultTypeInternal;
extern Invocation_IdDefaultTypeInternal _Invocation_Id_default_instance_;
class WorkspaceContext;
class WorkspaceContextDefaultTypeInternal;
extern WorkspaceContextDefaultTypeInternal _WorkspaceContext_default_instance_;
class WorkspaceInfo;
class WorkspaceInfoDefaultTypeInternal;
extern WorkspaceInfoDefaultTypeInternal _WorkspaceInfo_default_instance_;
}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::devtools::resultstore::v2::CommandLine* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::CommandLine>(Arena*);
template<> ::google::devtools::resultstore::v2::Invocation* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::Invocation>(Arena*);
template<> ::google::devtools::resultstore::v2::InvocationAttributes* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::InvocationAttributes>(Arena*);
template<> ::google::devtools::resultstore::v2::Invocation_Id* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::Invocation_Id>(Arena*);
template<> ::google::devtools::resultstore::v2::WorkspaceContext* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::WorkspaceContext>(Arena*);
template<> ::google::devtools::resultstore::v2::WorkspaceInfo* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::WorkspaceInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {

// ===================================================================

class Invocation_Id : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.Invocation.Id) */ {
 public:
  Invocation_Id();
  virtual ~Invocation_Id();

  Invocation_Id(const Invocation_Id& from);

  inline Invocation_Id& operator=(const Invocation_Id& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Invocation_Id(Invocation_Id&& from) noexcept
    : Invocation_Id() {
    *this = ::std::move(from);
  }

  inline Invocation_Id& operator=(Invocation_Id&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Invocation_Id& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Invocation_Id* internal_default_instance() {
    return reinterpret_cast<const Invocation_Id*>(
               &_Invocation_Id_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Invocation_Id* other);
  friend void swap(Invocation_Id& a, Invocation_Id& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Invocation_Id* New() const final {
    return CreateMaybeMessage<Invocation_Id>(NULL);
  }

  Invocation_Id* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Invocation_Id>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Invocation_Id& from);
  void MergeFrom(const Invocation_Id& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Invocation_Id* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string invocation_id = 1;
  void clear_invocation_id();
  static const int kInvocationIdFieldNumber = 1;
  const ::std::string& invocation_id() const;
  void set_invocation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_invocation_id(::std::string&& value);
  #endif
  void set_invocation_id(const char* value);
  void set_invocation_id(const char* value, size_t size);
  ::std::string* mutable_invocation_id();
  ::std::string* release_invocation_id();
  void set_allocated_invocation_id(::std::string* invocation_id);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.Invocation.Id)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr invocation_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2finvocation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Invocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.Invocation) */ {
 public:
  Invocation();
  virtual ~Invocation();

  Invocation(const Invocation& from);

  inline Invocation& operator=(const Invocation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Invocation(Invocation&& from) noexcept
    : Invocation() {
    *this = ::std::move(from);
  }

  inline Invocation& operator=(Invocation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Invocation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Invocation* internal_default_instance() {
    return reinterpret_cast<const Invocation*>(
               &_Invocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Invocation* other);
  friend void swap(Invocation& a, Invocation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Invocation* New() const final {
    return CreateMaybeMessage<Invocation>(NULL);
  }

  Invocation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Invocation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Invocation& from);
  void MergeFrom(const Invocation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Invocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Invocation_Id Id;

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.Property properties = 7;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 7;
  ::google::devtools::resultstore::v2::Property* mutable_properties(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >*
      mutable_properties();
  const ::google::devtools::resultstore::v2::Property& properties(int index) const;
  ::google::devtools::resultstore::v2::Property* add_properties();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >&
      properties() const;

  // repeated .google.devtools.resultstore.v2.File files = 8;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 8;
  ::google::devtools::resultstore::v2::File* mutable_files(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >*
      mutable_files();
  const ::google::devtools::resultstore::v2::File& files(int index) const;
  ::google::devtools::resultstore::v2::File* add_files();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >&
      files() const;

  // repeated .google.devtools.resultstore.v2.LanguageCoverageSummary coverage_summaries = 9;
  int coverage_summaries_size() const;
  void clear_coverage_summaries();
  static const int kCoverageSummariesFieldNumber = 9;
  ::google::devtools::resultstore::v2::LanguageCoverageSummary* mutable_coverage_summaries(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary >*
      mutable_coverage_summaries();
  const ::google::devtools::resultstore::v2::LanguageCoverageSummary& coverage_summaries(int index) const;
  ::google::devtools::resultstore::v2::LanguageCoverageSummary* add_coverage_summaries();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary >&
      coverage_summaries() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.devtools.resultstore.v2.Invocation.Id id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::devtools::resultstore::v2::Invocation_Id& _internal_id() const;
  public:
  const ::google::devtools::resultstore::v2::Invocation_Id& id() const;
  ::google::devtools::resultstore::v2::Invocation_Id* release_id();
  ::google::devtools::resultstore::v2::Invocation_Id* mutable_id();
  void set_allocated_id(::google::devtools::resultstore::v2::Invocation_Id* id);

  // .google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;
  bool has_status_attributes() const;
  void clear_status_attributes();
  static const int kStatusAttributesFieldNumber = 3;
  private:
  const ::google::devtools::resultstore::v2::StatusAttributes& _internal_status_attributes() const;
  public:
  const ::google::devtools::resultstore::v2::StatusAttributes& status_attributes() const;
  ::google::devtools::resultstore::v2::StatusAttributes* release_status_attributes();
  ::google::devtools::resultstore::v2::StatusAttributes* mutable_status_attributes();
  void set_allocated_status_attributes(::google::devtools::resultstore::v2::StatusAttributes* status_attributes);

  // .google.devtools.resultstore.v2.Timing timing = 4;
  bool has_timing() const;
  void clear_timing();
  static const int kTimingFieldNumber = 4;
  private:
  const ::google::devtools::resultstore::v2::Timing& _internal_timing() const;
  public:
  const ::google::devtools::resultstore::v2::Timing& timing() const;
  ::google::devtools::resultstore::v2::Timing* release_timing();
  ::google::devtools::resultstore::v2::Timing* mutable_timing();
  void set_allocated_timing(::google::devtools::resultstore::v2::Timing* timing);

  // .google.devtools.resultstore.v2.InvocationAttributes invocation_attributes = 5;
  bool has_invocation_attributes() const;
  void clear_invocation_attributes();
  static const int kInvocationAttributesFieldNumber = 5;
  private:
  const ::google::devtools::resultstore::v2::InvocationAttributes& _internal_invocation_attributes() const;
  public:
  const ::google::devtools::resultstore::v2::InvocationAttributes& invocation_attributes() const;
  ::google::devtools::resultstore::v2::InvocationAttributes* release_invocation_attributes();
  ::google::devtools::resultstore::v2::InvocationAttributes* mutable_invocation_attributes();
  void set_allocated_invocation_attributes(::google::devtools::resultstore::v2::InvocationAttributes* invocation_attributes);

  // .google.devtools.resultstore.v2.WorkspaceInfo workspace_info = 6;
  bool has_workspace_info() const;
  void clear_workspace_info();
  static const int kWorkspaceInfoFieldNumber = 6;
  private:
  const ::google::devtools::resultstore::v2::WorkspaceInfo& _internal_workspace_info() const;
  public:
  const ::google::devtools::resultstore::v2::WorkspaceInfo& workspace_info() const;
  ::google::devtools::resultstore::v2::WorkspaceInfo* release_workspace_info();
  ::google::devtools::resultstore::v2::WorkspaceInfo* mutable_workspace_info();
  void set_allocated_workspace_info(::google::devtools::resultstore::v2::WorkspaceInfo* workspace_info);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.Invocation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property > properties_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File > files_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary > coverage_summaries_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::devtools::resultstore::v2::Invocation_Id* id_;
  ::google::devtools::resultstore::v2::StatusAttributes* status_attributes_;
  ::google::devtools::resultstore::v2::Timing* timing_;
  ::google::devtools::resultstore::v2::InvocationAttributes* invocation_attributes_;
  ::google::devtools::resultstore::v2::WorkspaceInfo* workspace_info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2finvocation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorkspaceContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.WorkspaceContext) */ {
 public:
  WorkspaceContext();
  virtual ~WorkspaceContext();

  WorkspaceContext(const WorkspaceContext& from);

  inline WorkspaceContext& operator=(const WorkspaceContext& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkspaceContext(WorkspaceContext&& from) noexcept
    : WorkspaceContext() {
    *this = ::std::move(from);
  }

  inline WorkspaceContext& operator=(WorkspaceContext&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkspaceContext& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkspaceContext* internal_default_instance() {
    return reinterpret_cast<const WorkspaceContext*>(
               &_WorkspaceContext_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(WorkspaceContext* other);
  friend void swap(WorkspaceContext& a, WorkspaceContext& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkspaceContext* New() const final {
    return CreateMaybeMessage<WorkspaceContext>(NULL);
  }

  WorkspaceContext* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkspaceContext>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkspaceContext& from);
  void MergeFrom(const WorkspaceContext& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkspaceContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.WorkspaceContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2finvocation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorkspaceInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.WorkspaceInfo) */ {
 public:
  WorkspaceInfo();
  virtual ~WorkspaceInfo();

  WorkspaceInfo(const WorkspaceInfo& from);

  inline WorkspaceInfo& operator=(const WorkspaceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkspaceInfo(WorkspaceInfo&& from) noexcept
    : WorkspaceInfo() {
    *this = ::std::move(from);
  }

  inline WorkspaceInfo& operator=(WorkspaceInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkspaceInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkspaceInfo* internal_default_instance() {
    return reinterpret_cast<const WorkspaceInfo*>(
               &_WorkspaceInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(WorkspaceInfo* other);
  friend void swap(WorkspaceInfo& a, WorkspaceInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkspaceInfo* New() const final {
    return CreateMaybeMessage<WorkspaceInfo>(NULL);
  }

  WorkspaceInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkspaceInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkspaceInfo& from);
  void MergeFrom(const WorkspaceInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkspaceInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;
  int command_lines_size() const;
  void clear_command_lines();
  static const int kCommandLinesFieldNumber = 7;
  ::google::devtools::resultstore::v2::CommandLine* mutable_command_lines(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::CommandLine >*
      mutable_command_lines();
  const ::google::devtools::resultstore::v2::CommandLine& command_lines(int index) const;
  ::google::devtools::resultstore::v2::CommandLine* add_command_lines();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::CommandLine >&
      command_lines() const;

  // string hostname = 3;
  void clear_hostname();
  static const int kHostnameFieldNumber = 3;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // string working_directory = 4;
  void clear_working_directory();
  static const int kWorkingDirectoryFieldNumber = 4;
  const ::std::string& working_directory() const;
  void set_working_directory(const ::std::string& value);
  #if LANG_CXX11
  void set_working_directory(::std::string&& value);
  #endif
  void set_working_directory(const char* value);
  void set_working_directory(const char* value, size_t size);
  ::std::string* mutable_working_directory();
  ::std::string* release_working_directory();
  void set_allocated_working_directory(::std::string* working_directory);

  // string tool_tag = 5;
  void clear_tool_tag();
  static const int kToolTagFieldNumber = 5;
  const ::std::string& tool_tag() const;
  void set_tool_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tool_tag(::std::string&& value);
  #endif
  void set_tool_tag(const char* value);
  void set_tool_tag(const char* value, size_t size);
  ::std::string* mutable_tool_tag();
  ::std::string* release_tool_tag();
  void set_allocated_tool_tag(::std::string* tool_tag);

  // .google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;
  bool has_workspace_context() const;
  void clear_workspace_context();
  static const int kWorkspaceContextFieldNumber = 1;
  private:
  const ::google::devtools::resultstore::v2::WorkspaceContext& _internal_workspace_context() const;
  public:
  const ::google::devtools::resultstore::v2::WorkspaceContext& workspace_context() const;
  ::google::devtools::resultstore::v2::WorkspaceContext* release_workspace_context();
  ::google::devtools::resultstore::v2::WorkspaceContext* mutable_workspace_context();
  void set_allocated_workspace_context(::google::devtools::resultstore::v2::WorkspaceContext* workspace_context);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.WorkspaceInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::CommandLine > command_lines_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::google::protobuf::internal::ArenaStringPtr working_directory_;
  ::google::protobuf::internal::ArenaStringPtr tool_tag_;
  ::google::devtools::resultstore::v2::WorkspaceContext* workspace_context_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2finvocation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommandLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.CommandLine) */ {
 public:
  CommandLine();
  virtual ~CommandLine();

  CommandLine(const CommandLine& from);

  inline CommandLine& operator=(const CommandLine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommandLine(CommandLine&& from) noexcept
    : CommandLine() {
    *this = ::std::move(from);
  }

  inline CommandLine& operator=(CommandLine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandLine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandLine* internal_default_instance() {
    return reinterpret_cast<const CommandLine*>(
               &_CommandLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CommandLine* other);
  friend void swap(CommandLine& a, CommandLine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommandLine* New() const final {
    return CreateMaybeMessage<CommandLine>(NULL);
  }

  CommandLine* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommandLine>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommandLine& from);
  void MergeFrom(const CommandLine& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string args = 3;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 3;
  const ::std::string& args(int index) const;
  ::std::string* mutable_args(int index);
  void set_args(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_args(int index, ::std::string&& value);
  #endif
  void set_args(int index, const char* value);
  void set_args(int index, const char* value, size_t size);
  ::std::string* add_args();
  void add_args(const ::std::string& value);
  #if LANG_CXX11
  void add_args(::std::string&& value);
  #endif
  void add_args(const char* value);
  void add_args(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& args() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_args();

  // string label = 1;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // string tool = 2;
  void clear_tool();
  static const int kToolFieldNumber = 2;
  const ::std::string& tool() const;
  void set_tool(const ::std::string& value);
  #if LANG_CXX11
  void set_tool(::std::string&& value);
  #endif
  void set_tool(const char* value);
  void set_tool(const char* value, size_t size);
  ::std::string* mutable_tool();
  ::std::string* release_tool();
  void set_allocated_tool(::std::string* tool);

  // string command = 4;
  void clear_command();
  static const int kCommandFieldNumber = 4;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  #if LANG_CXX11
  void set_command(::std::string&& value);
  #endif
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.CommandLine)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> args_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::internal::ArenaStringPtr tool_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2finvocation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvocationAttributes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.InvocationAttributes) */ {
 public:
  InvocationAttributes();
  virtual ~InvocationAttributes();

  InvocationAttributes(const InvocationAttributes& from);

  inline InvocationAttributes& operator=(const InvocationAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvocationAttributes(InvocationAttributes&& from) noexcept
    : InvocationAttributes() {
    *this = ::std::move(from);
  }

  inline InvocationAttributes& operator=(InvocationAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvocationAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvocationAttributes* internal_default_instance() {
    return reinterpret_cast<const InvocationAttributes*>(
               &_InvocationAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(InvocationAttributes* other);
  friend void swap(InvocationAttributes& a, InvocationAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvocationAttributes* New() const final {
    return CreateMaybeMessage<InvocationAttributes>(NULL);
  }

  InvocationAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvocationAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvocationAttributes& from);
  void MergeFrom(const InvocationAttributes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvocationAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string users = 2;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 2;
  const ::std::string& users(int index) const;
  ::std::string* mutable_users(int index);
  void set_users(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_users(int index, ::std::string&& value);
  #endif
  void set_users(int index, const char* value);
  void set_users(int index, const char* value, size_t size);
  ::std::string* add_users();
  void add_users(const ::std::string& value);
  #if LANG_CXX11
  void add_users(::std::string&& value);
  #endif
  void add_users(const char* value);
  void add_users(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& users() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_users();

  // repeated string labels = 3;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 3;
  const ::std::string& labels(int index) const;
  ::std::string* mutable_labels(int index);
  void set_labels(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_labels(int index, ::std::string&& value);
  #endif
  void set_labels(int index, const char* value);
  void set_labels(int index, const char* value, size_t size);
  ::std::string* add_labels();
  void add_labels(const ::std::string& value);
  #if LANG_CXX11
  void add_labels(::std::string&& value);
  #endif
  void add_labels(const char* value);
  void add_labels(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& labels() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_labels();

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.InvocationAttributes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> users_;
  ::google::protobuf::RepeatedPtrField< ::std::string> labels_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2finvocation_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Invocation_Id

// string invocation_id = 1;
inline void Invocation_Id::clear_invocation_id() {
  invocation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Invocation_Id::invocation_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Invocation.Id.invocation_id)
  return invocation_id_.GetNoArena();
}
inline void Invocation_Id::set_invocation_id(const ::std::string& value) {
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Invocation.Id.invocation_id)
}
#if LANG_CXX11
inline void Invocation_Id::set_invocation_id(::std::string&& value) {
  
  invocation_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Invocation.Id.invocation_id)
}
#endif
inline void Invocation_Id::set_invocation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Invocation.Id.invocation_id)
}
inline void Invocation_Id::set_invocation_id(const char* value, size_t size) {
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Invocation.Id.invocation_id)
}
inline ::std::string* Invocation_Id::mutable_invocation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Invocation.Id.invocation_id)
  return invocation_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Invocation_Id::release_invocation_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Invocation.Id.invocation_id)
  
  return invocation_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Invocation_Id::set_allocated_invocation_id(::std::string* invocation_id) {
  if (invocation_id != NULL) {
    
  } else {
    
  }
  invocation_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invocation_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Invocation.Id.invocation_id)
}

// -------------------------------------------------------------------

// Invocation

// string name = 1;
inline void Invocation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Invocation::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Invocation.name)
  return name_.GetNoArena();
}
inline void Invocation::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Invocation.name)
}
#if LANG_CXX11
inline void Invocation::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Invocation.name)
}
#endif
inline void Invocation::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Invocation.name)
}
inline void Invocation::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Invocation.name)
}
inline ::std::string* Invocation::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Invocation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Invocation::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Invocation.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Invocation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Invocation.name)
}

// .google.devtools.resultstore.v2.Invocation.Id id = 2;
inline bool Invocation::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void Invocation::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
inline const ::google::devtools::resultstore::v2::Invocation_Id& Invocation::_internal_id() const {
  return *id_;
}
inline const ::google::devtools::resultstore::v2::Invocation_Id& Invocation::id() const {
  const ::google::devtools::resultstore::v2::Invocation_Id* p = id_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Invocation.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::Invocation_Id*>(
      &::google::devtools::resultstore::v2::_Invocation_Id_default_instance_);
}
inline ::google::devtools::resultstore::v2::Invocation_Id* Invocation::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Invocation.id)
  
  ::google::devtools::resultstore::v2::Invocation_Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::Invocation_Id* Invocation::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::Invocation_Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Invocation.id)
  return id_;
}
inline void Invocation::set_allocated_id(::google::devtools::resultstore::v2::Invocation_Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete id_;
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Invocation.id)
}

// .google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;
inline bool Invocation::has_status_attributes() const {
  return this != internal_default_instance() && status_attributes_ != NULL;
}
inline const ::google::devtools::resultstore::v2::StatusAttributes& Invocation::_internal_status_attributes() const {
  return *status_attributes_;
}
inline const ::google::devtools::resultstore::v2::StatusAttributes& Invocation::status_attributes() const {
  const ::google::devtools::resultstore::v2::StatusAttributes* p = status_attributes_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Invocation.status_attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::StatusAttributes*>(
      &::google::devtools::resultstore::v2::_StatusAttributes_default_instance_);
}
inline ::google::devtools::resultstore::v2::StatusAttributes* Invocation::release_status_attributes() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Invocation.status_attributes)
  
  ::google::devtools::resultstore::v2::StatusAttributes* temp = status_attributes_;
  status_attributes_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::StatusAttributes* Invocation::mutable_status_attributes() {
  
  if (status_attributes_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::StatusAttributes>(GetArenaNoVirtual());
    status_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Invocation.status_attributes)
  return status_attributes_;
}
inline void Invocation::set_allocated_status_attributes(::google::devtools::resultstore::v2::StatusAttributes* status_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_attributes_);
  }
  if (status_attributes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status_attributes, submessage_arena);
    }
    
  } else {
    
  }
  status_attributes_ = status_attributes;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Invocation.status_attributes)
}

// .google.devtools.resultstore.v2.Timing timing = 4;
inline bool Invocation::has_timing() const {
  return this != internal_default_instance() && timing_ != NULL;
}
inline const ::google::devtools::resultstore::v2::Timing& Invocation::_internal_timing() const {
  return *timing_;
}
inline const ::google::devtools::resultstore::v2::Timing& Invocation::timing() const {
  const ::google::devtools::resultstore::v2::Timing* p = timing_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Invocation.timing)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::Timing*>(
      &::google::devtools::resultstore::v2::_Timing_default_instance_);
}
inline ::google::devtools::resultstore::v2::Timing* Invocation::release_timing() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Invocation.timing)
  
  ::google::devtools::resultstore::v2::Timing* temp = timing_;
  timing_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::Timing* Invocation::mutable_timing() {
  
  if (timing_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::Timing>(GetArenaNoVirtual());
    timing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Invocation.timing)
  return timing_;
}
inline void Invocation::set_allocated_timing(::google::devtools::resultstore::v2::Timing* timing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timing_);
  }
  if (timing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timing, submessage_arena);
    }
    
  } else {
    
  }
  timing_ = timing;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Invocation.timing)
}

// .google.devtools.resultstore.v2.InvocationAttributes invocation_attributes = 5;
inline bool Invocation::has_invocation_attributes() const {
  return this != internal_default_instance() && invocation_attributes_ != NULL;
}
inline void Invocation::clear_invocation_attributes() {
  if (GetArenaNoVirtual() == NULL && invocation_attributes_ != NULL) {
    delete invocation_attributes_;
  }
  invocation_attributes_ = NULL;
}
inline const ::google::devtools::resultstore::v2::InvocationAttributes& Invocation::_internal_invocation_attributes() const {
  return *invocation_attributes_;
}
inline const ::google::devtools::resultstore::v2::InvocationAttributes& Invocation::invocation_attributes() const {
  const ::google::devtools::resultstore::v2::InvocationAttributes* p = invocation_attributes_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Invocation.invocation_attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::InvocationAttributes*>(
      &::google::devtools::resultstore::v2::_InvocationAttributes_default_instance_);
}
inline ::google::devtools::resultstore::v2::InvocationAttributes* Invocation::release_invocation_attributes() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Invocation.invocation_attributes)
  
  ::google::devtools::resultstore::v2::InvocationAttributes* temp = invocation_attributes_;
  invocation_attributes_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::InvocationAttributes* Invocation::mutable_invocation_attributes() {
  
  if (invocation_attributes_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::InvocationAttributes>(GetArenaNoVirtual());
    invocation_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Invocation.invocation_attributes)
  return invocation_attributes_;
}
inline void Invocation::set_allocated_invocation_attributes(::google::devtools::resultstore::v2::InvocationAttributes* invocation_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete invocation_attributes_;
  }
  if (invocation_attributes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      invocation_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, invocation_attributes, submessage_arena);
    }
    
  } else {
    
  }
  invocation_attributes_ = invocation_attributes;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Invocation.invocation_attributes)
}

// .google.devtools.resultstore.v2.WorkspaceInfo workspace_info = 6;
inline bool Invocation::has_workspace_info() const {
  return this != internal_default_instance() && workspace_info_ != NULL;
}
inline void Invocation::clear_workspace_info() {
  if (GetArenaNoVirtual() == NULL && workspace_info_ != NULL) {
    delete workspace_info_;
  }
  workspace_info_ = NULL;
}
inline const ::google::devtools::resultstore::v2::WorkspaceInfo& Invocation::_internal_workspace_info() const {
  return *workspace_info_;
}
inline const ::google::devtools::resultstore::v2::WorkspaceInfo& Invocation::workspace_info() const {
  const ::google::devtools::resultstore::v2::WorkspaceInfo* p = workspace_info_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Invocation.workspace_info)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::WorkspaceInfo*>(
      &::google::devtools::resultstore::v2::_WorkspaceInfo_default_instance_);
}
inline ::google::devtools::resultstore::v2::WorkspaceInfo* Invocation::release_workspace_info() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Invocation.workspace_info)
  
  ::google::devtools::resultstore::v2::WorkspaceInfo* temp = workspace_info_;
  workspace_info_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::WorkspaceInfo* Invocation::mutable_workspace_info() {
  
  if (workspace_info_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::WorkspaceInfo>(GetArenaNoVirtual());
    workspace_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Invocation.workspace_info)
  return workspace_info_;
}
inline void Invocation::set_allocated_workspace_info(::google::devtools::resultstore::v2::WorkspaceInfo* workspace_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete workspace_info_;
  }
  if (workspace_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      workspace_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, workspace_info, submessage_arena);
    }
    
  } else {
    
  }
  workspace_info_ = workspace_info;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Invocation.workspace_info)
}

// repeated .google.devtools.resultstore.v2.Property properties = 7;
inline int Invocation::properties_size() const {
  return properties_.size();
}
inline ::google::devtools::resultstore::v2::Property* Invocation::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Invocation.properties)
  return properties_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >*
Invocation::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.Invocation.properties)
  return &properties_;
}
inline const ::google::devtools::resultstore::v2::Property& Invocation::properties(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Invocation.properties)
  return properties_.Get(index);
}
inline ::google::devtools::resultstore::v2::Property* Invocation::add_properties() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.Invocation.properties)
  return properties_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >&
Invocation::properties() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.Invocation.properties)
  return properties_;
}

// repeated .google.devtools.resultstore.v2.File files = 8;
inline int Invocation::files_size() const {
  return files_.size();
}
inline ::google::devtools::resultstore::v2::File* Invocation::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Invocation.files)
  return files_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >*
Invocation::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.Invocation.files)
  return &files_;
}
inline const ::google::devtools::resultstore::v2::File& Invocation::files(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Invocation.files)
  return files_.Get(index);
}
inline ::google::devtools::resultstore::v2::File* Invocation::add_files() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.Invocation.files)
  return files_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >&
Invocation::files() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.Invocation.files)
  return files_;
}

// repeated .google.devtools.resultstore.v2.LanguageCoverageSummary coverage_summaries = 9;
inline int Invocation::coverage_summaries_size() const {
  return coverage_summaries_.size();
}
inline ::google::devtools::resultstore::v2::LanguageCoverageSummary* Invocation::mutable_coverage_summaries(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Invocation.coverage_summaries)
  return coverage_summaries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary >*
Invocation::mutable_coverage_summaries() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.Invocation.coverage_summaries)
  return &coverage_summaries_;
}
inline const ::google::devtools::resultstore::v2::LanguageCoverageSummary& Invocation::coverage_summaries(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Invocation.coverage_summaries)
  return coverage_summaries_.Get(index);
}
inline ::google::devtools::resultstore::v2::LanguageCoverageSummary* Invocation::add_coverage_summaries() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.Invocation.coverage_summaries)
  return coverage_summaries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::LanguageCoverageSummary >&
Invocation::coverage_summaries() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.Invocation.coverage_summaries)
  return coverage_summaries_;
}

// -------------------------------------------------------------------

// WorkspaceContext

// -------------------------------------------------------------------

// WorkspaceInfo

// .google.devtools.resultstore.v2.WorkspaceContext workspace_context = 1;
inline bool WorkspaceInfo::has_workspace_context() const {
  return this != internal_default_instance() && workspace_context_ != NULL;
}
inline void WorkspaceInfo::clear_workspace_context() {
  if (GetArenaNoVirtual() == NULL && workspace_context_ != NULL) {
    delete workspace_context_;
  }
  workspace_context_ = NULL;
}
inline const ::google::devtools::resultstore::v2::WorkspaceContext& WorkspaceInfo::_internal_workspace_context() const {
  return *workspace_context_;
}
inline const ::google::devtools::resultstore::v2::WorkspaceContext& WorkspaceInfo::workspace_context() const {
  const ::google::devtools::resultstore::v2::WorkspaceContext* p = workspace_context_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.WorkspaceInfo.workspace_context)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::WorkspaceContext*>(
      &::google::devtools::resultstore::v2::_WorkspaceContext_default_instance_);
}
inline ::google::devtools::resultstore::v2::WorkspaceContext* WorkspaceInfo::release_workspace_context() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.WorkspaceInfo.workspace_context)
  
  ::google::devtools::resultstore::v2::WorkspaceContext* temp = workspace_context_;
  workspace_context_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::WorkspaceContext* WorkspaceInfo::mutable_workspace_context() {
  
  if (workspace_context_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::WorkspaceContext>(GetArenaNoVirtual());
    workspace_context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.WorkspaceInfo.workspace_context)
  return workspace_context_;
}
inline void WorkspaceInfo::set_allocated_workspace_context(::google::devtools::resultstore::v2::WorkspaceContext* workspace_context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete workspace_context_;
  }
  if (workspace_context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      workspace_context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, workspace_context, submessage_arena);
    }
    
  } else {
    
  }
  workspace_context_ = workspace_context;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.WorkspaceInfo.workspace_context)
}

// string hostname = 3;
inline void WorkspaceInfo::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkspaceInfo::hostname() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.WorkspaceInfo.hostname)
  return hostname_.GetNoArena();
}
inline void WorkspaceInfo::set_hostname(const ::std::string& value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.WorkspaceInfo.hostname)
}
#if LANG_CXX11
inline void WorkspaceInfo::set_hostname(::std::string&& value) {
  
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.WorkspaceInfo.hostname)
}
#endif
inline void WorkspaceInfo::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.WorkspaceInfo.hostname)
}
inline void WorkspaceInfo::set_hostname(const char* value, size_t size) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.WorkspaceInfo.hostname)
}
inline ::std::string* WorkspaceInfo::mutable_hostname() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.WorkspaceInfo.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkspaceInfo::release_hostname() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.WorkspaceInfo.hostname)
  
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkspaceInfo::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.WorkspaceInfo.hostname)
}

// string working_directory = 4;
inline void WorkspaceInfo::clear_working_directory() {
  working_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkspaceInfo::working_directory() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.WorkspaceInfo.working_directory)
  return working_directory_.GetNoArena();
}
inline void WorkspaceInfo::set_working_directory(const ::std::string& value) {
  
  working_directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.WorkspaceInfo.working_directory)
}
#if LANG_CXX11
inline void WorkspaceInfo::set_working_directory(::std::string&& value) {
  
  working_directory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.WorkspaceInfo.working_directory)
}
#endif
inline void WorkspaceInfo::set_working_directory(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  working_directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.WorkspaceInfo.working_directory)
}
inline void WorkspaceInfo::set_working_directory(const char* value, size_t size) {
  
  working_directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.WorkspaceInfo.working_directory)
}
inline ::std::string* WorkspaceInfo::mutable_working_directory() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.WorkspaceInfo.working_directory)
  return working_directory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkspaceInfo::release_working_directory() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.WorkspaceInfo.working_directory)
  
  return working_directory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkspaceInfo::set_allocated_working_directory(::std::string* working_directory) {
  if (working_directory != NULL) {
    
  } else {
    
  }
  working_directory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), working_directory);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.WorkspaceInfo.working_directory)
}

// string tool_tag = 5;
inline void WorkspaceInfo::clear_tool_tag() {
  tool_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkspaceInfo::tool_tag() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.WorkspaceInfo.tool_tag)
  return tool_tag_.GetNoArena();
}
inline void WorkspaceInfo::set_tool_tag(const ::std::string& value) {
  
  tool_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.WorkspaceInfo.tool_tag)
}
#if LANG_CXX11
inline void WorkspaceInfo::set_tool_tag(::std::string&& value) {
  
  tool_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.WorkspaceInfo.tool_tag)
}
#endif
inline void WorkspaceInfo::set_tool_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tool_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.WorkspaceInfo.tool_tag)
}
inline void WorkspaceInfo::set_tool_tag(const char* value, size_t size) {
  
  tool_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.WorkspaceInfo.tool_tag)
}
inline ::std::string* WorkspaceInfo::mutable_tool_tag() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.WorkspaceInfo.tool_tag)
  return tool_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkspaceInfo::release_tool_tag() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.WorkspaceInfo.tool_tag)
  
  return tool_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkspaceInfo::set_allocated_tool_tag(::std::string* tool_tag) {
  if (tool_tag != NULL) {
    
  } else {
    
  }
  tool_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tool_tag);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.WorkspaceInfo.tool_tag)
}

// repeated .google.devtools.resultstore.v2.CommandLine command_lines = 7;
inline int WorkspaceInfo::command_lines_size() const {
  return command_lines_.size();
}
inline void WorkspaceInfo::clear_command_lines() {
  command_lines_.Clear();
}
inline ::google::devtools::resultstore::v2::CommandLine* WorkspaceInfo::mutable_command_lines(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.WorkspaceInfo.command_lines)
  return command_lines_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::CommandLine >*
WorkspaceInfo::mutable_command_lines() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.WorkspaceInfo.command_lines)
  return &command_lines_;
}
inline const ::google::devtools::resultstore::v2::CommandLine& WorkspaceInfo::command_lines(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.WorkspaceInfo.command_lines)
  return command_lines_.Get(index);
}
inline ::google::devtools::resultstore::v2::CommandLine* WorkspaceInfo::add_command_lines() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.WorkspaceInfo.command_lines)
  return command_lines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::CommandLine >&
WorkspaceInfo::command_lines() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.WorkspaceInfo.command_lines)
  return command_lines_;
}

// -------------------------------------------------------------------

// CommandLine

// string label = 1;
inline void CommandLine::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandLine::label() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.CommandLine.label)
  return label_.GetNoArena();
}
inline void CommandLine::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.CommandLine.label)
}
#if LANG_CXX11
inline void CommandLine::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.CommandLine.label)
}
#endif
inline void CommandLine::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.CommandLine.label)
}
inline void CommandLine::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.CommandLine.label)
}
inline ::std::string* CommandLine::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.CommandLine.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandLine::release_label() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.CommandLine.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandLine::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.CommandLine.label)
}

// string tool = 2;
inline void CommandLine::clear_tool() {
  tool_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandLine::tool() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.CommandLine.tool)
  return tool_.GetNoArena();
}
inline void CommandLine::set_tool(const ::std::string& value) {
  
  tool_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.CommandLine.tool)
}
#if LANG_CXX11
inline void CommandLine::set_tool(::std::string&& value) {
  
  tool_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.CommandLine.tool)
}
#endif
inline void CommandLine::set_tool(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tool_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.CommandLine.tool)
}
inline void CommandLine::set_tool(const char* value, size_t size) {
  
  tool_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.CommandLine.tool)
}
inline ::std::string* CommandLine::mutable_tool() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.CommandLine.tool)
  return tool_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandLine::release_tool() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.CommandLine.tool)
  
  return tool_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandLine::set_allocated_tool(::std::string* tool) {
  if (tool != NULL) {
    
  } else {
    
  }
  tool_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tool);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.CommandLine.tool)
}

// repeated string args = 3;
inline int CommandLine::args_size() const {
  return args_.size();
}
inline void CommandLine::clear_args() {
  args_.Clear();
}
inline const ::std::string& CommandLine::args(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.CommandLine.args)
  return args_.Get(index);
}
inline ::std::string* CommandLine::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.CommandLine.args)
  return args_.Mutable(index);
}
inline void CommandLine::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.CommandLine.args)
  args_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CommandLine::set_args(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.CommandLine.args)
  args_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CommandLine::set_args(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.CommandLine.args)
}
inline void CommandLine::set_args(int index, const char* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.CommandLine.args)
}
inline ::std::string* CommandLine::add_args() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.resultstore.v2.CommandLine.args)
  return args_.Add();
}
inline void CommandLine::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.CommandLine.args)
}
#if LANG_CXX11
inline void CommandLine::add_args(::std::string&& value) {
  args_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.CommandLine.args)
}
#endif
inline void CommandLine::add_args(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.resultstore.v2.CommandLine.args)
}
inline void CommandLine::add_args(const char* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.resultstore.v2.CommandLine.args)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CommandLine::args() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.CommandLine.args)
  return args_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CommandLine::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.CommandLine.args)
  return &args_;
}

// string command = 4;
inline void CommandLine::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandLine::command() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.CommandLine.command)
  return command_.GetNoArena();
}
inline void CommandLine::set_command(const ::std::string& value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.CommandLine.command)
}
#if LANG_CXX11
inline void CommandLine::set_command(::std::string&& value) {
  
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.CommandLine.command)
}
#endif
inline void CommandLine::set_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.CommandLine.command)
}
inline void CommandLine::set_command(const char* value, size_t size) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.CommandLine.command)
}
inline ::std::string* CommandLine::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.CommandLine.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandLine::release_command() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.CommandLine.command)
  
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandLine::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.CommandLine.command)
}

// -------------------------------------------------------------------

// InvocationAttributes

// string project_id = 1;
inline void InvocationAttributes::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvocationAttributes::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.InvocationAttributes.project_id)
  return project_id_.GetNoArena();
}
inline void InvocationAttributes::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.InvocationAttributes.project_id)
}
#if LANG_CXX11
inline void InvocationAttributes::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.InvocationAttributes.project_id)
}
#endif
inline void InvocationAttributes::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.InvocationAttributes.project_id)
}
inline void InvocationAttributes::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.InvocationAttributes.project_id)
}
inline ::std::string* InvocationAttributes::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.InvocationAttributes.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvocationAttributes::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.InvocationAttributes.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvocationAttributes::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.InvocationAttributes.project_id)
}

// repeated string users = 2;
inline int InvocationAttributes::users_size() const {
  return users_.size();
}
inline void InvocationAttributes::clear_users() {
  users_.Clear();
}
inline const ::std::string& InvocationAttributes::users(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.InvocationAttributes.users)
  return users_.Get(index);
}
inline ::std::string* InvocationAttributes::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.InvocationAttributes.users)
  return users_.Mutable(index);
}
inline void InvocationAttributes::set_users(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.InvocationAttributes.users)
  users_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void InvocationAttributes::set_users(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.InvocationAttributes.users)
  users_.Mutable(index)->assign(std::move(value));
}
#endif
inline void InvocationAttributes::set_users(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  users_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.InvocationAttributes.users)
}
inline void InvocationAttributes::set_users(int index, const char* value, size_t size) {
  users_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.InvocationAttributes.users)
}
inline ::std::string* InvocationAttributes::add_users() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.resultstore.v2.InvocationAttributes.users)
  return users_.Add();
}
inline void InvocationAttributes::add_users(const ::std::string& value) {
  users_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.InvocationAttributes.users)
}
#if LANG_CXX11
inline void InvocationAttributes::add_users(::std::string&& value) {
  users_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.InvocationAttributes.users)
}
#endif
inline void InvocationAttributes::add_users(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  users_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.resultstore.v2.InvocationAttributes.users)
}
inline void InvocationAttributes::add_users(const char* value, size_t size) {
  users_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.resultstore.v2.InvocationAttributes.users)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
InvocationAttributes::users() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.InvocationAttributes.users)
  return users_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
InvocationAttributes::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.InvocationAttributes.users)
  return &users_;
}

// repeated string labels = 3;
inline int InvocationAttributes::labels_size() const {
  return labels_.size();
}
inline void InvocationAttributes::clear_labels() {
  labels_.Clear();
}
inline const ::std::string& InvocationAttributes::labels(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.InvocationAttributes.labels)
  return labels_.Get(index);
}
inline ::std::string* InvocationAttributes::mutable_labels(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.InvocationAttributes.labels)
  return labels_.Mutable(index);
}
inline void InvocationAttributes::set_labels(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.InvocationAttributes.labels)
  labels_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void InvocationAttributes::set_labels(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.InvocationAttributes.labels)
  labels_.Mutable(index)->assign(std::move(value));
}
#endif
inline void InvocationAttributes::set_labels(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  labels_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.InvocationAttributes.labels)
}
inline void InvocationAttributes::set_labels(int index, const char* value, size_t size) {
  labels_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.InvocationAttributes.labels)
}
inline ::std::string* InvocationAttributes::add_labels() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.resultstore.v2.InvocationAttributes.labels)
  return labels_.Add();
}
inline void InvocationAttributes::add_labels(const ::std::string& value) {
  labels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.InvocationAttributes.labels)
}
#if LANG_CXX11
inline void InvocationAttributes::add_labels(::std::string&& value) {
  labels_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.InvocationAttributes.labels)
}
#endif
inline void InvocationAttributes::add_labels(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  labels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.resultstore.v2.InvocationAttributes.labels)
}
inline void InvocationAttributes::add_labels(const char* value, size_t size) {
  labels_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.resultstore.v2.InvocationAttributes.labels)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
InvocationAttributes::labels() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.InvocationAttributes.labels)
  return labels_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
InvocationAttributes::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.InvocationAttributes.labels)
  return &labels_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2finvocation_2eproto
