// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/file.proto

#ifndef PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2ffile_2eproto
#define PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2ffile_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fresultstore_2fv2_2ffile_2eproto 

namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2ffile_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2ffile_2eproto
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {
class ArchiveEntry;
class ArchiveEntryDefaultTypeInternal;
extern ArchiveEntryDefaultTypeInternal _ArchiveEntry_default_instance_;
class File;
class FileDefaultTypeInternal;
extern FileDefaultTypeInternal _File_default_instance_;
}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::devtools::resultstore::v2::ArchiveEntry* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::ArchiveEntry>(Arena*);
template<> ::google::devtools::resultstore::v2::File* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::File>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {

// ===================================================================

class File : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.File) */ {
 public:
  File();
  virtual ~File();

  File(const File& from);

  inline File& operator=(const File& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  File(File&& from) noexcept
    : File() {
    *this = ::std::move(from);
  }

  inline File& operator=(File&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const File& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const File* internal_default_instance() {
    return reinterpret_cast<const File*>(
               &_File_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(File* other);
  friend void swap(File& a, File& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline File* New() const final {
    return CreateMaybeMessage<File>(NULL);
  }

  File* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<File>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const File& from);
  void MergeFrom(const File& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(File* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_uid(::std::string&& value);
  #endif
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // string uri = 2;
  void clear_uri();
  static const int kUriFieldNumber = 2;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string content_type = 4;
  void clear_content_type();
  static const int kContentTypeFieldNumber = 4;
  const ::std::string& content_type() const;
  void set_content_type(const ::std::string& value);
  #if LANG_CXX11
  void set_content_type(::std::string&& value);
  #endif
  void set_content_type(const char* value);
  void set_content_type(const char* value, size_t size);
  ::std::string* mutable_content_type();
  ::std::string* release_content_type();
  void set_allocated_content_type(::std::string* content_type);

  // string content_viewer = 6;
  void clear_content_viewer();
  static const int kContentViewerFieldNumber = 6;
  const ::std::string& content_viewer() const;
  void set_content_viewer(const ::std::string& value);
  #if LANG_CXX11
  void set_content_viewer(::std::string&& value);
  #endif
  void set_content_viewer(const char* value);
  void set_content_viewer(const char* value, size_t size);
  ::std::string* mutable_content_viewer();
  ::std::string* release_content_viewer();
  void set_allocated_content_viewer(::std::string* content_viewer);

  // string description = 8;
  void clear_description();
  static const int kDescriptionFieldNumber = 8;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // .google.protobuf.Int64Value length = 3;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 3;
  private:
  const ::google::protobuf::Int64Value& _internal_length() const;
  public:
  const ::google::protobuf::Int64Value& length() const;
  ::google::protobuf::Int64Value* release_length();
  ::google::protobuf::Int64Value* mutable_length();
  void set_allocated_length(::google::protobuf::Int64Value* length);

  // .google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;
  bool has_archive_entry() const;
  void clear_archive_entry();
  static const int kArchiveEntryFieldNumber = 5;
  private:
  const ::google::devtools::resultstore::v2::ArchiveEntry& _internal_archive_entry() const;
  public:
  const ::google::devtools::resultstore::v2::ArchiveEntry& archive_entry() const;
  ::google::devtools::resultstore::v2::ArchiveEntry* release_archive_entry();
  ::google::devtools::resultstore::v2::ArchiveEntry* mutable_archive_entry();
  void set_allocated_archive_entry(::google::devtools::resultstore::v2::ArchiveEntry* archive_entry);

  // bool hidden = 7;
  void clear_hidden();
  static const int kHiddenFieldNumber = 7;
  bool hidden() const;
  void set_hidden(bool value);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.File)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr content_type_;
  ::google::protobuf::internal::ArenaStringPtr content_viewer_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::Int64Value* length_;
  ::google::devtools::resultstore::v2::ArchiveEntry* archive_entry_;
  bool hidden_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ArchiveEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.ArchiveEntry) */ {
 public:
  ArchiveEntry();
  virtual ~ArchiveEntry();

  ArchiveEntry(const ArchiveEntry& from);

  inline ArchiveEntry& operator=(const ArchiveEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArchiveEntry(ArchiveEntry&& from) noexcept
    : ArchiveEntry() {
    *this = ::std::move(from);
  }

  inline ArchiveEntry& operator=(ArchiveEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArchiveEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArchiveEntry* internal_default_instance() {
    return reinterpret_cast<const ArchiveEntry*>(
               &_ArchiveEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ArchiveEntry* other);
  friend void swap(ArchiveEntry& a, ArchiveEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArchiveEntry* New() const final {
    return CreateMaybeMessage<ArchiveEntry>(NULL);
  }

  ArchiveEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ArchiveEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ArchiveEntry& from);
  void MergeFrom(const ArchiveEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArchiveEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // string content_type = 3;
  void clear_content_type();
  static const int kContentTypeFieldNumber = 3;
  const ::std::string& content_type() const;
  void set_content_type(const ::std::string& value);
  #if LANG_CXX11
  void set_content_type(::std::string&& value);
  #endif
  void set_content_type(const char* value);
  void set_content_type(const char* value, size_t size);
  ::std::string* mutable_content_type();
  ::std::string* release_content_type();
  void set_allocated_content_type(::std::string* content_type);

  // .google.protobuf.Int64Value length = 2;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_length() const;
  public:
  const ::google::protobuf::Int64Value& length() const;
  ::google::protobuf::Int64Value* release_length();
  ::google::protobuf::Int64Value* mutable_length();
  void set_allocated_length(::google::protobuf::Int64Value* length);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.ArchiveEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr content_type_;
  ::google::protobuf::Int64Value* length_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2ffile_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// File

// string uid = 1;
inline void File::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::uid() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.File.uid)
  return uid_.GetNoArena();
}
inline void File::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.File.uid)
}
#if LANG_CXX11
inline void File::set_uid(::std::string&& value) {
  
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.File.uid)
}
#endif
inline void File::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.File.uid)
}
inline void File::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.File.uid)
}
inline ::std::string* File::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.File.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_uid() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.File.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.File.uid)
}

// string uri = 2;
inline void File::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::uri() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.File.uri)
  return uri_.GetNoArena();
}
inline void File::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.File.uri)
}
#if LANG_CXX11
inline void File::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.File.uri)
}
#endif
inline void File::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.File.uri)
}
inline void File::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.File.uri)
}
inline ::std::string* File::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.File.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_uri() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.File.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.File.uri)
}

// .google.protobuf.Int64Value length = 3;
inline bool File::has_length() const {
  return this != internal_default_instance() && length_ != NULL;
}
inline const ::google::protobuf::Int64Value& File::_internal_length() const {
  return *length_;
}
inline const ::google::protobuf::Int64Value& File::length() const {
  const ::google::protobuf::Int64Value* p = length_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.File.length)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* File::release_length() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.File.length)
  
  ::google::protobuf::Int64Value* temp = length_;
  length_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* File::mutable_length() {
  
  if (length_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    length_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.File.length)
  return length_;
}
inline void File::set_allocated_length(::google::protobuf::Int64Value* length) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(length_);
  }
  if (length) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(length)->GetArena();
    if (message_arena != submessage_arena) {
      length = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, length, submessage_arena);
    }
    
  } else {
    
  }
  length_ = length;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.File.length)
}

// string content_type = 4;
inline void File::clear_content_type() {
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::content_type() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.File.content_type)
  return content_type_.GetNoArena();
}
inline void File::set_content_type(const ::std::string& value) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.File.content_type)
}
#if LANG_CXX11
inline void File::set_content_type(::std::string&& value) {
  
  content_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.File.content_type)
}
#endif
inline void File::set_content_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.File.content_type)
}
inline void File::set_content_type(const char* value, size_t size) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.File.content_type)
}
inline ::std::string* File::mutable_content_type() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.File.content_type)
  return content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_content_type() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.File.content_type)
  
  return content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_content_type(::std::string* content_type) {
  if (content_type != NULL) {
    
  } else {
    
  }
  content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_type);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.File.content_type)
}

// .google.devtools.resultstore.v2.ArchiveEntry archive_entry = 5;
inline bool File::has_archive_entry() const {
  return this != internal_default_instance() && archive_entry_ != NULL;
}
inline void File::clear_archive_entry() {
  if (GetArenaNoVirtual() == NULL && archive_entry_ != NULL) {
    delete archive_entry_;
  }
  archive_entry_ = NULL;
}
inline const ::google::devtools::resultstore::v2::ArchiveEntry& File::_internal_archive_entry() const {
  return *archive_entry_;
}
inline const ::google::devtools::resultstore::v2::ArchiveEntry& File::archive_entry() const {
  const ::google::devtools::resultstore::v2::ArchiveEntry* p = archive_entry_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.File.archive_entry)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::ArchiveEntry*>(
      &::google::devtools::resultstore::v2::_ArchiveEntry_default_instance_);
}
inline ::google::devtools::resultstore::v2::ArchiveEntry* File::release_archive_entry() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.File.archive_entry)
  
  ::google::devtools::resultstore::v2::ArchiveEntry* temp = archive_entry_;
  archive_entry_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::ArchiveEntry* File::mutable_archive_entry() {
  
  if (archive_entry_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::ArchiveEntry>(GetArenaNoVirtual());
    archive_entry_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.File.archive_entry)
  return archive_entry_;
}
inline void File::set_allocated_archive_entry(::google::devtools::resultstore::v2::ArchiveEntry* archive_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete archive_entry_;
  }
  if (archive_entry) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      archive_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, archive_entry, submessage_arena);
    }
    
  } else {
    
  }
  archive_entry_ = archive_entry;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.File.archive_entry)
}

// string content_viewer = 6;
inline void File::clear_content_viewer() {
  content_viewer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::content_viewer() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.File.content_viewer)
  return content_viewer_.GetNoArena();
}
inline void File::set_content_viewer(const ::std::string& value) {
  
  content_viewer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.File.content_viewer)
}
#if LANG_CXX11
inline void File::set_content_viewer(::std::string&& value) {
  
  content_viewer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.File.content_viewer)
}
#endif
inline void File::set_content_viewer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_viewer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.File.content_viewer)
}
inline void File::set_content_viewer(const char* value, size_t size) {
  
  content_viewer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.File.content_viewer)
}
inline ::std::string* File::mutable_content_viewer() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.File.content_viewer)
  return content_viewer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_content_viewer() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.File.content_viewer)
  
  return content_viewer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_content_viewer(::std::string* content_viewer) {
  if (content_viewer != NULL) {
    
  } else {
    
  }
  content_viewer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_viewer);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.File.content_viewer)
}

// bool hidden = 7;
inline void File::clear_hidden() {
  hidden_ = false;
}
inline bool File::hidden() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.File.hidden)
  return hidden_;
}
inline void File::set_hidden(bool value) {
  
  hidden_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.File.hidden)
}

// string description = 8;
inline void File::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File::description() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.File.description)
  return description_.GetNoArena();
}
inline void File::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.File.description)
}
#if LANG_CXX11
inline void File::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.File.description)
}
#endif
inline void File::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.File.description)
}
inline void File::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.File.description)
}
inline ::std::string* File::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.File.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File::release_description() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.File.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.File.description)
}

// -------------------------------------------------------------------

// ArchiveEntry

// string path = 1;
inline void ArchiveEntry::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ArchiveEntry::path() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ArchiveEntry.path)
  return path_.GetNoArena();
}
inline void ArchiveEntry::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ArchiveEntry.path)
}
#if LANG_CXX11
inline void ArchiveEntry::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ArchiveEntry.path)
}
#endif
inline void ArchiveEntry::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ArchiveEntry.path)
}
inline void ArchiveEntry::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ArchiveEntry.path)
}
inline ::std::string* ArchiveEntry::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ArchiveEntry.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArchiveEntry::release_path() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ArchiveEntry.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArchiveEntry::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ArchiveEntry.path)
}

// .google.protobuf.Int64Value length = 2;
inline bool ArchiveEntry::has_length() const {
  return this != internal_default_instance() && length_ != NULL;
}
inline const ::google::protobuf::Int64Value& ArchiveEntry::_internal_length() const {
  return *length_;
}
inline const ::google::protobuf::Int64Value& ArchiveEntry::length() const {
  const ::google::protobuf::Int64Value* p = length_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ArchiveEntry.length)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* ArchiveEntry::release_length() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ArchiveEntry.length)
  
  ::google::protobuf::Int64Value* temp = length_;
  length_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* ArchiveEntry::mutable_length() {
  
  if (length_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    length_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ArchiveEntry.length)
  return length_;
}
inline void ArchiveEntry::set_allocated_length(::google::protobuf::Int64Value* length) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(length_);
  }
  if (length) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(length)->GetArena();
    if (message_arena != submessage_arena) {
      length = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, length, submessage_arena);
    }
    
  } else {
    
  }
  length_ = length;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ArchiveEntry.length)
}

// string content_type = 3;
inline void ArchiveEntry::clear_content_type() {
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ArchiveEntry::content_type() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.ArchiveEntry.content_type)
  return content_type_.GetNoArena();
}
inline void ArchiveEntry::set_content_type(const ::std::string& value) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.ArchiveEntry.content_type)
}
#if LANG_CXX11
inline void ArchiveEntry::set_content_type(::std::string&& value) {
  
  content_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.ArchiveEntry.content_type)
}
#endif
inline void ArchiveEntry::set_content_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.ArchiveEntry.content_type)
}
inline void ArchiveEntry::set_content_type(const char* value, size_t size) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.ArchiveEntry.content_type)
}
inline ::std::string* ArchiveEntry::mutable_content_type() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.ArchiveEntry.content_type)
  return content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArchiveEntry::release_content_type() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.ArchiveEntry.content_type)
  
  return content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArchiveEntry::set_allocated_content_type(::std::string* content_type) {
  if (content_type != NULL) {
    
  } else {
    
  }
  content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_type);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.ArchiveEntry.content_type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2ffile_2eproto
