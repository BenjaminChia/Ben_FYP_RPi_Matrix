// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/devtools/resultstore/v2/resultstore_download.proto
// Original file comments:
// Copyright 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto__INCLUDED
#define GRPC_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto__INCLUDED

#include "google/devtools/resultstore/v2/resultstore_download.pb.h"

#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {

// This is the interface used to download information from the database.
//
// Every request supports setting a response FieldMask via the 'fields'
// parameter.
// Each resource in this interface carries a name field that
// identifies the resource.
class ResultStoreDownload final {
 public:
  static constexpr char const* service_full_name() {
    return "google.devtools.resultstore.v2.ResultStoreDownload";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Retrieves the invocation with the given name.
    //
    // An error will be reported in the following cases:
    // - If the invocation is not found.
    // - If the given invocation name is badly formatted.
    virtual ::grpc::Status GetInvocation(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest& request, ::google::devtools::resultstore::v2::Invocation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Invocation>> AsyncGetInvocation(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Invocation>>(AsyncGetInvocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Invocation>> PrepareAsyncGetInvocation(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Invocation>>(PrepareAsyncGetInvocationRaw(context, request, cq));
    }
    // Searches for invocations matching the given query parameters.
    //
    //
    // An error will be reported in the following cases:
    // - If a query string is not provided
    virtual ::grpc::Status SearchInvocations(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest& request, ::google::devtools::resultstore::v2::SearchInvocationsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::SearchInvocationsResponse>> AsyncSearchInvocations(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::SearchInvocationsResponse>>(AsyncSearchInvocationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::SearchInvocationsResponse>> PrepareAsyncSearchInvocations(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::SearchInvocationsResponse>>(PrepareAsyncSearchInvocationsRaw(context, request, cq));
    }
    // Retrieves the configuration with the given name.
    //
    // An error will be reported in the following cases:
    // - If the configuration or its parent invocation is not found.
    // - If the given configuration name is badly formatted.
    virtual ::grpc::Status GetConfiguration(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest& request, ::google::devtools::resultstore::v2::Configuration* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Configuration>> AsyncGetConfiguration(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Configuration>>(AsyncGetConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Configuration>> PrepareAsyncGetConfiguration(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Configuration>>(PrepareAsyncGetConfigurationRaw(context, request, cq));
    }
    // Retrieves all configurations for a parent invocation.
    // This might be limited by user or server,
    // in which case a continuation token is provided.
    //
    // An error will be reported in the following cases:
    // - If the parent invocation is not found.
    // - If the given parent invocation name is badly formatted.
    virtual ::grpc::Status ListConfigurations(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest& request, ::google::devtools::resultstore::v2::ListConfigurationsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListConfigurationsResponse>> AsyncListConfigurations(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListConfigurationsResponse>>(AsyncListConfigurationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListConfigurationsResponse>> PrepareAsyncListConfigurations(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListConfigurationsResponse>>(PrepareAsyncListConfigurationsRaw(context, request, cq));
    }
    // Retrieves the target with the given name.
    //
    // An error will be reported in the following cases:
    // - If the target or its parent invocation is not found.
    // - If the given target name is badly formatted.
    virtual ::grpc::Status GetTarget(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest& request, ::google::devtools::resultstore::v2::Target* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Target>> AsyncGetTarget(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Target>>(AsyncGetTargetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Target>> PrepareAsyncGetTarget(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Target>>(PrepareAsyncGetTargetRaw(context, request, cq));
    }
    // Retrieves all targets for a parent invocation.  This might be limited by
    // user or server, in which case a continuation token is provided.
    //
    // An error will be reported in the following cases:
    // - If the parent is not found.
    // - If the given parent name is badly formatted.
    virtual ::grpc::Status ListTargets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest& request, ::google::devtools::resultstore::v2::ListTargetsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListTargetsResponse>> AsyncListTargets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListTargetsResponse>>(AsyncListTargetsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListTargetsResponse>> PrepareAsyncListTargets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListTargetsResponse>>(PrepareAsyncListTargetsRaw(context, request, cq));
    }
    // Retrieves the configured target with the given name.
    //
    // An error will be reported in the following cases:
    // - If the configured target is not found.
    // - If the given name is badly formatted.
    virtual ::grpc::Status GetConfiguredTarget(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest& request, ::google::devtools::resultstore::v2::ConfiguredTarget* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ConfiguredTarget>> AsyncGetConfiguredTarget(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ConfiguredTarget>>(AsyncGetConfiguredTargetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ConfiguredTarget>> PrepareAsyncGetConfiguredTarget(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ConfiguredTarget>>(PrepareAsyncGetConfiguredTargetRaw(context, request, cq));
    }
    // Retrieves all configured targets for a parent invocation/target.
    // This might be limited by user or server, in which case a continuation
    // token is provided.  Supports '-' for targetId meaning all targets.
    //
    // An error will be reported in the following cases:
    // - If the parent is not found.
    // - If the given parent name is badly formatted.
    virtual ::grpc::Status ListConfiguredTargets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest& request, ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>> AsyncListConfiguredTargets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>>(AsyncListConfiguredTargetsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>> PrepareAsyncListConfiguredTargets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>>(PrepareAsyncListConfiguredTargetsRaw(context, request, cq));
    }
    // Retrieves the action with the given name.
    //
    // An error will be reported in the following cases:
    // - If the action is not found.
    // - If the given name is badly formatted.
    virtual ::grpc::Status GetAction(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetActionRequest& request, ::google::devtools::resultstore::v2::Action* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Action>> AsyncGetAction(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetActionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Action>>(AsyncGetActionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Action>> PrepareAsyncGetAction(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetActionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Action>>(PrepareAsyncGetActionRaw(context, request, cq));
    }
    // Retrieves all actions for a parent invocation/target/configuration.
    // This might be limited by user or server, in which case a continuation
    // token is provided.  Supports '-' for configurationId to mean all
    // actions for all configurations for a target, or '-' for targetId and
    // configurationId to mean all actions for all configurations and all targets.
    // Does not support targetId '-' with a specified configuration.
    //
    // An error will be reported in the following cases:
    // - If the parent is not found.
    // - If the given parent name is badly formatted.
    virtual ::grpc::Status ListActions(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest& request, ::google::devtools::resultstore::v2::ListActionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListActionsResponse>> AsyncListActions(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListActionsResponse>>(AsyncListActionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListActionsResponse>> PrepareAsyncListActions(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListActionsResponse>>(PrepareAsyncListActionsRaw(context, request, cq));
    }
    // Retrieves the file set with the given name.
    //
    // An error will be reported in the following cases:
    // - If the file set or its parent invocation is not found.
    // - If the given file set name is badly formatted.
    virtual ::grpc::Status GetFileSet(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest& request, ::google::devtools::resultstore::v2::FileSet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::FileSet>> AsyncGetFileSet(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::FileSet>>(AsyncGetFileSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::FileSet>> PrepareAsyncGetFileSet(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::FileSet>>(PrepareAsyncGetFileSetRaw(context, request, cq));
    }
    // Retrieves all file sets for a parent invocation.
    // This might be limited by user or server,
    // in which case a continuation token is provided.
    //
    // An error will be reported in the following cases:
    // - If the parent invocation is not found.
    // - If the given parent invocation name is badly formatted.
    virtual ::grpc::Status ListFileSets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest& request, ::google::devtools::resultstore::v2::ListFileSetsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListFileSetsResponse>> AsyncListFileSets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListFileSetsResponse>>(AsyncListFileSetsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListFileSetsResponse>> PrepareAsyncListFileSets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListFileSetsResponse>>(PrepareAsyncListFileSetsRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Invocation>* AsyncGetInvocationRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Invocation>* PrepareAsyncGetInvocationRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::SearchInvocationsResponse>* AsyncSearchInvocationsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::SearchInvocationsResponse>* PrepareAsyncSearchInvocationsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Configuration>* AsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Configuration>* PrepareAsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListConfigurationsResponse>* AsyncListConfigurationsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListConfigurationsResponse>* PrepareAsyncListConfigurationsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Target>* AsyncGetTargetRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Target>* PrepareAsyncGetTargetRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListTargetsResponse>* AsyncListTargetsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListTargetsResponse>* PrepareAsyncListTargetsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ConfiguredTarget>* AsyncGetConfiguredTargetRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ConfiguredTarget>* PrepareAsyncGetConfiguredTargetRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>* AsyncListConfiguredTargetsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>* PrepareAsyncListConfiguredTargetsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Action>* AsyncGetActionRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetActionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::Action>* PrepareAsyncGetActionRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetActionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListActionsResponse>* AsyncListActionsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListActionsResponse>* PrepareAsyncListActionsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::FileSet>* AsyncGetFileSetRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::FileSet>* PrepareAsyncGetFileSetRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListFileSetsResponse>* AsyncListFileSetsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::devtools::resultstore::v2::ListFileSetsResponse>* PrepareAsyncListFileSetsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status GetInvocation(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest& request, ::google::devtools::resultstore::v2::Invocation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Invocation>> AsyncGetInvocation(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Invocation>>(AsyncGetInvocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Invocation>> PrepareAsyncGetInvocation(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Invocation>>(PrepareAsyncGetInvocationRaw(context, request, cq));
    }
    ::grpc::Status SearchInvocations(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest& request, ::google::devtools::resultstore::v2::SearchInvocationsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::SearchInvocationsResponse>> AsyncSearchInvocations(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::SearchInvocationsResponse>>(AsyncSearchInvocationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::SearchInvocationsResponse>> PrepareAsyncSearchInvocations(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::SearchInvocationsResponse>>(PrepareAsyncSearchInvocationsRaw(context, request, cq));
    }
    ::grpc::Status GetConfiguration(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest& request, ::google::devtools::resultstore::v2::Configuration* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Configuration>> AsyncGetConfiguration(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Configuration>>(AsyncGetConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Configuration>> PrepareAsyncGetConfiguration(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Configuration>>(PrepareAsyncGetConfigurationRaw(context, request, cq));
    }
    ::grpc::Status ListConfigurations(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest& request, ::google::devtools::resultstore::v2::ListConfigurationsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListConfigurationsResponse>> AsyncListConfigurations(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListConfigurationsResponse>>(AsyncListConfigurationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListConfigurationsResponse>> PrepareAsyncListConfigurations(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListConfigurationsResponse>>(PrepareAsyncListConfigurationsRaw(context, request, cq));
    }
    ::grpc::Status GetTarget(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest& request, ::google::devtools::resultstore::v2::Target* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Target>> AsyncGetTarget(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Target>>(AsyncGetTargetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Target>> PrepareAsyncGetTarget(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Target>>(PrepareAsyncGetTargetRaw(context, request, cq));
    }
    ::grpc::Status ListTargets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest& request, ::google::devtools::resultstore::v2::ListTargetsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListTargetsResponse>> AsyncListTargets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListTargetsResponse>>(AsyncListTargetsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListTargetsResponse>> PrepareAsyncListTargets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListTargetsResponse>>(PrepareAsyncListTargetsRaw(context, request, cq));
    }
    ::grpc::Status GetConfiguredTarget(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest& request, ::google::devtools::resultstore::v2::ConfiguredTarget* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ConfiguredTarget>> AsyncGetConfiguredTarget(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ConfiguredTarget>>(AsyncGetConfiguredTargetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ConfiguredTarget>> PrepareAsyncGetConfiguredTarget(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ConfiguredTarget>>(PrepareAsyncGetConfiguredTargetRaw(context, request, cq));
    }
    ::grpc::Status ListConfiguredTargets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest& request, ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>> AsyncListConfiguredTargets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>>(AsyncListConfiguredTargetsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>> PrepareAsyncListConfiguredTargets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>>(PrepareAsyncListConfiguredTargetsRaw(context, request, cq));
    }
    ::grpc::Status GetAction(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetActionRequest& request, ::google::devtools::resultstore::v2::Action* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Action>> AsyncGetAction(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetActionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Action>>(AsyncGetActionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Action>> PrepareAsyncGetAction(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetActionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Action>>(PrepareAsyncGetActionRaw(context, request, cq));
    }
    ::grpc::Status ListActions(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest& request, ::google::devtools::resultstore::v2::ListActionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListActionsResponse>> AsyncListActions(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListActionsResponse>>(AsyncListActionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListActionsResponse>> PrepareAsyncListActions(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListActionsResponse>>(PrepareAsyncListActionsRaw(context, request, cq));
    }
    ::grpc::Status GetFileSet(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest& request, ::google::devtools::resultstore::v2::FileSet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::FileSet>> AsyncGetFileSet(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::FileSet>>(AsyncGetFileSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::FileSet>> PrepareAsyncGetFileSet(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::FileSet>>(PrepareAsyncGetFileSetRaw(context, request, cq));
    }
    ::grpc::Status ListFileSets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest& request, ::google::devtools::resultstore::v2::ListFileSetsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListFileSetsResponse>> AsyncListFileSets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListFileSetsResponse>>(AsyncListFileSetsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListFileSetsResponse>> PrepareAsyncListFileSets(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListFileSetsResponse>>(PrepareAsyncListFileSetsRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Invocation>* AsyncGetInvocationRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Invocation>* PrepareAsyncGetInvocationRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::SearchInvocationsResponse>* AsyncSearchInvocationsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::SearchInvocationsResponse>* PrepareAsyncSearchInvocationsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Configuration>* AsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Configuration>* PrepareAsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListConfigurationsResponse>* AsyncListConfigurationsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListConfigurationsResponse>* PrepareAsyncListConfigurationsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Target>* AsyncGetTargetRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Target>* PrepareAsyncGetTargetRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListTargetsResponse>* AsyncListTargetsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListTargetsResponse>* PrepareAsyncListTargetsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ConfiguredTarget>* AsyncGetConfiguredTargetRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ConfiguredTarget>* PrepareAsyncGetConfiguredTargetRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>* AsyncListConfiguredTargetsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>* PrepareAsyncListConfiguredTargetsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Action>* AsyncGetActionRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetActionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::Action>* PrepareAsyncGetActionRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetActionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListActionsResponse>* AsyncListActionsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListActionsResponse>* PrepareAsyncListActionsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::FileSet>* AsyncGetFileSetRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::FileSet>* PrepareAsyncGetFileSetRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListFileSetsResponse>* AsyncListFileSetsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::devtools::resultstore::v2::ListFileSetsResponse>* PrepareAsyncListFileSetsRaw(::grpc::ClientContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetInvocation_;
    const ::grpc::internal::RpcMethod rpcmethod_SearchInvocations_;
    const ::grpc::internal::RpcMethod rpcmethod_GetConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_ListConfigurations_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTarget_;
    const ::grpc::internal::RpcMethod rpcmethod_ListTargets_;
    const ::grpc::internal::RpcMethod rpcmethod_GetConfiguredTarget_;
    const ::grpc::internal::RpcMethod rpcmethod_ListConfiguredTargets_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAction_;
    const ::grpc::internal::RpcMethod rpcmethod_ListActions_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFileSet_;
    const ::grpc::internal::RpcMethod rpcmethod_ListFileSets_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Retrieves the invocation with the given name.
    //
    // An error will be reported in the following cases:
    // - If the invocation is not found.
    // - If the given invocation name is badly formatted.
    virtual ::grpc::Status GetInvocation(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest* request, ::google::devtools::resultstore::v2::Invocation* response);
    // Searches for invocations matching the given query parameters.
    //
    //
    // An error will be reported in the following cases:
    // - If a query string is not provided
    virtual ::grpc::Status SearchInvocations(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest* request, ::google::devtools::resultstore::v2::SearchInvocationsResponse* response);
    // Retrieves the configuration with the given name.
    //
    // An error will be reported in the following cases:
    // - If the configuration or its parent invocation is not found.
    // - If the given configuration name is badly formatted.
    virtual ::grpc::Status GetConfiguration(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest* request, ::google::devtools::resultstore::v2::Configuration* response);
    // Retrieves all configurations for a parent invocation.
    // This might be limited by user or server,
    // in which case a continuation token is provided.
    //
    // An error will be reported in the following cases:
    // - If the parent invocation is not found.
    // - If the given parent invocation name is badly formatted.
    virtual ::grpc::Status ListConfigurations(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest* request, ::google::devtools::resultstore::v2::ListConfigurationsResponse* response);
    // Retrieves the target with the given name.
    //
    // An error will be reported in the following cases:
    // - If the target or its parent invocation is not found.
    // - If the given target name is badly formatted.
    virtual ::grpc::Status GetTarget(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest* request, ::google::devtools::resultstore::v2::Target* response);
    // Retrieves all targets for a parent invocation.  This might be limited by
    // user or server, in which case a continuation token is provided.
    //
    // An error will be reported in the following cases:
    // - If the parent is not found.
    // - If the given parent name is badly formatted.
    virtual ::grpc::Status ListTargets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest* request, ::google::devtools::resultstore::v2::ListTargetsResponse* response);
    // Retrieves the configured target with the given name.
    //
    // An error will be reported in the following cases:
    // - If the configured target is not found.
    // - If the given name is badly formatted.
    virtual ::grpc::Status GetConfiguredTarget(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest* request, ::google::devtools::resultstore::v2::ConfiguredTarget* response);
    // Retrieves all configured targets for a parent invocation/target.
    // This might be limited by user or server, in which case a continuation
    // token is provided.  Supports '-' for targetId meaning all targets.
    //
    // An error will be reported in the following cases:
    // - If the parent is not found.
    // - If the given parent name is badly formatted.
    virtual ::grpc::Status ListConfiguredTargets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest* request, ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse* response);
    // Retrieves the action with the given name.
    //
    // An error will be reported in the following cases:
    // - If the action is not found.
    // - If the given name is badly formatted.
    virtual ::grpc::Status GetAction(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetActionRequest* request, ::google::devtools::resultstore::v2::Action* response);
    // Retrieves all actions for a parent invocation/target/configuration.
    // This might be limited by user or server, in which case a continuation
    // token is provided.  Supports '-' for configurationId to mean all
    // actions for all configurations for a target, or '-' for targetId and
    // configurationId to mean all actions for all configurations and all targets.
    // Does not support targetId '-' with a specified configuration.
    //
    // An error will be reported in the following cases:
    // - If the parent is not found.
    // - If the given parent name is badly formatted.
    virtual ::grpc::Status ListActions(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest* request, ::google::devtools::resultstore::v2::ListActionsResponse* response);
    // Retrieves the file set with the given name.
    //
    // An error will be reported in the following cases:
    // - If the file set or its parent invocation is not found.
    // - If the given file set name is badly formatted.
    virtual ::grpc::Status GetFileSet(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest* request, ::google::devtools::resultstore::v2::FileSet* response);
    // Retrieves all file sets for a parent invocation.
    // This might be limited by user or server,
    // in which case a continuation token is provided.
    //
    // An error will be reported in the following cases:
    // - If the parent invocation is not found.
    // - If the given parent invocation name is badly formatted.
    virtual ::grpc::Status ListFileSets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest* request, ::google::devtools::resultstore::v2::ListFileSetsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetInvocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetInvocation() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetInvocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvocation(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest* request, ::google::devtools::resultstore::v2::Invocation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInvocation(::grpc::ServerContext* context, ::google::devtools::resultstore::v2::GetInvocationRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::resultstore::v2::Invocation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchInvocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SearchInvocations() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SearchInvocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchInvocations(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest* request, ::google::devtools::resultstore::v2::SearchInvocationsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchInvocations(::grpc::ServerContext* context, ::google::devtools::resultstore::v2::SearchInvocationsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::resultstore::v2::SearchInvocationsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest* request, ::google::devtools::resultstore::v2::Configuration* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfiguration(::grpc::ServerContext* context, ::google::devtools::resultstore::v2::GetConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::resultstore::v2::Configuration>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListConfigurations() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ListConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConfigurations(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest* request, ::google::devtools::resultstore::v2::ListConfigurationsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListConfigurations(::grpc::ServerContext* context, ::google::devtools::resultstore::v2::ListConfigurationsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::resultstore::v2::ListConfigurationsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetTarget() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTarget(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest* request, ::google::devtools::resultstore::v2::Target* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTarget(::grpc::ServerContext* context, ::google::devtools::resultstore::v2::GetTargetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::resultstore::v2::Target>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListTargets() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ListTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTargets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest* request, ::google::devtools::resultstore::v2::ListTargetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTargets(::grpc::ServerContext* context, ::google::devtools::resultstore::v2::ListTargetsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::resultstore::v2::ListTargetsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetConfiguredTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetConfiguredTarget() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetConfiguredTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguredTarget(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest* request, ::google::devtools::resultstore::v2::ConfiguredTarget* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfiguredTarget(::grpc::ServerContext* context, ::google::devtools::resultstore::v2::GetConfiguredTargetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::resultstore::v2::ConfiguredTarget>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListConfiguredTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListConfiguredTargets() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ListConfiguredTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConfiguredTargets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest* request, ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListConfiguredTargets(::grpc::ServerContext* context, ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetAction() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetAction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAction(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetActionRequest* request, ::google::devtools::resultstore::v2::Action* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAction(::grpc::ServerContext* context, ::google::devtools::resultstore::v2::GetActionRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::resultstore::v2::Action>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListActions() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ListActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListActions(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest* request, ::google::devtools::resultstore::v2::ListActionsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListActions(::grpc::ServerContext* context, ::google::devtools::resultstore::v2::ListActionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::resultstore::v2::ListActionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFileSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetFileSet() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetFileSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileSet(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest* request, ::google::devtools::resultstore::v2::FileSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFileSet(::grpc::ServerContext* context, ::google::devtools::resultstore::v2::GetFileSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::resultstore::v2::FileSet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListFileSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListFileSets() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_ListFileSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFileSets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest* request, ::google::devtools::resultstore::v2::ListFileSetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListFileSets(::grpc::ServerContext* context, ::google::devtools::resultstore::v2::ListFileSetsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::devtools::resultstore::v2::ListFileSetsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetInvocation<WithAsyncMethod_SearchInvocations<WithAsyncMethod_GetConfiguration<WithAsyncMethod_ListConfigurations<WithAsyncMethod_GetTarget<WithAsyncMethod_ListTargets<WithAsyncMethod_GetConfiguredTarget<WithAsyncMethod_ListConfiguredTargets<WithAsyncMethod_GetAction<WithAsyncMethod_ListActions<WithAsyncMethod_GetFileSet<WithAsyncMethod_ListFileSets<Service > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_GetInvocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetInvocation() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetInvocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvocation(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest* request, ::google::devtools::resultstore::v2::Invocation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchInvocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SearchInvocations() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SearchInvocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchInvocations(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest* request, ::google::devtools::resultstore::v2::SearchInvocationsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest* request, ::google::devtools::resultstore::v2::Configuration* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListConfigurations() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ListConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConfigurations(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest* request, ::google::devtools::resultstore::v2::ListConfigurationsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetTarget() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTarget(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest* request, ::google::devtools::resultstore::v2::Target* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListTargets() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ListTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTargets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest* request, ::google::devtools::resultstore::v2::ListTargetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetConfiguredTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetConfiguredTarget() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetConfiguredTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguredTarget(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest* request, ::google::devtools::resultstore::v2::ConfiguredTarget* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListConfiguredTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListConfiguredTargets() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ListConfiguredTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConfiguredTargets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest* request, ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetAction() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetAction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAction(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetActionRequest* request, ::google::devtools::resultstore::v2::Action* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListActions() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ListActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListActions(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest* request, ::google::devtools::resultstore::v2::ListActionsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFileSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetFileSet() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetFileSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileSet(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest* request, ::google::devtools::resultstore::v2::FileSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListFileSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListFileSets() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_ListFileSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFileSets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest* request, ::google::devtools::resultstore::v2::ListFileSetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetInvocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetInvocation() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetInvocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvocation(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest* request, ::google::devtools::resultstore::v2::Invocation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInvocation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SearchInvocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SearchInvocations() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SearchInvocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchInvocations(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest* request, ::google::devtools::resultstore::v2::SearchInvocationsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchInvocations(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest* request, ::google::devtools::resultstore::v2::Configuration* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListConfigurations() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ListConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConfigurations(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest* request, ::google::devtools::resultstore::v2::ListConfigurationsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListConfigurations(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetTarget() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTarget(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest* request, ::google::devtools::resultstore::v2::Target* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTarget(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListTargets() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ListTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTargets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest* request, ::google::devtools::resultstore::v2::ListTargetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTargets(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetConfiguredTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetConfiguredTarget() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetConfiguredTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguredTarget(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest* request, ::google::devtools::resultstore::v2::ConfiguredTarget* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfiguredTarget(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListConfiguredTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListConfiguredTargets() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ListConfiguredTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConfiguredTargets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest* request, ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListConfiguredTargets(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetAction() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetAction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAction(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetActionRequest* request, ::google::devtools::resultstore::v2::Action* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListActions() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ListActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListActions(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest* request, ::google::devtools::resultstore::v2::ListActionsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListActions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFileSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetFileSet() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetFileSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileSet(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest* request, ::google::devtools::resultstore::v2::FileSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFileSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListFileSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListFileSets() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_ListFileSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFileSets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest* request, ::google::devtools::resultstore::v2::ListFileSetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListFileSets(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetInvocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetInvocation() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::resultstore::v2::GetInvocationRequest, ::google::devtools::resultstore::v2::Invocation>(std::bind(&WithStreamedUnaryMethod_GetInvocation<BaseClass>::StreamedGetInvocation, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetInvocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetInvocation(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetInvocationRequest* request, ::google::devtools::resultstore::v2::Invocation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetInvocation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::resultstore::v2::GetInvocationRequest,::google::devtools::resultstore::v2::Invocation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchInvocations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SearchInvocations() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::resultstore::v2::SearchInvocationsRequest, ::google::devtools::resultstore::v2::SearchInvocationsResponse>(std::bind(&WithStreamedUnaryMethod_SearchInvocations<BaseClass>::StreamedSearchInvocations, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SearchInvocations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchInvocations(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::SearchInvocationsRequest* request, ::google::devtools::resultstore::v2::SearchInvocationsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchInvocations(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::resultstore::v2::SearchInvocationsRequest,::google::devtools::resultstore::v2::SearchInvocationsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::resultstore::v2::GetConfigurationRequest, ::google::devtools::resultstore::v2::Configuration>(std::bind(&WithStreamedUnaryMethod_GetConfiguration<BaseClass>::StreamedGetConfiguration, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetConfigurationRequest* request, ::google::devtools::resultstore::v2::Configuration* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::resultstore::v2::GetConfigurationRequest,::google::devtools::resultstore::v2::Configuration>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListConfigurations() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::resultstore::v2::ListConfigurationsRequest, ::google::devtools::resultstore::v2::ListConfigurationsResponse>(std::bind(&WithStreamedUnaryMethod_ListConfigurations<BaseClass>::StreamedListConfigurations, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListConfigurations(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListConfigurationsRequest* request, ::google::devtools::resultstore::v2::ListConfigurationsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListConfigurations(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::resultstore::v2::ListConfigurationsRequest,::google::devtools::resultstore::v2::ListConfigurationsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetTarget() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::resultstore::v2::GetTargetRequest, ::google::devtools::resultstore::v2::Target>(std::bind(&WithStreamedUnaryMethod_GetTarget<BaseClass>::StreamedGetTarget, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTarget(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetTargetRequest* request, ::google::devtools::resultstore::v2::Target* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTarget(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::resultstore::v2::GetTargetRequest,::google::devtools::resultstore::v2::Target>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListTargets() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::resultstore::v2::ListTargetsRequest, ::google::devtools::resultstore::v2::ListTargetsResponse>(std::bind(&WithStreamedUnaryMethod_ListTargets<BaseClass>::StreamedListTargets, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListTargets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListTargetsRequest* request, ::google::devtools::resultstore::v2::ListTargetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListTargets(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::resultstore::v2::ListTargetsRequest,::google::devtools::resultstore::v2::ListTargetsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetConfiguredTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetConfiguredTarget() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::resultstore::v2::GetConfiguredTargetRequest, ::google::devtools::resultstore::v2::ConfiguredTarget>(std::bind(&WithStreamedUnaryMethod_GetConfiguredTarget<BaseClass>::StreamedGetConfiguredTarget, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetConfiguredTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetConfiguredTarget(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetConfiguredTargetRequest* request, ::google::devtools::resultstore::v2::ConfiguredTarget* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetConfiguredTarget(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::resultstore::v2::GetConfiguredTargetRequest,::google::devtools::resultstore::v2::ConfiguredTarget>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListConfiguredTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListConfiguredTargets() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest, ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>(std::bind(&WithStreamedUnaryMethod_ListConfiguredTargets<BaseClass>::StreamedListConfiguredTargets, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListConfiguredTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListConfiguredTargets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest* request, ::google::devtools::resultstore::v2::ListConfiguredTargetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListConfiguredTargets(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::resultstore::v2::ListConfiguredTargetsRequest,::google::devtools::resultstore::v2::ListConfiguredTargetsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetAction() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::resultstore::v2::GetActionRequest, ::google::devtools::resultstore::v2::Action>(std::bind(&WithStreamedUnaryMethod_GetAction<BaseClass>::StreamedGetAction, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetAction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAction(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetActionRequest* request, ::google::devtools::resultstore::v2::Action* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::resultstore::v2::GetActionRequest,::google::devtools::resultstore::v2::Action>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListActions() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::resultstore::v2::ListActionsRequest, ::google::devtools::resultstore::v2::ListActionsResponse>(std::bind(&WithStreamedUnaryMethod_ListActions<BaseClass>::StreamedListActions, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListActions(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListActionsRequest* request, ::google::devtools::resultstore::v2::ListActionsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListActions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::resultstore::v2::ListActionsRequest,::google::devtools::resultstore::v2::ListActionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFileSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetFileSet() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::resultstore::v2::GetFileSetRequest, ::google::devtools::resultstore::v2::FileSet>(std::bind(&WithStreamedUnaryMethod_GetFileSet<BaseClass>::StreamedGetFileSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetFileSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFileSet(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::GetFileSetRequest* request, ::google::devtools::resultstore::v2::FileSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFileSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::resultstore::v2::GetFileSetRequest,::google::devtools::resultstore::v2::FileSet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListFileSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListFileSets() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler< ::google::devtools::resultstore::v2::ListFileSetsRequest, ::google::devtools::resultstore::v2::ListFileSetsResponse>(std::bind(&WithStreamedUnaryMethod_ListFileSets<BaseClass>::StreamedListFileSets, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListFileSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListFileSets(::grpc::ServerContext* context, const ::google::devtools::resultstore::v2::ListFileSetsRequest* request, ::google::devtools::resultstore::v2::ListFileSetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListFileSets(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::devtools::resultstore::v2::ListFileSetsRequest,::google::devtools::resultstore::v2::ListFileSetsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetInvocation<WithStreamedUnaryMethod_SearchInvocations<WithStreamedUnaryMethod_GetConfiguration<WithStreamedUnaryMethod_ListConfigurations<WithStreamedUnaryMethod_GetTarget<WithStreamedUnaryMethod_ListTargets<WithStreamedUnaryMethod_GetConfiguredTarget<WithStreamedUnaryMethod_ListConfiguredTargets<WithStreamedUnaryMethod_GetAction<WithStreamedUnaryMethod_ListActions<WithStreamedUnaryMethod_GetFileSet<WithStreamedUnaryMethod_ListFileSets<Service > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetInvocation<WithStreamedUnaryMethod_SearchInvocations<WithStreamedUnaryMethod_GetConfiguration<WithStreamedUnaryMethod_ListConfigurations<WithStreamedUnaryMethod_GetTarget<WithStreamedUnaryMethod_ListTargets<WithStreamedUnaryMethod_GetConfiguredTarget<WithStreamedUnaryMethod_ListConfiguredTargets<WithStreamedUnaryMethod_GetAction<WithStreamedUnaryMethod_ListActions<WithStreamedUnaryMethod_GetFileSet<WithStreamedUnaryMethod_ListFileSets<Service > > > > > > > > > > > > StreamedService;
};

}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google


#endif  // GRPC_google_2fdevtools_2fresultstore_2fv2_2fresultstore_5fdownload_2eproto__INCLUDED
