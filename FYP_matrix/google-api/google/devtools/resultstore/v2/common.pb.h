// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/common.proto

#ifndef PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2fcommon_2eproto
#define PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2fcommon_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fresultstore_2fv2_2fcommon_2eproto 

namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fcommon_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fcommon_2eproto
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {
class Dependency;
class DependencyDefaultTypeInternal;
extern DependencyDefaultTypeInternal _Dependency_default_instance_;
class Property;
class PropertyDefaultTypeInternal;
extern PropertyDefaultTypeInternal _Property_default_instance_;
class StatusAttributes;
class StatusAttributesDefaultTypeInternal;
extern StatusAttributesDefaultTypeInternal _StatusAttributes_default_instance_;
class Timing;
class TimingDefaultTypeInternal;
extern TimingDefaultTypeInternal _Timing_default_instance_;
}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::devtools::resultstore::v2::Dependency* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::Dependency>(Arena*);
template<> ::google::devtools::resultstore::v2::Property* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::Property>(Arena*);
template<> ::google::devtools::resultstore::v2::StatusAttributes* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::StatusAttributes>(Arena*);
template<> ::google::devtools::resultstore::v2::Timing* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::Timing>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {

enum Language {
  LANGUAGE_UNSPECIFIED = 0,
  NONE = 1,
  ANDROID = 2,
  AS = 3,
  CC = 4,
  CSS = 5,
  DART = 6,
  GO = 7,
  GWT = 8,
  HASKELL = 9,
  JAVA = 10,
  JS = 11,
  LISP = 12,
  OBJC = 13,
  PY = 14,
  SH = 15,
  SWIFT = 16,
  TS = 18,
  WEB = 19,
  Language_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Language_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Language_IsValid(int value);
const Language Language_MIN = LANGUAGE_UNSPECIFIED;
const Language Language_MAX = WEB;
const int Language_ARRAYSIZE = Language_MAX + 1;

const ::google::protobuf::EnumDescriptor* Language_descriptor();
inline const ::std::string& Language_Name(Language value) {
  return ::google::protobuf::internal::NameOfEnum(
    Language_descriptor(), value);
}
inline bool Language_Parse(
    const ::std::string& name, Language* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Language>(
    Language_descriptor(), name, value);
}
enum Status {
  STATUS_UNSPECIFIED = 0,
  BUILDING = 1,
  BUILT = 2,
  FAILED_TO_BUILD = 3,
  TESTING = 4,
  PASSED = 5,
  FAILED = 6,
  TIMED_OUT = 7,
  CANCELLED = 8,
  TOOL_FAILED = 9,
  INCOMPLETE = 10,
  FLAKY = 11,
  UNKNOWN = 12,
  SKIPPED = 13,
  Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Status_IsValid(int value);
const Status Status_MIN = STATUS_UNSPECIFIED;
const Status Status_MAX = SKIPPED;
const int Status_ARRAYSIZE = Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_descriptor();
inline const ::std::string& Status_Name(Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_descriptor(), value);
}
inline bool Status_Parse(
    const ::std::string& name, Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status>(
    Status_descriptor(), name, value);
}
// ===================================================================

class StatusAttributes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.StatusAttributes) */ {
 public:
  StatusAttributes();
  virtual ~StatusAttributes();

  StatusAttributes(const StatusAttributes& from);

  inline StatusAttributes& operator=(const StatusAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatusAttributes(StatusAttributes&& from) noexcept
    : StatusAttributes() {
    *this = ::std::move(from);
  }

  inline StatusAttributes& operator=(StatusAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatusAttributes* internal_default_instance() {
    return reinterpret_cast<const StatusAttributes*>(
               &_StatusAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(StatusAttributes* other);
  friend void swap(StatusAttributes& a, StatusAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatusAttributes* New() const final {
    return CreateMaybeMessage<StatusAttributes>(NULL);
  }

  StatusAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatusAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StatusAttributes& from);
  void MergeFrom(const StatusAttributes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // .google.devtools.resultstore.v2.Status status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::devtools::resultstore::v2::Status status() const;
  void set_status(::google::devtools::resultstore::v2::Status value);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.StatusAttributes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Property : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.Property) */ {
 public:
  Property();
  virtual ~Property();

  Property(const Property& from);

  inline Property& operator=(const Property& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Property(Property&& from) noexcept
    : Property() {
    *this = ::std::move(from);
  }

  inline Property& operator=(Property&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Property& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Property* internal_default_instance() {
    return reinterpret_cast<const Property*>(
               &_Property_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Property* other);
  friend void swap(Property& a, Property& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Property* New() const final {
    return CreateMaybeMessage<Property>(NULL);
  }

  Property* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Property>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Property& from);
  void MergeFrom(const Property& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Property* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.Property)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Timing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.Timing) */ {
 public:
  Timing();
  virtual ~Timing();

  Timing(const Timing& from);

  inline Timing& operator=(const Timing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Timing(Timing&& from) noexcept
    : Timing() {
    *this = ::std::move(from);
  }

  inline Timing& operator=(Timing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Timing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Timing* internal_default_instance() {
    return reinterpret_cast<const Timing*>(
               &_Timing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Timing* other);
  friend void swap(Timing& a, Timing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Timing* New() const final {
    return CreateMaybeMessage<Timing>(NULL);
  }

  Timing* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Timing>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Timing& from);
  void MergeFrom(const Timing& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Timing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Timestamp start_time = 1;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  private:
  const ::google::protobuf::Timestamp& _internal_start_time() const;
  public:
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Duration duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  private:
  const ::google::protobuf::Duration& _internal_duration() const;
  public:
  const ::google::protobuf::Duration& duration() const;
  ::google::protobuf::Duration* release_duration();
  ::google::protobuf::Duration* mutable_duration();
  void set_allocated_duration(::google::protobuf::Duration* duration);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.Timing)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Duration* duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Dependency : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.Dependency) */ {
 public:
  Dependency();
  virtual ~Dependency();

  Dependency(const Dependency& from);

  inline Dependency& operator=(const Dependency& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Dependency(Dependency&& from) noexcept
    : Dependency() {
    *this = ::std::move(from);
  }

  inline Dependency& operator=(Dependency&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Dependency& default_instance();

  enum ResourceCase {
    kTarget = 1,
    kConfiguredTarget = 2,
    kAction = 3,
    RESOURCE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Dependency* internal_default_instance() {
    return reinterpret_cast<const Dependency*>(
               &_Dependency_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Dependency* other);
  friend void swap(Dependency& a, Dependency& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Dependency* New() const final {
    return CreateMaybeMessage<Dependency>(NULL);
  }

  Dependency* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Dependency>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Dependency& from);
  void MergeFrom(const Dependency& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Dependency* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string label = 4;
  void clear_label();
  static const int kLabelFieldNumber = 4;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // string target = 1;
  private:
  bool has_target() const;
  public:
  void clear_target();
  static const int kTargetFieldNumber = 1;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  #if LANG_CXX11
  void set_target(::std::string&& value);
  #endif
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // string configured_target = 2;
  private:
  bool has_configured_target() const;
  public:
  void clear_configured_target();
  static const int kConfiguredTargetFieldNumber = 2;
  const ::std::string& configured_target() const;
  void set_configured_target(const ::std::string& value);
  #if LANG_CXX11
  void set_configured_target(::std::string&& value);
  #endif
  void set_configured_target(const char* value);
  void set_configured_target(const char* value, size_t size);
  ::std::string* mutable_configured_target();
  ::std::string* release_configured_target();
  void set_allocated_configured_target(::std::string* configured_target);

  // string action = 3;
  private:
  bool has_action() const;
  public:
  void clear_action();
  static const int kActionFieldNumber = 3;
  const ::std::string& action() const;
  void set_action(const ::std::string& value);
  #if LANG_CXX11
  void set_action(::std::string&& value);
  #endif
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  ::std::string* mutable_action();
  ::std::string* release_action();
  void set_allocated_action(::std::string* action);

  void clear_resource();
  ResourceCase resource_case() const;
  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.Dependency)
 private:
  void set_has_target();
  void set_has_configured_target();
  void set_has_action();

  inline bool has_resource() const;
  inline void clear_has_resource();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  union ResourceUnion {
    ResourceUnion() {}
    ::google::protobuf::internal::ArenaStringPtr target_;
    ::google::protobuf::internal::ArenaStringPtr configured_target_;
    ::google::protobuf::internal::ArenaStringPtr action_;
  } resource_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcommon_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StatusAttributes

// .google.devtools.resultstore.v2.Status status = 1;
inline void StatusAttributes::clear_status() {
  status_ = 0;
}
inline ::google::devtools::resultstore::v2::Status StatusAttributes::status() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.StatusAttributes.status)
  return static_cast< ::google::devtools::resultstore::v2::Status >(status_);
}
inline void StatusAttributes::set_status(::google::devtools::resultstore::v2::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.StatusAttributes.status)
}

// string description = 2;
inline void StatusAttributes::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StatusAttributes::description() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.StatusAttributes.description)
  return description_.GetNoArena();
}
inline void StatusAttributes::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.StatusAttributes.description)
}
#if LANG_CXX11
inline void StatusAttributes::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.StatusAttributes.description)
}
#endif
inline void StatusAttributes::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.StatusAttributes.description)
}
inline void StatusAttributes::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.StatusAttributes.description)
}
inline ::std::string* StatusAttributes::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.StatusAttributes.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StatusAttributes::release_description() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.StatusAttributes.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusAttributes::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.StatusAttributes.description)
}

// -------------------------------------------------------------------

// Property

// string key = 1;
inline void Property::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Property::key() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Property.key)
  return key_.GetNoArena();
}
inline void Property::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Property.key)
}
#if LANG_CXX11
inline void Property::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Property.key)
}
#endif
inline void Property::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Property.key)
}
inline void Property::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Property.key)
}
inline ::std::string* Property::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Property.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Property::release_key() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Property.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Property::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Property.key)
}

// string value = 2;
inline void Property::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Property::value() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Property.value)
  return value_.GetNoArena();
}
inline void Property::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Property.value)
}
#if LANG_CXX11
inline void Property::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Property.value)
}
#endif
inline void Property::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Property.value)
}
inline void Property::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Property.value)
}
inline ::std::string* Property::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Property.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Property::release_value() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Property.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Property::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Property.value)
}

// -------------------------------------------------------------------

// Timing

// .google.protobuf.Timestamp start_time = 1;
inline bool Timing::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Timing::_internal_start_time() const {
  return *start_time_;
}
inline const ::google::protobuf::Timestamp& Timing::start_time() const {
  const ::google::protobuf::Timestamp* p = start_time_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Timing.start_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Timing::release_start_time() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Timing.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Timing::mutable_start_time() {
  
  if (start_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    start_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Timing.start_time)
  return start_time_;
}
inline void Timing::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(start_time)->GetArena();
    if (message_arena != submessage_arena) {
      start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Timing.start_time)
}

// .google.protobuf.Duration duration = 2;
inline bool Timing::has_duration() const {
  return this != internal_default_instance() && duration_ != NULL;
}
inline const ::google::protobuf::Duration& Timing::_internal_duration() const {
  return *duration_;
}
inline const ::google::protobuf::Duration& Timing::duration() const {
  const ::google::protobuf::Duration* p = duration_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Timing.duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* Timing::release_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Timing.duration)
  
  ::google::protobuf::Duration* temp = duration_;
  duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* Timing::mutable_duration() {
  
  if (duration_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    duration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Timing.duration)
  return duration_;
}
inline void Timing::set_allocated_duration(::google::protobuf::Duration* duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(duration_);
  }
  if (duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(duration)->GetArena();
    if (message_arena != submessage_arena) {
      duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, duration, submessage_arena);
    }
    
  } else {
    
  }
  duration_ = duration;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Timing.duration)
}

// -------------------------------------------------------------------

// Dependency

// string target = 1;
inline bool Dependency::has_target() const {
  return resource_case() == kTarget;
}
inline void Dependency::set_has_target() {
  _oneof_case_[0] = kTarget;
}
inline void Dependency::clear_target() {
  if (has_target()) {
    resource_.target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_resource();
  }
}
inline const ::std::string& Dependency::target() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Dependency.target)
  if (has_target()) {
    return resource_.target_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Dependency::set_target(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Dependency.target)
  if (!has_target()) {
    clear_resource();
    set_has_target();
    resource_.target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  resource_.target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Dependency.target)
}
#if LANG_CXX11
inline void Dependency::set_target(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Dependency.target)
  if (!has_target()) {
    clear_resource();
    set_has_target();
    resource_.target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  resource_.target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Dependency.target)
}
#endif
inline void Dependency::set_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_target()) {
    clear_resource();
    set_has_target();
    resource_.target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  resource_.target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Dependency.target)
}
inline void Dependency::set_target(const char* value, size_t size) {
  if (!has_target()) {
    clear_resource();
    set_has_target();
    resource_.target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  resource_.target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Dependency.target)
}
inline ::std::string* Dependency::mutable_target() {
  if (!has_target()) {
    clear_resource();
    set_has_target();
    resource_.target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Dependency.target)
  return resource_.target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Dependency::release_target() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Dependency.target)
  if (has_target()) {
    clear_has_resource();
    return resource_.target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Dependency::set_allocated_target(::std::string* target) {
  if (!has_target()) {
    resource_.target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_resource();
  if (target != NULL) {
    set_has_target();
    resource_.target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Dependency.target)
}

// string configured_target = 2;
inline bool Dependency::has_configured_target() const {
  return resource_case() == kConfiguredTarget;
}
inline void Dependency::set_has_configured_target() {
  _oneof_case_[0] = kConfiguredTarget;
}
inline void Dependency::clear_configured_target() {
  if (has_configured_target()) {
    resource_.configured_target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_resource();
  }
}
inline const ::std::string& Dependency::configured_target() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Dependency.configured_target)
  if (has_configured_target()) {
    return resource_.configured_target_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Dependency::set_configured_target(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Dependency.configured_target)
  if (!has_configured_target()) {
    clear_resource();
    set_has_configured_target();
    resource_.configured_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  resource_.configured_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Dependency.configured_target)
}
#if LANG_CXX11
inline void Dependency::set_configured_target(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Dependency.configured_target)
  if (!has_configured_target()) {
    clear_resource();
    set_has_configured_target();
    resource_.configured_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  resource_.configured_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Dependency.configured_target)
}
#endif
inline void Dependency::set_configured_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_configured_target()) {
    clear_resource();
    set_has_configured_target();
    resource_.configured_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  resource_.configured_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Dependency.configured_target)
}
inline void Dependency::set_configured_target(const char* value, size_t size) {
  if (!has_configured_target()) {
    clear_resource();
    set_has_configured_target();
    resource_.configured_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  resource_.configured_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Dependency.configured_target)
}
inline ::std::string* Dependency::mutable_configured_target() {
  if (!has_configured_target()) {
    clear_resource();
    set_has_configured_target();
    resource_.configured_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Dependency.configured_target)
  return resource_.configured_target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Dependency::release_configured_target() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Dependency.configured_target)
  if (has_configured_target()) {
    clear_has_resource();
    return resource_.configured_target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Dependency::set_allocated_configured_target(::std::string* configured_target) {
  if (!has_configured_target()) {
    resource_.configured_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_resource();
  if (configured_target != NULL) {
    set_has_configured_target();
    resource_.configured_target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), configured_target);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Dependency.configured_target)
}

// string action = 3;
inline bool Dependency::has_action() const {
  return resource_case() == kAction;
}
inline void Dependency::set_has_action() {
  _oneof_case_[0] = kAction;
}
inline void Dependency::clear_action() {
  if (has_action()) {
    resource_.action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_resource();
  }
}
inline const ::std::string& Dependency::action() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Dependency.action)
  if (has_action()) {
    return resource_.action_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Dependency::set_action(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Dependency.action)
  if (!has_action()) {
    clear_resource();
    set_has_action();
    resource_.action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  resource_.action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Dependency.action)
}
#if LANG_CXX11
inline void Dependency::set_action(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Dependency.action)
  if (!has_action()) {
    clear_resource();
    set_has_action();
    resource_.action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  resource_.action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Dependency.action)
}
#endif
inline void Dependency::set_action(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_action()) {
    clear_resource();
    set_has_action();
    resource_.action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  resource_.action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Dependency.action)
}
inline void Dependency::set_action(const char* value, size_t size) {
  if (!has_action()) {
    clear_resource();
    set_has_action();
    resource_.action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  resource_.action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Dependency.action)
}
inline ::std::string* Dependency::mutable_action() {
  if (!has_action()) {
    clear_resource();
    set_has_action();
    resource_.action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Dependency.action)
  return resource_.action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Dependency::release_action() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Dependency.action)
  if (has_action()) {
    clear_has_resource();
    return resource_.action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Dependency::set_allocated_action(::std::string* action) {
  if (!has_action()) {
    resource_.action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_resource();
  if (action != NULL) {
    set_has_action();
    resource_.action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Dependency.action)
}

// string label = 4;
inline void Dependency::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Dependency::label() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Dependency.label)
  return label_.GetNoArena();
}
inline void Dependency::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Dependency.label)
}
#if LANG_CXX11
inline void Dependency::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Dependency.label)
}
#endif
inline void Dependency::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Dependency.label)
}
inline void Dependency::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Dependency.label)
}
inline ::std::string* Dependency::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Dependency.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Dependency::release_label() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Dependency.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Dependency::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Dependency.label)
}

inline bool Dependency::has_resource() const {
  return resource_case() != RESOURCE_NOT_SET;
}
inline void Dependency::clear_has_resource() {
  _oneof_case_[0] = RESOURCE_NOT_SET;
}
inline Dependency::ResourceCase Dependency::resource_case() const {
  return Dependency::ResourceCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::devtools::resultstore::v2::Language> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::resultstore::v2::Language>() {
  return ::google::devtools::resultstore::v2::Language_descriptor();
}
template <> struct is_proto_enum< ::google::devtools::resultstore::v2::Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::resultstore::v2::Status>() {
  return ::google::devtools::resultstore::v2::Status_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2fcommon_2eproto
