// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/target.proto

#ifndef PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2ftarget_2eproto
#define PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2ftarget_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/devtools/resultstore/v2/common.pb.h"
#include "google/devtools/resultstore/v2/file.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fresultstore_2fv2_2ftarget_2eproto 

namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2ftarget_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2ftarget_2eproto
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {
class Target;
class TargetDefaultTypeInternal;
extern TargetDefaultTypeInternal _Target_default_instance_;
class TargetAttributes;
class TargetAttributesDefaultTypeInternal;
extern TargetAttributesDefaultTypeInternal _TargetAttributes_default_instance_;
class Target_Id;
class Target_IdDefaultTypeInternal;
extern Target_IdDefaultTypeInternal _Target_Id_default_instance_;
class TestAttributes;
class TestAttributesDefaultTypeInternal;
extern TestAttributesDefaultTypeInternal _TestAttributes_default_instance_;
}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::devtools::resultstore::v2::Target* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::Target>(Arena*);
template<> ::google::devtools::resultstore::v2::TargetAttributes* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::TargetAttributes>(Arena*);
template<> ::google::devtools::resultstore::v2::Target_Id* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::Target_Id>(Arena*);
template<> ::google::devtools::resultstore::v2::TestAttributes* Arena::CreateMaybeMessage<::google::devtools::resultstore::v2::TestAttributes>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {

enum TargetType {
  TARGET_TYPE_UNSPECIFIED = 0,
  APPLICATION = 1,
  BINARY = 2,
  LIBRARY = 3,
  PACKAGE = 4,
  TEST = 5,
  TargetType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TargetType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TargetType_IsValid(int value);
const TargetType TargetType_MIN = TARGET_TYPE_UNSPECIFIED;
const TargetType TargetType_MAX = TEST;
const int TargetType_ARRAYSIZE = TargetType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TargetType_descriptor();
inline const ::std::string& TargetType_Name(TargetType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TargetType_descriptor(), value);
}
inline bool TargetType_Parse(
    const ::std::string& name, TargetType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TargetType>(
    TargetType_descriptor(), name, value);
}
enum TestSize {
  TEST_SIZE_UNSPECIFIED = 0,
  SMALL = 1,
  MEDIUM = 2,
  LARGE = 3,
  ENORMOUS = 4,
  OTHER_SIZE = 5,
  TestSize_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestSize_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestSize_IsValid(int value);
const TestSize TestSize_MIN = TEST_SIZE_UNSPECIFIED;
const TestSize TestSize_MAX = OTHER_SIZE;
const int TestSize_ARRAYSIZE = TestSize_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestSize_descriptor();
inline const ::std::string& TestSize_Name(TestSize value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestSize_descriptor(), value);
}
inline bool TestSize_Parse(
    const ::std::string& name, TestSize* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestSize>(
    TestSize_descriptor(), name, value);
}
// ===================================================================

class Target_Id : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.Target.Id) */ {
 public:
  Target_Id();
  virtual ~Target_Id();

  Target_Id(const Target_Id& from);

  inline Target_Id& operator=(const Target_Id& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Target_Id(Target_Id&& from) noexcept
    : Target_Id() {
    *this = ::std::move(from);
  }

  inline Target_Id& operator=(Target_Id&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Target_Id& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Target_Id* internal_default_instance() {
    return reinterpret_cast<const Target_Id*>(
               &_Target_Id_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Target_Id* other);
  friend void swap(Target_Id& a, Target_Id& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Target_Id* New() const final {
    return CreateMaybeMessage<Target_Id>(NULL);
  }

  Target_Id* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Target_Id>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Target_Id& from);
  void MergeFrom(const Target_Id& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Target_Id* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string invocation_id = 1;
  void clear_invocation_id();
  static const int kInvocationIdFieldNumber = 1;
  const ::std::string& invocation_id() const;
  void set_invocation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_invocation_id(::std::string&& value);
  #endif
  void set_invocation_id(const char* value);
  void set_invocation_id(const char* value, size_t size);
  ::std::string* mutable_invocation_id();
  ::std::string* release_invocation_id();
  void set_allocated_invocation_id(::std::string* invocation_id);

  // string target_id = 2;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  const ::std::string& target_id() const;
  void set_target_id(const ::std::string& value);
  #if LANG_CXX11
  void set_target_id(::std::string&& value);
  #endif
  void set_target_id(const char* value);
  void set_target_id(const char* value, size_t size);
  ::std::string* mutable_target_id();
  ::std::string* release_target_id();
  void set_allocated_target_id(::std::string* target_id);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.Target.Id)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr invocation_id_;
  ::google::protobuf::internal::ArenaStringPtr target_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2ftarget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Target : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.Target) */ {
 public:
  Target();
  virtual ~Target();

  Target(const Target& from);

  inline Target& operator=(const Target& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Target(Target&& from) noexcept
    : Target() {
    *this = ::std::move(from);
  }

  inline Target& operator=(Target&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Target& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Target* internal_default_instance() {
    return reinterpret_cast<const Target*>(
               &_Target_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Target* other);
  friend void swap(Target& a, Target& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Target* New() const final {
    return CreateMaybeMessage<Target>(NULL);
  }

  Target* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Target>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Target& from);
  void MergeFrom(const Target& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Target* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Target_Id Id;

  // accessors -------------------------------------------------------

  // repeated .google.devtools.resultstore.v2.Property properties = 7;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 7;
  ::google::devtools::resultstore::v2::Property* mutable_properties(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >*
      mutable_properties();
  const ::google::devtools::resultstore::v2::Property& properties(int index) const;
  ::google::devtools::resultstore::v2::Property* add_properties();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >&
      properties() const;

  // repeated .google.devtools.resultstore.v2.File files = 8;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 8;
  ::google::devtools::resultstore::v2::File* mutable_files(int index);
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >*
      mutable_files();
  const ::google::devtools::resultstore::v2::File& files(int index) const;
  ::google::devtools::resultstore::v2::File* add_files();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >&
      files() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.devtools.resultstore.v2.Target.Id id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::devtools::resultstore::v2::Target_Id& _internal_id() const;
  public:
  const ::google::devtools::resultstore::v2::Target_Id& id() const;
  ::google::devtools::resultstore::v2::Target_Id* release_id();
  ::google::devtools::resultstore::v2::Target_Id* mutable_id();
  void set_allocated_id(::google::devtools::resultstore::v2::Target_Id* id);

  // .google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;
  bool has_status_attributes() const;
  void clear_status_attributes();
  static const int kStatusAttributesFieldNumber = 3;
  private:
  const ::google::devtools::resultstore::v2::StatusAttributes& _internal_status_attributes() const;
  public:
  const ::google::devtools::resultstore::v2::StatusAttributes& status_attributes() const;
  ::google::devtools::resultstore::v2::StatusAttributes* release_status_attributes();
  ::google::devtools::resultstore::v2::StatusAttributes* mutable_status_attributes();
  void set_allocated_status_attributes(::google::devtools::resultstore::v2::StatusAttributes* status_attributes);

  // .google.devtools.resultstore.v2.Timing timing = 4;
  bool has_timing() const;
  void clear_timing();
  static const int kTimingFieldNumber = 4;
  private:
  const ::google::devtools::resultstore::v2::Timing& _internal_timing() const;
  public:
  const ::google::devtools::resultstore::v2::Timing& timing() const;
  ::google::devtools::resultstore::v2::Timing* release_timing();
  ::google::devtools::resultstore::v2::Timing* mutable_timing();
  void set_allocated_timing(::google::devtools::resultstore::v2::Timing* timing);

  // .google.devtools.resultstore.v2.TargetAttributes target_attributes = 5;
  bool has_target_attributes() const;
  void clear_target_attributes();
  static const int kTargetAttributesFieldNumber = 5;
  private:
  const ::google::devtools::resultstore::v2::TargetAttributes& _internal_target_attributes() const;
  public:
  const ::google::devtools::resultstore::v2::TargetAttributes& target_attributes() const;
  ::google::devtools::resultstore::v2::TargetAttributes* release_target_attributes();
  ::google::devtools::resultstore::v2::TargetAttributes* mutable_target_attributes();
  void set_allocated_target_attributes(::google::devtools::resultstore::v2::TargetAttributes* target_attributes);

  // .google.devtools.resultstore.v2.TestAttributes test_attributes = 6;
  bool has_test_attributes() const;
  void clear_test_attributes();
  static const int kTestAttributesFieldNumber = 6;
  private:
  const ::google::devtools::resultstore::v2::TestAttributes& _internal_test_attributes() const;
  public:
  const ::google::devtools::resultstore::v2::TestAttributes& test_attributes() const;
  ::google::devtools::resultstore::v2::TestAttributes* release_test_attributes();
  ::google::devtools::resultstore::v2::TestAttributes* mutable_test_attributes();
  void set_allocated_test_attributes(::google::devtools::resultstore::v2::TestAttributes* test_attributes);

  // bool is_visible = 9;
  void clear_is_visible();
  static const int kIsVisibleFieldNumber = 9;
  bool is_visible() const;
  void set_is_visible(bool value);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.Target)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property > properties_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File > files_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::devtools::resultstore::v2::Target_Id* id_;
  ::google::devtools::resultstore::v2::StatusAttributes* status_attributes_;
  ::google::devtools::resultstore::v2::Timing* timing_;
  ::google::devtools::resultstore::v2::TargetAttributes* target_attributes_;
  ::google::devtools::resultstore::v2::TestAttributes* test_attributes_;
  bool is_visible_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2ftarget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TargetAttributes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.TargetAttributes) */ {
 public:
  TargetAttributes();
  virtual ~TargetAttributes();

  TargetAttributes(const TargetAttributes& from);

  inline TargetAttributes& operator=(const TargetAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetAttributes(TargetAttributes&& from) noexcept
    : TargetAttributes() {
    *this = ::std::move(from);
  }

  inline TargetAttributes& operator=(TargetAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetAttributes* internal_default_instance() {
    return reinterpret_cast<const TargetAttributes*>(
               &_TargetAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(TargetAttributes* other);
  friend void swap(TargetAttributes& a, TargetAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetAttributes* New() const final {
    return CreateMaybeMessage<TargetAttributes>(NULL);
  }

  TargetAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TargetAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TargetAttributes& from);
  void MergeFrom(const TargetAttributes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TargetAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string tags = 3;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 3;
  const ::std::string& tags(int index) const;
  ::std::string* mutable_tags(int index);
  void set_tags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tags(int index, ::std::string&& value);
  #endif
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  ::std::string* add_tags();
  void add_tags(const ::std::string& value);
  #if LANG_CXX11
  void add_tags(::std::string&& value);
  #endif
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& tags() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tags();

  // .google.devtools.resultstore.v2.TargetType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::devtools::resultstore::v2::TargetType type() const;
  void set_type(::google::devtools::resultstore::v2::TargetType value);

  // .google.devtools.resultstore.v2.Language language = 2;
  void clear_language();
  static const int kLanguageFieldNumber = 2;
  ::google::devtools::resultstore::v2::Language language() const;
  void set_language(::google::devtools::resultstore::v2::Language value);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.TargetAttributes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tags_;
  int type_;
  int language_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2ftarget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestAttributes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.resultstore.v2.TestAttributes) */ {
 public:
  TestAttributes();
  virtual ~TestAttributes();

  TestAttributes(const TestAttributes& from);

  inline TestAttributes& operator=(const TestAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestAttributes(TestAttributes&& from) noexcept
    : TestAttributes() {
    *this = ::std::move(from);
  }

  inline TestAttributes& operator=(TestAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestAttributes* internal_default_instance() {
    return reinterpret_cast<const TestAttributes*>(
               &_TestAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(TestAttributes* other);
  friend void swap(TestAttributes& a, TestAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestAttributes* New() const final {
    return CreateMaybeMessage<TestAttributes>(NULL);
  }

  TestAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestAttributes& from);
  void MergeFrom(const TestAttributes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.devtools.resultstore.v2.TestSize size = 1;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::devtools::resultstore::v2::TestSize size() const;
  void set_size(::google::devtools::resultstore::v2::TestSize value);

  // @@protoc_insertion_point(class_scope:google.devtools.resultstore.v2.TestAttributes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fdevtools_2fresultstore_2fv2_2ftarget_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Target_Id

// string invocation_id = 1;
inline void Target_Id::clear_invocation_id() {
  invocation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Target_Id::invocation_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Target.Id.invocation_id)
  return invocation_id_.GetNoArena();
}
inline void Target_Id::set_invocation_id(const ::std::string& value) {
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Target.Id.invocation_id)
}
#if LANG_CXX11
inline void Target_Id::set_invocation_id(::std::string&& value) {
  
  invocation_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Target.Id.invocation_id)
}
#endif
inline void Target_Id::set_invocation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Target.Id.invocation_id)
}
inline void Target_Id::set_invocation_id(const char* value, size_t size) {
  
  invocation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Target.Id.invocation_id)
}
inline ::std::string* Target_Id::mutable_invocation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Target.Id.invocation_id)
  return invocation_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Target_Id::release_invocation_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Target.Id.invocation_id)
  
  return invocation_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Target_Id::set_allocated_invocation_id(::std::string* invocation_id) {
  if (invocation_id != NULL) {
    
  } else {
    
  }
  invocation_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invocation_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Target.Id.invocation_id)
}

// string target_id = 2;
inline void Target_Id::clear_target_id() {
  target_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Target_Id::target_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Target.Id.target_id)
  return target_id_.GetNoArena();
}
inline void Target_Id::set_target_id(const ::std::string& value) {
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Target.Id.target_id)
}
#if LANG_CXX11
inline void Target_Id::set_target_id(::std::string&& value) {
  
  target_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Target.Id.target_id)
}
#endif
inline void Target_Id::set_target_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Target.Id.target_id)
}
inline void Target_Id::set_target_id(const char* value, size_t size) {
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Target.Id.target_id)
}
inline ::std::string* Target_Id::mutable_target_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Target.Id.target_id)
  return target_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Target_Id::release_target_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Target.Id.target_id)
  
  return target_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Target_Id::set_allocated_target_id(::std::string* target_id) {
  if (target_id != NULL) {
    
  } else {
    
  }
  target_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Target.Id.target_id)
}

// -------------------------------------------------------------------

// Target

// string name = 1;
inline void Target::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Target::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Target.name)
  return name_.GetNoArena();
}
inline void Target::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Target.name)
}
#if LANG_CXX11
inline void Target::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.resultstore.v2.Target.name)
}
#endif
inline void Target::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.Target.name)
}
inline void Target::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.Target.name)
}
inline ::std::string* Target::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Target.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Target::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Target.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Target::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Target.name)
}

// .google.devtools.resultstore.v2.Target.Id id = 2;
inline bool Target::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void Target::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
inline const ::google::devtools::resultstore::v2::Target_Id& Target::_internal_id() const {
  return *id_;
}
inline const ::google::devtools::resultstore::v2::Target_Id& Target::id() const {
  const ::google::devtools::resultstore::v2::Target_Id* p = id_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Target.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::Target_Id*>(
      &::google::devtools::resultstore::v2::_Target_Id_default_instance_);
}
inline ::google::devtools::resultstore::v2::Target_Id* Target::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Target.id)
  
  ::google::devtools::resultstore::v2::Target_Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::Target_Id* Target::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::Target_Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Target.id)
  return id_;
}
inline void Target::set_allocated_id(::google::devtools::resultstore::v2::Target_Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete id_;
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Target.id)
}

// .google.devtools.resultstore.v2.StatusAttributes status_attributes = 3;
inline bool Target::has_status_attributes() const {
  return this != internal_default_instance() && status_attributes_ != NULL;
}
inline const ::google::devtools::resultstore::v2::StatusAttributes& Target::_internal_status_attributes() const {
  return *status_attributes_;
}
inline const ::google::devtools::resultstore::v2::StatusAttributes& Target::status_attributes() const {
  const ::google::devtools::resultstore::v2::StatusAttributes* p = status_attributes_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Target.status_attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::StatusAttributes*>(
      &::google::devtools::resultstore::v2::_StatusAttributes_default_instance_);
}
inline ::google::devtools::resultstore::v2::StatusAttributes* Target::release_status_attributes() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Target.status_attributes)
  
  ::google::devtools::resultstore::v2::StatusAttributes* temp = status_attributes_;
  status_attributes_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::StatusAttributes* Target::mutable_status_attributes() {
  
  if (status_attributes_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::StatusAttributes>(GetArenaNoVirtual());
    status_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Target.status_attributes)
  return status_attributes_;
}
inline void Target::set_allocated_status_attributes(::google::devtools::resultstore::v2::StatusAttributes* status_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_attributes_);
  }
  if (status_attributes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status_attributes, submessage_arena);
    }
    
  } else {
    
  }
  status_attributes_ = status_attributes;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Target.status_attributes)
}

// .google.devtools.resultstore.v2.Timing timing = 4;
inline bool Target::has_timing() const {
  return this != internal_default_instance() && timing_ != NULL;
}
inline const ::google::devtools::resultstore::v2::Timing& Target::_internal_timing() const {
  return *timing_;
}
inline const ::google::devtools::resultstore::v2::Timing& Target::timing() const {
  const ::google::devtools::resultstore::v2::Timing* p = timing_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Target.timing)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::Timing*>(
      &::google::devtools::resultstore::v2::_Timing_default_instance_);
}
inline ::google::devtools::resultstore::v2::Timing* Target::release_timing() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Target.timing)
  
  ::google::devtools::resultstore::v2::Timing* temp = timing_;
  timing_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::Timing* Target::mutable_timing() {
  
  if (timing_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::Timing>(GetArenaNoVirtual());
    timing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Target.timing)
  return timing_;
}
inline void Target::set_allocated_timing(::google::devtools::resultstore::v2::Timing* timing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timing_);
  }
  if (timing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timing, submessage_arena);
    }
    
  } else {
    
  }
  timing_ = timing;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Target.timing)
}

// .google.devtools.resultstore.v2.TargetAttributes target_attributes = 5;
inline bool Target::has_target_attributes() const {
  return this != internal_default_instance() && target_attributes_ != NULL;
}
inline void Target::clear_target_attributes() {
  if (GetArenaNoVirtual() == NULL && target_attributes_ != NULL) {
    delete target_attributes_;
  }
  target_attributes_ = NULL;
}
inline const ::google::devtools::resultstore::v2::TargetAttributes& Target::_internal_target_attributes() const {
  return *target_attributes_;
}
inline const ::google::devtools::resultstore::v2::TargetAttributes& Target::target_attributes() const {
  const ::google::devtools::resultstore::v2::TargetAttributes* p = target_attributes_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Target.target_attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::TargetAttributes*>(
      &::google::devtools::resultstore::v2::_TargetAttributes_default_instance_);
}
inline ::google::devtools::resultstore::v2::TargetAttributes* Target::release_target_attributes() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Target.target_attributes)
  
  ::google::devtools::resultstore::v2::TargetAttributes* temp = target_attributes_;
  target_attributes_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::TargetAttributes* Target::mutable_target_attributes() {
  
  if (target_attributes_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::TargetAttributes>(GetArenaNoVirtual());
    target_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Target.target_attributes)
  return target_attributes_;
}
inline void Target::set_allocated_target_attributes(::google::devtools::resultstore::v2::TargetAttributes* target_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete target_attributes_;
  }
  if (target_attributes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_attributes, submessage_arena);
    }
    
  } else {
    
  }
  target_attributes_ = target_attributes;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Target.target_attributes)
}

// .google.devtools.resultstore.v2.TestAttributes test_attributes = 6;
inline bool Target::has_test_attributes() const {
  return this != internal_default_instance() && test_attributes_ != NULL;
}
inline void Target::clear_test_attributes() {
  if (GetArenaNoVirtual() == NULL && test_attributes_ != NULL) {
    delete test_attributes_;
  }
  test_attributes_ = NULL;
}
inline const ::google::devtools::resultstore::v2::TestAttributes& Target::_internal_test_attributes() const {
  return *test_attributes_;
}
inline const ::google::devtools::resultstore::v2::TestAttributes& Target::test_attributes() const {
  const ::google::devtools::resultstore::v2::TestAttributes* p = test_attributes_;
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Target.test_attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::google::devtools::resultstore::v2::TestAttributes*>(
      &::google::devtools::resultstore::v2::_TestAttributes_default_instance_);
}
inline ::google::devtools::resultstore::v2::TestAttributes* Target::release_test_attributes() {
  // @@protoc_insertion_point(field_release:google.devtools.resultstore.v2.Target.test_attributes)
  
  ::google::devtools::resultstore::v2::TestAttributes* temp = test_attributes_;
  test_attributes_ = NULL;
  return temp;
}
inline ::google::devtools::resultstore::v2::TestAttributes* Target::mutable_test_attributes() {
  
  if (test_attributes_ == NULL) {
    auto* p = CreateMaybeMessage<::google::devtools::resultstore::v2::TestAttributes>(GetArenaNoVirtual());
    test_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Target.test_attributes)
  return test_attributes_;
}
inline void Target::set_allocated_test_attributes(::google::devtools::resultstore::v2::TestAttributes* test_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete test_attributes_;
  }
  if (test_attributes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      test_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, test_attributes, submessage_arena);
    }
    
  } else {
    
  }
  test_attributes_ = test_attributes;
  // @@protoc_insertion_point(field_set_allocated:google.devtools.resultstore.v2.Target.test_attributes)
}

// repeated .google.devtools.resultstore.v2.Property properties = 7;
inline int Target::properties_size() const {
  return properties_.size();
}
inline ::google::devtools::resultstore::v2::Property* Target::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Target.properties)
  return properties_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >*
Target::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.Target.properties)
  return &properties_;
}
inline const ::google::devtools::resultstore::v2::Property& Target::properties(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Target.properties)
  return properties_.Get(index);
}
inline ::google::devtools::resultstore::v2::Property* Target::add_properties() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.Target.properties)
  return properties_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::Property >&
Target::properties() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.Target.properties)
  return properties_;
}

// repeated .google.devtools.resultstore.v2.File files = 8;
inline int Target::files_size() const {
  return files_.size();
}
inline ::google::devtools::resultstore::v2::File* Target::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.Target.files)
  return files_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >*
Target::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.Target.files)
  return &files_;
}
inline const ::google::devtools::resultstore::v2::File& Target::files(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Target.files)
  return files_.Get(index);
}
inline ::google::devtools::resultstore::v2::File* Target::add_files() {
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.Target.files)
  return files_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::resultstore::v2::File >&
Target::files() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.Target.files)
  return files_;
}

// bool is_visible = 9;
inline void Target::clear_is_visible() {
  is_visible_ = false;
}
inline bool Target::is_visible() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.Target.is_visible)
  return is_visible_;
}
inline void Target::set_is_visible(bool value) {
  
  is_visible_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.Target.is_visible)
}

// -------------------------------------------------------------------

// TargetAttributes

// .google.devtools.resultstore.v2.TargetType type = 1;
inline void TargetAttributes::clear_type() {
  type_ = 0;
}
inline ::google::devtools::resultstore::v2::TargetType TargetAttributes::type() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TargetAttributes.type)
  return static_cast< ::google::devtools::resultstore::v2::TargetType >(type_);
}
inline void TargetAttributes::set_type(::google::devtools::resultstore::v2::TargetType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.TargetAttributes.type)
}

// .google.devtools.resultstore.v2.Language language = 2;
inline void TargetAttributes::clear_language() {
  language_ = 0;
}
inline ::google::devtools::resultstore::v2::Language TargetAttributes::language() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TargetAttributes.language)
  return static_cast< ::google::devtools::resultstore::v2::Language >(language_);
}
inline void TargetAttributes::set_language(::google::devtools::resultstore::v2::Language value) {
  
  language_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.TargetAttributes.language)
}

// repeated string tags = 3;
inline int TargetAttributes::tags_size() const {
  return tags_.size();
}
inline void TargetAttributes::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& TargetAttributes::tags(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TargetAttributes.tags)
  return tags_.Get(index);
}
inline ::std::string* TargetAttributes::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.resultstore.v2.TargetAttributes.tags)
  return tags_.Mutable(index);
}
inline void TargetAttributes::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.TargetAttributes.tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TargetAttributes::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.TargetAttributes.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TargetAttributes::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.resultstore.v2.TargetAttributes.tags)
}
inline void TargetAttributes::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.resultstore.v2.TargetAttributes.tags)
}
inline ::std::string* TargetAttributes::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.resultstore.v2.TargetAttributes.tags)
  return tags_.Add();
}
inline void TargetAttributes::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.TargetAttributes.tags)
}
#if LANG_CXX11
inline void TargetAttributes::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.resultstore.v2.TargetAttributes.tags)
}
#endif
inline void TargetAttributes::add_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.resultstore.v2.TargetAttributes.tags)
}
inline void TargetAttributes::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.resultstore.v2.TargetAttributes.tags)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TargetAttributes::tags() const {
  // @@protoc_insertion_point(field_list:google.devtools.resultstore.v2.TargetAttributes.tags)
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TargetAttributes::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.resultstore.v2.TargetAttributes.tags)
  return &tags_;
}

// -------------------------------------------------------------------

// TestAttributes

// .google.devtools.resultstore.v2.TestSize size = 1;
inline void TestAttributes::clear_size() {
  size_ = 0;
}
inline ::google::devtools::resultstore::v2::TestSize TestAttributes::size() const {
  // @@protoc_insertion_point(field_get:google.devtools.resultstore.v2.TestAttributes.size)
  return static_cast< ::google::devtools::resultstore::v2::TestSize >(size_);
}
inline void TestAttributes::set_size(::google::devtools::resultstore::v2::TestSize value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.resultstore.v2.TestAttributes.size)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::devtools::resultstore::v2::TargetType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::resultstore::v2::TargetType>() {
  return ::google::devtools::resultstore::v2::TargetType_descriptor();
}
template <> struct is_proto_enum< ::google::devtools::resultstore::v2::TestSize> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::resultstore::v2::TestSize>() {
  return ::google::devtools::resultstore::v2::TestSize_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fdevtools_2fresultstore_2fv2_2ftarget_2eproto
