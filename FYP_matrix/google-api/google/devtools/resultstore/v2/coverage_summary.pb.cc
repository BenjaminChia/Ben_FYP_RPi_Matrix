// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/resultstore/v2/coverage_summary.proto

#include "google/devtools/resultstore/v2/coverage_summary.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BranchCoverageSummary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LineCoverageSummary;
}  // namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {
class LineCoverageSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LineCoverageSummary>
      _instance;
} _LineCoverageSummary_default_instance_;
class BranchCoverageSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BranchCoverageSummary>
      _instance;
} _BranchCoverageSummary_default_instance_;
class LanguageCoverageSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LanguageCoverageSummary>
      _instance;
} _LanguageCoverageSummary_default_instance_;
}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google
namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto {
static void InitDefaultsLineCoverageSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::resultstore::v2::_LineCoverageSummary_default_instance_;
    new (ptr) ::google::devtools::resultstore::v2::LineCoverageSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::resultstore::v2::LineCoverageSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LineCoverageSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLineCoverageSummary}, {}};

static void InitDefaultsBranchCoverageSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::resultstore::v2::_BranchCoverageSummary_default_instance_;
    new (ptr) ::google::devtools::resultstore::v2::BranchCoverageSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::resultstore::v2::BranchCoverageSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BranchCoverageSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBranchCoverageSummary}, {}};

static void InitDefaultsLanguageCoverageSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::devtools::resultstore::v2::_LanguageCoverageSummary_default_instance_;
    new (ptr) ::google::devtools::resultstore::v2::LanguageCoverageSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::devtools::resultstore::v2::LanguageCoverageSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LanguageCoverageSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLanguageCoverageSummary}, {
      &protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::scc_info_LineCoverageSummary.base,
      &protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::scc_info_BranchCoverageSummary.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LineCoverageSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BranchCoverageSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LanguageCoverageSummary.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::LineCoverageSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::LineCoverageSummary, instrumented_line_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::LineCoverageSummary, executed_line_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::BranchCoverageSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::BranchCoverageSummary, total_branch_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::BranchCoverageSummary, executed_branch_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::BranchCoverageSummary, taken_branch_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::LanguageCoverageSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::LanguageCoverageSummary, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::LanguageCoverageSummary, line_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::devtools::resultstore::v2::LanguageCoverageSummary, branch_summary_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::devtools::resultstore::v2::LineCoverageSummary)},
  { 7, -1, sizeof(::google::devtools::resultstore::v2::BranchCoverageSummary)},
  { 15, -1, sizeof(::google::devtools::resultstore::v2::LanguageCoverageSummary)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::resultstore::v2::_LineCoverageSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::resultstore::v2::_BranchCoverageSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::devtools::resultstore::v2::_LanguageCoverageSummary_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/devtools/resultstore/v2/coverage_summary.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n5google/devtools/resultstore/v2/coverag"
      "e_summary.proto\022\036google.devtools.results"
      "tore.v2\032+google/devtools/resultstore/v2/"
      "common.proto\"S\n\023LineCoverageSummary\022\037\n\027i"
      "nstrumented_line_count\030\001 \001(\005\022\033\n\023executed"
      "_line_count\030\002 \001(\005\"n\n\025BranchCoverageSumma"
      "ry\022\032\n\022total_branch_count\030\001 \001(\005\022\035\n\025execut"
      "ed_branch_count\030\002 \001(\005\022\032\n\022taken_branch_co"
      "unt\030\003 \001(\005\"\357\001\n\027LanguageCoverageSummary\022:\n"
      "\010language\030\001 \001(\0162(.google.devtools.result"
      "store.v2.Language\022I\n\014line_summary\030\002 \001(\0132"
      "3.google.devtools.resultstore.v2.LineCov"
      "erageSummary\022M\n\016branch_summary\030\003 \001(\01325.g"
      "oogle.devtools.resultstore.v2.BranchCove"
      "rageSummaryBq\n\"com.google.devtools.resul"
      "tstore.v2P\001ZIgoogle.golang.org/genproto/"
      "googleapis/devtools/resultstore/v2;resul"
      "tstoreb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 694);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/resultstore/v2/coverage_summary.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto
namespace google {
namespace devtools {
namespace resultstore {
namespace v2 {

// ===================================================================

void LineCoverageSummary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LineCoverageSummary::kInstrumentedLineCountFieldNumber;
const int LineCoverageSummary::kExecutedLineCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LineCoverageSummary::LineCoverageSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::scc_info_LineCoverageSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.resultstore.v2.LineCoverageSummary)
}
LineCoverageSummary::LineCoverageSummary(const LineCoverageSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&instrumented_line_count_, &from.instrumented_line_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&executed_line_count_) -
    reinterpret_cast<char*>(&instrumented_line_count_)) + sizeof(executed_line_count_));
  // @@protoc_insertion_point(copy_constructor:google.devtools.resultstore.v2.LineCoverageSummary)
}

void LineCoverageSummary::SharedCtor() {
  ::memset(&instrumented_line_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&executed_line_count_) -
      reinterpret_cast<char*>(&instrumented_line_count_)) + sizeof(executed_line_count_));
}

LineCoverageSummary::~LineCoverageSummary() {
  // @@protoc_insertion_point(destructor:google.devtools.resultstore.v2.LineCoverageSummary)
  SharedDtor();
}

void LineCoverageSummary::SharedDtor() {
}

void LineCoverageSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LineCoverageSummary::descriptor() {
  ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LineCoverageSummary& LineCoverageSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::scc_info_LineCoverageSummary.base);
  return *internal_default_instance();
}


void LineCoverageSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.resultstore.v2.LineCoverageSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&instrumented_line_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&executed_line_count_) -
      reinterpret_cast<char*>(&instrumented_line_count_)) + sizeof(executed_line_count_));
  _internal_metadata_.Clear();
}

bool LineCoverageSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.resultstore.v2.LineCoverageSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 instrumented_line_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instrumented_line_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 executed_line_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &executed_line_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.resultstore.v2.LineCoverageSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.resultstore.v2.LineCoverageSummary)
  return false;
#undef DO_
}

void LineCoverageSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.resultstore.v2.LineCoverageSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 instrumented_line_count = 1;
  if (this->instrumented_line_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->instrumented_line_count(), output);
  }

  // int32 executed_line_count = 2;
  if (this->executed_line_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->executed_line_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.resultstore.v2.LineCoverageSummary)
}

::google::protobuf::uint8* LineCoverageSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.resultstore.v2.LineCoverageSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 instrumented_line_count = 1;
  if (this->instrumented_line_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->instrumented_line_count(), target);
  }

  // int32 executed_line_count = 2;
  if (this->executed_line_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->executed_line_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.resultstore.v2.LineCoverageSummary)
  return target;
}

size_t LineCoverageSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.resultstore.v2.LineCoverageSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 instrumented_line_count = 1;
  if (this->instrumented_line_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->instrumented_line_count());
  }

  // int32 executed_line_count = 2;
  if (this->executed_line_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->executed_line_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LineCoverageSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.resultstore.v2.LineCoverageSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const LineCoverageSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LineCoverageSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.resultstore.v2.LineCoverageSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.resultstore.v2.LineCoverageSummary)
    MergeFrom(*source);
  }
}

void LineCoverageSummary::MergeFrom(const LineCoverageSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.resultstore.v2.LineCoverageSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instrumented_line_count() != 0) {
    set_instrumented_line_count(from.instrumented_line_count());
  }
  if (from.executed_line_count() != 0) {
    set_executed_line_count(from.executed_line_count());
  }
}

void LineCoverageSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.resultstore.v2.LineCoverageSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LineCoverageSummary::CopyFrom(const LineCoverageSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.resultstore.v2.LineCoverageSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LineCoverageSummary::IsInitialized() const {
  return true;
}

void LineCoverageSummary::Swap(LineCoverageSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LineCoverageSummary::InternalSwap(LineCoverageSummary* other) {
  using std::swap;
  swap(instrumented_line_count_, other->instrumented_line_count_);
  swap(executed_line_count_, other->executed_line_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LineCoverageSummary::GetMetadata() const {
  protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BranchCoverageSummary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BranchCoverageSummary::kTotalBranchCountFieldNumber;
const int BranchCoverageSummary::kExecutedBranchCountFieldNumber;
const int BranchCoverageSummary::kTakenBranchCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BranchCoverageSummary::BranchCoverageSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::scc_info_BranchCoverageSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.resultstore.v2.BranchCoverageSummary)
}
BranchCoverageSummary::BranchCoverageSummary(const BranchCoverageSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_branch_count_, &from.total_branch_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&taken_branch_count_) -
    reinterpret_cast<char*>(&total_branch_count_)) + sizeof(taken_branch_count_));
  // @@protoc_insertion_point(copy_constructor:google.devtools.resultstore.v2.BranchCoverageSummary)
}

void BranchCoverageSummary::SharedCtor() {
  ::memset(&total_branch_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&taken_branch_count_) -
      reinterpret_cast<char*>(&total_branch_count_)) + sizeof(taken_branch_count_));
}

BranchCoverageSummary::~BranchCoverageSummary() {
  // @@protoc_insertion_point(destructor:google.devtools.resultstore.v2.BranchCoverageSummary)
  SharedDtor();
}

void BranchCoverageSummary::SharedDtor() {
}

void BranchCoverageSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BranchCoverageSummary::descriptor() {
  ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BranchCoverageSummary& BranchCoverageSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::scc_info_BranchCoverageSummary.base);
  return *internal_default_instance();
}


void BranchCoverageSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.resultstore.v2.BranchCoverageSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&total_branch_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&taken_branch_count_) -
      reinterpret_cast<char*>(&total_branch_count_)) + sizeof(taken_branch_count_));
  _internal_metadata_.Clear();
}

bool BranchCoverageSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.resultstore.v2.BranchCoverageSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 total_branch_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_branch_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 executed_branch_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &executed_branch_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 taken_branch_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taken_branch_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.resultstore.v2.BranchCoverageSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.resultstore.v2.BranchCoverageSummary)
  return false;
#undef DO_
}

void BranchCoverageSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.resultstore.v2.BranchCoverageSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total_branch_count = 1;
  if (this->total_branch_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->total_branch_count(), output);
  }

  // int32 executed_branch_count = 2;
  if (this->executed_branch_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->executed_branch_count(), output);
  }

  // int32 taken_branch_count = 3;
  if (this->taken_branch_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->taken_branch_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.resultstore.v2.BranchCoverageSummary)
}

::google::protobuf::uint8* BranchCoverageSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.resultstore.v2.BranchCoverageSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total_branch_count = 1;
  if (this->total_branch_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->total_branch_count(), target);
  }

  // int32 executed_branch_count = 2;
  if (this->executed_branch_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->executed_branch_count(), target);
  }

  // int32 taken_branch_count = 3;
  if (this->taken_branch_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->taken_branch_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.resultstore.v2.BranchCoverageSummary)
  return target;
}

size_t BranchCoverageSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.resultstore.v2.BranchCoverageSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 total_branch_count = 1;
  if (this->total_branch_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_branch_count());
  }

  // int32 executed_branch_count = 2;
  if (this->executed_branch_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->executed_branch_count());
  }

  // int32 taken_branch_count = 3;
  if (this->taken_branch_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taken_branch_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BranchCoverageSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.resultstore.v2.BranchCoverageSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const BranchCoverageSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BranchCoverageSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.resultstore.v2.BranchCoverageSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.resultstore.v2.BranchCoverageSummary)
    MergeFrom(*source);
  }
}

void BranchCoverageSummary::MergeFrom(const BranchCoverageSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.resultstore.v2.BranchCoverageSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.total_branch_count() != 0) {
    set_total_branch_count(from.total_branch_count());
  }
  if (from.executed_branch_count() != 0) {
    set_executed_branch_count(from.executed_branch_count());
  }
  if (from.taken_branch_count() != 0) {
    set_taken_branch_count(from.taken_branch_count());
  }
}

void BranchCoverageSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.resultstore.v2.BranchCoverageSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BranchCoverageSummary::CopyFrom(const BranchCoverageSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.resultstore.v2.BranchCoverageSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BranchCoverageSummary::IsInitialized() const {
  return true;
}

void BranchCoverageSummary::Swap(BranchCoverageSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BranchCoverageSummary::InternalSwap(BranchCoverageSummary* other) {
  using std::swap;
  swap(total_branch_count_, other->total_branch_count_);
  swap(executed_branch_count_, other->executed_branch_count_);
  swap(taken_branch_count_, other->taken_branch_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BranchCoverageSummary::GetMetadata() const {
  protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LanguageCoverageSummary::InitAsDefaultInstance() {
  ::google::devtools::resultstore::v2::_LanguageCoverageSummary_default_instance_._instance.get_mutable()->line_summary_ = const_cast< ::google::devtools::resultstore::v2::LineCoverageSummary*>(
      ::google::devtools::resultstore::v2::LineCoverageSummary::internal_default_instance());
  ::google::devtools::resultstore::v2::_LanguageCoverageSummary_default_instance_._instance.get_mutable()->branch_summary_ = const_cast< ::google::devtools::resultstore::v2::BranchCoverageSummary*>(
      ::google::devtools::resultstore::v2::BranchCoverageSummary::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LanguageCoverageSummary::kLanguageFieldNumber;
const int LanguageCoverageSummary::kLineSummaryFieldNumber;
const int LanguageCoverageSummary::kBranchSummaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LanguageCoverageSummary::LanguageCoverageSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::scc_info_LanguageCoverageSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.resultstore.v2.LanguageCoverageSummary)
}
LanguageCoverageSummary::LanguageCoverageSummary(const LanguageCoverageSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_line_summary()) {
    line_summary_ = new ::google::devtools::resultstore::v2::LineCoverageSummary(*from.line_summary_);
  } else {
    line_summary_ = NULL;
  }
  if (from.has_branch_summary()) {
    branch_summary_ = new ::google::devtools::resultstore::v2::BranchCoverageSummary(*from.branch_summary_);
  } else {
    branch_summary_ = NULL;
  }
  language_ = from.language_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.resultstore.v2.LanguageCoverageSummary)
}

void LanguageCoverageSummary::SharedCtor() {
  ::memset(&line_summary_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&language_) -
      reinterpret_cast<char*>(&line_summary_)) + sizeof(language_));
}

LanguageCoverageSummary::~LanguageCoverageSummary() {
  // @@protoc_insertion_point(destructor:google.devtools.resultstore.v2.LanguageCoverageSummary)
  SharedDtor();
}

void LanguageCoverageSummary::SharedDtor() {
  if (this != internal_default_instance()) delete line_summary_;
  if (this != internal_default_instance()) delete branch_summary_;
}

void LanguageCoverageSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LanguageCoverageSummary::descriptor() {
  ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LanguageCoverageSummary& LanguageCoverageSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::scc_info_LanguageCoverageSummary.base);
  return *internal_default_instance();
}


void LanguageCoverageSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.resultstore.v2.LanguageCoverageSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && line_summary_ != NULL) {
    delete line_summary_;
  }
  line_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && branch_summary_ != NULL) {
    delete branch_summary_;
  }
  branch_summary_ = NULL;
  language_ = 0;
  _internal_metadata_.Clear();
}

bool LanguageCoverageSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.resultstore.v2.LanguageCoverageSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.resultstore.v2.Language language = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_language(static_cast< ::google::devtools::resultstore::v2::Language >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.resultstore.v2.LineCoverageSummary line_summary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_line_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.resultstore.v2.BranchCoverageSummary branch_summary = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_branch_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.resultstore.v2.LanguageCoverageSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.resultstore.v2.LanguageCoverageSummary)
  return false;
#undef DO_
}

void LanguageCoverageSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.resultstore.v2.LanguageCoverageSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.resultstore.v2.Language language = 1;
  if (this->language() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->language(), output);
  }

  // .google.devtools.resultstore.v2.LineCoverageSummary line_summary = 2;
  if (this->has_line_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_line_summary(), output);
  }

  // .google.devtools.resultstore.v2.BranchCoverageSummary branch_summary = 3;
  if (this->has_branch_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_branch_summary(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.devtools.resultstore.v2.LanguageCoverageSummary)
}

::google::protobuf::uint8* LanguageCoverageSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.resultstore.v2.LanguageCoverageSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.resultstore.v2.Language language = 1;
  if (this->language() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->language(), target);
  }

  // .google.devtools.resultstore.v2.LineCoverageSummary line_summary = 2;
  if (this->has_line_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_line_summary(), deterministic, target);
  }

  // .google.devtools.resultstore.v2.BranchCoverageSummary branch_summary = 3;
  if (this->has_branch_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_branch_summary(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.resultstore.v2.LanguageCoverageSummary)
  return target;
}

size_t LanguageCoverageSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.resultstore.v2.LanguageCoverageSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.devtools.resultstore.v2.LineCoverageSummary line_summary = 2;
  if (this->has_line_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *line_summary_);
  }

  // .google.devtools.resultstore.v2.BranchCoverageSummary branch_summary = 3;
  if (this->has_branch_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *branch_summary_);
  }

  // .google.devtools.resultstore.v2.Language language = 1;
  if (this->language() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->language());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LanguageCoverageSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.resultstore.v2.LanguageCoverageSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const LanguageCoverageSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LanguageCoverageSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.resultstore.v2.LanguageCoverageSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.resultstore.v2.LanguageCoverageSummary)
    MergeFrom(*source);
  }
}

void LanguageCoverageSummary::MergeFrom(const LanguageCoverageSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.resultstore.v2.LanguageCoverageSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_line_summary()) {
    mutable_line_summary()->::google::devtools::resultstore::v2::LineCoverageSummary::MergeFrom(from.line_summary());
  }
  if (from.has_branch_summary()) {
    mutable_branch_summary()->::google::devtools::resultstore::v2::BranchCoverageSummary::MergeFrom(from.branch_summary());
  }
  if (from.language() != 0) {
    set_language(from.language());
  }
}

void LanguageCoverageSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.resultstore.v2.LanguageCoverageSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LanguageCoverageSummary::CopyFrom(const LanguageCoverageSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.resultstore.v2.LanguageCoverageSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LanguageCoverageSummary::IsInitialized() const {
  return true;
}

void LanguageCoverageSummary::Swap(LanguageCoverageSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LanguageCoverageSummary::InternalSwap(LanguageCoverageSummary* other) {
  using std::swap;
  swap(line_summary_, other->line_summary_);
  swap(branch_summary_, other->branch_summary_);
  swap(language_, other->language_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LanguageCoverageSummary::GetMetadata() const {
  protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fdevtools_2fresultstore_2fv2_2fcoverage_5fsummary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace resultstore
}  // namespace devtools
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::resultstore::v2::LineCoverageSummary* Arena::CreateMaybeMessage< ::google::devtools::resultstore::v2::LineCoverageSummary >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::resultstore::v2::LineCoverageSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::resultstore::v2::BranchCoverageSummary* Arena::CreateMaybeMessage< ::google::devtools::resultstore::v2::BranchCoverageSummary >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::resultstore::v2::BranchCoverageSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::devtools::resultstore::v2::LanguageCoverageSummary* Arena::CreateMaybeMessage< ::google::devtools::resultstore::v2::LanguageCoverageSummary >(Arena* arena) {
  return Arena::CreateInternal< ::google::devtools::resultstore::v2::LanguageCoverageSummary >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
