// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/notification_service.proto

#include "google/monitoring/v3/notification_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fmonitoring_2fv3_2fnotification_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2fnotification_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NotificationChannelDescriptor;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2fnotification_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_NotificationChannel;
}  // namespace protobuf_google_2fmonitoring_2fv3_2fnotification_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace monitoring {
namespace v3 {
class ListNotificationChannelDescriptorsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNotificationChannelDescriptorsRequest>
      _instance;
} _ListNotificationChannelDescriptorsRequest_default_instance_;
class ListNotificationChannelDescriptorsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNotificationChannelDescriptorsResponse>
      _instance;
} _ListNotificationChannelDescriptorsResponse_default_instance_;
class GetNotificationChannelDescriptorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetNotificationChannelDescriptorRequest>
      _instance;
} _GetNotificationChannelDescriptorRequest_default_instance_;
class CreateNotificationChannelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateNotificationChannelRequest>
      _instance;
} _CreateNotificationChannelRequest_default_instance_;
class ListNotificationChannelsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNotificationChannelsRequest>
      _instance;
} _ListNotificationChannelsRequest_default_instance_;
class ListNotificationChannelsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListNotificationChannelsResponse>
      _instance;
} _ListNotificationChannelsResponse_default_instance_;
class GetNotificationChannelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetNotificationChannelRequest>
      _instance;
} _GetNotificationChannelRequest_default_instance_;
class UpdateNotificationChannelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateNotificationChannelRequest>
      _instance;
} _UpdateNotificationChannelRequest_default_instance_;
class DeleteNotificationChannelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteNotificationChannelRequest>
      _instance;
} _DeleteNotificationChannelRequest_default_instance_;
class SendNotificationChannelVerificationCodeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendNotificationChannelVerificationCodeRequest>
      _instance;
} _SendNotificationChannelVerificationCodeRequest_default_instance_;
class GetNotificationChannelVerificationCodeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetNotificationChannelVerificationCodeRequest>
      _instance;
} _GetNotificationChannelVerificationCodeRequest_default_instance_;
class GetNotificationChannelVerificationCodeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetNotificationChannelVerificationCodeResponse>
      _instance;
} _GetNotificationChannelVerificationCodeResponse_default_instance_;
class VerifyNotificationChannelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyNotificationChannelRequest>
      _instance;
} _VerifyNotificationChannelRequest_default_instance_;
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto {
static void InitDefaultsListNotificationChannelDescriptorsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListNotificationChannelDescriptorsRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::ListNotificationChannelDescriptorsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListNotificationChannelDescriptorsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListNotificationChannelDescriptorsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListNotificationChannelDescriptorsRequest}, {}};

static void InitDefaultsListNotificationChannelDescriptorsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListNotificationChannelDescriptorsResponse_default_instance_;
    new (ptr) ::google::monitoring::v3::ListNotificationChannelDescriptorsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListNotificationChannelDescriptorsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListNotificationChannelDescriptorsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListNotificationChannelDescriptorsResponse}, {
      &protobuf_google_2fmonitoring_2fv3_2fnotification_2eproto::scc_info_NotificationChannelDescriptor.base,}};

static void InitDefaultsGetNotificationChannelDescriptorRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_GetNotificationChannelDescriptorRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::GetNotificationChannelDescriptorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::GetNotificationChannelDescriptorRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetNotificationChannelDescriptorRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetNotificationChannelDescriptorRequest}, {}};

static void InitDefaultsCreateNotificationChannelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_CreateNotificationChannelRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::CreateNotificationChannelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::CreateNotificationChannelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateNotificationChannelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateNotificationChannelRequest}, {
      &protobuf_google_2fmonitoring_2fv3_2fnotification_2eproto::scc_info_NotificationChannel.base,}};

static void InitDefaultsListNotificationChannelsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListNotificationChannelsRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::ListNotificationChannelsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListNotificationChannelsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListNotificationChannelsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListNotificationChannelsRequest}, {}};

static void InitDefaultsListNotificationChannelsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListNotificationChannelsResponse_default_instance_;
    new (ptr) ::google::monitoring::v3::ListNotificationChannelsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListNotificationChannelsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListNotificationChannelsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListNotificationChannelsResponse}, {
      &protobuf_google_2fmonitoring_2fv3_2fnotification_2eproto::scc_info_NotificationChannel.base,}};

static void InitDefaultsGetNotificationChannelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_GetNotificationChannelRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::GetNotificationChannelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::GetNotificationChannelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetNotificationChannelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetNotificationChannelRequest}, {}};

static void InitDefaultsUpdateNotificationChannelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_UpdateNotificationChannelRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::UpdateNotificationChannelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::UpdateNotificationChannelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateNotificationChannelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateNotificationChannelRequest}, {
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,
      &protobuf_google_2fmonitoring_2fv3_2fnotification_2eproto::scc_info_NotificationChannel.base,}};

static void InitDefaultsDeleteNotificationChannelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_DeleteNotificationChannelRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::DeleteNotificationChannelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::DeleteNotificationChannelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteNotificationChannelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteNotificationChannelRequest}, {}};

static void InitDefaultsSendNotificationChannelVerificationCodeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_SendNotificationChannelVerificationCodeRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::SendNotificationChannelVerificationCodeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::SendNotificationChannelVerificationCodeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendNotificationChannelVerificationCodeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendNotificationChannelVerificationCodeRequest}, {}};

static void InitDefaultsGetNotificationChannelVerificationCodeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_GetNotificationChannelVerificationCodeRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::GetNotificationChannelVerificationCodeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::GetNotificationChannelVerificationCodeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetNotificationChannelVerificationCodeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetNotificationChannelVerificationCodeRequest}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsGetNotificationChannelVerificationCodeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_GetNotificationChannelVerificationCodeResponse_default_instance_;
    new (ptr) ::google::monitoring::v3::GetNotificationChannelVerificationCodeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::GetNotificationChannelVerificationCodeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetNotificationChannelVerificationCodeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetNotificationChannelVerificationCodeResponse}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsVerifyNotificationChannelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_VerifyNotificationChannelRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::VerifyNotificationChannelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::VerifyNotificationChannelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyNotificationChannelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyNotificationChannelRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ListNotificationChannelDescriptorsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNotificationChannelDescriptorsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetNotificationChannelDescriptorRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateNotificationChannelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNotificationChannelsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListNotificationChannelsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetNotificationChannelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateNotificationChannelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteNotificationChannelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendNotificationChannelVerificationCodeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetNotificationChannelVerificationCodeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetNotificationChannelVerificationCodeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyNotificationChannelRequest.base);
}

::google::protobuf::Metadata file_level_metadata[13];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelDescriptorsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelDescriptorsRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelDescriptorsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelDescriptorsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelDescriptorsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelDescriptorsResponse, channel_descriptors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelDescriptorsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetNotificationChannelDescriptorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetNotificationChannelDescriptorRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateNotificationChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateNotificationChannelRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateNotificationChannelRequest, notification_channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelsRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelsRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelsRequest, order_by_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelsResponse, notification_channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListNotificationChannelsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetNotificationChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetNotificationChannelRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::UpdateNotificationChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::UpdateNotificationChannelRequest, update_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::UpdateNotificationChannelRequest, notification_channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::DeleteNotificationChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::DeleteNotificationChannelRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::DeleteNotificationChannelRequest, force_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::SendNotificationChannelVerificationCodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::SendNotificationChannelVerificationCodeRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetNotificationChannelVerificationCodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetNotificationChannelVerificationCodeRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetNotificationChannelVerificationCodeRequest, expire_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetNotificationChannelVerificationCodeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetNotificationChannelVerificationCodeResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetNotificationChannelVerificationCodeResponse, expire_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::VerifyNotificationChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::VerifyNotificationChannelRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::VerifyNotificationChannelRequest, code_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::monitoring::v3::ListNotificationChannelDescriptorsRequest)},
  { 8, -1, sizeof(::google::monitoring::v3::ListNotificationChannelDescriptorsResponse)},
  { 15, -1, sizeof(::google::monitoring::v3::GetNotificationChannelDescriptorRequest)},
  { 21, -1, sizeof(::google::monitoring::v3::CreateNotificationChannelRequest)},
  { 28, -1, sizeof(::google::monitoring::v3::ListNotificationChannelsRequest)},
  { 38, -1, sizeof(::google::monitoring::v3::ListNotificationChannelsResponse)},
  { 45, -1, sizeof(::google::monitoring::v3::GetNotificationChannelRequest)},
  { 51, -1, sizeof(::google::monitoring::v3::UpdateNotificationChannelRequest)},
  { 58, -1, sizeof(::google::monitoring::v3::DeleteNotificationChannelRequest)},
  { 65, -1, sizeof(::google::monitoring::v3::SendNotificationChannelVerificationCodeRequest)},
  { 71, -1, sizeof(::google::monitoring::v3::GetNotificationChannelVerificationCodeRequest)},
  { 78, -1, sizeof(::google::monitoring::v3::GetNotificationChannelVerificationCodeResponse)},
  { 85, -1, sizeof(::google::monitoring::v3::VerifyNotificationChannelRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListNotificationChannelDescriptorsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListNotificationChannelDescriptorsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_GetNotificationChannelDescriptorRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_CreateNotificationChannelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListNotificationChannelsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListNotificationChannelsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_GetNotificationChannelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_UpdateNotificationChannelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_DeleteNotificationChannelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_SendNotificationChannelVerificationCodeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_GetNotificationChannelVerificationCodeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_GetNotificationChannelVerificationCodeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_VerifyNotificationChannelRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/monitoring/v3/notification_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n/google/monitoring/v3/notification_serv"
      "ice.proto\022\024google.monitoring.v3\032\034google/"
      "api/annotations.proto\032\'google/monitoring"
      "/v3/notification.proto\032\033google/protobuf/"
      "empty.proto\032 google/protobuf/field_mask."
      "proto\032\037google/protobuf/timestamp.proto\"`"
      "\n)ListNotificationChannelDescriptorsRequ"
      "est\022\014\n\004name\030\004 \001(\t\022\021\n\tpage_size\030\002 \001(\005\022\022\n\n"
      "page_token\030\003 \001(\t\"\227\001\n*ListNotificationCha"
      "nnelDescriptorsResponse\022P\n\023channel_descr"
      "iptors\030\001 \003(\01323.google.monitoring.v3.Noti"
      "ficationChannelDescriptor\022\027\n\017next_page_t"
      "oken\030\002 \001(\t\"7\n\'GetNotificationChannelDesc"
      "riptorRequest\022\014\n\004name\030\003 \001(\t\"y\n CreateNot"
      "ificationChannelRequest\022\014\n\004name\030\003 \001(\t\022G\n"
      "\024notification_channel\030\002 \001(\0132).google.mon"
      "itoring.v3.NotificationChannel\"x\n\037ListNo"
      "tificationChannelsRequest\022\014\n\004name\030\005 \001(\t\022"
      "\016\n\006filter\030\006 \001(\t\022\020\n\010order_by\030\007 \001(\t\022\021\n\tpag"
      "e_size\030\003 \001(\005\022\022\n\npage_token\030\004 \001(\t\"\205\001\n Lis"
      "tNotificationChannelsResponse\022H\n\025notific"
      "ation_channels\030\003 \003(\0132).google.monitoring"
      ".v3.NotificationChannel\022\027\n\017next_page_tok"
      "en\030\002 \001(\t\"-\n\035GetNotificationChannelReques"
      "t\022\014\n\004name\030\003 \001(\t\"\234\001\n UpdateNotificationCh"
      "annelRequest\022/\n\013update_mask\030\002 \001(\0132\032.goog"
      "le.protobuf.FieldMask\022G\n\024notification_ch"
      "annel\030\003 \001(\0132).google.monitoring.v3.Notif"
      "icationChannel\"\?\n DeleteNotificationChan"
      "nelRequest\022\014\n\004name\030\003 \001(\t\022\r\n\005force\030\005 \001(\010\""
      ">\n.SendNotificationChannelVerificationCo"
      "deRequest\022\014\n\004name\030\001 \001(\t\"n\n-GetNotificati"
      "onChannelVerificationCodeRequest\022\014\n\004name"
      "\030\001 \001(\t\022/\n\013expire_time\030\002 \001(\0132\032.google.pro"
      "tobuf.Timestamp\"o\n.GetNotificationChanne"
      "lVerificationCodeResponse\022\014\n\004code\030\001 \001(\t\022"
      "/\n\013expire_time\030\002 \001(\0132\032.google.protobuf.T"
      "imestamp\">\n VerifyNotificationChannelReq"
      "uest\022\014\n\004name\030\001 \001(\t\022\014\n\004code\030\002 \001(\t2\273\020\n\032Not"
      "ificationChannelService\022\345\001\n\"ListNotifica"
      "tionChannelDescriptors\022\?.google.monitori"
      "ng.v3.ListNotificationChannelDescriptors"
      "Request\032@.google.monitoring.v3.ListNotif"
      "icationChannelDescriptorsResponse\"<\202\323\344\223\002"
      "6\0224/v3/{name=projects/*}/notificationCha"
      "nnelDescriptors\022\326\001\n GetNotificationChann"
      "elDescriptor\022=.google.monitoring.v3.GetN"
      "otificationChannelDescriptorRequest\0323.go"
      "ogle.monitoring.v3.NotificationChannelDe"
      "scriptor\">\202\323\344\223\0028\0226/v3/{name=projects/*/n"
      "otificationChannelDescriptors/*}\022\275\001\n\030Lis"
      "tNotificationChannels\0225.google.monitorin"
      "g.v3.ListNotificationChannelsRequest\0326.g"
      "oogle.monitoring.v3.ListNotificationChan"
      "nelsResponse\"2\202\323\344\223\002,\022*/v3/{name=projects"
      "/*}/notificationChannels\022\256\001\n\026GetNotifica"
      "tionChannel\0223.google.monitoring.v3.GetNo"
      "tificationChannelRequest\032).google.monito"
      "ring.v3.NotificationChannel\"4\202\323\344\223\002.\022,/v3"
      "/{name=projects/*/notificationChannels/*"
      "}\022\310\001\n\031CreateNotificationChannel\0226.google"
      ".monitoring.v3.CreateNotificationChannel"
      "Request\032).google.monitoring.v3.Notificat"
      "ionChannel\"H\202\323\344\223\002B\"*/v3/{name=projects/*"
      "}/notificationChannels:\024notification_cha"
      "nnel\022\337\001\n\031UpdateNotificationChannel\0226.goo"
      "gle.monitoring.v3.UpdateNotificationChan"
      "nelRequest\032).google.monitoring.v3.Notifi"
      "cationChannel\"_\202\323\344\223\002Y2A/v3/{notification"
      "_channel.name=projects/*/notificationCha"
      "nnels/*}:\024notification_channel\022\241\001\n\031Delet"
      "eNotificationChannel\0226.google.monitoring"
      ".v3.DeleteNotificationChannelRequest\032\026.g"
      "oogle.protobuf.Empty\"4\202\323\344\223\002.*,/v3/{name="
      "projects/*/notificationChannels/*}\022\325\001\n\'S"
      "endNotificationChannelVerificationCode\022D"
      ".google.monitoring.v3.SendNotificationCh"
      "annelVerificationCodeRequest\032\026.google.pr"
      "otobuf.Empty\"L\202\323\344\223\002F\"A/v3/{name=projects"
      "/*/notificationChannels/*}:sendVerificat"
      "ionCode:\001*\022\200\002\n&GetNotificationChannelVer"
      "ificationCode\022C.google.monitoring.v3.Get"
      "NotificationChannelVerificationCodeReque"
      "st\032D.google.monitoring.v3.GetNotificatio"
      "nChannelVerificationCodeResponse\"K\202\323\344\223\002E"
      "\"@/v3/{name=projects/*/notificationChann"
      "els/*}:getVerificationCode:\001*\022\276\001\n\031Verify"
      "NotificationChannel\0226.google.monitoring."
      "v3.VerifyNotificationChannelRequest\032).go"
      "ogle.monitoring.v3.NotificationChannel\">"
      "\202\323\344\223\0028\"3/v3/{name=projects/*/notificatio"
      "nChannels/*}:verify:\001*B\260\001\n\030com.google.mo"
      "nitoring.v3B\030NotificationServiceProtoP\001Z"
      ">google.golang.org/genproto/googleapis/m"
      "onitoring/v3;monitoring\252\002\032Google.Cloud.M"
      "onitoring.V3\312\002\032Google\\Cloud\\Monitoring\\V"
      "3b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3849);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/monitoring/v3/notification_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto
namespace google {
namespace monitoring {
namespace v3 {

// ===================================================================

void ListNotificationChannelDescriptorsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNotificationChannelDescriptorsRequest::kNameFieldNumber;
const int ListNotificationChannelDescriptorsRequest::kPageSizeFieldNumber;
const int ListNotificationChannelDescriptorsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNotificationChannelDescriptorsRequest::ListNotificationChannelDescriptorsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_ListNotificationChannelDescriptorsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
}
ListNotificationChannelDescriptorsRequest::ListNotificationChannelDescriptorsRequest(const ListNotificationChannelDescriptorsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
}

void ListNotificationChannelDescriptorsRequest::SharedCtor() {
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListNotificationChannelDescriptorsRequest::~ListNotificationChannelDescriptorsRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
  SharedDtor();
}

void ListNotificationChannelDescriptorsRequest::SharedDtor() {
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNotificationChannelDescriptorsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListNotificationChannelDescriptorsRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNotificationChannelDescriptorsRequest& ListNotificationChannelDescriptorsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_ListNotificationChannelDescriptorsRequest.base);
  return *internal_default_instance();
}


void ListNotificationChannelDescriptorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListNotificationChannelDescriptorsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListNotificationChannelDescriptorsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListNotificationChannelDescriptorsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
  return false;
#undef DO_
}

void ListNotificationChannelDescriptorsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelDescriptorsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelDescriptorsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
}

::google::protobuf::uint8* ListNotificationChannelDescriptorsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelDescriptorsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelDescriptorsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
  return target;
}

size_t ListNotificationChannelDescriptorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNotificationChannelDescriptorsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNotificationChannelDescriptorsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNotificationChannelDescriptorsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
    MergeFrom(*source);
  }
}

void ListNotificationChannelDescriptorsRequest::MergeFrom(const ListNotificationChannelDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListNotificationChannelDescriptorsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNotificationChannelDescriptorsRequest::CopyFrom(const ListNotificationChannelDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListNotificationChannelDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNotificationChannelDescriptorsRequest::IsInitialized() const {
  return true;
}

void ListNotificationChannelDescriptorsRequest::Swap(ListNotificationChannelDescriptorsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNotificationChannelDescriptorsRequest::InternalSwap(ListNotificationChannelDescriptorsRequest* other) {
  using std::swap;
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListNotificationChannelDescriptorsRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListNotificationChannelDescriptorsResponse::InitAsDefaultInstance() {
}
void ListNotificationChannelDescriptorsResponse::clear_channel_descriptors() {
  channel_descriptors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNotificationChannelDescriptorsResponse::kChannelDescriptorsFieldNumber;
const int ListNotificationChannelDescriptorsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNotificationChannelDescriptorsResponse::ListNotificationChannelDescriptorsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_ListNotificationChannelDescriptorsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
}
ListNotificationChannelDescriptorsResponse::ListNotificationChannelDescriptorsResponse(const ListNotificationChannelDescriptorsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channel_descriptors_(from.channel_descriptors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
}

void ListNotificationChannelDescriptorsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListNotificationChannelDescriptorsResponse::~ListNotificationChannelDescriptorsResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
  SharedDtor();
}

void ListNotificationChannelDescriptorsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNotificationChannelDescriptorsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListNotificationChannelDescriptorsResponse::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNotificationChannelDescriptorsResponse& ListNotificationChannelDescriptorsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_ListNotificationChannelDescriptorsResponse.base);
  return *internal_default_instance();
}


void ListNotificationChannelDescriptorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_descriptors_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListNotificationChannelDescriptorsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.monitoring.v3.NotificationChannelDescriptor channel_descriptors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channel_descriptors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListNotificationChannelDescriptorsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
  return false;
#undef DO_
}

void ListNotificationChannelDescriptorsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.monitoring.v3.NotificationChannelDescriptor channel_descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_descriptors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->channel_descriptors(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelDescriptorsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
}

::google::protobuf::uint8* ListNotificationChannelDescriptorsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.monitoring.v3.NotificationChannelDescriptor channel_descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_descriptors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->channel_descriptors(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelDescriptorsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
  return target;
}

size_t ListNotificationChannelDescriptorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.monitoring.v3.NotificationChannelDescriptor channel_descriptors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->channel_descriptors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channel_descriptors(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNotificationChannelDescriptorsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNotificationChannelDescriptorsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNotificationChannelDescriptorsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
    MergeFrom(*source);
  }
}

void ListNotificationChannelDescriptorsResponse::MergeFrom(const ListNotificationChannelDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channel_descriptors_.MergeFrom(from.channel_descriptors_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListNotificationChannelDescriptorsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNotificationChannelDescriptorsResponse::CopyFrom(const ListNotificationChannelDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListNotificationChannelDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNotificationChannelDescriptorsResponse::IsInitialized() const {
  return true;
}

void ListNotificationChannelDescriptorsResponse::Swap(ListNotificationChannelDescriptorsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNotificationChannelDescriptorsResponse::InternalSwap(ListNotificationChannelDescriptorsResponse* other) {
  using std::swap;
  CastToBase(&channel_descriptors_)->InternalSwap(CastToBase(&other->channel_descriptors_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListNotificationChannelDescriptorsResponse::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetNotificationChannelDescriptorRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNotificationChannelDescriptorRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNotificationChannelDescriptorRequest::GetNotificationChannelDescriptorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_GetNotificationChannelDescriptorRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
}
GetNotificationChannelDescriptorRequest::GetNotificationChannelDescriptorRequest(const GetNotificationChannelDescriptorRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
}

void GetNotificationChannelDescriptorRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetNotificationChannelDescriptorRequest::~GetNotificationChannelDescriptorRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
  SharedDtor();
}

void GetNotificationChannelDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetNotificationChannelDescriptorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetNotificationChannelDescriptorRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetNotificationChannelDescriptorRequest& GetNotificationChannelDescriptorRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_GetNotificationChannelDescriptorRequest.base);
  return *internal_default_instance();
}


void GetNotificationChannelDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetNotificationChannelDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.GetNotificationChannelDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
  return false;
#undef DO_
}

void GetNotificationChannelDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetNotificationChannelDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
}

::google::protobuf::uint8* GetNotificationChannelDescriptorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetNotificationChannelDescriptorRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
  return target;
}

size_t GetNotificationChannelDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNotificationChannelDescriptorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNotificationChannelDescriptorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNotificationChannelDescriptorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
    MergeFrom(*source);
  }
}

void GetNotificationChannelDescriptorRequest::MergeFrom(const GetNotificationChannelDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetNotificationChannelDescriptorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNotificationChannelDescriptorRequest::CopyFrom(const GetNotificationChannelDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.GetNotificationChannelDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNotificationChannelDescriptorRequest::IsInitialized() const {
  return true;
}

void GetNotificationChannelDescriptorRequest::Swap(GetNotificationChannelDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNotificationChannelDescriptorRequest::InternalSwap(GetNotificationChannelDescriptorRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetNotificationChannelDescriptorRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateNotificationChannelRequest::InitAsDefaultInstance() {
  ::google::monitoring::v3::_CreateNotificationChannelRequest_default_instance_._instance.get_mutable()->notification_channel_ = const_cast< ::google::monitoring::v3::NotificationChannel*>(
      ::google::monitoring::v3::NotificationChannel::internal_default_instance());
}
void CreateNotificationChannelRequest::clear_notification_channel() {
  if (GetArenaNoVirtual() == NULL && notification_channel_ != NULL) {
    delete notification_channel_;
  }
  notification_channel_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNotificationChannelRequest::kNameFieldNumber;
const int CreateNotificationChannelRequest::kNotificationChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNotificationChannelRequest::CreateNotificationChannelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_CreateNotificationChannelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.CreateNotificationChannelRequest)
}
CreateNotificationChannelRequest::CreateNotificationChannelRequest(const CreateNotificationChannelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_notification_channel()) {
    notification_channel_ = new ::google::monitoring::v3::NotificationChannel(*from.notification_channel_);
  } else {
    notification_channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.CreateNotificationChannelRequest)
}

void CreateNotificationChannelRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notification_channel_ = NULL;
}

CreateNotificationChannelRequest::~CreateNotificationChannelRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.CreateNotificationChannelRequest)
  SharedDtor();
}

void CreateNotificationChannelRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete notification_channel_;
}

void CreateNotificationChannelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateNotificationChannelRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNotificationChannelRequest& CreateNotificationChannelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_CreateNotificationChannelRequest.base);
  return *internal_default_instance();
}


void CreateNotificationChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.CreateNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && notification_channel_ != NULL) {
    delete notification_channel_;
  }
  notification_channel_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateNotificationChannelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.CreateNotificationChannelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.monitoring.v3.NotificationChannel notification_channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_notification_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.CreateNotificationChannelRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.CreateNotificationChannelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.CreateNotificationChannelRequest)
  return false;
#undef DO_
}

void CreateNotificationChannelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.CreateNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.monitoring.v3.NotificationChannel notification_channel = 2;
  if (this->has_notification_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_notification_channel(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateNotificationChannelRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.CreateNotificationChannelRequest)
}

::google::protobuf::uint8* CreateNotificationChannelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.CreateNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.monitoring.v3.NotificationChannel notification_channel = 2;
  if (this->has_notification_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_notification_channel(), deterministic, target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateNotificationChannelRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.CreateNotificationChannelRequest)
  return target;
}

size_t CreateNotificationChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.CreateNotificationChannelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.monitoring.v3.NotificationChannel notification_channel = 2;
  if (this->has_notification_channel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *notification_channel_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateNotificationChannelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.CreateNotificationChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNotificationChannelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNotificationChannelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.CreateNotificationChannelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.CreateNotificationChannelRequest)
    MergeFrom(*source);
  }
}

void CreateNotificationChannelRequest::MergeFrom(const CreateNotificationChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.CreateNotificationChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_notification_channel()) {
    mutable_notification_channel()->::google::monitoring::v3::NotificationChannel::MergeFrom(from.notification_channel());
  }
}

void CreateNotificationChannelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.CreateNotificationChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNotificationChannelRequest::CopyFrom(const CreateNotificationChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.CreateNotificationChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNotificationChannelRequest::IsInitialized() const {
  return true;
}

void CreateNotificationChannelRequest::Swap(CreateNotificationChannelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNotificationChannelRequest::InternalSwap(CreateNotificationChannelRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(notification_channel_, other->notification_channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateNotificationChannelRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListNotificationChannelsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNotificationChannelsRequest::kNameFieldNumber;
const int ListNotificationChannelsRequest::kFilterFieldNumber;
const int ListNotificationChannelsRequest::kOrderByFieldNumber;
const int ListNotificationChannelsRequest::kPageSizeFieldNumber;
const int ListNotificationChannelsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNotificationChannelsRequest::ListNotificationChannelsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_ListNotificationChannelsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListNotificationChannelsRequest)
}
ListNotificationChannelsRequest::ListNotificationChannelsRequest(const ListNotificationChannelsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  order_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_by().size() > 0) {
    order_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_by_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListNotificationChannelsRequest)
}

void ListNotificationChannelsRequest::SharedCtor() {
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListNotificationChannelsRequest::~ListNotificationChannelsRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListNotificationChannelsRequest)
  SharedDtor();
}

void ListNotificationChannelsRequest::SharedDtor() {
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNotificationChannelsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListNotificationChannelsRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNotificationChannelsRequest& ListNotificationChannelsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_ListNotificationChannelsRequest.base);
  return *internal_default_instance();
}


void ListNotificationChannelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListNotificationChannelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListNotificationChannelsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListNotificationChannelsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListNotificationChannelsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListNotificationChannelsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListNotificationChannelsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order_by = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_by()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_by().data(), static_cast<int>(this->order_by().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListNotificationChannelsRequest.order_by"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListNotificationChannelsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListNotificationChannelsRequest)
  return false;
#undef DO_
}

void ListNotificationChannelsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListNotificationChannelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // string filter = 6;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->filter(), output);
  }

  // string order_by = 7;
  if (this->order_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_by().data(), static_cast<int>(this->order_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelsRequest.order_by");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->order_by(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListNotificationChannelsRequest)
}

::google::protobuf::uint8* ListNotificationChannelsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListNotificationChannelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // string filter = 6;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelsRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->filter(), target);
  }

  // string order_by = 7;
  if (this->order_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_by().data(), static_cast<int>(this->order_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelsRequest.order_by");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->order_by(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListNotificationChannelsRequest)
  return target;
}

size_t ListNotificationChannelsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListNotificationChannelsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string filter = 6;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string order_by = 7;
  if (this->order_by().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_by());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNotificationChannelsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListNotificationChannelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNotificationChannelsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNotificationChannelsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListNotificationChannelsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListNotificationChannelsRequest)
    MergeFrom(*source);
  }
}

void ListNotificationChannelsRequest::MergeFrom(const ListNotificationChannelsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListNotificationChannelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.order_by().size() > 0) {

    order_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_by_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListNotificationChannelsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListNotificationChannelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNotificationChannelsRequest::CopyFrom(const ListNotificationChannelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListNotificationChannelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNotificationChannelsRequest::IsInitialized() const {
  return true;
}

void ListNotificationChannelsRequest::Swap(ListNotificationChannelsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNotificationChannelsRequest::InternalSwap(ListNotificationChannelsRequest* other) {
  using std::swap;
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  order_by_.Swap(&other->order_by_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListNotificationChannelsRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListNotificationChannelsResponse::InitAsDefaultInstance() {
}
void ListNotificationChannelsResponse::clear_notification_channels() {
  notification_channels_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNotificationChannelsResponse::kNotificationChannelsFieldNumber;
const int ListNotificationChannelsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNotificationChannelsResponse::ListNotificationChannelsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_ListNotificationChannelsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListNotificationChannelsResponse)
}
ListNotificationChannelsResponse::ListNotificationChannelsResponse(const ListNotificationChannelsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notification_channels_(from.notification_channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListNotificationChannelsResponse)
}

void ListNotificationChannelsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListNotificationChannelsResponse::~ListNotificationChannelsResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListNotificationChannelsResponse)
  SharedDtor();
}

void ListNotificationChannelsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNotificationChannelsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListNotificationChannelsResponse::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNotificationChannelsResponse& ListNotificationChannelsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_ListNotificationChannelsResponse.base);
  return *internal_default_instance();
}


void ListNotificationChannelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListNotificationChannelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notification_channels_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListNotificationChannelsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListNotificationChannelsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListNotificationChannelsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.monitoring.v3.NotificationChannel notification_channels = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_notification_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListNotificationChannelsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListNotificationChannelsResponse)
  return false;
#undef DO_
}

void ListNotificationChannelsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListNotificationChannelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // repeated .google.monitoring.v3.NotificationChannel notification_channels = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notification_channels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->notification_channels(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListNotificationChannelsResponse)
}

::google::protobuf::uint8* ListNotificationChannelsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListNotificationChannelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListNotificationChannelsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // repeated .google.monitoring.v3.NotificationChannel notification_channels = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notification_channels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->notification_channels(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListNotificationChannelsResponse)
  return target;
}

size_t ListNotificationChannelsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListNotificationChannelsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.monitoring.v3.NotificationChannel notification_channels = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->notification_channels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notification_channels(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNotificationChannelsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListNotificationChannelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNotificationChannelsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNotificationChannelsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListNotificationChannelsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListNotificationChannelsResponse)
    MergeFrom(*source);
  }
}

void ListNotificationChannelsResponse::MergeFrom(const ListNotificationChannelsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListNotificationChannelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notification_channels_.MergeFrom(from.notification_channels_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListNotificationChannelsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListNotificationChannelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNotificationChannelsResponse::CopyFrom(const ListNotificationChannelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListNotificationChannelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNotificationChannelsResponse::IsInitialized() const {
  return true;
}

void ListNotificationChannelsResponse::Swap(ListNotificationChannelsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNotificationChannelsResponse::InternalSwap(ListNotificationChannelsResponse* other) {
  using std::swap;
  CastToBase(&notification_channels_)->InternalSwap(CastToBase(&other->notification_channels_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListNotificationChannelsResponse::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetNotificationChannelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNotificationChannelRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNotificationChannelRequest::GetNotificationChannelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_GetNotificationChannelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.GetNotificationChannelRequest)
}
GetNotificationChannelRequest::GetNotificationChannelRequest(const GetNotificationChannelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.GetNotificationChannelRequest)
}

void GetNotificationChannelRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetNotificationChannelRequest::~GetNotificationChannelRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.GetNotificationChannelRequest)
  SharedDtor();
}

void GetNotificationChannelRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetNotificationChannelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetNotificationChannelRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetNotificationChannelRequest& GetNotificationChannelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_GetNotificationChannelRequest.base);
  return *internal_default_instance();
}


void GetNotificationChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.GetNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetNotificationChannelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.GetNotificationChannelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.GetNotificationChannelRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.GetNotificationChannelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.GetNotificationChannelRequest)
  return false;
#undef DO_
}

void GetNotificationChannelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.GetNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetNotificationChannelRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.GetNotificationChannelRequest)
}

::google::protobuf::uint8* GetNotificationChannelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.GetNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetNotificationChannelRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.GetNotificationChannelRequest)
  return target;
}

size_t GetNotificationChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.GetNotificationChannelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNotificationChannelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.GetNotificationChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNotificationChannelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNotificationChannelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.GetNotificationChannelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.GetNotificationChannelRequest)
    MergeFrom(*source);
  }
}

void GetNotificationChannelRequest::MergeFrom(const GetNotificationChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.GetNotificationChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetNotificationChannelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.GetNotificationChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNotificationChannelRequest::CopyFrom(const GetNotificationChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.GetNotificationChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNotificationChannelRequest::IsInitialized() const {
  return true;
}

void GetNotificationChannelRequest::Swap(GetNotificationChannelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNotificationChannelRequest::InternalSwap(GetNotificationChannelRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetNotificationChannelRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateNotificationChannelRequest::InitAsDefaultInstance() {
  ::google::monitoring::v3::_UpdateNotificationChannelRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
  ::google::monitoring::v3::_UpdateNotificationChannelRequest_default_instance_._instance.get_mutable()->notification_channel_ = const_cast< ::google::monitoring::v3::NotificationChannel*>(
      ::google::monitoring::v3::NotificationChannel::internal_default_instance());
}
void UpdateNotificationChannelRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
void UpdateNotificationChannelRequest::clear_notification_channel() {
  if (GetArenaNoVirtual() == NULL && notification_channel_ != NULL) {
    delete notification_channel_;
  }
  notification_channel_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateNotificationChannelRequest::kUpdateMaskFieldNumber;
const int UpdateNotificationChannelRequest::kNotificationChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateNotificationChannelRequest::UpdateNotificationChannelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_UpdateNotificationChannelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.UpdateNotificationChannelRequest)
}
UpdateNotificationChannelRequest::UpdateNotificationChannelRequest(const UpdateNotificationChannelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  if (from.has_notification_channel()) {
    notification_channel_ = new ::google::monitoring::v3::NotificationChannel(*from.notification_channel_);
  } else {
    notification_channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.UpdateNotificationChannelRequest)
}

void UpdateNotificationChannelRequest::SharedCtor() {
  ::memset(&update_mask_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notification_channel_) -
      reinterpret_cast<char*>(&update_mask_)) + sizeof(notification_channel_));
}

UpdateNotificationChannelRequest::~UpdateNotificationChannelRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.UpdateNotificationChannelRequest)
  SharedDtor();
}

void UpdateNotificationChannelRequest::SharedDtor() {
  if (this != internal_default_instance()) delete update_mask_;
  if (this != internal_default_instance()) delete notification_channel_;
}

void UpdateNotificationChannelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateNotificationChannelRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateNotificationChannelRequest& UpdateNotificationChannelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_UpdateNotificationChannelRequest.base);
  return *internal_default_instance();
}


void UpdateNotificationChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.UpdateNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  if (GetArenaNoVirtual() == NULL && notification_channel_ != NULL) {
    delete notification_channel_;
  }
  notification_channel_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateNotificationChannelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.UpdateNotificationChannelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.FieldMask update_mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.NotificationChannel notification_channel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_notification_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.UpdateNotificationChannelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.UpdateNotificationChannelRequest)
  return false;
#undef DO_
}

void UpdateNotificationChannelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.UpdateNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_update_mask(), output);
  }

  // .google.monitoring.v3.NotificationChannel notification_channel = 3;
  if (this->has_notification_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_notification_channel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.UpdateNotificationChannelRequest)
}

::google::protobuf::uint8* UpdateNotificationChannelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.UpdateNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_update_mask(), deterministic, target);
  }

  // .google.monitoring.v3.NotificationChannel notification_channel = 3;
  if (this->has_notification_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_notification_channel(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.UpdateNotificationChannelRequest)
  return target;
}

size_t UpdateNotificationChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.UpdateNotificationChannelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  // .google.monitoring.v3.NotificationChannel notification_channel = 3;
  if (this->has_notification_channel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *notification_channel_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateNotificationChannelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.UpdateNotificationChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateNotificationChannelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateNotificationChannelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.UpdateNotificationChannelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.UpdateNotificationChannelRequest)
    MergeFrom(*source);
  }
}

void UpdateNotificationChannelRequest::MergeFrom(const UpdateNotificationChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.UpdateNotificationChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
  if (from.has_notification_channel()) {
    mutable_notification_channel()->::google::monitoring::v3::NotificationChannel::MergeFrom(from.notification_channel());
  }
}

void UpdateNotificationChannelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.UpdateNotificationChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateNotificationChannelRequest::CopyFrom(const UpdateNotificationChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.UpdateNotificationChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNotificationChannelRequest::IsInitialized() const {
  return true;
}

void UpdateNotificationChannelRequest::Swap(UpdateNotificationChannelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateNotificationChannelRequest::InternalSwap(UpdateNotificationChannelRequest* other) {
  using std::swap;
  swap(update_mask_, other->update_mask_);
  swap(notification_channel_, other->notification_channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateNotificationChannelRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteNotificationChannelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteNotificationChannelRequest::kNameFieldNumber;
const int DeleteNotificationChannelRequest::kForceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteNotificationChannelRequest::DeleteNotificationChannelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_DeleteNotificationChannelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.DeleteNotificationChannelRequest)
}
DeleteNotificationChannelRequest::DeleteNotificationChannelRequest(const DeleteNotificationChannelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  force_ = from.force_;
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.DeleteNotificationChannelRequest)
}

void DeleteNotificationChannelRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  force_ = false;
}

DeleteNotificationChannelRequest::~DeleteNotificationChannelRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.DeleteNotificationChannelRequest)
  SharedDtor();
}

void DeleteNotificationChannelRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteNotificationChannelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteNotificationChannelRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteNotificationChannelRequest& DeleteNotificationChannelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_DeleteNotificationChannelRequest.base);
  return *internal_default_instance();
}


void DeleteNotificationChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.DeleteNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  force_ = false;
  _internal_metadata_.Clear();
}

bool DeleteNotificationChannelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.DeleteNotificationChannelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.DeleteNotificationChannelRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool force = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &force_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.DeleteNotificationChannelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.DeleteNotificationChannelRequest)
  return false;
#undef DO_
}

void DeleteNotificationChannelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.DeleteNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.DeleteNotificationChannelRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // bool force = 5;
  if (this->force() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->force(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.DeleteNotificationChannelRequest)
}

::google::protobuf::uint8* DeleteNotificationChannelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.DeleteNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.DeleteNotificationChannelRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // bool force = 5;
  if (this->force() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->force(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.DeleteNotificationChannelRequest)
  return target;
}

size_t DeleteNotificationChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.DeleteNotificationChannelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bool force = 5;
  if (this->force() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteNotificationChannelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.DeleteNotificationChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteNotificationChannelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteNotificationChannelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.DeleteNotificationChannelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.DeleteNotificationChannelRequest)
    MergeFrom(*source);
  }
}

void DeleteNotificationChannelRequest::MergeFrom(const DeleteNotificationChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.DeleteNotificationChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.force() != 0) {
    set_force(from.force());
  }
}

void DeleteNotificationChannelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.DeleteNotificationChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNotificationChannelRequest::CopyFrom(const DeleteNotificationChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.DeleteNotificationChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNotificationChannelRequest::IsInitialized() const {
  return true;
}

void DeleteNotificationChannelRequest::Swap(DeleteNotificationChannelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteNotificationChannelRequest::InternalSwap(DeleteNotificationChannelRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(force_, other->force_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteNotificationChannelRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendNotificationChannelVerificationCodeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendNotificationChannelVerificationCodeRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendNotificationChannelVerificationCodeRequest::SendNotificationChannelVerificationCodeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_SendNotificationChannelVerificationCodeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
}
SendNotificationChannelVerificationCodeRequest::SendNotificationChannelVerificationCodeRequest(const SendNotificationChannelVerificationCodeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
}

void SendNotificationChannelVerificationCodeRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendNotificationChannelVerificationCodeRequest::~SendNotificationChannelVerificationCodeRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
  SharedDtor();
}

void SendNotificationChannelVerificationCodeRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendNotificationChannelVerificationCodeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendNotificationChannelVerificationCodeRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendNotificationChannelVerificationCodeRequest& SendNotificationChannelVerificationCodeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_SendNotificationChannelVerificationCodeRequest.base);
  return *internal_default_instance();
}


void SendNotificationChannelVerificationCodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendNotificationChannelVerificationCodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.SendNotificationChannelVerificationCodeRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
  return false;
#undef DO_
}

void SendNotificationChannelVerificationCodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.SendNotificationChannelVerificationCodeRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
}

::google::protobuf::uint8* SendNotificationChannelVerificationCodeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.SendNotificationChannelVerificationCodeRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
  return target;
}

size_t SendNotificationChannelVerificationCodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendNotificationChannelVerificationCodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendNotificationChannelVerificationCodeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendNotificationChannelVerificationCodeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
    MergeFrom(*source);
  }
}

void SendNotificationChannelVerificationCodeRequest::MergeFrom(const SendNotificationChannelVerificationCodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SendNotificationChannelVerificationCodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendNotificationChannelVerificationCodeRequest::CopyFrom(const SendNotificationChannelVerificationCodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.SendNotificationChannelVerificationCodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendNotificationChannelVerificationCodeRequest::IsInitialized() const {
  return true;
}

void SendNotificationChannelVerificationCodeRequest::Swap(SendNotificationChannelVerificationCodeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendNotificationChannelVerificationCodeRequest::InternalSwap(SendNotificationChannelVerificationCodeRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendNotificationChannelVerificationCodeRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetNotificationChannelVerificationCodeRequest::InitAsDefaultInstance() {
  ::google::monitoring::v3::_GetNotificationChannelVerificationCodeRequest_default_instance_._instance.get_mutable()->expire_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void GetNotificationChannelVerificationCodeRequest::clear_expire_time() {
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNotificationChannelVerificationCodeRequest::kNameFieldNumber;
const int GetNotificationChannelVerificationCodeRequest::kExpireTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNotificationChannelVerificationCodeRequest::GetNotificationChannelVerificationCodeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_GetNotificationChannelVerificationCodeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
}
GetNotificationChannelVerificationCodeRequest::GetNotificationChannelVerificationCodeRequest(const GetNotificationChannelVerificationCodeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_expire_time()) {
    expire_time_ = new ::google::protobuf::Timestamp(*from.expire_time_);
  } else {
    expire_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
}

void GetNotificationChannelVerificationCodeRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expire_time_ = NULL;
}

GetNotificationChannelVerificationCodeRequest::~GetNotificationChannelVerificationCodeRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
  SharedDtor();
}

void GetNotificationChannelVerificationCodeRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expire_time_;
}

void GetNotificationChannelVerificationCodeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetNotificationChannelVerificationCodeRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetNotificationChannelVerificationCodeRequest& GetNotificationChannelVerificationCodeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_GetNotificationChannelVerificationCodeRequest.base);
  return *internal_default_instance();
}


void GetNotificationChannelVerificationCodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
  _internal_metadata_.Clear();
}

bool GetNotificationChannelVerificationCodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.GetNotificationChannelVerificationCodeRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expire_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expire_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
  return false;
#undef DO_
}

void GetNotificationChannelVerificationCodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetNotificationChannelVerificationCodeRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.protobuf.Timestamp expire_time = 2;
  if (this->has_expire_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_expire_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
}

::google::protobuf::uint8* GetNotificationChannelVerificationCodeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetNotificationChannelVerificationCodeRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.protobuf.Timestamp expire_time = 2;
  if (this->has_expire_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_expire_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
  return target;
}

size_t GetNotificationChannelVerificationCodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.protobuf.Timestamp expire_time = 2;
  if (this->has_expire_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expire_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNotificationChannelVerificationCodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNotificationChannelVerificationCodeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNotificationChannelVerificationCodeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
    MergeFrom(*source);
  }
}

void GetNotificationChannelVerificationCodeRequest::MergeFrom(const GetNotificationChannelVerificationCodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_expire_time()) {
    mutable_expire_time()->::google::protobuf::Timestamp::MergeFrom(from.expire_time());
  }
}

void GetNotificationChannelVerificationCodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNotificationChannelVerificationCodeRequest::CopyFrom(const GetNotificationChannelVerificationCodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.GetNotificationChannelVerificationCodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNotificationChannelVerificationCodeRequest::IsInitialized() const {
  return true;
}

void GetNotificationChannelVerificationCodeRequest::Swap(GetNotificationChannelVerificationCodeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNotificationChannelVerificationCodeRequest::InternalSwap(GetNotificationChannelVerificationCodeRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expire_time_, other->expire_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetNotificationChannelVerificationCodeRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetNotificationChannelVerificationCodeResponse::InitAsDefaultInstance() {
  ::google::monitoring::v3::_GetNotificationChannelVerificationCodeResponse_default_instance_._instance.get_mutable()->expire_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void GetNotificationChannelVerificationCodeResponse::clear_expire_time() {
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNotificationChannelVerificationCodeResponse::kCodeFieldNumber;
const int GetNotificationChannelVerificationCodeResponse::kExpireTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNotificationChannelVerificationCodeResponse::GetNotificationChannelVerificationCodeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_GetNotificationChannelVerificationCodeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
}
GetNotificationChannelVerificationCodeResponse::GetNotificationChannelVerificationCodeResponse(const GetNotificationChannelVerificationCodeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.has_expire_time()) {
    expire_time_ = new ::google::protobuf::Timestamp(*from.expire_time_);
  } else {
    expire_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
}

void GetNotificationChannelVerificationCodeResponse::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expire_time_ = NULL;
}

GetNotificationChannelVerificationCodeResponse::~GetNotificationChannelVerificationCodeResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
  SharedDtor();
}

void GetNotificationChannelVerificationCodeResponse::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expire_time_;
}

void GetNotificationChannelVerificationCodeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetNotificationChannelVerificationCodeResponse::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetNotificationChannelVerificationCodeResponse& GetNotificationChannelVerificationCodeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_GetNotificationChannelVerificationCodeResponse.base);
  return *internal_default_instance();
}


void GetNotificationChannelVerificationCodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
  _internal_metadata_.Clear();
}

bool GetNotificationChannelVerificationCodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.GetNotificationChannelVerificationCodeResponse.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expire_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expire_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
  return false;
#undef DO_
}

void GetNotificationChannelVerificationCodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetNotificationChannelVerificationCodeResponse.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // .google.protobuf.Timestamp expire_time = 2;
  if (this->has_expire_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_expire_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
}

::google::protobuf::uint8* GetNotificationChannelVerificationCodeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetNotificationChannelVerificationCodeResponse.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // .google.protobuf.Timestamp expire_time = 2;
  if (this->has_expire_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_expire_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
  return target;
}

size_t GetNotificationChannelVerificationCodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // .google.protobuf.Timestamp expire_time = 2;
  if (this->has_expire_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expire_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetNotificationChannelVerificationCodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNotificationChannelVerificationCodeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNotificationChannelVerificationCodeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
    MergeFrom(*source);
  }
}

void GetNotificationChannelVerificationCodeResponse::MergeFrom(const GetNotificationChannelVerificationCodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.has_expire_time()) {
    mutable_expire_time()->::google::protobuf::Timestamp::MergeFrom(from.expire_time());
  }
}

void GetNotificationChannelVerificationCodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNotificationChannelVerificationCodeResponse::CopyFrom(const GetNotificationChannelVerificationCodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.GetNotificationChannelVerificationCodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNotificationChannelVerificationCodeResponse::IsInitialized() const {
  return true;
}

void GetNotificationChannelVerificationCodeResponse::Swap(GetNotificationChannelVerificationCodeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNotificationChannelVerificationCodeResponse::InternalSwap(GetNotificationChannelVerificationCodeResponse* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expire_time_, other->expire_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetNotificationChannelVerificationCodeResponse::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VerifyNotificationChannelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyNotificationChannelRequest::kNameFieldNumber;
const int VerifyNotificationChannelRequest::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyNotificationChannelRequest::VerifyNotificationChannelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_VerifyNotificationChannelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.VerifyNotificationChannelRequest)
}
VerifyNotificationChannelRequest::VerifyNotificationChannelRequest(const VerifyNotificationChannelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.VerifyNotificationChannelRequest)
}

void VerifyNotificationChannelRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VerifyNotificationChannelRequest::~VerifyNotificationChannelRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.VerifyNotificationChannelRequest)
  SharedDtor();
}

void VerifyNotificationChannelRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyNotificationChannelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VerifyNotificationChannelRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyNotificationChannelRequest& VerifyNotificationChannelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::scc_info_VerifyNotificationChannelRequest.base);
  return *internal_default_instance();
}


void VerifyNotificationChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.VerifyNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool VerifyNotificationChannelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.VerifyNotificationChannelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.VerifyNotificationChannelRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.VerifyNotificationChannelRequest.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.VerifyNotificationChannelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.VerifyNotificationChannelRequest)
  return false;
#undef DO_
}

void VerifyNotificationChannelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.VerifyNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.VerifyNotificationChannelRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.VerifyNotificationChannelRequest.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.VerifyNotificationChannelRequest)
}

::google::protobuf::uint8* VerifyNotificationChannelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.VerifyNotificationChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.VerifyNotificationChannelRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.VerifyNotificationChannelRequest.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.VerifyNotificationChannelRequest)
  return target;
}

size_t VerifyNotificationChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.VerifyNotificationChannelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyNotificationChannelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.VerifyNotificationChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyNotificationChannelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyNotificationChannelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.VerifyNotificationChannelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.VerifyNotificationChannelRequest)
    MergeFrom(*source);
  }
}

void VerifyNotificationChannelRequest::MergeFrom(const VerifyNotificationChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.VerifyNotificationChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
}

void VerifyNotificationChannelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.VerifyNotificationChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyNotificationChannelRequest::CopyFrom(const VerifyNotificationChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.VerifyNotificationChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyNotificationChannelRequest::IsInitialized() const {
  return true;
}

void VerifyNotificationChannelRequest::Swap(VerifyNotificationChannelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyNotificationChannelRequest::InternalSwap(VerifyNotificationChannelRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyNotificationChannelRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fnotification_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListNotificationChannelDescriptorsRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListNotificationChannelDescriptorsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListNotificationChannelDescriptorsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListNotificationChannelDescriptorsResponse* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListNotificationChannelDescriptorsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListNotificationChannelDescriptorsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::GetNotificationChannelDescriptorRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::GetNotificationChannelDescriptorRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::GetNotificationChannelDescriptorRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::CreateNotificationChannelRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::CreateNotificationChannelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::CreateNotificationChannelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListNotificationChannelsRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListNotificationChannelsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListNotificationChannelsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListNotificationChannelsResponse* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListNotificationChannelsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListNotificationChannelsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::GetNotificationChannelRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::GetNotificationChannelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::GetNotificationChannelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::UpdateNotificationChannelRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::UpdateNotificationChannelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::UpdateNotificationChannelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::DeleteNotificationChannelRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::DeleteNotificationChannelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::DeleteNotificationChannelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::SendNotificationChannelVerificationCodeRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::SendNotificationChannelVerificationCodeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::SendNotificationChannelVerificationCodeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::GetNotificationChannelVerificationCodeRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::GetNotificationChannelVerificationCodeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::GetNotificationChannelVerificationCodeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::GetNotificationChannelVerificationCodeResponse* Arena::CreateMaybeMessage< ::google::monitoring::v3::GetNotificationChannelVerificationCodeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::GetNotificationChannelVerificationCodeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::VerifyNotificationChannelRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::VerifyNotificationChannelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::VerifyNotificationChannelRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
