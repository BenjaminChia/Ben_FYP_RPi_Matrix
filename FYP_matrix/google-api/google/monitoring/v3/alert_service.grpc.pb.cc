// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/monitoring/v3/alert_service.proto

#include "google/monitoring/v3/alert_service.pb.h"
#include "google/monitoring/v3/alert_service.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace monitoring {
namespace v3 {

static const char* AlertPolicyService_method_names[] = {
  "/google.monitoring.v3.AlertPolicyService/ListAlertPolicies",
  "/google.monitoring.v3.AlertPolicyService/GetAlertPolicy",
  "/google.monitoring.v3.AlertPolicyService/CreateAlertPolicy",
  "/google.monitoring.v3.AlertPolicyService/DeleteAlertPolicy",
  "/google.monitoring.v3.AlertPolicyService/UpdateAlertPolicy",
};

std::unique_ptr< AlertPolicyService::Stub> AlertPolicyService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< AlertPolicyService::Stub> stub(new AlertPolicyService::Stub(channel));
  return stub;
}

AlertPolicyService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_ListAlertPolicies_(AlertPolicyService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetAlertPolicy_(AlertPolicyService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateAlertPolicy_(AlertPolicyService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteAlertPolicy_(AlertPolicyService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateAlertPolicy_(AlertPolicyService_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status AlertPolicyService::Stub::ListAlertPolicies(::grpc::ClientContext* context, const ::google::monitoring::v3::ListAlertPoliciesRequest& request, ::google::monitoring::v3::ListAlertPoliciesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListAlertPolicies_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::ListAlertPoliciesResponse>* AlertPolicyService::Stub::AsyncListAlertPoliciesRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::ListAlertPoliciesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::ListAlertPoliciesResponse>::Create(channel_.get(), cq, rpcmethod_ListAlertPolicies_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::ListAlertPoliciesResponse>* AlertPolicyService::Stub::PrepareAsyncListAlertPoliciesRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::ListAlertPoliciesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::ListAlertPoliciesResponse>::Create(channel_.get(), cq, rpcmethod_ListAlertPolicies_, context, request, false);
}

::grpc::Status AlertPolicyService::Stub::GetAlertPolicy(::grpc::ClientContext* context, const ::google::monitoring::v3::GetAlertPolicyRequest& request, ::google::monitoring::v3::AlertPolicy* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetAlertPolicy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::AlertPolicy>* AlertPolicyService::Stub::AsyncGetAlertPolicyRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::GetAlertPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::AlertPolicy>::Create(channel_.get(), cq, rpcmethod_GetAlertPolicy_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::AlertPolicy>* AlertPolicyService::Stub::PrepareAsyncGetAlertPolicyRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::GetAlertPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::AlertPolicy>::Create(channel_.get(), cq, rpcmethod_GetAlertPolicy_, context, request, false);
}

::grpc::Status AlertPolicyService::Stub::CreateAlertPolicy(::grpc::ClientContext* context, const ::google::monitoring::v3::CreateAlertPolicyRequest& request, ::google::monitoring::v3::AlertPolicy* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateAlertPolicy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::AlertPolicy>* AlertPolicyService::Stub::AsyncCreateAlertPolicyRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::CreateAlertPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::AlertPolicy>::Create(channel_.get(), cq, rpcmethod_CreateAlertPolicy_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::AlertPolicy>* AlertPolicyService::Stub::PrepareAsyncCreateAlertPolicyRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::CreateAlertPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::AlertPolicy>::Create(channel_.get(), cq, rpcmethod_CreateAlertPolicy_, context, request, false);
}

::grpc::Status AlertPolicyService::Stub::DeleteAlertPolicy(::grpc::ClientContext* context, const ::google::monitoring::v3::DeleteAlertPolicyRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteAlertPolicy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AlertPolicyService::Stub::AsyncDeleteAlertPolicyRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::DeleteAlertPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteAlertPolicy_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AlertPolicyService::Stub::PrepareAsyncDeleteAlertPolicyRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::DeleteAlertPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteAlertPolicy_, context, request, false);
}

::grpc::Status AlertPolicyService::Stub::UpdateAlertPolicy(::grpc::ClientContext* context, const ::google::monitoring::v3::UpdateAlertPolicyRequest& request, ::google::monitoring::v3::AlertPolicy* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateAlertPolicy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::AlertPolicy>* AlertPolicyService::Stub::AsyncUpdateAlertPolicyRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::UpdateAlertPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::AlertPolicy>::Create(channel_.get(), cq, rpcmethod_UpdateAlertPolicy_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::AlertPolicy>* AlertPolicyService::Stub::PrepareAsyncUpdateAlertPolicyRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::UpdateAlertPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::AlertPolicy>::Create(channel_.get(), cq, rpcmethod_UpdateAlertPolicy_, context, request, false);
}

AlertPolicyService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AlertPolicyService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AlertPolicyService::Service, ::google::monitoring::v3::ListAlertPoliciesRequest, ::google::monitoring::v3::ListAlertPoliciesResponse>(
          std::mem_fn(&AlertPolicyService::Service::ListAlertPolicies), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AlertPolicyService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AlertPolicyService::Service, ::google::monitoring::v3::GetAlertPolicyRequest, ::google::monitoring::v3::AlertPolicy>(
          std::mem_fn(&AlertPolicyService::Service::GetAlertPolicy), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AlertPolicyService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AlertPolicyService::Service, ::google::monitoring::v3::CreateAlertPolicyRequest, ::google::monitoring::v3::AlertPolicy>(
          std::mem_fn(&AlertPolicyService::Service::CreateAlertPolicy), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AlertPolicyService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AlertPolicyService::Service, ::google::monitoring::v3::DeleteAlertPolicyRequest, ::google::protobuf::Empty>(
          std::mem_fn(&AlertPolicyService::Service::DeleteAlertPolicy), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AlertPolicyService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AlertPolicyService::Service, ::google::monitoring::v3::UpdateAlertPolicyRequest, ::google::monitoring::v3::AlertPolicy>(
          std::mem_fn(&AlertPolicyService::Service::UpdateAlertPolicy), this)));
}

AlertPolicyService::Service::~Service() {
}

::grpc::Status AlertPolicyService::Service::ListAlertPolicies(::grpc::ServerContext* context, const ::google::monitoring::v3::ListAlertPoliciesRequest* request, ::google::monitoring::v3::ListAlertPoliciesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AlertPolicyService::Service::GetAlertPolicy(::grpc::ServerContext* context, const ::google::monitoring::v3::GetAlertPolicyRequest* request, ::google::monitoring::v3::AlertPolicy* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AlertPolicyService::Service::CreateAlertPolicy(::grpc::ServerContext* context, const ::google::monitoring::v3::CreateAlertPolicyRequest* request, ::google::monitoring::v3::AlertPolicy* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AlertPolicyService::Service::DeleteAlertPolicy(::grpc::ServerContext* context, const ::google::monitoring::v3::DeleteAlertPolicyRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AlertPolicyService::Service::UpdateAlertPolicy(::grpc::ServerContext* context, const ::google::monitoring::v3::UpdateAlertPolicyRequest* request, ::google::monitoring::v3::AlertPolicy* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace monitoring
}  // namespace v3

