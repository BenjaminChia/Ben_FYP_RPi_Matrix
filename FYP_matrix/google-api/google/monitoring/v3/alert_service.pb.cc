// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/alert_service.proto

#include "google/monitoring/v3/alert_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fmonitoring_2fv3_2falert_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2falert_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_AlertPolicy;
}  // namespace protobuf_google_2fmonitoring_2fv3_2falert_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace google {
namespace monitoring {
namespace v3 {
class CreateAlertPolicyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateAlertPolicyRequest>
      _instance;
} _CreateAlertPolicyRequest_default_instance_;
class GetAlertPolicyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAlertPolicyRequest>
      _instance;
} _GetAlertPolicyRequest_default_instance_;
class ListAlertPoliciesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListAlertPoliciesRequest>
      _instance;
} _ListAlertPoliciesRequest_default_instance_;
class ListAlertPoliciesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListAlertPoliciesResponse>
      _instance;
} _ListAlertPoliciesResponse_default_instance_;
class UpdateAlertPolicyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateAlertPolicyRequest>
      _instance;
} _UpdateAlertPolicyRequest_default_instance_;
class DeleteAlertPolicyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteAlertPolicyRequest>
      _instance;
} _DeleteAlertPolicyRequest_default_instance_;
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto {
static void InitDefaultsCreateAlertPolicyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_CreateAlertPolicyRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::CreateAlertPolicyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::CreateAlertPolicyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateAlertPolicyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateAlertPolicyRequest}, {
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy.base,}};

static void InitDefaultsGetAlertPolicyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_GetAlertPolicyRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::GetAlertPolicyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::GetAlertPolicyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAlertPolicyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAlertPolicyRequest}, {}};

static void InitDefaultsListAlertPoliciesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListAlertPoliciesRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::ListAlertPoliciesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListAlertPoliciesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListAlertPoliciesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListAlertPoliciesRequest}, {}};

static void InitDefaultsListAlertPoliciesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListAlertPoliciesResponse_default_instance_;
    new (ptr) ::google::monitoring::v3::ListAlertPoliciesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListAlertPoliciesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListAlertPoliciesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListAlertPoliciesResponse}, {
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy.base,}};

static void InitDefaultsUpdateAlertPolicyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_UpdateAlertPolicyRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::UpdateAlertPolicyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::UpdateAlertPolicyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateAlertPolicyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateAlertPolicyRequest}, {
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy.base,}};

static void InitDefaultsDeleteAlertPolicyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_DeleteAlertPolicyRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::DeleteAlertPolicyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::DeleteAlertPolicyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteAlertPolicyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteAlertPolicyRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateAlertPolicyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAlertPolicyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListAlertPoliciesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListAlertPoliciesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateAlertPolicyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteAlertPolicyRequest.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateAlertPolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateAlertPolicyRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateAlertPolicyRequest, alert_policy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetAlertPolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetAlertPolicyRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListAlertPoliciesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListAlertPoliciesRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListAlertPoliciesRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListAlertPoliciesRequest, order_by_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListAlertPoliciesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListAlertPoliciesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListAlertPoliciesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListAlertPoliciesResponse, alert_policies_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListAlertPoliciesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::UpdateAlertPolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::UpdateAlertPolicyRequest, update_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::UpdateAlertPolicyRequest, alert_policy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::DeleteAlertPolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::DeleteAlertPolicyRequest, name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::monitoring::v3::CreateAlertPolicyRequest)},
  { 7, -1, sizeof(::google::monitoring::v3::GetAlertPolicyRequest)},
  { 13, -1, sizeof(::google::monitoring::v3::ListAlertPoliciesRequest)},
  { 23, -1, sizeof(::google::monitoring::v3::ListAlertPoliciesResponse)},
  { 30, -1, sizeof(::google::monitoring::v3::UpdateAlertPolicyRequest)},
  { 37, -1, sizeof(::google::monitoring::v3::DeleteAlertPolicyRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_CreateAlertPolicyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_GetAlertPolicyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListAlertPoliciesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListAlertPoliciesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_UpdateAlertPolicyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_DeleteAlertPolicyRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/monitoring/v3/alert_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n(google/monitoring/v3/alert_service.pro"
      "to\022\024google.monitoring.v3\032\034google/api/ann"
      "otations.proto\032 google/monitoring/v3/ale"
      "rt.proto\032\033google/protobuf/empty.proto\032 g"
      "oogle/protobuf/field_mask.proto\"a\n\030Creat"
      "eAlertPolicyRequest\022\014\n\004name\030\003 \001(\t\0227\n\014ale"
      "rt_policy\030\002 \001(\0132!.google.monitoring.v3.A"
      "lertPolicy\"%\n\025GetAlertPolicyRequest\022\014\n\004n"
      "ame\030\003 \001(\t\"q\n\030ListAlertPoliciesRequest\022\014\n"
      "\004name\030\004 \001(\t\022\016\n\006filter\030\005 \001(\t\022\020\n\010order_by\030"
      "\006 \001(\t\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_token\030\003"
      " \001(\t\"o\n\031ListAlertPoliciesResponse\0229\n\016ale"
      "rt_policies\030\003 \003(\0132!.google.monitoring.v3"
      ".AlertPolicy\022\027\n\017next_page_token\030\002 \001(\t\"\204\001"
      "\n\030UpdateAlertPolicyRequest\022/\n\013update_mas"
      "k\030\002 \001(\0132\032.google.protobuf.FieldMask\0227\n\014a"
      "lert_policy\030\003 \001(\0132!.google.monitoring.v3"
      ".AlertPolicy\"(\n\030DeleteAlertPolicyRequest"
      "\022\014\n\004name\030\003 \001(\t2\256\006\n\022AlertPolicyService\022\241\001"
      "\n\021ListAlertPolicies\022..google.monitoring."
      "v3.ListAlertPoliciesRequest\032/.google.mon"
      "itoring.v3.ListAlertPoliciesResponse\"+\202\323"
      "\344\223\002%\022#/v3/{name=projects/*}/alertPolicie"
      "s\022\217\001\n\016GetAlertPolicy\022+.google.monitoring"
      ".v3.GetAlertPolicyRequest\032!.google.monit"
      "oring.v3.AlertPolicy\"-\202\323\344\223\002\'\022%/v3/{name="
      "projects/*/alertPolicies/*}\022\241\001\n\021CreateAl"
      "ertPolicy\022..google.monitoring.v3.CreateA"
      "lertPolicyRequest\032!.google.monitoring.v3"
      ".AlertPolicy\"9\202\323\344\223\0023\"#/v3/{name=projects"
      "/*}/alertPolicies:\014alert_policy\022\212\001\n\021Dele"
      "teAlertPolicy\022..google.monitoring.v3.Del"
      "eteAlertPolicyRequest\032\026.google.protobuf."
      "Empty\"-\202\323\344\223\002\'*%/v3/{name=projects/*/aler"
      "tPolicies/*}\022\260\001\n\021UpdateAlertPolicy\022..goo"
      "gle.monitoring.v3.UpdateAlertPolicyReque"
      "st\032!.google.monitoring.v3.AlertPolicy\"H\202"
      "\323\344\223\002B22/v3/{alert_policy.name=projects/*"
      "/alertPolicies/*}:\014alert_policyB\251\001\n\030com."
      "google.monitoring.v3B\021AlertServiceProtoP"
      "\001Z>google.golang.org/genproto/googleapis"
      "/monitoring/v3;monitoring\252\002\032Google.Cloud"
      ".Monitoring.V3\312\002\032Google\\Cloud\\Monitoring"
      "\\V3b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1731);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/monitoring/v3/alert_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto
namespace google {
namespace monitoring {
namespace v3 {

// ===================================================================

void CreateAlertPolicyRequest::InitAsDefaultInstance() {
  ::google::monitoring::v3::_CreateAlertPolicyRequest_default_instance_._instance.get_mutable()->alert_policy_ = const_cast< ::google::monitoring::v3::AlertPolicy*>(
      ::google::monitoring::v3::AlertPolicy::internal_default_instance());
}
void CreateAlertPolicyRequest::clear_alert_policy() {
  if (GetArenaNoVirtual() == NULL && alert_policy_ != NULL) {
    delete alert_policy_;
  }
  alert_policy_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAlertPolicyRequest::kNameFieldNumber;
const int CreateAlertPolicyRequest::kAlertPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAlertPolicyRequest::CreateAlertPolicyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::scc_info_CreateAlertPolicyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.CreateAlertPolicyRequest)
}
CreateAlertPolicyRequest::CreateAlertPolicyRequest(const CreateAlertPolicyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_alert_policy()) {
    alert_policy_ = new ::google::monitoring::v3::AlertPolicy(*from.alert_policy_);
  } else {
    alert_policy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.CreateAlertPolicyRequest)
}

void CreateAlertPolicyRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alert_policy_ = NULL;
}

CreateAlertPolicyRequest::~CreateAlertPolicyRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.CreateAlertPolicyRequest)
  SharedDtor();
}

void CreateAlertPolicyRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete alert_policy_;
}

void CreateAlertPolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateAlertPolicyRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateAlertPolicyRequest& CreateAlertPolicyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::scc_info_CreateAlertPolicyRequest.base);
  return *internal_default_instance();
}


void CreateAlertPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.CreateAlertPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && alert_policy_ != NULL) {
    delete alert_policy_;
  }
  alert_policy_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateAlertPolicyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.CreateAlertPolicyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.monitoring.v3.AlertPolicy alert_policy = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alert_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.CreateAlertPolicyRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.CreateAlertPolicyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.CreateAlertPolicyRequest)
  return false;
#undef DO_
}

void CreateAlertPolicyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.CreateAlertPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.monitoring.v3.AlertPolicy alert_policy = 2;
  if (this->has_alert_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_alert_policy(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateAlertPolicyRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.CreateAlertPolicyRequest)
}

::google::protobuf::uint8* CreateAlertPolicyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.CreateAlertPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.monitoring.v3.AlertPolicy alert_policy = 2;
  if (this->has_alert_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_alert_policy(), deterministic, target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateAlertPolicyRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.CreateAlertPolicyRequest)
  return target;
}

size_t CreateAlertPolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.CreateAlertPolicyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.monitoring.v3.AlertPolicy alert_policy = 2;
  if (this->has_alert_policy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *alert_policy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateAlertPolicyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.CreateAlertPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAlertPolicyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAlertPolicyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.CreateAlertPolicyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.CreateAlertPolicyRequest)
    MergeFrom(*source);
  }
}

void CreateAlertPolicyRequest::MergeFrom(const CreateAlertPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.CreateAlertPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_alert_policy()) {
    mutable_alert_policy()->::google::monitoring::v3::AlertPolicy::MergeFrom(from.alert_policy());
  }
}

void CreateAlertPolicyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.CreateAlertPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAlertPolicyRequest::CopyFrom(const CreateAlertPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.CreateAlertPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAlertPolicyRequest::IsInitialized() const {
  return true;
}

void CreateAlertPolicyRequest::Swap(CreateAlertPolicyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAlertPolicyRequest::InternalSwap(CreateAlertPolicyRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(alert_policy_, other->alert_policy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateAlertPolicyRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAlertPolicyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAlertPolicyRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAlertPolicyRequest::GetAlertPolicyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::scc_info_GetAlertPolicyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.GetAlertPolicyRequest)
}
GetAlertPolicyRequest::GetAlertPolicyRequest(const GetAlertPolicyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.GetAlertPolicyRequest)
}

void GetAlertPolicyRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAlertPolicyRequest::~GetAlertPolicyRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.GetAlertPolicyRequest)
  SharedDtor();
}

void GetAlertPolicyRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAlertPolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAlertPolicyRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAlertPolicyRequest& GetAlertPolicyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::scc_info_GetAlertPolicyRequest.base);
  return *internal_default_instance();
}


void GetAlertPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.GetAlertPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetAlertPolicyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.GetAlertPolicyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.GetAlertPolicyRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.GetAlertPolicyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.GetAlertPolicyRequest)
  return false;
#undef DO_
}

void GetAlertPolicyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.GetAlertPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetAlertPolicyRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.GetAlertPolicyRequest)
}

::google::protobuf::uint8* GetAlertPolicyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.GetAlertPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetAlertPolicyRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.GetAlertPolicyRequest)
  return target;
}

size_t GetAlertPolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.GetAlertPolicyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAlertPolicyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.GetAlertPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAlertPolicyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAlertPolicyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.GetAlertPolicyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.GetAlertPolicyRequest)
    MergeFrom(*source);
  }
}

void GetAlertPolicyRequest::MergeFrom(const GetAlertPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.GetAlertPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetAlertPolicyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.GetAlertPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAlertPolicyRequest::CopyFrom(const GetAlertPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.GetAlertPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAlertPolicyRequest::IsInitialized() const {
  return true;
}

void GetAlertPolicyRequest::Swap(GetAlertPolicyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAlertPolicyRequest::InternalSwap(GetAlertPolicyRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAlertPolicyRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListAlertPoliciesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListAlertPoliciesRequest::kNameFieldNumber;
const int ListAlertPoliciesRequest::kFilterFieldNumber;
const int ListAlertPoliciesRequest::kOrderByFieldNumber;
const int ListAlertPoliciesRequest::kPageSizeFieldNumber;
const int ListAlertPoliciesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListAlertPoliciesRequest::ListAlertPoliciesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::scc_info_ListAlertPoliciesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListAlertPoliciesRequest)
}
ListAlertPoliciesRequest::ListAlertPoliciesRequest(const ListAlertPoliciesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  order_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_by().size() > 0) {
    order_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_by_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListAlertPoliciesRequest)
}

void ListAlertPoliciesRequest::SharedCtor() {
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListAlertPoliciesRequest::~ListAlertPoliciesRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListAlertPoliciesRequest)
  SharedDtor();
}

void ListAlertPoliciesRequest::SharedDtor() {
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListAlertPoliciesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListAlertPoliciesRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListAlertPoliciesRequest& ListAlertPoliciesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::scc_info_ListAlertPoliciesRequest.base);
  return *internal_default_instance();
}


void ListAlertPoliciesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListAlertPoliciesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListAlertPoliciesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListAlertPoliciesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListAlertPoliciesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListAlertPoliciesRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListAlertPoliciesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order_by = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_by()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_by().data(), static_cast<int>(this->order_by().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListAlertPoliciesRequest.order_by"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListAlertPoliciesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListAlertPoliciesRequest)
  return false;
#undef DO_
}

void ListAlertPoliciesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListAlertPoliciesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListAlertPoliciesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListAlertPoliciesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // string filter = 5;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListAlertPoliciesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filter(), output);
  }

  // string order_by = 6;
  if (this->order_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_by().data(), static_cast<int>(this->order_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListAlertPoliciesRequest.order_by");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->order_by(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListAlertPoliciesRequest)
}

::google::protobuf::uint8* ListAlertPoliciesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListAlertPoliciesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListAlertPoliciesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListAlertPoliciesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // string filter = 5;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListAlertPoliciesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filter(), target);
  }

  // string order_by = 6;
  if (this->order_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_by().data(), static_cast<int>(this->order_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListAlertPoliciesRequest.order_by");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->order_by(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListAlertPoliciesRequest)
  return target;
}

size_t ListAlertPoliciesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListAlertPoliciesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string filter = 5;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string order_by = 6;
  if (this->order_by().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_by());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListAlertPoliciesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListAlertPoliciesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListAlertPoliciesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListAlertPoliciesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListAlertPoliciesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListAlertPoliciesRequest)
    MergeFrom(*source);
  }
}

void ListAlertPoliciesRequest::MergeFrom(const ListAlertPoliciesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListAlertPoliciesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.order_by().size() > 0) {

    order_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_by_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListAlertPoliciesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListAlertPoliciesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListAlertPoliciesRequest::CopyFrom(const ListAlertPoliciesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListAlertPoliciesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAlertPoliciesRequest::IsInitialized() const {
  return true;
}

void ListAlertPoliciesRequest::Swap(ListAlertPoliciesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListAlertPoliciesRequest::InternalSwap(ListAlertPoliciesRequest* other) {
  using std::swap;
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  order_by_.Swap(&other->order_by_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListAlertPoliciesRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListAlertPoliciesResponse::InitAsDefaultInstance() {
}
void ListAlertPoliciesResponse::clear_alert_policies() {
  alert_policies_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListAlertPoliciesResponse::kAlertPoliciesFieldNumber;
const int ListAlertPoliciesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListAlertPoliciesResponse::ListAlertPoliciesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::scc_info_ListAlertPoliciesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListAlertPoliciesResponse)
}
ListAlertPoliciesResponse::ListAlertPoliciesResponse(const ListAlertPoliciesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      alert_policies_(from.alert_policies_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListAlertPoliciesResponse)
}

void ListAlertPoliciesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListAlertPoliciesResponse::~ListAlertPoliciesResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListAlertPoliciesResponse)
  SharedDtor();
}

void ListAlertPoliciesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListAlertPoliciesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListAlertPoliciesResponse::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListAlertPoliciesResponse& ListAlertPoliciesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::scc_info_ListAlertPoliciesResponse.base);
  return *internal_default_instance();
}


void ListAlertPoliciesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListAlertPoliciesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alert_policies_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListAlertPoliciesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListAlertPoliciesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListAlertPoliciesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.monitoring.v3.AlertPolicy alert_policies = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_alert_policies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListAlertPoliciesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListAlertPoliciesResponse)
  return false;
#undef DO_
}

void ListAlertPoliciesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListAlertPoliciesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListAlertPoliciesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // repeated .google.monitoring.v3.AlertPolicy alert_policies = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alert_policies_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->alert_policies(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListAlertPoliciesResponse)
}

::google::protobuf::uint8* ListAlertPoliciesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListAlertPoliciesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListAlertPoliciesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // repeated .google.monitoring.v3.AlertPolicy alert_policies = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alert_policies_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->alert_policies(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListAlertPoliciesResponse)
  return target;
}

size_t ListAlertPoliciesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListAlertPoliciesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.monitoring.v3.AlertPolicy alert_policies = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->alert_policies_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->alert_policies(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListAlertPoliciesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListAlertPoliciesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListAlertPoliciesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListAlertPoliciesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListAlertPoliciesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListAlertPoliciesResponse)
    MergeFrom(*source);
  }
}

void ListAlertPoliciesResponse::MergeFrom(const ListAlertPoliciesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListAlertPoliciesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alert_policies_.MergeFrom(from.alert_policies_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListAlertPoliciesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListAlertPoliciesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListAlertPoliciesResponse::CopyFrom(const ListAlertPoliciesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListAlertPoliciesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAlertPoliciesResponse::IsInitialized() const {
  return true;
}

void ListAlertPoliciesResponse::Swap(ListAlertPoliciesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListAlertPoliciesResponse::InternalSwap(ListAlertPoliciesResponse* other) {
  using std::swap;
  CastToBase(&alert_policies_)->InternalSwap(CastToBase(&other->alert_policies_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListAlertPoliciesResponse::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateAlertPolicyRequest::InitAsDefaultInstance() {
  ::google::monitoring::v3::_UpdateAlertPolicyRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
  ::google::monitoring::v3::_UpdateAlertPolicyRequest_default_instance_._instance.get_mutable()->alert_policy_ = const_cast< ::google::monitoring::v3::AlertPolicy*>(
      ::google::monitoring::v3::AlertPolicy::internal_default_instance());
}
void UpdateAlertPolicyRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
void UpdateAlertPolicyRequest::clear_alert_policy() {
  if (GetArenaNoVirtual() == NULL && alert_policy_ != NULL) {
    delete alert_policy_;
  }
  alert_policy_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateAlertPolicyRequest::kUpdateMaskFieldNumber;
const int UpdateAlertPolicyRequest::kAlertPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateAlertPolicyRequest::UpdateAlertPolicyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::scc_info_UpdateAlertPolicyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.UpdateAlertPolicyRequest)
}
UpdateAlertPolicyRequest::UpdateAlertPolicyRequest(const UpdateAlertPolicyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  if (from.has_alert_policy()) {
    alert_policy_ = new ::google::monitoring::v3::AlertPolicy(*from.alert_policy_);
  } else {
    alert_policy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.UpdateAlertPolicyRequest)
}

void UpdateAlertPolicyRequest::SharedCtor() {
  ::memset(&update_mask_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alert_policy_) -
      reinterpret_cast<char*>(&update_mask_)) + sizeof(alert_policy_));
}

UpdateAlertPolicyRequest::~UpdateAlertPolicyRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.UpdateAlertPolicyRequest)
  SharedDtor();
}

void UpdateAlertPolicyRequest::SharedDtor() {
  if (this != internal_default_instance()) delete update_mask_;
  if (this != internal_default_instance()) delete alert_policy_;
}

void UpdateAlertPolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateAlertPolicyRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateAlertPolicyRequest& UpdateAlertPolicyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::scc_info_UpdateAlertPolicyRequest.base);
  return *internal_default_instance();
}


void UpdateAlertPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.UpdateAlertPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  if (GetArenaNoVirtual() == NULL && alert_policy_ != NULL) {
    delete alert_policy_;
  }
  alert_policy_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateAlertPolicyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.UpdateAlertPolicyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.FieldMask update_mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.AlertPolicy alert_policy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alert_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.UpdateAlertPolicyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.UpdateAlertPolicyRequest)
  return false;
#undef DO_
}

void UpdateAlertPolicyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.UpdateAlertPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_update_mask(), output);
  }

  // .google.monitoring.v3.AlertPolicy alert_policy = 3;
  if (this->has_alert_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_alert_policy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.UpdateAlertPolicyRequest)
}

::google::protobuf::uint8* UpdateAlertPolicyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.UpdateAlertPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_update_mask(), deterministic, target);
  }

  // .google.monitoring.v3.AlertPolicy alert_policy = 3;
  if (this->has_alert_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_alert_policy(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.UpdateAlertPolicyRequest)
  return target;
}

size_t UpdateAlertPolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.UpdateAlertPolicyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  // .google.monitoring.v3.AlertPolicy alert_policy = 3;
  if (this->has_alert_policy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *alert_policy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateAlertPolicyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.UpdateAlertPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateAlertPolicyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateAlertPolicyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.UpdateAlertPolicyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.UpdateAlertPolicyRequest)
    MergeFrom(*source);
  }
}

void UpdateAlertPolicyRequest::MergeFrom(const UpdateAlertPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.UpdateAlertPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
  if (from.has_alert_policy()) {
    mutable_alert_policy()->::google::monitoring::v3::AlertPolicy::MergeFrom(from.alert_policy());
  }
}

void UpdateAlertPolicyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.UpdateAlertPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateAlertPolicyRequest::CopyFrom(const UpdateAlertPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.UpdateAlertPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAlertPolicyRequest::IsInitialized() const {
  return true;
}

void UpdateAlertPolicyRequest::Swap(UpdateAlertPolicyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateAlertPolicyRequest::InternalSwap(UpdateAlertPolicyRequest* other) {
  using std::swap;
  swap(update_mask_, other->update_mask_);
  swap(alert_policy_, other->alert_policy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateAlertPolicyRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteAlertPolicyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteAlertPolicyRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteAlertPolicyRequest::DeleteAlertPolicyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::scc_info_DeleteAlertPolicyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.DeleteAlertPolicyRequest)
}
DeleteAlertPolicyRequest::DeleteAlertPolicyRequest(const DeleteAlertPolicyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.DeleteAlertPolicyRequest)
}

void DeleteAlertPolicyRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteAlertPolicyRequest::~DeleteAlertPolicyRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.DeleteAlertPolicyRequest)
  SharedDtor();
}

void DeleteAlertPolicyRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteAlertPolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteAlertPolicyRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteAlertPolicyRequest& DeleteAlertPolicyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::scc_info_DeleteAlertPolicyRequest.base);
  return *internal_default_instance();
}


void DeleteAlertPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.DeleteAlertPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteAlertPolicyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.DeleteAlertPolicyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.DeleteAlertPolicyRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.DeleteAlertPolicyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.DeleteAlertPolicyRequest)
  return false;
#undef DO_
}

void DeleteAlertPolicyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.DeleteAlertPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.DeleteAlertPolicyRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.DeleteAlertPolicyRequest)
}

::google::protobuf::uint8* DeleteAlertPolicyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.DeleteAlertPolicyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.DeleteAlertPolicyRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.DeleteAlertPolicyRequest)
  return target;
}

size_t DeleteAlertPolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.DeleteAlertPolicyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteAlertPolicyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.DeleteAlertPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAlertPolicyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteAlertPolicyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.DeleteAlertPolicyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.DeleteAlertPolicyRequest)
    MergeFrom(*source);
  }
}

void DeleteAlertPolicyRequest::MergeFrom(const DeleteAlertPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.DeleteAlertPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteAlertPolicyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.DeleteAlertPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAlertPolicyRequest::CopyFrom(const DeleteAlertPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.DeleteAlertPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAlertPolicyRequest::IsInitialized() const {
  return true;
}

void DeleteAlertPolicyRequest::Swap(DeleteAlertPolicyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteAlertPolicyRequest::InternalSwap(DeleteAlertPolicyRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteAlertPolicyRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::CreateAlertPolicyRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::CreateAlertPolicyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::CreateAlertPolicyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::GetAlertPolicyRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::GetAlertPolicyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::GetAlertPolicyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListAlertPoliciesRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListAlertPoliciesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListAlertPoliciesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListAlertPoliciesResponse* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListAlertPoliciesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListAlertPoliciesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::UpdateAlertPolicyRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::UpdateAlertPolicyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::UpdateAlertPolicyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::DeleteAlertPolicyRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::DeleteAlertPolicyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::DeleteAlertPolicyRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
