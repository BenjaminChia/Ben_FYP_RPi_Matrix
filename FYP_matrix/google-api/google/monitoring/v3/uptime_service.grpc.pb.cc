// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/monitoring/v3/uptime_service.proto

#include "google/monitoring/v3/uptime_service.pb.h"
#include "google/monitoring/v3/uptime_service.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace monitoring {
namespace v3 {

static const char* UptimeCheckService_method_names[] = {
  "/google.monitoring.v3.UptimeCheckService/ListUptimeCheckConfigs",
  "/google.monitoring.v3.UptimeCheckService/GetUptimeCheckConfig",
  "/google.monitoring.v3.UptimeCheckService/CreateUptimeCheckConfig",
  "/google.monitoring.v3.UptimeCheckService/UpdateUptimeCheckConfig",
  "/google.monitoring.v3.UptimeCheckService/DeleteUptimeCheckConfig",
  "/google.monitoring.v3.UptimeCheckService/ListUptimeCheckIps",
};

std::unique_ptr< UptimeCheckService::Stub> UptimeCheckService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< UptimeCheckService::Stub> stub(new UptimeCheckService::Stub(channel));
  return stub;
}

UptimeCheckService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_ListUptimeCheckConfigs_(UptimeCheckService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetUptimeCheckConfig_(UptimeCheckService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateUptimeCheckConfig_(UptimeCheckService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateUptimeCheckConfig_(UptimeCheckService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteUptimeCheckConfig_(UptimeCheckService_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListUptimeCheckIps_(UptimeCheckService_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status UptimeCheckService::Stub::ListUptimeCheckConfigs(::grpc::ClientContext* context, const ::google::monitoring::v3::ListUptimeCheckConfigsRequest& request, ::google::monitoring::v3::ListUptimeCheckConfigsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListUptimeCheckConfigs_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::ListUptimeCheckConfigsResponse>* UptimeCheckService::Stub::AsyncListUptimeCheckConfigsRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::ListUptimeCheckConfigsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::ListUptimeCheckConfigsResponse>::Create(channel_.get(), cq, rpcmethod_ListUptimeCheckConfigs_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::ListUptimeCheckConfigsResponse>* UptimeCheckService::Stub::PrepareAsyncListUptimeCheckConfigsRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::ListUptimeCheckConfigsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::ListUptimeCheckConfigsResponse>::Create(channel_.get(), cq, rpcmethod_ListUptimeCheckConfigs_, context, request, false);
}

::grpc::Status UptimeCheckService::Stub::GetUptimeCheckConfig(::grpc::ClientContext* context, const ::google::monitoring::v3::GetUptimeCheckConfigRequest& request, ::google::monitoring::v3::UptimeCheckConfig* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetUptimeCheckConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::UptimeCheckConfig>* UptimeCheckService::Stub::AsyncGetUptimeCheckConfigRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::GetUptimeCheckConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::UptimeCheckConfig>::Create(channel_.get(), cq, rpcmethod_GetUptimeCheckConfig_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::UptimeCheckConfig>* UptimeCheckService::Stub::PrepareAsyncGetUptimeCheckConfigRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::GetUptimeCheckConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::UptimeCheckConfig>::Create(channel_.get(), cq, rpcmethod_GetUptimeCheckConfig_, context, request, false);
}

::grpc::Status UptimeCheckService::Stub::CreateUptimeCheckConfig(::grpc::ClientContext* context, const ::google::monitoring::v3::CreateUptimeCheckConfigRequest& request, ::google::monitoring::v3::UptimeCheckConfig* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateUptimeCheckConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::UptimeCheckConfig>* UptimeCheckService::Stub::AsyncCreateUptimeCheckConfigRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::CreateUptimeCheckConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::UptimeCheckConfig>::Create(channel_.get(), cq, rpcmethod_CreateUptimeCheckConfig_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::UptimeCheckConfig>* UptimeCheckService::Stub::PrepareAsyncCreateUptimeCheckConfigRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::CreateUptimeCheckConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::UptimeCheckConfig>::Create(channel_.get(), cq, rpcmethod_CreateUptimeCheckConfig_, context, request, false);
}

::grpc::Status UptimeCheckService::Stub::UpdateUptimeCheckConfig(::grpc::ClientContext* context, const ::google::monitoring::v3::UpdateUptimeCheckConfigRequest& request, ::google::monitoring::v3::UptimeCheckConfig* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateUptimeCheckConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::UptimeCheckConfig>* UptimeCheckService::Stub::AsyncUpdateUptimeCheckConfigRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::UpdateUptimeCheckConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::UptimeCheckConfig>::Create(channel_.get(), cq, rpcmethod_UpdateUptimeCheckConfig_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::UptimeCheckConfig>* UptimeCheckService::Stub::PrepareAsyncUpdateUptimeCheckConfigRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::UpdateUptimeCheckConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::UptimeCheckConfig>::Create(channel_.get(), cq, rpcmethod_UpdateUptimeCheckConfig_, context, request, false);
}

::grpc::Status UptimeCheckService::Stub::DeleteUptimeCheckConfig(::grpc::ClientContext* context, const ::google::monitoring::v3::DeleteUptimeCheckConfigRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteUptimeCheckConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* UptimeCheckService::Stub::AsyncDeleteUptimeCheckConfigRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::DeleteUptimeCheckConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteUptimeCheckConfig_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* UptimeCheckService::Stub::PrepareAsyncDeleteUptimeCheckConfigRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::DeleteUptimeCheckConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteUptimeCheckConfig_, context, request, false);
}

::grpc::Status UptimeCheckService::Stub::ListUptimeCheckIps(::grpc::ClientContext* context, const ::google::monitoring::v3::ListUptimeCheckIpsRequest& request, ::google::monitoring::v3::ListUptimeCheckIpsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListUptimeCheckIps_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::ListUptimeCheckIpsResponse>* UptimeCheckService::Stub::AsyncListUptimeCheckIpsRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::ListUptimeCheckIpsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::ListUptimeCheckIpsResponse>::Create(channel_.get(), cq, rpcmethod_ListUptimeCheckIps_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::monitoring::v3::ListUptimeCheckIpsResponse>* UptimeCheckService::Stub::PrepareAsyncListUptimeCheckIpsRaw(::grpc::ClientContext* context, const ::google::monitoring::v3::ListUptimeCheckIpsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::monitoring::v3::ListUptimeCheckIpsResponse>::Create(channel_.get(), cq, rpcmethod_ListUptimeCheckIps_, context, request, false);
}

UptimeCheckService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UptimeCheckService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UptimeCheckService::Service, ::google::monitoring::v3::ListUptimeCheckConfigsRequest, ::google::monitoring::v3::ListUptimeCheckConfigsResponse>(
          std::mem_fn(&UptimeCheckService::Service::ListUptimeCheckConfigs), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UptimeCheckService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UptimeCheckService::Service, ::google::monitoring::v3::GetUptimeCheckConfigRequest, ::google::monitoring::v3::UptimeCheckConfig>(
          std::mem_fn(&UptimeCheckService::Service::GetUptimeCheckConfig), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UptimeCheckService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UptimeCheckService::Service, ::google::monitoring::v3::CreateUptimeCheckConfigRequest, ::google::monitoring::v3::UptimeCheckConfig>(
          std::mem_fn(&UptimeCheckService::Service::CreateUptimeCheckConfig), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UptimeCheckService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UptimeCheckService::Service, ::google::monitoring::v3::UpdateUptimeCheckConfigRequest, ::google::monitoring::v3::UptimeCheckConfig>(
          std::mem_fn(&UptimeCheckService::Service::UpdateUptimeCheckConfig), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UptimeCheckService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UptimeCheckService::Service, ::google::monitoring::v3::DeleteUptimeCheckConfigRequest, ::google::protobuf::Empty>(
          std::mem_fn(&UptimeCheckService::Service::DeleteUptimeCheckConfig), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UptimeCheckService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UptimeCheckService::Service, ::google::monitoring::v3::ListUptimeCheckIpsRequest, ::google::monitoring::v3::ListUptimeCheckIpsResponse>(
          std::mem_fn(&UptimeCheckService::Service::ListUptimeCheckIps), this)));
}

UptimeCheckService::Service::~Service() {
}

::grpc::Status UptimeCheckService::Service::ListUptimeCheckConfigs(::grpc::ServerContext* context, const ::google::monitoring::v3::ListUptimeCheckConfigsRequest* request, ::google::monitoring::v3::ListUptimeCheckConfigsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UptimeCheckService::Service::GetUptimeCheckConfig(::grpc::ServerContext* context, const ::google::monitoring::v3::GetUptimeCheckConfigRequest* request, ::google::monitoring::v3::UptimeCheckConfig* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UptimeCheckService::Service::CreateUptimeCheckConfig(::grpc::ServerContext* context, const ::google::monitoring::v3::CreateUptimeCheckConfigRequest* request, ::google::monitoring::v3::UptimeCheckConfig* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UptimeCheckService::Service::UpdateUptimeCheckConfig(::grpc::ServerContext* context, const ::google::monitoring::v3::UpdateUptimeCheckConfigRequest* request, ::google::monitoring::v3::UptimeCheckConfig* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UptimeCheckService::Service::DeleteUptimeCheckConfig(::grpc::ServerContext* context, const ::google::monitoring::v3::DeleteUptimeCheckConfigRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UptimeCheckService::Service::ListUptimeCheckIps(::grpc::ServerContext* context, const ::google::monitoring::v3::ListUptimeCheckIpsRequest* request, ::google::monitoring::v3::ListUptimeCheckIpsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace monitoring
}  // namespace v3

