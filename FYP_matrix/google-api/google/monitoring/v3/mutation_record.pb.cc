// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/mutation_record.proto

#include "google/monitoring/v3/mutation_record.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace monitoring {
namespace v3 {
class MutationRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MutationRecord>
      _instance;
} _MutationRecord_default_instance_;
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace protobuf_google_2fmonitoring_2fv3_2fmutation_5frecord_2eproto {
static void InitDefaultsMutationRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_MutationRecord_default_instance_;
    new (ptr) ::google::monitoring::v3::MutationRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::MutationRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MutationRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMutationRecord}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MutationRecord.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::MutationRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::MutationRecord, mutate_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::MutationRecord, mutated_by_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::monitoring::v3::MutationRecord)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_MutationRecord_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/monitoring/v3/mutation_record.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*google/monitoring/v3/mutation_record.p"
      "roto\022\024google.monitoring.v3\032\037google/proto"
      "buf/timestamp.proto\"U\n\016MutationRecord\022/\n"
      "\013mutate_time\030\001 \001(\0132\032.google.protobuf.Tim"
      "estamp\022\022\n\nmutated_by\030\002 \001(\tB\253\001\n\030com.googl"
      "e.monitoring.v3B\023MutationRecordProtoP\001Z>"
      "google.golang.org/genproto/googleapis/mo"
      "nitoring/v3;monitoring\252\002\032Google.Cloud.Mo"
      "nitoring.V3\312\002\032Google\\Cloud\\Monitoring\\V3"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 368);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/monitoring/v3/mutation_record.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fmonitoring_2fv3_2fmutation_5frecord_2eproto
namespace google {
namespace monitoring {
namespace v3 {

// ===================================================================

void MutationRecord::InitAsDefaultInstance() {
  ::google::monitoring::v3::_MutationRecord_default_instance_._instance.get_mutable()->mutate_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void MutationRecord::clear_mutate_time() {
  if (GetArenaNoVirtual() == NULL && mutate_time_ != NULL) {
    delete mutate_time_;
  }
  mutate_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MutationRecord::kMutateTimeFieldNumber;
const int MutationRecord::kMutatedByFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MutationRecord::MutationRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fmutation_5frecord_2eproto::scc_info_MutationRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.MutationRecord)
}
MutationRecord::MutationRecord(const MutationRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mutated_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mutated_by().size() > 0) {
    mutated_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mutated_by_);
  }
  if (from.has_mutate_time()) {
    mutate_time_ = new ::google::protobuf::Timestamp(*from.mutate_time_);
  } else {
    mutate_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.MutationRecord)
}

void MutationRecord::SharedCtor() {
  mutated_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mutate_time_ = NULL;
}

MutationRecord::~MutationRecord() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.MutationRecord)
  SharedDtor();
}

void MutationRecord::SharedDtor() {
  mutated_by_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mutate_time_;
}

void MutationRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MutationRecord::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fmutation_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmutation_5frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MutationRecord& MutationRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fmutation_5frecord_2eproto::scc_info_MutationRecord.base);
  return *internal_default_instance();
}


void MutationRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.MutationRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mutated_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && mutate_time_ != NULL) {
    delete mutate_time_;
  }
  mutate_time_ = NULL;
  _internal_metadata_.Clear();
}

bool MutationRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.MutationRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp mutate_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mutate_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mutated_by = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mutated_by()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mutated_by().data(), static_cast<int>(this->mutated_by().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.MutationRecord.mutated_by"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.MutationRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.MutationRecord)
  return false;
#undef DO_
}

void MutationRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.MutationRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp mutate_time = 1;
  if (this->has_mutate_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_mutate_time(), output);
  }

  // string mutated_by = 2;
  if (this->mutated_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mutated_by().data(), static_cast<int>(this->mutated_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.MutationRecord.mutated_by");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mutated_by(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.MutationRecord)
}

::google::protobuf::uint8* MutationRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.MutationRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp mutate_time = 1;
  if (this->has_mutate_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_mutate_time(), deterministic, target);
  }

  // string mutated_by = 2;
  if (this->mutated_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mutated_by().data(), static_cast<int>(this->mutated_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.MutationRecord.mutated_by");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mutated_by(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.MutationRecord)
  return target;
}

size_t MutationRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.MutationRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string mutated_by = 2;
  if (this->mutated_by().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mutated_by());
  }

  // .google.protobuf.Timestamp mutate_time = 1;
  if (this->has_mutate_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mutate_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MutationRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.MutationRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const MutationRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MutationRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.MutationRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.MutationRecord)
    MergeFrom(*source);
  }
}

void MutationRecord::MergeFrom(const MutationRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.MutationRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mutated_by().size() > 0) {

    mutated_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mutated_by_);
  }
  if (from.has_mutate_time()) {
    mutable_mutate_time()->::google::protobuf::Timestamp::MergeFrom(from.mutate_time());
  }
}

void MutationRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.MutationRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutationRecord::CopyFrom(const MutationRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.MutationRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutationRecord::IsInitialized() const {
  return true;
}

void MutationRecord::Swap(MutationRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MutationRecord::InternalSwap(MutationRecord* other) {
  using std::swap;
  mutated_by_.Swap(&other->mutated_by_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mutate_time_, other->mutate_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MutationRecord::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fmutation_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fmutation_5frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::MutationRecord* Arena::CreateMaybeMessage< ::google::monitoring::v3::MutationRecord >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::MutationRecord >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
