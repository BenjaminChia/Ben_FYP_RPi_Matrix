// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/alert.proto

#include "google/monitoring/v3/alert.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fmonitoring_2fv3_2falert_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2falert_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AlertPolicy_Condition_Trigger;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2falert_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AlertPolicy_Documentation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2falert_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AlertPolicy_UserLabelsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2falert_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_AlertPolicy_Condition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2falert_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_AlertPolicy_Condition_MetricAbsence;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2falert_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_AlertPolicy_Condition_MetricThreshold;
}  // namespace protobuf_google_2fmonitoring_2fv3_2falert_2eproto
namespace protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Aggregation;
}  // namespace protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto
namespace protobuf_google_2fmonitoring_2fv3_2fmutation_5frecord_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2fmutation_5frecord_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MutationRecord;
}  // namespace protobuf_google_2fmonitoring_2fv3_2fmutation_5frecord_2eproto
namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoolValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace google {
namespace monitoring {
namespace v3 {
class AlertPolicy_DocumentationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlertPolicy_Documentation>
      _instance;
} _AlertPolicy_Documentation_default_instance_;
class AlertPolicy_Condition_TriggerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlertPolicy_Condition_Trigger>
      _instance;
  ::google::protobuf::int32 count_;
  double percent_;
} _AlertPolicy_Condition_Trigger_default_instance_;
class AlertPolicy_Condition_MetricThresholdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlertPolicy_Condition_MetricThreshold>
      _instance;
} _AlertPolicy_Condition_MetricThreshold_default_instance_;
class AlertPolicy_Condition_MetricAbsenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlertPolicy_Condition_MetricAbsence>
      _instance;
} _AlertPolicy_Condition_MetricAbsence_default_instance_;
class AlertPolicy_ConditionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlertPolicy_Condition>
      _instance;
  const ::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold* condition_threshold_;
  const ::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence* condition_absent_;
} _AlertPolicy_Condition_default_instance_;
class AlertPolicy_UserLabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlertPolicy_UserLabelsEntry_DoNotUse>
      _instance;
} _AlertPolicy_UserLabelsEntry_DoNotUse_default_instance_;
class AlertPolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlertPolicy>
      _instance;
} _AlertPolicy_default_instance_;
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace protobuf_google_2fmonitoring_2fv3_2falert_2eproto {
static void InitDefaultsAlertPolicy_Documentation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_AlertPolicy_Documentation_default_instance_;
    new (ptr) ::google::monitoring::v3::AlertPolicy_Documentation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::AlertPolicy_Documentation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AlertPolicy_Documentation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAlertPolicy_Documentation}, {}};

static void InitDefaultsAlertPolicy_Condition_Trigger() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_AlertPolicy_Condition_Trigger_default_instance_;
    new (ptr) ::google::monitoring::v3::AlertPolicy_Condition_Trigger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::AlertPolicy_Condition_Trigger::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AlertPolicy_Condition_Trigger =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAlertPolicy_Condition_Trigger}, {}};

static void InitDefaultsAlertPolicy_Condition_MetricThreshold() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_AlertPolicy_Condition_MetricThreshold_default_instance_;
    new (ptr) ::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AlertPolicy_Condition_MetricThreshold =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAlertPolicy_Condition_MetricThreshold}, {
      &protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::scc_info_Aggregation.base,
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Condition_Trigger.base,}};

static void InitDefaultsAlertPolicy_Condition_MetricAbsence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_AlertPolicy_Condition_MetricAbsence_default_instance_;
    new (ptr) ::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AlertPolicy_Condition_MetricAbsence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAlertPolicy_Condition_MetricAbsence}, {
      &protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::scc_info_Aggregation.base,
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Condition_Trigger.base,}};

static void InitDefaultsAlertPolicy_Condition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_AlertPolicy_Condition_default_instance_;
    new (ptr) ::google::monitoring::v3::AlertPolicy_Condition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::AlertPolicy_Condition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AlertPolicy_Condition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAlertPolicy_Condition}, {
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Condition_MetricThreshold.base,
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Condition_MetricAbsence.base,}};

static void InitDefaultsAlertPolicy_UserLabelsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_AlertPolicy_UserLabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::monitoring::v3::AlertPolicy_UserLabelsEntry_DoNotUse();
  }
  ::google::monitoring::v3::AlertPolicy_UserLabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AlertPolicy_UserLabelsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAlertPolicy_UserLabelsEntry_DoNotUse}, {}};

static void InitDefaultsAlertPolicy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_AlertPolicy_default_instance_;
    new (ptr) ::google::monitoring::v3::AlertPolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::AlertPolicy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_AlertPolicy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsAlertPolicy}, {
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Documentation.base,
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_UserLabelsEntry_DoNotUse.base,
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Condition.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_BoolValue.base,
      &protobuf_google_2fmonitoring_2fv3_2fmutation_5frecord_2eproto::scc_info_MutationRecord.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AlertPolicy_Documentation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlertPolicy_Condition_Trigger.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlertPolicy_Condition_MetricThreshold.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlertPolicy_Condition_MetricAbsence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlertPolicy_Condition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlertPolicy_UserLabelsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlertPolicy.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Documentation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Documentation, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Documentation, mime_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_Trigger, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_Trigger, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::monitoring::v3::AlertPolicy_Condition_TriggerDefaultTypeInternal, count_),
  offsetof(::google::monitoring::v3::AlertPolicy_Condition_TriggerDefaultTypeInternal, percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_Trigger, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold, aggregations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold, denominator_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold, denominator_aggregations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold, comparison_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold, threshold_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold, trigger_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence, aggregations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence, trigger_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition, display_name_),
  offsetof(::google::monitoring::v3::AlertPolicy_ConditionDefaultTypeInternal, condition_threshold_),
  offsetof(::google::monitoring::v3::AlertPolicy_ConditionDefaultTypeInternal, condition_absent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_Condition, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_UserLabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_UserLabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_UserLabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy_UserLabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy, documentation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy, user_labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy, conditions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy, combiner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy, notification_channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy, creation_record_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::AlertPolicy, mutation_record_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::monitoring::v3::AlertPolicy_Documentation)},
  { 7, -1, sizeof(::google::monitoring::v3::AlertPolicy_Condition_Trigger)},
  { 15, -1, sizeof(::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold)},
  { 28, -1, sizeof(::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence)},
  { 37, -1, sizeof(::google::monitoring::v3::AlertPolicy_Condition)},
  { 47, 54, sizeof(::google::monitoring::v3::AlertPolicy_UserLabelsEntry_DoNotUse)},
  { 56, -1, sizeof(::google::monitoring::v3::AlertPolicy)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_AlertPolicy_Documentation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_AlertPolicy_Condition_Trigger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_AlertPolicy_Condition_MetricThreshold_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_AlertPolicy_Condition_MetricAbsence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_AlertPolicy_Condition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_AlertPolicy_UserLabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_AlertPolicy_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/monitoring/v3/alert.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n google/monitoring/v3/alert.proto\022\024goog"
      "le.monitoring.v3\032\034google/api/annotations"
      ".proto\032!google/monitoring/v3/common.prot"
      "o\032*google/monitoring/v3/mutation_record."
      "proto\032\036google/protobuf/duration.proto\032\036g"
      "oogle/protobuf/wrappers.proto\"\335\014\n\013AlertP"
      "olicy\022\014\n\004name\030\001 \001(\t\022\024\n\014display_name\030\002 \001("
      "\t\022F\n\rdocumentation\030\r \001(\0132/.google.monito"
      "ring.v3.AlertPolicy.Documentation\022F\n\013use"
      "r_labels\030\020 \003(\01321.google.monitoring.v3.Al"
      "ertPolicy.UserLabelsEntry\022\?\n\nconditions\030"
      "\014 \003(\0132+.google.monitoring.v3.AlertPolicy"
      ".Condition\022I\n\010combiner\030\006 \001(\01627.google.mo"
      "nitoring.v3.AlertPolicy.ConditionCombine"
      "rType\022+\n\007enabled\030\021 \001(\0132\032.google.protobuf"
      ".BoolValue\022\035\n\025notification_channels\030\016 \003("
      "\t\022=\n\017creation_record\030\n \001(\0132$.google.moni"
      "toring.v3.MutationRecord\022=\n\017mutation_rec"
      "ord\030\013 \001(\0132$.google.monitoring.v3.Mutatio"
      "nRecord\0323\n\rDocumentation\022\017\n\007content\030\001 \001("
      "\t\022\021\n\tmime_type\030\002 \001(\t\032\370\006\n\tCondition\022\014\n\004na"
      "me\030\014 \001(\t\022\024\n\014display_name\030\006 \001(\t\022Z\n\023condit"
      "ion_threshold\030\001 \001(\0132;.google.monitoring."
      "v3.AlertPolicy.Condition.MetricThreshold"
      "H\000\022U\n\020condition_absent\030\002 \001(\01329.google.mo"
      "nitoring.v3.AlertPolicy.Condition.Metric"
      "AbsenceH\000\0325\n\007Trigger\022\017\n\005count\030\001 \001(\005H\000\022\021\n"
      "\007percent\030\002 \001(\001H\000B\006\n\004type\032\201\003\n\017MetricThres"
      "hold\022\016\n\006filter\030\002 \001(\t\0227\n\014aggregations\030\010 \003"
      "(\0132!.google.monitoring.v3.Aggregation\022\032\n"
      "\022denominator_filter\030\t \001(\t\022C\n\030denominator"
      "_aggregations\030\n \003(\0132!.google.monitoring."
      "v3.Aggregation\0228\n\ncomparison\030\004 \001(\0162$.goo"
      "gle.monitoring.v3.ComparisonType\022\027\n\017thre"
      "shold_value\030\005 \001(\001\022+\n\010duration\030\006 \001(\0132\031.go"
      "ogle.protobuf.Duration\022D\n\007trigger\030\007 \001(\0132"
      "3.google.monitoring.v3.AlertPolicy.Condi"
      "tion.Trigger\032\313\001\n\rMetricAbsence\022\016\n\006filter"
      "\030\001 \001(\t\0227\n\014aggregations\030\005 \003(\0132!.google.mo"
      "nitoring.v3.Aggregation\022+\n\010duration\030\002 \001("
      "\0132\031.google.protobuf.Duration\022D\n\007trigger\030"
      "\003 \001(\01323.google.monitoring.v3.AlertPolicy"
      ".Condition.TriggerB\013\n\tcondition\0321\n\017UserL"
      "abelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
      "8\001\"a\n\025ConditionCombinerType\022\027\n\023COMBINE_U"
      "NSPECIFIED\020\000\022\007\n\003AND\020\001\022\006\n\002OR\020\002\022\036\n\032AND_WIT"
      "H_MATCHING_RESOURCE\020\003B\242\001\n\030com.google.mon"
      "itoring.v3B\nAlertProtoP\001Z>google.golang."
      "org/genproto/googleapis/monitoring/v3;mo"
      "nitoring\252\002\032Google.Cloud.Monitoring.V3\312\002\032"
      "Google\\Cloud\\Monitoring\\V3b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2034);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/monitoring/v3/alert.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fmonitoring_2fv3_2fcommon_2eproto::AddDescriptors();
  ::protobuf_google_2fmonitoring_2fv3_2fmutation_5frecord_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fmonitoring_2fv3_2falert_2eproto
namespace google {
namespace monitoring {
namespace v3 {
const ::google::protobuf::EnumDescriptor* AlertPolicy_ConditionCombinerType_descriptor() {
  protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_enum_descriptors[0];
}
bool AlertPolicy_ConditionCombinerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AlertPolicy_ConditionCombinerType AlertPolicy::COMBINE_UNSPECIFIED;
const AlertPolicy_ConditionCombinerType AlertPolicy::AND;
const AlertPolicy_ConditionCombinerType AlertPolicy::OR;
const AlertPolicy_ConditionCombinerType AlertPolicy::AND_WITH_MATCHING_RESOURCE;
const AlertPolicy_ConditionCombinerType AlertPolicy::ConditionCombinerType_MIN;
const AlertPolicy_ConditionCombinerType AlertPolicy::ConditionCombinerType_MAX;
const int AlertPolicy::ConditionCombinerType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void AlertPolicy_Documentation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlertPolicy_Documentation::kContentFieldNumber;
const int AlertPolicy_Documentation::kMimeTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlertPolicy_Documentation::AlertPolicy_Documentation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Documentation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.AlertPolicy.Documentation)
}
AlertPolicy_Documentation::AlertPolicy_Documentation(const AlertPolicy_Documentation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mime_type().size() > 0) {
    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.AlertPolicy.Documentation)
}

void AlertPolicy_Documentation::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AlertPolicy_Documentation::~AlertPolicy_Documentation() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.AlertPolicy.Documentation)
  SharedDtor();
}

void AlertPolicy_Documentation::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AlertPolicy_Documentation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AlertPolicy_Documentation::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlertPolicy_Documentation& AlertPolicy_Documentation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Documentation.base);
  return *internal_default_instance();
}


void AlertPolicy_Documentation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.AlertPolicy.Documentation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AlertPolicy_Documentation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.AlertPolicy.Documentation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.AlertPolicy.Documentation.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mime_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), static_cast<int>(this->mime_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.AlertPolicy.Documentation.mime_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.AlertPolicy.Documentation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.AlertPolicy.Documentation)
  return false;
#undef DO_
}

void AlertPolicy_Documentation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.AlertPolicy.Documentation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Documentation.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Documentation.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mime_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.AlertPolicy.Documentation)
}

::google::protobuf::uint8* AlertPolicy_Documentation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.AlertPolicy.Documentation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Documentation.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Documentation.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mime_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.AlertPolicy.Documentation)
  return target;
}

size_t AlertPolicy_Documentation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.AlertPolicy.Documentation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlertPolicy_Documentation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.AlertPolicy.Documentation)
  GOOGLE_DCHECK_NE(&from, this);
  const AlertPolicy_Documentation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlertPolicy_Documentation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.AlertPolicy.Documentation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.AlertPolicy.Documentation)
    MergeFrom(*source);
  }
}

void AlertPolicy_Documentation::MergeFrom(const AlertPolicy_Documentation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.AlertPolicy.Documentation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.mime_type().size() > 0) {

    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
}

void AlertPolicy_Documentation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.AlertPolicy.Documentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlertPolicy_Documentation::CopyFrom(const AlertPolicy_Documentation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.AlertPolicy.Documentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertPolicy_Documentation::IsInitialized() const {
  return true;
}

void AlertPolicy_Documentation::Swap(AlertPolicy_Documentation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlertPolicy_Documentation::InternalSwap(AlertPolicy_Documentation* other) {
  using std::swap;
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mime_type_.Swap(&other->mime_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AlertPolicy_Documentation::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AlertPolicy_Condition_Trigger::InitAsDefaultInstance() {
  ::google::monitoring::v3::_AlertPolicy_Condition_Trigger_default_instance_.count_ = 0;
  ::google::monitoring::v3::_AlertPolicy_Condition_Trigger_default_instance_.percent_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlertPolicy_Condition_Trigger::kCountFieldNumber;
const int AlertPolicy_Condition_Trigger::kPercentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlertPolicy_Condition_Trigger::AlertPolicy_Condition_Trigger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Condition_Trigger.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.AlertPolicy.Condition.Trigger)
}
AlertPolicy_Condition_Trigger::AlertPolicy_Condition_Trigger(const AlertPolicy_Condition_Trigger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kCount: {
      set_count(from.count());
      break;
    }
    case kPercent: {
      set_percent(from.percent());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.AlertPolicy.Condition.Trigger)
}

void AlertPolicy_Condition_Trigger::SharedCtor() {
  clear_has_type();
}

AlertPolicy_Condition_Trigger::~AlertPolicy_Condition_Trigger() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  SharedDtor();
}

void AlertPolicy_Condition_Trigger::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void AlertPolicy_Condition_Trigger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AlertPolicy_Condition_Trigger::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlertPolicy_Condition_Trigger& AlertPolicy_Condition_Trigger::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Condition_Trigger.base);
  return *internal_default_instance();
}


void AlertPolicy_Condition_Trigger::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  switch (type_case()) {
    case kCount: {
      // No need to clear
      break;
    }
    case kPercent: {
      // No need to clear
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void AlertPolicy_Condition_Trigger::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

bool AlertPolicy_Condition_Trigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_.count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double percent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          clear_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &type_.percent_)));
          set_has_percent();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  return false;
#undef DO_
}

void AlertPolicy_Condition_Trigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // double percent = 2;
  if (has_percent()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->percent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.AlertPolicy.Condition.Trigger)
}

::google::protobuf::uint8* AlertPolicy_Condition_Trigger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // double percent = 2;
  if (has_percent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->percent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  return target;
}

size_t AlertPolicy_Condition_Trigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_case()) {
    // int32 count = 1;
    case kCount: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
      break;
    }
    // double percent = 2;
    case kPercent: {
      total_size += 1 + 8;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlertPolicy_Condition_Trigger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  GOOGLE_DCHECK_NE(&from, this);
  const AlertPolicy_Condition_Trigger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlertPolicy_Condition_Trigger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.AlertPolicy.Condition.Trigger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.AlertPolicy.Condition.Trigger)
    MergeFrom(*source);
  }
}

void AlertPolicy_Condition_Trigger::MergeFrom(const AlertPolicy_Condition_Trigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kCount: {
      set_count(from.count());
      break;
    }
    case kPercent: {
      set_percent(from.percent());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void AlertPolicy_Condition_Trigger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlertPolicy_Condition_Trigger::CopyFrom(const AlertPolicy_Condition_Trigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.AlertPolicy.Condition.Trigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertPolicy_Condition_Trigger::IsInitialized() const {
  return true;
}

void AlertPolicy_Condition_Trigger::Swap(AlertPolicy_Condition_Trigger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlertPolicy_Condition_Trigger::InternalSwap(AlertPolicy_Condition_Trigger* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AlertPolicy_Condition_Trigger::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AlertPolicy_Condition_MetricThreshold::InitAsDefaultInstance() {
  ::google::monitoring::v3::_AlertPolicy_Condition_MetricThreshold_default_instance_._instance.get_mutable()->duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::monitoring::v3::_AlertPolicy_Condition_MetricThreshold_default_instance_._instance.get_mutable()->trigger_ = const_cast< ::google::monitoring::v3::AlertPolicy_Condition_Trigger*>(
      ::google::monitoring::v3::AlertPolicy_Condition_Trigger::internal_default_instance());
}
void AlertPolicy_Condition_MetricThreshold::clear_aggregations() {
  aggregations_.Clear();
}
void AlertPolicy_Condition_MetricThreshold::clear_denominator_aggregations() {
  denominator_aggregations_.Clear();
}
void AlertPolicy_Condition_MetricThreshold::clear_duration() {
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) {
    delete duration_;
  }
  duration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlertPolicy_Condition_MetricThreshold::kFilterFieldNumber;
const int AlertPolicy_Condition_MetricThreshold::kAggregationsFieldNumber;
const int AlertPolicy_Condition_MetricThreshold::kDenominatorFilterFieldNumber;
const int AlertPolicy_Condition_MetricThreshold::kDenominatorAggregationsFieldNumber;
const int AlertPolicy_Condition_MetricThreshold::kComparisonFieldNumber;
const int AlertPolicy_Condition_MetricThreshold::kThresholdValueFieldNumber;
const int AlertPolicy_Condition_MetricThreshold::kDurationFieldNumber;
const int AlertPolicy_Condition_MetricThreshold::kTriggerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlertPolicy_Condition_MetricThreshold::AlertPolicy_Condition_MetricThreshold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Condition_MetricThreshold.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
}
AlertPolicy_Condition_MetricThreshold::AlertPolicy_Condition_MetricThreshold(const AlertPolicy_Condition_MetricThreshold& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      aggregations_(from.aggregations_),
      denominator_aggregations_(from.denominator_aggregations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  denominator_filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.denominator_filter().size() > 0) {
    denominator_filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.denominator_filter_);
  }
  if (from.has_duration()) {
    duration_ = new ::google::protobuf::Duration(*from.duration_);
  } else {
    duration_ = NULL;
  }
  if (from.has_trigger()) {
    trigger_ = new ::google::monitoring::v3::AlertPolicy_Condition_Trigger(*from.trigger_);
  } else {
    trigger_ = NULL;
  }
  ::memcpy(&threshold_value_, &from.threshold_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&comparison_) -
    reinterpret_cast<char*>(&threshold_value_)) + sizeof(comparison_));
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
}

void AlertPolicy_Condition_MetricThreshold::SharedCtor() {
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  denominator_filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&comparison_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(comparison_));
}

AlertPolicy_Condition_MetricThreshold::~AlertPolicy_Condition_MetricThreshold() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
  SharedDtor();
}

void AlertPolicy_Condition_MetricThreshold::SharedDtor() {
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  denominator_filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete duration_;
  if (this != internal_default_instance()) delete trigger_;
}

void AlertPolicy_Condition_MetricThreshold::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AlertPolicy_Condition_MetricThreshold::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlertPolicy_Condition_MetricThreshold& AlertPolicy_Condition_MetricThreshold::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Condition_MetricThreshold.base);
  return *internal_default_instance();
}


void AlertPolicy_Condition_MetricThreshold::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aggregations_.Clear();
  denominator_aggregations_.Clear();
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  denominator_filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) {
    delete duration_;
  }
  duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && trigger_ != NULL) {
    delete trigger_;
  }
  trigger_ = NULL;
  ::memset(&threshold_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&comparison_) -
      reinterpret_cast<char*>(&threshold_value_)) + sizeof(comparison_));
  _internal_metadata_.Clear();
}

bool AlertPolicy_Condition_MetricThreshold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.ComparisonType comparison = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_comparison(static_cast< ::google::monitoring::v3::ComparisonType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double threshold_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &threshold_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.AlertPolicy.Condition.Trigger trigger = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trigger()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.monitoring.v3.Aggregation aggregations = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_aggregations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string denominator_filter = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_denominator_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->denominator_filter().data(), static_cast<int>(this->denominator_filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.denominator_filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.monitoring.v3.Aggregation denominator_aggregations = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_denominator_aggregations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
  return false;
#undef DO_
}

void AlertPolicy_Condition_MetricThreshold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // .google.monitoring.v3.ComparisonType comparison = 4;
  if (this->comparison() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->comparison(), output);
  }

  // double threshold_value = 5;
  if (this->threshold_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->threshold_value(), output);
  }

  // .google.protobuf.Duration duration = 6;
  if (this->has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_duration(), output);
  }

  // .google.monitoring.v3.AlertPolicy.Condition.Trigger trigger = 7;
  if (this->has_trigger()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_trigger(), output);
  }

  // repeated .google.monitoring.v3.Aggregation aggregations = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->aggregations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->aggregations(static_cast<int>(i)),
      output);
  }

  // string denominator_filter = 9;
  if (this->denominator_filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->denominator_filter().data(), static_cast<int>(this->denominator_filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.denominator_filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->denominator_filter(), output);
  }

  // repeated .google.monitoring.v3.Aggregation denominator_aggregations = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->denominator_aggregations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->denominator_aggregations(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
}

::google::protobuf::uint8* AlertPolicy_Condition_MetricThreshold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // .google.monitoring.v3.ComparisonType comparison = 4;
  if (this->comparison() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->comparison(), target);
  }

  // double threshold_value = 5;
  if (this->threshold_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->threshold_value(), target);
  }

  // .google.protobuf.Duration duration = 6;
  if (this->has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_duration(), deterministic, target);
  }

  // .google.monitoring.v3.AlertPolicy.Condition.Trigger trigger = 7;
  if (this->has_trigger()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_trigger(), deterministic, target);
  }

  // repeated .google.monitoring.v3.Aggregation aggregations = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->aggregations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->aggregations(static_cast<int>(i)), deterministic, target);
  }

  // string denominator_filter = 9;
  if (this->denominator_filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->denominator_filter().data(), static_cast<int>(this->denominator_filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Condition.MetricThreshold.denominator_filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->denominator_filter(), target);
  }

  // repeated .google.monitoring.v3.Aggregation denominator_aggregations = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->denominator_aggregations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->denominator_aggregations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
  return target;
}

size_t AlertPolicy_Condition_MetricThreshold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.monitoring.v3.Aggregation aggregations = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->aggregations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->aggregations(static_cast<int>(i)));
    }
  }

  // repeated .google.monitoring.v3.Aggregation denominator_aggregations = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->denominator_aggregations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->denominator_aggregations(static_cast<int>(i)));
    }
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string denominator_filter = 9;
  if (this->denominator_filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->denominator_filter());
  }

  // .google.protobuf.Duration duration = 6;
  if (this->has_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *duration_);
  }

  // .google.monitoring.v3.AlertPolicy.Condition.Trigger trigger = 7;
  if (this->has_trigger()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *trigger_);
  }

  // double threshold_value = 5;
  if (this->threshold_value() != 0) {
    total_size += 1 + 8;
  }

  // .google.monitoring.v3.ComparisonType comparison = 4;
  if (this->comparison() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->comparison());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlertPolicy_Condition_MetricThreshold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
  GOOGLE_DCHECK_NE(&from, this);
  const AlertPolicy_Condition_MetricThreshold* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlertPolicy_Condition_MetricThreshold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
    MergeFrom(*source);
  }
}

void AlertPolicy_Condition_MetricThreshold::MergeFrom(const AlertPolicy_Condition_MetricThreshold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  aggregations_.MergeFrom(from.aggregations_);
  denominator_aggregations_.MergeFrom(from.denominator_aggregations_);
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.denominator_filter().size() > 0) {

    denominator_filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.denominator_filter_);
  }
  if (from.has_duration()) {
    mutable_duration()->::google::protobuf::Duration::MergeFrom(from.duration());
  }
  if (from.has_trigger()) {
    mutable_trigger()->::google::monitoring::v3::AlertPolicy_Condition_Trigger::MergeFrom(from.trigger());
  }
  if (from.threshold_value() != 0) {
    set_threshold_value(from.threshold_value());
  }
  if (from.comparison() != 0) {
    set_comparison(from.comparison());
  }
}

void AlertPolicy_Condition_MetricThreshold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlertPolicy_Condition_MetricThreshold::CopyFrom(const AlertPolicy_Condition_MetricThreshold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.AlertPolicy.Condition.MetricThreshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertPolicy_Condition_MetricThreshold::IsInitialized() const {
  return true;
}

void AlertPolicy_Condition_MetricThreshold::Swap(AlertPolicy_Condition_MetricThreshold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlertPolicy_Condition_MetricThreshold::InternalSwap(AlertPolicy_Condition_MetricThreshold* other) {
  using std::swap;
  CastToBase(&aggregations_)->InternalSwap(CastToBase(&other->aggregations_));
  CastToBase(&denominator_aggregations_)->InternalSwap(CastToBase(&other->denominator_aggregations_));
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  denominator_filter_.Swap(&other->denominator_filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(duration_, other->duration_);
  swap(trigger_, other->trigger_);
  swap(threshold_value_, other->threshold_value_);
  swap(comparison_, other->comparison_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AlertPolicy_Condition_MetricThreshold::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AlertPolicy_Condition_MetricAbsence::InitAsDefaultInstance() {
  ::google::monitoring::v3::_AlertPolicy_Condition_MetricAbsence_default_instance_._instance.get_mutable()->duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::monitoring::v3::_AlertPolicy_Condition_MetricAbsence_default_instance_._instance.get_mutable()->trigger_ = const_cast< ::google::monitoring::v3::AlertPolicy_Condition_Trigger*>(
      ::google::monitoring::v3::AlertPolicy_Condition_Trigger::internal_default_instance());
}
void AlertPolicy_Condition_MetricAbsence::clear_aggregations() {
  aggregations_.Clear();
}
void AlertPolicy_Condition_MetricAbsence::clear_duration() {
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) {
    delete duration_;
  }
  duration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlertPolicy_Condition_MetricAbsence::kFilterFieldNumber;
const int AlertPolicy_Condition_MetricAbsence::kAggregationsFieldNumber;
const int AlertPolicy_Condition_MetricAbsence::kDurationFieldNumber;
const int AlertPolicy_Condition_MetricAbsence::kTriggerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlertPolicy_Condition_MetricAbsence::AlertPolicy_Condition_MetricAbsence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Condition_MetricAbsence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
}
AlertPolicy_Condition_MetricAbsence::AlertPolicy_Condition_MetricAbsence(const AlertPolicy_Condition_MetricAbsence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      aggregations_(from.aggregations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.has_duration()) {
    duration_ = new ::google::protobuf::Duration(*from.duration_);
  } else {
    duration_ = NULL;
  }
  if (from.has_trigger()) {
    trigger_ = new ::google::monitoring::v3::AlertPolicy_Condition_Trigger(*from.trigger_);
  } else {
    trigger_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
}

void AlertPolicy_Condition_MetricAbsence::SharedCtor() {
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trigger_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(trigger_));
}

AlertPolicy_Condition_MetricAbsence::~AlertPolicy_Condition_MetricAbsence() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
  SharedDtor();
}

void AlertPolicy_Condition_MetricAbsence::SharedDtor() {
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete duration_;
  if (this != internal_default_instance()) delete trigger_;
}

void AlertPolicy_Condition_MetricAbsence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AlertPolicy_Condition_MetricAbsence::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlertPolicy_Condition_MetricAbsence& AlertPolicy_Condition_MetricAbsence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Condition_MetricAbsence.base);
  return *internal_default_instance();
}


void AlertPolicy_Condition_MetricAbsence::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aggregations_.Clear();
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) {
    delete duration_;
  }
  duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && trigger_ != NULL) {
    delete trigger_;
  }
  trigger_ = NULL;
  _internal_metadata_.Clear();
}

bool AlertPolicy_Condition_MetricAbsence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.AlertPolicy.Condition.Trigger trigger = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trigger()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.monitoring.v3.Aggregation aggregations = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_aggregations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
  return false;
#undef DO_
}

void AlertPolicy_Condition_MetricAbsence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 1;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filter(), output);
  }

  // .google.protobuf.Duration duration = 2;
  if (this->has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_duration(), output);
  }

  // .google.monitoring.v3.AlertPolicy.Condition.Trigger trigger = 3;
  if (this->has_trigger()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_trigger(), output);
  }

  // repeated .google.monitoring.v3.Aggregation aggregations = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->aggregations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->aggregations(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
}

::google::protobuf::uint8* AlertPolicy_Condition_MetricAbsence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 1;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Condition.MetricAbsence.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filter(), target);
  }

  // .google.protobuf.Duration duration = 2;
  if (this->has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_duration(), deterministic, target);
  }

  // .google.monitoring.v3.AlertPolicy.Condition.Trigger trigger = 3;
  if (this->has_trigger()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_trigger(), deterministic, target);
  }

  // repeated .google.monitoring.v3.Aggregation aggregations = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->aggregations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->aggregations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
  return target;
}

size_t AlertPolicy_Condition_MetricAbsence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.monitoring.v3.Aggregation aggregations = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->aggregations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->aggregations(static_cast<int>(i)));
    }
  }

  // string filter = 1;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // .google.protobuf.Duration duration = 2;
  if (this->has_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *duration_);
  }

  // .google.monitoring.v3.AlertPolicy.Condition.Trigger trigger = 3;
  if (this->has_trigger()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *trigger_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlertPolicy_Condition_MetricAbsence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
  GOOGLE_DCHECK_NE(&from, this);
  const AlertPolicy_Condition_MetricAbsence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlertPolicy_Condition_MetricAbsence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
    MergeFrom(*source);
  }
}

void AlertPolicy_Condition_MetricAbsence::MergeFrom(const AlertPolicy_Condition_MetricAbsence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  aggregations_.MergeFrom(from.aggregations_);
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.has_duration()) {
    mutable_duration()->::google::protobuf::Duration::MergeFrom(from.duration());
  }
  if (from.has_trigger()) {
    mutable_trigger()->::google::monitoring::v3::AlertPolicy_Condition_Trigger::MergeFrom(from.trigger());
  }
}

void AlertPolicy_Condition_MetricAbsence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlertPolicy_Condition_MetricAbsence::CopyFrom(const AlertPolicy_Condition_MetricAbsence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.AlertPolicy.Condition.MetricAbsence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertPolicy_Condition_MetricAbsence::IsInitialized() const {
  return true;
}

void AlertPolicy_Condition_MetricAbsence::Swap(AlertPolicy_Condition_MetricAbsence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlertPolicy_Condition_MetricAbsence::InternalSwap(AlertPolicy_Condition_MetricAbsence* other) {
  using std::swap;
  CastToBase(&aggregations_)->InternalSwap(CastToBase(&other->aggregations_));
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(duration_, other->duration_);
  swap(trigger_, other->trigger_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AlertPolicy_Condition_MetricAbsence::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AlertPolicy_Condition::InitAsDefaultInstance() {
  ::google::monitoring::v3::_AlertPolicy_Condition_default_instance_.condition_threshold_ = const_cast< ::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold*>(
      ::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold::internal_default_instance());
  ::google::monitoring::v3::_AlertPolicy_Condition_default_instance_.condition_absent_ = const_cast< ::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence*>(
      ::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence::internal_default_instance());
}
void AlertPolicy_Condition::set_allocated_condition_threshold(::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold* condition_threshold) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_condition();
  if (condition_threshold) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      condition_threshold = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, condition_threshold, submessage_arena);
    }
    set_has_condition_threshold();
    condition_.condition_threshold_ = condition_threshold;
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.AlertPolicy.Condition.condition_threshold)
}
void AlertPolicy_Condition::set_allocated_condition_absent(::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence* condition_absent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_condition();
  if (condition_absent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      condition_absent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, condition_absent, submessage_arena);
    }
    set_has_condition_absent();
    condition_.condition_absent_ = condition_absent;
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.AlertPolicy.Condition.condition_absent)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlertPolicy_Condition::kNameFieldNumber;
const int AlertPolicy_Condition::kDisplayNameFieldNumber;
const int AlertPolicy_Condition::kConditionThresholdFieldNumber;
const int AlertPolicy_Condition::kConditionAbsentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlertPolicy_Condition::AlertPolicy_Condition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Condition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.AlertPolicy.Condition)
}
AlertPolicy_Condition::AlertPolicy_Condition(const AlertPolicy_Condition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_condition();
  switch (from.condition_case()) {
    case kConditionThreshold: {
      mutable_condition_threshold()->::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold::MergeFrom(from.condition_threshold());
      break;
    }
    case kConditionAbsent: {
      mutable_condition_absent()->::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence::MergeFrom(from.condition_absent());
      break;
    }
    case CONDITION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.AlertPolicy.Condition)
}

void AlertPolicy_Condition::SharedCtor() {
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_condition();
}

AlertPolicy_Condition::~AlertPolicy_Condition() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.AlertPolicy.Condition)
  SharedDtor();
}

void AlertPolicy_Condition::SharedDtor() {
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_condition()) {
    clear_condition();
  }
}

void AlertPolicy_Condition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AlertPolicy_Condition::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlertPolicy_Condition& AlertPolicy_Condition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy_Condition.base);
  return *internal_default_instance();
}


void AlertPolicy_Condition::clear_condition() {
// @@protoc_insertion_point(one_of_clear_start:google.monitoring.v3.AlertPolicy.Condition)
  switch (condition_case()) {
    case kConditionThreshold: {
      delete condition_.condition_threshold_;
      break;
    }
    case kConditionAbsent: {
      delete condition_.condition_absent_;
      break;
    }
    case CONDITION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONDITION_NOT_SET;
}


void AlertPolicy_Condition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.AlertPolicy.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_condition();
  _internal_metadata_.Clear();
}

bool AlertPolicy_Condition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.AlertPolicy.Condition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.monitoring.v3.AlertPolicy.Condition.MetricThreshold condition_threshold = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition_threshold()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.AlertPolicy.Condition.MetricAbsence condition_absent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition_absent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.AlertPolicy.Condition.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.AlertPolicy.Condition.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.AlertPolicy.Condition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.AlertPolicy.Condition)
  return false;
#undef DO_
}

void AlertPolicy_Condition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.AlertPolicy.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.monitoring.v3.AlertPolicy.Condition.MetricThreshold condition_threshold = 1;
  if (has_condition_threshold()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_condition_threshold(), output);
  }

  // .google.monitoring.v3.AlertPolicy.Condition.MetricAbsence condition_absent = 2;
  if (has_condition_absent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_condition_absent(), output);
  }

  // string display_name = 6;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Condition.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->display_name(), output);
  }

  // string name = 12;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Condition.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.AlertPolicy.Condition)
}

::google::protobuf::uint8* AlertPolicy_Condition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.AlertPolicy.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.monitoring.v3.AlertPolicy.Condition.MetricThreshold condition_threshold = 1;
  if (has_condition_threshold()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_condition_threshold(), deterministic, target);
  }

  // .google.monitoring.v3.AlertPolicy.Condition.MetricAbsence condition_absent = 2;
  if (has_condition_absent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_condition_absent(), deterministic, target);
  }

  // string display_name = 6;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Condition.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->display_name(), target);
  }

  // string name = 12;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.Condition.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.AlertPolicy.Condition)
  return target;
}

size_t AlertPolicy_Condition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.AlertPolicy.Condition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string display_name = 6;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string name = 12;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (condition_case()) {
    // .google.monitoring.v3.AlertPolicy.Condition.MetricThreshold condition_threshold = 1;
    case kConditionThreshold: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *condition_.condition_threshold_);
      break;
    }
    // .google.monitoring.v3.AlertPolicy.Condition.MetricAbsence condition_absent = 2;
    case kConditionAbsent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *condition_.condition_absent_);
      break;
    }
    case CONDITION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlertPolicy_Condition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.AlertPolicy.Condition)
  GOOGLE_DCHECK_NE(&from, this);
  const AlertPolicy_Condition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlertPolicy_Condition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.AlertPolicy.Condition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.AlertPolicy.Condition)
    MergeFrom(*source);
  }
}

void AlertPolicy_Condition::MergeFrom(const AlertPolicy_Condition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.AlertPolicy.Condition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.condition_case()) {
    case kConditionThreshold: {
      mutable_condition_threshold()->::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold::MergeFrom(from.condition_threshold());
      break;
    }
    case kConditionAbsent: {
      mutable_condition_absent()->::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence::MergeFrom(from.condition_absent());
      break;
    }
    case CONDITION_NOT_SET: {
      break;
    }
  }
}

void AlertPolicy_Condition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.AlertPolicy.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlertPolicy_Condition::CopyFrom(const AlertPolicy_Condition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.AlertPolicy.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertPolicy_Condition::IsInitialized() const {
  return true;
}

void AlertPolicy_Condition::Swap(AlertPolicy_Condition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlertPolicy_Condition::InternalSwap(AlertPolicy_Condition* other) {
  using std::swap;
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(condition_, other->condition_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AlertPolicy_Condition::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

AlertPolicy_UserLabelsEntry_DoNotUse::AlertPolicy_UserLabelsEntry_DoNotUse() {}
AlertPolicy_UserLabelsEntry_DoNotUse::AlertPolicy_UserLabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void AlertPolicy_UserLabelsEntry_DoNotUse::MergeFrom(const AlertPolicy_UserLabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata AlertPolicy_UserLabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_metadata[5];
}
void AlertPolicy_UserLabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void AlertPolicy::InitAsDefaultInstance() {
  ::google::monitoring::v3::_AlertPolicy_default_instance_._instance.get_mutable()->documentation_ = const_cast< ::google::monitoring::v3::AlertPolicy_Documentation*>(
      ::google::monitoring::v3::AlertPolicy_Documentation::internal_default_instance());
  ::google::monitoring::v3::_AlertPolicy_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  ::google::monitoring::v3::_AlertPolicy_default_instance_._instance.get_mutable()->creation_record_ = const_cast< ::google::monitoring::v3::MutationRecord*>(
      ::google::monitoring::v3::MutationRecord::internal_default_instance());
  ::google::monitoring::v3::_AlertPolicy_default_instance_._instance.get_mutable()->mutation_record_ = const_cast< ::google::monitoring::v3::MutationRecord*>(
      ::google::monitoring::v3::MutationRecord::internal_default_instance());
}
void AlertPolicy::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
}
void AlertPolicy::clear_creation_record() {
  if (GetArenaNoVirtual() == NULL && creation_record_ != NULL) {
    delete creation_record_;
  }
  creation_record_ = NULL;
}
void AlertPolicy::clear_mutation_record() {
  if (GetArenaNoVirtual() == NULL && mutation_record_ != NULL) {
    delete mutation_record_;
  }
  mutation_record_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlertPolicy::kNameFieldNumber;
const int AlertPolicy::kDisplayNameFieldNumber;
const int AlertPolicy::kDocumentationFieldNumber;
const int AlertPolicy::kUserLabelsFieldNumber;
const int AlertPolicy::kConditionsFieldNumber;
const int AlertPolicy::kCombinerFieldNumber;
const int AlertPolicy::kEnabledFieldNumber;
const int AlertPolicy::kNotificationChannelsFieldNumber;
const int AlertPolicy::kCreationRecordFieldNumber;
const int AlertPolicy::kMutationRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlertPolicy::AlertPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.AlertPolicy)
}
AlertPolicy::AlertPolicy(const AlertPolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      conditions_(from.conditions_),
      notification_channels_(from.notification_channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_labels_.MergeFrom(from.user_labels_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.has_creation_record()) {
    creation_record_ = new ::google::monitoring::v3::MutationRecord(*from.creation_record_);
  } else {
    creation_record_ = NULL;
  }
  if (from.has_mutation_record()) {
    mutation_record_ = new ::google::monitoring::v3::MutationRecord(*from.mutation_record_);
  } else {
    mutation_record_ = NULL;
  }
  if (from.has_documentation()) {
    documentation_ = new ::google::monitoring::v3::AlertPolicy_Documentation(*from.documentation_);
  } else {
    documentation_ = NULL;
  }
  if (from.has_enabled()) {
    enabled_ = new ::google::protobuf::BoolValue(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  combiner_ = from.combiner_;
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.AlertPolicy)
}

void AlertPolicy::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&creation_record_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&combiner_) -
      reinterpret_cast<char*>(&creation_record_)) + sizeof(combiner_));
}

AlertPolicy::~AlertPolicy() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.AlertPolicy)
  SharedDtor();
}

void AlertPolicy::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete creation_record_;
  if (this != internal_default_instance()) delete mutation_record_;
  if (this != internal_default_instance()) delete documentation_;
  if (this != internal_default_instance()) delete enabled_;
}

void AlertPolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AlertPolicy::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlertPolicy& AlertPolicy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2falert_2eproto::scc_info_AlertPolicy.base);
  return *internal_default_instance();
}


void AlertPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.AlertPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conditions_.Clear();
  notification_channels_.Clear();
  user_labels_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && creation_record_ != NULL) {
    delete creation_record_;
  }
  creation_record_ = NULL;
  if (GetArenaNoVirtual() == NULL && mutation_record_ != NULL) {
    delete mutation_record_;
  }
  mutation_record_ = NULL;
  if (GetArenaNoVirtual() == NULL && documentation_ != NULL) {
    delete documentation_;
  }
  documentation_ = NULL;
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
  combiner_ = 0;
  _internal_metadata_.Clear();
}

bool AlertPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.AlertPolicy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.AlertPolicy.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.AlertPolicy.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.AlertPolicy.ConditionCombinerType combiner = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_combiner(static_cast< ::google::monitoring::v3::AlertPolicy_ConditionCombinerType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.MutationRecord creation_record = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_creation_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.MutationRecord mutation_record = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mutation_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.monitoring.v3.AlertPolicy.Condition conditions = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.AlertPolicy.Documentation documentation = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_documentation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string notification_channels = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_notification_channels()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->notification_channels(this->notification_channels_size() - 1).data(),
            static_cast<int>(this->notification_channels(this->notification_channels_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.AlertPolicy.notification_channels"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> user_labels = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          AlertPolicy_UserLabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              AlertPolicy_UserLabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&user_labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.AlertPolicy.UserLabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.AlertPolicy.UserLabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue enabled = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.AlertPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.AlertPolicy)
  return false;
#undef DO_
}

void AlertPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.AlertPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // .google.monitoring.v3.AlertPolicy.ConditionCombinerType combiner = 6;
  if (this->combiner() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->combiner(), output);
  }

  // .google.monitoring.v3.MutationRecord creation_record = 10;
  if (this->has_creation_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_creation_record(), output);
  }

  // .google.monitoring.v3.MutationRecord mutation_record = 11;
  if (this->has_mutation_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_mutation_record(), output);
  }

  // repeated .google.monitoring.v3.AlertPolicy.Condition conditions = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->conditions(static_cast<int>(i)),
      output);
  }

  // .google.monitoring.v3.AlertPolicy.Documentation documentation = 13;
  if (this->has_documentation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_documentation(), output);
  }

  // repeated string notification_channels = 14;
  for (int i = 0, n = this->notification_channels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notification_channels(i).data(), static_cast<int>(this->notification_channels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.notification_channels");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->notification_channels(i), output);
  }

  // map<string, string> user_labels = 16;
  if (!this->user_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.monitoring.v3.AlertPolicy.UserLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.monitoring.v3.AlertPolicy.UserLabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->user_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->user_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->user_labels().begin();
          it != this->user_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AlertPolicy_UserLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(user_labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            16, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<AlertPolicy_UserLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->user_labels().begin();
          it != this->user_labels().end(); ++it) {
        entry.reset(user_labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            16, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.protobuf.BoolValue enabled = 17;
  if (this->has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_enabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.AlertPolicy)
}

::google::protobuf::uint8* AlertPolicy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.AlertPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  // .google.monitoring.v3.AlertPolicy.ConditionCombinerType combiner = 6;
  if (this->combiner() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->combiner(), target);
  }

  // .google.monitoring.v3.MutationRecord creation_record = 10;
  if (this->has_creation_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_creation_record(), deterministic, target);
  }

  // .google.monitoring.v3.MutationRecord mutation_record = 11;
  if (this->has_mutation_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_mutation_record(), deterministic, target);
  }

  // repeated .google.monitoring.v3.AlertPolicy.Condition conditions = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->conditions(static_cast<int>(i)), deterministic, target);
  }

  // .google.monitoring.v3.AlertPolicy.Documentation documentation = 13;
  if (this->has_documentation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_documentation(), deterministic, target);
  }

  // repeated string notification_channels = 14;
  for (int i = 0, n = this->notification_channels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notification_channels(i).data(), static_cast<int>(this->notification_channels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.AlertPolicy.notification_channels");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->notification_channels(i), target);
  }

  // map<string, string> user_labels = 16;
  if (!this->user_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.monitoring.v3.AlertPolicy.UserLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.monitoring.v3.AlertPolicy.UserLabelsEntry.value");
      }
    };

    if (deterministic &&
        this->user_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->user_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->user_labels().begin();
          it != this->user_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AlertPolicy_UserLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(user_labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       16, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<AlertPolicy_UserLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->user_labels().begin();
          it != this->user_labels().end(); ++it) {
        entry.reset(user_labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       16, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.protobuf.BoolValue enabled = 17;
  if (this->has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_enabled(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.AlertPolicy)
  return target;
}

size_t AlertPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.AlertPolicy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.monitoring.v3.AlertPolicy.Condition conditions = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->conditions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->conditions(static_cast<int>(i)));
    }
  }

  // repeated string notification_channels = 14;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->notification_channels_size());
  for (int i = 0, n = this->notification_channels_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->notification_channels(i));
  }

  // map<string, string> user_labels = 16;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->user_labels_size());
  {
    ::std::unique_ptr<AlertPolicy_UserLabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->user_labels().begin();
        it != this->user_labels().end(); ++it) {
      entry.reset(user_labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // .google.monitoring.v3.MutationRecord creation_record = 10;
  if (this->has_creation_record()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *creation_record_);
  }

  // .google.monitoring.v3.MutationRecord mutation_record = 11;
  if (this->has_mutation_record()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mutation_record_);
  }

  // .google.monitoring.v3.AlertPolicy.Documentation documentation = 13;
  if (this->has_documentation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *documentation_);
  }

  // .google.protobuf.BoolValue enabled = 17;
  if (this->has_enabled()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *enabled_);
  }

  // .google.monitoring.v3.AlertPolicy.ConditionCombinerType combiner = 6;
  if (this->combiner() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->combiner());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlertPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.AlertPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const AlertPolicy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlertPolicy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.AlertPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.AlertPolicy)
    MergeFrom(*source);
  }
}

void AlertPolicy::MergeFrom(const AlertPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.AlertPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  conditions_.MergeFrom(from.conditions_);
  notification_channels_.MergeFrom(from.notification_channels_);
  user_labels_.MergeFrom(from.user_labels_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.has_creation_record()) {
    mutable_creation_record()->::google::monitoring::v3::MutationRecord::MergeFrom(from.creation_record());
  }
  if (from.has_mutation_record()) {
    mutable_mutation_record()->::google::monitoring::v3::MutationRecord::MergeFrom(from.mutation_record());
  }
  if (from.has_documentation()) {
    mutable_documentation()->::google::monitoring::v3::AlertPolicy_Documentation::MergeFrom(from.documentation());
  }
  if (from.has_enabled()) {
    mutable_enabled()->::google::protobuf::BoolValue::MergeFrom(from.enabled());
  }
  if (from.combiner() != 0) {
    set_combiner(from.combiner());
  }
}

void AlertPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.AlertPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlertPolicy::CopyFrom(const AlertPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.AlertPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertPolicy::IsInitialized() const {
  return true;
}

void AlertPolicy::Swap(AlertPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlertPolicy::InternalSwap(AlertPolicy* other) {
  using std::swap;
  CastToBase(&conditions_)->InternalSwap(CastToBase(&other->conditions_));
  notification_channels_.InternalSwap(CastToBase(&other->notification_channels_));
  user_labels_.Swap(&other->user_labels_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(creation_record_, other->creation_record_);
  swap(mutation_record_, other->mutation_record_);
  swap(documentation_, other->documentation_);
  swap(enabled_, other->enabled_);
  swap(combiner_, other->combiner_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AlertPolicy::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2falert_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2falert_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::AlertPolicy_Documentation* Arena::CreateMaybeMessage< ::google::monitoring::v3::AlertPolicy_Documentation >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::AlertPolicy_Documentation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::AlertPolicy_Condition_Trigger* Arena::CreateMaybeMessage< ::google::monitoring::v3::AlertPolicy_Condition_Trigger >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::AlertPolicy_Condition_Trigger >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold* Arena::CreateMaybeMessage< ::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::AlertPolicy_Condition_MetricThreshold >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence* Arena::CreateMaybeMessage< ::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::AlertPolicy_Condition_MetricAbsence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::AlertPolicy_Condition* Arena::CreateMaybeMessage< ::google::monitoring::v3::AlertPolicy_Condition >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::AlertPolicy_Condition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::AlertPolicy_UserLabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::monitoring::v3::AlertPolicy_UserLabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::AlertPolicy_UserLabelsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::AlertPolicy* Arena::CreateMaybeMessage< ::google::monitoring::v3::AlertPolicy >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::AlertPolicy >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
