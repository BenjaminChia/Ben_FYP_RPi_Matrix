// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/uptime_service.proto

#include "google/monitoring/v3/uptime_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fmonitoring_2fv3_2fuptime_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2fuptime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UptimeCheckIp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fmonitoring_2fv3_2fuptime_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_UptimeCheckConfig;
}  // namespace protobuf_google_2fmonitoring_2fv3_2fuptime_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace google {
namespace monitoring {
namespace v3 {
class ListUptimeCheckConfigsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUptimeCheckConfigsRequest>
      _instance;
} _ListUptimeCheckConfigsRequest_default_instance_;
class ListUptimeCheckConfigsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUptimeCheckConfigsResponse>
      _instance;
} _ListUptimeCheckConfigsResponse_default_instance_;
class GetUptimeCheckConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetUptimeCheckConfigRequest>
      _instance;
} _GetUptimeCheckConfigRequest_default_instance_;
class CreateUptimeCheckConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateUptimeCheckConfigRequest>
      _instance;
} _CreateUptimeCheckConfigRequest_default_instance_;
class UpdateUptimeCheckConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateUptimeCheckConfigRequest>
      _instance;
} _UpdateUptimeCheckConfigRequest_default_instance_;
class DeleteUptimeCheckConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteUptimeCheckConfigRequest>
      _instance;
} _DeleteUptimeCheckConfigRequest_default_instance_;
class ListUptimeCheckIpsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUptimeCheckIpsRequest>
      _instance;
} _ListUptimeCheckIpsRequest_default_instance_;
class ListUptimeCheckIpsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUptimeCheckIpsResponse>
      _instance;
} _ListUptimeCheckIpsResponse_default_instance_;
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto {
static void InitDefaultsListUptimeCheckConfigsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListUptimeCheckConfigsRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::ListUptimeCheckConfigsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListUptimeCheckConfigsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUptimeCheckConfigsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUptimeCheckConfigsRequest}, {}};

static void InitDefaultsListUptimeCheckConfigsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListUptimeCheckConfigsResponse_default_instance_;
    new (ptr) ::google::monitoring::v3::ListUptimeCheckConfigsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListUptimeCheckConfigsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListUptimeCheckConfigsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListUptimeCheckConfigsResponse}, {
      &protobuf_google_2fmonitoring_2fv3_2fuptime_2eproto::scc_info_UptimeCheckConfig.base,}};

static void InitDefaultsGetUptimeCheckConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_GetUptimeCheckConfigRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::GetUptimeCheckConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::GetUptimeCheckConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetUptimeCheckConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetUptimeCheckConfigRequest}, {}};

static void InitDefaultsCreateUptimeCheckConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_CreateUptimeCheckConfigRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::CreateUptimeCheckConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::CreateUptimeCheckConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateUptimeCheckConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateUptimeCheckConfigRequest}, {
      &protobuf_google_2fmonitoring_2fv3_2fuptime_2eproto::scc_info_UptimeCheckConfig.base,}};

static void InitDefaultsUpdateUptimeCheckConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_UpdateUptimeCheckConfigRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::UpdateUptimeCheckConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::UpdateUptimeCheckConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateUptimeCheckConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateUptimeCheckConfigRequest}, {
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,
      &protobuf_google_2fmonitoring_2fv3_2fuptime_2eproto::scc_info_UptimeCheckConfig.base,}};

static void InitDefaultsDeleteUptimeCheckConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_DeleteUptimeCheckConfigRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::DeleteUptimeCheckConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::DeleteUptimeCheckConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteUptimeCheckConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteUptimeCheckConfigRequest}, {}};

static void InitDefaultsListUptimeCheckIpsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListUptimeCheckIpsRequest_default_instance_;
    new (ptr) ::google::monitoring::v3::ListUptimeCheckIpsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListUptimeCheckIpsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUptimeCheckIpsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUptimeCheckIpsRequest}, {}};

static void InitDefaultsListUptimeCheckIpsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::monitoring::v3::_ListUptimeCheckIpsResponse_default_instance_;
    new (ptr) ::google::monitoring::v3::ListUptimeCheckIpsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::monitoring::v3::ListUptimeCheckIpsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListUptimeCheckIpsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListUptimeCheckIpsResponse}, {
      &protobuf_google_2fmonitoring_2fv3_2fuptime_2eproto::scc_info_UptimeCheckIp.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ListUptimeCheckConfigsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUptimeCheckConfigsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetUptimeCheckConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateUptimeCheckConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateUptimeCheckConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteUptimeCheckConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUptimeCheckIpsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUptimeCheckIpsResponse.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckConfigsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckConfigsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckConfigsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckConfigsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckConfigsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckConfigsResponse, uptime_check_configs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckConfigsResponse, next_page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckConfigsResponse, total_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetUptimeCheckConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::GetUptimeCheckConfigRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateUptimeCheckConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateUptimeCheckConfigRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::CreateUptimeCheckConfigRequest, uptime_check_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::UpdateUptimeCheckConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::UpdateUptimeCheckConfigRequest, update_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::UpdateUptimeCheckConfigRequest, uptime_check_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::DeleteUptimeCheckConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::DeleteUptimeCheckConfigRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckIpsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckIpsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckIpsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckIpsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckIpsResponse, uptime_check_ips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::monitoring::v3::ListUptimeCheckIpsResponse, next_page_token_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::monitoring::v3::ListUptimeCheckConfigsRequest)},
  { 8, -1, sizeof(::google::monitoring::v3::ListUptimeCheckConfigsResponse)},
  { 16, -1, sizeof(::google::monitoring::v3::GetUptimeCheckConfigRequest)},
  { 22, -1, sizeof(::google::monitoring::v3::CreateUptimeCheckConfigRequest)},
  { 29, -1, sizeof(::google::monitoring::v3::UpdateUptimeCheckConfigRequest)},
  { 36, -1, sizeof(::google::monitoring::v3::DeleteUptimeCheckConfigRequest)},
  { 42, -1, sizeof(::google::monitoring::v3::ListUptimeCheckIpsRequest)},
  { 49, -1, sizeof(::google::monitoring::v3::ListUptimeCheckIpsResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListUptimeCheckConfigsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListUptimeCheckConfigsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_GetUptimeCheckConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_CreateUptimeCheckConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_UpdateUptimeCheckConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_DeleteUptimeCheckConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListUptimeCheckIpsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::monitoring::v3::_ListUptimeCheckIpsResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/monitoring/v3/uptime_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n)google/monitoring/v3/uptime_service.pr"
      "oto\022\024google.monitoring.v3\032\034google/api/an"
      "notations.proto\032!google/monitoring/v3/up"
      "time.proto\032\033google/protobuf/empty.proto\032"
      " google/protobuf/field_mask.proto\"V\n\035Lis"
      "tUptimeCheckConfigsRequest\022\016\n\006parent\030\001 \001"
      "(\t\022\021\n\tpage_size\030\003 \001(\005\022\022\n\npage_token\030\004 \001("
      "\t\"\224\001\n\036ListUptimeCheckConfigsResponse\022E\n\024"
      "uptime_check_configs\030\001 \003(\0132\'.google.moni"
      "toring.v3.UptimeCheckConfig\022\027\n\017next_page"
      "_token\030\002 \001(\t\022\022\n\ntotal_size\030\003 \001(\005\"+\n\033GetU"
      "ptimeCheckConfigRequest\022\014\n\004name\030\001 \001(\t\"v\n"
      "\036CreateUptimeCheckConfigRequest\022\016\n\006paren"
      "t\030\001 \001(\t\022D\n\023uptime_check_config\030\002 \001(\0132\'.g"
      "oogle.monitoring.v3.UptimeCheckConfig\"\227\001"
      "\n\036UpdateUptimeCheckConfigRequest\022/\n\013upda"
      "te_mask\030\002 \001(\0132\032.google.protobuf.FieldMas"
      "k\022D\n\023uptime_check_config\030\003 \001(\0132\'.google."
      "monitoring.v3.UptimeCheckConfig\".\n\036Delet"
      "eUptimeCheckConfigRequest\022\014\n\004name\030\001 \001(\t\""
      "B\n\031ListUptimeCheckIpsRequest\022\021\n\tpage_siz"
      "e\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\"t\n\032ListUptim"
      "eCheckIpsResponse\022=\n\020uptime_check_ips\030\001 "
      "\003(\0132#.google.monitoring.v3.UptimeCheckIp"
      "\022\027\n\017next_page_token\030\002 \001(\t2\307\010\n\022UptimeChec"
      "kService\022\267\001\n\026ListUptimeCheckConfigs\0223.go"
      "ogle.monitoring.v3.ListUptimeCheckConfig"
      "sRequest\0324.google.monitoring.v3.ListUpti"
      "meCheckConfigsResponse\"2\202\323\344\223\002,\022*/v3/{par"
      "ent=projects/*}/uptimeCheckConfigs\022\246\001\n\024G"
      "etUptimeCheckConfig\0221.google.monitoring."
      "v3.GetUptimeCheckConfigRequest\032\'.google."
      "monitoring.v3.UptimeCheckConfig\"2\202\323\344\223\002,\022"
      "*/v3/{name=projects/*/uptimeCheckConfigs"
      "/*}\022\301\001\n\027CreateUptimeCheckConfig\0224.google"
      ".monitoring.v3.CreateUptimeCheckConfigRe"
      "quest\032\'.google.monitoring.v3.UptimeCheck"
      "Config\"G\202\323\344\223\002A\"*/v3/{parent=projects/*}/"
      "uptimeCheckConfigs:\023uptime_check_config\022"
      "\325\001\n\027UpdateUptimeCheckConfig\0224.google.mon"
      "itoring.v3.UpdateUptimeCheckConfigReques"
      "t\032\'.google.monitoring.v3.UptimeCheckConf"
      "ig\"[\202\323\344\223\002U2>/v3/{uptime_check_config.nam"
      "e=projects/*/uptimeCheckConfigs/*}:\023upti"
      "me_check_config\022\233\001\n\027DeleteUptimeCheckCon"
      "fig\0224.google.monitoring.v3.DeleteUptimeC"
      "heckConfigRequest\032\026.google.protobuf.Empt"
      "y\"2\202\323\344\223\002,**/v3/{name=projects/*/uptimeCh"
      "eckConfigs/*}\022\223\001\n\022ListUptimeCheckIps\022/.g"
      "oogle.monitoring.v3.ListUptimeCheckIpsRe"
      "quest\0320.google.monitoring.v3.ListUptimeC"
      "heckIpsResponse\"\032\202\323\344\223\002\024\022\022/v3/uptimeCheck"
      "IpsB\252\001\n\030com.google.monitoring.v3B\022Uptime"
      "ServiceProtoP\001Z>google.golang.org/genpro"
      "to/googleapis/monitoring/v3;monitoring\252\002"
      "\032Google.Cloud.Monitoring.V3\312\002\032Google\\Clo"
      "ud\\Monitoring\\V3b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2264);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/monitoring/v3/uptime_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fmonitoring_2fv3_2fuptime_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto
namespace google {
namespace monitoring {
namespace v3 {

// ===================================================================

void ListUptimeCheckConfigsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUptimeCheckConfigsRequest::kParentFieldNumber;
const int ListUptimeCheckConfigsRequest::kPageSizeFieldNumber;
const int ListUptimeCheckConfigsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUptimeCheckConfigsRequest::ListUptimeCheckConfigsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_ListUptimeCheckConfigsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListUptimeCheckConfigsRequest)
}
ListUptimeCheckConfigsRequest::ListUptimeCheckConfigsRequest(const ListUptimeCheckConfigsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListUptimeCheckConfigsRequest)
}

void ListUptimeCheckConfigsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListUptimeCheckConfigsRequest::~ListUptimeCheckConfigsRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListUptimeCheckConfigsRequest)
  SharedDtor();
}

void ListUptimeCheckConfigsRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListUptimeCheckConfigsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUptimeCheckConfigsRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUptimeCheckConfigsRequest& ListUptimeCheckConfigsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_ListUptimeCheckConfigsRequest.base);
  return *internal_default_instance();
}


void ListUptimeCheckConfigsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListUptimeCheckConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListUptimeCheckConfigsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListUptimeCheckConfigsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListUptimeCheckConfigsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListUptimeCheckConfigsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListUptimeCheckConfigsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListUptimeCheckConfigsRequest)
  return false;
#undef DO_
}

void ListUptimeCheckConfigsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListUptimeCheckConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListUptimeCheckConfigsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListUptimeCheckConfigsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListUptimeCheckConfigsRequest)
}

::google::protobuf::uint8* ListUptimeCheckConfigsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListUptimeCheckConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListUptimeCheckConfigsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListUptimeCheckConfigsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListUptimeCheckConfigsRequest)
  return target;
}

size_t ListUptimeCheckConfigsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListUptimeCheckConfigsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUptimeCheckConfigsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListUptimeCheckConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUptimeCheckConfigsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUptimeCheckConfigsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListUptimeCheckConfigsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListUptimeCheckConfigsRequest)
    MergeFrom(*source);
  }
}

void ListUptimeCheckConfigsRequest::MergeFrom(const ListUptimeCheckConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListUptimeCheckConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListUptimeCheckConfigsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListUptimeCheckConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUptimeCheckConfigsRequest::CopyFrom(const ListUptimeCheckConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListUptimeCheckConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUptimeCheckConfigsRequest::IsInitialized() const {
  return true;
}

void ListUptimeCheckConfigsRequest::Swap(ListUptimeCheckConfigsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUptimeCheckConfigsRequest::InternalSwap(ListUptimeCheckConfigsRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUptimeCheckConfigsRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUptimeCheckConfigsResponse::InitAsDefaultInstance() {
}
void ListUptimeCheckConfigsResponse::clear_uptime_check_configs() {
  uptime_check_configs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUptimeCheckConfigsResponse::kUptimeCheckConfigsFieldNumber;
const int ListUptimeCheckConfigsResponse::kNextPageTokenFieldNumber;
const int ListUptimeCheckConfigsResponse::kTotalSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUptimeCheckConfigsResponse::ListUptimeCheckConfigsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_ListUptimeCheckConfigsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListUptimeCheckConfigsResponse)
}
ListUptimeCheckConfigsResponse::ListUptimeCheckConfigsResponse(const ListUptimeCheckConfigsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uptime_check_configs_(from.uptime_check_configs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  total_size_ = from.total_size_;
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListUptimeCheckConfigsResponse)
}

void ListUptimeCheckConfigsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_size_ = 0;
}

ListUptimeCheckConfigsResponse::~ListUptimeCheckConfigsResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListUptimeCheckConfigsResponse)
  SharedDtor();
}

void ListUptimeCheckConfigsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListUptimeCheckConfigsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUptimeCheckConfigsResponse::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUptimeCheckConfigsResponse& ListUptimeCheckConfigsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_ListUptimeCheckConfigsResponse.base);
  return *internal_default_instance();
}


void ListUptimeCheckConfigsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListUptimeCheckConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uptime_check_configs_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListUptimeCheckConfigsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListUptimeCheckConfigsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.monitoring.v3.UptimeCheckConfig uptime_check_configs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_uptime_check_configs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListUptimeCheckConfigsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListUptimeCheckConfigsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListUptimeCheckConfigsResponse)
  return false;
#undef DO_
}

void ListUptimeCheckConfigsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListUptimeCheckConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.monitoring.v3.UptimeCheckConfig uptime_check_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uptime_check_configs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->uptime_check_configs(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListUptimeCheckConfigsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListUptimeCheckConfigsResponse)
}

::google::protobuf::uint8* ListUptimeCheckConfigsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListUptimeCheckConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.monitoring.v3.UptimeCheckConfig uptime_check_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uptime_check_configs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->uptime_check_configs(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListUptimeCheckConfigsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListUptimeCheckConfigsResponse)
  return target;
}

size_t ListUptimeCheckConfigsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListUptimeCheckConfigsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.monitoring.v3.UptimeCheckConfig uptime_check_configs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->uptime_check_configs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->uptime_check_configs(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUptimeCheckConfigsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListUptimeCheckConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUptimeCheckConfigsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUptimeCheckConfigsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListUptimeCheckConfigsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListUptimeCheckConfigsResponse)
    MergeFrom(*source);
  }
}

void ListUptimeCheckConfigsResponse::MergeFrom(const ListUptimeCheckConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListUptimeCheckConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uptime_check_configs_.MergeFrom(from.uptime_check_configs_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  if (from.total_size() != 0) {
    set_total_size(from.total_size());
  }
}

void ListUptimeCheckConfigsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListUptimeCheckConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUptimeCheckConfigsResponse::CopyFrom(const ListUptimeCheckConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListUptimeCheckConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUptimeCheckConfigsResponse::IsInitialized() const {
  return true;
}

void ListUptimeCheckConfigsResponse::Swap(ListUptimeCheckConfigsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUptimeCheckConfigsResponse::InternalSwap(ListUptimeCheckConfigsResponse* other) {
  using std::swap;
  CastToBase(&uptime_check_configs_)->InternalSwap(CastToBase(&other->uptime_check_configs_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(total_size_, other->total_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUptimeCheckConfigsResponse::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetUptimeCheckConfigRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUptimeCheckConfigRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUptimeCheckConfigRequest::GetUptimeCheckConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_GetUptimeCheckConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.GetUptimeCheckConfigRequest)
}
GetUptimeCheckConfigRequest::GetUptimeCheckConfigRequest(const GetUptimeCheckConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.GetUptimeCheckConfigRequest)
}

void GetUptimeCheckConfigRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetUptimeCheckConfigRequest::~GetUptimeCheckConfigRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.GetUptimeCheckConfigRequest)
  SharedDtor();
}

void GetUptimeCheckConfigRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetUptimeCheckConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetUptimeCheckConfigRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUptimeCheckConfigRequest& GetUptimeCheckConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_GetUptimeCheckConfigRequest.base);
  return *internal_default_instance();
}


void GetUptimeCheckConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.GetUptimeCheckConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetUptimeCheckConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.GetUptimeCheckConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.GetUptimeCheckConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.GetUptimeCheckConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.GetUptimeCheckConfigRequest)
  return false;
#undef DO_
}

void GetUptimeCheckConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.GetUptimeCheckConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetUptimeCheckConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.GetUptimeCheckConfigRequest)
}

::google::protobuf::uint8* GetUptimeCheckConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.GetUptimeCheckConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetUptimeCheckConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.GetUptimeCheckConfigRequest)
  return target;
}

size_t GetUptimeCheckConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.GetUptimeCheckConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetUptimeCheckConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.GetUptimeCheckConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUptimeCheckConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUptimeCheckConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.GetUptimeCheckConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.GetUptimeCheckConfigRequest)
    MergeFrom(*source);
  }
}

void GetUptimeCheckConfigRequest::MergeFrom(const GetUptimeCheckConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.GetUptimeCheckConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetUptimeCheckConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.GetUptimeCheckConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUptimeCheckConfigRequest::CopyFrom(const GetUptimeCheckConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.GetUptimeCheckConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUptimeCheckConfigRequest::IsInitialized() const {
  return true;
}

void GetUptimeCheckConfigRequest::Swap(GetUptimeCheckConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUptimeCheckConfigRequest::InternalSwap(GetUptimeCheckConfigRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetUptimeCheckConfigRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateUptimeCheckConfigRequest::InitAsDefaultInstance() {
  ::google::monitoring::v3::_CreateUptimeCheckConfigRequest_default_instance_._instance.get_mutable()->uptime_check_config_ = const_cast< ::google::monitoring::v3::UptimeCheckConfig*>(
      ::google::monitoring::v3::UptimeCheckConfig::internal_default_instance());
}
void CreateUptimeCheckConfigRequest::clear_uptime_check_config() {
  if (GetArenaNoVirtual() == NULL && uptime_check_config_ != NULL) {
    delete uptime_check_config_;
  }
  uptime_check_config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateUptimeCheckConfigRequest::kParentFieldNumber;
const int CreateUptimeCheckConfigRequest::kUptimeCheckConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateUptimeCheckConfigRequest::CreateUptimeCheckConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_CreateUptimeCheckConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.CreateUptimeCheckConfigRequest)
}
CreateUptimeCheckConfigRequest::CreateUptimeCheckConfigRequest(const CreateUptimeCheckConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_uptime_check_config()) {
    uptime_check_config_ = new ::google::monitoring::v3::UptimeCheckConfig(*from.uptime_check_config_);
  } else {
    uptime_check_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.CreateUptimeCheckConfigRequest)
}

void CreateUptimeCheckConfigRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uptime_check_config_ = NULL;
}

CreateUptimeCheckConfigRequest::~CreateUptimeCheckConfigRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.CreateUptimeCheckConfigRequest)
  SharedDtor();
}

void CreateUptimeCheckConfigRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete uptime_check_config_;
}

void CreateUptimeCheckConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateUptimeCheckConfigRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateUptimeCheckConfigRequest& CreateUptimeCheckConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_CreateUptimeCheckConfigRequest.base);
  return *internal_default_instance();
}


void CreateUptimeCheckConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.CreateUptimeCheckConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && uptime_check_config_ != NULL) {
    delete uptime_check_config_;
  }
  uptime_check_config_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateUptimeCheckConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.CreateUptimeCheckConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.CreateUptimeCheckConfigRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.UptimeCheckConfig uptime_check_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uptime_check_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.CreateUptimeCheckConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.CreateUptimeCheckConfigRequest)
  return false;
#undef DO_
}

void CreateUptimeCheckConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.CreateUptimeCheckConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateUptimeCheckConfigRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.monitoring.v3.UptimeCheckConfig uptime_check_config = 2;
  if (this->has_uptime_check_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_uptime_check_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.CreateUptimeCheckConfigRequest)
}

::google::protobuf::uint8* CreateUptimeCheckConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.CreateUptimeCheckConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateUptimeCheckConfigRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.monitoring.v3.UptimeCheckConfig uptime_check_config = 2;
  if (this->has_uptime_check_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_uptime_check_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.CreateUptimeCheckConfigRequest)
  return target;
}

size_t CreateUptimeCheckConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.CreateUptimeCheckConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.monitoring.v3.UptimeCheckConfig uptime_check_config = 2;
  if (this->has_uptime_check_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uptime_check_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateUptimeCheckConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.CreateUptimeCheckConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateUptimeCheckConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateUptimeCheckConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.CreateUptimeCheckConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.CreateUptimeCheckConfigRequest)
    MergeFrom(*source);
  }
}

void CreateUptimeCheckConfigRequest::MergeFrom(const CreateUptimeCheckConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.CreateUptimeCheckConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_uptime_check_config()) {
    mutable_uptime_check_config()->::google::monitoring::v3::UptimeCheckConfig::MergeFrom(from.uptime_check_config());
  }
}

void CreateUptimeCheckConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.CreateUptimeCheckConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateUptimeCheckConfigRequest::CopyFrom(const CreateUptimeCheckConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.CreateUptimeCheckConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateUptimeCheckConfigRequest::IsInitialized() const {
  return true;
}

void CreateUptimeCheckConfigRequest::Swap(CreateUptimeCheckConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateUptimeCheckConfigRequest::InternalSwap(CreateUptimeCheckConfigRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(uptime_check_config_, other->uptime_check_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateUptimeCheckConfigRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateUptimeCheckConfigRequest::InitAsDefaultInstance() {
  ::google::monitoring::v3::_UpdateUptimeCheckConfigRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
  ::google::monitoring::v3::_UpdateUptimeCheckConfigRequest_default_instance_._instance.get_mutable()->uptime_check_config_ = const_cast< ::google::monitoring::v3::UptimeCheckConfig*>(
      ::google::monitoring::v3::UptimeCheckConfig::internal_default_instance());
}
void UpdateUptimeCheckConfigRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
void UpdateUptimeCheckConfigRequest::clear_uptime_check_config() {
  if (GetArenaNoVirtual() == NULL && uptime_check_config_ != NULL) {
    delete uptime_check_config_;
  }
  uptime_check_config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateUptimeCheckConfigRequest::kUpdateMaskFieldNumber;
const int UpdateUptimeCheckConfigRequest::kUptimeCheckConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateUptimeCheckConfigRequest::UpdateUptimeCheckConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_UpdateUptimeCheckConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
}
UpdateUptimeCheckConfigRequest::UpdateUptimeCheckConfigRequest(const UpdateUptimeCheckConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  if (from.has_uptime_check_config()) {
    uptime_check_config_ = new ::google::monitoring::v3::UptimeCheckConfig(*from.uptime_check_config_);
  } else {
    uptime_check_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
}

void UpdateUptimeCheckConfigRequest::SharedCtor() {
  ::memset(&update_mask_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uptime_check_config_) -
      reinterpret_cast<char*>(&update_mask_)) + sizeof(uptime_check_config_));
}

UpdateUptimeCheckConfigRequest::~UpdateUptimeCheckConfigRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
  SharedDtor();
}

void UpdateUptimeCheckConfigRequest::SharedDtor() {
  if (this != internal_default_instance()) delete update_mask_;
  if (this != internal_default_instance()) delete uptime_check_config_;
}

void UpdateUptimeCheckConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateUptimeCheckConfigRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateUptimeCheckConfigRequest& UpdateUptimeCheckConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_UpdateUptimeCheckConfigRequest.base);
  return *internal_default_instance();
}


void UpdateUptimeCheckConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  if (GetArenaNoVirtual() == NULL && uptime_check_config_ != NULL) {
    delete uptime_check_config_;
  }
  uptime_check_config_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateUptimeCheckConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.FieldMask update_mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.monitoring.v3.UptimeCheckConfig uptime_check_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uptime_check_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
  return false;
#undef DO_
}

void UpdateUptimeCheckConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_update_mask(), output);
  }

  // .google.monitoring.v3.UptimeCheckConfig uptime_check_config = 3;
  if (this->has_uptime_check_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_uptime_check_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
}

::google::protobuf::uint8* UpdateUptimeCheckConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_update_mask(), deterministic, target);
  }

  // .google.monitoring.v3.UptimeCheckConfig uptime_check_config = 3;
  if (this->has_uptime_check_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_uptime_check_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
  return target;
}

size_t UpdateUptimeCheckConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  // .google.monitoring.v3.UptimeCheckConfig uptime_check_config = 3;
  if (this->has_uptime_check_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uptime_check_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateUptimeCheckConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateUptimeCheckConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateUptimeCheckConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
    MergeFrom(*source);
  }
}

void UpdateUptimeCheckConfigRequest::MergeFrom(const UpdateUptimeCheckConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
  if (from.has_uptime_check_config()) {
    mutable_uptime_check_config()->::google::monitoring::v3::UptimeCheckConfig::MergeFrom(from.uptime_check_config());
  }
}

void UpdateUptimeCheckConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateUptimeCheckConfigRequest::CopyFrom(const UpdateUptimeCheckConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.UpdateUptimeCheckConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateUptimeCheckConfigRequest::IsInitialized() const {
  return true;
}

void UpdateUptimeCheckConfigRequest::Swap(UpdateUptimeCheckConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateUptimeCheckConfigRequest::InternalSwap(UpdateUptimeCheckConfigRequest* other) {
  using std::swap;
  swap(update_mask_, other->update_mask_);
  swap(uptime_check_config_, other->uptime_check_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateUptimeCheckConfigRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteUptimeCheckConfigRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteUptimeCheckConfigRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteUptimeCheckConfigRequest::DeleteUptimeCheckConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_DeleteUptimeCheckConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
}
DeleteUptimeCheckConfigRequest::DeleteUptimeCheckConfigRequest(const DeleteUptimeCheckConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
}

void DeleteUptimeCheckConfigRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteUptimeCheckConfigRequest::~DeleteUptimeCheckConfigRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
  SharedDtor();
}

void DeleteUptimeCheckConfigRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteUptimeCheckConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteUptimeCheckConfigRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteUptimeCheckConfigRequest& DeleteUptimeCheckConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_DeleteUptimeCheckConfigRequest.base);
  return *internal_default_instance();
}


void DeleteUptimeCheckConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteUptimeCheckConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.DeleteUptimeCheckConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
  return false;
#undef DO_
}

void DeleteUptimeCheckConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.DeleteUptimeCheckConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
}

::google::protobuf::uint8* DeleteUptimeCheckConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.DeleteUptimeCheckConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
  return target;
}

size_t DeleteUptimeCheckConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteUptimeCheckConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteUptimeCheckConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteUptimeCheckConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
    MergeFrom(*source);
  }
}

void DeleteUptimeCheckConfigRequest::MergeFrom(const DeleteUptimeCheckConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteUptimeCheckConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteUptimeCheckConfigRequest::CopyFrom(const DeleteUptimeCheckConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.DeleteUptimeCheckConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteUptimeCheckConfigRequest::IsInitialized() const {
  return true;
}

void DeleteUptimeCheckConfigRequest::Swap(DeleteUptimeCheckConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteUptimeCheckConfigRequest::InternalSwap(DeleteUptimeCheckConfigRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteUptimeCheckConfigRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUptimeCheckIpsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUptimeCheckIpsRequest::kPageSizeFieldNumber;
const int ListUptimeCheckIpsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUptimeCheckIpsRequest::ListUptimeCheckIpsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_ListUptimeCheckIpsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListUptimeCheckIpsRequest)
}
ListUptimeCheckIpsRequest::ListUptimeCheckIpsRequest(const ListUptimeCheckIpsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListUptimeCheckIpsRequest)
}

void ListUptimeCheckIpsRequest::SharedCtor() {
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListUptimeCheckIpsRequest::~ListUptimeCheckIpsRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListUptimeCheckIpsRequest)
  SharedDtor();
}

void ListUptimeCheckIpsRequest::SharedDtor() {
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListUptimeCheckIpsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUptimeCheckIpsRequest::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUptimeCheckIpsRequest& ListUptimeCheckIpsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_ListUptimeCheckIpsRequest.base);
  return *internal_default_instance();
}


void ListUptimeCheckIpsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListUptimeCheckIpsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListUptimeCheckIpsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListUptimeCheckIpsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListUptimeCheckIpsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListUptimeCheckIpsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListUptimeCheckIpsRequest)
  return false;
#undef DO_
}

void ListUptimeCheckIpsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListUptimeCheckIpsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListUptimeCheckIpsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListUptimeCheckIpsRequest)
}

::google::protobuf::uint8* ListUptimeCheckIpsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListUptimeCheckIpsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListUptimeCheckIpsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListUptimeCheckIpsRequest)
  return target;
}

size_t ListUptimeCheckIpsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListUptimeCheckIpsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUptimeCheckIpsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListUptimeCheckIpsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUptimeCheckIpsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUptimeCheckIpsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListUptimeCheckIpsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListUptimeCheckIpsRequest)
    MergeFrom(*source);
  }
}

void ListUptimeCheckIpsRequest::MergeFrom(const ListUptimeCheckIpsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListUptimeCheckIpsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListUptimeCheckIpsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListUptimeCheckIpsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUptimeCheckIpsRequest::CopyFrom(const ListUptimeCheckIpsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListUptimeCheckIpsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUptimeCheckIpsRequest::IsInitialized() const {
  return true;
}

void ListUptimeCheckIpsRequest::Swap(ListUptimeCheckIpsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUptimeCheckIpsRequest::InternalSwap(ListUptimeCheckIpsRequest* other) {
  using std::swap;
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUptimeCheckIpsRequest::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUptimeCheckIpsResponse::InitAsDefaultInstance() {
}
void ListUptimeCheckIpsResponse::clear_uptime_check_ips() {
  uptime_check_ips_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUptimeCheckIpsResponse::kUptimeCheckIpsFieldNumber;
const int ListUptimeCheckIpsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUptimeCheckIpsResponse::ListUptimeCheckIpsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_ListUptimeCheckIpsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListUptimeCheckIpsResponse)
}
ListUptimeCheckIpsResponse::ListUptimeCheckIpsResponse(const ListUptimeCheckIpsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uptime_check_ips_(from.uptime_check_ips_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListUptimeCheckIpsResponse)
}

void ListUptimeCheckIpsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListUptimeCheckIpsResponse::~ListUptimeCheckIpsResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListUptimeCheckIpsResponse)
  SharedDtor();
}

void ListUptimeCheckIpsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListUptimeCheckIpsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUptimeCheckIpsResponse::descriptor() {
  ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUptimeCheckIpsResponse& ListUptimeCheckIpsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::scc_info_ListUptimeCheckIpsResponse.base);
  return *internal_default_instance();
}


void ListUptimeCheckIpsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListUptimeCheckIpsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uptime_check_ips_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListUptimeCheckIpsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListUptimeCheckIpsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.monitoring.v3.UptimeCheckIp uptime_check_ips = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_uptime_check_ips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListUptimeCheckIpsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListUptimeCheckIpsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListUptimeCheckIpsResponse)
  return false;
#undef DO_
}

void ListUptimeCheckIpsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListUptimeCheckIpsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.monitoring.v3.UptimeCheckIp uptime_check_ips = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uptime_check_ips_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->uptime_check_ips(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListUptimeCheckIpsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListUptimeCheckIpsResponse)
}

::google::protobuf::uint8* ListUptimeCheckIpsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListUptimeCheckIpsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.monitoring.v3.UptimeCheckIp uptime_check_ips = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uptime_check_ips_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->uptime_check_ips(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListUptimeCheckIpsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListUptimeCheckIpsResponse)
  return target;
}

size_t ListUptimeCheckIpsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListUptimeCheckIpsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.monitoring.v3.UptimeCheckIp uptime_check_ips = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->uptime_check_ips_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->uptime_check_ips(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUptimeCheckIpsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListUptimeCheckIpsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUptimeCheckIpsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUptimeCheckIpsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListUptimeCheckIpsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListUptimeCheckIpsResponse)
    MergeFrom(*source);
  }
}

void ListUptimeCheckIpsResponse::MergeFrom(const ListUptimeCheckIpsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListUptimeCheckIpsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uptime_check_ips_.MergeFrom(from.uptime_check_ips_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListUptimeCheckIpsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListUptimeCheckIpsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUptimeCheckIpsResponse::CopyFrom(const ListUptimeCheckIpsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListUptimeCheckIpsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUptimeCheckIpsResponse::IsInitialized() const {
  return true;
}

void ListUptimeCheckIpsResponse::Swap(ListUptimeCheckIpsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUptimeCheckIpsResponse::InternalSwap(ListUptimeCheckIpsResponse* other) {
  using std::swap;
  CastToBase(&uptime_check_ips_)->InternalSwap(CastToBase(&other->uptime_check_ips_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUptimeCheckIpsResponse::GetMetadata() const {
  protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fmonitoring_2fv3_2fuptime_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v3
}  // namespace monitoring
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListUptimeCheckConfigsRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListUptimeCheckConfigsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListUptimeCheckConfigsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListUptimeCheckConfigsResponse* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListUptimeCheckConfigsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListUptimeCheckConfigsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::GetUptimeCheckConfigRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::GetUptimeCheckConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::GetUptimeCheckConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::CreateUptimeCheckConfigRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::CreateUptimeCheckConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::CreateUptimeCheckConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::UpdateUptimeCheckConfigRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::UpdateUptimeCheckConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::UpdateUptimeCheckConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::DeleteUptimeCheckConfigRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::DeleteUptimeCheckConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::DeleteUptimeCheckConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListUptimeCheckIpsRequest* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListUptimeCheckIpsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListUptimeCheckIpsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::monitoring::v3::ListUptimeCheckIpsResponse* Arena::CreateMaybeMessage< ::google::monitoring::v3::ListUptimeCheckIpsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::monitoring::v3::ListUptimeCheckIpsResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
