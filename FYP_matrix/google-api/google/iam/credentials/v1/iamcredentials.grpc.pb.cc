// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/iam/credentials/v1/iamcredentials.proto

#include "google/iam/credentials/v1/iamcredentials.pb.h"
#include "google/iam/credentials/v1/iamcredentials.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace iam {
namespace credentials {
namespace v1 {

static const char* IAMCredentials_method_names[] = {
  "/google.iam.credentials.v1.IAMCredentials/GenerateAccessToken",
  "/google.iam.credentials.v1.IAMCredentials/GenerateIdToken",
  "/google.iam.credentials.v1.IAMCredentials/SignBlob",
  "/google.iam.credentials.v1.IAMCredentials/SignJwt",
  "/google.iam.credentials.v1.IAMCredentials/GenerateIdentityBindingAccessToken",
};

std::unique_ptr< IAMCredentials::Stub> IAMCredentials::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< IAMCredentials::Stub> stub(new IAMCredentials::Stub(channel));
  return stub;
}

IAMCredentials::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_GenerateAccessToken_(IAMCredentials_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GenerateIdToken_(IAMCredentials_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SignBlob_(IAMCredentials_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SignJwt_(IAMCredentials_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GenerateIdentityBindingAccessToken_(IAMCredentials_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status IAMCredentials::Stub::GenerateAccessToken(::grpc::ClientContext* context, const ::google::iam::credentials::v1::GenerateAccessTokenRequest& request, ::google::iam::credentials::v1::GenerateAccessTokenResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GenerateAccessToken_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::iam::credentials::v1::GenerateAccessTokenResponse>* IAMCredentials::Stub::AsyncGenerateAccessTokenRaw(::grpc::ClientContext* context, const ::google::iam::credentials::v1::GenerateAccessTokenRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::credentials::v1::GenerateAccessTokenResponse>::Create(channel_.get(), cq, rpcmethod_GenerateAccessToken_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::iam::credentials::v1::GenerateAccessTokenResponse>* IAMCredentials::Stub::PrepareAsyncGenerateAccessTokenRaw(::grpc::ClientContext* context, const ::google::iam::credentials::v1::GenerateAccessTokenRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::credentials::v1::GenerateAccessTokenResponse>::Create(channel_.get(), cq, rpcmethod_GenerateAccessToken_, context, request, false);
}

::grpc::Status IAMCredentials::Stub::GenerateIdToken(::grpc::ClientContext* context, const ::google::iam::credentials::v1::GenerateIdTokenRequest& request, ::google::iam::credentials::v1::GenerateIdTokenResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GenerateIdToken_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::iam::credentials::v1::GenerateIdTokenResponse>* IAMCredentials::Stub::AsyncGenerateIdTokenRaw(::grpc::ClientContext* context, const ::google::iam::credentials::v1::GenerateIdTokenRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::credentials::v1::GenerateIdTokenResponse>::Create(channel_.get(), cq, rpcmethod_GenerateIdToken_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::iam::credentials::v1::GenerateIdTokenResponse>* IAMCredentials::Stub::PrepareAsyncGenerateIdTokenRaw(::grpc::ClientContext* context, const ::google::iam::credentials::v1::GenerateIdTokenRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::credentials::v1::GenerateIdTokenResponse>::Create(channel_.get(), cq, rpcmethod_GenerateIdToken_, context, request, false);
}

::grpc::Status IAMCredentials::Stub::SignBlob(::grpc::ClientContext* context, const ::google::iam::credentials::v1::SignBlobRequest& request, ::google::iam::credentials::v1::SignBlobResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SignBlob_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::iam::credentials::v1::SignBlobResponse>* IAMCredentials::Stub::AsyncSignBlobRaw(::grpc::ClientContext* context, const ::google::iam::credentials::v1::SignBlobRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::credentials::v1::SignBlobResponse>::Create(channel_.get(), cq, rpcmethod_SignBlob_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::iam::credentials::v1::SignBlobResponse>* IAMCredentials::Stub::PrepareAsyncSignBlobRaw(::grpc::ClientContext* context, const ::google::iam::credentials::v1::SignBlobRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::credentials::v1::SignBlobResponse>::Create(channel_.get(), cq, rpcmethod_SignBlob_, context, request, false);
}

::grpc::Status IAMCredentials::Stub::SignJwt(::grpc::ClientContext* context, const ::google::iam::credentials::v1::SignJwtRequest& request, ::google::iam::credentials::v1::SignJwtResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SignJwt_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::iam::credentials::v1::SignJwtResponse>* IAMCredentials::Stub::AsyncSignJwtRaw(::grpc::ClientContext* context, const ::google::iam::credentials::v1::SignJwtRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::credentials::v1::SignJwtResponse>::Create(channel_.get(), cq, rpcmethod_SignJwt_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::iam::credentials::v1::SignJwtResponse>* IAMCredentials::Stub::PrepareAsyncSignJwtRaw(::grpc::ClientContext* context, const ::google::iam::credentials::v1::SignJwtRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::credentials::v1::SignJwtResponse>::Create(channel_.get(), cq, rpcmethod_SignJwt_, context, request, false);
}

::grpc::Status IAMCredentials::Stub::GenerateIdentityBindingAccessToken(::grpc::ClientContext* context, const ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest& request, ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GenerateIdentityBindingAccessToken_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse>* IAMCredentials::Stub::AsyncGenerateIdentityBindingAccessTokenRaw(::grpc::ClientContext* context, const ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse>::Create(channel_.get(), cq, rpcmethod_GenerateIdentityBindingAccessToken_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse>* IAMCredentials::Stub::PrepareAsyncGenerateIdentityBindingAccessTokenRaw(::grpc::ClientContext* context, const ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse>::Create(channel_.get(), cq, rpcmethod_GenerateIdentityBindingAccessToken_, context, request, false);
}

IAMCredentials::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IAMCredentials_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IAMCredentials::Service, ::google::iam::credentials::v1::GenerateAccessTokenRequest, ::google::iam::credentials::v1::GenerateAccessTokenResponse>(
          std::mem_fn(&IAMCredentials::Service::GenerateAccessToken), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IAMCredentials_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IAMCredentials::Service, ::google::iam::credentials::v1::GenerateIdTokenRequest, ::google::iam::credentials::v1::GenerateIdTokenResponse>(
          std::mem_fn(&IAMCredentials::Service::GenerateIdToken), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IAMCredentials_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IAMCredentials::Service, ::google::iam::credentials::v1::SignBlobRequest, ::google::iam::credentials::v1::SignBlobResponse>(
          std::mem_fn(&IAMCredentials::Service::SignBlob), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IAMCredentials_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IAMCredentials::Service, ::google::iam::credentials::v1::SignJwtRequest, ::google::iam::credentials::v1::SignJwtResponse>(
          std::mem_fn(&IAMCredentials::Service::SignJwt), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IAMCredentials_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IAMCredentials::Service, ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest, ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse>(
          std::mem_fn(&IAMCredentials::Service::GenerateIdentityBindingAccessToken), this)));
}

IAMCredentials::Service::~Service() {
}

::grpc::Status IAMCredentials::Service::GenerateAccessToken(::grpc::ServerContext* context, const ::google::iam::credentials::v1::GenerateAccessTokenRequest* request, ::google::iam::credentials::v1::GenerateAccessTokenResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status IAMCredentials::Service::GenerateIdToken(::grpc::ServerContext* context, const ::google::iam::credentials::v1::GenerateIdTokenRequest* request, ::google::iam::credentials::v1::GenerateIdTokenResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status IAMCredentials::Service::SignBlob(::grpc::ServerContext* context, const ::google::iam::credentials::v1::SignBlobRequest* request, ::google::iam::credentials::v1::SignBlobResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status IAMCredentials::Service::SignJwt(::grpc::ServerContext* context, const ::google::iam::credentials::v1::SignJwtRequest* request, ::google::iam::credentials::v1::SignJwtResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status IAMCredentials::Service::GenerateIdentityBindingAccessToken(::grpc::ServerContext* context, const ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest* request, ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace iam
}  // namespace credentials
}  // namespace v1

