// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/iam/credentials/v1/iamcredentials.proto

#include "google/iam/credentials/v1/iamcredentials.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace google {
namespace iam {
namespace credentials {
namespace v1 {
}  // namespace v1
}  // namespace credentials
}  // namespace iam
}  // namespace google
namespace protobuf_google_2fiam_2fcredentials_2fv1_2fiamcredentials_2eproto {
void InitDefaults() {
}

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/iam/credentials/v1/iamcredentials.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n.google/iam/credentials/v1/iamcredentia"
      "ls.proto\022\031google.iam.credentials.v1\032\034goo"
      "gle/api/annotations.proto\032&google/iam/cr"
      "edentials/v1/common.proto2\353\007\n\016IAMCredent"
      "ials\022\314\001\n\023GenerateAccessToken\0225.google.ia"
      "m.credentials.v1.GenerateAccessTokenRequ"
      "est\0326.google.iam.credentials.v1.Generate"
      "AccessTokenResponse\"F\202\323\344\223\002@\";/v1/{name=p"
      "rojects/*/serviceAccounts/*}:generateAcc"
      "essToken:\001*\022\274\001\n\017GenerateIdToken\0221.google"
      ".iam.credentials.v1.GenerateIdTokenReque"
      "st\0322.google.iam.credentials.v1.GenerateI"
      "dTokenResponse\"B\202\323\344\223\002<\"7/v1/{name=projec"
      "ts/*/serviceAccounts/*}:generateIdToken:"
      "\001*\022\240\001\n\010SignBlob\022*.google.iam.credentials"
      ".v1.SignBlobRequest\032+.google.iam.credent"
      "ials.v1.SignBlobResponse\";\202\323\344\223\0025\"0/v1/{n"
      "ame=projects/*/serviceAccounts/*}:signBl"
      "ob:\001*\022\234\001\n\007SignJwt\022).google.iam.credentia"
      "ls.v1.SignJwtRequest\032*.google.iam.creden"
      "tials.v1.SignJwtResponse\":\202\323\344\223\0024\"//v1/{n"
      "ame=projects/*/serviceAccounts/*}:signJw"
      "t:\001*\022\210\002\n\"GenerateIdentityBindingAccessTo"
      "ken\022D.google.iam.credentials.v1.Generate"
      "IdentityBindingAccessTokenRequest\032E.goog"
      "le.iam.credentials.v1.GenerateIdentityBi"
      "ndingAccessTokenResponse\"U\202\323\344\223\002O\"J/v1/{n"
      "ame=projects/*/serviceAccounts/*}:genera"
      "teIdentityBindingAccessToken:\001*BIZDgoogl"
      "e.golang.org/genproto/googleapis/iam/cre"
      "dentials/v1;credentials\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1234);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/iam/credentials/v1/iamcredentials.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fiam_2fcredentials_2fv1_2fiamcredentials_2eproto
namespace google {
namespace iam {
namespace credentials {
namespace v1 {

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace credentials
}  // namespace iam
}  // namespace google
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
