// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/iam/credentials/v1/common.proto

#include "google/iam/credentials/v1/common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace iam {
namespace credentials {
namespace v1 {
class GenerateAccessTokenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateAccessTokenRequest>
      _instance;
} _GenerateAccessTokenRequest_default_instance_;
class GenerateAccessTokenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateAccessTokenResponse>
      _instance;
} _GenerateAccessTokenResponse_default_instance_;
class SignBlobRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignBlobRequest>
      _instance;
} _SignBlobRequest_default_instance_;
class SignBlobResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignBlobResponse>
      _instance;
} _SignBlobResponse_default_instance_;
class SignJwtRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignJwtRequest>
      _instance;
} _SignJwtRequest_default_instance_;
class SignJwtResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignJwtResponse>
      _instance;
} _SignJwtResponse_default_instance_;
class GenerateIdTokenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateIdTokenRequest>
      _instance;
} _GenerateIdTokenRequest_default_instance_;
class GenerateIdTokenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateIdTokenResponse>
      _instance;
} _GenerateIdTokenResponse_default_instance_;
class GenerateIdentityBindingAccessTokenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateIdentityBindingAccessTokenRequest>
      _instance;
} _GenerateIdentityBindingAccessTokenRequest_default_instance_;
class GenerateIdentityBindingAccessTokenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateIdentityBindingAccessTokenResponse>
      _instance;
} _GenerateIdentityBindingAccessTokenResponse_default_instance_;
}  // namespace v1
}  // namespace credentials
}  // namespace iam
}  // namespace google
namespace protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto {
static void InitDefaultsGenerateAccessTokenRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::iam::credentials::v1::_GenerateAccessTokenRequest_default_instance_;
    new (ptr) ::google::iam::credentials::v1::GenerateAccessTokenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::credentials::v1::GenerateAccessTokenRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GenerateAccessTokenRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGenerateAccessTokenRequest}, {
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,}};

static void InitDefaultsGenerateAccessTokenResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::iam::credentials::v1::_GenerateAccessTokenResponse_default_instance_;
    new (ptr) ::google::iam::credentials::v1::GenerateAccessTokenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::credentials::v1::GenerateAccessTokenResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GenerateAccessTokenResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGenerateAccessTokenResponse}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsSignBlobRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::iam::credentials::v1::_SignBlobRequest_default_instance_;
    new (ptr) ::google::iam::credentials::v1::SignBlobRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::credentials::v1::SignBlobRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignBlobRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignBlobRequest}, {}};

static void InitDefaultsSignBlobResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::iam::credentials::v1::_SignBlobResponse_default_instance_;
    new (ptr) ::google::iam::credentials::v1::SignBlobResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::credentials::v1::SignBlobResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignBlobResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignBlobResponse}, {}};

static void InitDefaultsSignJwtRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::iam::credentials::v1::_SignJwtRequest_default_instance_;
    new (ptr) ::google::iam::credentials::v1::SignJwtRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::credentials::v1::SignJwtRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignJwtRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignJwtRequest}, {}};

static void InitDefaultsSignJwtResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::iam::credentials::v1::_SignJwtResponse_default_instance_;
    new (ptr) ::google::iam::credentials::v1::SignJwtResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::credentials::v1::SignJwtResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignJwtResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignJwtResponse}, {}};

static void InitDefaultsGenerateIdTokenRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::iam::credentials::v1::_GenerateIdTokenRequest_default_instance_;
    new (ptr) ::google::iam::credentials::v1::GenerateIdTokenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::credentials::v1::GenerateIdTokenRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenerateIdTokenRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenerateIdTokenRequest}, {}};

static void InitDefaultsGenerateIdTokenResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::iam::credentials::v1::_GenerateIdTokenResponse_default_instance_;
    new (ptr) ::google::iam::credentials::v1::GenerateIdTokenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::credentials::v1::GenerateIdTokenResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenerateIdTokenResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenerateIdTokenResponse}, {}};

static void InitDefaultsGenerateIdentityBindingAccessTokenRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::iam::credentials::v1::_GenerateIdentityBindingAccessTokenRequest_default_instance_;
    new (ptr) ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenerateIdentityBindingAccessTokenRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenerateIdentityBindingAccessTokenRequest}, {}};

static void InitDefaultsGenerateIdentityBindingAccessTokenResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::iam::credentials::v1::_GenerateIdentityBindingAccessTokenResponse_default_instance_;
    new (ptr) ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GenerateIdentityBindingAccessTokenResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGenerateIdentityBindingAccessTokenResponse}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateAccessTokenRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateAccessTokenResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignBlobRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignBlobResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignJwtRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignJwtResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateIdTokenRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateIdTokenResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateIdentityBindingAccessTokenRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateIdentityBindingAccessTokenResponse.base);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateAccessTokenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateAccessTokenRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateAccessTokenRequest, delegates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateAccessTokenRequest, scope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateAccessTokenRequest, lifetime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateAccessTokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateAccessTokenResponse, access_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateAccessTokenResponse, expire_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignBlobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignBlobRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignBlobRequest, delegates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignBlobRequest, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignBlobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignBlobResponse, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignBlobResponse, signed_blob_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignJwtRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignJwtRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignJwtRequest, delegates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignJwtRequest, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignJwtResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignJwtResponse, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::SignJwtResponse, signed_jwt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdTokenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdTokenRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdTokenRequest, delegates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdTokenRequest, audience_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdTokenRequest, include_email_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdTokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdTokenResponse, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest, scope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest, jwt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse, access_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse, expire_time_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::iam::credentials::v1::GenerateAccessTokenRequest)},
  { 9, -1, sizeof(::google::iam::credentials::v1::GenerateAccessTokenResponse)},
  { 16, -1, sizeof(::google::iam::credentials::v1::SignBlobRequest)},
  { 24, -1, sizeof(::google::iam::credentials::v1::SignBlobResponse)},
  { 31, -1, sizeof(::google::iam::credentials::v1::SignJwtRequest)},
  { 39, -1, sizeof(::google::iam::credentials::v1::SignJwtResponse)},
  { 46, -1, sizeof(::google::iam::credentials::v1::GenerateIdTokenRequest)},
  { 55, -1, sizeof(::google::iam::credentials::v1::GenerateIdTokenResponse)},
  { 61, -1, sizeof(::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest)},
  { 69, -1, sizeof(::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::credentials::v1::_GenerateAccessTokenRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::credentials::v1::_GenerateAccessTokenResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::credentials::v1::_SignBlobRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::credentials::v1::_SignBlobResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::credentials::v1::_SignJwtRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::credentials::v1::_SignJwtResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::credentials::v1::_GenerateIdTokenRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::credentials::v1::_GenerateIdTokenResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::credentials::v1::_GenerateIdentityBindingAccessTokenRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::iam::credentials::v1::_GenerateIdentityBindingAccessTokenResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/iam/credentials/v1/common.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n&google/iam/credentials/v1/common.proto"
      "\022\031google.iam.credentials.v1\032\036google/prot"
      "obuf/duration.proto\032\037google/protobuf/tim"
      "estamp.proto\"y\n\032GenerateAccessTokenReque"
      "st\022\014\n\004name\030\001 \001(\t\022\021\n\tdelegates\030\002 \003(\t\022\r\n\005s"
      "cope\030\004 \003(\t\022+\n\010lifetime\030\007 \001(\0132\031.google.pr"
      "otobuf.Duration\"d\n\033GenerateAccessTokenRe"
      "sponse\022\024\n\014access_token\030\001 \001(\t\022/\n\013expire_t"
      "ime\030\003 \001(\0132\032.google.protobuf.Timestamp\"C\n"
      "\017SignBlobRequest\022\014\n\004name\030\001 \001(\t\022\021\n\tdelega"
      "tes\030\003 \003(\t\022\017\n\007payload\030\005 \001(\014\"7\n\020SignBlobRe"
      "sponse\022\016\n\006key_id\030\001 \001(\t\022\023\n\013signed_blob\030\004 "
      "\001(\014\"B\n\016SignJwtRequest\022\014\n\004name\030\001 \001(\t\022\021\n\td"
      "elegates\030\003 \003(\t\022\017\n\007payload\030\005 \001(\t\"5\n\017SignJ"
      "wtResponse\022\016\n\006key_id\030\001 \001(\t\022\022\n\nsigned_jwt"
      "\030\002 \001(\t\"b\n\026GenerateIdTokenRequest\022\014\n\004name"
      "\030\001 \001(\t\022\021\n\tdelegates\030\002 \003(\t\022\020\n\010audience\030\003 "
      "\001(\t\022\025\n\rinclude_email\030\004 \001(\010\"(\n\027GenerateId"
      "TokenResponse\022\r\n\005token\030\001 \001(\t\"U\n)Generate"
      "IdentityBindingAccessTokenRequest\022\014\n\004nam"
      "e\030\001 \001(\t\022\r\n\005scope\030\002 \003(\t\022\013\n\003jwt\030\003 \001(\t\"s\n*G"
      "enerateIdentityBindingAccessTokenRespons"
      "e\022\024\n\014access_token\030\001 \001(\t\022/\n\013expire_time\030\002"
      " \001(\0132\032.google.protobuf.TimestampB\205\001\n\035com"
      ".google.iam.credentials.v1B\031IAMCredentia"
      "lsCommonProtoP\001ZDgoogle.golang.org/genpr"
      "oto/googleapis/iam/credentials/v1;creden"
      "tials\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1096);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/iam/credentials/v1/common.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto
namespace google {
namespace iam {
namespace credentials {
namespace v1 {

// ===================================================================

void GenerateAccessTokenRequest::InitAsDefaultInstance() {
  ::google::iam::credentials::v1::_GenerateAccessTokenRequest_default_instance_._instance.get_mutable()->lifetime_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void GenerateAccessTokenRequest::unsafe_arena_set_allocated_lifetime(
    ::google::protobuf::Duration* lifetime) {
  if (GetArenaNoVirtual() == NULL) {
    delete lifetime_;
  }
  lifetime_ = lifetime;
  if (lifetime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.GenerateAccessTokenRequest.lifetime)
}
void GenerateAccessTokenRequest::clear_lifetime() {
  if (GetArenaNoVirtual() == NULL && lifetime_ != NULL) {
    delete lifetime_;
  }
  lifetime_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateAccessTokenRequest::kNameFieldNumber;
const int GenerateAccessTokenRequest::kDelegatesFieldNumber;
const int GenerateAccessTokenRequest::kScopeFieldNumber;
const int GenerateAccessTokenRequest::kLifetimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateAccessTokenRequest::GenerateAccessTokenRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateAccessTokenRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.credentials.v1.GenerateAccessTokenRequest)
}
GenerateAccessTokenRequest::GenerateAccessTokenRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  delegates_(arena),
  scope_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateAccessTokenRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.credentials.v1.GenerateAccessTokenRequest)
}
GenerateAccessTokenRequest::GenerateAccessTokenRequest(const GenerateAccessTokenRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      delegates_(from.delegates_),
      scope_(from.scope_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_lifetime()) {
    lifetime_ = new ::google::protobuf::Duration(*from.lifetime_);
  } else {
    lifetime_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.iam.credentials.v1.GenerateAccessTokenRequest)
}

void GenerateAccessTokenRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lifetime_ = NULL;
}

GenerateAccessTokenRequest::~GenerateAccessTokenRequest() {
  // @@protoc_insertion_point(destructor:google.iam.credentials.v1.GenerateAccessTokenRequest)
  SharedDtor();
}

void GenerateAccessTokenRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete lifetime_;
}

void GenerateAccessTokenRequest::ArenaDtor(void* object) {
  GenerateAccessTokenRequest* _this = reinterpret_cast< GenerateAccessTokenRequest* >(object);
  (void)_this;
}
void GenerateAccessTokenRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GenerateAccessTokenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenerateAccessTokenRequest::descriptor() {
  ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenerateAccessTokenRequest& GenerateAccessTokenRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateAccessTokenRequest.base);
  return *internal_default_instance();
}


void GenerateAccessTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.credentials.v1.GenerateAccessTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delegates_.Clear();
  scope_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && lifetime_ != NULL) {
    delete lifetime_;
  }
  lifetime_ = NULL;
  _internal_metadata_.Clear();
}

bool GenerateAccessTokenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.credentials.v1.GenerateAccessTokenRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.GenerateAccessTokenRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string delegates = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_delegates()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->delegates(this->delegates_size() - 1).data(),
            static_cast<int>(this->delegates(this->delegates_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.GenerateAccessTokenRequest.delegates"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string scope = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_scope()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scope(this->scope_size() - 1).data(),
            static_cast<int>(this->scope(this->scope_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.GenerateAccessTokenRequest.scope"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration lifetime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lifetime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.credentials.v1.GenerateAccessTokenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.credentials.v1.GenerateAccessTokenRequest)
  return false;
#undef DO_
}

void GenerateAccessTokenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.credentials.v1.GenerateAccessTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateAccessTokenRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string delegates = 2;
  for (int i = 0, n = this->delegates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delegates(i).data(), static_cast<int>(this->delegates(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateAccessTokenRequest.delegates");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->delegates(i), output);
  }

  // repeated string scope = 4;
  for (int i = 0, n = this->scope_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scope(i).data(), static_cast<int>(this->scope(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateAccessTokenRequest.scope");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->scope(i), output);
  }

  // .google.protobuf.Duration lifetime = 7;
  if (this->has_lifetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_lifetime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.credentials.v1.GenerateAccessTokenRequest)
}

::google::protobuf::uint8* GenerateAccessTokenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.credentials.v1.GenerateAccessTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateAccessTokenRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string delegates = 2;
  for (int i = 0, n = this->delegates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delegates(i).data(), static_cast<int>(this->delegates(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateAccessTokenRequest.delegates");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->delegates(i), target);
  }

  // repeated string scope = 4;
  for (int i = 0, n = this->scope_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scope(i).data(), static_cast<int>(this->scope(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateAccessTokenRequest.scope");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->scope(i), target);
  }

  // .google.protobuf.Duration lifetime = 7;
  if (this->has_lifetime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_lifetime(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.credentials.v1.GenerateAccessTokenRequest)
  return target;
}

size_t GenerateAccessTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.credentials.v1.GenerateAccessTokenRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string delegates = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->delegates_size());
  for (int i = 0, n = this->delegates_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->delegates(i));
  }

  // repeated string scope = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->scope_size());
  for (int i = 0, n = this->scope_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->scope(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.protobuf.Duration lifetime = 7;
  if (this->has_lifetime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lifetime_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateAccessTokenRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.credentials.v1.GenerateAccessTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateAccessTokenRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenerateAccessTokenRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.credentials.v1.GenerateAccessTokenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.credentials.v1.GenerateAccessTokenRequest)
    MergeFrom(*source);
  }
}

void GenerateAccessTokenRequest::MergeFrom(const GenerateAccessTokenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.credentials.v1.GenerateAccessTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  delegates_.MergeFrom(from.delegates_);
  scope_.MergeFrom(from.scope_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_lifetime()) {
    mutable_lifetime()->::google::protobuf::Duration::MergeFrom(from.lifetime());
  }
}

void GenerateAccessTokenRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.credentials.v1.GenerateAccessTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateAccessTokenRequest::CopyFrom(const GenerateAccessTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.credentials.v1.GenerateAccessTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateAccessTokenRequest::IsInitialized() const {
  return true;
}

void GenerateAccessTokenRequest::Swap(GenerateAccessTokenRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GenerateAccessTokenRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GenerateAccessTokenRequest::UnsafeArenaSwap(GenerateAccessTokenRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GenerateAccessTokenRequest::InternalSwap(GenerateAccessTokenRequest* other) {
  using std::swap;
  delegates_.InternalSwap(CastToBase(&other->delegates_));
  scope_.InternalSwap(CastToBase(&other->scope_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(lifetime_, other->lifetime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenerateAccessTokenRequest::GetMetadata() const {
  protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenerateAccessTokenResponse::InitAsDefaultInstance() {
  ::google::iam::credentials::v1::_GenerateAccessTokenResponse_default_instance_._instance.get_mutable()->expire_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void GenerateAccessTokenResponse::unsafe_arena_set_allocated_expire_time(
    ::google::protobuf::Timestamp* expire_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete expire_time_;
  }
  expire_time_ = expire_time;
  if (expire_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.GenerateAccessTokenResponse.expire_time)
}
void GenerateAccessTokenResponse::clear_expire_time() {
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateAccessTokenResponse::kAccessTokenFieldNumber;
const int GenerateAccessTokenResponse::kExpireTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateAccessTokenResponse::GenerateAccessTokenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateAccessTokenResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.credentials.v1.GenerateAccessTokenResponse)
}
GenerateAccessTokenResponse::GenerateAccessTokenResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateAccessTokenResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.credentials.v1.GenerateAccessTokenResponse)
}
GenerateAccessTokenResponse::GenerateAccessTokenResponse(const GenerateAccessTokenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.access_token().size() > 0) {
    access_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token(),
      GetArenaNoVirtual());
  }
  if (from.has_expire_time()) {
    expire_time_ = new ::google::protobuf::Timestamp(*from.expire_time_);
  } else {
    expire_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.iam.credentials.v1.GenerateAccessTokenResponse)
}

void GenerateAccessTokenResponse::SharedCtor() {
  access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expire_time_ = NULL;
}

GenerateAccessTokenResponse::~GenerateAccessTokenResponse() {
  // @@protoc_insertion_point(destructor:google.iam.credentials.v1.GenerateAccessTokenResponse)
  SharedDtor();
}

void GenerateAccessTokenResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  access_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expire_time_;
}

void GenerateAccessTokenResponse::ArenaDtor(void* object) {
  GenerateAccessTokenResponse* _this = reinterpret_cast< GenerateAccessTokenResponse* >(object);
  (void)_this;
}
void GenerateAccessTokenResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GenerateAccessTokenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenerateAccessTokenResponse::descriptor() {
  ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenerateAccessTokenResponse& GenerateAccessTokenResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateAccessTokenResponse.base);
  return *internal_default_instance();
}


void GenerateAccessTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.credentials.v1.GenerateAccessTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  access_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
  _internal_metadata_.Clear();
}

bool GenerateAccessTokenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.credentials.v1.GenerateAccessTokenResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string access_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_token().data(), static_cast<int>(this->access_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.GenerateAccessTokenResponse.access_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expire_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expire_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.credentials.v1.GenerateAccessTokenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.credentials.v1.GenerateAccessTokenResponse)
  return false;
#undef DO_
}

void GenerateAccessTokenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.credentials.v1.GenerateAccessTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_token = 1;
  if (this->access_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_token().data(), static_cast<int>(this->access_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateAccessTokenResponse.access_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->access_token(), output);
  }

  // .google.protobuf.Timestamp expire_time = 3;
  if (this->has_expire_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_expire_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.credentials.v1.GenerateAccessTokenResponse)
}

::google::protobuf::uint8* GenerateAccessTokenResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.credentials.v1.GenerateAccessTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_token = 1;
  if (this->access_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_token().data(), static_cast<int>(this->access_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateAccessTokenResponse.access_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->access_token(), target);
  }

  // .google.protobuf.Timestamp expire_time = 3;
  if (this->has_expire_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_expire_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.credentials.v1.GenerateAccessTokenResponse)
  return target;
}

size_t GenerateAccessTokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.credentials.v1.GenerateAccessTokenResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string access_token = 1;
  if (this->access_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_token());
  }

  // .google.protobuf.Timestamp expire_time = 3;
  if (this->has_expire_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expire_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateAccessTokenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.credentials.v1.GenerateAccessTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateAccessTokenResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenerateAccessTokenResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.credentials.v1.GenerateAccessTokenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.credentials.v1.GenerateAccessTokenResponse)
    MergeFrom(*source);
  }
}

void GenerateAccessTokenResponse::MergeFrom(const GenerateAccessTokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.credentials.v1.GenerateAccessTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.access_token().size() > 0) {
    set_access_token(from.access_token());
  }
  if (from.has_expire_time()) {
    mutable_expire_time()->::google::protobuf::Timestamp::MergeFrom(from.expire_time());
  }
}

void GenerateAccessTokenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.credentials.v1.GenerateAccessTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateAccessTokenResponse::CopyFrom(const GenerateAccessTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.credentials.v1.GenerateAccessTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateAccessTokenResponse::IsInitialized() const {
  return true;
}

void GenerateAccessTokenResponse::Swap(GenerateAccessTokenResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GenerateAccessTokenResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GenerateAccessTokenResponse::UnsafeArenaSwap(GenerateAccessTokenResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GenerateAccessTokenResponse::InternalSwap(GenerateAccessTokenResponse* other) {
  using std::swap;
  access_token_.Swap(&other->access_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expire_time_, other->expire_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenerateAccessTokenResponse::GetMetadata() const {
  protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignBlobRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignBlobRequest::kNameFieldNumber;
const int SignBlobRequest::kDelegatesFieldNumber;
const int SignBlobRequest::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignBlobRequest::SignBlobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_SignBlobRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.credentials.v1.SignBlobRequest)
}
SignBlobRequest::SignBlobRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  delegates_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_SignBlobRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.credentials.v1.SignBlobRequest)
}
SignBlobRequest::SignBlobRequest(const SignBlobRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      delegates_(from.delegates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.iam.credentials.v1.SignBlobRequest)
}

void SignBlobRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignBlobRequest::~SignBlobRequest() {
  // @@protoc_insertion_point(destructor:google.iam.credentials.v1.SignBlobRequest)
  SharedDtor();
}

void SignBlobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignBlobRequest::ArenaDtor(void* object) {
  SignBlobRequest* _this = reinterpret_cast< SignBlobRequest* >(object);
  (void)_this;
}
void SignBlobRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SignBlobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignBlobRequest::descriptor() {
  ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignBlobRequest& SignBlobRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_SignBlobRequest.base);
  return *internal_default_instance();
}


void SignBlobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.credentials.v1.SignBlobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delegates_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool SignBlobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.credentials.v1.SignBlobRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.SignBlobRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string delegates = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_delegates()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->delegates(this->delegates_size() - 1).data(),
            static_cast<int>(this->delegates(this->delegates_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.SignBlobRequest.delegates"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.credentials.v1.SignBlobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.credentials.v1.SignBlobRequest)
  return false;
#undef DO_
}

void SignBlobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.credentials.v1.SignBlobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignBlobRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string delegates = 3;
  for (int i = 0, n = this->delegates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delegates(i).data(), static_cast<int>(this->delegates(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignBlobRequest.delegates");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->delegates(i), output);
  }

  // bytes payload = 5;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->payload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.credentials.v1.SignBlobRequest)
}

::google::protobuf::uint8* SignBlobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.credentials.v1.SignBlobRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignBlobRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string delegates = 3;
  for (int i = 0, n = this->delegates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delegates(i).data(), static_cast<int>(this->delegates(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignBlobRequest.delegates");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->delegates(i), target);
  }

  // bytes payload = 5;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->payload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.credentials.v1.SignBlobRequest)
  return target;
}

size_t SignBlobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.credentials.v1.SignBlobRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string delegates = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->delegates_size());
  for (int i = 0, n = this->delegates_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->delegates(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes payload = 5;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignBlobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.credentials.v1.SignBlobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignBlobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignBlobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.credentials.v1.SignBlobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.credentials.v1.SignBlobRequest)
    MergeFrom(*source);
  }
}

void SignBlobRequest::MergeFrom(const SignBlobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.credentials.v1.SignBlobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  delegates_.MergeFrom(from.delegates_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.payload().size() > 0) {
    set_payload(from.payload());
  }
}

void SignBlobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.credentials.v1.SignBlobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignBlobRequest::CopyFrom(const SignBlobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.credentials.v1.SignBlobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignBlobRequest::IsInitialized() const {
  return true;
}

void SignBlobRequest::Swap(SignBlobRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SignBlobRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SignBlobRequest::UnsafeArenaSwap(SignBlobRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SignBlobRequest::InternalSwap(SignBlobRequest* other) {
  using std::swap;
  delegates_.InternalSwap(CastToBase(&other->delegates_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignBlobRequest::GetMetadata() const {
  protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignBlobResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignBlobResponse::kKeyIdFieldNumber;
const int SignBlobResponse::kSignedBlobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignBlobResponse::SignBlobResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_SignBlobResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.credentials.v1.SignBlobResponse)
}
SignBlobResponse::SignBlobResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_SignBlobResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.credentials.v1.SignBlobResponse)
}
SignBlobResponse::SignBlobResponse(const SignBlobResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id(),
      GetArenaNoVirtual());
  }
  signed_blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signed_blob().size() > 0) {
    signed_blob_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_blob(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.iam.credentials.v1.SignBlobResponse)
}

void SignBlobResponse::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signed_blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignBlobResponse::~SignBlobResponse() {
  // @@protoc_insertion_point(destructor:google.iam.credentials.v1.SignBlobResponse)
  SharedDtor();
}

void SignBlobResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signed_blob_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignBlobResponse::ArenaDtor(void* object) {
  SignBlobResponse* _this = reinterpret_cast< SignBlobResponse* >(object);
  (void)_this;
}
void SignBlobResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SignBlobResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignBlobResponse::descriptor() {
  ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignBlobResponse& SignBlobResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_SignBlobResponse.base);
  return *internal_default_instance();
}


void SignBlobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.credentials.v1.SignBlobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  signed_blob_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool SignBlobResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.credentials.v1.SignBlobResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key_id().data(), static_cast<int>(this->key_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.SignBlobResponse.key_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes signed_blob = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signed_blob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.credentials.v1.SignBlobResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.credentials.v1.SignBlobResponse)
  return false;
#undef DO_
}

void SignBlobResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.credentials.v1.SignBlobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), static_cast<int>(this->key_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignBlobResponse.key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key_id(), output);
  }

  // bytes signed_blob = 4;
  if (this->signed_blob().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->signed_blob(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.credentials.v1.SignBlobResponse)
}

::google::protobuf::uint8* SignBlobResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.credentials.v1.SignBlobResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), static_cast<int>(this->key_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignBlobResponse.key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key_id(), target);
  }

  // bytes signed_blob = 4;
  if (this->signed_blob().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->signed_blob(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.credentials.v1.SignBlobResponse)
  return target;
}

size_t SignBlobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.credentials.v1.SignBlobResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key_id = 1;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_id());
  }

  // bytes signed_blob = 4;
  if (this->signed_blob().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signed_blob());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignBlobResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.credentials.v1.SignBlobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SignBlobResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignBlobResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.credentials.v1.SignBlobResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.credentials.v1.SignBlobResponse)
    MergeFrom(*source);
  }
}

void SignBlobResponse::MergeFrom(const SignBlobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.credentials.v1.SignBlobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key_id().size() > 0) {
    set_key_id(from.key_id());
  }
  if (from.signed_blob().size() > 0) {
    set_signed_blob(from.signed_blob());
  }
}

void SignBlobResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.credentials.v1.SignBlobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignBlobResponse::CopyFrom(const SignBlobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.credentials.v1.SignBlobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignBlobResponse::IsInitialized() const {
  return true;
}

void SignBlobResponse::Swap(SignBlobResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SignBlobResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SignBlobResponse::UnsafeArenaSwap(SignBlobResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SignBlobResponse::InternalSwap(SignBlobResponse* other) {
  using std::swap;
  key_id_.Swap(&other->key_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signed_blob_.Swap(&other->signed_blob_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignBlobResponse::GetMetadata() const {
  protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignJwtRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignJwtRequest::kNameFieldNumber;
const int SignJwtRequest::kDelegatesFieldNumber;
const int SignJwtRequest::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignJwtRequest::SignJwtRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_SignJwtRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.credentials.v1.SignJwtRequest)
}
SignJwtRequest::SignJwtRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  delegates_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_SignJwtRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.credentials.v1.SignJwtRequest)
}
SignJwtRequest::SignJwtRequest(const SignJwtRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      delegates_(from.delegates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.iam.credentials.v1.SignJwtRequest)
}

void SignJwtRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignJwtRequest::~SignJwtRequest() {
  // @@protoc_insertion_point(destructor:google.iam.credentials.v1.SignJwtRequest)
  SharedDtor();
}

void SignJwtRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignJwtRequest::ArenaDtor(void* object) {
  SignJwtRequest* _this = reinterpret_cast< SignJwtRequest* >(object);
  (void)_this;
}
void SignJwtRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SignJwtRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignJwtRequest::descriptor() {
  ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignJwtRequest& SignJwtRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_SignJwtRequest.base);
  return *internal_default_instance();
}


void SignJwtRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.credentials.v1.SignJwtRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delegates_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool SignJwtRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.credentials.v1.SignJwtRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.SignJwtRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string delegates = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_delegates()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->delegates(this->delegates_size() - 1).data(),
            static_cast<int>(this->delegates(this->delegates_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.SignJwtRequest.delegates"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string payload = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payload()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->payload().data(), static_cast<int>(this->payload().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.SignJwtRequest.payload"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.credentials.v1.SignJwtRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.credentials.v1.SignJwtRequest)
  return false;
#undef DO_
}

void SignJwtRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.credentials.v1.SignJwtRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignJwtRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string delegates = 3;
  for (int i = 0, n = this->delegates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delegates(i).data(), static_cast<int>(this->delegates(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignJwtRequest.delegates");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->delegates(i), output);
  }

  // string payload = 5;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payload().data(), static_cast<int>(this->payload().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignJwtRequest.payload");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->payload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.credentials.v1.SignJwtRequest)
}

::google::protobuf::uint8* SignJwtRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.credentials.v1.SignJwtRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignJwtRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string delegates = 3;
  for (int i = 0, n = this->delegates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delegates(i).data(), static_cast<int>(this->delegates(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignJwtRequest.delegates");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->delegates(i), target);
  }

  // string payload = 5;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payload().data(), static_cast<int>(this->payload().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignJwtRequest.payload");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->payload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.credentials.v1.SignJwtRequest)
  return target;
}

size_t SignJwtRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.credentials.v1.SignJwtRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string delegates = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->delegates_size());
  for (int i = 0, n = this->delegates_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->delegates(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string payload = 5;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payload());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignJwtRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.credentials.v1.SignJwtRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignJwtRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignJwtRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.credentials.v1.SignJwtRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.credentials.v1.SignJwtRequest)
    MergeFrom(*source);
  }
}

void SignJwtRequest::MergeFrom(const SignJwtRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.credentials.v1.SignJwtRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  delegates_.MergeFrom(from.delegates_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.payload().size() > 0) {
    set_payload(from.payload());
  }
}

void SignJwtRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.credentials.v1.SignJwtRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignJwtRequest::CopyFrom(const SignJwtRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.credentials.v1.SignJwtRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignJwtRequest::IsInitialized() const {
  return true;
}

void SignJwtRequest::Swap(SignJwtRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SignJwtRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SignJwtRequest::UnsafeArenaSwap(SignJwtRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SignJwtRequest::InternalSwap(SignJwtRequest* other) {
  using std::swap;
  delegates_.InternalSwap(CastToBase(&other->delegates_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignJwtRequest::GetMetadata() const {
  protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignJwtResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignJwtResponse::kKeyIdFieldNumber;
const int SignJwtResponse::kSignedJwtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignJwtResponse::SignJwtResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_SignJwtResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.credentials.v1.SignJwtResponse)
}
SignJwtResponse::SignJwtResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_SignJwtResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.credentials.v1.SignJwtResponse)
}
SignJwtResponse::SignJwtResponse(const SignJwtResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id(),
      GetArenaNoVirtual());
  }
  signed_jwt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signed_jwt().size() > 0) {
    signed_jwt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_jwt(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.iam.credentials.v1.SignJwtResponse)
}

void SignJwtResponse::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signed_jwt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignJwtResponse::~SignJwtResponse() {
  // @@protoc_insertion_point(destructor:google.iam.credentials.v1.SignJwtResponse)
  SharedDtor();
}

void SignJwtResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signed_jwt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignJwtResponse::ArenaDtor(void* object) {
  SignJwtResponse* _this = reinterpret_cast< SignJwtResponse* >(object);
  (void)_this;
}
void SignJwtResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SignJwtResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignJwtResponse::descriptor() {
  ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignJwtResponse& SignJwtResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_SignJwtResponse.base);
  return *internal_default_instance();
}


void SignJwtResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.credentials.v1.SignJwtResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  signed_jwt_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool SignJwtResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.credentials.v1.SignJwtResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key_id().data(), static_cast<int>(this->key_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.SignJwtResponse.key_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signed_jwt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signed_jwt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signed_jwt().data(), static_cast<int>(this->signed_jwt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.SignJwtResponse.signed_jwt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.credentials.v1.SignJwtResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.credentials.v1.SignJwtResponse)
  return false;
#undef DO_
}

void SignJwtResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.credentials.v1.SignJwtResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), static_cast<int>(this->key_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignJwtResponse.key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key_id(), output);
  }

  // string signed_jwt = 2;
  if (this->signed_jwt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signed_jwt().data(), static_cast<int>(this->signed_jwt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignJwtResponse.signed_jwt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->signed_jwt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.credentials.v1.SignJwtResponse)
}

::google::protobuf::uint8* SignJwtResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.credentials.v1.SignJwtResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), static_cast<int>(this->key_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignJwtResponse.key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key_id(), target);
  }

  // string signed_jwt = 2;
  if (this->signed_jwt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signed_jwt().data(), static_cast<int>(this->signed_jwt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.SignJwtResponse.signed_jwt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->signed_jwt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.credentials.v1.SignJwtResponse)
  return target;
}

size_t SignJwtResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.credentials.v1.SignJwtResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key_id = 1;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_id());
  }

  // string signed_jwt = 2;
  if (this->signed_jwt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signed_jwt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignJwtResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.credentials.v1.SignJwtResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SignJwtResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignJwtResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.credentials.v1.SignJwtResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.credentials.v1.SignJwtResponse)
    MergeFrom(*source);
  }
}

void SignJwtResponse::MergeFrom(const SignJwtResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.credentials.v1.SignJwtResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key_id().size() > 0) {
    set_key_id(from.key_id());
  }
  if (from.signed_jwt().size() > 0) {
    set_signed_jwt(from.signed_jwt());
  }
}

void SignJwtResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.credentials.v1.SignJwtResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignJwtResponse::CopyFrom(const SignJwtResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.credentials.v1.SignJwtResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignJwtResponse::IsInitialized() const {
  return true;
}

void SignJwtResponse::Swap(SignJwtResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SignJwtResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SignJwtResponse::UnsafeArenaSwap(SignJwtResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SignJwtResponse::InternalSwap(SignJwtResponse* other) {
  using std::swap;
  key_id_.Swap(&other->key_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signed_jwt_.Swap(&other->signed_jwt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignJwtResponse::GetMetadata() const {
  protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenerateIdTokenRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateIdTokenRequest::kNameFieldNumber;
const int GenerateIdTokenRequest::kDelegatesFieldNumber;
const int GenerateIdTokenRequest::kAudienceFieldNumber;
const int GenerateIdTokenRequest::kIncludeEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateIdTokenRequest::GenerateIdTokenRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateIdTokenRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.credentials.v1.GenerateIdTokenRequest)
}
GenerateIdTokenRequest::GenerateIdTokenRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  delegates_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateIdTokenRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.credentials.v1.GenerateIdTokenRequest)
}
GenerateIdTokenRequest::GenerateIdTokenRequest(const GenerateIdTokenRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      delegates_(from.delegates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  audience_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audience().size() > 0) {
    audience_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audience(),
      GetArenaNoVirtual());
  }
  include_email_ = from.include_email_;
  // @@protoc_insertion_point(copy_constructor:google.iam.credentials.v1.GenerateIdTokenRequest)
}

void GenerateIdTokenRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audience_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  include_email_ = false;
}

GenerateIdTokenRequest::~GenerateIdTokenRequest() {
  // @@protoc_insertion_point(destructor:google.iam.credentials.v1.GenerateIdTokenRequest)
  SharedDtor();
}

void GenerateIdTokenRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audience_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenerateIdTokenRequest::ArenaDtor(void* object) {
  GenerateIdTokenRequest* _this = reinterpret_cast< GenerateIdTokenRequest* >(object);
  (void)_this;
}
void GenerateIdTokenRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GenerateIdTokenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenerateIdTokenRequest::descriptor() {
  ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenerateIdTokenRequest& GenerateIdTokenRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateIdTokenRequest.base);
  return *internal_default_instance();
}


void GenerateIdTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.credentials.v1.GenerateIdTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delegates_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  audience_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  include_email_ = false;
  _internal_metadata_.Clear();
}

bool GenerateIdTokenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.credentials.v1.GenerateIdTokenRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.GenerateIdTokenRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string delegates = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_delegates()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->delegates(this->delegates_size() - 1).data(),
            static_cast<int>(this->delegates(this->delegates_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.GenerateIdTokenRequest.delegates"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string audience = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_audience()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audience().data(), static_cast<int>(this->audience().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.GenerateIdTokenRequest.audience"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool include_email = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_email_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.credentials.v1.GenerateIdTokenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.credentials.v1.GenerateIdTokenRequest)
  return false;
#undef DO_
}

void GenerateIdTokenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.credentials.v1.GenerateIdTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdTokenRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string delegates = 2;
  for (int i = 0, n = this->delegates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delegates(i).data(), static_cast<int>(this->delegates(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdTokenRequest.delegates");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->delegates(i), output);
  }

  // string audience = 3;
  if (this->audience().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audience().data(), static_cast<int>(this->audience().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdTokenRequest.audience");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->audience(), output);
  }

  // bool include_email = 4;
  if (this->include_email() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->include_email(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.credentials.v1.GenerateIdTokenRequest)
}

::google::protobuf::uint8* GenerateIdTokenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.credentials.v1.GenerateIdTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdTokenRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string delegates = 2;
  for (int i = 0, n = this->delegates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delegates(i).data(), static_cast<int>(this->delegates(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdTokenRequest.delegates");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->delegates(i), target);
  }

  // string audience = 3;
  if (this->audience().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audience().data(), static_cast<int>(this->audience().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdTokenRequest.audience");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->audience(), target);
  }

  // bool include_email = 4;
  if (this->include_email() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->include_email(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.credentials.v1.GenerateIdTokenRequest)
  return target;
}

size_t GenerateIdTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.credentials.v1.GenerateIdTokenRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string delegates = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->delegates_size());
  for (int i = 0, n = this->delegates_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->delegates(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string audience = 3;
  if (this->audience().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->audience());
  }

  // bool include_email = 4;
  if (this->include_email() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateIdTokenRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.credentials.v1.GenerateIdTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateIdTokenRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenerateIdTokenRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.credentials.v1.GenerateIdTokenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.credentials.v1.GenerateIdTokenRequest)
    MergeFrom(*source);
  }
}

void GenerateIdTokenRequest::MergeFrom(const GenerateIdTokenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.credentials.v1.GenerateIdTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  delegates_.MergeFrom(from.delegates_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.audience().size() > 0) {
    set_audience(from.audience());
  }
  if (from.include_email() != 0) {
    set_include_email(from.include_email());
  }
}

void GenerateIdTokenRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.credentials.v1.GenerateIdTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateIdTokenRequest::CopyFrom(const GenerateIdTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.credentials.v1.GenerateIdTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateIdTokenRequest::IsInitialized() const {
  return true;
}

void GenerateIdTokenRequest::Swap(GenerateIdTokenRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GenerateIdTokenRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GenerateIdTokenRequest::UnsafeArenaSwap(GenerateIdTokenRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GenerateIdTokenRequest::InternalSwap(GenerateIdTokenRequest* other) {
  using std::swap;
  delegates_.InternalSwap(CastToBase(&other->delegates_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  audience_.Swap(&other->audience_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(include_email_, other->include_email_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenerateIdTokenRequest::GetMetadata() const {
  protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenerateIdTokenResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateIdTokenResponse::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateIdTokenResponse::GenerateIdTokenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateIdTokenResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.credentials.v1.GenerateIdTokenResponse)
}
GenerateIdTokenResponse::GenerateIdTokenResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateIdTokenResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.credentials.v1.GenerateIdTokenResponse)
}
GenerateIdTokenResponse::GenerateIdTokenResponse(const GenerateIdTokenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.iam.credentials.v1.GenerateIdTokenResponse)
}

void GenerateIdTokenResponse::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GenerateIdTokenResponse::~GenerateIdTokenResponse() {
  // @@protoc_insertion_point(destructor:google.iam.credentials.v1.GenerateIdTokenResponse)
  SharedDtor();
}

void GenerateIdTokenResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenerateIdTokenResponse::ArenaDtor(void* object) {
  GenerateIdTokenResponse* _this = reinterpret_cast< GenerateIdTokenResponse* >(object);
  (void)_this;
}
void GenerateIdTokenResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GenerateIdTokenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenerateIdTokenResponse::descriptor() {
  ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenerateIdTokenResponse& GenerateIdTokenResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateIdTokenResponse.base);
  return *internal_default_instance();
}


void GenerateIdTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.credentials.v1.GenerateIdTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GenerateIdTokenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.credentials.v1.GenerateIdTokenResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.GenerateIdTokenResponse.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.credentials.v1.GenerateIdTokenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.credentials.v1.GenerateIdTokenResponse)
  return false;
#undef DO_
}

void GenerateIdTokenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.credentials.v1.GenerateIdTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdTokenResponse.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.credentials.v1.GenerateIdTokenResponse)
}

::google::protobuf::uint8* GenerateIdTokenResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.credentials.v1.GenerateIdTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdTokenResponse.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.credentials.v1.GenerateIdTokenResponse)
  return target;
}

size_t GenerateIdTokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.credentials.v1.GenerateIdTokenResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateIdTokenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.credentials.v1.GenerateIdTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateIdTokenResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenerateIdTokenResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.credentials.v1.GenerateIdTokenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.credentials.v1.GenerateIdTokenResponse)
    MergeFrom(*source);
  }
}

void GenerateIdTokenResponse::MergeFrom(const GenerateIdTokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.credentials.v1.GenerateIdTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    set_token(from.token());
  }
}

void GenerateIdTokenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.credentials.v1.GenerateIdTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateIdTokenResponse::CopyFrom(const GenerateIdTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.credentials.v1.GenerateIdTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateIdTokenResponse::IsInitialized() const {
  return true;
}

void GenerateIdTokenResponse::Swap(GenerateIdTokenResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GenerateIdTokenResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GenerateIdTokenResponse::UnsafeArenaSwap(GenerateIdTokenResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GenerateIdTokenResponse::InternalSwap(GenerateIdTokenResponse* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenerateIdTokenResponse::GetMetadata() const {
  protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenerateIdentityBindingAccessTokenRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateIdentityBindingAccessTokenRequest::kNameFieldNumber;
const int GenerateIdentityBindingAccessTokenRequest::kScopeFieldNumber;
const int GenerateIdentityBindingAccessTokenRequest::kJwtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateIdentityBindingAccessTokenRequest::GenerateIdentityBindingAccessTokenRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateIdentityBindingAccessTokenRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
}
GenerateIdentityBindingAccessTokenRequest::GenerateIdentityBindingAccessTokenRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  scope_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateIdentityBindingAccessTokenRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
}
GenerateIdentityBindingAccessTokenRequest::GenerateIdentityBindingAccessTokenRequest(const GenerateIdentityBindingAccessTokenRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scope_(from.scope_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  jwt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jwt().size() > 0) {
    jwt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jwt(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
}

void GenerateIdentityBindingAccessTokenRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jwt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GenerateIdentityBindingAccessTokenRequest::~GenerateIdentityBindingAccessTokenRequest() {
  // @@protoc_insertion_point(destructor:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
  SharedDtor();
}

void GenerateIdentityBindingAccessTokenRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jwt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenerateIdentityBindingAccessTokenRequest::ArenaDtor(void* object) {
  GenerateIdentityBindingAccessTokenRequest* _this = reinterpret_cast< GenerateIdentityBindingAccessTokenRequest* >(object);
  (void)_this;
}
void GenerateIdentityBindingAccessTokenRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GenerateIdentityBindingAccessTokenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenerateIdentityBindingAccessTokenRequest::descriptor() {
  ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenerateIdentityBindingAccessTokenRequest& GenerateIdentityBindingAccessTokenRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateIdentityBindingAccessTokenRequest.base);
  return *internal_default_instance();
}


void GenerateIdentityBindingAccessTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scope_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  jwt_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GenerateIdentityBindingAccessTokenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string scope = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_scope()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scope(this->scope_size() - 1).data(),
            static_cast<int>(this->scope(this->scope_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string jwt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jwt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jwt().data(), static_cast<int>(this->jwt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.jwt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
  return false;
#undef DO_
}

void GenerateIdentityBindingAccessTokenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string scope = 2;
  for (int i = 0, n = this->scope_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scope(i).data(), static_cast<int>(this->scope(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->scope(i), output);
  }

  // string jwt = 3;
  if (this->jwt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jwt().data(), static_cast<int>(this->jwt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.jwt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->jwt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
}

::google::protobuf::uint8* GenerateIdentityBindingAccessTokenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string scope = 2;
  for (int i = 0, n = this->scope_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scope(i).data(), static_cast<int>(this->scope(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->scope(i), target);
  }

  // string jwt = 3;
  if (this->jwt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jwt().data(), static_cast<int>(this->jwt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.jwt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->jwt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
  return target;
}

size_t GenerateIdentityBindingAccessTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string scope = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->scope_size());
  for (int i = 0, n = this->scope_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->scope(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string jwt = 3;
  if (this->jwt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jwt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateIdentityBindingAccessTokenRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateIdentityBindingAccessTokenRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenerateIdentityBindingAccessTokenRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
    MergeFrom(*source);
  }
}

void GenerateIdentityBindingAccessTokenRequest::MergeFrom(const GenerateIdentityBindingAccessTokenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scope_.MergeFrom(from.scope_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.jwt().size() > 0) {
    set_jwt(from.jwt());
  }
}

void GenerateIdentityBindingAccessTokenRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateIdentityBindingAccessTokenRequest::CopyFrom(const GenerateIdentityBindingAccessTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateIdentityBindingAccessTokenRequest::IsInitialized() const {
  return true;
}

void GenerateIdentityBindingAccessTokenRequest::Swap(GenerateIdentityBindingAccessTokenRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GenerateIdentityBindingAccessTokenRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GenerateIdentityBindingAccessTokenRequest::UnsafeArenaSwap(GenerateIdentityBindingAccessTokenRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GenerateIdentityBindingAccessTokenRequest::InternalSwap(GenerateIdentityBindingAccessTokenRequest* other) {
  using std::swap;
  scope_.InternalSwap(CastToBase(&other->scope_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jwt_.Swap(&other->jwt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenerateIdentityBindingAccessTokenRequest::GetMetadata() const {
  protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenerateIdentityBindingAccessTokenResponse::InitAsDefaultInstance() {
  ::google::iam::credentials::v1::_GenerateIdentityBindingAccessTokenResponse_default_instance_._instance.get_mutable()->expire_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void GenerateIdentityBindingAccessTokenResponse::unsafe_arena_set_allocated_expire_time(
    ::google::protobuf::Timestamp* expire_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete expire_time_;
  }
  expire_time_ = expire_time;
  if (expire_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.expire_time)
}
void GenerateIdentityBindingAccessTokenResponse::clear_expire_time() {
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateIdentityBindingAccessTokenResponse::kAccessTokenFieldNumber;
const int GenerateIdentityBindingAccessTokenResponse::kExpireTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateIdentityBindingAccessTokenResponse::GenerateIdentityBindingAccessTokenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateIdentityBindingAccessTokenResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
}
GenerateIdentityBindingAccessTokenResponse::GenerateIdentityBindingAccessTokenResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateIdentityBindingAccessTokenResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
}
GenerateIdentityBindingAccessTokenResponse::GenerateIdentityBindingAccessTokenResponse(const GenerateIdentityBindingAccessTokenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.access_token().size() > 0) {
    access_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token(),
      GetArenaNoVirtual());
  }
  if (from.has_expire_time()) {
    expire_time_ = new ::google::protobuf::Timestamp(*from.expire_time_);
  } else {
    expire_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
}

void GenerateIdentityBindingAccessTokenResponse::SharedCtor() {
  access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expire_time_ = NULL;
}

GenerateIdentityBindingAccessTokenResponse::~GenerateIdentityBindingAccessTokenResponse() {
  // @@protoc_insertion_point(destructor:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
  SharedDtor();
}

void GenerateIdentityBindingAccessTokenResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  access_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expire_time_;
}

void GenerateIdentityBindingAccessTokenResponse::ArenaDtor(void* object) {
  GenerateIdentityBindingAccessTokenResponse* _this = reinterpret_cast< GenerateIdentityBindingAccessTokenResponse* >(object);
  (void)_this;
}
void GenerateIdentityBindingAccessTokenResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GenerateIdentityBindingAccessTokenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenerateIdentityBindingAccessTokenResponse::descriptor() {
  ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenerateIdentityBindingAccessTokenResponse& GenerateIdentityBindingAccessTokenResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::scc_info_GenerateIdentityBindingAccessTokenResponse.base);
  return *internal_default_instance();
}


void GenerateIdentityBindingAccessTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  access_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && expire_time_ != NULL) {
    delete expire_time_;
  }
  expire_time_ = NULL;
  _internal_metadata_.Clear();
}

bool GenerateIdentityBindingAccessTokenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string access_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_token().data(), static_cast<int>(this->access_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.access_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expire_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expire_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
  return false;
#undef DO_
}

void GenerateIdentityBindingAccessTokenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_token = 1;
  if (this->access_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_token().data(), static_cast<int>(this->access_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.access_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->access_token(), output);
  }

  // .google.protobuf.Timestamp expire_time = 2;
  if (this->has_expire_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_expire_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
}

::google::protobuf::uint8* GenerateIdentityBindingAccessTokenResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_token = 1;
  if (this->access_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_token().data(), static_cast<int>(this->access_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.access_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->access_token(), target);
  }

  // .google.protobuf.Timestamp expire_time = 2;
  if (this->has_expire_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_expire_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
  return target;
}

size_t GenerateIdentityBindingAccessTokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string access_token = 1;
  if (this->access_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_token());
  }

  // .google.protobuf.Timestamp expire_time = 2;
  if (this->has_expire_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expire_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateIdentityBindingAccessTokenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateIdentityBindingAccessTokenResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenerateIdentityBindingAccessTokenResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
    MergeFrom(*source);
  }
}

void GenerateIdentityBindingAccessTokenResponse::MergeFrom(const GenerateIdentityBindingAccessTokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.access_token().size() > 0) {
    set_access_token(from.access_token());
  }
  if (from.has_expire_time()) {
    mutable_expire_time()->::google::protobuf::Timestamp::MergeFrom(from.expire_time());
  }
}

void GenerateIdentityBindingAccessTokenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateIdentityBindingAccessTokenResponse::CopyFrom(const GenerateIdentityBindingAccessTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateIdentityBindingAccessTokenResponse::IsInitialized() const {
  return true;
}

void GenerateIdentityBindingAccessTokenResponse::Swap(GenerateIdentityBindingAccessTokenResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GenerateIdentityBindingAccessTokenResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GenerateIdentityBindingAccessTokenResponse::UnsafeArenaSwap(GenerateIdentityBindingAccessTokenResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GenerateIdentityBindingAccessTokenResponse::InternalSwap(GenerateIdentityBindingAccessTokenResponse* other) {
  using std::swap;
  access_token_.Swap(&other->access_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expire_time_, other->expire_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenerateIdentityBindingAccessTokenResponse::GetMetadata() const {
  protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace credentials
}  // namespace iam
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::iam::credentials::v1::GenerateAccessTokenRequest* Arena::CreateMaybeMessage< ::google::iam::credentials::v1::GenerateAccessTokenRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::iam::credentials::v1::GenerateAccessTokenRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::iam::credentials::v1::GenerateAccessTokenResponse* Arena::CreateMaybeMessage< ::google::iam::credentials::v1::GenerateAccessTokenResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::iam::credentials::v1::GenerateAccessTokenResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::iam::credentials::v1::SignBlobRequest* Arena::CreateMaybeMessage< ::google::iam::credentials::v1::SignBlobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::iam::credentials::v1::SignBlobRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::iam::credentials::v1::SignBlobResponse* Arena::CreateMaybeMessage< ::google::iam::credentials::v1::SignBlobResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::iam::credentials::v1::SignBlobResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::iam::credentials::v1::SignJwtRequest* Arena::CreateMaybeMessage< ::google::iam::credentials::v1::SignJwtRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::iam::credentials::v1::SignJwtRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::iam::credentials::v1::SignJwtResponse* Arena::CreateMaybeMessage< ::google::iam::credentials::v1::SignJwtResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::iam::credentials::v1::SignJwtResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::iam::credentials::v1::GenerateIdTokenRequest* Arena::CreateMaybeMessage< ::google::iam::credentials::v1::GenerateIdTokenRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::iam::credentials::v1::GenerateIdTokenRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::iam::credentials::v1::GenerateIdTokenResponse* Arena::CreateMaybeMessage< ::google::iam::credentials::v1::GenerateIdTokenResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::iam::credentials::v1::GenerateIdTokenResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest* Arena::CreateMaybeMessage< ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse* Arena::CreateMaybeMessage< ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
