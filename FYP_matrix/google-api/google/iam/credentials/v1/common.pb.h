// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/iam/credentials/v1/common.proto

#ifndef PROTOBUF_INCLUDED_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto
#define PROTOBUF_INCLUDED_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto 

namespace protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto
namespace google {
namespace iam {
namespace credentials {
namespace v1 {
class GenerateAccessTokenRequest;
class GenerateAccessTokenRequestDefaultTypeInternal;
extern GenerateAccessTokenRequestDefaultTypeInternal _GenerateAccessTokenRequest_default_instance_;
class GenerateAccessTokenResponse;
class GenerateAccessTokenResponseDefaultTypeInternal;
extern GenerateAccessTokenResponseDefaultTypeInternal _GenerateAccessTokenResponse_default_instance_;
class GenerateIdTokenRequest;
class GenerateIdTokenRequestDefaultTypeInternal;
extern GenerateIdTokenRequestDefaultTypeInternal _GenerateIdTokenRequest_default_instance_;
class GenerateIdTokenResponse;
class GenerateIdTokenResponseDefaultTypeInternal;
extern GenerateIdTokenResponseDefaultTypeInternal _GenerateIdTokenResponse_default_instance_;
class GenerateIdentityBindingAccessTokenRequest;
class GenerateIdentityBindingAccessTokenRequestDefaultTypeInternal;
extern GenerateIdentityBindingAccessTokenRequestDefaultTypeInternal _GenerateIdentityBindingAccessTokenRequest_default_instance_;
class GenerateIdentityBindingAccessTokenResponse;
class GenerateIdentityBindingAccessTokenResponseDefaultTypeInternal;
extern GenerateIdentityBindingAccessTokenResponseDefaultTypeInternal _GenerateIdentityBindingAccessTokenResponse_default_instance_;
class SignBlobRequest;
class SignBlobRequestDefaultTypeInternal;
extern SignBlobRequestDefaultTypeInternal _SignBlobRequest_default_instance_;
class SignBlobResponse;
class SignBlobResponseDefaultTypeInternal;
extern SignBlobResponseDefaultTypeInternal _SignBlobResponse_default_instance_;
class SignJwtRequest;
class SignJwtRequestDefaultTypeInternal;
extern SignJwtRequestDefaultTypeInternal _SignJwtRequest_default_instance_;
class SignJwtResponse;
class SignJwtResponseDefaultTypeInternal;
extern SignJwtResponseDefaultTypeInternal _SignJwtResponse_default_instance_;
}  // namespace v1
}  // namespace credentials
}  // namespace iam
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::iam::credentials::v1::GenerateAccessTokenRequest* Arena::CreateMaybeMessage<::google::iam::credentials::v1::GenerateAccessTokenRequest>(Arena*);
template<> ::google::iam::credentials::v1::GenerateAccessTokenResponse* Arena::CreateMaybeMessage<::google::iam::credentials::v1::GenerateAccessTokenResponse>(Arena*);
template<> ::google::iam::credentials::v1::GenerateIdTokenRequest* Arena::CreateMaybeMessage<::google::iam::credentials::v1::GenerateIdTokenRequest>(Arena*);
template<> ::google::iam::credentials::v1::GenerateIdTokenResponse* Arena::CreateMaybeMessage<::google::iam::credentials::v1::GenerateIdTokenResponse>(Arena*);
template<> ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest* Arena::CreateMaybeMessage<::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenRequest>(Arena*);
template<> ::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse* Arena::CreateMaybeMessage<::google::iam::credentials::v1::GenerateIdentityBindingAccessTokenResponse>(Arena*);
template<> ::google::iam::credentials::v1::SignBlobRequest* Arena::CreateMaybeMessage<::google::iam::credentials::v1::SignBlobRequest>(Arena*);
template<> ::google::iam::credentials::v1::SignBlobResponse* Arena::CreateMaybeMessage<::google::iam::credentials::v1::SignBlobResponse>(Arena*);
template<> ::google::iam::credentials::v1::SignJwtRequest* Arena::CreateMaybeMessage<::google::iam::credentials::v1::SignJwtRequest>(Arena*);
template<> ::google::iam::credentials::v1::SignJwtResponse* Arena::CreateMaybeMessage<::google::iam::credentials::v1::SignJwtResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace iam {
namespace credentials {
namespace v1 {

// ===================================================================

class GenerateAccessTokenRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.credentials.v1.GenerateAccessTokenRequest) */ {
 public:
  GenerateAccessTokenRequest();
  virtual ~GenerateAccessTokenRequest();

  GenerateAccessTokenRequest(const GenerateAccessTokenRequest& from);

  inline GenerateAccessTokenRequest& operator=(const GenerateAccessTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenerateAccessTokenRequest(GenerateAccessTokenRequest&& from) noexcept
    : GenerateAccessTokenRequest() {
    *this = ::std::move(from);
  }

  inline GenerateAccessTokenRequest& operator=(GenerateAccessTokenRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GenerateAccessTokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateAccessTokenRequest* internal_default_instance() {
    return reinterpret_cast<const GenerateAccessTokenRequest*>(
               &_GenerateAccessTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(GenerateAccessTokenRequest* other);
  void Swap(GenerateAccessTokenRequest* other);
  friend void swap(GenerateAccessTokenRequest& a, GenerateAccessTokenRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenerateAccessTokenRequest* New() const final {
    return CreateMaybeMessage<GenerateAccessTokenRequest>(NULL);
  }

  GenerateAccessTokenRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenerateAccessTokenRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenerateAccessTokenRequest& from);
  void MergeFrom(const GenerateAccessTokenRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateAccessTokenRequest* other);
  protected:
  explicit GenerateAccessTokenRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string delegates = 2;
  int delegates_size() const;
  void clear_delegates();
  static const int kDelegatesFieldNumber = 2;
  const ::std::string& delegates(int index) const;
  ::std::string* mutable_delegates(int index);
  void set_delegates(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_delegates(int index, ::std::string&& value);
  #endif
  void set_delegates(int index, const char* value);
  void set_delegates(int index, const char* value, size_t size);
  ::std::string* add_delegates();
  void add_delegates(const ::std::string& value);
  #if LANG_CXX11
  void add_delegates(::std::string&& value);
  #endif
  void add_delegates(const char* value);
  void add_delegates(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& delegates() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_delegates();

  // repeated string scope = 4;
  int scope_size() const;
  void clear_scope();
  static const int kScopeFieldNumber = 4;
  const ::std::string& scope(int index) const;
  ::std::string* mutable_scope(int index);
  void set_scope(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_scope(int index, ::std::string&& value);
  #endif
  void set_scope(int index, const char* value);
  void set_scope(int index, const char* value, size_t size);
  ::std::string* add_scope();
  void add_scope(const ::std::string& value);
  #if LANG_CXX11
  void add_scope(::std::string&& value);
  #endif
  void add_scope(const char* value);
  void add_scope(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& scope() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_scope();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // .google.protobuf.Duration lifetime = 7;
  bool has_lifetime() const;
  void clear_lifetime();
  static const int kLifetimeFieldNumber = 7;
  private:
  const ::google::protobuf::Duration& _internal_lifetime() const;
  public:
  const ::google::protobuf::Duration& lifetime() const;
  ::google::protobuf::Duration* release_lifetime();
  ::google::protobuf::Duration* mutable_lifetime();
  void set_allocated_lifetime(::google::protobuf::Duration* lifetime);
  void unsafe_arena_set_allocated_lifetime(
      ::google::protobuf::Duration* lifetime);
  ::google::protobuf::Duration* unsafe_arena_release_lifetime();

  // @@protoc_insertion_point(class_scope:google.iam.credentials.v1.GenerateAccessTokenRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> delegates_;
  ::google::protobuf::RepeatedPtrField< ::std::string> scope_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::Duration* lifetime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GenerateAccessTokenResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.credentials.v1.GenerateAccessTokenResponse) */ {
 public:
  GenerateAccessTokenResponse();
  virtual ~GenerateAccessTokenResponse();

  GenerateAccessTokenResponse(const GenerateAccessTokenResponse& from);

  inline GenerateAccessTokenResponse& operator=(const GenerateAccessTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenerateAccessTokenResponse(GenerateAccessTokenResponse&& from) noexcept
    : GenerateAccessTokenResponse() {
    *this = ::std::move(from);
  }

  inline GenerateAccessTokenResponse& operator=(GenerateAccessTokenResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GenerateAccessTokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateAccessTokenResponse* internal_default_instance() {
    return reinterpret_cast<const GenerateAccessTokenResponse*>(
               &_GenerateAccessTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(GenerateAccessTokenResponse* other);
  void Swap(GenerateAccessTokenResponse* other);
  friend void swap(GenerateAccessTokenResponse& a, GenerateAccessTokenResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenerateAccessTokenResponse* New() const final {
    return CreateMaybeMessage<GenerateAccessTokenResponse>(NULL);
  }

  GenerateAccessTokenResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenerateAccessTokenResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenerateAccessTokenResponse& from);
  void MergeFrom(const GenerateAccessTokenResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateAccessTokenResponse* other);
  protected:
  explicit GenerateAccessTokenResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string access_token = 1;
  void clear_access_token();
  static const int kAccessTokenFieldNumber = 1;
  const ::std::string& access_token() const;
  void set_access_token(const ::std::string& value);
  #if LANG_CXX11
  void set_access_token(::std::string&& value);
  #endif
  void set_access_token(const char* value);
  void set_access_token(const char* value, size_t size);
  ::std::string* mutable_access_token();
  ::std::string* release_access_token();
  void set_allocated_access_token(::std::string* access_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_access_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_access_token(
      ::std::string* access_token);

  // .google.protobuf.Timestamp expire_time = 3;
  bool has_expire_time() const;
  void clear_expire_time();
  static const int kExpireTimeFieldNumber = 3;
  private:
  const ::google::protobuf::Timestamp& _internal_expire_time() const;
  public:
  const ::google::protobuf::Timestamp& expire_time() const;
  ::google::protobuf::Timestamp* release_expire_time();
  ::google::protobuf::Timestamp* mutable_expire_time();
  void set_allocated_expire_time(::google::protobuf::Timestamp* expire_time);
  void unsafe_arena_set_allocated_expire_time(
      ::google::protobuf::Timestamp* expire_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_expire_time();

  // @@protoc_insertion_point(class_scope:google.iam.credentials.v1.GenerateAccessTokenResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr access_token_;
  ::google::protobuf::Timestamp* expire_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignBlobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.credentials.v1.SignBlobRequest) */ {
 public:
  SignBlobRequest();
  virtual ~SignBlobRequest();

  SignBlobRequest(const SignBlobRequest& from);

  inline SignBlobRequest& operator=(const SignBlobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignBlobRequest(SignBlobRequest&& from) noexcept
    : SignBlobRequest() {
    *this = ::std::move(from);
  }

  inline SignBlobRequest& operator=(SignBlobRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignBlobRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignBlobRequest* internal_default_instance() {
    return reinterpret_cast<const SignBlobRequest*>(
               &_SignBlobRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(SignBlobRequest* other);
  void Swap(SignBlobRequest* other);
  friend void swap(SignBlobRequest& a, SignBlobRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignBlobRequest* New() const final {
    return CreateMaybeMessage<SignBlobRequest>(NULL);
  }

  SignBlobRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignBlobRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignBlobRequest& from);
  void MergeFrom(const SignBlobRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignBlobRequest* other);
  protected:
  explicit SignBlobRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string delegates = 3;
  int delegates_size() const;
  void clear_delegates();
  static const int kDelegatesFieldNumber = 3;
  const ::std::string& delegates(int index) const;
  ::std::string* mutable_delegates(int index);
  void set_delegates(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_delegates(int index, ::std::string&& value);
  #endif
  void set_delegates(int index, const char* value);
  void set_delegates(int index, const char* value, size_t size);
  ::std::string* add_delegates();
  void add_delegates(const ::std::string& value);
  #if LANG_CXX11
  void add_delegates(::std::string&& value);
  #endif
  void add_delegates(const char* value);
  void add_delegates(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& delegates() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_delegates();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // bytes payload = 5;
  void clear_payload();
  static const int kPayloadFieldNumber = 5;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_payload();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_payload(
      ::std::string* payload);

  // @@protoc_insertion_point(class_scope:google.iam.credentials.v1.SignBlobRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> delegates_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignBlobResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.credentials.v1.SignBlobResponse) */ {
 public:
  SignBlobResponse();
  virtual ~SignBlobResponse();

  SignBlobResponse(const SignBlobResponse& from);

  inline SignBlobResponse& operator=(const SignBlobResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignBlobResponse(SignBlobResponse&& from) noexcept
    : SignBlobResponse() {
    *this = ::std::move(from);
  }

  inline SignBlobResponse& operator=(SignBlobResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignBlobResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignBlobResponse* internal_default_instance() {
    return reinterpret_cast<const SignBlobResponse*>(
               &_SignBlobResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(SignBlobResponse* other);
  void Swap(SignBlobResponse* other);
  friend void swap(SignBlobResponse& a, SignBlobResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignBlobResponse* New() const final {
    return CreateMaybeMessage<SignBlobResponse>(NULL);
  }

  SignBlobResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignBlobResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignBlobResponse& from);
  void MergeFrom(const SignBlobResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignBlobResponse* other);
  protected:
  explicit SignBlobResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const char* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_key_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_key_id(
      ::std::string* key_id);

  // bytes signed_blob = 4;
  void clear_signed_blob();
  static const int kSignedBlobFieldNumber = 4;
  const ::std::string& signed_blob() const;
  void set_signed_blob(const ::std::string& value);
  #if LANG_CXX11
  void set_signed_blob(::std::string&& value);
  #endif
  void set_signed_blob(const char* value);
  void set_signed_blob(const void* value, size_t size);
  ::std::string* mutable_signed_blob();
  ::std::string* release_signed_blob();
  void set_allocated_signed_blob(::std::string* signed_blob);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_signed_blob();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_signed_blob(
      ::std::string* signed_blob);

  // @@protoc_insertion_point(class_scope:google.iam.credentials.v1.SignBlobResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  ::google::protobuf::internal::ArenaStringPtr signed_blob_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignJwtRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.credentials.v1.SignJwtRequest) */ {
 public:
  SignJwtRequest();
  virtual ~SignJwtRequest();

  SignJwtRequest(const SignJwtRequest& from);

  inline SignJwtRequest& operator=(const SignJwtRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignJwtRequest(SignJwtRequest&& from) noexcept
    : SignJwtRequest() {
    *this = ::std::move(from);
  }

  inline SignJwtRequest& operator=(SignJwtRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignJwtRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignJwtRequest* internal_default_instance() {
    return reinterpret_cast<const SignJwtRequest*>(
               &_SignJwtRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(SignJwtRequest* other);
  void Swap(SignJwtRequest* other);
  friend void swap(SignJwtRequest& a, SignJwtRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignJwtRequest* New() const final {
    return CreateMaybeMessage<SignJwtRequest>(NULL);
  }

  SignJwtRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignJwtRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignJwtRequest& from);
  void MergeFrom(const SignJwtRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignJwtRequest* other);
  protected:
  explicit SignJwtRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string delegates = 3;
  int delegates_size() const;
  void clear_delegates();
  static const int kDelegatesFieldNumber = 3;
  const ::std::string& delegates(int index) const;
  ::std::string* mutable_delegates(int index);
  void set_delegates(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_delegates(int index, ::std::string&& value);
  #endif
  void set_delegates(int index, const char* value);
  void set_delegates(int index, const char* value, size_t size);
  ::std::string* add_delegates();
  void add_delegates(const ::std::string& value);
  #if LANG_CXX11
  void add_delegates(::std::string&& value);
  #endif
  void add_delegates(const char* value);
  void add_delegates(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& delegates() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_delegates();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string payload = 5;
  void clear_payload();
  static const int kPayloadFieldNumber = 5;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const char* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_payload();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_payload(
      ::std::string* payload);

  // @@protoc_insertion_point(class_scope:google.iam.credentials.v1.SignJwtRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> delegates_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignJwtResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.credentials.v1.SignJwtResponse) */ {
 public:
  SignJwtResponse();
  virtual ~SignJwtResponse();

  SignJwtResponse(const SignJwtResponse& from);

  inline SignJwtResponse& operator=(const SignJwtResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignJwtResponse(SignJwtResponse&& from) noexcept
    : SignJwtResponse() {
    *this = ::std::move(from);
  }

  inline SignJwtResponse& operator=(SignJwtResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignJwtResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignJwtResponse* internal_default_instance() {
    return reinterpret_cast<const SignJwtResponse*>(
               &_SignJwtResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(SignJwtResponse* other);
  void Swap(SignJwtResponse* other);
  friend void swap(SignJwtResponse& a, SignJwtResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignJwtResponse* New() const final {
    return CreateMaybeMessage<SignJwtResponse>(NULL);
  }

  SignJwtResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignJwtResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignJwtResponse& from);
  void MergeFrom(const SignJwtResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignJwtResponse* other);
  protected:
  explicit SignJwtResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const char* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_key_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_key_id(
      ::std::string* key_id);

  // string signed_jwt = 2;
  void clear_signed_jwt();
  static const int kSignedJwtFieldNumber = 2;
  const ::std::string& signed_jwt() const;
  void set_signed_jwt(const ::std::string& value);
  #if LANG_CXX11
  void set_signed_jwt(::std::string&& value);
  #endif
  void set_signed_jwt(const char* value);
  void set_signed_jwt(const char* value, size_t size);
  ::std::string* mutable_signed_jwt();
  ::std::string* release_signed_jwt();
  void set_allocated_signed_jwt(::std::string* signed_jwt);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_signed_jwt();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_signed_jwt(
      ::std::string* signed_jwt);

  // @@protoc_insertion_point(class_scope:google.iam.credentials.v1.SignJwtResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  ::google::protobuf::internal::ArenaStringPtr signed_jwt_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GenerateIdTokenRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.credentials.v1.GenerateIdTokenRequest) */ {
 public:
  GenerateIdTokenRequest();
  virtual ~GenerateIdTokenRequest();

  GenerateIdTokenRequest(const GenerateIdTokenRequest& from);

  inline GenerateIdTokenRequest& operator=(const GenerateIdTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenerateIdTokenRequest(GenerateIdTokenRequest&& from) noexcept
    : GenerateIdTokenRequest() {
    *this = ::std::move(from);
  }

  inline GenerateIdTokenRequest& operator=(GenerateIdTokenRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GenerateIdTokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateIdTokenRequest* internal_default_instance() {
    return reinterpret_cast<const GenerateIdTokenRequest*>(
               &_GenerateIdTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(GenerateIdTokenRequest* other);
  void Swap(GenerateIdTokenRequest* other);
  friend void swap(GenerateIdTokenRequest& a, GenerateIdTokenRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenerateIdTokenRequest* New() const final {
    return CreateMaybeMessage<GenerateIdTokenRequest>(NULL);
  }

  GenerateIdTokenRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenerateIdTokenRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenerateIdTokenRequest& from);
  void MergeFrom(const GenerateIdTokenRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateIdTokenRequest* other);
  protected:
  explicit GenerateIdTokenRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string delegates = 2;
  int delegates_size() const;
  void clear_delegates();
  static const int kDelegatesFieldNumber = 2;
  const ::std::string& delegates(int index) const;
  ::std::string* mutable_delegates(int index);
  void set_delegates(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_delegates(int index, ::std::string&& value);
  #endif
  void set_delegates(int index, const char* value);
  void set_delegates(int index, const char* value, size_t size);
  ::std::string* add_delegates();
  void add_delegates(const ::std::string& value);
  #if LANG_CXX11
  void add_delegates(::std::string&& value);
  #endif
  void add_delegates(const char* value);
  void add_delegates(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& delegates() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_delegates();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string audience = 3;
  void clear_audience();
  static const int kAudienceFieldNumber = 3;
  const ::std::string& audience() const;
  void set_audience(const ::std::string& value);
  #if LANG_CXX11
  void set_audience(::std::string&& value);
  #endif
  void set_audience(const char* value);
  void set_audience(const char* value, size_t size);
  ::std::string* mutable_audience();
  ::std::string* release_audience();
  void set_allocated_audience(::std::string* audience);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_audience();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_audience(
      ::std::string* audience);

  // bool include_email = 4;
  void clear_include_email();
  static const int kIncludeEmailFieldNumber = 4;
  bool include_email() const;
  void set_include_email(bool value);

  // @@protoc_insertion_point(class_scope:google.iam.credentials.v1.GenerateIdTokenRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> delegates_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr audience_;
  bool include_email_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GenerateIdTokenResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.credentials.v1.GenerateIdTokenResponse) */ {
 public:
  GenerateIdTokenResponse();
  virtual ~GenerateIdTokenResponse();

  GenerateIdTokenResponse(const GenerateIdTokenResponse& from);

  inline GenerateIdTokenResponse& operator=(const GenerateIdTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenerateIdTokenResponse(GenerateIdTokenResponse&& from) noexcept
    : GenerateIdTokenResponse() {
    *this = ::std::move(from);
  }

  inline GenerateIdTokenResponse& operator=(GenerateIdTokenResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GenerateIdTokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateIdTokenResponse* internal_default_instance() {
    return reinterpret_cast<const GenerateIdTokenResponse*>(
               &_GenerateIdTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(GenerateIdTokenResponse* other);
  void Swap(GenerateIdTokenResponse* other);
  friend void swap(GenerateIdTokenResponse& a, GenerateIdTokenResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenerateIdTokenResponse* New() const final {
    return CreateMaybeMessage<GenerateIdTokenResponse>(NULL);
  }

  GenerateIdTokenResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenerateIdTokenResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenerateIdTokenResponse& from);
  void MergeFrom(const GenerateIdTokenResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateIdTokenResponse* other);
  protected:
  explicit GenerateIdTokenResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_token(
      ::std::string* token);

  // @@protoc_insertion_point(class_scope:google.iam.credentials.v1.GenerateIdTokenResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GenerateIdentityBindingAccessTokenRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest) */ {
 public:
  GenerateIdentityBindingAccessTokenRequest();
  virtual ~GenerateIdentityBindingAccessTokenRequest();

  GenerateIdentityBindingAccessTokenRequest(const GenerateIdentityBindingAccessTokenRequest& from);

  inline GenerateIdentityBindingAccessTokenRequest& operator=(const GenerateIdentityBindingAccessTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenerateIdentityBindingAccessTokenRequest(GenerateIdentityBindingAccessTokenRequest&& from) noexcept
    : GenerateIdentityBindingAccessTokenRequest() {
    *this = ::std::move(from);
  }

  inline GenerateIdentityBindingAccessTokenRequest& operator=(GenerateIdentityBindingAccessTokenRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GenerateIdentityBindingAccessTokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateIdentityBindingAccessTokenRequest* internal_default_instance() {
    return reinterpret_cast<const GenerateIdentityBindingAccessTokenRequest*>(
               &_GenerateIdentityBindingAccessTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(GenerateIdentityBindingAccessTokenRequest* other);
  void Swap(GenerateIdentityBindingAccessTokenRequest* other);
  friend void swap(GenerateIdentityBindingAccessTokenRequest& a, GenerateIdentityBindingAccessTokenRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenerateIdentityBindingAccessTokenRequest* New() const final {
    return CreateMaybeMessage<GenerateIdentityBindingAccessTokenRequest>(NULL);
  }

  GenerateIdentityBindingAccessTokenRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenerateIdentityBindingAccessTokenRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenerateIdentityBindingAccessTokenRequest& from);
  void MergeFrom(const GenerateIdentityBindingAccessTokenRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateIdentityBindingAccessTokenRequest* other);
  protected:
  explicit GenerateIdentityBindingAccessTokenRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string scope = 2;
  int scope_size() const;
  void clear_scope();
  static const int kScopeFieldNumber = 2;
  const ::std::string& scope(int index) const;
  ::std::string* mutable_scope(int index);
  void set_scope(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_scope(int index, ::std::string&& value);
  #endif
  void set_scope(int index, const char* value);
  void set_scope(int index, const char* value, size_t size);
  ::std::string* add_scope();
  void add_scope(const ::std::string& value);
  #if LANG_CXX11
  void add_scope(::std::string&& value);
  #endif
  void add_scope(const char* value);
  void add_scope(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& scope() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_scope();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string jwt = 3;
  void clear_jwt();
  static const int kJwtFieldNumber = 3;
  const ::std::string& jwt() const;
  void set_jwt(const ::std::string& value);
  #if LANG_CXX11
  void set_jwt(::std::string&& value);
  #endif
  void set_jwt(const char* value);
  void set_jwt(const char* value, size_t size);
  ::std::string* mutable_jwt();
  ::std::string* release_jwt();
  void set_allocated_jwt(::std::string* jwt);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_jwt();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_jwt(
      ::std::string* jwt);

  // @@protoc_insertion_point(class_scope:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> scope_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr jwt_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GenerateIdentityBindingAccessTokenResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse) */ {
 public:
  GenerateIdentityBindingAccessTokenResponse();
  virtual ~GenerateIdentityBindingAccessTokenResponse();

  GenerateIdentityBindingAccessTokenResponse(const GenerateIdentityBindingAccessTokenResponse& from);

  inline GenerateIdentityBindingAccessTokenResponse& operator=(const GenerateIdentityBindingAccessTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenerateIdentityBindingAccessTokenResponse(GenerateIdentityBindingAccessTokenResponse&& from) noexcept
    : GenerateIdentityBindingAccessTokenResponse() {
    *this = ::std::move(from);
  }

  inline GenerateIdentityBindingAccessTokenResponse& operator=(GenerateIdentityBindingAccessTokenResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GenerateIdentityBindingAccessTokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateIdentityBindingAccessTokenResponse* internal_default_instance() {
    return reinterpret_cast<const GenerateIdentityBindingAccessTokenResponse*>(
               &_GenerateIdentityBindingAccessTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(GenerateIdentityBindingAccessTokenResponse* other);
  void Swap(GenerateIdentityBindingAccessTokenResponse* other);
  friend void swap(GenerateIdentityBindingAccessTokenResponse& a, GenerateIdentityBindingAccessTokenResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenerateIdentityBindingAccessTokenResponse* New() const final {
    return CreateMaybeMessage<GenerateIdentityBindingAccessTokenResponse>(NULL);
  }

  GenerateIdentityBindingAccessTokenResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenerateIdentityBindingAccessTokenResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenerateIdentityBindingAccessTokenResponse& from);
  void MergeFrom(const GenerateIdentityBindingAccessTokenResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateIdentityBindingAccessTokenResponse* other);
  protected:
  explicit GenerateIdentityBindingAccessTokenResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string access_token = 1;
  void clear_access_token();
  static const int kAccessTokenFieldNumber = 1;
  const ::std::string& access_token() const;
  void set_access_token(const ::std::string& value);
  #if LANG_CXX11
  void set_access_token(::std::string&& value);
  #endif
  void set_access_token(const char* value);
  void set_access_token(const char* value, size_t size);
  ::std::string* mutable_access_token();
  ::std::string* release_access_token();
  void set_allocated_access_token(::std::string* access_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_access_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_access_token(
      ::std::string* access_token);

  // .google.protobuf.Timestamp expire_time = 2;
  bool has_expire_time() const;
  void clear_expire_time();
  static const int kExpireTimeFieldNumber = 2;
  private:
  const ::google::protobuf::Timestamp& _internal_expire_time() const;
  public:
  const ::google::protobuf::Timestamp& expire_time() const;
  ::google::protobuf::Timestamp* release_expire_time();
  ::google::protobuf::Timestamp* mutable_expire_time();
  void set_allocated_expire_time(::google::protobuf::Timestamp* expire_time);
  void unsafe_arena_set_allocated_expire_time(
      ::google::protobuf::Timestamp* expire_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_expire_time();

  // @@protoc_insertion_point(class_scope:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr access_token_;
  ::google::protobuf::Timestamp* expire_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GenerateAccessTokenRequest

// string name = 1;
inline void GenerateAccessTokenRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GenerateAccessTokenRequest::name() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateAccessTokenRequest.name)
  return name_.Get();
}
inline void GenerateAccessTokenRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateAccessTokenRequest.name)
}
#if LANG_CXX11
inline void GenerateAccessTokenRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.GenerateAccessTokenRequest.name)
}
#endif
inline void GenerateAccessTokenRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.GenerateAccessTokenRequest.name)
}
inline void GenerateAccessTokenRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.GenerateAccessTokenRequest.name)
}
inline ::std::string* GenerateAccessTokenRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateAccessTokenRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GenerateAccessTokenRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.GenerateAccessTokenRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GenerateAccessTokenRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.GenerateAccessTokenRequest.name)
}
inline ::std::string* GenerateAccessTokenRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.GenerateAccessTokenRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GenerateAccessTokenRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.GenerateAccessTokenRequest.name)
}

// repeated string delegates = 2;
inline int GenerateAccessTokenRequest::delegates_size() const {
  return delegates_.size();
}
inline void GenerateAccessTokenRequest::clear_delegates() {
  delegates_.Clear();
}
inline const ::std::string& GenerateAccessTokenRequest::delegates(int index) const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateAccessTokenRequest.delegates)
  return delegates_.Get(index);
}
inline ::std::string* GenerateAccessTokenRequest::mutable_delegates(int index) {
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateAccessTokenRequest.delegates)
  return delegates_.Mutable(index);
}
inline void GenerateAccessTokenRequest::set_delegates(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateAccessTokenRequest.delegates)
  delegates_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GenerateAccessTokenRequest::set_delegates(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateAccessTokenRequest.delegates)
  delegates_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GenerateAccessTokenRequest::set_delegates(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  delegates_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.GenerateAccessTokenRequest.delegates)
}
inline void GenerateAccessTokenRequest::set_delegates(int index, const char* value, size_t size) {
  delegates_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.GenerateAccessTokenRequest.delegates)
}
inline ::std::string* GenerateAccessTokenRequest::add_delegates() {
  // @@protoc_insertion_point(field_add_mutable:google.iam.credentials.v1.GenerateAccessTokenRequest.delegates)
  return delegates_.Add();
}
inline void GenerateAccessTokenRequest::add_delegates(const ::std::string& value) {
  delegates_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.iam.credentials.v1.GenerateAccessTokenRequest.delegates)
}
#if LANG_CXX11
inline void GenerateAccessTokenRequest::add_delegates(::std::string&& value) {
  delegates_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.iam.credentials.v1.GenerateAccessTokenRequest.delegates)
}
#endif
inline void GenerateAccessTokenRequest::add_delegates(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  delegates_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.iam.credentials.v1.GenerateAccessTokenRequest.delegates)
}
inline void GenerateAccessTokenRequest::add_delegates(const char* value, size_t size) {
  delegates_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.iam.credentials.v1.GenerateAccessTokenRequest.delegates)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GenerateAccessTokenRequest::delegates() const {
  // @@protoc_insertion_point(field_list:google.iam.credentials.v1.GenerateAccessTokenRequest.delegates)
  return delegates_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GenerateAccessTokenRequest::mutable_delegates() {
  // @@protoc_insertion_point(field_mutable_list:google.iam.credentials.v1.GenerateAccessTokenRequest.delegates)
  return &delegates_;
}

// repeated string scope = 4;
inline int GenerateAccessTokenRequest::scope_size() const {
  return scope_.size();
}
inline void GenerateAccessTokenRequest::clear_scope() {
  scope_.Clear();
}
inline const ::std::string& GenerateAccessTokenRequest::scope(int index) const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateAccessTokenRequest.scope)
  return scope_.Get(index);
}
inline ::std::string* GenerateAccessTokenRequest::mutable_scope(int index) {
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateAccessTokenRequest.scope)
  return scope_.Mutable(index);
}
inline void GenerateAccessTokenRequest::set_scope(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateAccessTokenRequest.scope)
  scope_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GenerateAccessTokenRequest::set_scope(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateAccessTokenRequest.scope)
  scope_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GenerateAccessTokenRequest::set_scope(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  scope_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.GenerateAccessTokenRequest.scope)
}
inline void GenerateAccessTokenRequest::set_scope(int index, const char* value, size_t size) {
  scope_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.GenerateAccessTokenRequest.scope)
}
inline ::std::string* GenerateAccessTokenRequest::add_scope() {
  // @@protoc_insertion_point(field_add_mutable:google.iam.credentials.v1.GenerateAccessTokenRequest.scope)
  return scope_.Add();
}
inline void GenerateAccessTokenRequest::add_scope(const ::std::string& value) {
  scope_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.iam.credentials.v1.GenerateAccessTokenRequest.scope)
}
#if LANG_CXX11
inline void GenerateAccessTokenRequest::add_scope(::std::string&& value) {
  scope_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.iam.credentials.v1.GenerateAccessTokenRequest.scope)
}
#endif
inline void GenerateAccessTokenRequest::add_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  scope_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.iam.credentials.v1.GenerateAccessTokenRequest.scope)
}
inline void GenerateAccessTokenRequest::add_scope(const char* value, size_t size) {
  scope_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.iam.credentials.v1.GenerateAccessTokenRequest.scope)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GenerateAccessTokenRequest::scope() const {
  // @@protoc_insertion_point(field_list:google.iam.credentials.v1.GenerateAccessTokenRequest.scope)
  return scope_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GenerateAccessTokenRequest::mutable_scope() {
  // @@protoc_insertion_point(field_mutable_list:google.iam.credentials.v1.GenerateAccessTokenRequest.scope)
  return &scope_;
}

// .google.protobuf.Duration lifetime = 7;
inline bool GenerateAccessTokenRequest::has_lifetime() const {
  return this != internal_default_instance() && lifetime_ != NULL;
}
inline const ::google::protobuf::Duration& GenerateAccessTokenRequest::_internal_lifetime() const {
  return *lifetime_;
}
inline const ::google::protobuf::Duration& GenerateAccessTokenRequest::lifetime() const {
  const ::google::protobuf::Duration* p = lifetime_;
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateAccessTokenRequest.lifetime)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* GenerateAccessTokenRequest::release_lifetime() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.GenerateAccessTokenRequest.lifetime)
  
  ::google::protobuf::Duration* temp = lifetime_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  lifetime_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* GenerateAccessTokenRequest::unsafe_arena_release_lifetime() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.GenerateAccessTokenRequest.lifetime)
  
  ::google::protobuf::Duration* temp = lifetime_;
  lifetime_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* GenerateAccessTokenRequest::mutable_lifetime() {
  
  if (lifetime_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    lifetime_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateAccessTokenRequest.lifetime)
  return lifetime_;
}
inline void GenerateAccessTokenRequest::set_allocated_lifetime(::google::protobuf::Duration* lifetime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(lifetime_);
  }
  if (lifetime) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(lifetime)->GetArena();
    if (message_arena != submessage_arena) {
      lifetime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lifetime, submessage_arena);
    }
    
  } else {
    
  }
  lifetime_ = lifetime;
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.GenerateAccessTokenRequest.lifetime)
}

// -------------------------------------------------------------------

// GenerateAccessTokenResponse

// string access_token = 1;
inline void GenerateAccessTokenResponse::clear_access_token() {
  access_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GenerateAccessTokenResponse::access_token() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateAccessTokenResponse.access_token)
  return access_token_.Get();
}
inline void GenerateAccessTokenResponse::set_access_token(const ::std::string& value) {
  
  access_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateAccessTokenResponse.access_token)
}
#if LANG_CXX11
inline void GenerateAccessTokenResponse::set_access_token(::std::string&& value) {
  
  access_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.GenerateAccessTokenResponse.access_token)
}
#endif
inline void GenerateAccessTokenResponse::set_access_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  access_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.GenerateAccessTokenResponse.access_token)
}
inline void GenerateAccessTokenResponse::set_access_token(const char* value,
    size_t size) {
  
  access_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.GenerateAccessTokenResponse.access_token)
}
inline ::std::string* GenerateAccessTokenResponse::mutable_access_token() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateAccessTokenResponse.access_token)
  return access_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GenerateAccessTokenResponse::release_access_token() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.GenerateAccessTokenResponse.access_token)
  
  return access_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GenerateAccessTokenResponse::set_allocated_access_token(::std::string* access_token) {
  if (access_token != NULL) {
    
  } else {
    
  }
  access_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.GenerateAccessTokenResponse.access_token)
}
inline ::std::string* GenerateAccessTokenResponse::unsafe_arena_release_access_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.GenerateAccessTokenResponse.access_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return access_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GenerateAccessTokenResponse::unsafe_arena_set_allocated_access_token(
    ::std::string* access_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (access_token != NULL) {
    
  } else {
    
  }
  access_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      access_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.GenerateAccessTokenResponse.access_token)
}

// .google.protobuf.Timestamp expire_time = 3;
inline bool GenerateAccessTokenResponse::has_expire_time() const {
  return this != internal_default_instance() && expire_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& GenerateAccessTokenResponse::_internal_expire_time() const {
  return *expire_time_;
}
inline const ::google::protobuf::Timestamp& GenerateAccessTokenResponse::expire_time() const {
  const ::google::protobuf::Timestamp* p = expire_time_;
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateAccessTokenResponse.expire_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* GenerateAccessTokenResponse::release_expire_time() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.GenerateAccessTokenResponse.expire_time)
  
  ::google::protobuf::Timestamp* temp = expire_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  expire_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* GenerateAccessTokenResponse::unsafe_arena_release_expire_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.GenerateAccessTokenResponse.expire_time)
  
  ::google::protobuf::Timestamp* temp = expire_time_;
  expire_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* GenerateAccessTokenResponse::mutable_expire_time() {
  
  if (expire_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    expire_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateAccessTokenResponse.expire_time)
  return expire_time_;
}
inline void GenerateAccessTokenResponse::set_allocated_expire_time(::google::protobuf::Timestamp* expire_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(expire_time_);
  }
  if (expire_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(expire_time)->GetArena();
    if (message_arena != submessage_arena) {
      expire_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expire_time, submessage_arena);
    }
    
  } else {
    
  }
  expire_time_ = expire_time;
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.GenerateAccessTokenResponse.expire_time)
}

// -------------------------------------------------------------------

// SignBlobRequest

// string name = 1;
inline void SignBlobRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SignBlobRequest::name() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.SignBlobRequest.name)
  return name_.Get();
}
inline void SignBlobRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.SignBlobRequest.name)
}
#if LANG_CXX11
inline void SignBlobRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.SignBlobRequest.name)
}
#endif
inline void SignBlobRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.SignBlobRequest.name)
}
inline void SignBlobRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.SignBlobRequest.name)
}
inline ::std::string* SignBlobRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.SignBlobRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SignBlobRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.SignBlobRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SignBlobRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.SignBlobRequest.name)
}
inline ::std::string* SignBlobRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.SignBlobRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SignBlobRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.SignBlobRequest.name)
}

// repeated string delegates = 3;
inline int SignBlobRequest::delegates_size() const {
  return delegates_.size();
}
inline void SignBlobRequest::clear_delegates() {
  delegates_.Clear();
}
inline const ::std::string& SignBlobRequest::delegates(int index) const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.SignBlobRequest.delegates)
  return delegates_.Get(index);
}
inline ::std::string* SignBlobRequest::mutable_delegates(int index) {
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.SignBlobRequest.delegates)
  return delegates_.Mutable(index);
}
inline void SignBlobRequest::set_delegates(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.SignBlobRequest.delegates)
  delegates_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SignBlobRequest::set_delegates(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.SignBlobRequest.delegates)
  delegates_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SignBlobRequest::set_delegates(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  delegates_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.SignBlobRequest.delegates)
}
inline void SignBlobRequest::set_delegates(int index, const char* value, size_t size) {
  delegates_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.SignBlobRequest.delegates)
}
inline ::std::string* SignBlobRequest::add_delegates() {
  // @@protoc_insertion_point(field_add_mutable:google.iam.credentials.v1.SignBlobRequest.delegates)
  return delegates_.Add();
}
inline void SignBlobRequest::add_delegates(const ::std::string& value) {
  delegates_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.iam.credentials.v1.SignBlobRequest.delegates)
}
#if LANG_CXX11
inline void SignBlobRequest::add_delegates(::std::string&& value) {
  delegates_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.iam.credentials.v1.SignBlobRequest.delegates)
}
#endif
inline void SignBlobRequest::add_delegates(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  delegates_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.iam.credentials.v1.SignBlobRequest.delegates)
}
inline void SignBlobRequest::add_delegates(const char* value, size_t size) {
  delegates_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.iam.credentials.v1.SignBlobRequest.delegates)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SignBlobRequest::delegates() const {
  // @@protoc_insertion_point(field_list:google.iam.credentials.v1.SignBlobRequest.delegates)
  return delegates_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SignBlobRequest::mutable_delegates() {
  // @@protoc_insertion_point(field_mutable_list:google.iam.credentials.v1.SignBlobRequest.delegates)
  return &delegates_;
}

// bytes payload = 5;
inline void SignBlobRequest::clear_payload() {
  payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SignBlobRequest::payload() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.SignBlobRequest.payload)
  return payload_.Get();
}
inline void SignBlobRequest::set_payload(const ::std::string& value) {
  
  payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.SignBlobRequest.payload)
}
#if LANG_CXX11
inline void SignBlobRequest::set_payload(::std::string&& value) {
  
  payload_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.SignBlobRequest.payload)
}
#endif
inline void SignBlobRequest::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.SignBlobRequest.payload)
}
inline void SignBlobRequest::set_payload(const void* value,
    size_t size) {
  
  payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.SignBlobRequest.payload)
}
inline ::std::string* SignBlobRequest::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.SignBlobRequest.payload)
  return payload_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SignBlobRequest::release_payload() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.SignBlobRequest.payload)
  
  return payload_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SignBlobRequest::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.SignBlobRequest.payload)
}
inline ::std::string* SignBlobRequest::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.SignBlobRequest.payload)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return payload_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SignBlobRequest::unsafe_arena_set_allocated_payload(
    ::std::string* payload) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      payload, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.SignBlobRequest.payload)
}

// -------------------------------------------------------------------

// SignBlobResponse

// string key_id = 1;
inline void SignBlobResponse::clear_key_id() {
  key_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SignBlobResponse::key_id() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.SignBlobResponse.key_id)
  return key_id_.Get();
}
inline void SignBlobResponse::set_key_id(const ::std::string& value) {
  
  key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.SignBlobResponse.key_id)
}
#if LANG_CXX11
inline void SignBlobResponse::set_key_id(::std::string&& value) {
  
  key_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.SignBlobResponse.key_id)
}
#endif
inline void SignBlobResponse::set_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.SignBlobResponse.key_id)
}
inline void SignBlobResponse::set_key_id(const char* value,
    size_t size) {
  
  key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.SignBlobResponse.key_id)
}
inline ::std::string* SignBlobResponse::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.SignBlobResponse.key_id)
  return key_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SignBlobResponse::release_key_id() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.SignBlobResponse.key_id)
  
  return key_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SignBlobResponse::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.SignBlobResponse.key_id)
}
inline ::std::string* SignBlobResponse::unsafe_arena_release_key_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.SignBlobResponse.key_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return key_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SignBlobResponse::unsafe_arena_set_allocated_key_id(
    ::std::string* key_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      key_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.SignBlobResponse.key_id)
}

// bytes signed_blob = 4;
inline void SignBlobResponse::clear_signed_blob() {
  signed_blob_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SignBlobResponse::signed_blob() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.SignBlobResponse.signed_blob)
  return signed_blob_.Get();
}
inline void SignBlobResponse::set_signed_blob(const ::std::string& value) {
  
  signed_blob_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.SignBlobResponse.signed_blob)
}
#if LANG_CXX11
inline void SignBlobResponse::set_signed_blob(::std::string&& value) {
  
  signed_blob_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.SignBlobResponse.signed_blob)
}
#endif
inline void SignBlobResponse::set_signed_blob(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signed_blob_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.SignBlobResponse.signed_blob)
}
inline void SignBlobResponse::set_signed_blob(const void* value,
    size_t size) {
  
  signed_blob_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.SignBlobResponse.signed_blob)
}
inline ::std::string* SignBlobResponse::mutable_signed_blob() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.SignBlobResponse.signed_blob)
  return signed_blob_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SignBlobResponse::release_signed_blob() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.SignBlobResponse.signed_blob)
  
  return signed_blob_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SignBlobResponse::set_allocated_signed_blob(::std::string* signed_blob) {
  if (signed_blob != NULL) {
    
  } else {
    
  }
  signed_blob_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signed_blob,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.SignBlobResponse.signed_blob)
}
inline ::std::string* SignBlobResponse::unsafe_arena_release_signed_blob() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.SignBlobResponse.signed_blob)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return signed_blob_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SignBlobResponse::unsafe_arena_set_allocated_signed_blob(
    ::std::string* signed_blob) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (signed_blob != NULL) {
    
  } else {
    
  }
  signed_blob_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      signed_blob, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.SignBlobResponse.signed_blob)
}

// -------------------------------------------------------------------

// SignJwtRequest

// string name = 1;
inline void SignJwtRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SignJwtRequest::name() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.SignJwtRequest.name)
  return name_.Get();
}
inline void SignJwtRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.SignJwtRequest.name)
}
#if LANG_CXX11
inline void SignJwtRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.SignJwtRequest.name)
}
#endif
inline void SignJwtRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.SignJwtRequest.name)
}
inline void SignJwtRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.SignJwtRequest.name)
}
inline ::std::string* SignJwtRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.SignJwtRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SignJwtRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.SignJwtRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SignJwtRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.SignJwtRequest.name)
}
inline ::std::string* SignJwtRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.SignJwtRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SignJwtRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.SignJwtRequest.name)
}

// repeated string delegates = 3;
inline int SignJwtRequest::delegates_size() const {
  return delegates_.size();
}
inline void SignJwtRequest::clear_delegates() {
  delegates_.Clear();
}
inline const ::std::string& SignJwtRequest::delegates(int index) const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.SignJwtRequest.delegates)
  return delegates_.Get(index);
}
inline ::std::string* SignJwtRequest::mutable_delegates(int index) {
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.SignJwtRequest.delegates)
  return delegates_.Mutable(index);
}
inline void SignJwtRequest::set_delegates(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.SignJwtRequest.delegates)
  delegates_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SignJwtRequest::set_delegates(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.SignJwtRequest.delegates)
  delegates_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SignJwtRequest::set_delegates(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  delegates_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.SignJwtRequest.delegates)
}
inline void SignJwtRequest::set_delegates(int index, const char* value, size_t size) {
  delegates_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.SignJwtRequest.delegates)
}
inline ::std::string* SignJwtRequest::add_delegates() {
  // @@protoc_insertion_point(field_add_mutable:google.iam.credentials.v1.SignJwtRequest.delegates)
  return delegates_.Add();
}
inline void SignJwtRequest::add_delegates(const ::std::string& value) {
  delegates_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.iam.credentials.v1.SignJwtRequest.delegates)
}
#if LANG_CXX11
inline void SignJwtRequest::add_delegates(::std::string&& value) {
  delegates_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.iam.credentials.v1.SignJwtRequest.delegates)
}
#endif
inline void SignJwtRequest::add_delegates(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  delegates_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.iam.credentials.v1.SignJwtRequest.delegates)
}
inline void SignJwtRequest::add_delegates(const char* value, size_t size) {
  delegates_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.iam.credentials.v1.SignJwtRequest.delegates)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SignJwtRequest::delegates() const {
  // @@protoc_insertion_point(field_list:google.iam.credentials.v1.SignJwtRequest.delegates)
  return delegates_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SignJwtRequest::mutable_delegates() {
  // @@protoc_insertion_point(field_mutable_list:google.iam.credentials.v1.SignJwtRequest.delegates)
  return &delegates_;
}

// string payload = 5;
inline void SignJwtRequest::clear_payload() {
  payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SignJwtRequest::payload() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.SignJwtRequest.payload)
  return payload_.Get();
}
inline void SignJwtRequest::set_payload(const ::std::string& value) {
  
  payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.SignJwtRequest.payload)
}
#if LANG_CXX11
inline void SignJwtRequest::set_payload(::std::string&& value) {
  
  payload_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.SignJwtRequest.payload)
}
#endif
inline void SignJwtRequest::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.SignJwtRequest.payload)
}
inline void SignJwtRequest::set_payload(const char* value,
    size_t size) {
  
  payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.SignJwtRequest.payload)
}
inline ::std::string* SignJwtRequest::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.SignJwtRequest.payload)
  return payload_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SignJwtRequest::release_payload() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.SignJwtRequest.payload)
  
  return payload_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SignJwtRequest::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.SignJwtRequest.payload)
}
inline ::std::string* SignJwtRequest::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.SignJwtRequest.payload)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return payload_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SignJwtRequest::unsafe_arena_set_allocated_payload(
    ::std::string* payload) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      payload, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.SignJwtRequest.payload)
}

// -------------------------------------------------------------------

// SignJwtResponse

// string key_id = 1;
inline void SignJwtResponse::clear_key_id() {
  key_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SignJwtResponse::key_id() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.SignJwtResponse.key_id)
  return key_id_.Get();
}
inline void SignJwtResponse::set_key_id(const ::std::string& value) {
  
  key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.SignJwtResponse.key_id)
}
#if LANG_CXX11
inline void SignJwtResponse::set_key_id(::std::string&& value) {
  
  key_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.SignJwtResponse.key_id)
}
#endif
inline void SignJwtResponse::set_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.SignJwtResponse.key_id)
}
inline void SignJwtResponse::set_key_id(const char* value,
    size_t size) {
  
  key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.SignJwtResponse.key_id)
}
inline ::std::string* SignJwtResponse::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.SignJwtResponse.key_id)
  return key_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SignJwtResponse::release_key_id() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.SignJwtResponse.key_id)
  
  return key_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SignJwtResponse::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.SignJwtResponse.key_id)
}
inline ::std::string* SignJwtResponse::unsafe_arena_release_key_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.SignJwtResponse.key_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return key_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SignJwtResponse::unsafe_arena_set_allocated_key_id(
    ::std::string* key_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      key_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.SignJwtResponse.key_id)
}

// string signed_jwt = 2;
inline void SignJwtResponse::clear_signed_jwt() {
  signed_jwt_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SignJwtResponse::signed_jwt() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.SignJwtResponse.signed_jwt)
  return signed_jwt_.Get();
}
inline void SignJwtResponse::set_signed_jwt(const ::std::string& value) {
  
  signed_jwt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.SignJwtResponse.signed_jwt)
}
#if LANG_CXX11
inline void SignJwtResponse::set_signed_jwt(::std::string&& value) {
  
  signed_jwt_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.SignJwtResponse.signed_jwt)
}
#endif
inline void SignJwtResponse::set_signed_jwt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signed_jwt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.SignJwtResponse.signed_jwt)
}
inline void SignJwtResponse::set_signed_jwt(const char* value,
    size_t size) {
  
  signed_jwt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.SignJwtResponse.signed_jwt)
}
inline ::std::string* SignJwtResponse::mutable_signed_jwt() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.SignJwtResponse.signed_jwt)
  return signed_jwt_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SignJwtResponse::release_signed_jwt() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.SignJwtResponse.signed_jwt)
  
  return signed_jwt_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SignJwtResponse::set_allocated_signed_jwt(::std::string* signed_jwt) {
  if (signed_jwt != NULL) {
    
  } else {
    
  }
  signed_jwt_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signed_jwt,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.SignJwtResponse.signed_jwt)
}
inline ::std::string* SignJwtResponse::unsafe_arena_release_signed_jwt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.SignJwtResponse.signed_jwt)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return signed_jwt_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SignJwtResponse::unsafe_arena_set_allocated_signed_jwt(
    ::std::string* signed_jwt) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (signed_jwt != NULL) {
    
  } else {
    
  }
  signed_jwt_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      signed_jwt, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.SignJwtResponse.signed_jwt)
}

// -------------------------------------------------------------------

// GenerateIdTokenRequest

// string name = 1;
inline void GenerateIdTokenRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GenerateIdTokenRequest::name() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateIdTokenRequest.name)
  return name_.Get();
}
inline void GenerateIdTokenRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateIdTokenRequest.name)
}
#if LANG_CXX11
inline void GenerateIdTokenRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.GenerateIdTokenRequest.name)
}
#endif
inline void GenerateIdTokenRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.GenerateIdTokenRequest.name)
}
inline void GenerateIdTokenRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.GenerateIdTokenRequest.name)
}
inline ::std::string* GenerateIdTokenRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateIdTokenRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GenerateIdTokenRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.GenerateIdTokenRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GenerateIdTokenRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.GenerateIdTokenRequest.name)
}
inline ::std::string* GenerateIdTokenRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.GenerateIdTokenRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GenerateIdTokenRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.GenerateIdTokenRequest.name)
}

// repeated string delegates = 2;
inline int GenerateIdTokenRequest::delegates_size() const {
  return delegates_.size();
}
inline void GenerateIdTokenRequest::clear_delegates() {
  delegates_.Clear();
}
inline const ::std::string& GenerateIdTokenRequest::delegates(int index) const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateIdTokenRequest.delegates)
  return delegates_.Get(index);
}
inline ::std::string* GenerateIdTokenRequest::mutable_delegates(int index) {
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateIdTokenRequest.delegates)
  return delegates_.Mutable(index);
}
inline void GenerateIdTokenRequest::set_delegates(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateIdTokenRequest.delegates)
  delegates_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GenerateIdTokenRequest::set_delegates(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateIdTokenRequest.delegates)
  delegates_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GenerateIdTokenRequest::set_delegates(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  delegates_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.GenerateIdTokenRequest.delegates)
}
inline void GenerateIdTokenRequest::set_delegates(int index, const char* value, size_t size) {
  delegates_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.GenerateIdTokenRequest.delegates)
}
inline ::std::string* GenerateIdTokenRequest::add_delegates() {
  // @@protoc_insertion_point(field_add_mutable:google.iam.credentials.v1.GenerateIdTokenRequest.delegates)
  return delegates_.Add();
}
inline void GenerateIdTokenRequest::add_delegates(const ::std::string& value) {
  delegates_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.iam.credentials.v1.GenerateIdTokenRequest.delegates)
}
#if LANG_CXX11
inline void GenerateIdTokenRequest::add_delegates(::std::string&& value) {
  delegates_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.iam.credentials.v1.GenerateIdTokenRequest.delegates)
}
#endif
inline void GenerateIdTokenRequest::add_delegates(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  delegates_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.iam.credentials.v1.GenerateIdTokenRequest.delegates)
}
inline void GenerateIdTokenRequest::add_delegates(const char* value, size_t size) {
  delegates_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.iam.credentials.v1.GenerateIdTokenRequest.delegates)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GenerateIdTokenRequest::delegates() const {
  // @@protoc_insertion_point(field_list:google.iam.credentials.v1.GenerateIdTokenRequest.delegates)
  return delegates_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GenerateIdTokenRequest::mutable_delegates() {
  // @@protoc_insertion_point(field_mutable_list:google.iam.credentials.v1.GenerateIdTokenRequest.delegates)
  return &delegates_;
}

// string audience = 3;
inline void GenerateIdTokenRequest::clear_audience() {
  audience_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GenerateIdTokenRequest::audience() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateIdTokenRequest.audience)
  return audience_.Get();
}
inline void GenerateIdTokenRequest::set_audience(const ::std::string& value) {
  
  audience_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateIdTokenRequest.audience)
}
#if LANG_CXX11
inline void GenerateIdTokenRequest::set_audience(::std::string&& value) {
  
  audience_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.GenerateIdTokenRequest.audience)
}
#endif
inline void GenerateIdTokenRequest::set_audience(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  audience_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.GenerateIdTokenRequest.audience)
}
inline void GenerateIdTokenRequest::set_audience(const char* value,
    size_t size) {
  
  audience_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.GenerateIdTokenRequest.audience)
}
inline ::std::string* GenerateIdTokenRequest::mutable_audience() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateIdTokenRequest.audience)
  return audience_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GenerateIdTokenRequest::release_audience() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.GenerateIdTokenRequest.audience)
  
  return audience_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GenerateIdTokenRequest::set_allocated_audience(::std::string* audience) {
  if (audience != NULL) {
    
  } else {
    
  }
  audience_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), audience,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.GenerateIdTokenRequest.audience)
}
inline ::std::string* GenerateIdTokenRequest::unsafe_arena_release_audience() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.GenerateIdTokenRequest.audience)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return audience_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GenerateIdTokenRequest::unsafe_arena_set_allocated_audience(
    ::std::string* audience) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (audience != NULL) {
    
  } else {
    
  }
  audience_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      audience, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.GenerateIdTokenRequest.audience)
}

// bool include_email = 4;
inline void GenerateIdTokenRequest::clear_include_email() {
  include_email_ = false;
}
inline bool GenerateIdTokenRequest::include_email() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateIdTokenRequest.include_email)
  return include_email_;
}
inline void GenerateIdTokenRequest::set_include_email(bool value) {
  
  include_email_ = value;
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateIdTokenRequest.include_email)
}

// -------------------------------------------------------------------

// GenerateIdTokenResponse

// string token = 1;
inline void GenerateIdTokenResponse::clear_token() {
  token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GenerateIdTokenResponse::token() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateIdTokenResponse.token)
  return token_.Get();
}
inline void GenerateIdTokenResponse::set_token(const ::std::string& value) {
  
  token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateIdTokenResponse.token)
}
#if LANG_CXX11
inline void GenerateIdTokenResponse::set_token(::std::string&& value) {
  
  token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.GenerateIdTokenResponse.token)
}
#endif
inline void GenerateIdTokenResponse::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.GenerateIdTokenResponse.token)
}
inline void GenerateIdTokenResponse::set_token(const char* value,
    size_t size) {
  
  token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.GenerateIdTokenResponse.token)
}
inline ::std::string* GenerateIdTokenResponse::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateIdTokenResponse.token)
  return token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GenerateIdTokenResponse::release_token() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.GenerateIdTokenResponse.token)
  
  return token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GenerateIdTokenResponse::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.GenerateIdTokenResponse.token)
}
inline ::std::string* GenerateIdTokenResponse::unsafe_arena_release_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.GenerateIdTokenResponse.token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GenerateIdTokenResponse::unsafe_arena_set_allocated_token(
    ::std::string* token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (token != NULL) {
    
  } else {
    
  }
  token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.GenerateIdTokenResponse.token)
}

// -------------------------------------------------------------------

// GenerateIdentityBindingAccessTokenRequest

// string name = 1;
inline void GenerateIdentityBindingAccessTokenRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GenerateIdentityBindingAccessTokenRequest::name() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.name)
  return name_.Get();
}
inline void GenerateIdentityBindingAccessTokenRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.name)
}
#if LANG_CXX11
inline void GenerateIdentityBindingAccessTokenRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.name)
}
#endif
inline void GenerateIdentityBindingAccessTokenRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.name)
}
inline void GenerateIdentityBindingAccessTokenRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.name)
}
inline ::std::string* GenerateIdentityBindingAccessTokenRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GenerateIdentityBindingAccessTokenRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GenerateIdentityBindingAccessTokenRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.name)
}
inline ::std::string* GenerateIdentityBindingAccessTokenRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GenerateIdentityBindingAccessTokenRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.name)
}

// repeated string scope = 2;
inline int GenerateIdentityBindingAccessTokenRequest::scope_size() const {
  return scope_.size();
}
inline void GenerateIdentityBindingAccessTokenRequest::clear_scope() {
  scope_.Clear();
}
inline const ::std::string& GenerateIdentityBindingAccessTokenRequest::scope(int index) const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope)
  return scope_.Get(index);
}
inline ::std::string* GenerateIdentityBindingAccessTokenRequest::mutable_scope(int index) {
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope)
  return scope_.Mutable(index);
}
inline void GenerateIdentityBindingAccessTokenRequest::set_scope(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope)
  scope_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GenerateIdentityBindingAccessTokenRequest::set_scope(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope)
  scope_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GenerateIdentityBindingAccessTokenRequest::set_scope(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  scope_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope)
}
inline void GenerateIdentityBindingAccessTokenRequest::set_scope(int index, const char* value, size_t size) {
  scope_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope)
}
inline ::std::string* GenerateIdentityBindingAccessTokenRequest::add_scope() {
  // @@protoc_insertion_point(field_add_mutable:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope)
  return scope_.Add();
}
inline void GenerateIdentityBindingAccessTokenRequest::add_scope(const ::std::string& value) {
  scope_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope)
}
#if LANG_CXX11
inline void GenerateIdentityBindingAccessTokenRequest::add_scope(::std::string&& value) {
  scope_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope)
}
#endif
inline void GenerateIdentityBindingAccessTokenRequest::add_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  scope_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope)
}
inline void GenerateIdentityBindingAccessTokenRequest::add_scope(const char* value, size_t size) {
  scope_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GenerateIdentityBindingAccessTokenRequest::scope() const {
  // @@protoc_insertion_point(field_list:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope)
  return scope_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GenerateIdentityBindingAccessTokenRequest::mutable_scope() {
  // @@protoc_insertion_point(field_mutable_list:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.scope)
  return &scope_;
}

// string jwt = 3;
inline void GenerateIdentityBindingAccessTokenRequest::clear_jwt() {
  jwt_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GenerateIdentityBindingAccessTokenRequest::jwt() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.jwt)
  return jwt_.Get();
}
inline void GenerateIdentityBindingAccessTokenRequest::set_jwt(const ::std::string& value) {
  
  jwt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.jwt)
}
#if LANG_CXX11
inline void GenerateIdentityBindingAccessTokenRequest::set_jwt(::std::string&& value) {
  
  jwt_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.jwt)
}
#endif
inline void GenerateIdentityBindingAccessTokenRequest::set_jwt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  jwt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.jwt)
}
inline void GenerateIdentityBindingAccessTokenRequest::set_jwt(const char* value,
    size_t size) {
  
  jwt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.jwt)
}
inline ::std::string* GenerateIdentityBindingAccessTokenRequest::mutable_jwt() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.jwt)
  return jwt_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GenerateIdentityBindingAccessTokenRequest::release_jwt() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.jwt)
  
  return jwt_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GenerateIdentityBindingAccessTokenRequest::set_allocated_jwt(::std::string* jwt) {
  if (jwt != NULL) {
    
  } else {
    
  }
  jwt_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jwt,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.jwt)
}
inline ::std::string* GenerateIdentityBindingAccessTokenRequest::unsafe_arena_release_jwt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.jwt)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return jwt_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GenerateIdentityBindingAccessTokenRequest::unsafe_arena_set_allocated_jwt(
    ::std::string* jwt) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (jwt != NULL) {
    
  } else {
    
  }
  jwt_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      jwt, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenRequest.jwt)
}

// -------------------------------------------------------------------

// GenerateIdentityBindingAccessTokenResponse

// string access_token = 1;
inline void GenerateIdentityBindingAccessTokenResponse::clear_access_token() {
  access_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GenerateIdentityBindingAccessTokenResponse::access_token() const {
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.access_token)
  return access_token_.Get();
}
inline void GenerateIdentityBindingAccessTokenResponse::set_access_token(const ::std::string& value) {
  
  access_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.access_token)
}
#if LANG_CXX11
inline void GenerateIdentityBindingAccessTokenResponse::set_access_token(::std::string&& value) {
  
  access_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.access_token)
}
#endif
inline void GenerateIdentityBindingAccessTokenResponse::set_access_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  access_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.access_token)
}
inline void GenerateIdentityBindingAccessTokenResponse::set_access_token(const char* value,
    size_t size) {
  
  access_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.access_token)
}
inline ::std::string* GenerateIdentityBindingAccessTokenResponse::mutable_access_token() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.access_token)
  return access_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GenerateIdentityBindingAccessTokenResponse::release_access_token() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.access_token)
  
  return access_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GenerateIdentityBindingAccessTokenResponse::set_allocated_access_token(::std::string* access_token) {
  if (access_token != NULL) {
    
  } else {
    
  }
  access_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.access_token)
}
inline ::std::string* GenerateIdentityBindingAccessTokenResponse::unsafe_arena_release_access_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.access_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return access_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GenerateIdentityBindingAccessTokenResponse::unsafe_arena_set_allocated_access_token(
    ::std::string* access_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (access_token != NULL) {
    
  } else {
    
  }
  access_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      access_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.access_token)
}

// .google.protobuf.Timestamp expire_time = 2;
inline bool GenerateIdentityBindingAccessTokenResponse::has_expire_time() const {
  return this != internal_default_instance() && expire_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& GenerateIdentityBindingAccessTokenResponse::_internal_expire_time() const {
  return *expire_time_;
}
inline const ::google::protobuf::Timestamp& GenerateIdentityBindingAccessTokenResponse::expire_time() const {
  const ::google::protobuf::Timestamp* p = expire_time_;
  // @@protoc_insertion_point(field_get:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.expire_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* GenerateIdentityBindingAccessTokenResponse::release_expire_time() {
  // @@protoc_insertion_point(field_release:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.expire_time)
  
  ::google::protobuf::Timestamp* temp = expire_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  expire_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* GenerateIdentityBindingAccessTokenResponse::unsafe_arena_release_expire_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.expire_time)
  
  ::google::protobuf::Timestamp* temp = expire_time_;
  expire_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* GenerateIdentityBindingAccessTokenResponse::mutable_expire_time() {
  
  if (expire_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    expire_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.expire_time)
  return expire_time_;
}
inline void GenerateIdentityBindingAccessTokenResponse::set_allocated_expire_time(::google::protobuf::Timestamp* expire_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(expire_time_);
  }
  if (expire_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(expire_time)->GetArena();
    if (message_arena != submessage_arena) {
      expire_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expire_time, submessage_arena);
    }
    
  } else {
    
  }
  expire_time_ = expire_time;
  // @@protoc_insertion_point(field_set_allocated:google.iam.credentials.v1.GenerateIdentityBindingAccessTokenResponse.expire_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace credentials
}  // namespace iam
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fiam_2fcredentials_2fv1_2fcommon_2eproto
