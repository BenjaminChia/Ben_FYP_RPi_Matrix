// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/home/graph/v1/device.proto

#include "google/home/graph/v1/device.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceNames;
}  // namespace protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto
namespace protobuf_google_2fprotobuf_2fstruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListValue;
}  // namespace protobuf_google_2fprotobuf_2fstruct_2eproto
namespace google {
namespace home {
namespace graph {
namespace v1 {
class DeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Device>
      _instance;
} _Device_default_instance_;
class DeviceNamesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceNames>
      _instance;
} _DeviceNames_default_instance_;
class DeviceInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceInfo>
      _instance;
} _DeviceInfo_default_instance_;
}  // namespace v1
}  // namespace graph
}  // namespace home
}  // namespace google
namespace protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto {
static void InitDefaultsDevice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::home::graph::v1::_Device_default_instance_;
    new (ptr) ::google::home::graph::v1::Device();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::home::graph::v1::Device::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Device =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDevice}, {
      &protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::scc_info_DeviceNames.base,
      &protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::scc_info_DeviceInfo.base,
      &protobuf_google_2fprotobuf_2fstruct_2eproto::scc_info_ListValue.base,}};

static void InitDefaultsDeviceNames() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::home::graph::v1::_DeviceNames_default_instance_;
    new (ptr) ::google::home::graph::v1::DeviceNames();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::home::graph::v1::DeviceNames::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceNames =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceNames}, {}};

static void InitDefaultsDeviceInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::home::graph::v1::_DeviceInfo_default_instance_;
    new (ptr) ::google::home::graph::v1::DeviceInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::home::graph::v1::DeviceInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceInfo}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Device.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceNames.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceInfo.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::Device, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::Device, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::Device, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::Device, traits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::Device, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::Device, will_report_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::Device, room_hint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::Device, structure_hint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::Device, device_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::Device, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::Device, custom_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::DeviceNames, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::DeviceNames, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::DeviceNames, nicknames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::DeviceNames, default_names_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::DeviceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::DeviceInfo, manufacturer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::DeviceInfo, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::DeviceInfo, hw_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::home::graph::v1::DeviceInfo, sw_version_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::home::graph::v1::Device)},
  { 15, -1, sizeof(::google::home::graph::v1::DeviceNames)},
  { 23, -1, sizeof(::google::home::graph::v1::DeviceInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::home::graph::v1::_Device_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::home::graph::v1::_DeviceNames_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::home::graph::v1::_DeviceInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/home/graph/v1/device.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!google/home/graph/v1/device.proto\022\024goo"
      "gle.home.graph.v1\032\034google/protobuf/struc"
      "t.proto\"\242\002\n\006Device\022\n\n\002id\030\001 \001(\t\022\014\n\004type\030\002"
      " \001(\t\022\016\n\006traits\030\003 \003(\t\022/\n\004name\030\004 \001(\0132!.goo"
      "gle.home.graph.v1.DeviceNames\022\031\n\021will_re"
      "port_state\030\005 \001(\010\022\021\n\troom_hint\030\006 \001(\t\022\026\n\016s"
      "tructure_hint\030\007 \001(\t\0225\n\013device_info\030\010 \001(\013"
      "2 .google.home.graph.v1.DeviceInfo\022+\n\nat"
      "tributes\030\t \001(\0132\027.google.protobuf.Struct\022"
      "\023\n\013custom_data\030\n \001(\t\"E\n\013DeviceNames\022\014\n\004n"
      "ame\030\001 \001(\t\022\021\n\tnicknames\030\002 \003(\t\022\025\n\rdefault_"
      "names\030\003 \003(\t\"Y\n\nDeviceInfo\022\024\n\014manufacture"
      "r\030\001 \001(\t\022\r\n\005model\030\002 \001(\t\022\022\n\nhw_version\030\003 \001"
      "(\t\022\022\n\nsw_version\030\004 \001(\tBb\n\030com.google.hom"
      "e.graph.v1B\013DeviceProtoZ9google.golang.o"
      "rg/genproto/googleapis/home/graph/v1;gra"
      "phb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 650);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/home/graph/v1/device.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto
namespace google {
namespace home {
namespace graph {
namespace v1 {

// ===================================================================

void Device::InitAsDefaultInstance() {
  ::google::home::graph::v1::_Device_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::home::graph::v1::DeviceNames*>(
      ::google::home::graph::v1::DeviceNames::internal_default_instance());
  ::google::home::graph::v1::_Device_default_instance_._instance.get_mutable()->device_info_ = const_cast< ::google::home::graph::v1::DeviceInfo*>(
      ::google::home::graph::v1::DeviceInfo::internal_default_instance());
  ::google::home::graph::v1::_Device_default_instance_._instance.get_mutable()->attributes_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
void Device::clear_attributes() {
  if (GetArenaNoVirtual() == NULL && attributes_ != NULL) {
    delete attributes_;
  }
  attributes_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Device::kIdFieldNumber;
const int Device::kTypeFieldNumber;
const int Device::kTraitsFieldNumber;
const int Device::kNameFieldNumber;
const int Device::kWillReportStateFieldNumber;
const int Device::kRoomHintFieldNumber;
const int Device::kStructureHintFieldNumber;
const int Device::kDeviceInfoFieldNumber;
const int Device::kAttributesFieldNumber;
const int Device::kCustomDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Device::Device()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::scc_info_Device.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.home.graph.v1.Device)
}
Device::Device(const Device& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      traits_(from.traits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  room_hint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.room_hint().size() > 0) {
    room_hint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_hint_);
  }
  structure_hint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.structure_hint().size() > 0) {
    structure_hint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.structure_hint_);
  }
  custom_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.custom_data().size() > 0) {
    custom_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_data_);
  }
  if (from.has_name()) {
    name_ = new ::google::home::graph::v1::DeviceNames(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_device_info()) {
    device_info_ = new ::google::home::graph::v1::DeviceInfo(*from.device_info_);
  } else {
    device_info_ = NULL;
  }
  if (from.has_attributes()) {
    attributes_ = new ::google::protobuf::Struct(*from.attributes_);
  } else {
    attributes_ = NULL;
  }
  will_report_state_ = from.will_report_state_;
  // @@protoc_insertion_point(copy_constructor:google.home.graph.v1.Device)
}

void Device::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_hint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  structure_hint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&will_report_state_) -
      reinterpret_cast<char*>(&name_)) + sizeof(will_report_state_));
}

Device::~Device() {
  // @@protoc_insertion_point(destructor:google.home.graph.v1.Device)
  SharedDtor();
}

void Device::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_hint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  structure_hint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete device_info_;
  if (this != internal_default_instance()) delete attributes_;
}

void Device::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Device::descriptor() {
  ::protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Device& Device::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::scc_info_Device.base);
  return *internal_default_instance();
}


void Device::Clear() {
// @@protoc_insertion_point(message_clear_start:google.home.graph.v1.Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  traits_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_hint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  structure_hint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_info_ != NULL) {
    delete device_info_;
  }
  device_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && attributes_ != NULL) {
    delete attributes_;
  }
  attributes_ = NULL;
  will_report_state_ = false;
  _internal_metadata_.Clear();
}

bool Device::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.home.graph.v1.Device)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.home.graph.v1.Device.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.home.graph.v1.Device.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string traits = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_traits()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->traits(this->traits_size() - 1).data(),
            static_cast<int>(this->traits(this->traits_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.home.graph.v1.Device.traits"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.home.graph.v1.DeviceNames name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool will_report_state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &will_report_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string room_hint = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_hint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->room_hint().data(), static_cast<int>(this->room_hint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.home.graph.v1.Device.room_hint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string structure_hint = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_structure_hint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->structure_hint().data(), static_cast<int>(this->structure_hint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.home.graph.v1.Device.structure_hint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.home.graph.v1.DeviceInfo device_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct attributes = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string custom_data = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custom_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->custom_data().data(), static_cast<int>(this->custom_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.home.graph.v1.Device.custom_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.home.graph.v1.Device)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.home.graph.v1.Device)
  return false;
#undef DO_
}

void Device::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.home.graph.v1.Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.Device.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.Device.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // repeated string traits = 3;
  for (int i = 0, n = this->traits_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->traits(i).data(), static_cast<int>(this->traits(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.Device.traits");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->traits(i), output);
  }

  // .google.home.graph.v1.DeviceNames name = 4;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_name(), output);
  }

  // bool will_report_state = 5;
  if (this->will_report_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->will_report_state(), output);
  }

  // string room_hint = 6;
  if (this->room_hint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_hint().data(), static_cast<int>(this->room_hint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.Device.room_hint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->room_hint(), output);
  }

  // string structure_hint = 7;
  if (this->structure_hint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->structure_hint().data(), static_cast<int>(this->structure_hint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.Device.structure_hint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->structure_hint(), output);
  }

  // .google.home.graph.v1.DeviceInfo device_info = 8;
  if (this->has_device_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_device_info(), output);
  }

  // .google.protobuf.Struct attributes = 9;
  if (this->has_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_attributes(), output);
  }

  // string custom_data = 10;
  if (this->custom_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->custom_data().data(), static_cast<int>(this->custom_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.Device.custom_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->custom_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.home.graph.v1.Device)
}

::google::protobuf::uint8* Device::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.home.graph.v1.Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.Device.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.Device.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // repeated string traits = 3;
  for (int i = 0, n = this->traits_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->traits(i).data(), static_cast<int>(this->traits(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.Device.traits");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->traits(i), target);
  }

  // .google.home.graph.v1.DeviceNames name = 4;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_name(), deterministic, target);
  }

  // bool will_report_state = 5;
  if (this->will_report_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->will_report_state(), target);
  }

  // string room_hint = 6;
  if (this->room_hint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_hint().data(), static_cast<int>(this->room_hint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.Device.room_hint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->room_hint(), target);
  }

  // string structure_hint = 7;
  if (this->structure_hint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->structure_hint().data(), static_cast<int>(this->structure_hint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.Device.structure_hint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->structure_hint(), target);
  }

  // .google.home.graph.v1.DeviceInfo device_info = 8;
  if (this->has_device_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_device_info(), deterministic, target);
  }

  // .google.protobuf.Struct attributes = 9;
  if (this->has_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_attributes(), deterministic, target);
  }

  // string custom_data = 10;
  if (this->custom_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->custom_data().data(), static_cast<int>(this->custom_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.Device.custom_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->custom_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.home.graph.v1.Device)
  return target;
}

size_t Device::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.home.graph.v1.Device)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string traits = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->traits_size());
  for (int i = 0, n = this->traits_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->traits(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string room_hint = 6;
  if (this->room_hint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_hint());
  }

  // string structure_hint = 7;
  if (this->structure_hint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->structure_hint());
  }

  // string custom_data = 10;
  if (this->custom_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->custom_data());
  }

  // .google.home.graph.v1.DeviceNames name = 4;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .google.home.graph.v1.DeviceInfo device_info = 8;
  if (this->has_device_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_info_);
  }

  // .google.protobuf.Struct attributes = 9;
  if (this->has_attributes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attributes_);
  }

  // bool will_report_state = 5;
  if (this->will_report_state() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Device::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.home.graph.v1.Device)
  GOOGLE_DCHECK_NE(&from, this);
  const Device* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Device>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.home.graph.v1.Device)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.home.graph.v1.Device)
    MergeFrom(*source);
  }
}

void Device::MergeFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.home.graph.v1.Device)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  traits_.MergeFrom(from.traits_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.room_hint().size() > 0) {

    room_hint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_hint_);
  }
  if (from.structure_hint().size() > 0) {

    structure_hint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.structure_hint_);
  }
  if (from.custom_data().size() > 0) {

    custom_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_data_);
  }
  if (from.has_name()) {
    mutable_name()->::google::home::graph::v1::DeviceNames::MergeFrom(from.name());
  }
  if (from.has_device_info()) {
    mutable_device_info()->::google::home::graph::v1::DeviceInfo::MergeFrom(from.device_info());
  }
  if (from.has_attributes()) {
    mutable_attributes()->::google::protobuf::Struct::MergeFrom(from.attributes());
  }
  if (from.will_report_state() != 0) {
    set_will_report_state(from.will_report_state());
  }
}

void Device::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.home.graph.v1.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Device::CopyFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.home.graph.v1.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Device::IsInitialized() const {
  return true;
}

void Device::Swap(Device* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Device::InternalSwap(Device* other) {
  using std::swap;
  traits_.InternalSwap(CastToBase(&other->traits_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  room_hint_.Swap(&other->room_hint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  structure_hint_.Swap(&other->structure_hint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  custom_data_.Swap(&other->custom_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(name_, other->name_);
  swap(device_info_, other->device_info_);
  swap(attributes_, other->attributes_);
  swap(will_report_state_, other->will_report_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Device::GetMetadata() const {
  protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceNames::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceNames::kNameFieldNumber;
const int DeviceNames::kNicknamesFieldNumber;
const int DeviceNames::kDefaultNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceNames::DeviceNames()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::scc_info_DeviceNames.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.home.graph.v1.DeviceNames)
}
DeviceNames::DeviceNames(const DeviceNames& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nicknames_(from.nicknames_),
      default_names_(from.default_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.home.graph.v1.DeviceNames)
}

void DeviceNames::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeviceNames::~DeviceNames() {
  // @@protoc_insertion_point(destructor:google.home.graph.v1.DeviceNames)
  SharedDtor();
}

void DeviceNames::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceNames::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceNames::descriptor() {
  ::protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceNames& DeviceNames::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::scc_info_DeviceNames.base);
  return *internal_default_instance();
}


void DeviceNames::Clear() {
// @@protoc_insertion_point(message_clear_start:google.home.graph.v1.DeviceNames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nicknames_.Clear();
  default_names_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeviceNames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.home.graph.v1.DeviceNames)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.home.graph.v1.DeviceNames.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string nicknames = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_nicknames()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nicknames(this->nicknames_size() - 1).data(),
            static_cast<int>(this->nicknames(this->nicknames_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.home.graph.v1.DeviceNames.nicknames"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string default_names = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_default_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_names(this->default_names_size() - 1).data(),
            static_cast<int>(this->default_names(this->default_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.home.graph.v1.DeviceNames.default_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.home.graph.v1.DeviceNames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.home.graph.v1.DeviceNames)
  return false;
#undef DO_
}

void DeviceNames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.home.graph.v1.DeviceNames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceNames.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string nicknames = 2;
  for (int i = 0, n = this->nicknames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nicknames(i).data(), static_cast<int>(this->nicknames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceNames.nicknames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->nicknames(i), output);
  }

  // repeated string default_names = 3;
  for (int i = 0, n = this->default_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_names(i).data(), static_cast<int>(this->default_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceNames.default_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->default_names(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.home.graph.v1.DeviceNames)
}

::google::protobuf::uint8* DeviceNames::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.home.graph.v1.DeviceNames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceNames.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string nicknames = 2;
  for (int i = 0, n = this->nicknames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nicknames(i).data(), static_cast<int>(this->nicknames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceNames.nicknames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->nicknames(i), target);
  }

  // repeated string default_names = 3;
  for (int i = 0, n = this->default_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_names(i).data(), static_cast<int>(this->default_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceNames.default_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->default_names(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.home.graph.v1.DeviceNames)
  return target;
}

size_t DeviceNames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.home.graph.v1.DeviceNames)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string nicknames = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->nicknames_size());
  for (int i = 0, n = this->nicknames_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->nicknames(i));
  }

  // repeated string default_names = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->default_names_size());
  for (int i = 0, n = this->default_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->default_names(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceNames::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.home.graph.v1.DeviceNames)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceNames* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceNames>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.home.graph.v1.DeviceNames)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.home.graph.v1.DeviceNames)
    MergeFrom(*source);
  }
}

void DeviceNames::MergeFrom(const DeviceNames& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.home.graph.v1.DeviceNames)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nicknames_.MergeFrom(from.nicknames_);
  default_names_.MergeFrom(from.default_names_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeviceNames::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.home.graph.v1.DeviceNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceNames::CopyFrom(const DeviceNames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.home.graph.v1.DeviceNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceNames::IsInitialized() const {
  return true;
}

void DeviceNames::Swap(DeviceNames* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceNames::InternalSwap(DeviceNames* other) {
  using std::swap;
  nicknames_.InternalSwap(CastToBase(&other->nicknames_));
  default_names_.InternalSwap(CastToBase(&other->default_names_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceNames::GetMetadata() const {
  protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceInfo::kManufacturerFieldNumber;
const int DeviceInfo::kModelFieldNumber;
const int DeviceInfo::kHwVersionFieldNumber;
const int DeviceInfo::kSwVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceInfo::DeviceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::scc_info_DeviceInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.home.graph.v1.DeviceInfo)
}
DeviceInfo::DeviceInfo(const DeviceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.manufacturer().size() > 0) {
    manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturer_);
  }
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.model().size() > 0) {
    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  hw_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hw_version().size() > 0) {
    hw_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hw_version_);
  }
  sw_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sw_version().size() > 0) {
    sw_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sw_version_);
  }
  // @@protoc_insertion_point(copy_constructor:google.home.graph.v1.DeviceInfo)
}

void DeviceInfo::SharedCtor() {
  manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hw_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sw_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeviceInfo::~DeviceInfo() {
  // @@protoc_insertion_point(destructor:google.home.graph.v1.DeviceInfo)
  SharedDtor();
}

void DeviceInfo::SharedDtor() {
  manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hw_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sw_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceInfo::descriptor() {
  ::protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceInfo& DeviceInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::scc_info_DeviceInfo.base);
  return *internal_default_instance();
}


void DeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.home.graph.v1.DeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hw_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sw_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeviceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.home.graph.v1.DeviceInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string manufacturer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_manufacturer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->manufacturer().data(), static_cast<int>(this->manufacturer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.home.graph.v1.DeviceInfo.manufacturer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string model = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model().data(), static_cast<int>(this->model().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.home.graph.v1.DeviceInfo.model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hw_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hw_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hw_version().data(), static_cast<int>(this->hw_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.home.graph.v1.DeviceInfo.hw_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sw_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sw_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sw_version().data(), static_cast<int>(this->sw_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.home.graph.v1.DeviceInfo.sw_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.home.graph.v1.DeviceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.home.graph.v1.DeviceInfo)
  return false;
#undef DO_
}

void DeviceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.home.graph.v1.DeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string manufacturer = 1;
  if (this->manufacturer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->manufacturer().data(), static_cast<int>(this->manufacturer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceInfo.manufacturer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->manufacturer(), output);
  }

  // string model = 2;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), static_cast<int>(this->model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceInfo.model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->model(), output);
  }

  // string hw_version = 3;
  if (this->hw_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hw_version().data(), static_cast<int>(this->hw_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceInfo.hw_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->hw_version(), output);
  }

  // string sw_version = 4;
  if (this->sw_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sw_version().data(), static_cast<int>(this->sw_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceInfo.sw_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sw_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.home.graph.v1.DeviceInfo)
}

::google::protobuf::uint8* DeviceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.home.graph.v1.DeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string manufacturer = 1;
  if (this->manufacturer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->manufacturer().data(), static_cast<int>(this->manufacturer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceInfo.manufacturer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->manufacturer(), target);
  }

  // string model = 2;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), static_cast<int>(this->model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceInfo.model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->model(), target);
  }

  // string hw_version = 3;
  if (this->hw_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hw_version().data(), static_cast<int>(this->hw_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceInfo.hw_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->hw_version(), target);
  }

  // string sw_version = 4;
  if (this->sw_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sw_version().data(), static_cast<int>(this->sw_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.home.graph.v1.DeviceInfo.sw_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sw_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.home.graph.v1.DeviceInfo)
  return target;
}

size_t DeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.home.graph.v1.DeviceInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string manufacturer = 1;
  if (this->manufacturer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->manufacturer());
  }

  // string model = 2;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model());
  }

  // string hw_version = 3;
  if (this->hw_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hw_version());
  }

  // string sw_version = 4;
  if (this->sw_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sw_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.home.graph.v1.DeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.home.graph.v1.DeviceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.home.graph.v1.DeviceInfo)
    MergeFrom(*source);
  }
}

void DeviceInfo::MergeFrom(const DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.home.graph.v1.DeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.manufacturer().size() > 0) {

    manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturer_);
  }
  if (from.model().size() > 0) {

    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  if (from.hw_version().size() > 0) {

    hw_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hw_version_);
  }
  if (from.sw_version().size() > 0) {

    sw_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sw_version_);
  }
}

void DeviceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.home.graph.v1.DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceInfo::CopyFrom(const DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.home.graph.v1.DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceInfo::IsInitialized() const {
  return true;
}

void DeviceInfo::Swap(DeviceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceInfo::InternalSwap(DeviceInfo* other) {
  using std::swap;
  manufacturer_.Swap(&other->manufacturer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_.Swap(&other->model_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hw_version_.Swap(&other->hw_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sw_version_.Swap(&other->sw_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceInfo::GetMetadata() const {
  protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fhome_2fgraph_2fv1_2fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace graph
}  // namespace home
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::home::graph::v1::Device* Arena::CreateMaybeMessage< ::google::home::graph::v1::Device >(Arena* arena) {
  return Arena::CreateInternal< ::google::home::graph::v1::Device >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::home::graph::v1::DeviceNames* Arena::CreateMaybeMessage< ::google::home::graph::v1::DeviceNames >(Arena* arena) {
  return Arena::CreateInternal< ::google::home::graph::v1::DeviceNames >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::home::graph::v1::DeviceInfo* Arena::CreateMaybeMessage< ::google::home::graph::v1::DeviceInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::home::graph::v1::DeviceInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
