// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/tasks/v2beta3/cloudtasks.proto

#include "google/cloud/tasks/v2beta3/cloudtasks.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2ftasks_2fv2beta3_2fqueue_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2ftasks_2fv2beta3_2fqueue_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Queue;
}  // namespace protobuf_google_2fcloud_2ftasks_2fv2beta3_2fqueue_2eproto
namespace protobuf_google_2fcloud_2ftasks_2fv2beta3_2ftask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2ftasks_2fv2beta3_2ftask_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Task;
}  // namespace protobuf_google_2fcloud_2ftasks_2fv2beta3_2ftask_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace google {
namespace cloud {
namespace tasks {
namespace v2beta3 {
class ListQueuesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListQueuesRequest>
      _instance;
} _ListQueuesRequest_default_instance_;
class ListQueuesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListQueuesResponse>
      _instance;
} _ListQueuesResponse_default_instance_;
class GetQueueRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetQueueRequest>
      _instance;
} _GetQueueRequest_default_instance_;
class CreateQueueRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateQueueRequest>
      _instance;
} _CreateQueueRequest_default_instance_;
class UpdateQueueRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateQueueRequest>
      _instance;
} _UpdateQueueRequest_default_instance_;
class DeleteQueueRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteQueueRequest>
      _instance;
} _DeleteQueueRequest_default_instance_;
class PurgeQueueRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PurgeQueueRequest>
      _instance;
} _PurgeQueueRequest_default_instance_;
class PauseQueueRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PauseQueueRequest>
      _instance;
} _PauseQueueRequest_default_instance_;
class ResumeQueueRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResumeQueueRequest>
      _instance;
} _ResumeQueueRequest_default_instance_;
class ListTasksRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTasksRequest>
      _instance;
} _ListTasksRequest_default_instance_;
class ListTasksResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTasksResponse>
      _instance;
} _ListTasksResponse_default_instance_;
class GetTaskRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTaskRequest>
      _instance;
} _GetTaskRequest_default_instance_;
class CreateTaskRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTaskRequest>
      _instance;
} _CreateTaskRequest_default_instance_;
class DeleteTaskRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteTaskRequest>
      _instance;
} _DeleteTaskRequest_default_instance_;
class RunTaskRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunTaskRequest>
      _instance;
} _RunTaskRequest_default_instance_;
}  // namespace v2beta3
}  // namespace tasks
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto {
static void InitDefaultsListQueuesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_ListQueuesRequest_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::ListQueuesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::ListQueuesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListQueuesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListQueuesRequest}, {}};

static void InitDefaultsListQueuesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_ListQueuesResponse_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::ListQueuesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::ListQueuesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListQueuesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListQueuesResponse}, {
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fqueue_2eproto::scc_info_Queue.base,}};

static void InitDefaultsGetQueueRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_GetQueueRequest_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::GetQueueRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::GetQueueRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetQueueRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetQueueRequest}, {}};

static void InitDefaultsCreateQueueRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_CreateQueueRequest_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::CreateQueueRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::CreateQueueRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateQueueRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateQueueRequest}, {
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fqueue_2eproto::scc_info_Queue.base,}};

static void InitDefaultsUpdateQueueRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_UpdateQueueRequest_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::UpdateQueueRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::UpdateQueueRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateQueueRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateQueueRequest}, {
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fqueue_2eproto::scc_info_Queue.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

static void InitDefaultsDeleteQueueRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_DeleteQueueRequest_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::DeleteQueueRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::DeleteQueueRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteQueueRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteQueueRequest}, {}};

static void InitDefaultsPurgeQueueRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_PurgeQueueRequest_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::PurgeQueueRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::PurgeQueueRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PurgeQueueRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPurgeQueueRequest}, {}};

static void InitDefaultsPauseQueueRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_PauseQueueRequest_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::PauseQueueRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::PauseQueueRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PauseQueueRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPauseQueueRequest}, {}};

static void InitDefaultsResumeQueueRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_ResumeQueueRequest_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::ResumeQueueRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::ResumeQueueRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResumeQueueRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResumeQueueRequest}, {}};

static void InitDefaultsListTasksRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_ListTasksRequest_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::ListTasksRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::ListTasksRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListTasksRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListTasksRequest}, {}};

static void InitDefaultsListTasksResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_ListTasksResponse_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::ListTasksResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::ListTasksResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListTasksResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListTasksResponse}, {
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2ftask_2eproto::scc_info_Task.base,}};

static void InitDefaultsGetTaskRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_GetTaskRequest_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::GetTaskRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::GetTaskRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTaskRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTaskRequest}, {}};

static void InitDefaultsCreateTaskRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_CreateTaskRequest_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::CreateTaskRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::CreateTaskRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateTaskRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateTaskRequest}, {
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2ftask_2eproto::scc_info_Task.base,}};

static void InitDefaultsDeleteTaskRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_DeleteTaskRequest_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::DeleteTaskRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::DeleteTaskRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteTaskRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteTaskRequest}, {}};

static void InitDefaultsRunTaskRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::tasks::v2beta3::_RunTaskRequest_default_instance_;
    new (ptr) ::google::cloud::tasks::v2beta3::RunTaskRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::tasks::v2beta3::RunTaskRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RunTaskRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRunTaskRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ListQueuesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListQueuesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetQueueRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateQueueRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateQueueRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteQueueRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PurgeQueueRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PauseQueueRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResumeQueueRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListTasksRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListTasksResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTaskRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTaskRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteTaskRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunTaskRequest.base);
}

::google::protobuf::Metadata file_level_metadata[15];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListQueuesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListQueuesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListQueuesRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListQueuesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListQueuesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListQueuesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListQueuesResponse, queues_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListQueuesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::GetQueueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::GetQueueRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::CreateQueueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::CreateQueueRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::CreateQueueRequest, queue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::UpdateQueueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::UpdateQueueRequest, queue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::UpdateQueueRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::DeleteQueueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::DeleteQueueRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::PurgeQueueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::PurgeQueueRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::PauseQueueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::PauseQueueRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ResumeQueueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ResumeQueueRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListTasksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListTasksRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListTasksRequest, response_view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListTasksRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListTasksRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListTasksResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListTasksResponse, tasks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::ListTasksResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::GetTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::GetTaskRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::GetTaskRequest, response_view_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::CreateTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::CreateTaskRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::CreateTaskRequest, task_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::CreateTaskRequest, response_view_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::DeleteTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::DeleteTaskRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::RunTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::RunTaskRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::tasks::v2beta3::RunTaskRequest, response_view_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::tasks::v2beta3::ListQueuesRequest)},
  { 9, -1, sizeof(::google::cloud::tasks::v2beta3::ListQueuesResponse)},
  { 16, -1, sizeof(::google::cloud::tasks::v2beta3::GetQueueRequest)},
  { 22, -1, sizeof(::google::cloud::tasks::v2beta3::CreateQueueRequest)},
  { 29, -1, sizeof(::google::cloud::tasks::v2beta3::UpdateQueueRequest)},
  { 36, -1, sizeof(::google::cloud::tasks::v2beta3::DeleteQueueRequest)},
  { 42, -1, sizeof(::google::cloud::tasks::v2beta3::PurgeQueueRequest)},
  { 48, -1, sizeof(::google::cloud::tasks::v2beta3::PauseQueueRequest)},
  { 54, -1, sizeof(::google::cloud::tasks::v2beta3::ResumeQueueRequest)},
  { 60, -1, sizeof(::google::cloud::tasks::v2beta3::ListTasksRequest)},
  { 69, -1, sizeof(::google::cloud::tasks::v2beta3::ListTasksResponse)},
  { 76, -1, sizeof(::google::cloud::tasks::v2beta3::GetTaskRequest)},
  { 83, -1, sizeof(::google::cloud::tasks::v2beta3::CreateTaskRequest)},
  { 91, -1, sizeof(::google::cloud::tasks::v2beta3::DeleteTaskRequest)},
  { 97, -1, sizeof(::google::cloud::tasks::v2beta3::RunTaskRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_ListQueuesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_ListQueuesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_GetQueueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_CreateQueueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_UpdateQueueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_DeleteQueueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_PurgeQueueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_PauseQueueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_ResumeQueueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_ListTasksRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_ListTasksResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_GetTaskRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_CreateTaskRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_DeleteTaskRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::tasks::v2beta3::_RunTaskRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/tasks/v2beta3/cloudtasks.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n+google/cloud/tasks/v2beta3/cloudtasks."
      "proto\022\032google.cloud.tasks.v2beta3\032\034googl"
      "e/api/annotations.proto\032&google/cloud/ta"
      "sks/v2beta3/queue.proto\032%google/cloud/ta"
      "sks/v2beta3/task.proto\032\036google/iam/v1/ia"
      "m_policy.proto\032\032google/iam/v1/policy.pro"
      "to\032\033google/protobuf/empty.proto\032 google/"
      "protobuf/field_mask.proto\032\025google/rpc/co"
      "de.proto\"Z\n\021ListQueuesRequest\022\016\n\006parent\030"
      "\001 \001(\t\022\016\n\006filter\030\002 \001(\t\022\021\n\tpage_size\030\003 \001(\005"
      "\022\022\n\npage_token\030\004 \001(\t\"`\n\022ListQueuesRespon"
      "se\0221\n\006queues\030\001 \003(\0132!.google.cloud.tasks."
      "v2beta3.Queue\022\027\n\017next_page_token\030\002 \001(\t\"\037"
      "\n\017GetQueueRequest\022\014\n\004name\030\001 \001(\t\"V\n\022Creat"
      "eQueueRequest\022\016\n\006parent\030\001 \001(\t\0220\n\005queue\030\002"
      " \001(\0132!.google.cloud.tasks.v2beta3.Queue\""
      "w\n\022UpdateQueueRequest\0220\n\005queue\030\001 \001(\0132!.g"
      "oogle.cloud.tasks.v2beta3.Queue\022/\n\013updat"
      "e_mask\030\002 \001(\0132\032.google.protobuf.FieldMask"
      "\"\"\n\022DeleteQueueRequest\022\014\n\004name\030\001 \001(\t\"!\n\021"
      "PurgeQueueRequest\022\014\n\004name\030\001 \001(\t\"!\n\021Pause"
      "QueueRequest\022\014\n\004name\030\001 \001(\t\"\"\n\022ResumeQueu"
      "eRequest\022\014\n\004name\030\001 \001(\t\"\207\001\n\020ListTasksRequ"
      "est\022\016\n\006parent\030\001 \001(\t\022<\n\rresponse_view\030\002 \001"
      "(\0162%.google.cloud.tasks.v2beta3.Task.Vie"
      "w\022\021\n\tpage_size\030\003 \001(\005\022\022\n\npage_token\030\004 \001(\t"
      "\"]\n\021ListTasksResponse\022/\n\005tasks\030\001 \003(\0132 .g"
      "oogle.cloud.tasks.v2beta3.Task\022\027\n\017next_p"
      "age_token\030\002 \001(\t\"\\\n\016GetTaskRequest\022\014\n\004nam"
      "e\030\001 \001(\t\022<\n\rresponse_view\030\002 \001(\0162%.google."
      "cloud.tasks.v2beta3.Task.View\"\221\001\n\021Create"
      "TaskRequest\022\016\n\006parent\030\001 \001(\t\022.\n\004task\030\002 \001("
      "\0132 .google.cloud.tasks.v2beta3.Task\022<\n\rr"
      "esponse_view\030\003 \001(\0162%.google.cloud.tasks."
      "v2beta3.Task.View\"!\n\021DeleteTaskRequest\022\014"
      "\n\004name\030\001 \001(\t\"\\\n\016RunTaskRequest\022\014\n\004name\030\001"
      " \001(\t\022<\n\rresponse_view\030\002 \001(\0162%.google.clo"
      "ud.tasks.v2beta3.Task.View2\247\024\n\nCloudTask"
      "s\022\244\001\n\nListQueues\022-.google.cloud.tasks.v2"
      "beta3.ListQueuesRequest\032..google.cloud.t"
      "asks.v2beta3.ListQueuesResponse\"7\202\323\344\223\0021\022"
      "//v2beta3/{parent=projects/*/locations/*"
      "}/queues\022\223\001\n\010GetQueue\022+.google.cloud.tas"
      "ks.v2beta3.GetQueueRequest\032!.google.clou"
      "d.tasks.v2beta3.Queue\"7\202\323\344\223\0021\022//v2beta3/"
      "{name=projects/*/locations/*/queues/*}\022\240"
      "\001\n\013CreateQueue\022..google.cloud.tasks.v2be"
      "ta3.CreateQueueRequest\032!.google.cloud.ta"
      "sks.v2beta3.Queue\">\202\323\344\223\0028\"//v2beta3/{par"
      "ent=projects/*/locations/*}/queues:\005queu"
      "e\022\246\001\n\013UpdateQueue\022..google.cloud.tasks.v"
      "2beta3.UpdateQueueRequest\032!.google.cloud"
      ".tasks.v2beta3.Queue\"D\202\323\344\223\002>25/v2beta3/{"
      "queue.name=projects/*/locations/*/queues"
      "/*}:\005queue\022\216\001\n\013DeleteQueue\022..google.clou"
      "d.tasks.v2beta3.DeleteQueueRequest\032\026.goo"
      "gle.protobuf.Empty\"7\202\323\344\223\0021*//v2beta3/{na"
      "me=projects/*/locations/*/queues/*}\022\240\001\n\n"
      "PurgeQueue\022-.google.cloud.tasks.v2beta3."
      "PurgeQueueRequest\032!.google.cloud.tasks.v"
      "2beta3.Queue\"@\202\323\344\223\002:\"5/v2beta3/{name=pro"
      "jects/*/locations/*/queues/*}:purge:\001*\022\240"
      "\001\n\nPauseQueue\022-.google.cloud.tasks.v2bet"
      "a3.PauseQueueRequest\032!.google.cloud.task"
      "s.v2beta3.Queue\"@\202\323\344\223\002:\"5/v2beta3/{name="
      "projects/*/locations/*/queues/*}:pause:\001"
      "*\022\243\001\n\013ResumeQueue\022..google.cloud.tasks.v"
      "2beta3.ResumeQueueRequest\032!.google.cloud"
      ".tasks.v2beta3.Queue\"A\202\323\344\223\002;\"6/v2beta3/{"
      "name=projects/*/locations/*/queues/*}:re"
      "sume:\001*\022\226\001\n\014GetIamPolicy\022\".google.iam.v1"
      ".GetIamPolicyRequest\032\025.google.iam.v1.Pol"
      "icy\"K\202\323\344\223\002E\"@/v2beta3/{resource=projects"
      "/*/locations/*/queues/*}:getIamPolicy:\001*"
      "\022\226\001\n\014SetIamPolicy\022\".google.iam.v1.SetIam"
      "PolicyRequest\032\025.google.iam.v1.Policy\"K\202\323"
      "\344\223\002E\"@/v2beta3/{resource=projects/*/loca"
      "tions/*/queues/*}:setIamPolicy:\001*\022\274\001\n\022Te"
      "stIamPermissions\022(.google.iam.v1.TestIam"
      "PermissionsRequest\032).google.iam.v1.TestI"
      "amPermissionsResponse\"Q\202\323\344\223\002K\"F/v2beta3/"
      "{resource=projects/*/locations/*/queues/"
      "*}:testIamPermissions:\001*\022\251\001\n\tListTasks\022,"
      ".google.cloud.tasks.v2beta3.ListTasksReq"
      "uest\032-.google.cloud.tasks.v2beta3.ListTa"
      "sksResponse\"\?\202\323\344\223\0029\0227/v2beta3/{parent=pr"
      "ojects/*/locations/*/queues/*}/tasks\022\230\001\n"
      "\007GetTask\022*.google.cloud.tasks.v2beta3.Ge"
      "tTaskRequest\032 .google.cloud.tasks.v2beta"
      "3.Task\"\?\202\323\344\223\0029\0227/v2beta3/{name=projects/"
      "*/locations/*/queues/*/tasks/*}\022\241\001\n\nCrea"
      "teTask\022-.google.cloud.tasks.v2beta3.Crea"
      "teTaskRequest\032 .google.cloud.tasks.v2bet"
      "a3.Task\"B\202\323\344\223\002<\"7/v2beta3/{parent=projec"
      "ts/*/locations/*/queues/*}/tasks:\001*\022\224\001\n\n"
      "DeleteTask\022-.google.cloud.tasks.v2beta3."
      "DeleteTaskRequest\032\026.google.protobuf.Empt"
      "y\"\?\202\323\344\223\0029*7/v2beta3/{name=projects/*/loc"
      "ations/*/queues/*/tasks/*}\022\237\001\n\007RunTask\022*"
      ".google.cloud.tasks.v2beta3.RunTaskReque"
      "st\032 .google.cloud.tasks.v2beta3.Task\"F\202\323"
      "\344\223\002@\";/v2beta3/{name=projects/*/location"
      "s/*/queues/*/tasks/*}:run:\001*B|\n\036com.goog"
      "le.cloud.tasks.v2beta3B\017CloudTasksProtoP"
      "\001Z\?google.golang.org/genproto/googleapis"
      "/cloud/tasks/v2beta3;tasks\242\002\005TASKSb\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4242);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/tasks/v2beta3/cloudtasks.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fqueue_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2ftask_2eproto::AddDescriptors();
  ::protobuf_google_2fiam_2fv1_2fiam_5fpolicy_2eproto::AddDescriptors();
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fcode_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto
namespace google {
namespace cloud {
namespace tasks {
namespace v2beta3 {

// ===================================================================

void ListQueuesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListQueuesRequest::kParentFieldNumber;
const int ListQueuesRequest::kFilterFieldNumber;
const int ListQueuesRequest::kPageSizeFieldNumber;
const int ListQueuesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListQueuesRequest::ListQueuesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_ListQueuesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.ListQueuesRequest)
}
ListQueuesRequest::ListQueuesRequest(const ListQueuesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.ListQueuesRequest)
}

void ListQueuesRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListQueuesRequest::~ListQueuesRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.ListQueuesRequest)
  SharedDtor();
}

void ListQueuesRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListQueuesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListQueuesRequest::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListQueuesRequest& ListQueuesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_ListQueuesRequest.base);
  return *internal_default_instance();
}


void ListQueuesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.ListQueuesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListQueuesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.ListQueuesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.ListQueuesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.ListQueuesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.ListQueuesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.ListQueuesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.ListQueuesRequest)
  return false;
#undef DO_
}

void ListQueuesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.ListQueuesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListQueuesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListQueuesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListQueuesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.ListQueuesRequest)
}

::google::protobuf::uint8* ListQueuesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.ListQueuesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListQueuesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListQueuesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListQueuesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.ListQueuesRequest)
  return target;
}

size_t ListQueuesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.ListQueuesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListQueuesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.ListQueuesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListQueuesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListQueuesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.ListQueuesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.ListQueuesRequest)
    MergeFrom(*source);
  }
}

void ListQueuesRequest::MergeFrom(const ListQueuesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.ListQueuesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListQueuesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.ListQueuesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListQueuesRequest::CopyFrom(const ListQueuesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.ListQueuesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListQueuesRequest::IsInitialized() const {
  return true;
}

void ListQueuesRequest::Swap(ListQueuesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListQueuesRequest::InternalSwap(ListQueuesRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListQueuesRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListQueuesResponse::InitAsDefaultInstance() {
}
void ListQueuesResponse::clear_queues() {
  queues_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListQueuesResponse::kQueuesFieldNumber;
const int ListQueuesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListQueuesResponse::ListQueuesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_ListQueuesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.ListQueuesResponse)
}
ListQueuesResponse::ListQueuesResponse(const ListQueuesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      queues_(from.queues_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.ListQueuesResponse)
}

void ListQueuesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListQueuesResponse::~ListQueuesResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.ListQueuesResponse)
  SharedDtor();
}

void ListQueuesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListQueuesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListQueuesResponse::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListQueuesResponse& ListQueuesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_ListQueuesResponse.base);
  return *internal_default_instance();
}


void ListQueuesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.ListQueuesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  queues_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListQueuesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.ListQueuesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.tasks.v2beta3.Queue queues = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_queues()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.ListQueuesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.ListQueuesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.ListQueuesResponse)
  return false;
#undef DO_
}

void ListQueuesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.ListQueuesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.tasks.v2beta3.Queue queues = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queues_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->queues(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListQueuesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.ListQueuesResponse)
}

::google::protobuf::uint8* ListQueuesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.ListQueuesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.tasks.v2beta3.Queue queues = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queues_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->queues(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListQueuesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.ListQueuesResponse)
  return target;
}

size_t ListQueuesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.ListQueuesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.tasks.v2beta3.Queue queues = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->queues_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->queues(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListQueuesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.ListQueuesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListQueuesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListQueuesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.ListQueuesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.ListQueuesResponse)
    MergeFrom(*source);
  }
}

void ListQueuesResponse::MergeFrom(const ListQueuesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.ListQueuesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  queues_.MergeFrom(from.queues_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListQueuesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.ListQueuesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListQueuesResponse::CopyFrom(const ListQueuesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.ListQueuesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListQueuesResponse::IsInitialized() const {
  return true;
}

void ListQueuesResponse::Swap(ListQueuesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListQueuesResponse::InternalSwap(ListQueuesResponse* other) {
  using std::swap;
  CastToBase(&queues_)->InternalSwap(CastToBase(&other->queues_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListQueuesResponse::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetQueueRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetQueueRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetQueueRequest::GetQueueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_GetQueueRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.GetQueueRequest)
}
GetQueueRequest::GetQueueRequest(const GetQueueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.GetQueueRequest)
}

void GetQueueRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetQueueRequest::~GetQueueRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.GetQueueRequest)
  SharedDtor();
}

void GetQueueRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetQueueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetQueueRequest::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetQueueRequest& GetQueueRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_GetQueueRequest.base);
  return *internal_default_instance();
}


void GetQueueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.GetQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetQueueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.GetQueueRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.GetQueueRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.GetQueueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.GetQueueRequest)
  return false;
#undef DO_
}

void GetQueueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.GetQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.GetQueueRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.GetQueueRequest)
}

::google::protobuf::uint8* GetQueueRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.GetQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.GetQueueRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.GetQueueRequest)
  return target;
}

size_t GetQueueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.GetQueueRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetQueueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.GetQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetQueueRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetQueueRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.GetQueueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.GetQueueRequest)
    MergeFrom(*source);
  }
}

void GetQueueRequest::MergeFrom(const GetQueueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.GetQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetQueueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.GetQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQueueRequest::CopyFrom(const GetQueueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.GetQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQueueRequest::IsInitialized() const {
  return true;
}

void GetQueueRequest::Swap(GetQueueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetQueueRequest::InternalSwap(GetQueueRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetQueueRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateQueueRequest::InitAsDefaultInstance() {
  ::google::cloud::tasks::v2beta3::_CreateQueueRequest_default_instance_._instance.get_mutable()->queue_ = const_cast< ::google::cloud::tasks::v2beta3::Queue*>(
      ::google::cloud::tasks::v2beta3::Queue::internal_default_instance());
}
void CreateQueueRequest::clear_queue() {
  if (GetArenaNoVirtual() == NULL && queue_ != NULL) {
    delete queue_;
  }
  queue_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateQueueRequest::kParentFieldNumber;
const int CreateQueueRequest::kQueueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateQueueRequest::CreateQueueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_CreateQueueRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.CreateQueueRequest)
}
CreateQueueRequest::CreateQueueRequest(const CreateQueueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_queue()) {
    queue_ = new ::google::cloud::tasks::v2beta3::Queue(*from.queue_);
  } else {
    queue_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.CreateQueueRequest)
}

void CreateQueueRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  queue_ = NULL;
}

CreateQueueRequest::~CreateQueueRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.CreateQueueRequest)
  SharedDtor();
}

void CreateQueueRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete queue_;
}

void CreateQueueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateQueueRequest::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateQueueRequest& CreateQueueRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_CreateQueueRequest.base);
  return *internal_default_instance();
}


void CreateQueueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.CreateQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && queue_ != NULL) {
    delete queue_;
  }
  queue_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateQueueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.CreateQueueRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.CreateQueueRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.tasks.v2beta3.Queue queue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_queue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.CreateQueueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.CreateQueueRequest)
  return false;
#undef DO_
}

void CreateQueueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.CreateQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.CreateQueueRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.cloud.tasks.v2beta3.Queue queue = 2;
  if (this->has_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_queue(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.CreateQueueRequest)
}

::google::protobuf::uint8* CreateQueueRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.CreateQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.CreateQueueRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.cloud.tasks.v2beta3.Queue queue = 2;
  if (this->has_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_queue(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.CreateQueueRequest)
  return target;
}

size_t CreateQueueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.CreateQueueRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.cloud.tasks.v2beta3.Queue queue = 2;
  if (this->has_queue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *queue_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateQueueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.CreateQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateQueueRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateQueueRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.CreateQueueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.CreateQueueRequest)
    MergeFrom(*source);
  }
}

void CreateQueueRequest::MergeFrom(const CreateQueueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.CreateQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_queue()) {
    mutable_queue()->::google::cloud::tasks::v2beta3::Queue::MergeFrom(from.queue());
  }
}

void CreateQueueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.CreateQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateQueueRequest::CopyFrom(const CreateQueueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.CreateQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateQueueRequest::IsInitialized() const {
  return true;
}

void CreateQueueRequest::Swap(CreateQueueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateQueueRequest::InternalSwap(CreateQueueRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(queue_, other->queue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateQueueRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateQueueRequest::InitAsDefaultInstance() {
  ::google::cloud::tasks::v2beta3::_UpdateQueueRequest_default_instance_._instance.get_mutable()->queue_ = const_cast< ::google::cloud::tasks::v2beta3::Queue*>(
      ::google::cloud::tasks::v2beta3::Queue::internal_default_instance());
  ::google::cloud::tasks::v2beta3::_UpdateQueueRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateQueueRequest::clear_queue() {
  if (GetArenaNoVirtual() == NULL && queue_ != NULL) {
    delete queue_;
  }
  queue_ = NULL;
}
void UpdateQueueRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateQueueRequest::kQueueFieldNumber;
const int UpdateQueueRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateQueueRequest::UpdateQueueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_UpdateQueueRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.UpdateQueueRequest)
}
UpdateQueueRequest::UpdateQueueRequest(const UpdateQueueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_queue()) {
    queue_ = new ::google::cloud::tasks::v2beta3::Queue(*from.queue_);
  } else {
    queue_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.UpdateQueueRequest)
}

void UpdateQueueRequest::SharedCtor() {
  ::memset(&queue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&queue_)) + sizeof(update_mask_));
}

UpdateQueueRequest::~UpdateQueueRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.UpdateQueueRequest)
  SharedDtor();
}

void UpdateQueueRequest::SharedDtor() {
  if (this != internal_default_instance()) delete queue_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateQueueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateQueueRequest::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateQueueRequest& UpdateQueueRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_UpdateQueueRequest.base);
  return *internal_default_instance();
}


void UpdateQueueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.UpdateQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && queue_ != NULL) {
    delete queue_;
  }
  queue_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateQueueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.UpdateQueueRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.tasks.v2beta3.Queue queue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_queue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.UpdateQueueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.UpdateQueueRequest)
  return false;
#undef DO_
}

void UpdateQueueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.UpdateQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.tasks.v2beta3.Queue queue = 1;
  if (this->has_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_queue(), output);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_update_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.UpdateQueueRequest)
}

::google::protobuf::uint8* UpdateQueueRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.UpdateQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.tasks.v2beta3.Queue queue = 1;
  if (this->has_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_queue(), deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_update_mask(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.UpdateQueueRequest)
  return target;
}

size_t UpdateQueueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.UpdateQueueRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.tasks.v2beta3.Queue queue = 1;
  if (this->has_queue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *queue_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateQueueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.UpdateQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateQueueRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateQueueRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.UpdateQueueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.UpdateQueueRequest)
    MergeFrom(*source);
  }
}

void UpdateQueueRequest::MergeFrom(const UpdateQueueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.UpdateQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_queue()) {
    mutable_queue()->::google::cloud::tasks::v2beta3::Queue::MergeFrom(from.queue());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateQueueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.UpdateQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateQueueRequest::CopyFrom(const UpdateQueueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.UpdateQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateQueueRequest::IsInitialized() const {
  return true;
}

void UpdateQueueRequest::Swap(UpdateQueueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateQueueRequest::InternalSwap(UpdateQueueRequest* other) {
  using std::swap;
  swap(queue_, other->queue_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateQueueRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteQueueRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteQueueRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteQueueRequest::DeleteQueueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_DeleteQueueRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.DeleteQueueRequest)
}
DeleteQueueRequest::DeleteQueueRequest(const DeleteQueueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.DeleteQueueRequest)
}

void DeleteQueueRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteQueueRequest::~DeleteQueueRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.DeleteQueueRequest)
  SharedDtor();
}

void DeleteQueueRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteQueueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteQueueRequest::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteQueueRequest& DeleteQueueRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_DeleteQueueRequest.base);
  return *internal_default_instance();
}


void DeleteQueueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.DeleteQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteQueueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.DeleteQueueRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.DeleteQueueRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.DeleteQueueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.DeleteQueueRequest)
  return false;
#undef DO_
}

void DeleteQueueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.DeleteQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.DeleteQueueRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.DeleteQueueRequest)
}

::google::protobuf::uint8* DeleteQueueRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.DeleteQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.DeleteQueueRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.DeleteQueueRequest)
  return target;
}

size_t DeleteQueueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.DeleteQueueRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteQueueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.DeleteQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteQueueRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteQueueRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.DeleteQueueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.DeleteQueueRequest)
    MergeFrom(*source);
  }
}

void DeleteQueueRequest::MergeFrom(const DeleteQueueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.DeleteQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteQueueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.DeleteQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteQueueRequest::CopyFrom(const DeleteQueueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.DeleteQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteQueueRequest::IsInitialized() const {
  return true;
}

void DeleteQueueRequest::Swap(DeleteQueueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteQueueRequest::InternalSwap(DeleteQueueRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteQueueRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PurgeQueueRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PurgeQueueRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PurgeQueueRequest::PurgeQueueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_PurgeQueueRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.PurgeQueueRequest)
}
PurgeQueueRequest::PurgeQueueRequest(const PurgeQueueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.PurgeQueueRequest)
}

void PurgeQueueRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PurgeQueueRequest::~PurgeQueueRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.PurgeQueueRequest)
  SharedDtor();
}

void PurgeQueueRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PurgeQueueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PurgeQueueRequest::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PurgeQueueRequest& PurgeQueueRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_PurgeQueueRequest.base);
  return *internal_default_instance();
}


void PurgeQueueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.PurgeQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PurgeQueueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.PurgeQueueRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.PurgeQueueRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.PurgeQueueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.PurgeQueueRequest)
  return false;
#undef DO_
}

void PurgeQueueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.PurgeQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.PurgeQueueRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.PurgeQueueRequest)
}

::google::protobuf::uint8* PurgeQueueRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.PurgeQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.PurgeQueueRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.PurgeQueueRequest)
  return target;
}

size_t PurgeQueueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.PurgeQueueRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PurgeQueueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.PurgeQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PurgeQueueRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PurgeQueueRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.PurgeQueueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.PurgeQueueRequest)
    MergeFrom(*source);
  }
}

void PurgeQueueRequest::MergeFrom(const PurgeQueueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.PurgeQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PurgeQueueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.PurgeQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PurgeQueueRequest::CopyFrom(const PurgeQueueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.PurgeQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurgeQueueRequest::IsInitialized() const {
  return true;
}

void PurgeQueueRequest::Swap(PurgeQueueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PurgeQueueRequest::InternalSwap(PurgeQueueRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PurgeQueueRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PauseQueueRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PauseQueueRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PauseQueueRequest::PauseQueueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_PauseQueueRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.PauseQueueRequest)
}
PauseQueueRequest::PauseQueueRequest(const PauseQueueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.PauseQueueRequest)
}

void PauseQueueRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PauseQueueRequest::~PauseQueueRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.PauseQueueRequest)
  SharedDtor();
}

void PauseQueueRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PauseQueueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PauseQueueRequest::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PauseQueueRequest& PauseQueueRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_PauseQueueRequest.base);
  return *internal_default_instance();
}


void PauseQueueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.PauseQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PauseQueueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.PauseQueueRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.PauseQueueRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.PauseQueueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.PauseQueueRequest)
  return false;
#undef DO_
}

void PauseQueueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.PauseQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.PauseQueueRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.PauseQueueRequest)
}

::google::protobuf::uint8* PauseQueueRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.PauseQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.PauseQueueRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.PauseQueueRequest)
  return target;
}

size_t PauseQueueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.PauseQueueRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PauseQueueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.PauseQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PauseQueueRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PauseQueueRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.PauseQueueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.PauseQueueRequest)
    MergeFrom(*source);
  }
}

void PauseQueueRequest::MergeFrom(const PauseQueueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.PauseQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PauseQueueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.PauseQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PauseQueueRequest::CopyFrom(const PauseQueueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.PauseQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PauseQueueRequest::IsInitialized() const {
  return true;
}

void PauseQueueRequest::Swap(PauseQueueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PauseQueueRequest::InternalSwap(PauseQueueRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PauseQueueRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResumeQueueRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResumeQueueRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResumeQueueRequest::ResumeQueueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_ResumeQueueRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.ResumeQueueRequest)
}
ResumeQueueRequest::ResumeQueueRequest(const ResumeQueueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.ResumeQueueRequest)
}

void ResumeQueueRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ResumeQueueRequest::~ResumeQueueRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.ResumeQueueRequest)
  SharedDtor();
}

void ResumeQueueRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResumeQueueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResumeQueueRequest::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResumeQueueRequest& ResumeQueueRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_ResumeQueueRequest.base);
  return *internal_default_instance();
}


void ResumeQueueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.ResumeQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ResumeQueueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.ResumeQueueRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.ResumeQueueRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.ResumeQueueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.ResumeQueueRequest)
  return false;
#undef DO_
}

void ResumeQueueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.ResumeQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ResumeQueueRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.ResumeQueueRequest)
}

::google::protobuf::uint8* ResumeQueueRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.ResumeQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ResumeQueueRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.ResumeQueueRequest)
  return target;
}

size_t ResumeQueueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.ResumeQueueRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResumeQueueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.ResumeQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResumeQueueRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResumeQueueRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.ResumeQueueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.ResumeQueueRequest)
    MergeFrom(*source);
  }
}

void ResumeQueueRequest::MergeFrom(const ResumeQueueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.ResumeQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ResumeQueueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.ResumeQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResumeQueueRequest::CopyFrom(const ResumeQueueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.ResumeQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResumeQueueRequest::IsInitialized() const {
  return true;
}

void ResumeQueueRequest::Swap(ResumeQueueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResumeQueueRequest::InternalSwap(ResumeQueueRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResumeQueueRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTasksRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTasksRequest::kParentFieldNumber;
const int ListTasksRequest::kResponseViewFieldNumber;
const int ListTasksRequest::kPageSizeFieldNumber;
const int ListTasksRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTasksRequest::ListTasksRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_ListTasksRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.ListTasksRequest)
}
ListTasksRequest::ListTasksRequest(const ListTasksRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  ::memcpy(&response_view_, &from.response_view_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&response_view_)) + sizeof(page_size_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.ListTasksRequest)
}

void ListTasksRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&response_view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&response_view_)) + sizeof(page_size_));
}

ListTasksRequest::~ListTasksRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.ListTasksRequest)
  SharedDtor();
}

void ListTasksRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTasksRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListTasksRequest::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTasksRequest& ListTasksRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_ListTasksRequest.base);
  return *internal_default_instance();
}


void ListTasksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.ListTasksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&response_view_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&response_view_)) + sizeof(page_size_));
  _internal_metadata_.Clear();
}

bool ListTasksRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.ListTasksRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.ListTasksRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.tasks.v2beta3.Task.View response_view = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response_view(static_cast< ::google::cloud::tasks::v2beta3::Task_View >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.ListTasksRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.ListTasksRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.ListTasksRequest)
  return false;
#undef DO_
}

void ListTasksRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.ListTasksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListTasksRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.cloud.tasks.v2beta3.Task.View response_view = 2;
  if (this->response_view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->response_view(), output);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListTasksRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.ListTasksRequest)
}

::google::protobuf::uint8* ListTasksRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.ListTasksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListTasksRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.cloud.tasks.v2beta3.Task.View response_view = 2;
  if (this->response_view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->response_view(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListTasksRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.ListTasksRequest)
  return target;
}

size_t ListTasksRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.ListTasksRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // .google.cloud.tasks.v2beta3.Task.View response_view = 2;
  if (this->response_view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_view());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTasksRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.ListTasksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTasksRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTasksRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.ListTasksRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.ListTasksRequest)
    MergeFrom(*source);
  }
}

void ListTasksRequest::MergeFrom(const ListTasksRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.ListTasksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.response_view() != 0) {
    set_response_view(from.response_view());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListTasksRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.ListTasksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTasksRequest::CopyFrom(const ListTasksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.ListTasksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTasksRequest::IsInitialized() const {
  return true;
}

void ListTasksRequest::Swap(ListTasksRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTasksRequest::InternalSwap(ListTasksRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(response_view_, other->response_view_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListTasksRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTasksResponse::InitAsDefaultInstance() {
}
void ListTasksResponse::clear_tasks() {
  tasks_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTasksResponse::kTasksFieldNumber;
const int ListTasksResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTasksResponse::ListTasksResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_ListTasksResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.ListTasksResponse)
}
ListTasksResponse::ListTasksResponse(const ListTasksResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tasks_(from.tasks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.ListTasksResponse)
}

void ListTasksResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListTasksResponse::~ListTasksResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.ListTasksResponse)
  SharedDtor();
}

void ListTasksResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTasksResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListTasksResponse::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTasksResponse& ListTasksResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_ListTasksResponse.base);
  return *internal_default_instance();
}


void ListTasksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.ListTasksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tasks_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListTasksResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.ListTasksResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.tasks.v2beta3.Task tasks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.ListTasksResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.ListTasksResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.ListTasksResponse)
  return false;
#undef DO_
}

void ListTasksResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.ListTasksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.tasks.v2beta3.Task tasks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tasks(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListTasksResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.ListTasksResponse)
}

::google::protobuf::uint8* ListTasksResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.ListTasksResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.tasks.v2beta3.Task tasks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tasks(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.ListTasksResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.ListTasksResponse)
  return target;
}

size_t ListTasksResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.ListTasksResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.tasks.v2beta3.Task tasks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tasks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tasks(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTasksResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.ListTasksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTasksResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTasksResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.ListTasksResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.ListTasksResponse)
    MergeFrom(*source);
  }
}

void ListTasksResponse::MergeFrom(const ListTasksResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.ListTasksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tasks_.MergeFrom(from.tasks_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListTasksResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.ListTasksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTasksResponse::CopyFrom(const ListTasksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.ListTasksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTasksResponse::IsInitialized() const {
  return true;
}

void ListTasksResponse::Swap(ListTasksResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTasksResponse::InternalSwap(ListTasksResponse* other) {
  using std::swap;
  CastToBase(&tasks_)->InternalSwap(CastToBase(&other->tasks_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListTasksResponse::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTaskRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTaskRequest::kNameFieldNumber;
const int GetTaskRequest::kResponseViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTaskRequest::GetTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_GetTaskRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.GetTaskRequest)
}
GetTaskRequest::GetTaskRequest(const GetTaskRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  response_view_ = from.response_view_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.GetTaskRequest)
}

void GetTaskRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_view_ = 0;
}

GetTaskRequest::~GetTaskRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.GetTaskRequest)
  SharedDtor();
}

void GetTaskRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTaskRequest::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTaskRequest& GetTaskRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_GetTaskRequest.base);
  return *internal_default_instance();
}


void GetTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.GetTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_view_ = 0;
  _internal_metadata_.Clear();
}

bool GetTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.GetTaskRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.GetTaskRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.tasks.v2beta3.Task.View response_view = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response_view(static_cast< ::google::cloud::tasks::v2beta3::Task_View >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.GetTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.GetTaskRequest)
  return false;
#undef DO_
}

void GetTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.GetTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.GetTaskRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.cloud.tasks.v2beta3.Task.View response_view = 2;
  if (this->response_view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->response_view(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.GetTaskRequest)
}

::google::protobuf::uint8* GetTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.GetTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.GetTaskRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.cloud.tasks.v2beta3.Task.View response_view = 2;
  if (this->response_view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->response_view(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.GetTaskRequest)
  return target;
}

size_t GetTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.GetTaskRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.cloud.tasks.v2beta3.Task.View response_view = 2;
  if (this->response_view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_view());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.GetTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTaskRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.GetTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.GetTaskRequest)
    MergeFrom(*source);
  }
}

void GetTaskRequest::MergeFrom(const GetTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.GetTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.response_view() != 0) {
    set_response_view(from.response_view());
  }
}

void GetTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.GetTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTaskRequest::CopyFrom(const GetTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.GetTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTaskRequest::IsInitialized() const {
  return true;
}

void GetTaskRequest::Swap(GetTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTaskRequest::InternalSwap(GetTaskRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(response_view_, other->response_view_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTaskRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateTaskRequest::InitAsDefaultInstance() {
  ::google::cloud::tasks::v2beta3::_CreateTaskRequest_default_instance_._instance.get_mutable()->task_ = const_cast< ::google::cloud::tasks::v2beta3::Task*>(
      ::google::cloud::tasks::v2beta3::Task::internal_default_instance());
}
void CreateTaskRequest::clear_task() {
  if (GetArenaNoVirtual() == NULL && task_ != NULL) {
    delete task_;
  }
  task_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTaskRequest::kParentFieldNumber;
const int CreateTaskRequest::kTaskFieldNumber;
const int CreateTaskRequest::kResponseViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTaskRequest::CreateTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_CreateTaskRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.CreateTaskRequest)
}
CreateTaskRequest::CreateTaskRequest(const CreateTaskRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_task()) {
    task_ = new ::google::cloud::tasks::v2beta3::Task(*from.task_);
  } else {
    task_ = NULL;
  }
  response_view_ = from.response_view_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.CreateTaskRequest)
}

void CreateTaskRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&task_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_view_) -
      reinterpret_cast<char*>(&task_)) + sizeof(response_view_));
}

CreateTaskRequest::~CreateTaskRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.CreateTaskRequest)
  SharedDtor();
}

void CreateTaskRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete task_;
}

void CreateTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateTaskRequest::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTaskRequest& CreateTaskRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_CreateTaskRequest.base);
  return *internal_default_instance();
}


void CreateTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.CreateTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && task_ != NULL) {
    delete task_;
  }
  task_ = NULL;
  response_view_ = 0;
  _internal_metadata_.Clear();
}

bool CreateTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.CreateTaskRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.CreateTaskRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.tasks.v2beta3.Task task = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.tasks.v2beta3.Task.View response_view = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response_view(static_cast< ::google::cloud::tasks::v2beta3::Task_View >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.CreateTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.CreateTaskRequest)
  return false;
#undef DO_
}

void CreateTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.CreateTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.CreateTaskRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.cloud.tasks.v2beta3.Task task = 2;
  if (this->has_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_task(), output);
  }

  // .google.cloud.tasks.v2beta3.Task.View response_view = 3;
  if (this->response_view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->response_view(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.CreateTaskRequest)
}

::google::protobuf::uint8* CreateTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.CreateTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.CreateTaskRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.cloud.tasks.v2beta3.Task task = 2;
  if (this->has_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_task(), deterministic, target);
  }

  // .google.cloud.tasks.v2beta3.Task.View response_view = 3;
  if (this->response_view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->response_view(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.CreateTaskRequest)
  return target;
}

size_t CreateTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.CreateTaskRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.cloud.tasks.v2beta3.Task task = 2;
  if (this->has_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *task_);
  }

  // .google.cloud.tasks.v2beta3.Task.View response_view = 3;
  if (this->response_view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_view());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.CreateTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTaskRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.CreateTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.CreateTaskRequest)
    MergeFrom(*source);
  }
}

void CreateTaskRequest::MergeFrom(const CreateTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.CreateTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_task()) {
    mutable_task()->::google::cloud::tasks::v2beta3::Task::MergeFrom(from.task());
  }
  if (from.response_view() != 0) {
    set_response_view(from.response_view());
  }
}

void CreateTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.CreateTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTaskRequest::CopyFrom(const CreateTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.CreateTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTaskRequest::IsInitialized() const {
  return true;
}

void CreateTaskRequest::Swap(CreateTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTaskRequest::InternalSwap(CreateTaskRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(task_, other->task_);
  swap(response_view_, other->response_view_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateTaskRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteTaskRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteTaskRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteTaskRequest::DeleteTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_DeleteTaskRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.DeleteTaskRequest)
}
DeleteTaskRequest::DeleteTaskRequest(const DeleteTaskRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.DeleteTaskRequest)
}

void DeleteTaskRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteTaskRequest::~DeleteTaskRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.DeleteTaskRequest)
  SharedDtor();
}

void DeleteTaskRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteTaskRequest::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteTaskRequest& DeleteTaskRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_DeleteTaskRequest.base);
  return *internal_default_instance();
}


void DeleteTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.DeleteTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.DeleteTaskRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.DeleteTaskRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.DeleteTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.DeleteTaskRequest)
  return false;
#undef DO_
}

void DeleteTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.DeleteTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.DeleteTaskRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.DeleteTaskRequest)
}

::google::protobuf::uint8* DeleteTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.DeleteTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.DeleteTaskRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.DeleteTaskRequest)
  return target;
}

size_t DeleteTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.DeleteTaskRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.DeleteTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteTaskRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.DeleteTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.DeleteTaskRequest)
    MergeFrom(*source);
  }
}

void DeleteTaskRequest::MergeFrom(const DeleteTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.DeleteTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.DeleteTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteTaskRequest::CopyFrom(const DeleteTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.DeleteTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteTaskRequest::IsInitialized() const {
  return true;
}

void DeleteTaskRequest::Swap(DeleteTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteTaskRequest::InternalSwap(DeleteTaskRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteTaskRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunTaskRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunTaskRequest::kNameFieldNumber;
const int RunTaskRequest::kResponseViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunTaskRequest::RunTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_RunTaskRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.tasks.v2beta3.RunTaskRequest)
}
RunTaskRequest::RunTaskRequest(const RunTaskRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  response_view_ = from.response_view_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.tasks.v2beta3.RunTaskRequest)
}

void RunTaskRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_view_ = 0;
}

RunTaskRequest::~RunTaskRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.tasks.v2beta3.RunTaskRequest)
  SharedDtor();
}

void RunTaskRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RunTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunTaskRequest::descriptor() {
  ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunTaskRequest& RunTaskRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::scc_info_RunTaskRequest.base);
  return *internal_default_instance();
}


void RunTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.tasks.v2beta3.RunTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_view_ = 0;
  _internal_metadata_.Clear();
}

bool RunTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.tasks.v2beta3.RunTaskRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.tasks.v2beta3.RunTaskRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.tasks.v2beta3.Task.View response_view = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response_view(static_cast< ::google::cloud::tasks::v2beta3::Task_View >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.tasks.v2beta3.RunTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.tasks.v2beta3.RunTaskRequest)
  return false;
#undef DO_
}

void RunTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.tasks.v2beta3.RunTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.RunTaskRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.cloud.tasks.v2beta3.Task.View response_view = 2;
  if (this->response_view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->response_view(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.tasks.v2beta3.RunTaskRequest)
}

::google::protobuf::uint8* RunTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.tasks.v2beta3.RunTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.tasks.v2beta3.RunTaskRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.cloud.tasks.v2beta3.Task.View response_view = 2;
  if (this->response_view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->response_view(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.tasks.v2beta3.RunTaskRequest)
  return target;
}

size_t RunTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.tasks.v2beta3.RunTaskRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.cloud.tasks.v2beta3.Task.View response_view = 2;
  if (this->response_view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_view());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.tasks.v2beta3.RunTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RunTaskRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.tasks.v2beta3.RunTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.tasks.v2beta3.RunTaskRequest)
    MergeFrom(*source);
  }
}

void RunTaskRequest::MergeFrom(const RunTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.tasks.v2beta3.RunTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.response_view() != 0) {
    set_response_view(from.response_view());
  }
}

void RunTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.tasks.v2beta3.RunTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunTaskRequest::CopyFrom(const RunTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.tasks.v2beta3.RunTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunTaskRequest::IsInitialized() const {
  return true;
}

void RunTaskRequest::Swap(RunTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunTaskRequest::InternalSwap(RunTaskRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(response_view_, other->response_view_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunTaskRequest::GetMetadata() const {
  protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2fcloudtasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2beta3
}  // namespace tasks
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::ListQueuesRequest* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::ListQueuesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::ListQueuesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::ListQueuesResponse* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::ListQueuesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::ListQueuesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::GetQueueRequest* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::GetQueueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::GetQueueRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::CreateQueueRequest* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::CreateQueueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::CreateQueueRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::UpdateQueueRequest* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::UpdateQueueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::UpdateQueueRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::DeleteQueueRequest* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::DeleteQueueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::DeleteQueueRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::PurgeQueueRequest* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::PurgeQueueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::PurgeQueueRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::PauseQueueRequest* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::PauseQueueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::PauseQueueRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::ResumeQueueRequest* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::ResumeQueueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::ResumeQueueRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::ListTasksRequest* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::ListTasksRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::ListTasksRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::ListTasksResponse* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::ListTasksResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::ListTasksResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::GetTaskRequest* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::GetTaskRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::GetTaskRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::CreateTaskRequest* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::CreateTaskRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::CreateTaskRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::DeleteTaskRequest* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::DeleteTaskRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::DeleteTaskRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::tasks::v2beta3::RunTaskRequest* Arena::CreateMaybeMessage< ::google::cloud::tasks::v2beta3::RunTaskRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::tasks::v2beta3::RunTaskRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
