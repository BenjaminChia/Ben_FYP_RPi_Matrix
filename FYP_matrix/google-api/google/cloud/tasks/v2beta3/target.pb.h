// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/tasks/v2beta3/target.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2ftasks_2fv2beta3_2ftarget_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2ftasks_2fv2beta3_2ftarget_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2ftasks_2fv2beta3_2ftarget_2eproto 

namespace protobuf_google_2fcloud_2ftasks_2fv2beta3_2ftarget_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2ftasks_2fv2beta3_2ftarget_2eproto
namespace google {
namespace cloud {
namespace tasks {
namespace v2beta3 {
class AppEngineHttpQueue;
class AppEngineHttpQueueDefaultTypeInternal;
extern AppEngineHttpQueueDefaultTypeInternal _AppEngineHttpQueue_default_instance_;
class AppEngineHttpRequest;
class AppEngineHttpRequestDefaultTypeInternal;
extern AppEngineHttpRequestDefaultTypeInternal _AppEngineHttpRequest_default_instance_;
class AppEngineHttpRequest_HeadersEntry_DoNotUse;
class AppEngineHttpRequest_HeadersEntry_DoNotUseDefaultTypeInternal;
extern AppEngineHttpRequest_HeadersEntry_DoNotUseDefaultTypeInternal _AppEngineHttpRequest_HeadersEntry_DoNotUse_default_instance_;
class AppEngineRouting;
class AppEngineRoutingDefaultTypeInternal;
extern AppEngineRoutingDefaultTypeInternal _AppEngineRouting_default_instance_;
}  // namespace v2beta3
}  // namespace tasks
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::tasks::v2beta3::AppEngineHttpQueue* Arena::CreateMaybeMessage<::google::cloud::tasks::v2beta3::AppEngineHttpQueue>(Arena*);
template<> ::google::cloud::tasks::v2beta3::AppEngineHttpRequest* Arena::CreateMaybeMessage<::google::cloud::tasks::v2beta3::AppEngineHttpRequest>(Arena*);
template<> ::google::cloud::tasks::v2beta3::AppEngineHttpRequest_HeadersEntry_DoNotUse* Arena::CreateMaybeMessage<::google::cloud::tasks::v2beta3::AppEngineHttpRequest_HeadersEntry_DoNotUse>(Arena*);
template<> ::google::cloud::tasks::v2beta3::AppEngineRouting* Arena::CreateMaybeMessage<::google::cloud::tasks::v2beta3::AppEngineRouting>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace tasks {
namespace v2beta3 {

enum HttpMethod {
  HTTP_METHOD_UNSPECIFIED = 0,
  POST = 1,
  GET = 2,
  HEAD = 3,
  PUT = 4,
  DELETE = 5,
  HttpMethod_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HttpMethod_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HttpMethod_IsValid(int value);
const HttpMethod HttpMethod_MIN = HTTP_METHOD_UNSPECIFIED;
const HttpMethod HttpMethod_MAX = DELETE;
const int HttpMethod_ARRAYSIZE = HttpMethod_MAX + 1;

const ::google::protobuf::EnumDescriptor* HttpMethod_descriptor();
inline const ::std::string& HttpMethod_Name(HttpMethod value) {
  return ::google::protobuf::internal::NameOfEnum(
    HttpMethod_descriptor(), value);
}
inline bool HttpMethod_Parse(
    const ::std::string& name, HttpMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HttpMethod>(
    HttpMethod_descriptor(), name, value);
}
// ===================================================================

class AppEngineHttpQueue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.tasks.v2beta3.AppEngineHttpQueue) */ {
 public:
  AppEngineHttpQueue();
  virtual ~AppEngineHttpQueue();

  AppEngineHttpQueue(const AppEngineHttpQueue& from);

  inline AppEngineHttpQueue& operator=(const AppEngineHttpQueue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppEngineHttpQueue(AppEngineHttpQueue&& from) noexcept
    : AppEngineHttpQueue() {
    *this = ::std::move(from);
  }

  inline AppEngineHttpQueue& operator=(AppEngineHttpQueue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppEngineHttpQueue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppEngineHttpQueue* internal_default_instance() {
    return reinterpret_cast<const AppEngineHttpQueue*>(
               &_AppEngineHttpQueue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AppEngineHttpQueue* other);
  friend void swap(AppEngineHttpQueue& a, AppEngineHttpQueue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppEngineHttpQueue* New() const final {
    return CreateMaybeMessage<AppEngineHttpQueue>(NULL);
  }

  AppEngineHttpQueue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppEngineHttpQueue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppEngineHttpQueue& from);
  void MergeFrom(const AppEngineHttpQueue& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppEngineHttpQueue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.tasks.v2beta3.AppEngineRouting app_engine_routing_override = 1;
  bool has_app_engine_routing_override() const;
  void clear_app_engine_routing_override();
  static const int kAppEngineRoutingOverrideFieldNumber = 1;
  private:
  const ::google::cloud::tasks::v2beta3::AppEngineRouting& _internal_app_engine_routing_override() const;
  public:
  const ::google::cloud::tasks::v2beta3::AppEngineRouting& app_engine_routing_override() const;
  ::google::cloud::tasks::v2beta3::AppEngineRouting* release_app_engine_routing_override();
  ::google::cloud::tasks::v2beta3::AppEngineRouting* mutable_app_engine_routing_override();
  void set_allocated_app_engine_routing_override(::google::cloud::tasks::v2beta3::AppEngineRouting* app_engine_routing_override);

  // @@protoc_insertion_point(class_scope:google.cloud.tasks.v2beta3.AppEngineHttpQueue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::cloud::tasks::v2beta3::AppEngineRouting* app_engine_routing_override_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2ftarget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppEngineHttpRequest_HeadersEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<AppEngineHttpRequest_HeadersEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<AppEngineHttpRequest_HeadersEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  AppEngineHttpRequest_HeadersEntry_DoNotUse();
  AppEngineHttpRequest_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const AppEngineHttpRequest_HeadersEntry_DoNotUse& other);
  static const AppEngineHttpRequest_HeadersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const AppEngineHttpRequest_HeadersEntry_DoNotUse*>(&_AppEngineHttpRequest_HeadersEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class AppEngineHttpRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.tasks.v2beta3.AppEngineHttpRequest) */ {
 public:
  AppEngineHttpRequest();
  virtual ~AppEngineHttpRequest();

  AppEngineHttpRequest(const AppEngineHttpRequest& from);

  inline AppEngineHttpRequest& operator=(const AppEngineHttpRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppEngineHttpRequest(AppEngineHttpRequest&& from) noexcept
    : AppEngineHttpRequest() {
    *this = ::std::move(from);
  }

  inline AppEngineHttpRequest& operator=(AppEngineHttpRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppEngineHttpRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppEngineHttpRequest* internal_default_instance() {
    return reinterpret_cast<const AppEngineHttpRequest*>(
               &_AppEngineHttpRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AppEngineHttpRequest* other);
  friend void swap(AppEngineHttpRequest& a, AppEngineHttpRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppEngineHttpRequest* New() const final {
    return CreateMaybeMessage<AppEngineHttpRequest>(NULL);
  }

  AppEngineHttpRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppEngineHttpRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppEngineHttpRequest& from);
  void MergeFrom(const AppEngineHttpRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppEngineHttpRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> headers = 4;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      headers() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_headers();

  // string relative_uri = 3;
  void clear_relative_uri();
  static const int kRelativeUriFieldNumber = 3;
  const ::std::string& relative_uri() const;
  void set_relative_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_relative_uri(::std::string&& value);
  #endif
  void set_relative_uri(const char* value);
  void set_relative_uri(const char* value, size_t size);
  ::std::string* mutable_relative_uri();
  ::std::string* release_relative_uri();
  void set_allocated_relative_uri(::std::string* relative_uri);

  // bytes body = 5;
  void clear_body();
  static const int kBodyFieldNumber = 5;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // .google.cloud.tasks.v2beta3.AppEngineRouting app_engine_routing = 2;
  bool has_app_engine_routing() const;
  void clear_app_engine_routing();
  static const int kAppEngineRoutingFieldNumber = 2;
  private:
  const ::google::cloud::tasks::v2beta3::AppEngineRouting& _internal_app_engine_routing() const;
  public:
  const ::google::cloud::tasks::v2beta3::AppEngineRouting& app_engine_routing() const;
  ::google::cloud::tasks::v2beta3::AppEngineRouting* release_app_engine_routing();
  ::google::cloud::tasks::v2beta3::AppEngineRouting* mutable_app_engine_routing();
  void set_allocated_app_engine_routing(::google::cloud::tasks::v2beta3::AppEngineRouting* app_engine_routing);

  // .google.cloud.tasks.v2beta3.HttpMethod http_method = 1;
  void clear_http_method();
  static const int kHttpMethodFieldNumber = 1;
  ::google::cloud::tasks::v2beta3::HttpMethod http_method() const;
  void set_http_method(::google::cloud::tasks::v2beta3::HttpMethod value);

  // @@protoc_insertion_point(class_scope:google.cloud.tasks.v2beta3.AppEngineHttpRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      AppEngineHttpRequest_HeadersEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > headers_;
  ::google::protobuf::internal::ArenaStringPtr relative_uri_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::cloud::tasks::v2beta3::AppEngineRouting* app_engine_routing_;
  int http_method_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2ftarget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppEngineRouting : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.tasks.v2beta3.AppEngineRouting) */ {
 public:
  AppEngineRouting();
  virtual ~AppEngineRouting();

  AppEngineRouting(const AppEngineRouting& from);

  inline AppEngineRouting& operator=(const AppEngineRouting& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppEngineRouting(AppEngineRouting&& from) noexcept
    : AppEngineRouting() {
    *this = ::std::move(from);
  }

  inline AppEngineRouting& operator=(AppEngineRouting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppEngineRouting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppEngineRouting* internal_default_instance() {
    return reinterpret_cast<const AppEngineRouting*>(
               &_AppEngineRouting_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AppEngineRouting* other);
  friend void swap(AppEngineRouting& a, AppEngineRouting& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppEngineRouting* New() const final {
    return CreateMaybeMessage<AppEngineRouting>(NULL);
  }

  AppEngineRouting* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppEngineRouting>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppEngineRouting& from);
  void MergeFrom(const AppEngineRouting& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppEngineRouting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string service = 1;
  void clear_service();
  static const int kServiceFieldNumber = 1;
  const ::std::string& service() const;
  void set_service(const ::std::string& value);
  #if LANG_CXX11
  void set_service(::std::string&& value);
  #endif
  void set_service(const char* value);
  void set_service(const char* value, size_t size);
  ::std::string* mutable_service();
  ::std::string* release_service();
  void set_allocated_service(::std::string* service);

  // string version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string instance = 3;
  void clear_instance();
  static const int kInstanceFieldNumber = 3;
  const ::std::string& instance() const;
  void set_instance(const ::std::string& value);
  #if LANG_CXX11
  void set_instance(::std::string&& value);
  #endif
  void set_instance(const char* value);
  void set_instance(const char* value, size_t size);
  ::std::string* mutable_instance();
  ::std::string* release_instance();
  void set_allocated_instance(::std::string* instance);

  // string host = 4;
  void clear_host();
  static const int kHostFieldNumber = 4;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // @@protoc_insertion_point(class_scope:google.cloud.tasks.v2beta3.AppEngineRouting)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr instance_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2ftasks_2fv2beta3_2ftarget_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AppEngineHttpQueue

// .google.cloud.tasks.v2beta3.AppEngineRouting app_engine_routing_override = 1;
inline bool AppEngineHttpQueue::has_app_engine_routing_override() const {
  return this != internal_default_instance() && app_engine_routing_override_ != NULL;
}
inline void AppEngineHttpQueue::clear_app_engine_routing_override() {
  if (GetArenaNoVirtual() == NULL && app_engine_routing_override_ != NULL) {
    delete app_engine_routing_override_;
  }
  app_engine_routing_override_ = NULL;
}
inline const ::google::cloud::tasks::v2beta3::AppEngineRouting& AppEngineHttpQueue::_internal_app_engine_routing_override() const {
  return *app_engine_routing_override_;
}
inline const ::google::cloud::tasks::v2beta3::AppEngineRouting& AppEngineHttpQueue::app_engine_routing_override() const {
  const ::google::cloud::tasks::v2beta3::AppEngineRouting* p = app_engine_routing_override_;
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta3.AppEngineHttpQueue.app_engine_routing_override)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::tasks::v2beta3::AppEngineRouting*>(
      &::google::cloud::tasks::v2beta3::_AppEngineRouting_default_instance_);
}
inline ::google::cloud::tasks::v2beta3::AppEngineRouting* AppEngineHttpQueue::release_app_engine_routing_override() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta3.AppEngineHttpQueue.app_engine_routing_override)
  
  ::google::cloud::tasks::v2beta3::AppEngineRouting* temp = app_engine_routing_override_;
  app_engine_routing_override_ = NULL;
  return temp;
}
inline ::google::cloud::tasks::v2beta3::AppEngineRouting* AppEngineHttpQueue::mutable_app_engine_routing_override() {
  
  if (app_engine_routing_override_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::tasks::v2beta3::AppEngineRouting>(GetArenaNoVirtual());
    app_engine_routing_override_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta3.AppEngineHttpQueue.app_engine_routing_override)
  return app_engine_routing_override_;
}
inline void AppEngineHttpQueue::set_allocated_app_engine_routing_override(::google::cloud::tasks::v2beta3::AppEngineRouting* app_engine_routing_override) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete app_engine_routing_override_;
  }
  if (app_engine_routing_override) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      app_engine_routing_override = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, app_engine_routing_override, submessage_arena);
    }
    
  } else {
    
  }
  app_engine_routing_override_ = app_engine_routing_override;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta3.AppEngineHttpQueue.app_engine_routing_override)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AppEngineHttpRequest

// .google.cloud.tasks.v2beta3.HttpMethod http_method = 1;
inline void AppEngineHttpRequest::clear_http_method() {
  http_method_ = 0;
}
inline ::google::cloud::tasks::v2beta3::HttpMethod AppEngineHttpRequest::http_method() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta3.AppEngineHttpRequest.http_method)
  return static_cast< ::google::cloud::tasks::v2beta3::HttpMethod >(http_method_);
}
inline void AppEngineHttpRequest::set_http_method(::google::cloud::tasks::v2beta3::HttpMethod value) {
  
  http_method_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta3.AppEngineHttpRequest.http_method)
}

// .google.cloud.tasks.v2beta3.AppEngineRouting app_engine_routing = 2;
inline bool AppEngineHttpRequest::has_app_engine_routing() const {
  return this != internal_default_instance() && app_engine_routing_ != NULL;
}
inline void AppEngineHttpRequest::clear_app_engine_routing() {
  if (GetArenaNoVirtual() == NULL && app_engine_routing_ != NULL) {
    delete app_engine_routing_;
  }
  app_engine_routing_ = NULL;
}
inline const ::google::cloud::tasks::v2beta3::AppEngineRouting& AppEngineHttpRequest::_internal_app_engine_routing() const {
  return *app_engine_routing_;
}
inline const ::google::cloud::tasks::v2beta3::AppEngineRouting& AppEngineHttpRequest::app_engine_routing() const {
  const ::google::cloud::tasks::v2beta3::AppEngineRouting* p = app_engine_routing_;
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta3.AppEngineHttpRequest.app_engine_routing)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::tasks::v2beta3::AppEngineRouting*>(
      &::google::cloud::tasks::v2beta3::_AppEngineRouting_default_instance_);
}
inline ::google::cloud::tasks::v2beta3::AppEngineRouting* AppEngineHttpRequest::release_app_engine_routing() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta3.AppEngineHttpRequest.app_engine_routing)
  
  ::google::cloud::tasks::v2beta3::AppEngineRouting* temp = app_engine_routing_;
  app_engine_routing_ = NULL;
  return temp;
}
inline ::google::cloud::tasks::v2beta3::AppEngineRouting* AppEngineHttpRequest::mutable_app_engine_routing() {
  
  if (app_engine_routing_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::tasks::v2beta3::AppEngineRouting>(GetArenaNoVirtual());
    app_engine_routing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta3.AppEngineHttpRequest.app_engine_routing)
  return app_engine_routing_;
}
inline void AppEngineHttpRequest::set_allocated_app_engine_routing(::google::cloud::tasks::v2beta3::AppEngineRouting* app_engine_routing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete app_engine_routing_;
  }
  if (app_engine_routing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      app_engine_routing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, app_engine_routing, submessage_arena);
    }
    
  } else {
    
  }
  app_engine_routing_ = app_engine_routing;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta3.AppEngineHttpRequest.app_engine_routing)
}

// string relative_uri = 3;
inline void AppEngineHttpRequest::clear_relative_uri() {
  relative_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppEngineHttpRequest::relative_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta3.AppEngineHttpRequest.relative_uri)
  return relative_uri_.GetNoArena();
}
inline void AppEngineHttpRequest::set_relative_uri(const ::std::string& value) {
  
  relative_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta3.AppEngineHttpRequest.relative_uri)
}
#if LANG_CXX11
inline void AppEngineHttpRequest::set_relative_uri(::std::string&& value) {
  
  relative_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta3.AppEngineHttpRequest.relative_uri)
}
#endif
inline void AppEngineHttpRequest::set_relative_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relative_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta3.AppEngineHttpRequest.relative_uri)
}
inline void AppEngineHttpRequest::set_relative_uri(const char* value, size_t size) {
  
  relative_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta3.AppEngineHttpRequest.relative_uri)
}
inline ::std::string* AppEngineHttpRequest::mutable_relative_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta3.AppEngineHttpRequest.relative_uri)
  return relative_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppEngineHttpRequest::release_relative_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta3.AppEngineHttpRequest.relative_uri)
  
  return relative_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppEngineHttpRequest::set_allocated_relative_uri(::std::string* relative_uri) {
  if (relative_uri != NULL) {
    
  } else {
    
  }
  relative_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relative_uri);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta3.AppEngineHttpRequest.relative_uri)
}

// map<string, string> headers = 4;
inline int AppEngineHttpRequest::headers_size() const {
  return headers_.size();
}
inline void AppEngineHttpRequest::clear_headers() {
  headers_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
AppEngineHttpRequest::headers() const {
  // @@protoc_insertion_point(field_map:google.cloud.tasks.v2beta3.AppEngineHttpRequest.headers)
  return headers_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
AppEngineHttpRequest::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_map:google.cloud.tasks.v2beta3.AppEngineHttpRequest.headers)
  return headers_.MutableMap();
}

// bytes body = 5;
inline void AppEngineHttpRequest::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppEngineHttpRequest::body() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta3.AppEngineHttpRequest.body)
  return body_.GetNoArena();
}
inline void AppEngineHttpRequest::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta3.AppEngineHttpRequest.body)
}
#if LANG_CXX11
inline void AppEngineHttpRequest::set_body(::std::string&& value) {
  
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta3.AppEngineHttpRequest.body)
}
#endif
inline void AppEngineHttpRequest::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta3.AppEngineHttpRequest.body)
}
inline void AppEngineHttpRequest::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta3.AppEngineHttpRequest.body)
}
inline ::std::string* AppEngineHttpRequest::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta3.AppEngineHttpRequest.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppEngineHttpRequest::release_body() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta3.AppEngineHttpRequest.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppEngineHttpRequest::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta3.AppEngineHttpRequest.body)
}

// -------------------------------------------------------------------

// AppEngineRouting

// string service = 1;
inline void AppEngineRouting::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppEngineRouting::service() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta3.AppEngineRouting.service)
  return service_.GetNoArena();
}
inline void AppEngineRouting::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta3.AppEngineRouting.service)
}
#if LANG_CXX11
inline void AppEngineRouting::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta3.AppEngineRouting.service)
}
#endif
inline void AppEngineRouting::set_service(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta3.AppEngineRouting.service)
}
inline void AppEngineRouting::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta3.AppEngineRouting.service)
}
inline ::std::string* AppEngineRouting::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta3.AppEngineRouting.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppEngineRouting::release_service() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta3.AppEngineRouting.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppEngineRouting::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta3.AppEngineRouting.service)
}

// string version = 2;
inline void AppEngineRouting::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppEngineRouting::version() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta3.AppEngineRouting.version)
  return version_.GetNoArena();
}
inline void AppEngineRouting::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta3.AppEngineRouting.version)
}
#if LANG_CXX11
inline void AppEngineRouting::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta3.AppEngineRouting.version)
}
#endif
inline void AppEngineRouting::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta3.AppEngineRouting.version)
}
inline void AppEngineRouting::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta3.AppEngineRouting.version)
}
inline ::std::string* AppEngineRouting::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta3.AppEngineRouting.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppEngineRouting::release_version() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta3.AppEngineRouting.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppEngineRouting::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta3.AppEngineRouting.version)
}

// string instance = 3;
inline void AppEngineRouting::clear_instance() {
  instance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppEngineRouting::instance() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta3.AppEngineRouting.instance)
  return instance_.GetNoArena();
}
inline void AppEngineRouting::set_instance(const ::std::string& value) {
  
  instance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta3.AppEngineRouting.instance)
}
#if LANG_CXX11
inline void AppEngineRouting::set_instance(::std::string&& value) {
  
  instance_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta3.AppEngineRouting.instance)
}
#endif
inline void AppEngineRouting::set_instance(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta3.AppEngineRouting.instance)
}
inline void AppEngineRouting::set_instance(const char* value, size_t size) {
  
  instance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta3.AppEngineRouting.instance)
}
inline ::std::string* AppEngineRouting::mutable_instance() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta3.AppEngineRouting.instance)
  return instance_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppEngineRouting::release_instance() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta3.AppEngineRouting.instance)
  
  return instance_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppEngineRouting::set_allocated_instance(::std::string* instance) {
  if (instance != NULL) {
    
  } else {
    
  }
  instance_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta3.AppEngineRouting.instance)
}

// string host = 4;
inline void AppEngineRouting::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppEngineRouting::host() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta3.AppEngineRouting.host)
  return host_.GetNoArena();
}
inline void AppEngineRouting::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta3.AppEngineRouting.host)
}
#if LANG_CXX11
inline void AppEngineRouting::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta3.AppEngineRouting.host)
}
#endif
inline void AppEngineRouting::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta3.AppEngineRouting.host)
}
inline void AppEngineRouting::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta3.AppEngineRouting.host)
}
inline ::std::string* AppEngineRouting::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta3.AppEngineRouting.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppEngineRouting::release_host() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta3.AppEngineRouting.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppEngineRouting::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta3.AppEngineRouting.host)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2beta3
}  // namespace tasks
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::tasks::v2beta3::HttpMethod> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::tasks::v2beta3::HttpMethod>() {
  return ::google::cloud::tasks::v2beta3::HttpMethod_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2ftasks_2fv2beta3_2ftarget_2eproto
