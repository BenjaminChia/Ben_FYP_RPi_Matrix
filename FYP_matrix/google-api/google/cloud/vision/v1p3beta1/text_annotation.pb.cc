// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vision/v1p3beta1/text_annotation.proto

#include "google/cloud/vision/v1p3beta1/text_annotation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fgeometry_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BoundingPoly;
}  // namespace protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fgeometry_2eproto
namespace protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TextAnnotation_DetectedBreak;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TextAnnotation_DetectedLanguage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Page;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Symbol;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TextAnnotation_TextProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Block;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Paragraph;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Word;
}  // namespace protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto
namespace google {
namespace cloud {
namespace vision {
namespace v1p3beta1 {
class TextAnnotation_DetectedLanguageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TextAnnotation_DetectedLanguage>
      _instance;
} _TextAnnotation_DetectedLanguage_default_instance_;
class TextAnnotation_DetectedBreakDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TextAnnotation_DetectedBreak>
      _instance;
} _TextAnnotation_DetectedBreak_default_instance_;
class TextAnnotation_TextPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TextAnnotation_TextProperty>
      _instance;
} _TextAnnotation_TextProperty_default_instance_;
class TextAnnotationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TextAnnotation>
      _instance;
} _TextAnnotation_default_instance_;
class PageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Page>
      _instance;
} _Page_default_instance_;
class BlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Block>
      _instance;
} _Block_default_instance_;
class ParagraphDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Paragraph>
      _instance;
} _Paragraph_default_instance_;
class WordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Word>
      _instance;
} _Word_default_instance_;
class SymbolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Symbol>
      _instance;
} _Symbol_default_instance_;
}  // namespace v1p3beta1
}  // namespace vision
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto {
static void InitDefaultsTextAnnotation_DetectedLanguage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1p3beta1::_TextAnnotation_DetectedLanguage_default_instance_;
    new (ptr) ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedLanguage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedLanguage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TextAnnotation_DetectedLanguage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTextAnnotation_DetectedLanguage}, {}};

static void InitDefaultsTextAnnotation_DetectedBreak() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1p3beta1::_TextAnnotation_DetectedBreak_default_instance_;
    new (ptr) ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TextAnnotation_DetectedBreak =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTextAnnotation_DetectedBreak}, {}};

static void InitDefaultsTextAnnotation_TextProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1p3beta1::_TextAnnotation_TextProperty_default_instance_;
    new (ptr) ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TextAnnotation_TextProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTextAnnotation_TextProperty}, {
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_DetectedLanguage.base,
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_DetectedBreak.base,}};

static void InitDefaultsTextAnnotation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1p3beta1::_TextAnnotation_default_instance_;
    new (ptr) ::google::cloud::vision::v1p3beta1::TextAnnotation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1p3beta1::TextAnnotation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TextAnnotation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTextAnnotation}, {
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Page.base,}};

static void InitDefaultsPage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1p3beta1::_Page_default_instance_;
    new (ptr) ::google::cloud::vision::v1p3beta1::Page();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1p3beta1::Page::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Page =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPage}, {
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_TextProperty.base,
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Block.base,}};

static void InitDefaultsBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1p3beta1::_Block_default_instance_;
    new (ptr) ::google::cloud::vision::v1p3beta1::Block();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1p3beta1::Block::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Block =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsBlock}, {
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_TextProperty.base,
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fgeometry_2eproto::scc_info_BoundingPoly.base,
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Paragraph.base,}};

static void InitDefaultsParagraph() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1p3beta1::_Paragraph_default_instance_;
    new (ptr) ::google::cloud::vision::v1p3beta1::Paragraph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1p3beta1::Paragraph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Paragraph =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsParagraph}, {
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_TextProperty.base,
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fgeometry_2eproto::scc_info_BoundingPoly.base,
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Word.base,}};

static void InitDefaultsWord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1p3beta1::_Word_default_instance_;
    new (ptr) ::google::cloud::vision::v1p3beta1::Word();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1p3beta1::Word::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Word =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsWord}, {
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_TextProperty.base,
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fgeometry_2eproto::scc_info_BoundingPoly.base,
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Symbol.base,}};

static void InitDefaultsSymbol() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1p3beta1::_Symbol_default_instance_;
    new (ptr) ::google::cloud::vision::v1p3beta1::Symbol();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1p3beta1::Symbol::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Symbol =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSymbol}, {
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_TextProperty.base,
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fgeometry_2eproto::scc_info_BoundingPoly.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TextAnnotation_DetectedLanguage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TextAnnotation_DetectedBreak.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TextAnnotation_TextProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TextAnnotation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Page.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Block.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Paragraph.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Word.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Symbol.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedLanguage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedLanguage, language_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedLanguage, confidence_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak, is_prefix_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty, detected_languages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty, detected_break_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::TextAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::TextAnnotation, pages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::TextAnnotation, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Page, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Page, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Page, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Page, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Page, blocks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Page, confidence_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Block, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Block, bounding_box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Block, paragraphs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Block, block_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Block, confidence_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Paragraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Paragraph, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Paragraph, bounding_box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Paragraph, words_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Paragraph, confidence_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Word, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Word, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Word, bounding_box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Word, symbols_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Word, confidence_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Symbol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Symbol, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Symbol, bounding_box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Symbol, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1p3beta1::Symbol, confidence_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedLanguage)},
  { 7, -1, sizeof(::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak)},
  { 14, -1, sizeof(::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty)},
  { 21, -1, sizeof(::google::cloud::vision::v1p3beta1::TextAnnotation)},
  { 28, -1, sizeof(::google::cloud::vision::v1p3beta1::Page)},
  { 38, -1, sizeof(::google::cloud::vision::v1p3beta1::Block)},
  { 48, -1, sizeof(::google::cloud::vision::v1p3beta1::Paragraph)},
  { 57, -1, sizeof(::google::cloud::vision::v1p3beta1::Word)},
  { 66, -1, sizeof(::google::cloud::vision::v1p3beta1::Symbol)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1p3beta1::_TextAnnotation_DetectedLanguage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1p3beta1::_TextAnnotation_DetectedBreak_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1p3beta1::_TextAnnotation_TextProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1p3beta1::_TextAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1p3beta1::_Page_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1p3beta1::_Block_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1p3beta1::_Paragraph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1p3beta1::_Word_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1p3beta1::_Symbol_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/vision/v1p3beta1/text_annotation.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n3google/cloud/vision/v1p3beta1/text_ann"
      "otation.proto\022\035google.cloud.vision.v1p3b"
      "eta1\032\034google/api/annotations.proto\032,goog"
      "le/cloud/vision/v1p3beta1/geometry.proto"
      "\"\262\004\n\016TextAnnotation\0222\n\005pages\030\001 \003(\0132#.goo"
      "gle.cloud.vision.v1p3beta1.Page\022\014\n\004text\030"
      "\002 \001(\t\032=\n\020DetectedLanguage\022\025\n\rlanguage_co"
      "de\030\001 \001(\t\022\022\n\nconfidence\030\002 \001(\002\032\334\001\n\rDetecte"
      "dBreak\022S\n\004type\030\001 \001(\0162E.google.cloud.visi"
      "on.v1p3beta1.TextAnnotation.DetectedBrea"
      "k.BreakType\022\021\n\tis_prefix\030\002 \001(\010\"c\n\tBreakT"
      "ype\022\013\n\007UNKNOWN\020\000\022\t\n\005SPACE\020\001\022\016\n\nSURE_SPAC"
      "E\020\002\022\022\n\016EOL_SURE_SPACE\020\003\022\n\n\006HYPHEN\020\004\022\016\n\nL"
      "INE_BREAK\020\005\032\277\001\n\014TextProperty\022Z\n\022detected"
      "_languages\030\001 \003(\0132>.google.cloud.vision.v"
      "1p3beta1.TextAnnotation.DetectedLanguage"
      "\022S\n\016detected_break\030\002 \001(\0132;.google.cloud."
      "vision.v1p3beta1.TextAnnotation.Detected"
      "Break\"\275\001\n\004Page\022L\n\010property\030\001 \001(\0132:.googl"
      "e.cloud.vision.v1p3beta1.TextAnnotation."
      "TextProperty\022\r\n\005width\030\002 \001(\005\022\016\n\006height\030\003 "
      "\001(\005\0224\n\006blocks\030\004 \003(\0132$.google.cloud.visio"
      "n.v1p3beta1.Block\022\022\n\nconfidence\030\005 \001(\002\"\202\003"
      "\n\005Block\022L\n\010property\030\001 \001(\0132:.google.cloud"
      ".vision.v1p3beta1.TextAnnotation.TextPro"
      "perty\022A\n\014bounding_box\030\002 \001(\0132+.google.clo"
      "ud.vision.v1p3beta1.BoundingPoly\022<\n\npara"
      "graphs\030\003 \003(\0132(.google.cloud.vision.v1p3b"
      "eta1.Paragraph\022B\n\nblock_type\030\004 \001(\0162..goo"
      "gle.cloud.vision.v1p3beta1.Block.BlockTy"
      "pe\022\022\n\nconfidence\030\005 \001(\002\"R\n\tBlockType\022\013\n\007U"
      "NKNOWN\020\000\022\010\n\004TEXT\020\001\022\t\n\005TABLE\020\002\022\013\n\007PICTURE"
      "\020\003\022\t\n\005RULER\020\004\022\013\n\007BARCODE\020\005\"\344\001\n\tParagraph"
      "\022L\n\010property\030\001 \001(\0132:.google.cloud.vision"
      ".v1p3beta1.TextAnnotation.TextProperty\022A"
      "\n\014bounding_box\030\002 \001(\0132+.google.cloud.visi"
      "on.v1p3beta1.BoundingPoly\0222\n\005words\030\003 \003(\013"
      "2#.google.cloud.vision.v1p3beta1.Word\022\022\n"
      "\nconfidence\030\004 \001(\002\"\343\001\n\004Word\022L\n\010property\030\001"
      " \001(\0132:.google.cloud.vision.v1p3beta1.Tex"
      "tAnnotation.TextProperty\022A\n\014bounding_box"
      "\030\002 \001(\0132+.google.cloud.vision.v1p3beta1.B"
      "oundingPoly\0226\n\007symbols\030\003 \003(\0132%.google.cl"
      "oud.vision.v1p3beta1.Symbol\022\022\n\nconfidenc"
      "e\030\004 \001(\002\"\273\001\n\006Symbol\022L\n\010property\030\001 \001(\0132:.g"
      "oogle.cloud.vision.v1p3beta1.TextAnnotat"
      "ion.TextProperty\022A\n\014bounding_box\030\002 \001(\0132+"
      ".google.cloud.vision.v1p3beta1.BoundingP"
      "oly\022\014\n\004text\030\003 \001(\t\022\022\n\nconfidence\030\004 \001(\002B\202\001"
      "\n!com.google.cloud.vision.v1p3beta1B\023Tex"
      "tAnnotationProtoP\001ZCgoogle.golang.org/ge"
      "nproto/googleapis/cloud/vision/v1p3beta1"
      ";vision\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2098);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/vision/v1p3beta1/text_annotation.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fgeometry_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto
namespace google {
namespace cloud {
namespace vision {
namespace v1p3beta1 {
const ::google::protobuf::EnumDescriptor* TextAnnotation_DetectedBreak_BreakType_descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_enum_descriptors[0];
}
bool TextAnnotation_DetectedBreak_BreakType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::UNKNOWN;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::SPACE;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::SURE_SPACE;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::EOL_SURE_SPACE;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::HYPHEN;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::LINE_BREAK;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::BreakType_MIN;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::BreakType_MAX;
const int TextAnnotation_DetectedBreak::BreakType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Block_BlockType_descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_enum_descriptors[1];
}
bool Block_BlockType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Block_BlockType Block::UNKNOWN;
const Block_BlockType Block::TEXT;
const Block_BlockType Block::TABLE;
const Block_BlockType Block::PICTURE;
const Block_BlockType Block::RULER;
const Block_BlockType Block::BARCODE;
const Block_BlockType Block::BlockType_MIN;
const Block_BlockType Block::BlockType_MAX;
const int Block::BlockType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TextAnnotation_DetectedLanguage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextAnnotation_DetectedLanguage::kLanguageCodeFieldNumber;
const int TextAnnotation_DetectedLanguage::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextAnnotation_DetectedLanguage::TextAnnotation_DetectedLanguage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_DetectedLanguage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
}
TextAnnotation_DetectedLanguage::TextAnnotation_DetectedLanguage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_DetectedLanguage.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
}
TextAnnotation_DetectedLanguage::TextAnnotation_DetectedLanguage(const TextAnnotation_DetectedLanguage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code(),
      GetArenaNoVirtual());
  }
  confidence_ = from.confidence_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
}

void TextAnnotation_DetectedLanguage::SharedCtor() {
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confidence_ = 0;
}

TextAnnotation_DetectedLanguage::~TextAnnotation_DetectedLanguage() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
  SharedDtor();
}

void TextAnnotation_DetectedLanguage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TextAnnotation_DetectedLanguage::ArenaDtor(void* object) {
  TextAnnotation_DetectedLanguage* _this = reinterpret_cast< TextAnnotation_DetectedLanguage* >(object);
  (void)_this;
}
void TextAnnotation_DetectedLanguage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TextAnnotation_DetectedLanguage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TextAnnotation_DetectedLanguage::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextAnnotation_DetectedLanguage& TextAnnotation_DetectedLanguage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_DetectedLanguage.base);
  return *internal_default_instance();
}


void TextAnnotation_DetectedLanguage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  confidence_ = 0;
  _internal_metadata_.Clear();
}

bool TextAnnotation_DetectedLanguage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string language_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
  return false;
#undef DO_
}

void TextAnnotation_DetectedLanguage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string language_code = 1;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->language_code(), output);
  }

  // float confidence = 2;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->confidence(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
}

::google::protobuf::uint8* TextAnnotation_DetectedLanguage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string language_code = 1;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->language_code(), target);
  }

  // float confidence = 2;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->confidence(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
  return target;
}

size_t TextAnnotation_DetectedLanguage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string language_code = 1;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // float confidence = 2;
  if (this->confidence() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TextAnnotation_DetectedLanguage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
  GOOGLE_DCHECK_NE(&from, this);
  const TextAnnotation_DetectedLanguage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextAnnotation_DetectedLanguage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
    MergeFrom(*source);
  }
}

void TextAnnotation_DetectedLanguage::MergeFrom(const TextAnnotation_DetectedLanguage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.language_code().size() > 0) {
    set_language_code(from.language_code());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
}

void TextAnnotation_DetectedLanguage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextAnnotation_DetectedLanguage::CopyFrom(const TextAnnotation_DetectedLanguage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextAnnotation_DetectedLanguage::IsInitialized() const {
  return true;
}

void TextAnnotation_DetectedLanguage::Swap(TextAnnotation_DetectedLanguage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TextAnnotation_DetectedLanguage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TextAnnotation_DetectedLanguage::UnsafeArenaSwap(TextAnnotation_DetectedLanguage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TextAnnotation_DetectedLanguage::InternalSwap(TextAnnotation_DetectedLanguage* other) {
  using std::swap;
  language_code_.Swap(&other->language_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(confidence_, other->confidence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TextAnnotation_DetectedLanguage::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TextAnnotation_DetectedBreak::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextAnnotation_DetectedBreak::kTypeFieldNumber;
const int TextAnnotation_DetectedBreak::kIsPrefixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextAnnotation_DetectedBreak::TextAnnotation_DetectedBreak()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_DetectedBreak.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
}
TextAnnotation_DetectedBreak::TextAnnotation_DetectedBreak(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_DetectedBreak.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
}
TextAnnotation_DetectedBreak::TextAnnotation_DetectedBreak(const TextAnnotation_DetectedBreak& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_prefix_) -
    reinterpret_cast<char*>(&type_)) + sizeof(is_prefix_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
}

void TextAnnotation_DetectedBreak::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_prefix_) -
      reinterpret_cast<char*>(&type_)) + sizeof(is_prefix_));
}

TextAnnotation_DetectedBreak::~TextAnnotation_DetectedBreak() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
  SharedDtor();
}

void TextAnnotation_DetectedBreak::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TextAnnotation_DetectedBreak::ArenaDtor(void* object) {
  TextAnnotation_DetectedBreak* _this = reinterpret_cast< TextAnnotation_DetectedBreak* >(object);
  (void)_this;
}
void TextAnnotation_DetectedBreak::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TextAnnotation_DetectedBreak::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TextAnnotation_DetectedBreak::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextAnnotation_DetectedBreak& TextAnnotation_DetectedBreak::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_DetectedBreak.base);
  return *internal_default_instance();
}


void TextAnnotation_DetectedBreak::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_prefix_) -
      reinterpret_cast<char*>(&type_)) + sizeof(is_prefix_));
  _internal_metadata_.Clear();
}

bool TextAnnotation_DetectedBreak::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak.BreakType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak_BreakType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_prefix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_prefix_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
  return false;
#undef DO_
}

void TextAnnotation_DetectedBreak::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak.BreakType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // bool is_prefix = 2;
  if (this->is_prefix() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_prefix(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
}

::google::protobuf::uint8* TextAnnotation_DetectedBreak::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak.BreakType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // bool is_prefix = 2;
  if (this->is_prefix() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_prefix(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
  return target;
}

size_t TextAnnotation_DetectedBreak::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak.BreakType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // bool is_prefix = 2;
  if (this->is_prefix() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TextAnnotation_DetectedBreak::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
  GOOGLE_DCHECK_NE(&from, this);
  const TextAnnotation_DetectedBreak* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextAnnotation_DetectedBreak>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
    MergeFrom(*source);
  }
}

void TextAnnotation_DetectedBreak::MergeFrom(const TextAnnotation_DetectedBreak& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.is_prefix() != 0) {
    set_is_prefix(from.is_prefix());
  }
}

void TextAnnotation_DetectedBreak::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextAnnotation_DetectedBreak::CopyFrom(const TextAnnotation_DetectedBreak& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextAnnotation_DetectedBreak::IsInitialized() const {
  return true;
}

void TextAnnotation_DetectedBreak::Swap(TextAnnotation_DetectedBreak* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TextAnnotation_DetectedBreak* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TextAnnotation_DetectedBreak::UnsafeArenaSwap(TextAnnotation_DetectedBreak* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TextAnnotation_DetectedBreak::InternalSwap(TextAnnotation_DetectedBreak* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(is_prefix_, other->is_prefix_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TextAnnotation_DetectedBreak::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TextAnnotation_TextProperty::InitAsDefaultInstance() {
  ::google::cloud::vision::v1p3beta1::_TextAnnotation_TextProperty_default_instance_._instance.get_mutable()->detected_break_ = const_cast< ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak*>(
      ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak::internal_default_instance());
}
void TextAnnotation_TextProperty::unsafe_arena_set_allocated_detected_break(
    ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak* detected_break) {
  if (GetArenaNoVirtual() == NULL) {
    delete detected_break_;
  }
  detected_break_ = detected_break;
  if (detected_break) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty.detected_break)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextAnnotation_TextProperty::kDetectedLanguagesFieldNumber;
const int TextAnnotation_TextProperty::kDetectedBreakFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextAnnotation_TextProperty::TextAnnotation_TextProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_TextProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
}
TextAnnotation_TextProperty::TextAnnotation_TextProperty(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  detected_languages_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_TextProperty.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
}
TextAnnotation_TextProperty::TextAnnotation_TextProperty(const TextAnnotation_TextProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      detected_languages_(from.detected_languages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_detected_break()) {
    detected_break_ = new ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak(*from.detected_break_);
  } else {
    detected_break_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
}

void TextAnnotation_TextProperty::SharedCtor() {
  detected_break_ = NULL;
}

TextAnnotation_TextProperty::~TextAnnotation_TextProperty() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
  SharedDtor();
}

void TextAnnotation_TextProperty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete detected_break_;
}

void TextAnnotation_TextProperty::ArenaDtor(void* object) {
  TextAnnotation_TextProperty* _this = reinterpret_cast< TextAnnotation_TextProperty* >(object);
  (void)_this;
}
void TextAnnotation_TextProperty::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TextAnnotation_TextProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TextAnnotation_TextProperty::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextAnnotation_TextProperty& TextAnnotation_TextProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation_TextProperty.base);
  return *internal_default_instance();
}


void TextAnnotation_TextProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  detected_languages_.Clear();
  if (GetArenaNoVirtual() == NULL && detected_break_ != NULL) {
    delete detected_break_;
  }
  detected_break_ = NULL;
  _internal_metadata_.Clear();
}

bool TextAnnotation_TextProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage detected_languages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_detected_languages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak detected_break = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_detected_break()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
  return false;
#undef DO_
}

void TextAnnotation_TextProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage detected_languages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detected_languages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->detected_languages(static_cast<int>(i)),
      output);
  }

  // .google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak detected_break = 2;
  if (this->has_detected_break()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_detected_break(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
}

::google::protobuf::uint8* TextAnnotation_TextProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage detected_languages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detected_languages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->detected_languages(static_cast<int>(i)), deterministic, target);
  }

  // .google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak detected_break = 2;
  if (this->has_detected_break()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_detected_break(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
  return target;
}

size_t TextAnnotation_TextProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1p3beta1.TextAnnotation.DetectedLanguage detected_languages = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->detected_languages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->detected_languages(static_cast<int>(i)));
    }
  }

  // .google.cloud.vision.v1p3beta1.TextAnnotation.DetectedBreak detected_break = 2;
  if (this->has_detected_break()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *detected_break_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TextAnnotation_TextProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const TextAnnotation_TextProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextAnnotation_TextProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
    MergeFrom(*source);
  }
}

void TextAnnotation_TextProperty::MergeFrom(const TextAnnotation_TextProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  detected_languages_.MergeFrom(from.detected_languages_);
  if (from.has_detected_break()) {
    mutable_detected_break()->::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak::MergeFrom(from.detected_break());
  }
}

void TextAnnotation_TextProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextAnnotation_TextProperty::CopyFrom(const TextAnnotation_TextProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextAnnotation_TextProperty::IsInitialized() const {
  return true;
}

void TextAnnotation_TextProperty::Swap(TextAnnotation_TextProperty* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TextAnnotation_TextProperty* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TextAnnotation_TextProperty::UnsafeArenaSwap(TextAnnotation_TextProperty* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TextAnnotation_TextProperty::InternalSwap(TextAnnotation_TextProperty* other) {
  using std::swap;
  CastToBase(&detected_languages_)->InternalSwap(CastToBase(&other->detected_languages_));
  swap(detected_break_, other->detected_break_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TextAnnotation_TextProperty::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TextAnnotation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextAnnotation::kPagesFieldNumber;
const int TextAnnotation::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextAnnotation::TextAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1p3beta1.TextAnnotation)
}
TextAnnotation::TextAnnotation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  pages_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1p3beta1.TextAnnotation)
}
TextAnnotation::TextAnnotation(const TextAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pages_(from.pages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1p3beta1.TextAnnotation)
}

void TextAnnotation::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TextAnnotation::~TextAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1p3beta1.TextAnnotation)
  SharedDtor();
}

void TextAnnotation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TextAnnotation::ArenaDtor(void* object) {
  TextAnnotation* _this = reinterpret_cast< TextAnnotation* >(object);
  (void)_this;
}
void TextAnnotation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TextAnnotation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TextAnnotation::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextAnnotation& TextAnnotation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation.base);
  return *internal_default_instance();
}


void TextAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1p3beta1.TextAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pages_.Clear();
  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool TextAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1p3beta1.TextAnnotation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1p3beta1.Page pages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1p3beta1.TextAnnotation.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1p3beta1.TextAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1p3beta1.TextAnnotation)
  return false;
#undef DO_
}

void TextAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1p3beta1.TextAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1p3beta1.Page pages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pages(static_cast<int>(i)),
      output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1p3beta1.TextAnnotation.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1p3beta1.TextAnnotation)
}

::google::protobuf::uint8* TextAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1p3beta1.TextAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1p3beta1.Page pages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pages(static_cast<int>(i)), deterministic, target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1p3beta1.TextAnnotation.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1p3beta1.TextAnnotation)
  return target;
}

size_t TextAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1p3beta1.TextAnnotation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1p3beta1.Page pages = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pages(static_cast<int>(i)));
    }
  }

  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TextAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1p3beta1.TextAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const TextAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1p3beta1.TextAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1p3beta1.TextAnnotation)
    MergeFrom(*source);
  }
}

void TextAnnotation::MergeFrom(const TextAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1p3beta1.TextAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pages_.MergeFrom(from.pages_);
  if (from.text().size() > 0) {
    set_text(from.text());
  }
}

void TextAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1p3beta1.TextAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextAnnotation::CopyFrom(const TextAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1p3beta1.TextAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextAnnotation::IsInitialized() const {
  return true;
}

void TextAnnotation::Swap(TextAnnotation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TextAnnotation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TextAnnotation::UnsafeArenaSwap(TextAnnotation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TextAnnotation::InternalSwap(TextAnnotation* other) {
  using std::swap;
  CastToBase(&pages_)->InternalSwap(CastToBase(&other->pages_));
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TextAnnotation::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Page::InitAsDefaultInstance() {
  ::google::cloud::vision::v1p3beta1::_Page_default_instance_._instance.get_mutable()->property_ = const_cast< ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty*>(
      ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty::internal_default_instance());
}
void Page::unsafe_arena_set_allocated_property(
    ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty* property) {
  if (GetArenaNoVirtual() == NULL) {
    delete property_;
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Page.property)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Page::kPropertyFieldNumber;
const int Page::kWidthFieldNumber;
const int Page::kHeightFieldNumber;
const int Page::kBlocksFieldNumber;
const int Page::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Page::Page()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Page.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1p3beta1.Page)
}
Page::Page(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  blocks_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Page.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1p3beta1.Page)
}
Page::Page(const Page& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blocks_(from.blocks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_property()) {
    property_ = new ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty(*from.property_);
  } else {
    property_ = NULL;
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&confidence_) -
    reinterpret_cast<char*>(&width_)) + sizeof(confidence_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1p3beta1.Page)
}

void Page::SharedCtor() {
  ::memset(&property_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&property_)) + sizeof(confidence_));
}

Page::~Page() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1p3beta1.Page)
  SharedDtor();
}

void Page::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete property_;
}

void Page::ArenaDtor(void* object) {
  Page* _this = reinterpret_cast< Page* >(object);
  (void)_this;
}
void Page::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Page::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Page::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Page& Page::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Page.base);
  return *internal_default_instance();
}


void Page::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1p3beta1.Page)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blocks_.Clear();
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&width_)) + sizeof(confidence_));
  _internal_metadata_.Clear();
}

bool Page::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1p3beta1.Page)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1p3beta1.Block blocks = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1p3beta1.Page)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1p3beta1.Page)
  return false;
#undef DO_
}

void Page::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1p3beta1.Page)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_property(), output);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->height(), output);
  }

  // repeated .google.cloud.vision.v1p3beta1.Block blocks = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->blocks(static_cast<int>(i)),
      output);
  }

  // float confidence = 5;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->confidence(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1p3beta1.Page)
}

::google::protobuf::uint8* Page::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1p3beta1.Page)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_property(), deterministic, target);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->height(), target);
  }

  // repeated .google.cloud.vision.v1p3beta1.Block blocks = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blocks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->blocks(static_cast<int>(i)), deterministic, target);
  }

  // float confidence = 5;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->confidence(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1p3beta1.Page)
  return target;
}

size_t Page::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1p3beta1.Page)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1p3beta1.Block blocks = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->blocks(static_cast<int>(i)));
    }
  }

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *property_);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  // float confidence = 5;
  if (this->confidence() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Page::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1p3beta1.Page)
  GOOGLE_DCHECK_NE(&from, this);
  const Page* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Page>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1p3beta1.Page)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1p3beta1.Page)
    MergeFrom(*source);
  }
}

void Page::MergeFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1p3beta1.Page)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  blocks_.MergeFrom(from.blocks_);
  if (from.has_property()) {
    mutable_property()->::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty::MergeFrom(from.property());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
}

void Page::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1p3beta1.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Page::CopyFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1p3beta1.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Page::IsInitialized() const {
  return true;
}

void Page::Swap(Page* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Page* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Page::UnsafeArenaSwap(Page* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Page::InternalSwap(Page* other) {
  using std::swap;
  CastToBase(&blocks_)->InternalSwap(CastToBase(&other->blocks_));
  swap(property_, other->property_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(confidence_, other->confidence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Page::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Block::InitAsDefaultInstance() {
  ::google::cloud::vision::v1p3beta1::_Block_default_instance_._instance.get_mutable()->property_ = const_cast< ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty*>(
      ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty::internal_default_instance());
  ::google::cloud::vision::v1p3beta1::_Block_default_instance_._instance.get_mutable()->bounding_box_ = const_cast< ::google::cloud::vision::v1p3beta1::BoundingPoly*>(
      ::google::cloud::vision::v1p3beta1::BoundingPoly::internal_default_instance());
}
void Block::unsafe_arena_set_allocated_property(
    ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty* property) {
  if (GetArenaNoVirtual() == NULL) {
    delete property_;
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Block.property)
}
void Block::unsafe_arena_set_allocated_bounding_box(
    ::google::cloud::vision::v1p3beta1::BoundingPoly* bounding_box) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_box_;
  }
  bounding_box_ = bounding_box;
  if (bounding_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Block.bounding_box)
}
void Block::clear_bounding_box() {
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block::kPropertyFieldNumber;
const int Block::kBoundingBoxFieldNumber;
const int Block::kParagraphsFieldNumber;
const int Block::kBlockTypeFieldNumber;
const int Block::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block::Block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Block.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1p3beta1.Block)
}
Block::Block(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  paragraphs_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Block.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1p3beta1.Block)
}
Block::Block(const Block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      paragraphs_(from.paragraphs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_property()) {
    property_ = new ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty(*from.property_);
  } else {
    property_ = NULL;
  }
  if (from.has_bounding_box()) {
    bounding_box_ = new ::google::cloud::vision::v1p3beta1::BoundingPoly(*from.bounding_box_);
  } else {
    bounding_box_ = NULL;
  }
  ::memcpy(&block_type_, &from.block_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&confidence_) -
    reinterpret_cast<char*>(&block_type_)) + sizeof(confidence_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1p3beta1.Block)
}

void Block::SharedCtor() {
  ::memset(&property_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&property_)) + sizeof(confidence_));
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1p3beta1.Block)
  SharedDtor();
}

void Block::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete property_;
  if (this != internal_default_instance()) delete bounding_box_;
}

void Block::ArenaDtor(void* object) {
  Block* _this = reinterpret_cast< Block* >(object);
  (void)_this;
}
void Block::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Block::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Block& Block::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Block.base);
  return *internal_default_instance();
}


void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1p3beta1.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paragraphs_.Clear();
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
  ::memset(&block_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&block_type_)) + sizeof(confidence_));
  _internal_metadata_.Clear();
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1p3beta1.Block)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounding_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1p3beta1.Paragraph paragraphs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_paragraphs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1p3beta1.Block.BlockType block_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_block_type(static_cast< ::google::cloud::vision::v1p3beta1::Block_BlockType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1p3beta1.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1p3beta1.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1p3beta1.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_property(), output);
  }

  // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_bounding_box(), output);
  }

  // repeated .google.cloud.vision.v1p3beta1.Paragraph paragraphs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->paragraphs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->paragraphs(static_cast<int>(i)),
      output);
  }

  // .google.cloud.vision.v1p3beta1.Block.BlockType block_type = 4;
  if (this->block_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->block_type(), output);
  }

  // float confidence = 5;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->confidence(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1p3beta1.Block)
}

::google::protobuf::uint8* Block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1p3beta1.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_property(), deterministic, target);
  }

  // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_bounding_box(), deterministic, target);
  }

  // repeated .google.cloud.vision.v1p3beta1.Paragraph paragraphs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->paragraphs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->paragraphs(static_cast<int>(i)), deterministic, target);
  }

  // .google.cloud.vision.v1p3beta1.Block.BlockType block_type = 4;
  if (this->block_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->block_type(), target);
  }

  // float confidence = 5;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->confidence(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1p3beta1.Block)
  return target;
}

size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1p3beta1.Block)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1p3beta1.Paragraph paragraphs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->paragraphs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->paragraphs(static_cast<int>(i)));
    }
  }

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *property_);
  }

  // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bounding_box_);
  }

  // .google.cloud.vision.v1p3beta1.Block.BlockType block_type = 4;
  if (this->block_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->block_type());
  }

  // float confidence = 5;
  if (this->confidence() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1p3beta1.Block)
  GOOGLE_DCHECK_NE(&from, this);
  const Block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1p3beta1.Block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1p3beta1.Block)
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1p3beta1.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paragraphs_.MergeFrom(from.paragraphs_);
  if (from.has_property()) {
    mutable_property()->::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty::MergeFrom(from.property());
  }
  if (from.has_bounding_box()) {
    mutable_bounding_box()->::google::cloud::vision::v1p3beta1::BoundingPoly::MergeFrom(from.bounding_box());
  }
  if (from.block_type() != 0) {
    set_block_type(from.block_type());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1p3beta1.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1p3beta1.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  return true;
}

void Block::Swap(Block* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Block* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Block::UnsafeArenaSwap(Block* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Block::InternalSwap(Block* other) {
  using std::swap;
  CastToBase(&paragraphs_)->InternalSwap(CastToBase(&other->paragraphs_));
  swap(property_, other->property_);
  swap(bounding_box_, other->bounding_box_);
  swap(block_type_, other->block_type_);
  swap(confidence_, other->confidence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Paragraph::InitAsDefaultInstance() {
  ::google::cloud::vision::v1p3beta1::_Paragraph_default_instance_._instance.get_mutable()->property_ = const_cast< ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty*>(
      ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty::internal_default_instance());
  ::google::cloud::vision::v1p3beta1::_Paragraph_default_instance_._instance.get_mutable()->bounding_box_ = const_cast< ::google::cloud::vision::v1p3beta1::BoundingPoly*>(
      ::google::cloud::vision::v1p3beta1::BoundingPoly::internal_default_instance());
}
void Paragraph::unsafe_arena_set_allocated_property(
    ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty* property) {
  if (GetArenaNoVirtual() == NULL) {
    delete property_;
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Paragraph.property)
}
void Paragraph::unsafe_arena_set_allocated_bounding_box(
    ::google::cloud::vision::v1p3beta1::BoundingPoly* bounding_box) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_box_;
  }
  bounding_box_ = bounding_box;
  if (bounding_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Paragraph.bounding_box)
}
void Paragraph::clear_bounding_box() {
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Paragraph::kPropertyFieldNumber;
const int Paragraph::kBoundingBoxFieldNumber;
const int Paragraph::kWordsFieldNumber;
const int Paragraph::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Paragraph::Paragraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Paragraph.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1p3beta1.Paragraph)
}
Paragraph::Paragraph(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  words_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Paragraph.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1p3beta1.Paragraph)
}
Paragraph::Paragraph(const Paragraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      words_(from.words_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_property()) {
    property_ = new ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty(*from.property_);
  } else {
    property_ = NULL;
  }
  if (from.has_bounding_box()) {
    bounding_box_ = new ::google::cloud::vision::v1p3beta1::BoundingPoly(*from.bounding_box_);
  } else {
    bounding_box_ = NULL;
  }
  confidence_ = from.confidence_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1p3beta1.Paragraph)
}

void Paragraph::SharedCtor() {
  ::memset(&property_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&property_)) + sizeof(confidence_));
}

Paragraph::~Paragraph() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1p3beta1.Paragraph)
  SharedDtor();
}

void Paragraph::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete property_;
  if (this != internal_default_instance()) delete bounding_box_;
}

void Paragraph::ArenaDtor(void* object) {
  Paragraph* _this = reinterpret_cast< Paragraph* >(object);
  (void)_this;
}
void Paragraph::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Paragraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Paragraph::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Paragraph& Paragraph::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Paragraph.base);
  return *internal_default_instance();
}


void Paragraph::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1p3beta1.Paragraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  words_.Clear();
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
  confidence_ = 0;
  _internal_metadata_.Clear();
}

bool Paragraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1p3beta1.Paragraph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounding_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1p3beta1.Word words = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_words()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1p3beta1.Paragraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1p3beta1.Paragraph)
  return false;
#undef DO_
}

void Paragraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1p3beta1.Paragraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_property(), output);
  }

  // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_bounding_box(), output);
  }

  // repeated .google.cloud.vision.v1p3beta1.Word words = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->words_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->words(static_cast<int>(i)),
      output);
  }

  // float confidence = 4;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->confidence(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1p3beta1.Paragraph)
}

::google::protobuf::uint8* Paragraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1p3beta1.Paragraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_property(), deterministic, target);
  }

  // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_bounding_box(), deterministic, target);
  }

  // repeated .google.cloud.vision.v1p3beta1.Word words = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->words_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->words(static_cast<int>(i)), deterministic, target);
  }

  // float confidence = 4;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->confidence(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1p3beta1.Paragraph)
  return target;
}

size_t Paragraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1p3beta1.Paragraph)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1p3beta1.Word words = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->words_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->words(static_cast<int>(i)));
    }
  }

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *property_);
  }

  // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bounding_box_);
  }

  // float confidence = 4;
  if (this->confidence() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Paragraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1p3beta1.Paragraph)
  GOOGLE_DCHECK_NE(&from, this);
  const Paragraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Paragraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1p3beta1.Paragraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1p3beta1.Paragraph)
    MergeFrom(*source);
  }
}

void Paragraph::MergeFrom(const Paragraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1p3beta1.Paragraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  words_.MergeFrom(from.words_);
  if (from.has_property()) {
    mutable_property()->::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty::MergeFrom(from.property());
  }
  if (from.has_bounding_box()) {
    mutable_bounding_box()->::google::cloud::vision::v1p3beta1::BoundingPoly::MergeFrom(from.bounding_box());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
}

void Paragraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1p3beta1.Paragraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Paragraph::CopyFrom(const Paragraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1p3beta1.Paragraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Paragraph::IsInitialized() const {
  return true;
}

void Paragraph::Swap(Paragraph* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Paragraph* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Paragraph::UnsafeArenaSwap(Paragraph* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Paragraph::InternalSwap(Paragraph* other) {
  using std::swap;
  CastToBase(&words_)->InternalSwap(CastToBase(&other->words_));
  swap(property_, other->property_);
  swap(bounding_box_, other->bounding_box_);
  swap(confidence_, other->confidence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Paragraph::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Word::InitAsDefaultInstance() {
  ::google::cloud::vision::v1p3beta1::_Word_default_instance_._instance.get_mutable()->property_ = const_cast< ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty*>(
      ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty::internal_default_instance());
  ::google::cloud::vision::v1p3beta1::_Word_default_instance_._instance.get_mutable()->bounding_box_ = const_cast< ::google::cloud::vision::v1p3beta1::BoundingPoly*>(
      ::google::cloud::vision::v1p3beta1::BoundingPoly::internal_default_instance());
}
void Word::unsafe_arena_set_allocated_property(
    ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty* property) {
  if (GetArenaNoVirtual() == NULL) {
    delete property_;
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Word.property)
}
void Word::unsafe_arena_set_allocated_bounding_box(
    ::google::cloud::vision::v1p3beta1::BoundingPoly* bounding_box) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_box_;
  }
  bounding_box_ = bounding_box;
  if (bounding_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Word.bounding_box)
}
void Word::clear_bounding_box() {
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Word::kPropertyFieldNumber;
const int Word::kBoundingBoxFieldNumber;
const int Word::kSymbolsFieldNumber;
const int Word::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Word::Word()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Word.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1p3beta1.Word)
}
Word::Word(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  symbols_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Word.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1p3beta1.Word)
}
Word::Word(const Word& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      symbols_(from.symbols_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_property()) {
    property_ = new ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty(*from.property_);
  } else {
    property_ = NULL;
  }
  if (from.has_bounding_box()) {
    bounding_box_ = new ::google::cloud::vision::v1p3beta1::BoundingPoly(*from.bounding_box_);
  } else {
    bounding_box_ = NULL;
  }
  confidence_ = from.confidence_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1p3beta1.Word)
}

void Word::SharedCtor() {
  ::memset(&property_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&property_)) + sizeof(confidence_));
}

Word::~Word() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1p3beta1.Word)
  SharedDtor();
}

void Word::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete property_;
  if (this != internal_default_instance()) delete bounding_box_;
}

void Word::ArenaDtor(void* object) {
  Word* _this = reinterpret_cast< Word* >(object);
  (void)_this;
}
void Word::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Word::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Word::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Word& Word::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Word.base);
  return *internal_default_instance();
}


void Word::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1p3beta1.Word)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbols_.Clear();
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
  confidence_ = 0;
  _internal_metadata_.Clear();
}

bool Word::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1p3beta1.Word)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounding_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1p3beta1.Symbol symbols = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_symbols()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1p3beta1.Word)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1p3beta1.Word)
  return false;
#undef DO_
}

void Word::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1p3beta1.Word)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_property(), output);
  }

  // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_bounding_box(), output);
  }

  // repeated .google.cloud.vision.v1p3beta1.Symbol symbols = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->symbols_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->symbols(static_cast<int>(i)),
      output);
  }

  // float confidence = 4;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->confidence(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1p3beta1.Word)
}

::google::protobuf::uint8* Word::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1p3beta1.Word)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_property(), deterministic, target);
  }

  // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_bounding_box(), deterministic, target);
  }

  // repeated .google.cloud.vision.v1p3beta1.Symbol symbols = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->symbols_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->symbols(static_cast<int>(i)), deterministic, target);
  }

  // float confidence = 4;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->confidence(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1p3beta1.Word)
  return target;
}

size_t Word::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1p3beta1.Word)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1p3beta1.Symbol symbols = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->symbols_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->symbols(static_cast<int>(i)));
    }
  }

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *property_);
  }

  // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bounding_box_);
  }

  // float confidence = 4;
  if (this->confidence() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Word::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1p3beta1.Word)
  GOOGLE_DCHECK_NE(&from, this);
  const Word* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Word>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1p3beta1.Word)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1p3beta1.Word)
    MergeFrom(*source);
  }
}

void Word::MergeFrom(const Word& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1p3beta1.Word)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  symbols_.MergeFrom(from.symbols_);
  if (from.has_property()) {
    mutable_property()->::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty::MergeFrom(from.property());
  }
  if (from.has_bounding_box()) {
    mutable_bounding_box()->::google::cloud::vision::v1p3beta1::BoundingPoly::MergeFrom(from.bounding_box());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
}

void Word::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1p3beta1.Word)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Word::CopyFrom(const Word& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1p3beta1.Word)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Word::IsInitialized() const {
  return true;
}

void Word::Swap(Word* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Word* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Word::UnsafeArenaSwap(Word* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Word::InternalSwap(Word* other) {
  using std::swap;
  CastToBase(&symbols_)->InternalSwap(CastToBase(&other->symbols_));
  swap(property_, other->property_);
  swap(bounding_box_, other->bounding_box_);
  swap(confidence_, other->confidence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Word::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Symbol::InitAsDefaultInstance() {
  ::google::cloud::vision::v1p3beta1::_Symbol_default_instance_._instance.get_mutable()->property_ = const_cast< ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty*>(
      ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty::internal_default_instance());
  ::google::cloud::vision::v1p3beta1::_Symbol_default_instance_._instance.get_mutable()->bounding_box_ = const_cast< ::google::cloud::vision::v1p3beta1::BoundingPoly*>(
      ::google::cloud::vision::v1p3beta1::BoundingPoly::internal_default_instance());
}
void Symbol::unsafe_arena_set_allocated_property(
    ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty* property) {
  if (GetArenaNoVirtual() == NULL) {
    delete property_;
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Symbol.property)
}
void Symbol::unsafe_arena_set_allocated_bounding_box(
    ::google::cloud::vision::v1p3beta1::BoundingPoly* bounding_box) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_box_;
  }
  bounding_box_ = bounding_box;
  if (bounding_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Symbol.bounding_box)
}
void Symbol::clear_bounding_box() {
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Symbol::kPropertyFieldNumber;
const int Symbol::kBoundingBoxFieldNumber;
const int Symbol::kTextFieldNumber;
const int Symbol::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Symbol::Symbol()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Symbol.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1p3beta1.Symbol)
}
Symbol::Symbol(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Symbol.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1p3beta1.Symbol)
}
Symbol::Symbol(const Symbol& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text(),
      GetArenaNoVirtual());
  }
  if (from.has_property()) {
    property_ = new ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty(*from.property_);
  } else {
    property_ = NULL;
  }
  if (from.has_bounding_box()) {
    bounding_box_ = new ::google::cloud::vision::v1p3beta1::BoundingPoly(*from.bounding_box_);
  } else {
    bounding_box_ = NULL;
  }
  confidence_ = from.confidence_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1p3beta1.Symbol)
}

void Symbol::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&property_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&property_)) + sizeof(confidence_));
}

Symbol::~Symbol() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1p3beta1.Symbol)
  SharedDtor();
}

void Symbol::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete property_;
  if (this != internal_default_instance()) delete bounding_box_;
}

void Symbol::ArenaDtor(void* object) {
  Symbol* _this = reinterpret_cast< Symbol* >(object);
  (void)_this;
}
void Symbol::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Symbol::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Symbol::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Symbol& Symbol::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::scc_info_Symbol.base);
  return *internal_default_instance();
}


void Symbol::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1p3beta1.Symbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
  confidence_ = 0;
  _internal_metadata_.Clear();
}

bool Symbol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1p3beta1.Symbol)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounding_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1p3beta1.Symbol.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1p3beta1.Symbol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1p3beta1.Symbol)
  return false;
#undef DO_
}

void Symbol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1p3beta1.Symbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_property(), output);
  }

  // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_bounding_box(), output);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1p3beta1.Symbol.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  // float confidence = 4;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->confidence(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1p3beta1.Symbol)
}

::google::protobuf::uint8* Symbol::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1p3beta1.Symbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_property(), deterministic, target);
  }

  // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_bounding_box(), deterministic, target);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1p3beta1.Symbol.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  // float confidence = 4;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->confidence(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1p3beta1.Symbol)
  return target;
}

size_t Symbol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1p3beta1.Symbol)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 3;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // .google.cloud.vision.v1p3beta1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *property_);
  }

  // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bounding_box_);
  }

  // float confidence = 4;
  if (this->confidence() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Symbol::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1p3beta1.Symbol)
  GOOGLE_DCHECK_NE(&from, this);
  const Symbol* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Symbol>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1p3beta1.Symbol)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1p3beta1.Symbol)
    MergeFrom(*source);
  }
}

void Symbol::MergeFrom(const Symbol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1p3beta1.Symbol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {
    set_text(from.text());
  }
  if (from.has_property()) {
    mutable_property()->::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty::MergeFrom(from.property());
  }
  if (from.has_bounding_box()) {
    mutable_bounding_box()->::google::cloud::vision::v1p3beta1::BoundingPoly::MergeFrom(from.bounding_box());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
}

void Symbol::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1p3beta1.Symbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Symbol::CopyFrom(const Symbol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1p3beta1.Symbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Symbol::IsInitialized() const {
  return true;
}

void Symbol::Swap(Symbol* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Symbol* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Symbol::UnsafeArenaSwap(Symbol* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Symbol::InternalSwap(Symbol* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(property_, other->property_);
  swap(bounding_box_, other->bounding_box_);
  swap(confidence_, other->confidence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Symbol::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1p3beta1
}  // namespace vision
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedLanguage* Arena::CreateMaybeMessage< ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedLanguage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedLanguage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak* Arena::CreateMaybeMessage< ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1p3beta1::TextAnnotation_DetectedBreak >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty* Arena::CreateMaybeMessage< ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1p3beta1::TextAnnotation_TextProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1p3beta1::TextAnnotation* Arena::CreateMaybeMessage< ::google::cloud::vision::v1p3beta1::TextAnnotation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1p3beta1::TextAnnotation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1p3beta1::Page* Arena::CreateMaybeMessage< ::google::cloud::vision::v1p3beta1::Page >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1p3beta1::Page >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1p3beta1::Block* Arena::CreateMaybeMessage< ::google::cloud::vision::v1p3beta1::Block >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1p3beta1::Block >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1p3beta1::Paragraph* Arena::CreateMaybeMessage< ::google::cloud::vision::v1p3beta1::Paragraph >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1p3beta1::Paragraph >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1p3beta1::Word* Arena::CreateMaybeMessage< ::google::cloud::vision::v1p3beta1::Word >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1p3beta1::Word >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1p3beta1::Symbol* Arena::CreateMaybeMessage< ::google::cloud::vision::v1p3beta1::Symbol >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1p3beta1::Symbol >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
