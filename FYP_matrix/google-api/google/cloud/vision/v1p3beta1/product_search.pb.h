// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vision/v1p3beta1/product_search.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/vision/v1p3beta1/geometry.pb.h"
#include "google/cloud/vision/v1p3beta1/product_search_service.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_2eproto 

namespace protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_2eproto
namespace google {
namespace cloud {
namespace vision {
namespace v1p3beta1 {
class ProductSearchParams;
class ProductSearchParamsDefaultTypeInternal;
extern ProductSearchParamsDefaultTypeInternal _ProductSearchParams_default_instance_;
class ProductSearchResults;
class ProductSearchResultsDefaultTypeInternal;
extern ProductSearchResultsDefaultTypeInternal _ProductSearchResults_default_instance_;
class ProductSearchResults_ProductInfo;
class ProductSearchResults_ProductInfoDefaultTypeInternal;
extern ProductSearchResults_ProductInfoDefaultTypeInternal _ProductSearchResults_ProductInfo_default_instance_;
class ProductSearchResults_Result;
class ProductSearchResults_ResultDefaultTypeInternal;
extern ProductSearchResults_ResultDefaultTypeInternal _ProductSearchResults_Result_default_instance_;
}  // namespace v1p3beta1
}  // namespace vision
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::vision::v1p3beta1::ProductSearchParams* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ProductSearchParams>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ProductSearchResults* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ProductSearchResults>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ProductSearchResults_ProductInfo* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ProductSearchResults_ProductInfo>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ProductSearchResults_Result* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ProductSearchResults_Result>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace vision {
namespace v1p3beta1 {

enum ProductSearchCategory {
  PRODUCT_SEARCH_CATEGORY_UNSPECIFIED = 0,
  SHOES = 1,
  BAGS = 2,
  ProductSearchCategory_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProductSearchCategory_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProductSearchCategory_IsValid(int value);
const ProductSearchCategory ProductSearchCategory_MIN = PRODUCT_SEARCH_CATEGORY_UNSPECIFIED;
const ProductSearchCategory ProductSearchCategory_MAX = BAGS;
const int ProductSearchCategory_ARRAYSIZE = ProductSearchCategory_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProductSearchCategory_descriptor();
inline const ::std::string& ProductSearchCategory_Name(ProductSearchCategory value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProductSearchCategory_descriptor(), value);
}
inline bool ProductSearchCategory_Parse(
    const ::std::string& name, ProductSearchCategory* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProductSearchCategory>(
    ProductSearchCategory_descriptor(), name, value);
}
enum ProductSearchResultsView {
  BASIC = 0,
  FULL = 1,
  ProductSearchResultsView_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProductSearchResultsView_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProductSearchResultsView_IsValid(int value);
const ProductSearchResultsView ProductSearchResultsView_MIN = BASIC;
const ProductSearchResultsView ProductSearchResultsView_MAX = FULL;
const int ProductSearchResultsView_ARRAYSIZE = ProductSearchResultsView_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProductSearchResultsView_descriptor();
inline const ::std::string& ProductSearchResultsView_Name(ProductSearchResultsView value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProductSearchResultsView_descriptor(), value);
}
inline bool ProductSearchResultsView_Parse(
    const ::std::string& name, ProductSearchResultsView* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProductSearchResultsView>(
    ProductSearchResultsView_descriptor(), name, value);
}
// ===================================================================

class ProductSearchParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ProductSearchParams) */ {
 public:
  ProductSearchParams();
  virtual ~ProductSearchParams();

  ProductSearchParams(const ProductSearchParams& from);

  inline ProductSearchParams& operator=(const ProductSearchParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductSearchParams(ProductSearchParams&& from) noexcept
    : ProductSearchParams() {
    *this = ::std::move(from);
  }

  inline ProductSearchParams& operator=(ProductSearchParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductSearchParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProductSearchParams* internal_default_instance() {
    return reinterpret_cast<const ProductSearchParams*>(
               &_ProductSearchParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(ProductSearchParams* other);
  void Swap(ProductSearchParams* other);
  friend void swap(ProductSearchParams& a, ProductSearchParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductSearchParams* New() const final {
    return CreateMaybeMessage<ProductSearchParams>(NULL);
  }

  ProductSearchParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProductSearchParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProductSearchParams& from);
  void MergeFrom(const ProductSearchParams& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProductSearchParams* other);
  protected:
  explicit ProductSearchParams(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string product_categories = 7;
  int product_categories_size() const;
  void clear_product_categories();
  static const int kProductCategoriesFieldNumber = 7;
  const ::std::string& product_categories(int index) const;
  ::std::string* mutable_product_categories(int index);
  void set_product_categories(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_product_categories(int index, ::std::string&& value);
  #endif
  void set_product_categories(int index, const char* value);
  void set_product_categories(int index, const char* value, size_t size);
  ::std::string* add_product_categories();
  void add_product_categories(const ::std::string& value);
  #if LANG_CXX11
  void add_product_categories(::std::string&& value);
  #endif
  void add_product_categories(const char* value);
  void add_product_categories(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& product_categories() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_product_categories();

  // string catalog_name = 1;
  void clear_catalog_name();
  static const int kCatalogNameFieldNumber = 1;
  const ::std::string& catalog_name() const;
  void set_catalog_name(const ::std::string& value);
  #if LANG_CXX11
  void set_catalog_name(::std::string&& value);
  #endif
  void set_catalog_name(const char* value);
  void set_catalog_name(const char* value, size_t size);
  ::std::string* mutable_catalog_name();
  ::std::string* release_catalog_name();
  void set_allocated_catalog_name(::std::string* catalog_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_catalog_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_catalog_name(
      ::std::string* catalog_name);

  // string product_category = 5;
  void clear_product_category();
  static const int kProductCategoryFieldNumber = 5;
  const ::std::string& product_category() const;
  void set_product_category(const ::std::string& value);
  #if LANG_CXX11
  void set_product_category(::std::string&& value);
  #endif
  void set_product_category(const char* value);
  void set_product_category(const char* value, size_t size);
  ::std::string* mutable_product_category();
  ::std::string* release_product_category();
  void set_allocated_product_category(::std::string* product_category);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_product_category();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_product_category(
      ::std::string* product_category);

  // string product_set = 6;
  void clear_product_set();
  static const int kProductSetFieldNumber = 6;
  const ::std::string& product_set() const;
  void set_product_set(const ::std::string& value);
  #if LANG_CXX11
  void set_product_set(::std::string&& value);
  #endif
  void set_product_set(const char* value);
  void set_product_set(const char* value, size_t size);
  ::std::string* mutable_product_set();
  ::std::string* release_product_set();
  void set_allocated_product_set(::std::string* product_set);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_product_set();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_product_set(
      ::std::string* product_set);

  // string filter = 8;
  void clear_filter();
  static const int kFilterFieldNumber = 8;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_filter();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_filter(
      ::std::string* filter);

  // .google.cloud.vision.v1p3beta1.NormalizedBoundingPoly normalized_bounding_poly = 3;
  bool has_normalized_bounding_poly() const;
  void clear_normalized_bounding_poly();
  static const int kNormalizedBoundingPolyFieldNumber = 3;
  private:
  const ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly& _internal_normalized_bounding_poly() const;
  public:
  const ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly& normalized_bounding_poly() const;
  ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly* release_normalized_bounding_poly();
  ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly* mutable_normalized_bounding_poly();
  void set_allocated_normalized_bounding_poly(::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly* normalized_bounding_poly);
  void unsafe_arena_set_allocated_normalized_bounding_poly(
      ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly* normalized_bounding_poly);
  ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly* unsafe_arena_release_normalized_bounding_poly();

  // .google.cloud.vision.v1p3beta1.BoundingPoly bounding_poly = 9;
  bool has_bounding_poly() const;
  void clear_bounding_poly();
  static const int kBoundingPolyFieldNumber = 9;
  private:
  const ::google::cloud::vision::v1p3beta1::BoundingPoly& _internal_bounding_poly() const;
  public:
  const ::google::cloud::vision::v1p3beta1::BoundingPoly& bounding_poly() const;
  ::google::cloud::vision::v1p3beta1::BoundingPoly* release_bounding_poly();
  ::google::cloud::vision::v1p3beta1::BoundingPoly* mutable_bounding_poly();
  void set_allocated_bounding_poly(::google::cloud::vision::v1p3beta1::BoundingPoly* bounding_poly);
  void unsafe_arena_set_allocated_bounding_poly(
      ::google::cloud::vision::v1p3beta1::BoundingPoly* bounding_poly);
  ::google::cloud::vision::v1p3beta1::BoundingPoly* unsafe_arena_release_bounding_poly();

  // .google.cloud.vision.v1p3beta1.ProductSearchCategory category = 2;
  void clear_category();
  static const int kCategoryFieldNumber = 2;
  ::google::cloud::vision::v1p3beta1::ProductSearchCategory category() const;
  void set_category(::google::cloud::vision::v1p3beta1::ProductSearchCategory value);

  // .google.cloud.vision.v1p3beta1.ProductSearchResultsView view = 4;
  void clear_view();
  static const int kViewFieldNumber = 4;
  ::google::cloud::vision::v1p3beta1::ProductSearchResultsView view() const;
  void set_view(::google::cloud::vision::v1p3beta1::ProductSearchResultsView value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ProductSearchParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> product_categories_;
  ::google::protobuf::internal::ArenaStringPtr catalog_name_;
  ::google::protobuf::internal::ArenaStringPtr product_category_;
  ::google::protobuf::internal::ArenaStringPtr product_set_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly* normalized_bounding_poly_;
  ::google::cloud::vision::v1p3beta1::BoundingPoly* bounding_poly_;
  int category_;
  int view_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductSearchResults_ProductInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo) */ {
 public:
  ProductSearchResults_ProductInfo();
  virtual ~ProductSearchResults_ProductInfo();

  ProductSearchResults_ProductInfo(const ProductSearchResults_ProductInfo& from);

  inline ProductSearchResults_ProductInfo& operator=(const ProductSearchResults_ProductInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductSearchResults_ProductInfo(ProductSearchResults_ProductInfo&& from) noexcept
    : ProductSearchResults_ProductInfo() {
    *this = ::std::move(from);
  }

  inline ProductSearchResults_ProductInfo& operator=(ProductSearchResults_ProductInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductSearchResults_ProductInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProductSearchResults_ProductInfo* internal_default_instance() {
    return reinterpret_cast<const ProductSearchResults_ProductInfo*>(
               &_ProductSearchResults_ProductInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ProductSearchResults_ProductInfo* other);
  void Swap(ProductSearchResults_ProductInfo* other);
  friend void swap(ProductSearchResults_ProductInfo& a, ProductSearchResults_ProductInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductSearchResults_ProductInfo* New() const final {
    return CreateMaybeMessage<ProductSearchResults_ProductInfo>(NULL);
  }

  ProductSearchResults_ProductInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProductSearchResults_ProductInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProductSearchResults_ProductInfo& from);
  void MergeFrom(const ProductSearchResults_ProductInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProductSearchResults_ProductInfo* other);
  protected:
  explicit ProductSearchResults_ProductInfo(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string product_id = 1;
  void clear_product_id();
  static const int kProductIdFieldNumber = 1;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_product_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_product_id(
      ::std::string* product_id);

  // string image_uri = 2;
  void clear_image_uri();
  static const int kImageUriFieldNumber = 2;
  const ::std::string& image_uri() const;
  void set_image_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_image_uri(::std::string&& value);
  #endif
  void set_image_uri(const char* value);
  void set_image_uri(const char* value, size_t size);
  ::std::string* mutable_image_uri();
  ::std::string* release_image_uri();
  void set_allocated_image_uri(::std::string* image_uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_image_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_image_uri(
      ::std::string* image_uri);

  // float score = 3;
  void clear_score();
  static const int kScoreFieldNumber = 3;
  float score() const;
  void set_score(float value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::protobuf::internal::ArenaStringPtr image_uri_;
  float score_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductSearchResults_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ProductSearchResults.Result) */ {
 public:
  ProductSearchResults_Result();
  virtual ~ProductSearchResults_Result();

  ProductSearchResults_Result(const ProductSearchResults_Result& from);

  inline ProductSearchResults_Result& operator=(const ProductSearchResults_Result& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductSearchResults_Result(ProductSearchResults_Result&& from) noexcept
    : ProductSearchResults_Result() {
    *this = ::std::move(from);
  }

  inline ProductSearchResults_Result& operator=(ProductSearchResults_Result&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductSearchResults_Result& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProductSearchResults_Result* internal_default_instance() {
    return reinterpret_cast<const ProductSearchResults_Result*>(
               &_ProductSearchResults_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ProductSearchResults_Result* other);
  void Swap(ProductSearchResults_Result* other);
  friend void swap(ProductSearchResults_Result& a, ProductSearchResults_Result& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductSearchResults_Result* New() const final {
    return CreateMaybeMessage<ProductSearchResults_Result>(NULL);
  }

  ProductSearchResults_Result* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProductSearchResults_Result>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProductSearchResults_Result& from);
  void MergeFrom(const ProductSearchResults_Result& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProductSearchResults_Result* other);
  protected:
  explicit ProductSearchResults_Result(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string image = 3;
  void clear_image();
  static const int kImageFieldNumber = 3;
  const ::std::string& image() const;
  void set_image(const ::std::string& value);
  #if LANG_CXX11
  void set_image(::std::string&& value);
  #endif
  void set_image(const char* value);
  void set_image(const char* value, size_t size);
  ::std::string* mutable_image();
  ::std::string* release_image();
  void set_allocated_image(::std::string* image);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_image();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_image(
      ::std::string* image);

  // .google.cloud.vision.v1p3beta1.Product product = 1;
  bool has_product() const;
  void clear_product();
  static const int kProductFieldNumber = 1;
  private:
  const ::google::cloud::vision::v1p3beta1::Product& _internal_product() const;
  public:
  const ::google::cloud::vision::v1p3beta1::Product& product() const;
  ::google::cloud::vision::v1p3beta1::Product* release_product();
  ::google::cloud::vision::v1p3beta1::Product* mutable_product();
  void set_allocated_product(::google::cloud::vision::v1p3beta1::Product* product);
  void unsafe_arena_set_allocated_product(
      ::google::cloud::vision::v1p3beta1::Product* product);
  ::google::cloud::vision::v1p3beta1::Product* unsafe_arena_release_product();

  // float score = 2;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  float score() const;
  void set_score(float value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ProductSearchResults.Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr image_;
  ::google::cloud::vision::v1p3beta1::Product* product_;
  float score_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductSearchResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ProductSearchResults) */ {
 public:
  ProductSearchResults();
  virtual ~ProductSearchResults();

  ProductSearchResults(const ProductSearchResults& from);

  inline ProductSearchResults& operator=(const ProductSearchResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductSearchResults(ProductSearchResults&& from) noexcept
    : ProductSearchResults() {
    *this = ::std::move(from);
  }

  inline ProductSearchResults& operator=(ProductSearchResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductSearchResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProductSearchResults* internal_default_instance() {
    return reinterpret_cast<const ProductSearchResults*>(
               &_ProductSearchResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(ProductSearchResults* other);
  void Swap(ProductSearchResults* other);
  friend void swap(ProductSearchResults& a, ProductSearchResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductSearchResults* New() const final {
    return CreateMaybeMessage<ProductSearchResults>(NULL);
  }

  ProductSearchResults* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProductSearchResults>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProductSearchResults& from);
  void MergeFrom(const ProductSearchResults& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProductSearchResults* other);
  protected:
  explicit ProductSearchResults(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ProductSearchResults_ProductInfo ProductInfo;
  typedef ProductSearchResults_Result Result;

  // accessors -------------------------------------------------------

  // repeated .google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo products = 3;
  int products_size() const;
  void clear_products();
  static const int kProductsFieldNumber = 3;
  ::google::cloud::vision::v1p3beta1::ProductSearchResults_ProductInfo* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSearchResults_ProductInfo >*
      mutable_products();
  const ::google::cloud::vision::v1p3beta1::ProductSearchResults_ProductInfo& products(int index) const;
  ::google::cloud::vision::v1p3beta1::ProductSearchResults_ProductInfo* add_products();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSearchResults_ProductInfo >&
      products() const;

  // repeated .google.cloud.vision.v1p3beta1.ProductSearchResults.Result results = 5;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 5;
  ::google::cloud::vision::v1p3beta1::ProductSearchResults_Result* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSearchResults_Result >*
      mutable_results();
  const ::google::cloud::vision::v1p3beta1::ProductSearchResults_Result& results(int index) const;
  ::google::cloud::vision::v1p3beta1::ProductSearchResults_Result* add_results();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSearchResults_Result >&
      results() const;

  // string product_category = 4;
  void clear_product_category();
  static const int kProductCategoryFieldNumber = 4;
  const ::std::string& product_category() const;
  void set_product_category(const ::std::string& value);
  #if LANG_CXX11
  void set_product_category(::std::string&& value);
  #endif
  void set_product_category(const char* value);
  void set_product_category(const char* value, size_t size);
  ::std::string* mutable_product_category();
  ::std::string* release_product_category();
  void set_allocated_product_category(::std::string* product_category);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_product_category();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_product_category(
      ::std::string* product_category);

  // .google.protobuf.Timestamp index_time = 2;
  bool has_index_time() const;
  void clear_index_time();
  static const int kIndexTimeFieldNumber = 2;
  private:
  const ::google::protobuf::Timestamp& _internal_index_time() const;
  public:
  const ::google::protobuf::Timestamp& index_time() const;
  ::google::protobuf::Timestamp* release_index_time();
  ::google::protobuf::Timestamp* mutable_index_time();
  void set_allocated_index_time(::google::protobuf::Timestamp* index_time);
  void unsafe_arena_set_allocated_index_time(
      ::google::protobuf::Timestamp* index_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_index_time();

  // .google.cloud.vision.v1p3beta1.ProductSearchCategory category = 1;
  void clear_category();
  static const int kCategoryFieldNumber = 1;
  ::google::cloud::vision::v1p3beta1::ProductSearchCategory category() const;
  void set_category(::google::cloud::vision::v1p3beta1::ProductSearchCategory value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ProductSearchResults)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSearchResults_ProductInfo > products_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSearchResults_Result > results_;
  ::google::protobuf::internal::ArenaStringPtr product_category_;
  ::google::protobuf::Timestamp* index_time_;
  int category_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProductSearchParams

// string catalog_name = 1;
inline void ProductSearchParams::clear_catalog_name() {
  catalog_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ProductSearchParams::catalog_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchParams.catalog_name)
  return catalog_name_.Get();
}
inline void ProductSearchParams::set_catalog_name(const ::std::string& value) {
  
  catalog_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchParams.catalog_name)
}
#if LANG_CXX11
inline void ProductSearchParams::set_catalog_name(::std::string&& value) {
  
  catalog_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ProductSearchParams.catalog_name)
}
#endif
inline void ProductSearchParams::set_catalog_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  catalog_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ProductSearchParams.catalog_name)
}
inline void ProductSearchParams::set_catalog_name(const char* value,
    size_t size) {
  
  catalog_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ProductSearchParams.catalog_name)
}
inline ::std::string* ProductSearchParams::mutable_catalog_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchParams.catalog_name)
  return catalog_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductSearchParams::release_catalog_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSearchParams.catalog_name)
  
  return catalog_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ProductSearchParams::set_allocated_catalog_name(::std::string* catalog_name) {
  if (catalog_name != NULL) {
    
  } else {
    
  }
  catalog_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), catalog_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchParams.catalog_name)
}
inline ::std::string* ProductSearchParams::unsafe_arena_release_catalog_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSearchParams.catalog_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return catalog_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductSearchParams::unsafe_arena_set_allocated_catalog_name(
    ::std::string* catalog_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (catalog_name != NULL) {
    
  } else {
    
  }
  catalog_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      catalog_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchParams.catalog_name)
}

// .google.cloud.vision.v1p3beta1.ProductSearchCategory category = 2;
inline void ProductSearchParams::clear_category() {
  category_ = 0;
}
inline ::google::cloud::vision::v1p3beta1::ProductSearchCategory ProductSearchParams::category() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchParams.category)
  return static_cast< ::google::cloud::vision::v1p3beta1::ProductSearchCategory >(category_);
}
inline void ProductSearchParams::set_category(::google::cloud::vision::v1p3beta1::ProductSearchCategory value) {
  
  category_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchParams.category)
}

// string product_category = 5;
inline void ProductSearchParams::clear_product_category() {
  product_category_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ProductSearchParams::product_category() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchParams.product_category)
  return product_category_.Get();
}
inline void ProductSearchParams::set_product_category(const ::std::string& value) {
  
  product_category_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchParams.product_category)
}
#if LANG_CXX11
inline void ProductSearchParams::set_product_category(::std::string&& value) {
  
  product_category_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ProductSearchParams.product_category)
}
#endif
inline void ProductSearchParams::set_product_category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_category_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ProductSearchParams.product_category)
}
inline void ProductSearchParams::set_product_category(const char* value,
    size_t size) {
  
  product_category_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ProductSearchParams.product_category)
}
inline ::std::string* ProductSearchParams::mutable_product_category() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchParams.product_category)
  return product_category_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductSearchParams::release_product_category() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSearchParams.product_category)
  
  return product_category_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ProductSearchParams::set_allocated_product_category(::std::string* product_category) {
  if (product_category != NULL) {
    
  } else {
    
  }
  product_category_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_category,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchParams.product_category)
}
inline ::std::string* ProductSearchParams::unsafe_arena_release_product_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSearchParams.product_category)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return product_category_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductSearchParams::unsafe_arena_set_allocated_product_category(
    ::std::string* product_category) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (product_category != NULL) {
    
  } else {
    
  }
  product_category_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      product_category, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchParams.product_category)
}

// .google.cloud.vision.v1p3beta1.NormalizedBoundingPoly normalized_bounding_poly = 3;
inline bool ProductSearchParams::has_normalized_bounding_poly() const {
  return this != internal_default_instance() && normalized_bounding_poly_ != NULL;
}
inline const ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly& ProductSearchParams::_internal_normalized_bounding_poly() const {
  return *normalized_bounding_poly_;
}
inline const ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly& ProductSearchParams::normalized_bounding_poly() const {
  const ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly* p = normalized_bounding_poly_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchParams.normalized_bounding_poly)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly*>(
      &::google::cloud::vision::v1p3beta1::_NormalizedBoundingPoly_default_instance_);
}
inline ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly* ProductSearchParams::release_normalized_bounding_poly() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSearchParams.normalized_bounding_poly)
  
  ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly* temp = normalized_bounding_poly_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  normalized_bounding_poly_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly* ProductSearchParams::unsafe_arena_release_normalized_bounding_poly() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSearchParams.normalized_bounding_poly)
  
  ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly* temp = normalized_bounding_poly_;
  normalized_bounding_poly_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly* ProductSearchParams::mutable_normalized_bounding_poly() {
  
  if (normalized_bounding_poly_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly>(GetArenaNoVirtual());
    normalized_bounding_poly_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchParams.normalized_bounding_poly)
  return normalized_bounding_poly_;
}
inline void ProductSearchParams::set_allocated_normalized_bounding_poly(::google::cloud::vision::v1p3beta1::NormalizedBoundingPoly* normalized_bounding_poly) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(normalized_bounding_poly_);
  }
  if (normalized_bounding_poly) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(normalized_bounding_poly)->GetArena();
    if (message_arena != submessage_arena) {
      normalized_bounding_poly = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, normalized_bounding_poly, submessage_arena);
    }
    
  } else {
    
  }
  normalized_bounding_poly_ = normalized_bounding_poly;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchParams.normalized_bounding_poly)
}

// .google.cloud.vision.v1p3beta1.BoundingPoly bounding_poly = 9;
inline bool ProductSearchParams::has_bounding_poly() const {
  return this != internal_default_instance() && bounding_poly_ != NULL;
}
inline const ::google::cloud::vision::v1p3beta1::BoundingPoly& ProductSearchParams::_internal_bounding_poly() const {
  return *bounding_poly_;
}
inline const ::google::cloud::vision::v1p3beta1::BoundingPoly& ProductSearchParams::bounding_poly() const {
  const ::google::cloud::vision::v1p3beta1::BoundingPoly* p = bounding_poly_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchParams.bounding_poly)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::vision::v1p3beta1::BoundingPoly*>(
      &::google::cloud::vision::v1p3beta1::_BoundingPoly_default_instance_);
}
inline ::google::cloud::vision::v1p3beta1::BoundingPoly* ProductSearchParams::release_bounding_poly() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSearchParams.bounding_poly)
  
  ::google::cloud::vision::v1p3beta1::BoundingPoly* temp = bounding_poly_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  bounding_poly_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::BoundingPoly* ProductSearchParams::unsafe_arena_release_bounding_poly() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSearchParams.bounding_poly)
  
  ::google::cloud::vision::v1p3beta1::BoundingPoly* temp = bounding_poly_;
  bounding_poly_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::BoundingPoly* ProductSearchParams::mutable_bounding_poly() {
  
  if (bounding_poly_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::vision::v1p3beta1::BoundingPoly>(GetArenaNoVirtual());
    bounding_poly_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchParams.bounding_poly)
  return bounding_poly_;
}
inline void ProductSearchParams::set_allocated_bounding_poly(::google::cloud::vision::v1p3beta1::BoundingPoly* bounding_poly) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bounding_poly_);
  }
  if (bounding_poly) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(bounding_poly)->GetArena();
    if (message_arena != submessage_arena) {
      bounding_poly = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bounding_poly, submessage_arena);
    }
    
  } else {
    
  }
  bounding_poly_ = bounding_poly;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchParams.bounding_poly)
}

// .google.cloud.vision.v1p3beta1.ProductSearchResultsView view = 4;
inline void ProductSearchParams::clear_view() {
  view_ = 0;
}
inline ::google::cloud::vision::v1p3beta1::ProductSearchResultsView ProductSearchParams::view() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchParams.view)
  return static_cast< ::google::cloud::vision::v1p3beta1::ProductSearchResultsView >(view_);
}
inline void ProductSearchParams::set_view(::google::cloud::vision::v1p3beta1::ProductSearchResultsView value) {
  
  view_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchParams.view)
}

// string product_set = 6;
inline void ProductSearchParams::clear_product_set() {
  product_set_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ProductSearchParams::product_set() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchParams.product_set)
  return product_set_.Get();
}
inline void ProductSearchParams::set_product_set(const ::std::string& value) {
  
  product_set_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchParams.product_set)
}
#if LANG_CXX11
inline void ProductSearchParams::set_product_set(::std::string&& value) {
  
  product_set_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ProductSearchParams.product_set)
}
#endif
inline void ProductSearchParams::set_product_set(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_set_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ProductSearchParams.product_set)
}
inline void ProductSearchParams::set_product_set(const char* value,
    size_t size) {
  
  product_set_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ProductSearchParams.product_set)
}
inline ::std::string* ProductSearchParams::mutable_product_set() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchParams.product_set)
  return product_set_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductSearchParams::release_product_set() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSearchParams.product_set)
  
  return product_set_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ProductSearchParams::set_allocated_product_set(::std::string* product_set) {
  if (product_set != NULL) {
    
  } else {
    
  }
  product_set_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_set,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchParams.product_set)
}
inline ::std::string* ProductSearchParams::unsafe_arena_release_product_set() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSearchParams.product_set)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return product_set_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductSearchParams::unsafe_arena_set_allocated_product_set(
    ::std::string* product_set) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (product_set != NULL) {
    
  } else {
    
  }
  product_set_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      product_set, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchParams.product_set)
}

// repeated string product_categories = 7;
inline int ProductSearchParams::product_categories_size() const {
  return product_categories_.size();
}
inline void ProductSearchParams::clear_product_categories() {
  product_categories_.Clear();
}
inline const ::std::string& ProductSearchParams::product_categories(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchParams.product_categories)
  return product_categories_.Get(index);
}
inline ::std::string* ProductSearchParams::mutable_product_categories(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchParams.product_categories)
  return product_categories_.Mutable(index);
}
inline void ProductSearchParams::set_product_categories(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchParams.product_categories)
  product_categories_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ProductSearchParams::set_product_categories(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchParams.product_categories)
  product_categories_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ProductSearchParams::set_product_categories(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  product_categories_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ProductSearchParams.product_categories)
}
inline void ProductSearchParams::set_product_categories(int index, const char* value, size_t size) {
  product_categories_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ProductSearchParams.product_categories)
}
inline ::std::string* ProductSearchParams::add_product_categories() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.vision.v1p3beta1.ProductSearchParams.product_categories)
  return product_categories_.Add();
}
inline void ProductSearchParams::add_product_categories(const ::std::string& value) {
  product_categories_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1p3beta1.ProductSearchParams.product_categories)
}
#if LANG_CXX11
inline void ProductSearchParams::add_product_categories(::std::string&& value) {
  product_categories_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1p3beta1.ProductSearchParams.product_categories)
}
#endif
inline void ProductSearchParams::add_product_categories(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  product_categories_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.vision.v1p3beta1.ProductSearchParams.product_categories)
}
inline void ProductSearchParams::add_product_categories(const char* value, size_t size) {
  product_categories_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.vision.v1p3beta1.ProductSearchParams.product_categories)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProductSearchParams::product_categories() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1p3beta1.ProductSearchParams.product_categories)
  return product_categories_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProductSearchParams::mutable_product_categories() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1p3beta1.ProductSearchParams.product_categories)
  return &product_categories_;
}

// string filter = 8;
inline void ProductSearchParams::clear_filter() {
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ProductSearchParams::filter() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchParams.filter)
  return filter_.Get();
}
inline void ProductSearchParams::set_filter(const ::std::string& value) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchParams.filter)
}
#if LANG_CXX11
inline void ProductSearchParams::set_filter(::std::string&& value) {
  
  filter_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ProductSearchParams.filter)
}
#endif
inline void ProductSearchParams::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ProductSearchParams.filter)
}
inline void ProductSearchParams::set_filter(const char* value,
    size_t size) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ProductSearchParams.filter)
}
inline ::std::string* ProductSearchParams::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchParams.filter)
  return filter_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductSearchParams::release_filter() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSearchParams.filter)
  
  return filter_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ProductSearchParams::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchParams.filter)
}
inline ::std::string* ProductSearchParams::unsafe_arena_release_filter() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSearchParams.filter)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return filter_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductSearchParams::unsafe_arena_set_allocated_filter(
    ::std::string* filter) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      filter, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchParams.filter)
}

// -------------------------------------------------------------------

// ProductSearchResults_ProductInfo

// string product_id = 1;
inline void ProductSearchResults_ProductInfo::clear_product_id() {
  product_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ProductSearchResults_ProductInfo::product_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.product_id)
  return product_id_.Get();
}
inline void ProductSearchResults_ProductInfo::set_product_id(const ::std::string& value) {
  
  product_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.product_id)
}
#if LANG_CXX11
inline void ProductSearchResults_ProductInfo::set_product_id(::std::string&& value) {
  
  product_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.product_id)
}
#endif
inline void ProductSearchResults_ProductInfo::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.product_id)
}
inline void ProductSearchResults_ProductInfo::set_product_id(const char* value,
    size_t size) {
  
  product_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.product_id)
}
inline ::std::string* ProductSearchResults_ProductInfo::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.product_id)
  return product_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductSearchResults_ProductInfo::release_product_id() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.product_id)
  
  return product_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ProductSearchResults_ProductInfo::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.product_id)
}
inline ::std::string* ProductSearchResults_ProductInfo::unsafe_arena_release_product_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.product_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return product_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductSearchResults_ProductInfo::unsafe_arena_set_allocated_product_id(
    ::std::string* product_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      product_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.product_id)
}

// string image_uri = 2;
inline void ProductSearchResults_ProductInfo::clear_image_uri() {
  image_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ProductSearchResults_ProductInfo::image_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.image_uri)
  return image_uri_.Get();
}
inline void ProductSearchResults_ProductInfo::set_image_uri(const ::std::string& value) {
  
  image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.image_uri)
}
#if LANG_CXX11
inline void ProductSearchResults_ProductInfo::set_image_uri(::std::string&& value) {
  
  image_uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.image_uri)
}
#endif
inline void ProductSearchResults_ProductInfo::set_image_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.image_uri)
}
inline void ProductSearchResults_ProductInfo::set_image_uri(const char* value,
    size_t size) {
  
  image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.image_uri)
}
inline ::std::string* ProductSearchResults_ProductInfo::mutable_image_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.image_uri)
  return image_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductSearchResults_ProductInfo::release_image_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.image_uri)
  
  return image_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ProductSearchResults_ProductInfo::set_allocated_image_uri(::std::string* image_uri) {
  if (image_uri != NULL) {
    
  } else {
    
  }
  image_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_uri,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.image_uri)
}
inline ::std::string* ProductSearchResults_ProductInfo::unsafe_arena_release_image_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.image_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return image_uri_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductSearchResults_ProductInfo::unsafe_arena_set_allocated_image_uri(
    ::std::string* image_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (image_uri != NULL) {
    
  } else {
    
  }
  image_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      image_uri, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.image_uri)
}

// float score = 3;
inline void ProductSearchResults_ProductInfo::clear_score() {
  score_ = 0;
}
inline float ProductSearchResults_ProductInfo::score() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.score)
  return score_;
}
inline void ProductSearchResults_ProductInfo::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo.score)
}

// -------------------------------------------------------------------

// ProductSearchResults_Result

// .google.cloud.vision.v1p3beta1.Product product = 1;
inline bool ProductSearchResults_Result::has_product() const {
  return this != internal_default_instance() && product_ != NULL;
}
inline const ::google::cloud::vision::v1p3beta1::Product& ProductSearchResults_Result::_internal_product() const {
  return *product_;
}
inline const ::google::cloud::vision::v1p3beta1::Product& ProductSearchResults_Result::product() const {
  const ::google::cloud::vision::v1p3beta1::Product* p = product_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.product)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::vision::v1p3beta1::Product*>(
      &::google::cloud::vision::v1p3beta1::_Product_default_instance_);
}
inline ::google::cloud::vision::v1p3beta1::Product* ProductSearchResults_Result::release_product() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.product)
  
  ::google::cloud::vision::v1p3beta1::Product* temp = product_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  product_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::Product* ProductSearchResults_Result::unsafe_arena_release_product() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.product)
  
  ::google::cloud::vision::v1p3beta1::Product* temp = product_;
  product_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::Product* ProductSearchResults_Result::mutable_product() {
  
  if (product_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::vision::v1p3beta1::Product>(GetArenaNoVirtual());
    product_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.product)
  return product_;
}
inline void ProductSearchResults_Result::set_allocated_product(::google::cloud::vision::v1p3beta1::Product* product) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(product_);
  }
  if (product) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(product)->GetArena();
    if (message_arena != submessage_arena) {
      product = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, product, submessage_arena);
    }
    
  } else {
    
  }
  product_ = product;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.product)
}

// float score = 2;
inline void ProductSearchResults_Result::clear_score() {
  score_ = 0;
}
inline float ProductSearchResults_Result::score() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.score)
  return score_;
}
inline void ProductSearchResults_Result::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.score)
}

// string image = 3;
inline void ProductSearchResults_Result::clear_image() {
  image_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ProductSearchResults_Result::image() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.image)
  return image_.Get();
}
inline void ProductSearchResults_Result::set_image(const ::std::string& value) {
  
  image_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.image)
}
#if LANG_CXX11
inline void ProductSearchResults_Result::set_image(::std::string&& value) {
  
  image_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.image)
}
#endif
inline void ProductSearchResults_Result::set_image(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  image_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.image)
}
inline void ProductSearchResults_Result::set_image(const char* value,
    size_t size) {
  
  image_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.image)
}
inline ::std::string* ProductSearchResults_Result::mutable_image() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.image)
  return image_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductSearchResults_Result::release_image() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.image)
  
  return image_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ProductSearchResults_Result::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    
  } else {
    
  }
  image_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.image)
}
inline ::std::string* ProductSearchResults_Result::unsafe_arena_release_image() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.image)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return image_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductSearchResults_Result::unsafe_arena_set_allocated_image(
    ::std::string* image) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (image != NULL) {
    
  } else {
    
  }
  image_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      image, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchResults.Result.image)
}

// -------------------------------------------------------------------

// ProductSearchResults

// .google.cloud.vision.v1p3beta1.ProductSearchCategory category = 1;
inline void ProductSearchResults::clear_category() {
  category_ = 0;
}
inline ::google::cloud::vision::v1p3beta1::ProductSearchCategory ProductSearchResults::category() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchResults.category)
  return static_cast< ::google::cloud::vision::v1p3beta1::ProductSearchCategory >(category_);
}
inline void ProductSearchResults::set_category(::google::cloud::vision::v1p3beta1::ProductSearchCategory value) {
  
  category_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchResults.category)
}

// string product_category = 4;
inline void ProductSearchResults::clear_product_category() {
  product_category_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ProductSearchResults::product_category() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchResults.product_category)
  return product_category_.Get();
}
inline void ProductSearchResults::set_product_category(const ::std::string& value) {
  
  product_category_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSearchResults.product_category)
}
#if LANG_CXX11
inline void ProductSearchResults::set_product_category(::std::string&& value) {
  
  product_category_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ProductSearchResults.product_category)
}
#endif
inline void ProductSearchResults::set_product_category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_category_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ProductSearchResults.product_category)
}
inline void ProductSearchResults::set_product_category(const char* value,
    size_t size) {
  
  product_category_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ProductSearchResults.product_category)
}
inline ::std::string* ProductSearchResults::mutable_product_category() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchResults.product_category)
  return product_category_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductSearchResults::release_product_category() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSearchResults.product_category)
  
  return product_category_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ProductSearchResults::set_allocated_product_category(::std::string* product_category) {
  if (product_category != NULL) {
    
  } else {
    
  }
  product_category_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_category,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchResults.product_category)
}
inline ::std::string* ProductSearchResults::unsafe_arena_release_product_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSearchResults.product_category)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return product_category_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductSearchResults::unsafe_arena_set_allocated_product_category(
    ::std::string* product_category) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (product_category != NULL) {
    
  } else {
    
  }
  product_category_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      product_category, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchResults.product_category)
}

// .google.protobuf.Timestamp index_time = 2;
inline bool ProductSearchResults::has_index_time() const {
  return this != internal_default_instance() && index_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& ProductSearchResults::_internal_index_time() const {
  return *index_time_;
}
inline const ::google::protobuf::Timestamp& ProductSearchResults::index_time() const {
  const ::google::protobuf::Timestamp* p = index_time_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchResults.index_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* ProductSearchResults::release_index_time() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSearchResults.index_time)
  
  ::google::protobuf::Timestamp* temp = index_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  index_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* ProductSearchResults::unsafe_arena_release_index_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSearchResults.index_time)
  
  ::google::protobuf::Timestamp* temp = index_time_;
  index_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* ProductSearchResults::mutable_index_time() {
  
  if (index_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    index_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchResults.index_time)
  return index_time_;
}
inline void ProductSearchResults::set_allocated_index_time(::google::protobuf::Timestamp* index_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(index_time_);
  }
  if (index_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(index_time)->GetArena();
    if (message_arena != submessage_arena) {
      index_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, index_time, submessage_arena);
    }
    
  } else {
    
  }
  index_time_ = index_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSearchResults.index_time)
}

// repeated .google.cloud.vision.v1p3beta1.ProductSearchResults.ProductInfo products = 3;
inline int ProductSearchResults::products_size() const {
  return products_.size();
}
inline void ProductSearchResults::clear_products() {
  products_.Clear();
}
inline ::google::cloud::vision::v1p3beta1::ProductSearchResults_ProductInfo* ProductSearchResults::mutable_products(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchResults.products)
  return products_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSearchResults_ProductInfo >*
ProductSearchResults::mutable_products() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1p3beta1.ProductSearchResults.products)
  return &products_;
}
inline const ::google::cloud::vision::v1p3beta1::ProductSearchResults_ProductInfo& ProductSearchResults::products(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchResults.products)
  return products_.Get(index);
}
inline ::google::cloud::vision::v1p3beta1::ProductSearchResults_ProductInfo* ProductSearchResults::add_products() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1p3beta1.ProductSearchResults.products)
  return products_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSearchResults_ProductInfo >&
ProductSearchResults::products() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1p3beta1.ProductSearchResults.products)
  return products_;
}

// repeated .google.cloud.vision.v1p3beta1.ProductSearchResults.Result results = 5;
inline int ProductSearchResults::results_size() const {
  return results_.size();
}
inline void ProductSearchResults::clear_results() {
  results_.Clear();
}
inline ::google::cloud::vision::v1p3beta1::ProductSearchResults_Result* ProductSearchResults::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSearchResults.results)
  return results_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSearchResults_Result >*
ProductSearchResults::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1p3beta1.ProductSearchResults.results)
  return &results_;
}
inline const ::google::cloud::vision::v1p3beta1::ProductSearchResults_Result& ProductSearchResults::results(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSearchResults.results)
  return results_.Get(index);
}
inline ::google::cloud::vision::v1p3beta1::ProductSearchResults_Result* ProductSearchResults::add_results() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1p3beta1.ProductSearchResults.results)
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSearchResults_Result >&
ProductSearchResults::results() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1p3beta1.ProductSearchResults.results)
  return results_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1p3beta1
}  // namespace vision
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::vision::v1p3beta1::ProductSearchCategory> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::vision::v1p3beta1::ProductSearchCategory>() {
  return ::google::cloud::vision::v1p3beta1::ProductSearchCategory_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::vision::v1p3beta1::ProductSearchResultsView> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::vision::v1p3beta1::ProductSearchResultsView>() {
  return ::google::cloud::vision::v1p3beta1::ProductSearchResultsView_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_2eproto
