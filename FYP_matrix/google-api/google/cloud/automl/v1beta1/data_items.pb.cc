// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/automl/v1beta1/data_items.proto

#include "google/cloud/automl/v1beta1/data_items.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TextSnippet;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Image;
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto
namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InputConfig;
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {
class ImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Image>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr image_bytes_;
  const ::google::cloud::automl::v1beta1::InputConfig* input_config_;
} _Image_default_instance_;
class TextSnippetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TextSnippet>
      _instance;
} _TextSnippet_default_instance_;
class ExamplePayloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExamplePayload>
      _instance;
  const ::google::cloud::automl::v1beta1::Image* image_;
  const ::google::cloud::automl::v1beta1::TextSnippet* text_snippet_;
} _ExamplePayload_default_instance_;
}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto {
static void InitDefaultsImage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::automl::v1beta1::_Image_default_instance_;
    new (ptr) ::google::cloud::automl::v1beta1::Image();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::automl::v1beta1::Image::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Image =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImage}, {
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::scc_info_InputConfig.base,}};

static void InitDefaultsTextSnippet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::automl::v1beta1::_TextSnippet_default_instance_;
    new (ptr) ::google::cloud::automl::v1beta1::TextSnippet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::automl::v1beta1::TextSnippet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TextSnippet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTextSnippet}, {}};

static void InitDefaultsExamplePayload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::automl::v1beta1::_ExamplePayload_default_instance_;
    new (ptr) ::google::cloud::automl::v1beta1::ExamplePayload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::automl::v1beta1::ExamplePayload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ExamplePayload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExamplePayload}, {
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::scc_info_Image.base,
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::scc_info_TextSnippet.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Image.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TextSnippet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExamplePayload.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::Image, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::Image, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::automl::v1beta1::ImageDefaultTypeInternal, image_bytes_),
  offsetof(::google::cloud::automl::v1beta1::ImageDefaultTypeInternal, input_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::Image, thumbnail_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::Image, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::TextSnippet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::TextSnippet, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::TextSnippet, mime_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::TextSnippet, content_uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::ExamplePayload, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::ExamplePayload, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::automl::v1beta1::ExamplePayloadDefaultTypeInternal, image_),
  offsetof(::google::cloud::automl::v1beta1::ExamplePayloadDefaultTypeInternal, text_snippet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::ExamplePayload, payload_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::automl::v1beta1::Image)},
  { 9, -1, sizeof(::google::cloud::automl::v1beta1::TextSnippet)},
  { 17, -1, sizeof(::google::cloud::automl::v1beta1::ExamplePayload)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::automl::v1beta1::_Image_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::automl::v1beta1::_TextSnippet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::automl::v1beta1::_ExamplePayload_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/automl/v1beta1/data_items.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n,google/cloud/automl/v1beta1/data_items"
      ".proto\022\033google.cloud.automl.v1beta1\032\034goo"
      "gle/api/annotations.proto\032$google/cloud/"
      "automl/v1beta1/io.proto\"\177\n\005Image\022\025\n\013imag"
      "e_bytes\030\001 \001(\014H\000\022@\n\014input_config\030\006 \001(\0132(."
      "google.cloud.automl.v1beta1.InputConfigH"
      "\000\022\025\n\rthumbnail_uri\030\004 \001(\tB\006\n\004data\"F\n\013Text"
      "Snippet\022\017\n\007content\030\001 \001(\t\022\021\n\tmime_type\030\002 "
      "\001(\t\022\023\n\013content_uri\030\004 \001(\t\"\222\001\n\016ExamplePayl"
      "oad\0223\n\005image\030\001 \001(\0132\".google.cloud.automl"
      ".v1beta1.ImageH\000\022@\n\014text_snippet\030\002 \001(\0132("
      ".google.cloud.automl.v1beta1.TextSnippet"
      "H\000B\t\n\007payloadBf\n\037com.google.cloud.automl"
      ".v1beta1P\001ZAgoogle.golang.org/genproto/g"
      "oogleapis/cloud/automl/v1beta1;automlb\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 605);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/automl/v1beta1/data_items.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {

// ===================================================================

void Image::InitAsDefaultInstance() {
  ::google::cloud::automl::v1beta1::_Image_default_instance_.image_bytes_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::cloud::automl::v1beta1::_Image_default_instance_.input_config_ = const_cast< ::google::cloud::automl::v1beta1::InputConfig*>(
      ::google::cloud::automl::v1beta1::InputConfig::internal_default_instance());
}
void Image::set_allocated_input_config(::google::cloud::automl::v1beta1::InputConfig* input_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (input_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_config, submessage_arena);
    }
    set_has_input_config();
    data_.input_config_ = input_config;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.Image.input_config)
}
void Image::clear_input_config() {
  if (has_input_config()) {
    delete data_.input_config_;
    clear_has_data();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Image::kImageBytesFieldNumber;
const int Image::kInputConfigFieldNumber;
const int Image::kThumbnailUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Image::Image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::scc_info_Image.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.automl.v1beta1.Image)
}
Image::Image(const Image& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  thumbnail_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnail_uri().size() > 0) {
    thumbnail_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_uri_);
  }
  clear_has_data();
  switch (from.data_case()) {
    case kImageBytes: {
      set_image_bytes(from.image_bytes());
      break;
    }
    case kInputConfig: {
      mutable_input_config()->::google::cloud::automl::v1beta1::InputConfig::MergeFrom(from.input_config());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.automl.v1beta1.Image)
}

void Image::SharedCtor() {
  thumbnail_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}

Image::~Image() {
  // @@protoc_insertion_point(destructor:google.cloud.automl.v1beta1.Image)
  SharedDtor();
}

void Image::SharedDtor() {
  thumbnail_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_data()) {
    clear_data();
  }
}

void Image::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Image::descriptor() {
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Image& Image::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::scc_info_Image.base);
  return *internal_default_instance();
}


void Image::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.automl.v1beta1.Image)
  switch (data_case()) {
    case kImageBytes: {
      data_.image_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kInputConfig: {
      delete data_.input_config_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.automl.v1beta1.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  thumbnail_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_data();
  _internal_metadata_.Clear();
}

bool Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.automl.v1beta1.Image)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes image_bytes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_image_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumbnail_uri = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnail_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumbnail_uri().data(), static_cast<int>(this->thumbnail_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.automl.v1beta1.Image.thumbnail_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.automl.v1beta1.InputConfig input_config = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.automl.v1beta1.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.automl.v1beta1.Image)
  return false;
#undef DO_
}

void Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.automl.v1beta1.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes image_bytes = 1;
  if (has_image_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->image_bytes(), output);
  }

  // string thumbnail_uri = 4;
  if (this->thumbnail_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_uri().data(), static_cast<int>(this->thumbnail_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.Image.thumbnail_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->thumbnail_uri(), output);
  }

  // .google.cloud.automl.v1beta1.InputConfig input_config = 6;
  if (has_input_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_input_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.automl.v1beta1.Image)
}

::google::protobuf::uint8* Image::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.automl.v1beta1.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes image_bytes = 1;
  if (has_image_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->image_bytes(), target);
  }

  // string thumbnail_uri = 4;
  if (this->thumbnail_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_uri().data(), static_cast<int>(this->thumbnail_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.Image.thumbnail_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->thumbnail_uri(), target);
  }

  // .google.cloud.automl.v1beta1.InputConfig input_config = 6;
  if (has_input_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_input_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.automl.v1beta1.Image)
  return target;
}

size_t Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.automl.v1beta1.Image)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string thumbnail_uri = 4;
  if (this->thumbnail_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumbnail_uri());
  }

  switch (data_case()) {
    // bytes image_bytes = 1;
    case kImageBytes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->image_bytes());
      break;
    }
    // .google.cloud.automl.v1beta1.InputConfig input_config = 6;
    case kInputConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.input_config_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Image::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.automl.v1beta1.Image)
  GOOGLE_DCHECK_NE(&from, this);
  const Image* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Image>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.automl.v1beta1.Image)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.automl.v1beta1.Image)
    MergeFrom(*source);
  }
}

void Image::MergeFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.automl.v1beta1.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.thumbnail_uri().size() > 0) {

    thumbnail_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_uri_);
  }
  switch (from.data_case()) {
    case kImageBytes: {
      set_image_bytes(from.image_bytes());
      break;
    }
    case kInputConfig: {
      mutable_input_config()->::google::cloud::automl::v1beta1::InputConfig::MergeFrom(from.input_config());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void Image::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.automl.v1beta1.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.automl.v1beta1.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Image::IsInitialized() const {
  return true;
}

void Image::Swap(Image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Image::InternalSwap(Image* other) {
  using std::swap;
  thumbnail_uri_.Swap(&other->thumbnail_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Image::GetMetadata() const {
  protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TextSnippet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextSnippet::kContentFieldNumber;
const int TextSnippet::kMimeTypeFieldNumber;
const int TextSnippet::kContentUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextSnippet::TextSnippet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::scc_info_TextSnippet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.automl.v1beta1.TextSnippet)
}
TextSnippet::TextSnippet(const TextSnippet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mime_type().size() > 0) {
    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  content_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content_uri().size() > 0) {
    content_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_uri_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.automl.v1beta1.TextSnippet)
}

void TextSnippet::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TextSnippet::~TextSnippet() {
  // @@protoc_insertion_point(destructor:google.cloud.automl.v1beta1.TextSnippet)
  SharedDtor();
}

void TextSnippet::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TextSnippet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TextSnippet::descriptor() {
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextSnippet& TextSnippet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::scc_info_TextSnippet.base);
  return *internal_default_instance();
}


void TextSnippet::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.automl.v1beta1.TextSnippet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TextSnippet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.automl.v1beta1.TextSnippet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.automl.v1beta1.TextSnippet.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mime_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), static_cast<int>(this->mime_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.automl.v1beta1.TextSnippet.mime_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content_uri = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content_uri().data(), static_cast<int>(this->content_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.automl.v1beta1.TextSnippet.content_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.automl.v1beta1.TextSnippet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.automl.v1beta1.TextSnippet)
  return false;
#undef DO_
}

void TextSnippet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.automl.v1beta1.TextSnippet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.TextSnippet.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.TextSnippet.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mime_type(), output);
  }

  // string content_uri = 4;
  if (this->content_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content_uri().data(), static_cast<int>(this->content_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.TextSnippet.content_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->content_uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.automl.v1beta1.TextSnippet)
}

::google::protobuf::uint8* TextSnippet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.automl.v1beta1.TextSnippet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.TextSnippet.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.TextSnippet.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mime_type(), target);
  }

  // string content_uri = 4;
  if (this->content_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content_uri().data(), static_cast<int>(this->content_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.TextSnippet.content_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->content_uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.automl.v1beta1.TextSnippet)
  return target;
}

size_t TextSnippet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.automl.v1beta1.TextSnippet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  // string content_uri = 4;
  if (this->content_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content_uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TextSnippet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.automl.v1beta1.TextSnippet)
  GOOGLE_DCHECK_NE(&from, this);
  const TextSnippet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextSnippet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.automl.v1beta1.TextSnippet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.automl.v1beta1.TextSnippet)
    MergeFrom(*source);
  }
}

void TextSnippet::MergeFrom(const TextSnippet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.automl.v1beta1.TextSnippet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.mime_type().size() > 0) {

    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.content_uri().size() > 0) {

    content_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_uri_);
  }
}

void TextSnippet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.automl.v1beta1.TextSnippet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextSnippet::CopyFrom(const TextSnippet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.automl.v1beta1.TextSnippet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextSnippet::IsInitialized() const {
  return true;
}

void TextSnippet::Swap(TextSnippet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TextSnippet::InternalSwap(TextSnippet* other) {
  using std::swap;
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mime_type_.Swap(&other->mime_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_uri_.Swap(&other->content_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TextSnippet::GetMetadata() const {
  protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExamplePayload::InitAsDefaultInstance() {
  ::google::cloud::automl::v1beta1::_ExamplePayload_default_instance_.image_ = const_cast< ::google::cloud::automl::v1beta1::Image*>(
      ::google::cloud::automl::v1beta1::Image::internal_default_instance());
  ::google::cloud::automl::v1beta1::_ExamplePayload_default_instance_.text_snippet_ = const_cast< ::google::cloud::automl::v1beta1::TextSnippet*>(
      ::google::cloud::automl::v1beta1::TextSnippet::internal_default_instance());
}
void ExamplePayload::set_allocated_image(::google::cloud::automl::v1beta1::Image* image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (image) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      image = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, image, submessage_arena);
    }
    set_has_image();
    payload_.image_ = image;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ExamplePayload.image)
}
void ExamplePayload::set_allocated_text_snippet(::google::cloud::automl::v1beta1::TextSnippet* text_snippet) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (text_snippet) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text_snippet = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text_snippet, submessage_arena);
    }
    set_has_text_snippet();
    payload_.text_snippet_ = text_snippet;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ExamplePayload.text_snippet)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExamplePayload::kImageFieldNumber;
const int ExamplePayload::kTextSnippetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExamplePayload::ExamplePayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::scc_info_ExamplePayload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.automl.v1beta1.ExamplePayload)
}
ExamplePayload::ExamplePayload(const ExamplePayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kImage: {
      mutable_image()->::google::cloud::automl::v1beta1::Image::MergeFrom(from.image());
      break;
    }
    case kTextSnippet: {
      mutable_text_snippet()->::google::cloud::automl::v1beta1::TextSnippet::MergeFrom(from.text_snippet());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.automl.v1beta1.ExamplePayload)
}

void ExamplePayload::SharedCtor() {
  clear_has_payload();
}

ExamplePayload::~ExamplePayload() {
  // @@protoc_insertion_point(destructor:google.cloud.automl.v1beta1.ExamplePayload)
  SharedDtor();
}

void ExamplePayload::SharedDtor() {
  if (has_payload()) {
    clear_payload();
  }
}

void ExamplePayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExamplePayload::descriptor() {
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExamplePayload& ExamplePayload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::scc_info_ExamplePayload.base);
  return *internal_default_instance();
}


void ExamplePayload::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.automl.v1beta1.ExamplePayload)
  switch (payload_case()) {
    case kImage: {
      delete payload_.image_;
      break;
    }
    case kTextSnippet: {
      delete payload_.text_snippet_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void ExamplePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.automl.v1beta1.ExamplePayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear();
}

bool ExamplePayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.automl.v1beta1.ExamplePayload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.automl.v1beta1.Image image = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.automl.v1beta1.TextSnippet text_snippet = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text_snippet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.automl.v1beta1.ExamplePayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.automl.v1beta1.ExamplePayload)
  return false;
#undef DO_
}

void ExamplePayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.automl.v1beta1.ExamplePayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.automl.v1beta1.Image image = 1;
  if (has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_image(), output);
  }

  // .google.cloud.automl.v1beta1.TextSnippet text_snippet = 2;
  if (has_text_snippet()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_text_snippet(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.automl.v1beta1.ExamplePayload)
}

::google::protobuf::uint8* ExamplePayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.automl.v1beta1.ExamplePayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.automl.v1beta1.Image image = 1;
  if (has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_image(), deterministic, target);
  }

  // .google.cloud.automl.v1beta1.TextSnippet text_snippet = 2;
  if (has_text_snippet()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_text_snippet(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.automl.v1beta1.ExamplePayload)
  return target;
}

size_t ExamplePayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.automl.v1beta1.ExamplePayload)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (payload_case()) {
    // .google.cloud.automl.v1beta1.Image image = 1;
    case kImage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.image_);
      break;
    }
    // .google.cloud.automl.v1beta1.TextSnippet text_snippet = 2;
    case kTextSnippet: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.text_snippet_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExamplePayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.automl.v1beta1.ExamplePayload)
  GOOGLE_DCHECK_NE(&from, this);
  const ExamplePayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExamplePayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.automl.v1beta1.ExamplePayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.automl.v1beta1.ExamplePayload)
    MergeFrom(*source);
  }
}

void ExamplePayload::MergeFrom(const ExamplePayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.automl.v1beta1.ExamplePayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kImage: {
      mutable_image()->::google::cloud::automl::v1beta1::Image::MergeFrom(from.image());
      break;
    }
    case kTextSnippet: {
      mutable_text_snippet()->::google::cloud::automl::v1beta1::TextSnippet::MergeFrom(from.text_snippet());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void ExamplePayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.automl.v1beta1.ExamplePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExamplePayload::CopyFrom(const ExamplePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.automl.v1beta1.ExamplePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExamplePayload::IsInitialized() const {
  return true;
}

void ExamplePayload::Swap(ExamplePayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExamplePayload::InternalSwap(ExamplePayload* other) {
  using std::swap;
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExamplePayload::GetMetadata() const {
  protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::automl::v1beta1::Image* Arena::CreateMaybeMessage< ::google::cloud::automl::v1beta1::Image >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::automl::v1beta1::Image >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::automl::v1beta1::TextSnippet* Arena::CreateMaybeMessage< ::google::cloud::automl::v1beta1::TextSnippet >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::automl::v1beta1::TextSnippet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::automl::v1beta1::ExamplePayload* Arena::CreateMaybeMessage< ::google::cloud::automl::v1beta1::ExamplePayload >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::automl::v1beta1::ExamplePayload >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
