// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/asset/v1beta1/assets.proto

#include "google/cloud/asset/v1beta1/assets.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Resource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TimeWindow;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Asset;
}  // namespace protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto
namespace protobuf_google_2fiam_2fv1_2fpolicy_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fiam_2fv1_2fpolicy_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Policy;
}  // namespace protobuf_google_2fiam_2fv1_2fpolicy_2eproto
namespace protobuf_google_2fprotobuf_2fstruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListValue;
}  // namespace protobuf_google_2fprotobuf_2fstruct_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace cloud {
namespace asset {
namespace v1beta1 {
class TemporalAssetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TemporalAsset>
      _instance;
} _TemporalAsset_default_instance_;
class TimeWindowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeWindow>
      _instance;
} _TimeWindow_default_instance_;
class AssetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Asset>
      _instance;
} _Asset_default_instance_;
class ResourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Resource>
      _instance;
} _Resource_default_instance_;
}  // namespace v1beta1
}  // namespace asset
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto {
static void InitDefaultsTemporalAsset() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::asset::v1beta1::_TemporalAsset_default_instance_;
    new (ptr) ::google::cloud::asset::v1beta1::TemporalAsset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::asset::v1beta1::TemporalAsset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TemporalAsset =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTemporalAsset}, {
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::scc_info_TimeWindow.base,
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::scc_info_Asset.base,}};

static void InitDefaultsTimeWindow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::asset::v1beta1::_TimeWindow_default_instance_;
    new (ptr) ::google::cloud::asset::v1beta1::TimeWindow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::asset::v1beta1::TimeWindow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TimeWindow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTimeWindow}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsAsset() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::asset::v1beta1::_Asset_default_instance_;
    new (ptr) ::google::cloud::asset::v1beta1::Asset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::asset::v1beta1::Asset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Asset =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAsset}, {
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::scc_info_Resource.base,
      &protobuf_google_2fiam_2fv1_2fpolicy_2eproto::scc_info_Policy.base,}};

static void InitDefaultsResource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::asset::v1beta1::_Resource_default_instance_;
    new (ptr) ::google::cloud::asset::v1beta1::Resource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::asset::v1beta1::Resource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Resource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResource}, {
      &protobuf_google_2fprotobuf_2fstruct_2eproto::scc_info_ListValue.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TemporalAsset.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TimeWindow.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Asset.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Resource.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::TemporalAsset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::TemporalAsset, window_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::TemporalAsset, deleted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::TemporalAsset, asset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::TimeWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::TimeWindow, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::TimeWindow, end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::Asset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::Asset, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::Asset, asset_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::Asset, resource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::Asset, iam_policy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::Resource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::Resource, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::Resource, discovery_document_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::Resource, discovery_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::Resource, resource_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::Resource, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::Resource, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::asset::v1beta1::TemporalAsset)},
  { 8, -1, sizeof(::google::cloud::asset::v1beta1::TimeWindow)},
  { 15, -1, sizeof(::google::cloud::asset::v1beta1::Asset)},
  { 24, -1, sizeof(::google::cloud::asset::v1beta1::Resource)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::asset::v1beta1::_TemporalAsset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::asset::v1beta1::_TimeWindow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::asset::v1beta1::_Asset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::asset::v1beta1::_Resource_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/asset/v1beta1/assets.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\'google/cloud/asset/v1beta1/assets.prot"
      "o\022\032google.cloud.asset.v1beta1\032\034google/ap"
      "i/annotations.proto\032\032google/iam/v1/polic"
      "y.proto\032\031google/protobuf/any.proto\032\034goog"
      "le/protobuf/struct.proto\032\037google/protobu"
      "f/timestamp.proto\"\212\001\n\rTemporalAsset\0226\n\006w"
      "indow\030\001 \001(\0132&.google.cloud.asset.v1beta1"
      ".TimeWindow\022\017\n\007deleted\030\002 \001(\010\0220\n\005asset\030\003 "
      "\001(\0132!.google.cloud.asset.v1beta1.Asset\"j"
      "\n\nTimeWindow\022.\n\nstart_time\030\001 \001(\0132\032.googl"
      "e.protobuf.Timestamp\022,\n\010end_time\030\002 \001(\0132\032"
      ".google.protobuf.Timestamp\"\214\001\n\005Asset\022\014\n\004"
      "name\030\001 \001(\t\022\022\n\nasset_type\030\002 \001(\t\0226\n\010resour"
      "ce\030\003 \001(\0132$.google.cloud.asset.v1beta1.Re"
      "source\022)\n\niam_policy\030\004 \001(\0132\025.google.iam."
      "v1.Policy\"\240\001\n\010Resource\022\017\n\007version\030\001 \001(\t\022"
      "\036\n\026discovery_document_uri\030\002 \001(\t\022\026\n\016disco"
      "very_name\030\003 \001(\t\022\024\n\014resource_url\030\004 \001(\t\022\016\n"
      "\006parent\030\005 \001(\t\022%\n\004data\030\006 \001(\0132\027.google.pro"
      "tobuf.StructB\251\001\n\036com.google.cloud.asset."
      "v1beta1B\nAssetProtoP\001Z\?google.golang.org"
      "/genproto/googleapis/cloud/asset/v1beta1"
      ";asset\252\002\032Google.Cloud.Asset.V1Beta1\312\002\032Go"
      "ogle\\Cloud\\Asset\\V1beta1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 952);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/asset/v1beta1/assets.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto
namespace google {
namespace cloud {
namespace asset {
namespace v1beta1 {

// ===================================================================

void TemporalAsset::InitAsDefaultInstance() {
  ::google::cloud::asset::v1beta1::_TemporalAsset_default_instance_._instance.get_mutable()->window_ = const_cast< ::google::cloud::asset::v1beta1::TimeWindow*>(
      ::google::cloud::asset::v1beta1::TimeWindow::internal_default_instance());
  ::google::cloud::asset::v1beta1::_TemporalAsset_default_instance_._instance.get_mutable()->asset_ = const_cast< ::google::cloud::asset::v1beta1::Asset*>(
      ::google::cloud::asset::v1beta1::Asset::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TemporalAsset::kWindowFieldNumber;
const int TemporalAsset::kDeletedFieldNumber;
const int TemporalAsset::kAssetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TemporalAsset::TemporalAsset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::scc_info_TemporalAsset.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.asset.v1beta1.TemporalAsset)
}
TemporalAsset::TemporalAsset(const TemporalAsset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_window()) {
    window_ = new ::google::cloud::asset::v1beta1::TimeWindow(*from.window_);
  } else {
    window_ = NULL;
  }
  if (from.has_asset()) {
    asset_ = new ::google::cloud::asset::v1beta1::Asset(*from.asset_);
  } else {
    asset_ = NULL;
  }
  deleted_ = from.deleted_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.asset.v1beta1.TemporalAsset)
}

void TemporalAsset::SharedCtor() {
  ::memset(&window_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deleted_) -
      reinterpret_cast<char*>(&window_)) + sizeof(deleted_));
}

TemporalAsset::~TemporalAsset() {
  // @@protoc_insertion_point(destructor:google.cloud.asset.v1beta1.TemporalAsset)
  SharedDtor();
}

void TemporalAsset::SharedDtor() {
  if (this != internal_default_instance()) delete window_;
  if (this != internal_default_instance()) delete asset_;
}

void TemporalAsset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TemporalAsset::descriptor() {
  ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TemporalAsset& TemporalAsset::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::scc_info_TemporalAsset.base);
  return *internal_default_instance();
}


void TemporalAsset::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.asset.v1beta1.TemporalAsset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && window_ != NULL) {
    delete window_;
  }
  window_ = NULL;
  if (GetArenaNoVirtual() == NULL && asset_ != NULL) {
    delete asset_;
  }
  asset_ = NULL;
  deleted_ = false;
  _internal_metadata_.Clear();
}

bool TemporalAsset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.asset.v1beta1.TemporalAsset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.asset.v1beta1.TimeWindow window = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool deleted = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deleted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.asset.v1beta1.Asset asset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_asset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.asset.v1beta1.TemporalAsset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.asset.v1beta1.TemporalAsset)
  return false;
#undef DO_
}

void TemporalAsset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.asset.v1beta1.TemporalAsset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.asset.v1beta1.TimeWindow window = 1;
  if (this->has_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_window(), output);
  }

  // bool deleted = 2;
  if (this->deleted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->deleted(), output);
  }

  // .google.cloud.asset.v1beta1.Asset asset = 3;
  if (this->has_asset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_asset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.asset.v1beta1.TemporalAsset)
}

::google::protobuf::uint8* TemporalAsset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.asset.v1beta1.TemporalAsset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.asset.v1beta1.TimeWindow window = 1;
  if (this->has_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_window(), deterministic, target);
  }

  // bool deleted = 2;
  if (this->deleted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->deleted(), target);
  }

  // .google.cloud.asset.v1beta1.Asset asset = 3;
  if (this->has_asset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_asset(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.asset.v1beta1.TemporalAsset)
  return target;
}

size_t TemporalAsset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.asset.v1beta1.TemporalAsset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.asset.v1beta1.TimeWindow window = 1;
  if (this->has_window()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *window_);
  }

  // .google.cloud.asset.v1beta1.Asset asset = 3;
  if (this->has_asset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *asset_);
  }

  // bool deleted = 2;
  if (this->deleted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TemporalAsset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.asset.v1beta1.TemporalAsset)
  GOOGLE_DCHECK_NE(&from, this);
  const TemporalAsset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TemporalAsset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.asset.v1beta1.TemporalAsset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.asset.v1beta1.TemporalAsset)
    MergeFrom(*source);
  }
}

void TemporalAsset::MergeFrom(const TemporalAsset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.asset.v1beta1.TemporalAsset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_window()) {
    mutable_window()->::google::cloud::asset::v1beta1::TimeWindow::MergeFrom(from.window());
  }
  if (from.has_asset()) {
    mutable_asset()->::google::cloud::asset::v1beta1::Asset::MergeFrom(from.asset());
  }
  if (from.deleted() != 0) {
    set_deleted(from.deleted());
  }
}

void TemporalAsset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.asset.v1beta1.TemporalAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemporalAsset::CopyFrom(const TemporalAsset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.asset.v1beta1.TemporalAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemporalAsset::IsInitialized() const {
  return true;
}

void TemporalAsset::Swap(TemporalAsset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TemporalAsset::InternalSwap(TemporalAsset* other) {
  using std::swap;
  swap(window_, other->window_);
  swap(asset_, other->asset_);
  swap(deleted_, other->deleted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TemporalAsset::GetMetadata() const {
  protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeWindow::InitAsDefaultInstance() {
  ::google::cloud::asset::v1beta1::_TimeWindow_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::asset::v1beta1::_TimeWindow_default_instance_._instance.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void TimeWindow::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
}
void TimeWindow::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeWindow::kStartTimeFieldNumber;
const int TimeWindow::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeWindow::TimeWindow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::scc_info_TimeWindow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.asset.v1beta1.TimeWindow)
}
TimeWindow::TimeWindow(const TimeWindow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.asset.v1beta1.TimeWindow)
}

void TimeWindow::SharedCtor() {
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(end_time_));
}

TimeWindow::~TimeWindow() {
  // @@protoc_insertion_point(destructor:google.cloud.asset.v1beta1.TimeWindow)
  SharedDtor();
}

void TimeWindow::SharedDtor() {
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
}

void TimeWindow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TimeWindow::descriptor() {
  ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeWindow& TimeWindow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::scc_info_TimeWindow.base);
  return *internal_default_instance();
}


void TimeWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.asset.v1beta1.TimeWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
  _internal_metadata_.Clear();
}

bool TimeWindow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.asset.v1beta1.TimeWindow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp start_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.asset.v1beta1.TimeWindow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.asset.v1beta1.TimeWindow)
  return false;
#undef DO_
}

void TimeWindow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.asset.v1beta1.TimeWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_start_time(), output);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_end_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.asset.v1beta1.TimeWindow)
}

::google::protobuf::uint8* TimeWindow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.asset.v1beta1.TimeWindow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_start_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_end_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.asset.v1beta1.TimeWindow)
  return target;
}

size_t TimeWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.asset.v1beta1.TimeWindow)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimeWindow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.asset.v1beta1.TimeWindow)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeWindow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeWindow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.asset.v1beta1.TimeWindow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.asset.v1beta1.TimeWindow)
    MergeFrom(*source);
  }
}

void TimeWindow::MergeFrom(const TimeWindow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.asset.v1beta1.TimeWindow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
}

void TimeWindow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.asset.v1beta1.TimeWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeWindow::CopyFrom(const TimeWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.asset.v1beta1.TimeWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeWindow::IsInitialized() const {
  return true;
}

void TimeWindow::Swap(TimeWindow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeWindow::InternalSwap(TimeWindow* other) {
  using std::swap;
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TimeWindow::GetMetadata() const {
  protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Asset::InitAsDefaultInstance() {
  ::google::cloud::asset::v1beta1::_Asset_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::cloud::asset::v1beta1::Resource*>(
      ::google::cloud::asset::v1beta1::Resource::internal_default_instance());
  ::google::cloud::asset::v1beta1::_Asset_default_instance_._instance.get_mutable()->iam_policy_ = const_cast< ::google::iam::v1::Policy*>(
      ::google::iam::v1::Policy::internal_default_instance());
}
void Asset::clear_iam_policy() {
  if (GetArenaNoVirtual() == NULL && iam_policy_ != NULL) {
    delete iam_policy_;
  }
  iam_policy_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Asset::kNameFieldNumber;
const int Asset::kAssetTypeFieldNumber;
const int Asset::kResourceFieldNumber;
const int Asset::kIamPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Asset::Asset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::scc_info_Asset.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.asset.v1beta1.Asset)
}
Asset::Asset(const Asset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  asset_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.asset_type().size() > 0) {
    asset_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_type_);
  }
  if (from.has_resource()) {
    resource_ = new ::google::cloud::asset::v1beta1::Resource(*from.resource_);
  } else {
    resource_ = NULL;
  }
  if (from.has_iam_policy()) {
    iam_policy_ = new ::google::iam::v1::Policy(*from.iam_policy_);
  } else {
    iam_policy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.asset.v1beta1.Asset)
}

void Asset::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&resource_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iam_policy_) -
      reinterpret_cast<char*>(&resource_)) + sizeof(iam_policy_));
}

Asset::~Asset() {
  // @@protoc_insertion_point(destructor:google.cloud.asset.v1beta1.Asset)
  SharedDtor();
}

void Asset::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete resource_;
  if (this != internal_default_instance()) delete iam_policy_;
}

void Asset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Asset::descriptor() {
  ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Asset& Asset::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::scc_info_Asset.base);
  return *internal_default_instance();
}


void Asset::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.asset.v1beta1.Asset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  if (GetArenaNoVirtual() == NULL && iam_policy_ != NULL) {
    delete iam_policy_;
  }
  iam_policy_ = NULL;
  _internal_metadata_.Clear();
}

bool Asset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.asset.v1beta1.Asset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.asset.v1beta1.Asset.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string asset_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_asset_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->asset_type().data(), static_cast<int>(this->asset_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.asset.v1beta1.Asset.asset_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.asset.v1beta1.Resource resource = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.iam.v1.Policy iam_policy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_iam_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.asset.v1beta1.Asset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.asset.v1beta1.Asset)
  return false;
#undef DO_
}

void Asset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.asset.v1beta1.Asset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Asset.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string asset_type = 2;
  if (this->asset_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->asset_type().data(), static_cast<int>(this->asset_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Asset.asset_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->asset_type(), output);
  }

  // .google.cloud.asset.v1beta1.Resource resource = 3;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_resource(), output);
  }

  // .google.iam.v1.Policy iam_policy = 4;
  if (this->has_iam_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_iam_policy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.asset.v1beta1.Asset)
}

::google::protobuf::uint8* Asset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.asset.v1beta1.Asset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Asset.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string asset_type = 2;
  if (this->asset_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->asset_type().data(), static_cast<int>(this->asset_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Asset.asset_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->asset_type(), target);
  }

  // .google.cloud.asset.v1beta1.Resource resource = 3;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_resource(), deterministic, target);
  }

  // .google.iam.v1.Policy iam_policy = 4;
  if (this->has_iam_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_iam_policy(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.asset.v1beta1.Asset)
  return target;
}

size_t Asset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.asset.v1beta1.Asset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string asset_type = 2;
  if (this->asset_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->asset_type());
  }

  // .google.cloud.asset.v1beta1.Resource resource = 3;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resource_);
  }

  // .google.iam.v1.Policy iam_policy = 4;
  if (this->has_iam_policy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *iam_policy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Asset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.asset.v1beta1.Asset)
  GOOGLE_DCHECK_NE(&from, this);
  const Asset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Asset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.asset.v1beta1.Asset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.asset.v1beta1.Asset)
    MergeFrom(*source);
  }
}

void Asset::MergeFrom(const Asset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.asset.v1beta1.Asset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.asset_type().size() > 0) {

    asset_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_type_);
  }
  if (from.has_resource()) {
    mutable_resource()->::google::cloud::asset::v1beta1::Resource::MergeFrom(from.resource());
  }
  if (from.has_iam_policy()) {
    mutable_iam_policy()->::google::iam::v1::Policy::MergeFrom(from.iam_policy());
  }
}

void Asset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.asset.v1beta1.Asset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Asset::CopyFrom(const Asset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.asset.v1beta1.Asset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Asset::IsInitialized() const {
  return true;
}

void Asset::Swap(Asset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Asset::InternalSwap(Asset* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  asset_type_.Swap(&other->asset_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(resource_, other->resource_);
  swap(iam_policy_, other->iam_policy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Asset::GetMetadata() const {
  protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Resource::InitAsDefaultInstance() {
  ::google::cloud::asset::v1beta1::_Resource_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
void Resource::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Resource::kVersionFieldNumber;
const int Resource::kDiscoveryDocumentUriFieldNumber;
const int Resource::kDiscoveryNameFieldNumber;
const int Resource::kResourceUrlFieldNumber;
const int Resource::kParentFieldNumber;
const int Resource::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Resource::Resource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::scc_info_Resource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.asset.v1beta1.Resource)
}
Resource::Resource(const Resource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  discovery_document_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.discovery_document_uri().size() > 0) {
    discovery_document_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.discovery_document_uri_);
  }
  discovery_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.discovery_name().size() > 0) {
    discovery_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.discovery_name_);
  }
  resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_url().size() > 0) {
    resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_url_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Struct(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.asset.v1beta1.Resource)
}

void Resource::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discovery_document_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discovery_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
}

Resource::~Resource() {
  // @@protoc_insertion_point(destructor:google.cloud.asset.v1beta1.Resource)
  SharedDtor();
}

void Resource::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discovery_document_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discovery_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void Resource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Resource::descriptor() {
  ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Resource& Resource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::scc_info_Resource.base);
  return *internal_default_instance();
}


void Resource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.asset.v1beta1.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discovery_document_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discovery_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool Resource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.asset.v1beta1.Resource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.asset.v1beta1.Resource.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string discovery_document_uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_discovery_document_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->discovery_document_uri().data(), static_cast<int>(this->discovery_document_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.asset.v1beta1.Resource.discovery_document_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string discovery_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_discovery_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->discovery_name().data(), static_cast<int>(this->discovery_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.asset.v1beta1.Resource.discovery_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resource_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_url().data(), static_cast<int>(this->resource_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.asset.v1beta1.Resource.resource_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.asset.v1beta1.Resource.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.asset.v1beta1.Resource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.asset.v1beta1.Resource)
  return false;
#undef DO_
}

void Resource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.asset.v1beta1.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Resource.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // string discovery_document_uri = 2;
  if (this->discovery_document_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->discovery_document_uri().data(), static_cast<int>(this->discovery_document_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Resource.discovery_document_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->discovery_document_uri(), output);
  }

  // string discovery_name = 3;
  if (this->discovery_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->discovery_name().data(), static_cast<int>(this->discovery_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Resource.discovery_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->discovery_name(), output);
  }

  // string resource_url = 4;
  if (this->resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_url().data(), static_cast<int>(this->resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Resource.resource_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->resource_url(), output);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Resource.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->parent(), output);
  }

  // .google.protobuf.Struct data = 6;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.asset.v1beta1.Resource)
}

::google::protobuf::uint8* Resource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.asset.v1beta1.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Resource.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // string discovery_document_uri = 2;
  if (this->discovery_document_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->discovery_document_uri().data(), static_cast<int>(this->discovery_document_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Resource.discovery_document_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->discovery_document_uri(), target);
  }

  // string discovery_name = 3;
  if (this->discovery_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->discovery_name().data(), static_cast<int>(this->discovery_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Resource.discovery_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->discovery_name(), target);
  }

  // string resource_url = 4;
  if (this->resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_url().data(), static_cast<int>(this->resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Resource.resource_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->resource_url(), target);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.Resource.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->parent(), target);
  }

  // .google.protobuf.Struct data = 6;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.asset.v1beta1.Resource)
  return target;
}

size_t Resource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.asset.v1beta1.Resource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string discovery_document_uri = 2;
  if (this->discovery_document_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->discovery_document_uri());
  }

  // string discovery_name = 3;
  if (this->discovery_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->discovery_name());
  }

  // string resource_url = 4;
  if (this->resource_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_url());
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.protobuf.Struct data = 6;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Resource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.asset.v1beta1.Resource)
  GOOGLE_DCHECK_NE(&from, this);
  const Resource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Resource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.asset.v1beta1.Resource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.asset.v1beta1.Resource)
    MergeFrom(*source);
  }
}

void Resource::MergeFrom(const Resource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.asset.v1beta1.Resource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.discovery_document_uri().size() > 0) {

    discovery_document_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.discovery_document_uri_);
  }
  if (from.discovery_name().size() > 0) {

    discovery_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.discovery_name_);
  }
  if (from.resource_url().size() > 0) {

    resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_url_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Struct::MergeFrom(from.data());
  }
}

void Resource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.asset.v1beta1.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Resource::CopyFrom(const Resource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.asset.v1beta1.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Resource::IsInitialized() const {
  return true;
}

void Resource::Swap(Resource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Resource::InternalSwap(Resource* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  discovery_document_uri_.Swap(&other->discovery_document_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  discovery_name_.Swap(&other->discovery_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  resource_url_.Swap(&other->resource_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Resource::GetMetadata() const {
  protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace asset
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::asset::v1beta1::TemporalAsset* Arena::CreateMaybeMessage< ::google::cloud::asset::v1beta1::TemporalAsset >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::asset::v1beta1::TemporalAsset >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::asset::v1beta1::TimeWindow* Arena::CreateMaybeMessage< ::google::cloud::asset::v1beta1::TimeWindow >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::asset::v1beta1::TimeWindow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::asset::v1beta1::Asset* Arena::CreateMaybeMessage< ::google::cloud::asset::v1beta1::Asset >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::asset::v1beta1::Asset >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::asset::v1beta1::Resource* Arena::CreateMaybeMessage< ::google::cloud::asset::v1beta1::Resource >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::asset::v1beta1::Resource >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
