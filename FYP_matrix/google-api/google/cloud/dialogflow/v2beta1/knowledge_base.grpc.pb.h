// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/dialogflow/v2beta1/knowledge_base.proto
// Original file comments:
// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto__INCLUDED
#define GRPC_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto__INCLUDED

#include "google/cloud/dialogflow/v2beta1/knowledge_base.pb.h"

#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

// Manages knowledge bases.
//
// Allows users to setup and maintain knowledge bases with their knowledge data.
class KnowledgeBases final {
 public:
  static constexpr char const* service_full_name() {
    return "google.cloud.dialogflow.v2beta1.KnowledgeBases";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Returns the list of all knowledge bases of the specified agent.
    virtual ::grpc::Status ListKnowledgeBases(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest& request, ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>> AsyncListKnowledgeBases(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>>(AsyncListKnowledgeBasesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>> PrepareAsyncListKnowledgeBases(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>>(PrepareAsyncListKnowledgeBasesRaw(context, request, cq));
    }
    // Retrieves the specified knowledge base.
    virtual ::grpc::Status GetKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest& request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>> AsyncGetKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>>(AsyncGetKnowledgeBaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>> PrepareAsyncGetKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>>(PrepareAsyncGetKnowledgeBaseRaw(context, request, cq));
    }
    // Creates a knowledge base.
    virtual ::grpc::Status CreateKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest& request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>> AsyncCreateKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>>(AsyncCreateKnowledgeBaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>> PrepareAsyncCreateKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>>(PrepareAsyncCreateKnowledgeBaseRaw(context, request, cq));
    }
    // Deletes the specified knowledge base.
    virtual ::grpc::Status DeleteKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteKnowledgeBaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteKnowledgeBaseRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>* AsyncListKnowledgeBasesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>* PrepareAsyncListKnowledgeBasesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>* AsyncGetKnowledgeBaseRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>* PrepareAsyncGetKnowledgeBaseRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>* AsyncCreateKnowledgeBaseRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>* PrepareAsyncCreateKnowledgeBaseRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteKnowledgeBaseRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteKnowledgeBaseRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status ListKnowledgeBases(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest& request, ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>> AsyncListKnowledgeBases(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>>(AsyncListKnowledgeBasesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>> PrepareAsyncListKnowledgeBases(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>>(PrepareAsyncListKnowledgeBasesRaw(context, request, cq));
    }
    ::grpc::Status GetKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest& request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>> AsyncGetKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>>(AsyncGetKnowledgeBaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>> PrepareAsyncGetKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>>(PrepareAsyncGetKnowledgeBaseRaw(context, request, cq));
    }
    ::grpc::Status CreateKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest& request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>> AsyncCreateKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>>(AsyncCreateKnowledgeBaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>> PrepareAsyncCreateKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>>(PrepareAsyncCreateKnowledgeBaseRaw(context, request, cq));
    }
    ::grpc::Status DeleteKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteKnowledgeBaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteKnowledgeBase(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteKnowledgeBaseRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>* AsyncListKnowledgeBasesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>* PrepareAsyncListKnowledgeBasesRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>* AsyncGetKnowledgeBaseRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>* PrepareAsyncGetKnowledgeBaseRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>* AsyncCreateKnowledgeBaseRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>* PrepareAsyncCreateKnowledgeBaseRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteKnowledgeBaseRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteKnowledgeBaseRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ListKnowledgeBases_;
    const ::grpc::internal::RpcMethod rpcmethod_GetKnowledgeBase_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateKnowledgeBase_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteKnowledgeBase_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Returns the list of all knowledge bases of the specified agent.
    virtual ::grpc::Status ListKnowledgeBases(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest* request, ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse* response);
    // Retrieves the specified knowledge base.
    virtual ::grpc::Status GetKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest* request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response);
    // Creates a knowledge base.
    virtual ::grpc::Status CreateKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest* request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response);
    // Deletes the specified knowledge base.
    virtual ::grpc::Status DeleteKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ListKnowledgeBases : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListKnowledgeBases() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ListKnowledgeBases() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListKnowledgeBases(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest* request, ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListKnowledgeBases(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetKnowledgeBase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetKnowledgeBase() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetKnowledgeBase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest* request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetKnowledgeBase(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateKnowledgeBase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateKnowledgeBase() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_CreateKnowledgeBase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest* request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateKnowledgeBase(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dialogflow::v2beta1::KnowledgeBase>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteKnowledgeBase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteKnowledgeBase() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteKnowledgeBase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteKnowledgeBase(::grpc::ServerContext* context, ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ListKnowledgeBases<WithAsyncMethod_GetKnowledgeBase<WithAsyncMethod_CreateKnowledgeBase<WithAsyncMethod_DeleteKnowledgeBase<Service > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_ListKnowledgeBases : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListKnowledgeBases() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ListKnowledgeBases() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListKnowledgeBases(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest* request, ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetKnowledgeBase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetKnowledgeBase() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetKnowledgeBase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest* request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateKnowledgeBase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateKnowledgeBase() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_CreateKnowledgeBase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest* request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteKnowledgeBase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteKnowledgeBase() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteKnowledgeBase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListKnowledgeBases : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListKnowledgeBases() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ListKnowledgeBases() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListKnowledgeBases(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest* request, ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListKnowledgeBases(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetKnowledgeBase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetKnowledgeBase() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetKnowledgeBase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest* request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetKnowledgeBase(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateKnowledgeBase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateKnowledgeBase() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_CreateKnowledgeBase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest* request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateKnowledgeBase(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteKnowledgeBase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteKnowledgeBase() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DeleteKnowledgeBase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteKnowledgeBase(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListKnowledgeBases : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListKnowledgeBases() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest, ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>(std::bind(&WithStreamedUnaryMethod_ListKnowledgeBases<BaseClass>::StreamedListKnowledgeBases, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListKnowledgeBases() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListKnowledgeBases(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest* request, ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListKnowledgeBases(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest,::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetKnowledgeBase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetKnowledgeBase() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest, ::google::cloud::dialogflow::v2beta1::KnowledgeBase>(std::bind(&WithStreamedUnaryMethod_GetKnowledgeBase<BaseClass>::StreamedGetKnowledgeBase, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetKnowledgeBase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest* request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetKnowledgeBase(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest,::google::cloud::dialogflow::v2beta1::KnowledgeBase>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateKnowledgeBase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateKnowledgeBase() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest, ::google::cloud::dialogflow::v2beta1::KnowledgeBase>(std::bind(&WithStreamedUnaryMethod_CreateKnowledgeBase<BaseClass>::StreamedCreateKnowledgeBase, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateKnowledgeBase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest* request, ::google::cloud::dialogflow::v2beta1::KnowledgeBase* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateKnowledgeBase(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest,::google::cloud::dialogflow::v2beta1::KnowledgeBase>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteKnowledgeBase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteKnowledgeBase() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteKnowledgeBase<BaseClass>::StreamedDeleteKnowledgeBase, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteKnowledgeBase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteKnowledgeBase(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteKnowledgeBase(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ListKnowledgeBases<WithStreamedUnaryMethod_GetKnowledgeBase<WithStreamedUnaryMethod_CreateKnowledgeBase<WithStreamedUnaryMethod_DeleteKnowledgeBase<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ListKnowledgeBases<WithStreamedUnaryMethod_GetKnowledgeBase<WithStreamedUnaryMethod_CreateKnowledgeBase<WithStreamedUnaryMethod_DeleteKnowledgeBase<Service > > > > StreamedService;
};

}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google


#endif  // GRPC_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto__INCLUDED
