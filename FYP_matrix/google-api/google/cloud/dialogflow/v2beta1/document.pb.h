// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/document.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto 

namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class CreateDocumentRequest;
class CreateDocumentRequestDefaultTypeInternal;
extern CreateDocumentRequestDefaultTypeInternal _CreateDocumentRequest_default_instance_;
class DeleteDocumentRequest;
class DeleteDocumentRequestDefaultTypeInternal;
extern DeleteDocumentRequestDefaultTypeInternal _DeleteDocumentRequest_default_instance_;
class Document;
class DocumentDefaultTypeInternal;
extern DocumentDefaultTypeInternal _Document_default_instance_;
class GetDocumentRequest;
class GetDocumentRequestDefaultTypeInternal;
extern GetDocumentRequestDefaultTypeInternal _GetDocumentRequest_default_instance_;
class KnowledgeOperationMetadata;
class KnowledgeOperationMetadataDefaultTypeInternal;
extern KnowledgeOperationMetadataDefaultTypeInternal _KnowledgeOperationMetadata_default_instance_;
class ListDocumentsRequest;
class ListDocumentsRequestDefaultTypeInternal;
extern ListDocumentsRequestDefaultTypeInternal _ListDocumentsRequest_default_instance_;
class ListDocumentsResponse;
class ListDocumentsResponseDefaultTypeInternal;
extern ListDocumentsResponseDefaultTypeInternal _ListDocumentsResponse_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::CreateDocumentRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2beta1::Document* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::Document>(Arena*);
template<> ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::GetDocumentRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2beta1::KnowledgeOperationMetadata* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::KnowledgeOperationMetadata>(Arena*);
template<> ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::ListDocumentsRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

enum Document_KnowledgeType {
  Document_KnowledgeType_KNOWLEDGE_TYPE_UNSPECIFIED = 0,
  Document_KnowledgeType_FAQ = 1,
  Document_KnowledgeType_EXTRACTIVE_QA = 2,
  Document_KnowledgeType_Document_KnowledgeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Document_KnowledgeType_Document_KnowledgeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Document_KnowledgeType_IsValid(int value);
const Document_KnowledgeType Document_KnowledgeType_KnowledgeType_MIN = Document_KnowledgeType_KNOWLEDGE_TYPE_UNSPECIFIED;
const Document_KnowledgeType Document_KnowledgeType_KnowledgeType_MAX = Document_KnowledgeType_EXTRACTIVE_QA;
const int Document_KnowledgeType_KnowledgeType_ARRAYSIZE = Document_KnowledgeType_KnowledgeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Document_KnowledgeType_descriptor();
inline const ::std::string& Document_KnowledgeType_Name(Document_KnowledgeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Document_KnowledgeType_descriptor(), value);
}
inline bool Document_KnowledgeType_Parse(
    const ::std::string& name, Document_KnowledgeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Document_KnowledgeType>(
    Document_KnowledgeType_descriptor(), name, value);
}
enum KnowledgeOperationMetadata_State {
  KnowledgeOperationMetadata_State_STATE_UNSPECIFIED = 0,
  KnowledgeOperationMetadata_State_PENDING = 1,
  KnowledgeOperationMetadata_State_RUNNING = 2,
  KnowledgeOperationMetadata_State_DONE = 3,
  KnowledgeOperationMetadata_State_KnowledgeOperationMetadata_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  KnowledgeOperationMetadata_State_KnowledgeOperationMetadata_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool KnowledgeOperationMetadata_State_IsValid(int value);
const KnowledgeOperationMetadata_State KnowledgeOperationMetadata_State_State_MIN = KnowledgeOperationMetadata_State_STATE_UNSPECIFIED;
const KnowledgeOperationMetadata_State KnowledgeOperationMetadata_State_State_MAX = KnowledgeOperationMetadata_State_DONE;
const int KnowledgeOperationMetadata_State_State_ARRAYSIZE = KnowledgeOperationMetadata_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* KnowledgeOperationMetadata_State_descriptor();
inline const ::std::string& KnowledgeOperationMetadata_State_Name(KnowledgeOperationMetadata_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    KnowledgeOperationMetadata_State_descriptor(), value);
}
inline bool KnowledgeOperationMetadata_State_Parse(
    const ::std::string& name, KnowledgeOperationMetadata_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<KnowledgeOperationMetadata_State>(
    KnowledgeOperationMetadata_State_descriptor(), name, value);
}
// ===================================================================

class Document : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.Document) */ {
 public:
  Document();
  virtual ~Document();

  Document(const Document& from);

  inline Document& operator=(const Document& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Document(Document&& from) noexcept
    : Document() {
    *this = ::std::move(from);
  }

  inline Document& operator=(Document&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Document& default_instance();

  enum SourceCase {
    kContentUri = 5,
    kContent = 6,
    SOURCE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Document* internal_default_instance() {
    return reinterpret_cast<const Document*>(
               &_Document_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Document* other);
  void Swap(Document* other);
  friend void swap(Document& a, Document& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Document* New() const final {
    return CreateMaybeMessage<Document>(NULL);
  }

  Document* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Document>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Document& from);
  void MergeFrom(const Document& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Document* other);
  protected:
  explicit Document(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Document_KnowledgeType KnowledgeType;
  static const KnowledgeType KNOWLEDGE_TYPE_UNSPECIFIED =
    Document_KnowledgeType_KNOWLEDGE_TYPE_UNSPECIFIED;
  static const KnowledgeType FAQ =
    Document_KnowledgeType_FAQ;
  static const KnowledgeType EXTRACTIVE_QA =
    Document_KnowledgeType_EXTRACTIVE_QA;
  static inline bool KnowledgeType_IsValid(int value) {
    return Document_KnowledgeType_IsValid(value);
  }
  static const KnowledgeType KnowledgeType_MIN =
    Document_KnowledgeType_KnowledgeType_MIN;
  static const KnowledgeType KnowledgeType_MAX =
    Document_KnowledgeType_KnowledgeType_MAX;
  static const int KnowledgeType_ARRAYSIZE =
    Document_KnowledgeType_KnowledgeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  KnowledgeType_descriptor() {
    return Document_KnowledgeType_descriptor();
  }
  static inline const ::std::string& KnowledgeType_Name(KnowledgeType value) {
    return Document_KnowledgeType_Name(value);
  }
  static inline bool KnowledgeType_Parse(const ::std::string& name,
      KnowledgeType* value) {
    return Document_KnowledgeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Document.KnowledgeType knowledge_types = 4;
  int knowledge_types_size() const;
  void clear_knowledge_types();
  static const int kKnowledgeTypesFieldNumber = 4;
  ::google::cloud::dialogflow::v2beta1::Document_KnowledgeType knowledge_types(int index) const;
  void set_knowledge_types(int index, ::google::cloud::dialogflow::v2beta1::Document_KnowledgeType value);
  void add_knowledge_types(::google::cloud::dialogflow::v2beta1::Document_KnowledgeType value);
  const ::google::protobuf::RepeatedField<int>& knowledge_types() const;
  ::google::protobuf::RepeatedField<int>* mutable_knowledge_types();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string display_name = 2;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 2;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_display_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_display_name(
      ::std::string* display_name);

  // string mime_type = 3;
  void clear_mime_type();
  static const int kMimeTypeFieldNumber = 3;
  const ::std::string& mime_type() const;
  void set_mime_type(const ::std::string& value);
  #if LANG_CXX11
  void set_mime_type(::std::string&& value);
  #endif
  void set_mime_type(const char* value);
  void set_mime_type(const char* value, size_t size);
  ::std::string* mutable_mime_type();
  ::std::string* release_mime_type();
  void set_allocated_mime_type(::std::string* mime_type);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_mime_type();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_mime_type(
      ::std::string* mime_type);

  // string content_uri = 5;
  private:
  bool has_content_uri() const;
  public:
  void clear_content_uri();
  static const int kContentUriFieldNumber = 5;
  const ::std::string& content_uri() const;
  void set_content_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_content_uri(::std::string&& value);
  #endif
  void set_content_uri(const char* value);
  void set_content_uri(const char* value, size_t size);
  ::std::string* mutable_content_uri();
  ::std::string* release_content_uri();
  void set_allocated_content_uri(::std::string* content_uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_content_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_content_uri(
      ::std::string* content_uri);

  // string content = 6;
  private:
  bool has_content() const;
  public:
  void clear_content();
  static const int kContentFieldNumber = 6;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_content();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_content(
      ::std::string* content);

  void clear_source();
  SourceCase source_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.Document)
 private:
  void set_has_content_uri();
  void set_has_content();

  inline bool has_source() const;
  inline void clear_has_source();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField<int> knowledge_types_;
  mutable int _knowledge_types_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::internal::ArenaStringPtr mime_type_;
  union SourceUnion {
    SourceUnion() {}
    ::google::protobuf::internal::ArenaStringPtr content_uri_;
    ::google::protobuf::internal::ArenaStringPtr content_;
  } source_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDocumentsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.ListDocumentsRequest) */ {
 public:
  ListDocumentsRequest();
  virtual ~ListDocumentsRequest();

  ListDocumentsRequest(const ListDocumentsRequest& from);

  inline ListDocumentsRequest& operator=(const ListDocumentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDocumentsRequest(ListDocumentsRequest&& from) noexcept
    : ListDocumentsRequest() {
    *this = ::std::move(from);
  }

  inline ListDocumentsRequest& operator=(ListDocumentsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDocumentsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDocumentsRequest* internal_default_instance() {
    return reinterpret_cast<const ListDocumentsRequest*>(
               &_ListDocumentsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ListDocumentsRequest* other);
  void Swap(ListDocumentsRequest* other);
  friend void swap(ListDocumentsRequest& a, ListDocumentsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDocumentsRequest* New() const final {
    return CreateMaybeMessage<ListDocumentsRequest>(NULL);
  }

  ListDocumentsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDocumentsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDocumentsRequest& from);
  void MergeFrom(const ListDocumentsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDocumentsRequest* other);
  protected:
  explicit ListDocumentsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.ListDocumentsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDocumentsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.ListDocumentsResponse) */ {
 public:
  ListDocumentsResponse();
  virtual ~ListDocumentsResponse();

  ListDocumentsResponse(const ListDocumentsResponse& from);

  inline ListDocumentsResponse& operator=(const ListDocumentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDocumentsResponse(ListDocumentsResponse&& from) noexcept
    : ListDocumentsResponse() {
    *this = ::std::move(from);
  }

  inline ListDocumentsResponse& operator=(ListDocumentsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDocumentsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDocumentsResponse* internal_default_instance() {
    return reinterpret_cast<const ListDocumentsResponse*>(
               &_ListDocumentsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ListDocumentsResponse* other);
  void Swap(ListDocumentsResponse* other);
  friend void swap(ListDocumentsResponse& a, ListDocumentsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDocumentsResponse* New() const final {
    return CreateMaybeMessage<ListDocumentsResponse>(NULL);
  }

  ListDocumentsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDocumentsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDocumentsResponse& from);
  void MergeFrom(const ListDocumentsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDocumentsResponse* other);
  protected:
  explicit ListDocumentsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.Document documents = 1;
  int documents_size() const;
  void clear_documents();
  static const int kDocumentsFieldNumber = 1;
  ::google::cloud::dialogflow::v2beta1::Document* mutable_documents(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Document >*
      mutable_documents();
  const ::google::cloud::dialogflow::v2beta1::Document& documents(int index) const;
  ::google::cloud::dialogflow::v2beta1::Document* add_documents();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Document >&
      documents() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.ListDocumentsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Document > documents_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetDocumentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.GetDocumentRequest) */ {
 public:
  GetDocumentRequest();
  virtual ~GetDocumentRequest();

  GetDocumentRequest(const GetDocumentRequest& from);

  inline GetDocumentRequest& operator=(const GetDocumentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDocumentRequest(GetDocumentRequest&& from) noexcept
    : GetDocumentRequest() {
    *this = ::std::move(from);
  }

  inline GetDocumentRequest& operator=(GetDocumentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDocumentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetDocumentRequest* internal_default_instance() {
    return reinterpret_cast<const GetDocumentRequest*>(
               &_GetDocumentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(GetDocumentRequest* other);
  void Swap(GetDocumentRequest* other);
  friend void swap(GetDocumentRequest& a, GetDocumentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDocumentRequest* New() const final {
    return CreateMaybeMessage<GetDocumentRequest>(NULL);
  }

  GetDocumentRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetDocumentRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetDocumentRequest& from);
  void MergeFrom(const GetDocumentRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDocumentRequest* other);
  protected:
  explicit GetDocumentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.GetDocumentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateDocumentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.CreateDocumentRequest) */ {
 public:
  CreateDocumentRequest();
  virtual ~CreateDocumentRequest();

  CreateDocumentRequest(const CreateDocumentRequest& from);

  inline CreateDocumentRequest& operator=(const CreateDocumentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateDocumentRequest(CreateDocumentRequest&& from) noexcept
    : CreateDocumentRequest() {
    *this = ::std::move(from);
  }

  inline CreateDocumentRequest& operator=(CreateDocumentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateDocumentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateDocumentRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDocumentRequest*>(
               &_CreateDocumentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(CreateDocumentRequest* other);
  void Swap(CreateDocumentRequest* other);
  friend void swap(CreateDocumentRequest& a, CreateDocumentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateDocumentRequest* New() const final {
    return CreateMaybeMessage<CreateDocumentRequest>(NULL);
  }

  CreateDocumentRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateDocumentRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateDocumentRequest& from);
  void MergeFrom(const CreateDocumentRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateDocumentRequest* other);
  protected:
  explicit CreateDocumentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // .google.cloud.dialogflow.v2beta1.Document document = 2;
  bool has_document() const;
  void clear_document();
  static const int kDocumentFieldNumber = 2;
  private:
  const ::google::cloud::dialogflow::v2beta1::Document& _internal_document() const;
  public:
  const ::google::cloud::dialogflow::v2beta1::Document& document() const;
  ::google::cloud::dialogflow::v2beta1::Document* release_document();
  ::google::cloud::dialogflow::v2beta1::Document* mutable_document();
  void set_allocated_document(::google::cloud::dialogflow::v2beta1::Document* document);
  void unsafe_arena_set_allocated_document(
      ::google::cloud::dialogflow::v2beta1::Document* document);
  ::google::cloud::dialogflow::v2beta1::Document* unsafe_arena_release_document();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.CreateDocumentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::dialogflow::v2beta1::Document* document_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteDocumentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.DeleteDocumentRequest) */ {
 public:
  DeleteDocumentRequest();
  virtual ~DeleteDocumentRequest();

  DeleteDocumentRequest(const DeleteDocumentRequest& from);

  inline DeleteDocumentRequest& operator=(const DeleteDocumentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteDocumentRequest(DeleteDocumentRequest&& from) noexcept
    : DeleteDocumentRequest() {
    *this = ::std::move(from);
  }

  inline DeleteDocumentRequest& operator=(DeleteDocumentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteDocumentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteDocumentRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteDocumentRequest*>(
               &_DeleteDocumentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(DeleteDocumentRequest* other);
  void Swap(DeleteDocumentRequest* other);
  friend void swap(DeleteDocumentRequest& a, DeleteDocumentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteDocumentRequest* New() const final {
    return CreateMaybeMessage<DeleteDocumentRequest>(NULL);
  }

  DeleteDocumentRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteDocumentRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteDocumentRequest& from);
  void MergeFrom(const DeleteDocumentRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteDocumentRequest* other);
  protected:
  explicit DeleteDocumentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.DeleteDocumentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KnowledgeOperationMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata) */ {
 public:
  KnowledgeOperationMetadata();
  virtual ~KnowledgeOperationMetadata();

  KnowledgeOperationMetadata(const KnowledgeOperationMetadata& from);

  inline KnowledgeOperationMetadata& operator=(const KnowledgeOperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KnowledgeOperationMetadata(KnowledgeOperationMetadata&& from) noexcept
    : KnowledgeOperationMetadata() {
    *this = ::std::move(from);
  }

  inline KnowledgeOperationMetadata& operator=(KnowledgeOperationMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const KnowledgeOperationMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KnowledgeOperationMetadata* internal_default_instance() {
    return reinterpret_cast<const KnowledgeOperationMetadata*>(
               &_KnowledgeOperationMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(KnowledgeOperationMetadata* other);
  void Swap(KnowledgeOperationMetadata* other);
  friend void swap(KnowledgeOperationMetadata& a, KnowledgeOperationMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KnowledgeOperationMetadata* New() const final {
    return CreateMaybeMessage<KnowledgeOperationMetadata>(NULL);
  }

  KnowledgeOperationMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<KnowledgeOperationMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const KnowledgeOperationMetadata& from);
  void MergeFrom(const KnowledgeOperationMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KnowledgeOperationMetadata* other);
  protected:
  explicit KnowledgeOperationMetadata(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef KnowledgeOperationMetadata_State State;
  static const State STATE_UNSPECIFIED =
    KnowledgeOperationMetadata_State_STATE_UNSPECIFIED;
  static const State PENDING =
    KnowledgeOperationMetadata_State_PENDING;
  static const State RUNNING =
    KnowledgeOperationMetadata_State_RUNNING;
  static const State DONE =
    KnowledgeOperationMetadata_State_DONE;
  static inline bool State_IsValid(int value) {
    return KnowledgeOperationMetadata_State_IsValid(value);
  }
  static const State State_MIN =
    KnowledgeOperationMetadata_State_State_MIN;
  static const State State_MAX =
    KnowledgeOperationMetadata_State_State_MAX;
  static const int State_ARRAYSIZE =
    KnowledgeOperationMetadata_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return KnowledgeOperationMetadata_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return KnowledgeOperationMetadata_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return KnowledgeOperationMetadata_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata.State state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::google::cloud::dialogflow::v2beta1::KnowledgeOperationMetadata_State state() const;
  void set_state(::google::cloud::dialogflow::v2beta1::KnowledgeOperationMetadata_State value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Document

// string name = 1;
inline void Document::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Document::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Document.name)
  return name_.Get();
}
inline void Document::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Document.name)
}
#if LANG_CXX11
inline void Document::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Document.name)
}
#endif
inline void Document::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Document.name)
}
inline void Document::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Document.name)
}
inline ::std::string* Document::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Document.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Document::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Document.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Document::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Document.name)
}
inline ::std::string* Document::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Document.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Document::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Document.name)
}

// string display_name = 2;
inline void Document::clear_display_name() {
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Document::display_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Document.display_name)
  return display_name_.Get();
}
inline void Document::set_display_name(const ::std::string& value) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Document.display_name)
}
#if LANG_CXX11
inline void Document::set_display_name(::std::string&& value) {
  
  display_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Document.display_name)
}
#endif
inline void Document::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Document.display_name)
}
inline void Document::set_display_name(const char* value,
    size_t size) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Document.display_name)
}
inline ::std::string* Document::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Document.display_name)
  return display_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Document::release_display_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Document.display_name)
  
  return display_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Document::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Document.display_name)
}
inline ::std::string* Document::unsafe_arena_release_display_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Document.display_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return display_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Document::unsafe_arena_set_allocated_display_name(
    ::std::string* display_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      display_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Document.display_name)
}

// string mime_type = 3;
inline void Document::clear_mime_type() {
  mime_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Document::mime_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Document.mime_type)
  return mime_type_.Get();
}
inline void Document::set_mime_type(const ::std::string& value) {
  
  mime_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Document.mime_type)
}
#if LANG_CXX11
inline void Document::set_mime_type(::std::string&& value) {
  
  mime_type_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Document.mime_type)
}
#endif
inline void Document::set_mime_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mime_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Document.mime_type)
}
inline void Document::set_mime_type(const char* value,
    size_t size) {
  
  mime_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Document.mime_type)
}
inline ::std::string* Document::mutable_mime_type() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Document.mime_type)
  return mime_type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Document::release_mime_type() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Document.mime_type)
  
  return mime_type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Document::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    
  } else {
    
  }
  mime_type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Document.mime_type)
}
inline ::std::string* Document::unsafe_arena_release_mime_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Document.mime_type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return mime_type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Document::unsafe_arena_set_allocated_mime_type(
    ::std::string* mime_type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (mime_type != NULL) {
    
  } else {
    
  }
  mime_type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      mime_type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Document.mime_type)
}

// repeated .google.cloud.dialogflow.v2beta1.Document.KnowledgeType knowledge_types = 4;
inline int Document::knowledge_types_size() const {
  return knowledge_types_.size();
}
inline void Document::clear_knowledge_types() {
  knowledge_types_.Clear();
}
inline ::google::cloud::dialogflow::v2beta1::Document_KnowledgeType Document::knowledge_types(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Document.knowledge_types)
  return static_cast< ::google::cloud::dialogflow::v2beta1::Document_KnowledgeType >(knowledge_types_.Get(index));
}
inline void Document::set_knowledge_types(int index, ::google::cloud::dialogflow::v2beta1::Document_KnowledgeType value) {
  knowledge_types_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Document.knowledge_types)
}
inline void Document::add_knowledge_types(::google::cloud::dialogflow::v2beta1::Document_KnowledgeType value) {
  knowledge_types_.Add(value);
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.Document.knowledge_types)
}
inline const ::google::protobuf::RepeatedField<int>&
Document::knowledge_types() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.Document.knowledge_types)
  return knowledge_types_;
}
inline ::google::protobuf::RepeatedField<int>*
Document::mutable_knowledge_types() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.Document.knowledge_types)
  return &knowledge_types_;
}

// string content_uri = 5;
inline bool Document::has_content_uri() const {
  return source_case() == kContentUri;
}
inline void Document::set_has_content_uri() {
  _oneof_case_[0] = kContentUri;
}
inline void Document::clear_content_uri() {
  if (has_content_uri()) {
    source_.content_uri_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_source();
  }
}
inline const ::std::string& Document::content_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Document.content_uri)
  if (has_content_uri()) {
    return source_.content_uri_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Document::set_content_uri(const ::std::string& value) {
  if (!has_content_uri()) {
    clear_source();
    set_has_content_uri();
    source_.content_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  source_.content_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Document.content_uri)
}
#if LANG_CXX11
inline void Document::set_content_uri(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Document.content_uri)
  if (!has_content_uri()) {
    clear_source();
    set_has_content_uri();
    source_.content_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  source_.content_uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Document.content_uri)
}
#endif
inline void Document::set_content_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_content_uri()) {
    clear_source();
    set_has_content_uri();
    source_.content_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  source_.content_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Document.content_uri)
}
inline void Document::set_content_uri(const char* value,
                             size_t size) {
  if (!has_content_uri()) {
    clear_source();
    set_has_content_uri();
    source_.content_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  source_.content_uri_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Document.content_uri)
}
inline ::std::string* Document::mutable_content_uri() {
  if (!has_content_uri()) {
    clear_source();
    set_has_content_uri();
    source_.content_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return source_.content_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Document.content_uri)
}
inline ::std::string* Document::release_content_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Document.content_uri)
  if (has_content_uri()) {
    clear_has_source();
    return source_.content_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void Document::set_allocated_content_uri(::std::string* content_uri) {
  if (!has_content_uri()) {
    source_.content_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_source();
  if (content_uri != NULL) {
    set_has_content_uri();
    source_.content_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_uri,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Document.content_uri)
}
inline ::std::string* Document::unsafe_arena_release_content_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Document.content_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_content_uri()) {
    clear_has_source();
    return source_.content_uri_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void Document::unsafe_arena_set_allocated_content_uri(::std::string* content_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_content_uri()) {
    source_.content_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_source();
  if (content_uri) {
    set_has_content_uri();
    source_.content_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_uri, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Document.content_uri)
}

// string content = 6;
inline bool Document::has_content() const {
  return source_case() == kContent;
}
inline void Document::set_has_content() {
  _oneof_case_[0] = kContent;
}
inline void Document::clear_content() {
  if (has_content()) {
    source_.content_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_source();
  }
}
inline const ::std::string& Document::content() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.Document.content)
  if (has_content()) {
    return source_.content_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Document::set_content(const ::std::string& value) {
  if (!has_content()) {
    clear_source();
    set_has_content();
    source_.content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  source_.content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Document.content)
}
#if LANG_CXX11
inline void Document::set_content(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.Document.content)
  if (!has_content()) {
    clear_source();
    set_has_content();
    source_.content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  source_.content_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.Document.content)
}
#endif
inline void Document::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_content()) {
    clear_source();
    set_has_content();
    source_.content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  source_.content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.Document.content)
}
inline void Document::set_content(const char* value,
                             size_t size) {
  if (!has_content()) {
    clear_source();
    set_has_content();
    source_.content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  source_.content_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.Document.content)
}
inline ::std::string* Document::mutable_content() {
  if (!has_content()) {
    clear_source();
    set_has_content();
    source_.content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return source_.content_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.Document.content)
}
inline ::std::string* Document::release_content() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.Document.content)
  if (has_content()) {
    clear_has_source();
    return source_.content_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void Document::set_allocated_content(::std::string* content) {
  if (!has_content()) {
    source_.content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_source();
  if (content != NULL) {
    set_has_content();
    source_.content_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.Document.content)
}
inline ::std::string* Document::unsafe_arena_release_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.Document.content)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_content()) {
    clear_has_source();
    return source_.content_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void Document::unsafe_arena_set_allocated_content(::std::string* content) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_content()) {
    source_.content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_source();
  if (content) {
    set_has_content();
    source_.content_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.Document.content)
}

inline bool Document::has_source() const {
  return source_case() != SOURCE_NOT_SET;
}
inline void Document::clear_has_source() {
  _oneof_case_[0] = SOURCE_NOT_SET;
}
inline Document::SourceCase Document::source_case() const {
  return Document::SourceCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ListDocumentsRequest

// string parent = 1;
inline void ListDocumentsRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListDocumentsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.parent)
  return parent_.Get();
}
inline void ListDocumentsRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.parent)
}
#if LANG_CXX11
inline void ListDocumentsRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.parent)
}
#endif
inline void ListDocumentsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.parent)
}
inline void ListDocumentsRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.parent)
}
inline ::std::string* ListDocumentsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListDocumentsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListDocumentsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.parent)
}
inline ::std::string* ListDocumentsRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListDocumentsRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.parent)
}

// int32 page_size = 2;
inline void ListDocumentsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListDocumentsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.page_size)
  return page_size_;
}
inline void ListDocumentsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.page_size)
}

// string page_token = 3;
inline void ListDocumentsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListDocumentsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.page_token)
  return page_token_.Get();
}
inline void ListDocumentsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.page_token)
}
#if LANG_CXX11
inline void ListDocumentsRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.page_token)
}
#endif
inline void ListDocumentsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.page_token)
}
inline void ListDocumentsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.page_token)
}
inline ::std::string* ListDocumentsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListDocumentsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListDocumentsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.page_token)
}
inline ::std::string* ListDocumentsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListDocumentsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListDocumentsRequest.page_token)
}

// -------------------------------------------------------------------

// ListDocumentsResponse

// repeated .google.cloud.dialogflow.v2beta1.Document documents = 1;
inline int ListDocumentsResponse::documents_size() const {
  return documents_.size();
}
inline void ListDocumentsResponse::clear_documents() {
  documents_.Clear();
}
inline ::google::cloud::dialogflow::v2beta1::Document* ListDocumentsResponse::mutable_documents(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.documents)
  return documents_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Document >*
ListDocumentsResponse::mutable_documents() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.documents)
  return &documents_;
}
inline const ::google::cloud::dialogflow::v2beta1::Document& ListDocumentsResponse::documents(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.documents)
  return documents_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::Document* ListDocumentsResponse::add_documents() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.documents)
  return documents_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::Document >&
ListDocumentsResponse::documents() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.documents)
  return documents_;
}

// string next_page_token = 2;
inline void ListDocumentsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListDocumentsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListDocumentsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListDocumentsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.next_page_token)
}
#endif
inline void ListDocumentsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.next_page_token)
}
inline void ListDocumentsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.next_page_token)
}
inline ::std::string* ListDocumentsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListDocumentsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListDocumentsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.next_page_token)
}
inline ::std::string* ListDocumentsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListDocumentsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListDocumentsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetDocumentRequest

// string name = 1;
inline void GetDocumentRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetDocumentRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.GetDocumentRequest.name)
  return name_.Get();
}
inline void GetDocumentRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.GetDocumentRequest.name)
}
#if LANG_CXX11
inline void GetDocumentRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.GetDocumentRequest.name)
}
#endif
inline void GetDocumentRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.GetDocumentRequest.name)
}
inline void GetDocumentRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.GetDocumentRequest.name)
}
inline ::std::string* GetDocumentRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.GetDocumentRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetDocumentRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.GetDocumentRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetDocumentRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.GetDocumentRequest.name)
}
inline ::std::string* GetDocumentRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.GetDocumentRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetDocumentRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.GetDocumentRequest.name)
}

// -------------------------------------------------------------------

// CreateDocumentRequest

// string parent = 1;
inline void CreateDocumentRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateDocumentRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.parent)
  return parent_.Get();
}
inline void CreateDocumentRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.parent)
}
#if LANG_CXX11
inline void CreateDocumentRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.parent)
}
#endif
inline void CreateDocumentRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.parent)
}
inline void CreateDocumentRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.parent)
}
inline ::std::string* CreateDocumentRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateDocumentRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateDocumentRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.parent)
}
inline ::std::string* CreateDocumentRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateDocumentRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.parent)
}

// .google.cloud.dialogflow.v2beta1.Document document = 2;
inline bool CreateDocumentRequest::has_document() const {
  return this != internal_default_instance() && document_ != NULL;
}
inline void CreateDocumentRequest::clear_document() {
  if (GetArenaNoVirtual() == NULL && document_ != NULL) {
    delete document_;
  }
  document_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::Document& CreateDocumentRequest::_internal_document() const {
  return *document_;
}
inline const ::google::cloud::dialogflow::v2beta1::Document& CreateDocumentRequest::document() const {
  const ::google::cloud::dialogflow::v2beta1::Document* p = document_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.document)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::Document*>(
      &::google::cloud::dialogflow::v2beta1::_Document_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::Document* CreateDocumentRequest::release_document() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.document)
  
  ::google::cloud::dialogflow::v2beta1::Document* temp = document_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  document_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Document* CreateDocumentRequest::unsafe_arena_release_document() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.document)
  
  ::google::cloud::dialogflow::v2beta1::Document* temp = document_;
  document_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::Document* CreateDocumentRequest::mutable_document() {
  
  if (document_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::Document>(GetArenaNoVirtual());
    document_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.document)
  return document_;
}
inline void CreateDocumentRequest::set_allocated_document(::google::cloud::dialogflow::v2beta1::Document* document) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete document_;
  }
  if (document) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(document);
    if (message_arena != submessage_arena) {
      document = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, document, submessage_arena);
    }
    
  } else {
    
  }
  document_ = document;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.CreateDocumentRequest.document)
}

// -------------------------------------------------------------------

// DeleteDocumentRequest

// string name = 1;
inline void DeleteDocumentRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteDocumentRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.DeleteDocumentRequest.name)
  return name_.Get();
}
inline void DeleteDocumentRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.DeleteDocumentRequest.name)
}
#if LANG_CXX11
inline void DeleteDocumentRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.DeleteDocumentRequest.name)
}
#endif
inline void DeleteDocumentRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.DeleteDocumentRequest.name)
}
inline void DeleteDocumentRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.DeleteDocumentRequest.name)
}
inline ::std::string* DeleteDocumentRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.DeleteDocumentRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteDocumentRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.DeleteDocumentRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DeleteDocumentRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.DeleteDocumentRequest.name)
}
inline ::std::string* DeleteDocumentRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.DeleteDocumentRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteDocumentRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.DeleteDocumentRequest.name)
}

// -------------------------------------------------------------------

// KnowledgeOperationMetadata

// .google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata.State state = 1;
inline void KnowledgeOperationMetadata::clear_state() {
  state_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::KnowledgeOperationMetadata_State KnowledgeOperationMetadata::state() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata.state)
  return static_cast< ::google::cloud::dialogflow::v2beta1::KnowledgeOperationMetadata_State >(state_);
}
inline void KnowledgeOperationMetadata::set_state(::google::cloud::dialogflow::v2beta1::KnowledgeOperationMetadata_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.KnowledgeOperationMetadata.state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::dialogflow::v2beta1::Document_KnowledgeType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2beta1::Document_KnowledgeType>() {
  return ::google::cloud::dialogflow::v2beta1::Document_KnowledgeType_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::dialogflow::v2beta1::KnowledgeOperationMetadata_State> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2beta1::KnowledgeOperationMetadata_State>() {
  return ::google::cloud::dialogflow::v2beta1::KnowledgeOperationMetadata_State_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2beta1_2fdocument_2eproto
