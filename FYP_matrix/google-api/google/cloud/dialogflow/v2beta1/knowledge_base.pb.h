// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/knowledge_base.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto 

namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class CreateKnowledgeBaseRequest;
class CreateKnowledgeBaseRequestDefaultTypeInternal;
extern CreateKnowledgeBaseRequestDefaultTypeInternal _CreateKnowledgeBaseRequest_default_instance_;
class DeleteKnowledgeBaseRequest;
class DeleteKnowledgeBaseRequestDefaultTypeInternal;
extern DeleteKnowledgeBaseRequestDefaultTypeInternal _DeleteKnowledgeBaseRequest_default_instance_;
class GetKnowledgeBaseRequest;
class GetKnowledgeBaseRequestDefaultTypeInternal;
extern GetKnowledgeBaseRequestDefaultTypeInternal _GetKnowledgeBaseRequest_default_instance_;
class KnowledgeBase;
class KnowledgeBaseDefaultTypeInternal;
extern KnowledgeBaseDefaultTypeInternal _KnowledgeBase_default_instance_;
class ListKnowledgeBasesRequest;
class ListKnowledgeBasesRequestDefaultTypeInternal;
extern ListKnowledgeBasesRequestDefaultTypeInternal _ListKnowledgeBasesRequest_default_instance_;
class ListKnowledgeBasesResponse;
class ListKnowledgeBasesResponseDefaultTypeInternal;
extern ListKnowledgeBasesResponseDefaultTypeInternal _ListKnowledgeBasesResponse_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::CreateKnowledgeBaseRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::DeleteKnowledgeBaseRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::GetKnowledgeBaseRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2beta1::KnowledgeBase* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::KnowledgeBase>(Arena*);
template<> ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesRequest>(Arena*);
template<> ::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::ListKnowledgeBasesResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

// ===================================================================

class KnowledgeBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.KnowledgeBase) */ {
 public:
  KnowledgeBase();
  virtual ~KnowledgeBase();

  KnowledgeBase(const KnowledgeBase& from);

  inline KnowledgeBase& operator=(const KnowledgeBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KnowledgeBase(KnowledgeBase&& from) noexcept
    : KnowledgeBase() {
    *this = ::std::move(from);
  }

  inline KnowledgeBase& operator=(KnowledgeBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const KnowledgeBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KnowledgeBase* internal_default_instance() {
    return reinterpret_cast<const KnowledgeBase*>(
               &_KnowledgeBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(KnowledgeBase* other);
  void Swap(KnowledgeBase* other);
  friend void swap(KnowledgeBase& a, KnowledgeBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KnowledgeBase* New() const final {
    return CreateMaybeMessage<KnowledgeBase>(NULL);
  }

  KnowledgeBase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<KnowledgeBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const KnowledgeBase& from);
  void MergeFrom(const KnowledgeBase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KnowledgeBase* other);
  protected:
  explicit KnowledgeBase(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string display_name = 2;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 2;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_display_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_display_name(
      ::std::string* display_name);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.KnowledgeBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListKnowledgeBasesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest) */ {
 public:
  ListKnowledgeBasesRequest();
  virtual ~ListKnowledgeBasesRequest();

  ListKnowledgeBasesRequest(const ListKnowledgeBasesRequest& from);

  inline ListKnowledgeBasesRequest& operator=(const ListKnowledgeBasesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListKnowledgeBasesRequest(ListKnowledgeBasesRequest&& from) noexcept
    : ListKnowledgeBasesRequest() {
    *this = ::std::move(from);
  }

  inline ListKnowledgeBasesRequest& operator=(ListKnowledgeBasesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListKnowledgeBasesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListKnowledgeBasesRequest* internal_default_instance() {
    return reinterpret_cast<const ListKnowledgeBasesRequest*>(
               &_ListKnowledgeBasesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ListKnowledgeBasesRequest* other);
  void Swap(ListKnowledgeBasesRequest* other);
  friend void swap(ListKnowledgeBasesRequest& a, ListKnowledgeBasesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListKnowledgeBasesRequest* New() const final {
    return CreateMaybeMessage<ListKnowledgeBasesRequest>(NULL);
  }

  ListKnowledgeBasesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListKnowledgeBasesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListKnowledgeBasesRequest& from);
  void MergeFrom(const ListKnowledgeBasesRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListKnowledgeBasesRequest* other);
  protected:
  explicit ListKnowledgeBasesRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListKnowledgeBasesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse) */ {
 public:
  ListKnowledgeBasesResponse();
  virtual ~ListKnowledgeBasesResponse();

  ListKnowledgeBasesResponse(const ListKnowledgeBasesResponse& from);

  inline ListKnowledgeBasesResponse& operator=(const ListKnowledgeBasesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListKnowledgeBasesResponse(ListKnowledgeBasesResponse&& from) noexcept
    : ListKnowledgeBasesResponse() {
    *this = ::std::move(from);
  }

  inline ListKnowledgeBasesResponse& operator=(ListKnowledgeBasesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListKnowledgeBasesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListKnowledgeBasesResponse* internal_default_instance() {
    return reinterpret_cast<const ListKnowledgeBasesResponse*>(
               &_ListKnowledgeBasesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ListKnowledgeBasesResponse* other);
  void Swap(ListKnowledgeBasesResponse* other);
  friend void swap(ListKnowledgeBasesResponse& a, ListKnowledgeBasesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListKnowledgeBasesResponse* New() const final {
    return CreateMaybeMessage<ListKnowledgeBasesResponse>(NULL);
  }

  ListKnowledgeBasesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListKnowledgeBasesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListKnowledgeBasesResponse& from);
  void MergeFrom(const ListKnowledgeBasesResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListKnowledgeBasesResponse* other);
  protected:
  explicit ListKnowledgeBasesResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dialogflow.v2beta1.KnowledgeBase knowledge_bases = 1;
  int knowledge_bases_size() const;
  void clear_knowledge_bases();
  static const int kKnowledgeBasesFieldNumber = 1;
  ::google::cloud::dialogflow::v2beta1::KnowledgeBase* mutable_knowledge_bases(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::KnowledgeBase >*
      mutable_knowledge_bases();
  const ::google::cloud::dialogflow::v2beta1::KnowledgeBase& knowledge_bases(int index) const;
  ::google::cloud::dialogflow::v2beta1::KnowledgeBase* add_knowledge_bases();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::KnowledgeBase >&
      knowledge_bases() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::KnowledgeBase > knowledge_bases_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetKnowledgeBaseRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.GetKnowledgeBaseRequest) */ {
 public:
  GetKnowledgeBaseRequest();
  virtual ~GetKnowledgeBaseRequest();

  GetKnowledgeBaseRequest(const GetKnowledgeBaseRequest& from);

  inline GetKnowledgeBaseRequest& operator=(const GetKnowledgeBaseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetKnowledgeBaseRequest(GetKnowledgeBaseRequest&& from) noexcept
    : GetKnowledgeBaseRequest() {
    *this = ::std::move(from);
  }

  inline GetKnowledgeBaseRequest& operator=(GetKnowledgeBaseRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetKnowledgeBaseRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetKnowledgeBaseRequest* internal_default_instance() {
    return reinterpret_cast<const GetKnowledgeBaseRequest*>(
               &_GetKnowledgeBaseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(GetKnowledgeBaseRequest* other);
  void Swap(GetKnowledgeBaseRequest* other);
  friend void swap(GetKnowledgeBaseRequest& a, GetKnowledgeBaseRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetKnowledgeBaseRequest* New() const final {
    return CreateMaybeMessage<GetKnowledgeBaseRequest>(NULL);
  }

  GetKnowledgeBaseRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetKnowledgeBaseRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetKnowledgeBaseRequest& from);
  void MergeFrom(const GetKnowledgeBaseRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetKnowledgeBaseRequest* other);
  protected:
  explicit GetKnowledgeBaseRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.GetKnowledgeBaseRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateKnowledgeBaseRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest) */ {
 public:
  CreateKnowledgeBaseRequest();
  virtual ~CreateKnowledgeBaseRequest();

  CreateKnowledgeBaseRequest(const CreateKnowledgeBaseRequest& from);

  inline CreateKnowledgeBaseRequest& operator=(const CreateKnowledgeBaseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateKnowledgeBaseRequest(CreateKnowledgeBaseRequest&& from) noexcept
    : CreateKnowledgeBaseRequest() {
    *this = ::std::move(from);
  }

  inline CreateKnowledgeBaseRequest& operator=(CreateKnowledgeBaseRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateKnowledgeBaseRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateKnowledgeBaseRequest* internal_default_instance() {
    return reinterpret_cast<const CreateKnowledgeBaseRequest*>(
               &_CreateKnowledgeBaseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(CreateKnowledgeBaseRequest* other);
  void Swap(CreateKnowledgeBaseRequest* other);
  friend void swap(CreateKnowledgeBaseRequest& a, CreateKnowledgeBaseRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateKnowledgeBaseRequest* New() const final {
    return CreateMaybeMessage<CreateKnowledgeBaseRequest>(NULL);
  }

  CreateKnowledgeBaseRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateKnowledgeBaseRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateKnowledgeBaseRequest& from);
  void MergeFrom(const CreateKnowledgeBaseRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateKnowledgeBaseRequest* other);
  protected:
  explicit CreateKnowledgeBaseRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // .google.cloud.dialogflow.v2beta1.KnowledgeBase knowledge_base = 2;
  bool has_knowledge_base() const;
  void clear_knowledge_base();
  static const int kKnowledgeBaseFieldNumber = 2;
  private:
  const ::google::cloud::dialogflow::v2beta1::KnowledgeBase& _internal_knowledge_base() const;
  public:
  const ::google::cloud::dialogflow::v2beta1::KnowledgeBase& knowledge_base() const;
  ::google::cloud::dialogflow::v2beta1::KnowledgeBase* release_knowledge_base();
  ::google::cloud::dialogflow::v2beta1::KnowledgeBase* mutable_knowledge_base();
  void set_allocated_knowledge_base(::google::cloud::dialogflow::v2beta1::KnowledgeBase* knowledge_base);
  void unsafe_arena_set_allocated_knowledge_base(
      ::google::cloud::dialogflow::v2beta1::KnowledgeBase* knowledge_base);
  ::google::cloud::dialogflow::v2beta1::KnowledgeBase* unsafe_arena_release_knowledge_base();

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::dialogflow::v2beta1::KnowledgeBase* knowledge_base_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteKnowledgeBaseRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest) */ {
 public:
  DeleteKnowledgeBaseRequest();
  virtual ~DeleteKnowledgeBaseRequest();

  DeleteKnowledgeBaseRequest(const DeleteKnowledgeBaseRequest& from);

  inline DeleteKnowledgeBaseRequest& operator=(const DeleteKnowledgeBaseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteKnowledgeBaseRequest(DeleteKnowledgeBaseRequest&& from) noexcept
    : DeleteKnowledgeBaseRequest() {
    *this = ::std::move(from);
  }

  inline DeleteKnowledgeBaseRequest& operator=(DeleteKnowledgeBaseRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteKnowledgeBaseRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteKnowledgeBaseRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteKnowledgeBaseRequest*>(
               &_DeleteKnowledgeBaseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(DeleteKnowledgeBaseRequest* other);
  void Swap(DeleteKnowledgeBaseRequest* other);
  friend void swap(DeleteKnowledgeBaseRequest& a, DeleteKnowledgeBaseRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteKnowledgeBaseRequest* New() const final {
    return CreateMaybeMessage<DeleteKnowledgeBaseRequest>(NULL);
  }

  DeleteKnowledgeBaseRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteKnowledgeBaseRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteKnowledgeBaseRequest& from);
  void MergeFrom(const DeleteKnowledgeBaseRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteKnowledgeBaseRequest* other);
  protected:
  explicit DeleteKnowledgeBaseRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // bool force = 2;
  void clear_force();
  static const int kForceFieldNumber = 2;
  bool force() const;
  void set_force(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool force_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// KnowledgeBase

// string name = 1;
inline void KnowledgeBase::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& KnowledgeBase::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.KnowledgeBase.name)
  return name_.Get();
}
inline void KnowledgeBase::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.KnowledgeBase.name)
}
#if LANG_CXX11
inline void KnowledgeBase::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.KnowledgeBase.name)
}
#endif
inline void KnowledgeBase::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.KnowledgeBase.name)
}
inline void KnowledgeBase::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.KnowledgeBase.name)
}
inline ::std::string* KnowledgeBase::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.KnowledgeBase.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* KnowledgeBase::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.KnowledgeBase.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void KnowledgeBase::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.KnowledgeBase.name)
}
inline ::std::string* KnowledgeBase::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.KnowledgeBase.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void KnowledgeBase::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.KnowledgeBase.name)
}

// string display_name = 2;
inline void KnowledgeBase::clear_display_name() {
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& KnowledgeBase::display_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.KnowledgeBase.display_name)
  return display_name_.Get();
}
inline void KnowledgeBase::set_display_name(const ::std::string& value) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.KnowledgeBase.display_name)
}
#if LANG_CXX11
inline void KnowledgeBase::set_display_name(::std::string&& value) {
  
  display_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.KnowledgeBase.display_name)
}
#endif
inline void KnowledgeBase::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.KnowledgeBase.display_name)
}
inline void KnowledgeBase::set_display_name(const char* value,
    size_t size) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.KnowledgeBase.display_name)
}
inline ::std::string* KnowledgeBase::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.KnowledgeBase.display_name)
  return display_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* KnowledgeBase::release_display_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.KnowledgeBase.display_name)
  
  return display_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void KnowledgeBase::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.KnowledgeBase.display_name)
}
inline ::std::string* KnowledgeBase::unsafe_arena_release_display_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.KnowledgeBase.display_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return display_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void KnowledgeBase::unsafe_arena_set_allocated_display_name(
    ::std::string* display_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      display_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.KnowledgeBase.display_name)
}

// -------------------------------------------------------------------

// ListKnowledgeBasesRequest

// string parent = 1;
inline void ListKnowledgeBasesRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListKnowledgeBasesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.parent)
  return parent_.Get();
}
inline void ListKnowledgeBasesRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.parent)
}
#if LANG_CXX11
inline void ListKnowledgeBasesRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.parent)
}
#endif
inline void ListKnowledgeBasesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.parent)
}
inline void ListKnowledgeBasesRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.parent)
}
inline ::std::string* ListKnowledgeBasesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListKnowledgeBasesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListKnowledgeBasesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.parent)
}
inline ::std::string* ListKnowledgeBasesRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListKnowledgeBasesRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.parent)
}

// int32 page_size = 2;
inline void ListKnowledgeBasesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListKnowledgeBasesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.page_size)
  return page_size_;
}
inline void ListKnowledgeBasesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.page_size)
}

// string page_token = 3;
inline void ListKnowledgeBasesRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListKnowledgeBasesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.page_token)
  return page_token_.Get();
}
inline void ListKnowledgeBasesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.page_token)
}
#if LANG_CXX11
inline void ListKnowledgeBasesRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.page_token)
}
#endif
inline void ListKnowledgeBasesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.page_token)
}
inline void ListKnowledgeBasesRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.page_token)
}
inline ::std::string* ListKnowledgeBasesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListKnowledgeBasesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListKnowledgeBasesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.page_token)
}
inline ::std::string* ListKnowledgeBasesRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListKnowledgeBasesRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesRequest.page_token)
}

// -------------------------------------------------------------------

// ListKnowledgeBasesResponse

// repeated .google.cloud.dialogflow.v2beta1.KnowledgeBase knowledge_bases = 1;
inline int ListKnowledgeBasesResponse::knowledge_bases_size() const {
  return knowledge_bases_.size();
}
inline void ListKnowledgeBasesResponse::clear_knowledge_bases() {
  knowledge_bases_.Clear();
}
inline ::google::cloud::dialogflow::v2beta1::KnowledgeBase* ListKnowledgeBasesResponse::mutable_knowledge_bases(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.knowledge_bases)
  return knowledge_bases_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::KnowledgeBase >*
ListKnowledgeBasesResponse::mutable_knowledge_bases() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.knowledge_bases)
  return &knowledge_bases_;
}
inline const ::google::cloud::dialogflow::v2beta1::KnowledgeBase& ListKnowledgeBasesResponse::knowledge_bases(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.knowledge_bases)
  return knowledge_bases_.Get(index);
}
inline ::google::cloud::dialogflow::v2beta1::KnowledgeBase* ListKnowledgeBasesResponse::add_knowledge_bases() {
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.knowledge_bases)
  return knowledge_bases_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dialogflow::v2beta1::KnowledgeBase >&
ListKnowledgeBasesResponse::knowledge_bases() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.knowledge_bases)
  return knowledge_bases_;
}

// string next_page_token = 2;
inline void ListKnowledgeBasesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListKnowledgeBasesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListKnowledgeBasesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListKnowledgeBasesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.next_page_token)
}
#endif
inline void ListKnowledgeBasesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.next_page_token)
}
inline void ListKnowledgeBasesResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.next_page_token)
}
inline ::std::string* ListKnowledgeBasesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListKnowledgeBasesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListKnowledgeBasesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.next_page_token)
}
inline ::std::string* ListKnowledgeBasesResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListKnowledgeBasesResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.ListKnowledgeBasesResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetKnowledgeBaseRequest

// string name = 1;
inline void GetKnowledgeBaseRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetKnowledgeBaseRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.GetKnowledgeBaseRequest.name)
  return name_.Get();
}
inline void GetKnowledgeBaseRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.GetKnowledgeBaseRequest.name)
}
#if LANG_CXX11
inline void GetKnowledgeBaseRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.GetKnowledgeBaseRequest.name)
}
#endif
inline void GetKnowledgeBaseRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.GetKnowledgeBaseRequest.name)
}
inline void GetKnowledgeBaseRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.GetKnowledgeBaseRequest.name)
}
inline ::std::string* GetKnowledgeBaseRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.GetKnowledgeBaseRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetKnowledgeBaseRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.GetKnowledgeBaseRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetKnowledgeBaseRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.GetKnowledgeBaseRequest.name)
}
inline ::std::string* GetKnowledgeBaseRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.GetKnowledgeBaseRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetKnowledgeBaseRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.GetKnowledgeBaseRequest.name)
}

// -------------------------------------------------------------------

// CreateKnowledgeBaseRequest

// string parent = 1;
inline void CreateKnowledgeBaseRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateKnowledgeBaseRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.parent)
  return parent_.Get();
}
inline void CreateKnowledgeBaseRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.parent)
}
#if LANG_CXX11
inline void CreateKnowledgeBaseRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.parent)
}
#endif
inline void CreateKnowledgeBaseRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.parent)
}
inline void CreateKnowledgeBaseRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.parent)
}
inline ::std::string* CreateKnowledgeBaseRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateKnowledgeBaseRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateKnowledgeBaseRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.parent)
}
inline ::std::string* CreateKnowledgeBaseRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateKnowledgeBaseRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.parent)
}

// .google.cloud.dialogflow.v2beta1.KnowledgeBase knowledge_base = 2;
inline bool CreateKnowledgeBaseRequest::has_knowledge_base() const {
  return this != internal_default_instance() && knowledge_base_ != NULL;
}
inline void CreateKnowledgeBaseRequest::clear_knowledge_base() {
  if (GetArenaNoVirtual() == NULL && knowledge_base_ != NULL) {
    delete knowledge_base_;
  }
  knowledge_base_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::KnowledgeBase& CreateKnowledgeBaseRequest::_internal_knowledge_base() const {
  return *knowledge_base_;
}
inline const ::google::cloud::dialogflow::v2beta1::KnowledgeBase& CreateKnowledgeBaseRequest::knowledge_base() const {
  const ::google::cloud::dialogflow::v2beta1::KnowledgeBase* p = knowledge_base_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.knowledge_base)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::KnowledgeBase*>(
      &::google::cloud::dialogflow::v2beta1::_KnowledgeBase_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::KnowledgeBase* CreateKnowledgeBaseRequest::release_knowledge_base() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.knowledge_base)
  
  ::google::cloud::dialogflow::v2beta1::KnowledgeBase* temp = knowledge_base_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  knowledge_base_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::KnowledgeBase* CreateKnowledgeBaseRequest::unsafe_arena_release_knowledge_base() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.knowledge_base)
  
  ::google::cloud::dialogflow::v2beta1::KnowledgeBase* temp = knowledge_base_;
  knowledge_base_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::KnowledgeBase* CreateKnowledgeBaseRequest::mutable_knowledge_base() {
  
  if (knowledge_base_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::KnowledgeBase>(GetArenaNoVirtual());
    knowledge_base_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.knowledge_base)
  return knowledge_base_;
}
inline void CreateKnowledgeBaseRequest::set_allocated_knowledge_base(::google::cloud::dialogflow::v2beta1::KnowledgeBase* knowledge_base) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete knowledge_base_;
  }
  if (knowledge_base) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(knowledge_base);
    if (message_arena != submessage_arena) {
      knowledge_base = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, knowledge_base, submessage_arena);
    }
    
  } else {
    
  }
  knowledge_base_ = knowledge_base;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.CreateKnowledgeBaseRequest.knowledge_base)
}

// -------------------------------------------------------------------

// DeleteKnowledgeBaseRequest

// string name = 1;
inline void DeleteKnowledgeBaseRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteKnowledgeBaseRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest.name)
  return name_.Get();
}
inline void DeleteKnowledgeBaseRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest.name)
}
#if LANG_CXX11
inline void DeleteKnowledgeBaseRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest.name)
}
#endif
inline void DeleteKnowledgeBaseRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest.name)
}
inline void DeleteKnowledgeBaseRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest.name)
}
inline ::std::string* DeleteKnowledgeBaseRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteKnowledgeBaseRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DeleteKnowledgeBaseRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest.name)
}
inline ::std::string* DeleteKnowledgeBaseRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteKnowledgeBaseRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest.name)
}

// bool force = 2;
inline void DeleteKnowledgeBaseRequest::clear_force() {
  force_ = false;
}
inline bool DeleteKnowledgeBaseRequest::force() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest.force)
  return force_;
}
inline void DeleteKnowledgeBaseRequest::set_force(bool value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.DeleteKnowledgeBaseRequest.force)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2beta1_2fknowledge_5fbase_2eproto
