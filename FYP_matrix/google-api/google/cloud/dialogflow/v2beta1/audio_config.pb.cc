// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/audio_config.proto

#include "google/cloud/dialogflow/v2beta1/audio_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VoiceSelectionParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SynthesizeSpeechConfig;
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class VoiceSelectionParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VoiceSelectionParams>
      _instance;
} _VoiceSelectionParams_default_instance_;
class SynthesizeSpeechConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SynthesizeSpeechConfig>
      _instance;
} _SynthesizeSpeechConfig_default_instance_;
class OutputAudioConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OutputAudioConfig>
      _instance;
} _OutputAudioConfig_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto {
static void InitDefaultsVoiceSelectionParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_VoiceSelectionParams_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VoiceSelectionParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVoiceSelectionParams}, {}};

static void InitDefaultsSynthesizeSpeechConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_SynthesizeSpeechConfig_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SynthesizeSpeechConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSynthesizeSpeechConfig}, {
      &protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::scc_info_VoiceSelectionParams.base,}};

static void InitDefaultsOutputAudioConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dialogflow::v2beta1::_OutputAudioConfig_default_instance_;
    new (ptr) ::google::cloud::dialogflow::v2beta1::OutputAudioConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dialogflow::v2beta1::OutputAudioConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OutputAudioConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOutputAudioConfig}, {
      &protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::scc_info_SynthesizeSpeechConfig.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VoiceSelectionParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SynthesizeSpeechConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OutputAudioConfig.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::VoiceSelectionParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::VoiceSelectionParams, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::VoiceSelectionParams, ssml_gender_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig, speaking_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig, volume_gain_db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig, effects_profile_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig, voice_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::OutputAudioConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::OutputAudioConfig, audio_encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::OutputAudioConfig, sample_rate_hertz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dialogflow::v2beta1::OutputAudioConfig, synthesize_speech_config_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::dialogflow::v2beta1::VoiceSelectionParams)},
  { 7, -1, sizeof(::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig)},
  { 17, -1, sizeof(::google::cloud::dialogflow::v2beta1::OutputAudioConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_VoiceSelectionParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_SynthesizeSpeechConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dialogflow::v2beta1::_OutputAudioConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/dialogflow/v2beta1/audio_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n2google/cloud/dialogflow/v2beta1/audio_"
      "config.proto\022\037google.cloud.dialogflow.v2"
      "beta1\032\034google/api/annotations.proto\"k\n\024V"
      "oiceSelectionParams\022\014\n\004name\030\001 \001(\t\022E\n\013ssm"
      "l_gender\030\002 \001(\01620.google.cloud.dialogflow"
      ".v2beta1.SsmlVoiceGender\"\270\001\n\026SynthesizeS"
      "peechConfig\022\025\n\rspeaking_rate\030\001 \001(\001\022\r\n\005pi"
      "tch\030\002 \001(\001\022\026\n\016volume_gain_db\030\003 \001(\001\022\032\n\022eff"
      "ects_profile_id\030\005 \003(\t\022D\n\005voice\030\004 \001(\01325.g"
      "oogle.cloud.dialogflow.v2beta1.VoiceSele"
      "ctionParams\"\327\001\n\021OutputAudioConfig\022L\n\016aud"
      "io_encoding\030\001 \001(\01624.google.cloud.dialogf"
      "low.v2beta1.OutputAudioEncoding\022\031\n\021sampl"
      "e_rate_hertz\030\002 \001(\005\022Y\n\030synthesize_speech_"
      "config\030\003 \001(\01327.google.cloud.dialogflow.v"
      "2beta1.SynthesizeSpeechConfig*\215\001\n\017SsmlVo"
      "iceGender\022!\n\035SSML_VOICE_GENDER_UNSPECIFI"
      "ED\020\000\022\032\n\026SSML_VOICE_GENDER_MALE\020\001\022\034\n\030SSML"
      "_VOICE_GENDER_FEMALE\020\002\022\035\n\031SSML_VOICE_GEN"
      "DER_NEUTRAL\020\003*\244\001\n\023OutputAudioEncoding\022%\n"
      "!OUTPUT_AUDIO_ENCODING_UNSPECIFIED\020\000\022#\n\037"
      "OUTPUT_AUDIO_ENCODING_LINEAR_16\020\001\022\035\n\031OUT"
      "PUT_AUDIO_ENCODING_MP3\020\002\022\"\n\036OUTPUT_AUDIO"
      "_ENCODING_OGG_OPUS\020\003B\256\001\n#com.google.clou"
      "d.dialogflow.v2beta1B\020AudioConfigProtoP\001"
      "ZIgoogle.golang.org/genproto/googleapis/"
      "cloud/dialogflow/v2beta1;dialogflow\370\001\001\242\002"
      "\002DF\252\002\037Google.Cloud.Dialogflow.V2beta1b\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1125);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/dialogflow/v2beta1/audio_config.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
const ::google::protobuf::EnumDescriptor* SsmlVoiceGender_descriptor() {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::file_level_enum_descriptors[0];
}
bool SsmlVoiceGender_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OutputAudioEncoding_descriptor() {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::file_level_enum_descriptors[1];
}
bool OutputAudioEncoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void VoiceSelectionParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoiceSelectionParams::kNameFieldNumber;
const int VoiceSelectionParams::kSsmlGenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoiceSelectionParams::VoiceSelectionParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::scc_info_VoiceSelectionParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
}
VoiceSelectionParams::VoiceSelectionParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::scc_info_VoiceSelectionParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
}
VoiceSelectionParams::VoiceSelectionParams(const VoiceSelectionParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  ssml_gender_ = from.ssml_gender_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
}

void VoiceSelectionParams::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssml_gender_ = 0;
}

VoiceSelectionParams::~VoiceSelectionParams() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
  SharedDtor();
}

void VoiceSelectionParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VoiceSelectionParams::ArenaDtor(void* object) {
  VoiceSelectionParams* _this = reinterpret_cast< VoiceSelectionParams* >(object);
  (void)_this;
}
void VoiceSelectionParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void VoiceSelectionParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VoiceSelectionParams::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VoiceSelectionParams& VoiceSelectionParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::scc_info_VoiceSelectionParams.base);
  return *internal_default_instance();
}


void VoiceSelectionParams::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ssml_gender_ = 0;
  _internal_metadata_.Clear();
}

bool VoiceSelectionParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.VoiceSelectionParams.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.SsmlVoiceGender ssml_gender = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ssml_gender(static_cast< ::google::cloud::dialogflow::v2beta1::SsmlVoiceGender >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
  return false;
#undef DO_
}

void VoiceSelectionParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.VoiceSelectionParams.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.cloud.dialogflow.v2beta1.SsmlVoiceGender ssml_gender = 2;
  if (this->ssml_gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ssml_gender(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
}

::google::protobuf::uint8* VoiceSelectionParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.VoiceSelectionParams.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.cloud.dialogflow.v2beta1.SsmlVoiceGender ssml_gender = 2;
  if (this->ssml_gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ssml_gender(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
  return target;
}

size_t VoiceSelectionParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.cloud.dialogflow.v2beta1.SsmlVoiceGender ssml_gender = 2;
  if (this->ssml_gender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ssml_gender());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoiceSelectionParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceSelectionParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VoiceSelectionParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
    MergeFrom(*source);
  }
}

void VoiceSelectionParams::MergeFrom(const VoiceSelectionParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.ssml_gender() != 0) {
    set_ssml_gender(from.ssml_gender());
  }
}

void VoiceSelectionParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceSelectionParams::CopyFrom(const VoiceSelectionParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceSelectionParams::IsInitialized() const {
  return true;
}

void VoiceSelectionParams::Swap(VoiceSelectionParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    VoiceSelectionParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void VoiceSelectionParams::UnsafeArenaSwap(VoiceSelectionParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void VoiceSelectionParams::InternalSwap(VoiceSelectionParams* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ssml_gender_, other->ssml_gender_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VoiceSelectionParams::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SynthesizeSpeechConfig::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_SynthesizeSpeechConfig_default_instance_._instance.get_mutable()->voice_ = const_cast< ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams*>(
      ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams::internal_default_instance());
}
void SynthesizeSpeechConfig::unsafe_arena_set_allocated_voice(
    ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* voice) {
  if (GetArenaNoVirtual() == NULL) {
    delete voice_;
  }
  voice_ = voice;
  if (voice) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.voice)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SynthesizeSpeechConfig::kSpeakingRateFieldNumber;
const int SynthesizeSpeechConfig::kPitchFieldNumber;
const int SynthesizeSpeechConfig::kVolumeGainDbFieldNumber;
const int SynthesizeSpeechConfig::kEffectsProfileIdFieldNumber;
const int SynthesizeSpeechConfig::kVoiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SynthesizeSpeechConfig::SynthesizeSpeechConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::scc_info_SynthesizeSpeechConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
}
SynthesizeSpeechConfig::SynthesizeSpeechConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  effects_profile_id_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::scc_info_SynthesizeSpeechConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
}
SynthesizeSpeechConfig::SynthesizeSpeechConfig(const SynthesizeSpeechConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      effects_profile_id_(from.effects_profile_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_voice()) {
    voice_ = new ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams(*from.voice_);
  } else {
    voice_ = NULL;
  }
  ::memcpy(&speaking_rate_, &from.speaking_rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&volume_gain_db_) -
    reinterpret_cast<char*>(&speaking_rate_)) + sizeof(volume_gain_db_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
}

void SynthesizeSpeechConfig::SharedCtor() {
  ::memset(&voice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volume_gain_db_) -
      reinterpret_cast<char*>(&voice_)) + sizeof(volume_gain_db_));
}

SynthesizeSpeechConfig::~SynthesizeSpeechConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
  SharedDtor();
}

void SynthesizeSpeechConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete voice_;
}

void SynthesizeSpeechConfig::ArenaDtor(void* object) {
  SynthesizeSpeechConfig* _this = reinterpret_cast< SynthesizeSpeechConfig* >(object);
  (void)_this;
}
void SynthesizeSpeechConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SynthesizeSpeechConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SynthesizeSpeechConfig::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SynthesizeSpeechConfig& SynthesizeSpeechConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::scc_info_SynthesizeSpeechConfig.base);
  return *internal_default_instance();
}


void SynthesizeSpeechConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  effects_profile_id_.Clear();
  if (GetArenaNoVirtual() == NULL && voice_ != NULL) {
    delete voice_;
  }
  voice_ = NULL;
  ::memset(&speaking_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volume_gain_db_) -
      reinterpret_cast<char*>(&speaking_rate_)) + sizeof(volume_gain_db_));
  _internal_metadata_.Clear();
}

bool SynthesizeSpeechConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double speaking_rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &speaking_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pitch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double volume_gain_db = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &volume_gain_db_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.VoiceSelectionParams voice = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_voice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string effects_profile_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_effects_profile_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->effects_profile_id(this->effects_profile_id_size() - 1).data(),
            static_cast<int>(this->effects_profile_id(this->effects_profile_id_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
  return false;
#undef DO_
}

void SynthesizeSpeechConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double speaking_rate = 1;
  if (this->speaking_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->speaking_rate(), output);
  }

  // double pitch = 2;
  if (this->pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->pitch(), output);
  }

  // double volume_gain_db = 3;
  if (this->volume_gain_db() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->volume_gain_db(), output);
  }

  // .google.cloud.dialogflow.v2beta1.VoiceSelectionParams voice = 4;
  if (this->has_voice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_voice(), output);
  }

  // repeated string effects_profile_id = 5;
  for (int i = 0, n = this->effects_profile_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->effects_profile_id(i).data(), static_cast<int>(this->effects_profile_id(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->effects_profile_id(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
}

::google::protobuf::uint8* SynthesizeSpeechConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double speaking_rate = 1;
  if (this->speaking_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->speaking_rate(), target);
  }

  // double pitch = 2;
  if (this->pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->pitch(), target);
  }

  // double volume_gain_db = 3;
  if (this->volume_gain_db() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->volume_gain_db(), target);
  }

  // .google.cloud.dialogflow.v2beta1.VoiceSelectionParams voice = 4;
  if (this->has_voice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_voice(), deterministic, target);
  }

  // repeated string effects_profile_id = 5;
  for (int i = 0, n = this->effects_profile_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->effects_profile_id(i).data(), static_cast<int>(this->effects_profile_id(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->effects_profile_id(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
  return target;
}

size_t SynthesizeSpeechConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string effects_profile_id = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->effects_profile_id_size());
  for (int i = 0, n = this->effects_profile_id_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->effects_profile_id(i));
  }

  // .google.cloud.dialogflow.v2beta1.VoiceSelectionParams voice = 4;
  if (this->has_voice()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *voice_);
  }

  // double speaking_rate = 1;
  if (this->speaking_rate() != 0) {
    total_size += 1 + 8;
  }

  // double pitch = 2;
  if (this->pitch() != 0) {
    total_size += 1 + 8;
  }

  // double volume_gain_db = 3;
  if (this->volume_gain_db() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SynthesizeSpeechConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const SynthesizeSpeechConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SynthesizeSpeechConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
    MergeFrom(*source);
  }
}

void SynthesizeSpeechConfig::MergeFrom(const SynthesizeSpeechConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  effects_profile_id_.MergeFrom(from.effects_profile_id_);
  if (from.has_voice()) {
    mutable_voice()->::google::cloud::dialogflow::v2beta1::VoiceSelectionParams::MergeFrom(from.voice());
  }
  if (from.speaking_rate() != 0) {
    set_speaking_rate(from.speaking_rate());
  }
  if (from.pitch() != 0) {
    set_pitch(from.pitch());
  }
  if (from.volume_gain_db() != 0) {
    set_volume_gain_db(from.volume_gain_db());
  }
}

void SynthesizeSpeechConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SynthesizeSpeechConfig::CopyFrom(const SynthesizeSpeechConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SynthesizeSpeechConfig::IsInitialized() const {
  return true;
}

void SynthesizeSpeechConfig::Swap(SynthesizeSpeechConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SynthesizeSpeechConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SynthesizeSpeechConfig::UnsafeArenaSwap(SynthesizeSpeechConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SynthesizeSpeechConfig::InternalSwap(SynthesizeSpeechConfig* other) {
  using std::swap;
  effects_profile_id_.InternalSwap(CastToBase(&other->effects_profile_id_));
  swap(voice_, other->voice_);
  swap(speaking_rate_, other->speaking_rate_);
  swap(pitch_, other->pitch_);
  swap(volume_gain_db_, other->volume_gain_db_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SynthesizeSpeechConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OutputAudioConfig::InitAsDefaultInstance() {
  ::google::cloud::dialogflow::v2beta1::_OutputAudioConfig_default_instance_._instance.get_mutable()->synthesize_speech_config_ = const_cast< ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig*>(
      ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig::internal_default_instance());
}
void OutputAudioConfig::unsafe_arena_set_allocated_synthesize_speech_config(
    ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* synthesize_speech_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete synthesize_speech_config_;
  }
  synthesize_speech_config_ = synthesize_speech_config;
  if (synthesize_speech_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.OutputAudioConfig.synthesize_speech_config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OutputAudioConfig::kAudioEncodingFieldNumber;
const int OutputAudioConfig::kSampleRateHertzFieldNumber;
const int OutputAudioConfig::kSynthesizeSpeechConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OutputAudioConfig::OutputAudioConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::scc_info_OutputAudioConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
}
OutputAudioConfig::OutputAudioConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::scc_info_OutputAudioConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
}
OutputAudioConfig::OutputAudioConfig(const OutputAudioConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_synthesize_speech_config()) {
    synthesize_speech_config_ = new ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig(*from.synthesize_speech_config_);
  } else {
    synthesize_speech_config_ = NULL;
  }
  ::memcpy(&audio_encoding_, &from.audio_encoding_,
    static_cast<size_t>(reinterpret_cast<char*>(&sample_rate_hertz_) -
    reinterpret_cast<char*>(&audio_encoding_)) + sizeof(sample_rate_hertz_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
}

void OutputAudioConfig::SharedCtor() {
  ::memset(&synthesize_speech_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sample_rate_hertz_) -
      reinterpret_cast<char*>(&synthesize_speech_config_)) + sizeof(sample_rate_hertz_));
}

OutputAudioConfig::~OutputAudioConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
  SharedDtor();
}

void OutputAudioConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete synthesize_speech_config_;
}

void OutputAudioConfig::ArenaDtor(void* object) {
  OutputAudioConfig* _this = reinterpret_cast< OutputAudioConfig* >(object);
  (void)_this;
}
void OutputAudioConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OutputAudioConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OutputAudioConfig::descriptor() {
  ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OutputAudioConfig& OutputAudioConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::scc_info_OutputAudioConfig.base);
  return *internal_default_instance();
}


void OutputAudioConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && synthesize_speech_config_ != NULL) {
    delete synthesize_speech_config_;
  }
  synthesize_speech_config_ = NULL;
  ::memset(&audio_encoding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sample_rate_hertz_) -
      reinterpret_cast<char*>(&audio_encoding_)) + sizeof(sample_rate_hertz_));
  _internal_metadata_.Clear();
}

bool OutputAudioConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dialogflow.v2beta1.OutputAudioEncoding audio_encoding = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_audio_encoding(static_cast< ::google::cloud::dialogflow::v2beta1::OutputAudioEncoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sample_rate_hertz = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sample_rate_hertz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig synthesize_speech_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_synthesize_speech_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
  return false;
#undef DO_
}

void OutputAudioConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.OutputAudioEncoding audio_encoding = 1;
  if (this->audio_encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->audio_encoding(), output);
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sample_rate_hertz(), output);
  }

  // .google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig synthesize_speech_config = 3;
  if (this->has_synthesize_speech_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_synthesize_speech_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
}

::google::protobuf::uint8* OutputAudioConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dialogflow.v2beta1.OutputAudioEncoding audio_encoding = 1;
  if (this->audio_encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->audio_encoding(), target);
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sample_rate_hertz(), target);
  }

  // .google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig synthesize_speech_config = 3;
  if (this->has_synthesize_speech_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_synthesize_speech_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
  return target;
}

size_t OutputAudioConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig synthesize_speech_config = 3;
  if (this->has_synthesize_speech_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *synthesize_speech_config_);
  }

  // .google.cloud.dialogflow.v2beta1.OutputAudioEncoding audio_encoding = 1;
  if (this->audio_encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->audio_encoding());
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sample_rate_hertz());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutputAudioConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const OutputAudioConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OutputAudioConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
    MergeFrom(*source);
  }
}

void OutputAudioConfig::MergeFrom(const OutputAudioConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_synthesize_speech_config()) {
    mutable_synthesize_speech_config()->::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig::MergeFrom(from.synthesize_speech_config());
  }
  if (from.audio_encoding() != 0) {
    set_audio_encoding(from.audio_encoding());
  }
  if (from.sample_rate_hertz() != 0) {
    set_sample_rate_hertz(from.sample_rate_hertz());
  }
}

void OutputAudioConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputAudioConfig::CopyFrom(const OutputAudioConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputAudioConfig::IsInitialized() const {
  return true;
}

void OutputAudioConfig::Swap(OutputAudioConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OutputAudioConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void OutputAudioConfig::UnsafeArenaSwap(OutputAudioConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OutputAudioConfig::InternalSwap(OutputAudioConfig* other) {
  using std::swap;
  swap(synthesize_speech_config_, other->synthesize_speech_config_);
  swap(audio_encoding_, other->audio_encoding_);
  swap(sample_rate_hertz_, other->sample_rate_hertz_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OutputAudioConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* Arena::CreateMaybeMessage< ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* Arena::CreateMaybeMessage< ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dialogflow::v2beta1::OutputAudioConfig* Arena::CreateMaybeMessage< ::google::cloud::dialogflow::v2beta1::OutputAudioConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::dialogflow::v2beta1::OutputAudioConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
