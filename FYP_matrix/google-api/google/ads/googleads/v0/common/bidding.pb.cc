// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/common/bidding.proto

#include "google/ads/googleads/v0/common/bidding.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoolValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int32Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace common {
class EnhancedCpcDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnhancedCpc>
      _instance;
} _EnhancedCpc_default_instance_;
class ManualCpcDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ManualCpc>
      _instance;
} _ManualCpc_default_instance_;
class ManualCpmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ManualCpm>
      _instance;
} _ManualCpm_default_instance_;
class MaximizeConversionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaximizeConversions>
      _instance;
} _MaximizeConversions_default_instance_;
class MaximizeConversionValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaximizeConversionValue>
      _instance;
} _MaximizeConversionValue_default_instance_;
class PageOnePromotedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PageOnePromoted>
      _instance;
} _PageOnePromoted_default_instance_;
class TargetCpaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetCpa>
      _instance;
} _TargetCpa_default_instance_;
class TargetOutrankShareDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetOutrankShare>
      _instance;
} _TargetOutrankShare_default_instance_;
class TargetRoasDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetRoas>
      _instance;
} _TargetRoas_default_instance_;
class TargetSpendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetSpend>
      _instance;
} _TargetSpend_default_instance_;
class PercentCpcDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PercentCpc>
      _instance;
} _PercentCpc_default_instance_;
}  // namespace common
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto {
static void InitDefaultsEnhancedCpc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_EnhancedCpc_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::EnhancedCpc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::EnhancedCpc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EnhancedCpc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEnhancedCpc}, {}};

static void InitDefaultsManualCpc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_ManualCpc_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::ManualCpc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::ManualCpc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ManualCpc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsManualCpc}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_BoolValue.base,}};

static void InitDefaultsManualCpm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_ManualCpm_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::ManualCpm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::ManualCpm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ManualCpm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsManualCpm}, {}};

static void InitDefaultsMaximizeConversions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_MaximizeConversions_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::MaximizeConversions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::MaximizeConversions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MaximizeConversions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMaximizeConversions}, {}};

static void InitDefaultsMaximizeConversionValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_MaximizeConversionValue_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::MaximizeConversionValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::MaximizeConversionValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MaximizeConversionValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMaximizeConversionValue}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_DoubleValue.base,}};

static void InitDefaultsPageOnePromoted() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_PageOnePromoted_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::PageOnePromoted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::PageOnePromoted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_PageOnePromoted =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsPageOnePromoted}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_DoubleValue.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_BoolValue.base,}};

static void InitDefaultsTargetCpa() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_TargetCpa_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::TargetCpa();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::TargetCpa::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TargetCpa =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTargetCpa}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsTargetOutrankShare() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_TargetOutrankShare_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::TargetOutrankShare();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::TargetOutrankShare::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_TargetOutrankShare =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsTargetOutrankShare}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int32Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_BoolValue.base,}};

static void InitDefaultsTargetRoas() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_TargetRoas_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::TargetRoas();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::TargetRoas::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TargetRoas =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTargetRoas}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_DoubleValue.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsTargetSpend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_TargetSpend_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::TargetSpend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::TargetSpend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TargetSpend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTargetSpend}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsPercentCpc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_PercentCpc_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::PercentCpc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::PercentCpc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PercentCpc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPercentCpc}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_BoolValue.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EnhancedCpc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ManualCpc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ManualCpm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MaximizeConversions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MaximizeConversionValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PageOnePromoted.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetCpa.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetOutrankShare.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetRoas.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetSpend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PercentCpc.base);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::EnhancedCpc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ManualCpc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ManualCpc, enhanced_cpc_enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ManualCpm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::MaximizeConversions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::MaximizeConversionValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::MaximizeConversionValue, target_roas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::PageOnePromoted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::PageOnePromoted, strategy_goal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::PageOnePromoted, cpc_bid_ceiling_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::PageOnePromoted, bid_modifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::PageOnePromoted, only_raise_cpc_bids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::PageOnePromoted, raise_cpc_bid_when_budget_constrained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::PageOnePromoted, raise_cpc_bid_when_quality_score_is_low_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetCpa, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetCpa, target_cpa_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetCpa, cpc_bid_ceiling_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetCpa, cpc_bid_floor_micros_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetOutrankShare, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetOutrankShare, target_outrank_share_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetOutrankShare, competitor_domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetOutrankShare, cpc_bid_ceiling_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetOutrankShare, only_raise_cpc_bids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetOutrankShare, raise_cpc_bid_when_quality_score_is_low_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetRoas, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetRoas, target_roas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetRoas, cpc_bid_ceiling_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetRoas, cpc_bid_floor_micros_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetSpend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetSpend, target_spend_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::TargetSpend, cpc_bid_ceiling_micros_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::PercentCpc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::PercentCpc, cpc_bid_ceiling_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::PercentCpc, enhanced_cpc_enabled_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::ads::googleads::v0::common::EnhancedCpc)},
  { 5, -1, sizeof(::google::ads::googleads::v0::common::ManualCpc)},
  { 11, -1, sizeof(::google::ads::googleads::v0::common::ManualCpm)},
  { 16, -1, sizeof(::google::ads::googleads::v0::common::MaximizeConversions)},
  { 21, -1, sizeof(::google::ads::googleads::v0::common::MaximizeConversionValue)},
  { 27, -1, sizeof(::google::ads::googleads::v0::common::PageOnePromoted)},
  { 38, -1, sizeof(::google::ads::googleads::v0::common::TargetCpa)},
  { 46, -1, sizeof(::google::ads::googleads::v0::common::TargetOutrankShare)},
  { 56, -1, sizeof(::google::ads::googleads::v0::common::TargetRoas)},
  { 64, -1, sizeof(::google::ads::googleads::v0::common::TargetSpend)},
  { 71, -1, sizeof(::google::ads::googleads::v0::common::PercentCpc)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_EnhancedCpc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_ManualCpc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_ManualCpm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_MaximizeConversions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_MaximizeConversionValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_PageOnePromoted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_TargetCpa_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_TargetOutrankShare_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_TargetRoas_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_TargetSpend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_PercentCpc_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/ads/googleads/v0/common/bidding.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n,google/ads/googleads/v0/common/bidding"
      ".proto\022\036google.ads.googleads.v0.common\032C"
      "google/ads/googleads/v0/enums/page_one_p"
      "romoted_strategy_goal.proto\032\036google/prot"
      "obuf/wrappers.proto\"\r\n\013EnhancedCpc\"E\n\tMa"
      "nualCpc\0228\n\024enhanced_cpc_enabled\030\001 \001(\0132\032."
      "google.protobuf.BoolValue\"\013\n\tManualCpm\"\025"
      "\n\023MaximizeConversions\"L\n\027MaximizeConvers"
      "ionValue\0221\n\013target_roas\030\001 \001(\0132\034.google.p"
      "rotobuf.DoubleValue\"\306\003\n\017PageOnePromoted\022"
      "q\n\rstrategy_goal\030\001 \001(\0162Z.google.ads.goog"
      "leads.v0.enums.PageOnePromotedStrategyGo"
      "alEnum.PageOnePromotedStrategyGoal\022;\n\026cp"
      "c_bid_ceiling_micros\030\002 \001(\0132\033.google.prot"
      "obuf.Int64Value\0222\n\014bid_modifier\030\003 \001(\0132\034."
      "google.protobuf.DoubleValue\0227\n\023only_rais"
      "e_cpc_bids\030\004 \001(\0132\032.google.protobuf.BoolV"
      "alue\022I\n%raise_cpc_bid_when_budget_constr"
      "ained\030\005 \001(\0132\032.google.protobuf.BoolValue\022"
      "K\n\'raise_cpc_bid_when_quality_score_is_l"
      "ow\030\006 \001(\0132\032.google.protobuf.BoolValue\"\273\001\n"
      "\tTargetCpa\0226\n\021target_cpa_micros\030\001 \001(\0132\033."
      "google.protobuf.Int64Value\022;\n\026cpc_bid_ce"
      "iling_micros\030\002 \001(\0132\033.google.protobuf.Int"
      "64Value\0229\n\024cpc_bid_floor_micros\030\003 \001(\0132\033."
      "google.protobuf.Int64Value\"\322\002\n\022TargetOut"
      "rankShare\022@\n\033target_outrank_share_micros"
      "\030\001 \001(\0132\033.google.protobuf.Int32Value\0227\n\021c"
      "ompetitor_domain\030\002 \001(\0132\034.google.protobuf"
      ".StringValue\022;\n\026cpc_bid_ceiling_micros\030\003"
      " \001(\0132\033.google.protobuf.Int64Value\0227\n\023onl"
      "y_raise_cpc_bids\030\004 \001(\0132\032.google.protobuf"
      ".BoolValue\022K\n\'raise_cpc_bid_when_quality"
      "_score_is_low\030\005 \001(\0132\032.google.protobuf.Bo"
      "olValue\"\267\001\n\nTargetRoas\0221\n\013target_roas\030\001 "
      "\001(\0132\034.google.protobuf.DoubleValue\022;\n\026cpc"
      "_bid_ceiling_micros\030\002 \001(\0132\033.google.proto"
      "buf.Int64Value\0229\n\024cpc_bid_floor_micros\030\003"
      " \001(\0132\033.google.protobuf.Int64Value\"\204\001\n\013Ta"
      "rgetSpend\0228\n\023target_spend_micros\030\001 \001(\0132\033"
      ".google.protobuf.Int64Value\022;\n\026cpc_bid_c"
      "eiling_micros\030\002 \001(\0132\033.google.protobuf.In"
      "t64Value\"\203\001\n\nPercentCpc\022;\n\026cpc_bid_ceili"
      "ng_micros\030\001 \001(\0132\033.google.protobuf.Int64V"
      "alue\0228\n\024enhanced_cpc_enabled\030\002 \001(\0132\032.goo"
      "gle.protobuf.BoolValueB\235\001\n\"com.google.ad"
      "s.googleads.v0.commonB\014BiddingProtoP\001\242\002\003"
      "GAA\252\002\036Google.Ads.GoogleAds.V0.Common\312\002\036G"
      "oogle\\Ads\\GoogleAds\\V0\\Common\342\002\036Google\\A"
      "ds\\GoogleAds\\V0\\Commonb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1990);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/ads/googleads/v0/common/bidding.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fenums_2fpage_5fone_5fpromoted_5fstrategy_5fgoal_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace common {

// ===================================================================

void EnhancedCpc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnhancedCpc::EnhancedCpc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_EnhancedCpc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.EnhancedCpc)
}
EnhancedCpc::EnhancedCpc(const EnhancedCpc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.EnhancedCpc)
}

void EnhancedCpc::SharedCtor() {
}

EnhancedCpc::~EnhancedCpc() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.EnhancedCpc)
  SharedDtor();
}

void EnhancedCpc::SharedDtor() {
}

void EnhancedCpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnhancedCpc::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnhancedCpc& EnhancedCpc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_EnhancedCpc.base);
  return *internal_default_instance();
}


void EnhancedCpc::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.EnhancedCpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool EnhancedCpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.EnhancedCpc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.EnhancedCpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.EnhancedCpc)
  return false;
#undef DO_
}

void EnhancedCpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.EnhancedCpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.EnhancedCpc)
}

::google::protobuf::uint8* EnhancedCpc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.EnhancedCpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.EnhancedCpc)
  return target;
}

size_t EnhancedCpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.EnhancedCpc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnhancedCpc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.EnhancedCpc)
  GOOGLE_DCHECK_NE(&from, this);
  const EnhancedCpc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnhancedCpc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.EnhancedCpc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.EnhancedCpc)
    MergeFrom(*source);
  }
}

void EnhancedCpc::MergeFrom(const EnhancedCpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.EnhancedCpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EnhancedCpc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.EnhancedCpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnhancedCpc::CopyFrom(const EnhancedCpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.EnhancedCpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnhancedCpc::IsInitialized() const {
  return true;
}

void EnhancedCpc::Swap(EnhancedCpc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnhancedCpc::InternalSwap(EnhancedCpc* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnhancedCpc::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ManualCpc::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_ManualCpc_default_instance_._instance.get_mutable()->enhanced_cpc_enabled_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
}
void ManualCpc::clear_enhanced_cpc_enabled() {
  if (GetArenaNoVirtual() == NULL && enhanced_cpc_enabled_ != NULL) {
    delete enhanced_cpc_enabled_;
  }
  enhanced_cpc_enabled_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ManualCpc::kEnhancedCpcEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManualCpc::ManualCpc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_ManualCpc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.ManualCpc)
}
ManualCpc::ManualCpc(const ManualCpc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_enhanced_cpc_enabled()) {
    enhanced_cpc_enabled_ = new ::google::protobuf::BoolValue(*from.enhanced_cpc_enabled_);
  } else {
    enhanced_cpc_enabled_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.ManualCpc)
}

void ManualCpc::SharedCtor() {
  enhanced_cpc_enabled_ = NULL;
}

ManualCpc::~ManualCpc() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.ManualCpc)
  SharedDtor();
}

void ManualCpc::SharedDtor() {
  if (this != internal_default_instance()) delete enhanced_cpc_enabled_;
}

void ManualCpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ManualCpc::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ManualCpc& ManualCpc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_ManualCpc.base);
  return *internal_default_instance();
}


void ManualCpc::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.ManualCpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && enhanced_cpc_enabled_ != NULL) {
    delete enhanced_cpc_enabled_;
  }
  enhanced_cpc_enabled_ = NULL;
  _internal_metadata_.Clear();
}

bool ManualCpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.ManualCpc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.BoolValue enhanced_cpc_enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enhanced_cpc_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.ManualCpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.ManualCpc)
  return false;
#undef DO_
}

void ManualCpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.ManualCpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue enhanced_cpc_enabled = 1;
  if (this->has_enhanced_cpc_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_enhanced_cpc_enabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.ManualCpc)
}

::google::protobuf::uint8* ManualCpc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.ManualCpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue enhanced_cpc_enabled = 1;
  if (this->has_enhanced_cpc_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_enhanced_cpc_enabled(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.ManualCpc)
  return target;
}

size_t ManualCpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.ManualCpc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.BoolValue enhanced_cpc_enabled = 1;
  if (this->has_enhanced_cpc_enabled()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *enhanced_cpc_enabled_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManualCpc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.ManualCpc)
  GOOGLE_DCHECK_NE(&from, this);
  const ManualCpc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManualCpc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.ManualCpc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.ManualCpc)
    MergeFrom(*source);
  }
}

void ManualCpc::MergeFrom(const ManualCpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.ManualCpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_enhanced_cpc_enabled()) {
    mutable_enhanced_cpc_enabled()->::google::protobuf::BoolValue::MergeFrom(from.enhanced_cpc_enabled());
  }
}

void ManualCpc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.ManualCpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManualCpc::CopyFrom(const ManualCpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.ManualCpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManualCpc::IsInitialized() const {
  return true;
}

void ManualCpc::Swap(ManualCpc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManualCpc::InternalSwap(ManualCpc* other) {
  using std::swap;
  swap(enhanced_cpc_enabled_, other->enhanced_cpc_enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ManualCpc::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ManualCpm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManualCpm::ManualCpm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_ManualCpm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.ManualCpm)
}
ManualCpm::ManualCpm(const ManualCpm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.ManualCpm)
}

void ManualCpm::SharedCtor() {
}

ManualCpm::~ManualCpm() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.ManualCpm)
  SharedDtor();
}

void ManualCpm::SharedDtor() {
}

void ManualCpm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ManualCpm::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ManualCpm& ManualCpm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_ManualCpm.base);
  return *internal_default_instance();
}


void ManualCpm::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.ManualCpm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ManualCpm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.ManualCpm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.ManualCpm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.ManualCpm)
  return false;
#undef DO_
}

void ManualCpm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.ManualCpm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.ManualCpm)
}

::google::protobuf::uint8* ManualCpm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.ManualCpm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.ManualCpm)
  return target;
}

size_t ManualCpm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.ManualCpm)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManualCpm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.ManualCpm)
  GOOGLE_DCHECK_NE(&from, this);
  const ManualCpm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManualCpm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.ManualCpm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.ManualCpm)
    MergeFrom(*source);
  }
}

void ManualCpm::MergeFrom(const ManualCpm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.ManualCpm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ManualCpm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.ManualCpm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManualCpm::CopyFrom(const ManualCpm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.ManualCpm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManualCpm::IsInitialized() const {
  return true;
}

void ManualCpm::Swap(ManualCpm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManualCpm::InternalSwap(ManualCpm* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ManualCpm::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MaximizeConversions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaximizeConversions::MaximizeConversions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_MaximizeConversions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.MaximizeConversions)
}
MaximizeConversions::MaximizeConversions(const MaximizeConversions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.MaximizeConversions)
}

void MaximizeConversions::SharedCtor() {
}

MaximizeConversions::~MaximizeConversions() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.MaximizeConversions)
  SharedDtor();
}

void MaximizeConversions::SharedDtor() {
}

void MaximizeConversions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MaximizeConversions::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MaximizeConversions& MaximizeConversions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_MaximizeConversions.base);
  return *internal_default_instance();
}


void MaximizeConversions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.MaximizeConversions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MaximizeConversions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.MaximizeConversions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.MaximizeConversions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.MaximizeConversions)
  return false;
#undef DO_
}

void MaximizeConversions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.MaximizeConversions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.MaximizeConversions)
}

::google::protobuf::uint8* MaximizeConversions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.MaximizeConversions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.MaximizeConversions)
  return target;
}

size_t MaximizeConversions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.MaximizeConversions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MaximizeConversions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.MaximizeConversions)
  GOOGLE_DCHECK_NE(&from, this);
  const MaximizeConversions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MaximizeConversions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.MaximizeConversions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.MaximizeConversions)
    MergeFrom(*source);
  }
}

void MaximizeConversions::MergeFrom(const MaximizeConversions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.MaximizeConversions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MaximizeConversions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.MaximizeConversions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaximizeConversions::CopyFrom(const MaximizeConversions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.MaximizeConversions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaximizeConversions::IsInitialized() const {
  return true;
}

void MaximizeConversions::Swap(MaximizeConversions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaximizeConversions::InternalSwap(MaximizeConversions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MaximizeConversions::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MaximizeConversionValue::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_MaximizeConversionValue_default_instance_._instance.get_mutable()->target_roas_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
}
void MaximizeConversionValue::clear_target_roas() {
  if (GetArenaNoVirtual() == NULL && target_roas_ != NULL) {
    delete target_roas_;
  }
  target_roas_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaximizeConversionValue::kTargetRoasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaximizeConversionValue::MaximizeConversionValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_MaximizeConversionValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.MaximizeConversionValue)
}
MaximizeConversionValue::MaximizeConversionValue(const MaximizeConversionValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_roas()) {
    target_roas_ = new ::google::protobuf::DoubleValue(*from.target_roas_);
  } else {
    target_roas_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.MaximizeConversionValue)
}

void MaximizeConversionValue::SharedCtor() {
  target_roas_ = NULL;
}

MaximizeConversionValue::~MaximizeConversionValue() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.MaximizeConversionValue)
  SharedDtor();
}

void MaximizeConversionValue::SharedDtor() {
  if (this != internal_default_instance()) delete target_roas_;
}

void MaximizeConversionValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MaximizeConversionValue::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MaximizeConversionValue& MaximizeConversionValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_MaximizeConversionValue.base);
  return *internal_default_instance();
}


void MaximizeConversionValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.MaximizeConversionValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_roas_ != NULL) {
    delete target_roas_;
  }
  target_roas_ = NULL;
  _internal_metadata_.Clear();
}

bool MaximizeConversionValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.MaximizeConversionValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.DoubleValue target_roas = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_roas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.MaximizeConversionValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.MaximizeConversionValue)
  return false;
#undef DO_
}

void MaximizeConversionValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.MaximizeConversionValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue target_roas = 1;
  if (this->has_target_roas()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_target_roas(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.MaximizeConversionValue)
}

::google::protobuf::uint8* MaximizeConversionValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.MaximizeConversionValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue target_roas = 1;
  if (this->has_target_roas()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_target_roas(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.MaximizeConversionValue)
  return target;
}

size_t MaximizeConversionValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.MaximizeConversionValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.DoubleValue target_roas = 1;
  if (this->has_target_roas()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_roas_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MaximizeConversionValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.MaximizeConversionValue)
  GOOGLE_DCHECK_NE(&from, this);
  const MaximizeConversionValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MaximizeConversionValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.MaximizeConversionValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.MaximizeConversionValue)
    MergeFrom(*source);
  }
}

void MaximizeConversionValue::MergeFrom(const MaximizeConversionValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.MaximizeConversionValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_roas()) {
    mutable_target_roas()->::google::protobuf::DoubleValue::MergeFrom(from.target_roas());
  }
}

void MaximizeConversionValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.MaximizeConversionValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaximizeConversionValue::CopyFrom(const MaximizeConversionValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.MaximizeConversionValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaximizeConversionValue::IsInitialized() const {
  return true;
}

void MaximizeConversionValue::Swap(MaximizeConversionValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaximizeConversionValue::InternalSwap(MaximizeConversionValue* other) {
  using std::swap;
  swap(target_roas_, other->target_roas_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MaximizeConversionValue::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PageOnePromoted::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_PageOnePromoted_default_instance_._instance.get_mutable()->cpc_bid_ceiling_micros_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_PageOnePromoted_default_instance_._instance.get_mutable()->bid_modifier_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_PageOnePromoted_default_instance_._instance.get_mutable()->only_raise_cpc_bids_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_PageOnePromoted_default_instance_._instance.get_mutable()->raise_cpc_bid_when_budget_constrained_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_PageOnePromoted_default_instance_._instance.get_mutable()->raise_cpc_bid_when_quality_score_is_low_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
}
void PageOnePromoted::clear_cpc_bid_ceiling_micros() {
  if (GetArenaNoVirtual() == NULL && cpc_bid_ceiling_micros_ != NULL) {
    delete cpc_bid_ceiling_micros_;
  }
  cpc_bid_ceiling_micros_ = NULL;
}
void PageOnePromoted::clear_bid_modifier() {
  if (GetArenaNoVirtual() == NULL && bid_modifier_ != NULL) {
    delete bid_modifier_;
  }
  bid_modifier_ = NULL;
}
void PageOnePromoted::clear_only_raise_cpc_bids() {
  if (GetArenaNoVirtual() == NULL && only_raise_cpc_bids_ != NULL) {
    delete only_raise_cpc_bids_;
  }
  only_raise_cpc_bids_ = NULL;
}
void PageOnePromoted::clear_raise_cpc_bid_when_budget_constrained() {
  if (GetArenaNoVirtual() == NULL && raise_cpc_bid_when_budget_constrained_ != NULL) {
    delete raise_cpc_bid_when_budget_constrained_;
  }
  raise_cpc_bid_when_budget_constrained_ = NULL;
}
void PageOnePromoted::clear_raise_cpc_bid_when_quality_score_is_low() {
  if (GetArenaNoVirtual() == NULL && raise_cpc_bid_when_quality_score_is_low_ != NULL) {
    delete raise_cpc_bid_when_quality_score_is_low_;
  }
  raise_cpc_bid_when_quality_score_is_low_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PageOnePromoted::kStrategyGoalFieldNumber;
const int PageOnePromoted::kCpcBidCeilingMicrosFieldNumber;
const int PageOnePromoted::kBidModifierFieldNumber;
const int PageOnePromoted::kOnlyRaiseCpcBidsFieldNumber;
const int PageOnePromoted::kRaiseCpcBidWhenBudgetConstrainedFieldNumber;
const int PageOnePromoted::kRaiseCpcBidWhenQualityScoreIsLowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PageOnePromoted::PageOnePromoted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_PageOnePromoted.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.PageOnePromoted)
}
PageOnePromoted::PageOnePromoted(const PageOnePromoted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cpc_bid_ceiling_micros()) {
    cpc_bid_ceiling_micros_ = new ::google::protobuf::Int64Value(*from.cpc_bid_ceiling_micros_);
  } else {
    cpc_bid_ceiling_micros_ = NULL;
  }
  if (from.has_bid_modifier()) {
    bid_modifier_ = new ::google::protobuf::DoubleValue(*from.bid_modifier_);
  } else {
    bid_modifier_ = NULL;
  }
  if (from.has_only_raise_cpc_bids()) {
    only_raise_cpc_bids_ = new ::google::protobuf::BoolValue(*from.only_raise_cpc_bids_);
  } else {
    only_raise_cpc_bids_ = NULL;
  }
  if (from.has_raise_cpc_bid_when_budget_constrained()) {
    raise_cpc_bid_when_budget_constrained_ = new ::google::protobuf::BoolValue(*from.raise_cpc_bid_when_budget_constrained_);
  } else {
    raise_cpc_bid_when_budget_constrained_ = NULL;
  }
  if (from.has_raise_cpc_bid_when_quality_score_is_low()) {
    raise_cpc_bid_when_quality_score_is_low_ = new ::google::protobuf::BoolValue(*from.raise_cpc_bid_when_quality_score_is_low_);
  } else {
    raise_cpc_bid_when_quality_score_is_low_ = NULL;
  }
  strategy_goal_ = from.strategy_goal_;
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.PageOnePromoted)
}

void PageOnePromoted::SharedCtor() {
  ::memset(&cpc_bid_ceiling_micros_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&strategy_goal_) -
      reinterpret_cast<char*>(&cpc_bid_ceiling_micros_)) + sizeof(strategy_goal_));
}

PageOnePromoted::~PageOnePromoted() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.PageOnePromoted)
  SharedDtor();
}

void PageOnePromoted::SharedDtor() {
  if (this != internal_default_instance()) delete cpc_bid_ceiling_micros_;
  if (this != internal_default_instance()) delete bid_modifier_;
  if (this != internal_default_instance()) delete only_raise_cpc_bids_;
  if (this != internal_default_instance()) delete raise_cpc_bid_when_budget_constrained_;
  if (this != internal_default_instance()) delete raise_cpc_bid_when_quality_score_is_low_;
}

void PageOnePromoted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PageOnePromoted::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PageOnePromoted& PageOnePromoted::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_PageOnePromoted.base);
  return *internal_default_instance();
}


void PageOnePromoted::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.PageOnePromoted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cpc_bid_ceiling_micros_ != NULL) {
    delete cpc_bid_ceiling_micros_;
  }
  cpc_bid_ceiling_micros_ = NULL;
  if (GetArenaNoVirtual() == NULL && bid_modifier_ != NULL) {
    delete bid_modifier_;
  }
  bid_modifier_ = NULL;
  if (GetArenaNoVirtual() == NULL && only_raise_cpc_bids_ != NULL) {
    delete only_raise_cpc_bids_;
  }
  only_raise_cpc_bids_ = NULL;
  if (GetArenaNoVirtual() == NULL && raise_cpc_bid_when_budget_constrained_ != NULL) {
    delete raise_cpc_bid_when_budget_constrained_;
  }
  raise_cpc_bid_when_budget_constrained_ = NULL;
  if (GetArenaNoVirtual() == NULL && raise_cpc_bid_when_quality_score_is_low_ != NULL) {
    delete raise_cpc_bid_when_quality_score_is_low_;
  }
  raise_cpc_bid_when_quality_score_is_low_ = NULL;
  strategy_goal_ = 0;
  _internal_metadata_.Clear();
}

bool PageOnePromoted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.PageOnePromoted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.ads.googleads.v0.enums.PageOnePromotedStrategyGoalEnum.PageOnePromotedStrategyGoal strategy_goal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_strategy_goal(static_cast< ::google::ads::googleads::v0::enums::PageOnePromotedStrategyGoalEnum_PageOnePromotedStrategyGoal >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpc_bid_ceiling_micros()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue bid_modifier = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bid_modifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue only_raise_cpc_bids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_only_raise_cpc_bids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue raise_cpc_bid_when_budget_constrained = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_raise_cpc_bid_when_budget_constrained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue raise_cpc_bid_when_quality_score_is_low = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_raise_cpc_bid_when_quality_score_is_low()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.PageOnePromoted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.PageOnePromoted)
  return false;
#undef DO_
}

void PageOnePromoted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.PageOnePromoted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.ads.googleads.v0.enums.PageOnePromotedStrategyGoalEnum.PageOnePromotedStrategyGoal strategy_goal = 1;
  if (this->strategy_goal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->strategy_goal(), output);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  if (this->has_cpc_bid_ceiling_micros()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cpc_bid_ceiling_micros(), output);
  }

  // .google.protobuf.DoubleValue bid_modifier = 3;
  if (this->has_bid_modifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_bid_modifier(), output);
  }

  // .google.protobuf.BoolValue only_raise_cpc_bids = 4;
  if (this->has_only_raise_cpc_bids()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_only_raise_cpc_bids(), output);
  }

  // .google.protobuf.BoolValue raise_cpc_bid_when_budget_constrained = 5;
  if (this->has_raise_cpc_bid_when_budget_constrained()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_raise_cpc_bid_when_budget_constrained(), output);
  }

  // .google.protobuf.BoolValue raise_cpc_bid_when_quality_score_is_low = 6;
  if (this->has_raise_cpc_bid_when_quality_score_is_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_raise_cpc_bid_when_quality_score_is_low(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.PageOnePromoted)
}

::google::protobuf::uint8* PageOnePromoted::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.PageOnePromoted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.ads.googleads.v0.enums.PageOnePromotedStrategyGoalEnum.PageOnePromotedStrategyGoal strategy_goal = 1;
  if (this->strategy_goal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->strategy_goal(), target);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  if (this->has_cpc_bid_ceiling_micros()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cpc_bid_ceiling_micros(), deterministic, target);
  }

  // .google.protobuf.DoubleValue bid_modifier = 3;
  if (this->has_bid_modifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_bid_modifier(), deterministic, target);
  }

  // .google.protobuf.BoolValue only_raise_cpc_bids = 4;
  if (this->has_only_raise_cpc_bids()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_only_raise_cpc_bids(), deterministic, target);
  }

  // .google.protobuf.BoolValue raise_cpc_bid_when_budget_constrained = 5;
  if (this->has_raise_cpc_bid_when_budget_constrained()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_raise_cpc_bid_when_budget_constrained(), deterministic, target);
  }

  // .google.protobuf.BoolValue raise_cpc_bid_when_quality_score_is_low = 6;
  if (this->has_raise_cpc_bid_when_quality_score_is_low()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_raise_cpc_bid_when_quality_score_is_low(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.PageOnePromoted)
  return target;
}

size_t PageOnePromoted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.PageOnePromoted)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  if (this->has_cpc_bid_ceiling_micros()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cpc_bid_ceiling_micros_);
  }

  // .google.protobuf.DoubleValue bid_modifier = 3;
  if (this->has_bid_modifier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bid_modifier_);
  }

  // .google.protobuf.BoolValue only_raise_cpc_bids = 4;
  if (this->has_only_raise_cpc_bids()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *only_raise_cpc_bids_);
  }

  // .google.protobuf.BoolValue raise_cpc_bid_when_budget_constrained = 5;
  if (this->has_raise_cpc_bid_when_budget_constrained()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *raise_cpc_bid_when_budget_constrained_);
  }

  // .google.protobuf.BoolValue raise_cpc_bid_when_quality_score_is_low = 6;
  if (this->has_raise_cpc_bid_when_quality_score_is_low()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *raise_cpc_bid_when_quality_score_is_low_);
  }

  // .google.ads.googleads.v0.enums.PageOnePromotedStrategyGoalEnum.PageOnePromotedStrategyGoal strategy_goal = 1;
  if (this->strategy_goal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->strategy_goal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PageOnePromoted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.PageOnePromoted)
  GOOGLE_DCHECK_NE(&from, this);
  const PageOnePromoted* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PageOnePromoted>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.PageOnePromoted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.PageOnePromoted)
    MergeFrom(*source);
  }
}

void PageOnePromoted::MergeFrom(const PageOnePromoted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.PageOnePromoted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cpc_bid_ceiling_micros()) {
    mutable_cpc_bid_ceiling_micros()->::google::protobuf::Int64Value::MergeFrom(from.cpc_bid_ceiling_micros());
  }
  if (from.has_bid_modifier()) {
    mutable_bid_modifier()->::google::protobuf::DoubleValue::MergeFrom(from.bid_modifier());
  }
  if (from.has_only_raise_cpc_bids()) {
    mutable_only_raise_cpc_bids()->::google::protobuf::BoolValue::MergeFrom(from.only_raise_cpc_bids());
  }
  if (from.has_raise_cpc_bid_when_budget_constrained()) {
    mutable_raise_cpc_bid_when_budget_constrained()->::google::protobuf::BoolValue::MergeFrom(from.raise_cpc_bid_when_budget_constrained());
  }
  if (from.has_raise_cpc_bid_when_quality_score_is_low()) {
    mutable_raise_cpc_bid_when_quality_score_is_low()->::google::protobuf::BoolValue::MergeFrom(from.raise_cpc_bid_when_quality_score_is_low());
  }
  if (from.strategy_goal() != 0) {
    set_strategy_goal(from.strategy_goal());
  }
}

void PageOnePromoted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.PageOnePromoted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PageOnePromoted::CopyFrom(const PageOnePromoted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.PageOnePromoted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PageOnePromoted::IsInitialized() const {
  return true;
}

void PageOnePromoted::Swap(PageOnePromoted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PageOnePromoted::InternalSwap(PageOnePromoted* other) {
  using std::swap;
  swap(cpc_bid_ceiling_micros_, other->cpc_bid_ceiling_micros_);
  swap(bid_modifier_, other->bid_modifier_);
  swap(only_raise_cpc_bids_, other->only_raise_cpc_bids_);
  swap(raise_cpc_bid_when_budget_constrained_, other->raise_cpc_bid_when_budget_constrained_);
  swap(raise_cpc_bid_when_quality_score_is_low_, other->raise_cpc_bid_when_quality_score_is_low_);
  swap(strategy_goal_, other->strategy_goal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PageOnePromoted::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetCpa::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_TargetCpa_default_instance_._instance.get_mutable()->target_cpa_micros_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_TargetCpa_default_instance_._instance.get_mutable()->cpc_bid_ceiling_micros_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_TargetCpa_default_instance_._instance.get_mutable()->cpc_bid_floor_micros_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void TargetCpa::clear_target_cpa_micros() {
  if (GetArenaNoVirtual() == NULL && target_cpa_micros_ != NULL) {
    delete target_cpa_micros_;
  }
  target_cpa_micros_ = NULL;
}
void TargetCpa::clear_cpc_bid_ceiling_micros() {
  if (GetArenaNoVirtual() == NULL && cpc_bid_ceiling_micros_ != NULL) {
    delete cpc_bid_ceiling_micros_;
  }
  cpc_bid_ceiling_micros_ = NULL;
}
void TargetCpa::clear_cpc_bid_floor_micros() {
  if (GetArenaNoVirtual() == NULL && cpc_bid_floor_micros_ != NULL) {
    delete cpc_bid_floor_micros_;
  }
  cpc_bid_floor_micros_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetCpa::kTargetCpaMicrosFieldNumber;
const int TargetCpa::kCpcBidCeilingMicrosFieldNumber;
const int TargetCpa::kCpcBidFloorMicrosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetCpa::TargetCpa()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_TargetCpa.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.TargetCpa)
}
TargetCpa::TargetCpa(const TargetCpa& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_cpa_micros()) {
    target_cpa_micros_ = new ::google::protobuf::Int64Value(*from.target_cpa_micros_);
  } else {
    target_cpa_micros_ = NULL;
  }
  if (from.has_cpc_bid_ceiling_micros()) {
    cpc_bid_ceiling_micros_ = new ::google::protobuf::Int64Value(*from.cpc_bid_ceiling_micros_);
  } else {
    cpc_bid_ceiling_micros_ = NULL;
  }
  if (from.has_cpc_bid_floor_micros()) {
    cpc_bid_floor_micros_ = new ::google::protobuf::Int64Value(*from.cpc_bid_floor_micros_);
  } else {
    cpc_bid_floor_micros_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.TargetCpa)
}

void TargetCpa::SharedCtor() {
  ::memset(&target_cpa_micros_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cpc_bid_floor_micros_) -
      reinterpret_cast<char*>(&target_cpa_micros_)) + sizeof(cpc_bid_floor_micros_));
}

TargetCpa::~TargetCpa() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.TargetCpa)
  SharedDtor();
}

void TargetCpa::SharedDtor() {
  if (this != internal_default_instance()) delete target_cpa_micros_;
  if (this != internal_default_instance()) delete cpc_bid_ceiling_micros_;
  if (this != internal_default_instance()) delete cpc_bid_floor_micros_;
}

void TargetCpa::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetCpa::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetCpa& TargetCpa::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_TargetCpa.base);
  return *internal_default_instance();
}


void TargetCpa::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.TargetCpa)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_cpa_micros_ != NULL) {
    delete target_cpa_micros_;
  }
  target_cpa_micros_ = NULL;
  if (GetArenaNoVirtual() == NULL && cpc_bid_ceiling_micros_ != NULL) {
    delete cpc_bid_ceiling_micros_;
  }
  cpc_bid_ceiling_micros_ = NULL;
  if (GetArenaNoVirtual() == NULL && cpc_bid_floor_micros_ != NULL) {
    delete cpc_bid_floor_micros_;
  }
  cpc_bid_floor_micros_ = NULL;
  _internal_metadata_.Clear();
}

bool TargetCpa::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.TargetCpa)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value target_cpa_micros = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_cpa_micros()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpc_bid_ceiling_micros()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value cpc_bid_floor_micros = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpc_bid_floor_micros()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.TargetCpa)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.TargetCpa)
  return false;
#undef DO_
}

void TargetCpa::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.TargetCpa)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value target_cpa_micros = 1;
  if (this->has_target_cpa_micros()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_target_cpa_micros(), output);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  if (this->has_cpc_bid_ceiling_micros()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cpc_bid_ceiling_micros(), output);
  }

  // .google.protobuf.Int64Value cpc_bid_floor_micros = 3;
  if (this->has_cpc_bid_floor_micros()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_cpc_bid_floor_micros(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.TargetCpa)
}

::google::protobuf::uint8* TargetCpa::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.TargetCpa)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value target_cpa_micros = 1;
  if (this->has_target_cpa_micros()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_target_cpa_micros(), deterministic, target);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  if (this->has_cpc_bid_ceiling_micros()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cpc_bid_ceiling_micros(), deterministic, target);
  }

  // .google.protobuf.Int64Value cpc_bid_floor_micros = 3;
  if (this->has_cpc_bid_floor_micros()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_cpc_bid_floor_micros(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.TargetCpa)
  return target;
}

size_t TargetCpa::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.TargetCpa)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value target_cpa_micros = 1;
  if (this->has_target_cpa_micros()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_cpa_micros_);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  if (this->has_cpc_bid_ceiling_micros()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cpc_bid_ceiling_micros_);
  }

  // .google.protobuf.Int64Value cpc_bid_floor_micros = 3;
  if (this->has_cpc_bid_floor_micros()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cpc_bid_floor_micros_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetCpa::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.TargetCpa)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetCpa* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetCpa>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.TargetCpa)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.TargetCpa)
    MergeFrom(*source);
  }
}

void TargetCpa::MergeFrom(const TargetCpa& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.TargetCpa)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_cpa_micros()) {
    mutable_target_cpa_micros()->::google::protobuf::Int64Value::MergeFrom(from.target_cpa_micros());
  }
  if (from.has_cpc_bid_ceiling_micros()) {
    mutable_cpc_bid_ceiling_micros()->::google::protobuf::Int64Value::MergeFrom(from.cpc_bid_ceiling_micros());
  }
  if (from.has_cpc_bid_floor_micros()) {
    mutable_cpc_bid_floor_micros()->::google::protobuf::Int64Value::MergeFrom(from.cpc_bid_floor_micros());
  }
}

void TargetCpa::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.TargetCpa)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetCpa::CopyFrom(const TargetCpa& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.TargetCpa)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetCpa::IsInitialized() const {
  return true;
}

void TargetCpa::Swap(TargetCpa* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetCpa::InternalSwap(TargetCpa* other) {
  using std::swap;
  swap(target_cpa_micros_, other->target_cpa_micros_);
  swap(cpc_bid_ceiling_micros_, other->cpc_bid_ceiling_micros_);
  swap(cpc_bid_floor_micros_, other->cpc_bid_floor_micros_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetCpa::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetOutrankShare::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_TargetOutrankShare_default_instance_._instance.get_mutable()->target_outrank_share_micros_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_TargetOutrankShare_default_instance_._instance.get_mutable()->competitor_domain_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_TargetOutrankShare_default_instance_._instance.get_mutable()->cpc_bid_ceiling_micros_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_TargetOutrankShare_default_instance_._instance.get_mutable()->only_raise_cpc_bids_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_TargetOutrankShare_default_instance_._instance.get_mutable()->raise_cpc_bid_when_quality_score_is_low_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
}
void TargetOutrankShare::clear_target_outrank_share_micros() {
  if (GetArenaNoVirtual() == NULL && target_outrank_share_micros_ != NULL) {
    delete target_outrank_share_micros_;
  }
  target_outrank_share_micros_ = NULL;
}
void TargetOutrankShare::clear_competitor_domain() {
  if (GetArenaNoVirtual() == NULL && competitor_domain_ != NULL) {
    delete competitor_domain_;
  }
  competitor_domain_ = NULL;
}
void TargetOutrankShare::clear_cpc_bid_ceiling_micros() {
  if (GetArenaNoVirtual() == NULL && cpc_bid_ceiling_micros_ != NULL) {
    delete cpc_bid_ceiling_micros_;
  }
  cpc_bid_ceiling_micros_ = NULL;
}
void TargetOutrankShare::clear_only_raise_cpc_bids() {
  if (GetArenaNoVirtual() == NULL && only_raise_cpc_bids_ != NULL) {
    delete only_raise_cpc_bids_;
  }
  only_raise_cpc_bids_ = NULL;
}
void TargetOutrankShare::clear_raise_cpc_bid_when_quality_score_is_low() {
  if (GetArenaNoVirtual() == NULL && raise_cpc_bid_when_quality_score_is_low_ != NULL) {
    delete raise_cpc_bid_when_quality_score_is_low_;
  }
  raise_cpc_bid_when_quality_score_is_low_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetOutrankShare::kTargetOutrankShareMicrosFieldNumber;
const int TargetOutrankShare::kCompetitorDomainFieldNumber;
const int TargetOutrankShare::kCpcBidCeilingMicrosFieldNumber;
const int TargetOutrankShare::kOnlyRaiseCpcBidsFieldNumber;
const int TargetOutrankShare::kRaiseCpcBidWhenQualityScoreIsLowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetOutrankShare::TargetOutrankShare()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_TargetOutrankShare.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.TargetOutrankShare)
}
TargetOutrankShare::TargetOutrankShare(const TargetOutrankShare& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_outrank_share_micros()) {
    target_outrank_share_micros_ = new ::google::protobuf::Int32Value(*from.target_outrank_share_micros_);
  } else {
    target_outrank_share_micros_ = NULL;
  }
  if (from.has_competitor_domain()) {
    competitor_domain_ = new ::google::protobuf::StringValue(*from.competitor_domain_);
  } else {
    competitor_domain_ = NULL;
  }
  if (from.has_cpc_bid_ceiling_micros()) {
    cpc_bid_ceiling_micros_ = new ::google::protobuf::Int64Value(*from.cpc_bid_ceiling_micros_);
  } else {
    cpc_bid_ceiling_micros_ = NULL;
  }
  if (from.has_only_raise_cpc_bids()) {
    only_raise_cpc_bids_ = new ::google::protobuf::BoolValue(*from.only_raise_cpc_bids_);
  } else {
    only_raise_cpc_bids_ = NULL;
  }
  if (from.has_raise_cpc_bid_when_quality_score_is_low()) {
    raise_cpc_bid_when_quality_score_is_low_ = new ::google::protobuf::BoolValue(*from.raise_cpc_bid_when_quality_score_is_low_);
  } else {
    raise_cpc_bid_when_quality_score_is_low_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.TargetOutrankShare)
}

void TargetOutrankShare::SharedCtor() {
  ::memset(&target_outrank_share_micros_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&raise_cpc_bid_when_quality_score_is_low_) -
      reinterpret_cast<char*>(&target_outrank_share_micros_)) + sizeof(raise_cpc_bid_when_quality_score_is_low_));
}

TargetOutrankShare::~TargetOutrankShare() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.TargetOutrankShare)
  SharedDtor();
}

void TargetOutrankShare::SharedDtor() {
  if (this != internal_default_instance()) delete target_outrank_share_micros_;
  if (this != internal_default_instance()) delete competitor_domain_;
  if (this != internal_default_instance()) delete cpc_bid_ceiling_micros_;
  if (this != internal_default_instance()) delete only_raise_cpc_bids_;
  if (this != internal_default_instance()) delete raise_cpc_bid_when_quality_score_is_low_;
}

void TargetOutrankShare::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetOutrankShare::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetOutrankShare& TargetOutrankShare::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_TargetOutrankShare.base);
  return *internal_default_instance();
}


void TargetOutrankShare::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.TargetOutrankShare)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_outrank_share_micros_ != NULL) {
    delete target_outrank_share_micros_;
  }
  target_outrank_share_micros_ = NULL;
  if (GetArenaNoVirtual() == NULL && competitor_domain_ != NULL) {
    delete competitor_domain_;
  }
  competitor_domain_ = NULL;
  if (GetArenaNoVirtual() == NULL && cpc_bid_ceiling_micros_ != NULL) {
    delete cpc_bid_ceiling_micros_;
  }
  cpc_bid_ceiling_micros_ = NULL;
  if (GetArenaNoVirtual() == NULL && only_raise_cpc_bids_ != NULL) {
    delete only_raise_cpc_bids_;
  }
  only_raise_cpc_bids_ = NULL;
  if (GetArenaNoVirtual() == NULL && raise_cpc_bid_when_quality_score_is_low_ != NULL) {
    delete raise_cpc_bid_when_quality_score_is_low_;
  }
  raise_cpc_bid_when_quality_score_is_low_ = NULL;
  _internal_metadata_.Clear();
}

bool TargetOutrankShare::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.TargetOutrankShare)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int32Value target_outrank_share_micros = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_outrank_share_micros()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue competitor_domain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_competitor_domain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpc_bid_ceiling_micros()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue only_raise_cpc_bids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_only_raise_cpc_bids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue raise_cpc_bid_when_quality_score_is_low = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_raise_cpc_bid_when_quality_score_is_low()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.TargetOutrankShare)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.TargetOutrankShare)
  return false;
#undef DO_
}

void TargetOutrankShare::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.TargetOutrankShare)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int32Value target_outrank_share_micros = 1;
  if (this->has_target_outrank_share_micros()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_target_outrank_share_micros(), output);
  }

  // .google.protobuf.StringValue competitor_domain = 2;
  if (this->has_competitor_domain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_competitor_domain(), output);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 3;
  if (this->has_cpc_bid_ceiling_micros()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_cpc_bid_ceiling_micros(), output);
  }

  // .google.protobuf.BoolValue only_raise_cpc_bids = 4;
  if (this->has_only_raise_cpc_bids()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_only_raise_cpc_bids(), output);
  }

  // .google.protobuf.BoolValue raise_cpc_bid_when_quality_score_is_low = 5;
  if (this->has_raise_cpc_bid_when_quality_score_is_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_raise_cpc_bid_when_quality_score_is_low(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.TargetOutrankShare)
}

::google::protobuf::uint8* TargetOutrankShare::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.TargetOutrankShare)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int32Value target_outrank_share_micros = 1;
  if (this->has_target_outrank_share_micros()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_target_outrank_share_micros(), deterministic, target);
  }

  // .google.protobuf.StringValue competitor_domain = 2;
  if (this->has_competitor_domain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_competitor_domain(), deterministic, target);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 3;
  if (this->has_cpc_bid_ceiling_micros()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_cpc_bid_ceiling_micros(), deterministic, target);
  }

  // .google.protobuf.BoolValue only_raise_cpc_bids = 4;
  if (this->has_only_raise_cpc_bids()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_only_raise_cpc_bids(), deterministic, target);
  }

  // .google.protobuf.BoolValue raise_cpc_bid_when_quality_score_is_low = 5;
  if (this->has_raise_cpc_bid_when_quality_score_is_low()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_raise_cpc_bid_when_quality_score_is_low(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.TargetOutrankShare)
  return target;
}

size_t TargetOutrankShare::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.TargetOutrankShare)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int32Value target_outrank_share_micros = 1;
  if (this->has_target_outrank_share_micros()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_outrank_share_micros_);
  }

  // .google.protobuf.StringValue competitor_domain = 2;
  if (this->has_competitor_domain()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *competitor_domain_);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 3;
  if (this->has_cpc_bid_ceiling_micros()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cpc_bid_ceiling_micros_);
  }

  // .google.protobuf.BoolValue only_raise_cpc_bids = 4;
  if (this->has_only_raise_cpc_bids()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *only_raise_cpc_bids_);
  }

  // .google.protobuf.BoolValue raise_cpc_bid_when_quality_score_is_low = 5;
  if (this->has_raise_cpc_bid_when_quality_score_is_low()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *raise_cpc_bid_when_quality_score_is_low_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetOutrankShare::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.TargetOutrankShare)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetOutrankShare* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetOutrankShare>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.TargetOutrankShare)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.TargetOutrankShare)
    MergeFrom(*source);
  }
}

void TargetOutrankShare::MergeFrom(const TargetOutrankShare& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.TargetOutrankShare)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_outrank_share_micros()) {
    mutable_target_outrank_share_micros()->::google::protobuf::Int32Value::MergeFrom(from.target_outrank_share_micros());
  }
  if (from.has_competitor_domain()) {
    mutable_competitor_domain()->::google::protobuf::StringValue::MergeFrom(from.competitor_domain());
  }
  if (from.has_cpc_bid_ceiling_micros()) {
    mutable_cpc_bid_ceiling_micros()->::google::protobuf::Int64Value::MergeFrom(from.cpc_bid_ceiling_micros());
  }
  if (from.has_only_raise_cpc_bids()) {
    mutable_only_raise_cpc_bids()->::google::protobuf::BoolValue::MergeFrom(from.only_raise_cpc_bids());
  }
  if (from.has_raise_cpc_bid_when_quality_score_is_low()) {
    mutable_raise_cpc_bid_when_quality_score_is_low()->::google::protobuf::BoolValue::MergeFrom(from.raise_cpc_bid_when_quality_score_is_low());
  }
}

void TargetOutrankShare::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.TargetOutrankShare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetOutrankShare::CopyFrom(const TargetOutrankShare& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.TargetOutrankShare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetOutrankShare::IsInitialized() const {
  return true;
}

void TargetOutrankShare::Swap(TargetOutrankShare* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetOutrankShare::InternalSwap(TargetOutrankShare* other) {
  using std::swap;
  swap(target_outrank_share_micros_, other->target_outrank_share_micros_);
  swap(competitor_domain_, other->competitor_domain_);
  swap(cpc_bid_ceiling_micros_, other->cpc_bid_ceiling_micros_);
  swap(only_raise_cpc_bids_, other->only_raise_cpc_bids_);
  swap(raise_cpc_bid_when_quality_score_is_low_, other->raise_cpc_bid_when_quality_score_is_low_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetOutrankShare::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetRoas::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_TargetRoas_default_instance_._instance.get_mutable()->target_roas_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_TargetRoas_default_instance_._instance.get_mutable()->cpc_bid_ceiling_micros_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_TargetRoas_default_instance_._instance.get_mutable()->cpc_bid_floor_micros_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void TargetRoas::clear_target_roas() {
  if (GetArenaNoVirtual() == NULL && target_roas_ != NULL) {
    delete target_roas_;
  }
  target_roas_ = NULL;
}
void TargetRoas::clear_cpc_bid_ceiling_micros() {
  if (GetArenaNoVirtual() == NULL && cpc_bid_ceiling_micros_ != NULL) {
    delete cpc_bid_ceiling_micros_;
  }
  cpc_bid_ceiling_micros_ = NULL;
}
void TargetRoas::clear_cpc_bid_floor_micros() {
  if (GetArenaNoVirtual() == NULL && cpc_bid_floor_micros_ != NULL) {
    delete cpc_bid_floor_micros_;
  }
  cpc_bid_floor_micros_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetRoas::kTargetRoasFieldNumber;
const int TargetRoas::kCpcBidCeilingMicrosFieldNumber;
const int TargetRoas::kCpcBidFloorMicrosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetRoas::TargetRoas()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_TargetRoas.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.TargetRoas)
}
TargetRoas::TargetRoas(const TargetRoas& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_roas()) {
    target_roas_ = new ::google::protobuf::DoubleValue(*from.target_roas_);
  } else {
    target_roas_ = NULL;
  }
  if (from.has_cpc_bid_ceiling_micros()) {
    cpc_bid_ceiling_micros_ = new ::google::protobuf::Int64Value(*from.cpc_bid_ceiling_micros_);
  } else {
    cpc_bid_ceiling_micros_ = NULL;
  }
  if (from.has_cpc_bid_floor_micros()) {
    cpc_bid_floor_micros_ = new ::google::protobuf::Int64Value(*from.cpc_bid_floor_micros_);
  } else {
    cpc_bid_floor_micros_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.TargetRoas)
}

void TargetRoas::SharedCtor() {
  ::memset(&target_roas_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cpc_bid_floor_micros_) -
      reinterpret_cast<char*>(&target_roas_)) + sizeof(cpc_bid_floor_micros_));
}

TargetRoas::~TargetRoas() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.TargetRoas)
  SharedDtor();
}

void TargetRoas::SharedDtor() {
  if (this != internal_default_instance()) delete target_roas_;
  if (this != internal_default_instance()) delete cpc_bid_ceiling_micros_;
  if (this != internal_default_instance()) delete cpc_bid_floor_micros_;
}

void TargetRoas::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetRoas::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetRoas& TargetRoas::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_TargetRoas.base);
  return *internal_default_instance();
}


void TargetRoas::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.TargetRoas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_roas_ != NULL) {
    delete target_roas_;
  }
  target_roas_ = NULL;
  if (GetArenaNoVirtual() == NULL && cpc_bid_ceiling_micros_ != NULL) {
    delete cpc_bid_ceiling_micros_;
  }
  cpc_bid_ceiling_micros_ = NULL;
  if (GetArenaNoVirtual() == NULL && cpc_bid_floor_micros_ != NULL) {
    delete cpc_bid_floor_micros_;
  }
  cpc_bid_floor_micros_ = NULL;
  _internal_metadata_.Clear();
}

bool TargetRoas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.TargetRoas)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.DoubleValue target_roas = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_roas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpc_bid_ceiling_micros()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value cpc_bid_floor_micros = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpc_bid_floor_micros()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.TargetRoas)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.TargetRoas)
  return false;
#undef DO_
}

void TargetRoas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.TargetRoas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue target_roas = 1;
  if (this->has_target_roas()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_target_roas(), output);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  if (this->has_cpc_bid_ceiling_micros()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cpc_bid_ceiling_micros(), output);
  }

  // .google.protobuf.Int64Value cpc_bid_floor_micros = 3;
  if (this->has_cpc_bid_floor_micros()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_cpc_bid_floor_micros(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.TargetRoas)
}

::google::protobuf::uint8* TargetRoas::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.TargetRoas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue target_roas = 1;
  if (this->has_target_roas()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_target_roas(), deterministic, target);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  if (this->has_cpc_bid_ceiling_micros()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cpc_bid_ceiling_micros(), deterministic, target);
  }

  // .google.protobuf.Int64Value cpc_bid_floor_micros = 3;
  if (this->has_cpc_bid_floor_micros()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_cpc_bid_floor_micros(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.TargetRoas)
  return target;
}

size_t TargetRoas::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.TargetRoas)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.DoubleValue target_roas = 1;
  if (this->has_target_roas()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_roas_);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  if (this->has_cpc_bid_ceiling_micros()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cpc_bid_ceiling_micros_);
  }

  // .google.protobuf.Int64Value cpc_bid_floor_micros = 3;
  if (this->has_cpc_bid_floor_micros()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cpc_bid_floor_micros_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetRoas::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.TargetRoas)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetRoas* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetRoas>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.TargetRoas)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.TargetRoas)
    MergeFrom(*source);
  }
}

void TargetRoas::MergeFrom(const TargetRoas& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.TargetRoas)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_roas()) {
    mutable_target_roas()->::google::protobuf::DoubleValue::MergeFrom(from.target_roas());
  }
  if (from.has_cpc_bid_ceiling_micros()) {
    mutable_cpc_bid_ceiling_micros()->::google::protobuf::Int64Value::MergeFrom(from.cpc_bid_ceiling_micros());
  }
  if (from.has_cpc_bid_floor_micros()) {
    mutable_cpc_bid_floor_micros()->::google::protobuf::Int64Value::MergeFrom(from.cpc_bid_floor_micros());
  }
}

void TargetRoas::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.TargetRoas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetRoas::CopyFrom(const TargetRoas& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.TargetRoas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetRoas::IsInitialized() const {
  return true;
}

void TargetRoas::Swap(TargetRoas* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetRoas::InternalSwap(TargetRoas* other) {
  using std::swap;
  swap(target_roas_, other->target_roas_);
  swap(cpc_bid_ceiling_micros_, other->cpc_bid_ceiling_micros_);
  swap(cpc_bid_floor_micros_, other->cpc_bid_floor_micros_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetRoas::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetSpend::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_TargetSpend_default_instance_._instance.get_mutable()->target_spend_micros_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_TargetSpend_default_instance_._instance.get_mutable()->cpc_bid_ceiling_micros_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void TargetSpend::clear_target_spend_micros() {
  if (GetArenaNoVirtual() == NULL && target_spend_micros_ != NULL) {
    delete target_spend_micros_;
  }
  target_spend_micros_ = NULL;
}
void TargetSpend::clear_cpc_bid_ceiling_micros() {
  if (GetArenaNoVirtual() == NULL && cpc_bid_ceiling_micros_ != NULL) {
    delete cpc_bid_ceiling_micros_;
  }
  cpc_bid_ceiling_micros_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetSpend::kTargetSpendMicrosFieldNumber;
const int TargetSpend::kCpcBidCeilingMicrosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetSpend::TargetSpend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_TargetSpend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.TargetSpend)
}
TargetSpend::TargetSpend(const TargetSpend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_spend_micros()) {
    target_spend_micros_ = new ::google::protobuf::Int64Value(*from.target_spend_micros_);
  } else {
    target_spend_micros_ = NULL;
  }
  if (from.has_cpc_bid_ceiling_micros()) {
    cpc_bid_ceiling_micros_ = new ::google::protobuf::Int64Value(*from.cpc_bid_ceiling_micros_);
  } else {
    cpc_bid_ceiling_micros_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.TargetSpend)
}

void TargetSpend::SharedCtor() {
  ::memset(&target_spend_micros_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cpc_bid_ceiling_micros_) -
      reinterpret_cast<char*>(&target_spend_micros_)) + sizeof(cpc_bid_ceiling_micros_));
}

TargetSpend::~TargetSpend() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.TargetSpend)
  SharedDtor();
}

void TargetSpend::SharedDtor() {
  if (this != internal_default_instance()) delete target_spend_micros_;
  if (this != internal_default_instance()) delete cpc_bid_ceiling_micros_;
}

void TargetSpend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetSpend::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetSpend& TargetSpend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_TargetSpend.base);
  return *internal_default_instance();
}


void TargetSpend::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.TargetSpend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_spend_micros_ != NULL) {
    delete target_spend_micros_;
  }
  target_spend_micros_ = NULL;
  if (GetArenaNoVirtual() == NULL && cpc_bid_ceiling_micros_ != NULL) {
    delete cpc_bid_ceiling_micros_;
  }
  cpc_bid_ceiling_micros_ = NULL;
  _internal_metadata_.Clear();
}

bool TargetSpend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.TargetSpend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value target_spend_micros = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_spend_micros()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpc_bid_ceiling_micros()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.TargetSpend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.TargetSpend)
  return false;
#undef DO_
}

void TargetSpend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.TargetSpend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value target_spend_micros = 1;
  if (this->has_target_spend_micros()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_target_spend_micros(), output);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  if (this->has_cpc_bid_ceiling_micros()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cpc_bid_ceiling_micros(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.TargetSpend)
}

::google::protobuf::uint8* TargetSpend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.TargetSpend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value target_spend_micros = 1;
  if (this->has_target_spend_micros()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_target_spend_micros(), deterministic, target);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  if (this->has_cpc_bid_ceiling_micros()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cpc_bid_ceiling_micros(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.TargetSpend)
  return target;
}

size_t TargetSpend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.TargetSpend)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value target_spend_micros = 1;
  if (this->has_target_spend_micros()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_spend_micros_);
  }

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  if (this->has_cpc_bid_ceiling_micros()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cpc_bid_ceiling_micros_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetSpend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.TargetSpend)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetSpend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetSpend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.TargetSpend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.TargetSpend)
    MergeFrom(*source);
  }
}

void TargetSpend::MergeFrom(const TargetSpend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.TargetSpend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_spend_micros()) {
    mutable_target_spend_micros()->::google::protobuf::Int64Value::MergeFrom(from.target_spend_micros());
  }
  if (from.has_cpc_bid_ceiling_micros()) {
    mutable_cpc_bid_ceiling_micros()->::google::protobuf::Int64Value::MergeFrom(from.cpc_bid_ceiling_micros());
  }
}

void TargetSpend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.TargetSpend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetSpend::CopyFrom(const TargetSpend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.TargetSpend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetSpend::IsInitialized() const {
  return true;
}

void TargetSpend::Swap(TargetSpend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetSpend::InternalSwap(TargetSpend* other) {
  using std::swap;
  swap(target_spend_micros_, other->target_spend_micros_);
  swap(cpc_bid_ceiling_micros_, other->cpc_bid_ceiling_micros_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetSpend::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PercentCpc::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_PercentCpc_default_instance_._instance.get_mutable()->cpc_bid_ceiling_micros_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_PercentCpc_default_instance_._instance.get_mutable()->enhanced_cpc_enabled_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
}
void PercentCpc::clear_cpc_bid_ceiling_micros() {
  if (GetArenaNoVirtual() == NULL && cpc_bid_ceiling_micros_ != NULL) {
    delete cpc_bid_ceiling_micros_;
  }
  cpc_bid_ceiling_micros_ = NULL;
}
void PercentCpc::clear_enhanced_cpc_enabled() {
  if (GetArenaNoVirtual() == NULL && enhanced_cpc_enabled_ != NULL) {
    delete enhanced_cpc_enabled_;
  }
  enhanced_cpc_enabled_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PercentCpc::kCpcBidCeilingMicrosFieldNumber;
const int PercentCpc::kEnhancedCpcEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PercentCpc::PercentCpc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_PercentCpc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.PercentCpc)
}
PercentCpc::PercentCpc(const PercentCpc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cpc_bid_ceiling_micros()) {
    cpc_bid_ceiling_micros_ = new ::google::protobuf::Int64Value(*from.cpc_bid_ceiling_micros_);
  } else {
    cpc_bid_ceiling_micros_ = NULL;
  }
  if (from.has_enhanced_cpc_enabled()) {
    enhanced_cpc_enabled_ = new ::google::protobuf::BoolValue(*from.enhanced_cpc_enabled_);
  } else {
    enhanced_cpc_enabled_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.PercentCpc)
}

void PercentCpc::SharedCtor() {
  ::memset(&cpc_bid_ceiling_micros_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enhanced_cpc_enabled_) -
      reinterpret_cast<char*>(&cpc_bid_ceiling_micros_)) + sizeof(enhanced_cpc_enabled_));
}

PercentCpc::~PercentCpc() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.PercentCpc)
  SharedDtor();
}

void PercentCpc::SharedDtor() {
  if (this != internal_default_instance()) delete cpc_bid_ceiling_micros_;
  if (this != internal_default_instance()) delete enhanced_cpc_enabled_;
}

void PercentCpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PercentCpc::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PercentCpc& PercentCpc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_PercentCpc.base);
  return *internal_default_instance();
}


void PercentCpc::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.PercentCpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cpc_bid_ceiling_micros_ != NULL) {
    delete cpc_bid_ceiling_micros_;
  }
  cpc_bid_ceiling_micros_ = NULL;
  if (GetArenaNoVirtual() == NULL && enhanced_cpc_enabled_ != NULL) {
    delete enhanced_cpc_enabled_;
  }
  enhanced_cpc_enabled_ = NULL;
  _internal_metadata_.Clear();
}

bool PercentCpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.PercentCpc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpc_bid_ceiling_micros()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue enhanced_cpc_enabled = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enhanced_cpc_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.PercentCpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.PercentCpc)
  return false;
#undef DO_
}

void PercentCpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.PercentCpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 1;
  if (this->has_cpc_bid_ceiling_micros()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_cpc_bid_ceiling_micros(), output);
  }

  // .google.protobuf.BoolValue enhanced_cpc_enabled = 2;
  if (this->has_enhanced_cpc_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_enhanced_cpc_enabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.PercentCpc)
}

::google::protobuf::uint8* PercentCpc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.PercentCpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 1;
  if (this->has_cpc_bid_ceiling_micros()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_cpc_bid_ceiling_micros(), deterministic, target);
  }

  // .google.protobuf.BoolValue enhanced_cpc_enabled = 2;
  if (this->has_enhanced_cpc_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_enhanced_cpc_enabled(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.PercentCpc)
  return target;
}

size_t PercentCpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.PercentCpc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 1;
  if (this->has_cpc_bid_ceiling_micros()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cpc_bid_ceiling_micros_);
  }

  // .google.protobuf.BoolValue enhanced_cpc_enabled = 2;
  if (this->has_enhanced_cpc_enabled()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *enhanced_cpc_enabled_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PercentCpc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.PercentCpc)
  GOOGLE_DCHECK_NE(&from, this);
  const PercentCpc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PercentCpc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.PercentCpc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.PercentCpc)
    MergeFrom(*source);
  }
}

void PercentCpc::MergeFrom(const PercentCpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.PercentCpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cpc_bid_ceiling_micros()) {
    mutable_cpc_bid_ceiling_micros()->::google::protobuf::Int64Value::MergeFrom(from.cpc_bid_ceiling_micros());
  }
  if (from.has_enhanced_cpc_enabled()) {
    mutable_enhanced_cpc_enabled()->::google::protobuf::BoolValue::MergeFrom(from.enhanced_cpc_enabled());
  }
}

void PercentCpc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.PercentCpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PercentCpc::CopyFrom(const PercentCpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.PercentCpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PercentCpc::IsInitialized() const {
  return true;
}

void PercentCpc::Swap(PercentCpc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PercentCpc::InternalSwap(PercentCpc* other) {
  using std::swap;
  swap(cpc_bid_ceiling_micros_, other->cpc_bid_ceiling_micros_);
  swap(enhanced_cpc_enabled_, other->enhanced_cpc_enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PercentCpc::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::EnhancedCpc* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::EnhancedCpc >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::EnhancedCpc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::ManualCpc* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::ManualCpc >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::ManualCpc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::ManualCpm* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::ManualCpm >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::ManualCpm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::MaximizeConversions* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::MaximizeConversions >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::MaximizeConversions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::MaximizeConversionValue* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::MaximizeConversionValue >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::MaximizeConversionValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::PageOnePromoted* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::PageOnePromoted >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::PageOnePromoted >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::TargetCpa* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::TargetCpa >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::TargetCpa >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::TargetOutrankShare* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::TargetOutrankShare >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::TargetOutrankShare >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::TargetRoas* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::TargetRoas >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::TargetRoas >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::TargetSpend* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::TargetSpend >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::TargetSpend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::PercentCpc* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::PercentCpc >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::PercentCpc >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
