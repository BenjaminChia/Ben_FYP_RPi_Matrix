// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/common/criteria.proto

#include "google/ads/googleads/v0/common/criteria.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HotelCityInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HotelClassInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HotelCountryRegionInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HotelIdInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HotelStateInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ListingBrandInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ListingCustomAttributeInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_ListingDimensionInfo;
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto
namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace common {
class KeywordInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeywordInfo>
      _instance;
} _KeywordInfo_default_instance_;
class LocationInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocationInfo>
      _instance;
} _LocationInfo_default_instance_;
class PlatformInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlatformInfo>
      _instance;
} _PlatformInfo_default_instance_;
class ListingGroupInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListingGroupInfo>
      _instance;
} _ListingGroupInfo_default_instance_;
class ListingDimensionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListingDimensionInfo>
      _instance;
  const ::google::ads::googleads::v0::common::ListingBrandInfo* listing_brand_;
  const ::google::ads::googleads::v0::common::HotelIdInfo* hotel_id_;
  const ::google::ads::googleads::v0::common::HotelClassInfo* hotel_class_;
  const ::google::ads::googleads::v0::common::HotelCountryRegionInfo* hotel_country_region_;
  const ::google::ads::googleads::v0::common::HotelStateInfo* hotel_state_;
  const ::google::ads::googleads::v0::common::HotelCityInfo* hotel_city_;
  const ::google::ads::googleads::v0::common::ListingCustomAttributeInfo* listing_custom_attribute_;
} _ListingDimensionInfo_default_instance_;
class ListingBrandInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListingBrandInfo>
      _instance;
} _ListingBrandInfo_default_instance_;
class HotelIdInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HotelIdInfo>
      _instance;
} _HotelIdInfo_default_instance_;
class HotelClassInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HotelClassInfo>
      _instance;
} _HotelClassInfo_default_instance_;
class HotelCountryRegionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HotelCountryRegionInfo>
      _instance;
} _HotelCountryRegionInfo_default_instance_;
class HotelStateInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HotelStateInfo>
      _instance;
} _HotelStateInfo_default_instance_;
class HotelCityInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HotelCityInfo>
      _instance;
} _HotelCityInfo_default_instance_;
class ListingCustomAttributeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListingCustomAttributeInfo>
      _instance;
} _ListingCustomAttributeInfo_default_instance_;
class HotelDateSelectionTypeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HotelDateSelectionTypeInfo>
      _instance;
} _HotelDateSelectionTypeInfo_default_instance_;
class HotelAdvanceBookingWindowInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HotelAdvanceBookingWindowInfo>
      _instance;
} _HotelAdvanceBookingWindowInfo_default_instance_;
class HotelLengthOfStayInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HotelLengthOfStayInfo>
      _instance;
} _HotelLengthOfStayInfo_default_instance_;
class HotelCheckInDayInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HotelCheckInDayInfo>
      _instance;
} _HotelCheckInDayInfo_default_instance_;
}  // namespace common
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto {
static void InitDefaultsKeywordInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_KeywordInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::KeywordInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::KeywordInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KeywordInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKeywordInfo}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,}};

static void InitDefaultsLocationInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_LocationInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::LocationInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::LocationInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LocationInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLocationInfo}, {}};

static void InitDefaultsPlatformInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_PlatformInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::PlatformInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::PlatformInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlatformInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlatformInfo}, {}};

static void InitDefaultsListingGroupInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_ListingGroupInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::ListingGroupInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::ListingGroupInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ListingGroupInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsListingGroupInfo}, {
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_ListingDimensionInfo.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsListingDimensionInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_ListingDimensionInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::ListingDimensionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::ListingDimensionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_ListingDimensionInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsListingDimensionInfo}, {
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_ListingBrandInfo.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelIdInfo.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelClassInfo.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelCountryRegionInfo.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelStateInfo.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelCityInfo.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_ListingCustomAttributeInfo.base,}};

static void InitDefaultsListingBrandInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_ListingBrandInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::ListingBrandInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::ListingBrandInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListingBrandInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListingBrandInfo}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,}};

static void InitDefaultsHotelIdInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_HotelIdInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::HotelIdInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::HotelIdInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HotelIdInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHotelIdInfo}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,}};

static void InitDefaultsHotelClassInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_HotelClassInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::HotelClassInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::HotelClassInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HotelClassInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHotelClassInfo}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsHotelCountryRegionInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_HotelCountryRegionInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::HotelCountryRegionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::HotelCountryRegionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HotelCountryRegionInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHotelCountryRegionInfo}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,}};

static void InitDefaultsHotelStateInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_HotelStateInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::HotelStateInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::HotelStateInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HotelStateInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHotelStateInfo}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,}};

static void InitDefaultsHotelCityInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_HotelCityInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::HotelCityInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::HotelCityInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HotelCityInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHotelCityInfo}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,}};

static void InitDefaultsListingCustomAttributeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_ListingCustomAttributeInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::ListingCustomAttributeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::ListingCustomAttributeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListingCustomAttributeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListingCustomAttributeInfo}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,}};

static void InitDefaultsHotelDateSelectionTypeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_HotelDateSelectionTypeInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HotelDateSelectionTypeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHotelDateSelectionTypeInfo}, {}};

static void InitDefaultsHotelAdvanceBookingWindowInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_HotelAdvanceBookingWindowInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HotelAdvanceBookingWindowInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHotelAdvanceBookingWindowInfo}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsHotelLengthOfStayInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_HotelLengthOfStayInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::HotelLengthOfStayInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::HotelLengthOfStayInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HotelLengthOfStayInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHotelLengthOfStayInfo}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

static void InitDefaultsHotelCheckInDayInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_HotelCheckInDayInfo_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::HotelCheckInDayInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::HotelCheckInDayInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HotelCheckInDayInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHotelCheckInDayInfo}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_KeywordInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocationInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlatformInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListingGroupInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListingDimensionInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListingBrandInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HotelIdInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HotelClassInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HotelCountryRegionInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HotelStateInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HotelCityInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListingCustomAttributeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HotelDateSelectionTypeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HotelAdvanceBookingWindowInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HotelLengthOfStayInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HotelCheckInDayInfo.base);
}

::google::protobuf::Metadata file_level_metadata[16];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::KeywordInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::KeywordInfo, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::KeywordInfo, match_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::LocationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::PlatformInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ListingGroupInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ListingGroupInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ListingGroupInfo, case_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ListingGroupInfo, parent_criterion_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ListingDimensionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ListingDimensionInfo, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::ads::googleads::v0::common::ListingDimensionInfoDefaultTypeInternal, listing_brand_),
  offsetof(::google::ads::googleads::v0::common::ListingDimensionInfoDefaultTypeInternal, hotel_id_),
  offsetof(::google::ads::googleads::v0::common::ListingDimensionInfoDefaultTypeInternal, hotel_class_),
  offsetof(::google::ads::googleads::v0::common::ListingDimensionInfoDefaultTypeInternal, hotel_country_region_),
  offsetof(::google::ads::googleads::v0::common::ListingDimensionInfoDefaultTypeInternal, hotel_state_),
  offsetof(::google::ads::googleads::v0::common::ListingDimensionInfoDefaultTypeInternal, hotel_city_),
  offsetof(::google::ads::googleads::v0::common::ListingDimensionInfoDefaultTypeInternal, listing_custom_attribute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ListingDimensionInfo, dimension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ListingBrandInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ListingBrandInfo, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelIdInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelIdInfo, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelClassInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelClassInfo, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelCountryRegionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelCountryRegionInfo, country_region_criterion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelStateInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelStateInfo, state_criterion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelCityInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelCityInfo, city_criterion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ListingCustomAttributeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ListingCustomAttributeInfo, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::ListingCustomAttributeInfo, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo, min_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo, max_days_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelLengthOfStayInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelLengthOfStayInfo, min_nights_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelLengthOfStayInfo, max_nights_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::HotelCheckInDayInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::ads::googleads::v0::common::KeywordInfo)},
  { 7, -1, sizeof(::google::ads::googleads::v0::common::LocationInfo)},
  { 12, -1, sizeof(::google::ads::googleads::v0::common::PlatformInfo)},
  { 17, -1, sizeof(::google::ads::googleads::v0::common::ListingGroupInfo)},
  { 25, -1, sizeof(::google::ads::googleads::v0::common::ListingDimensionInfo)},
  { 38, -1, sizeof(::google::ads::googleads::v0::common::ListingBrandInfo)},
  { 44, -1, sizeof(::google::ads::googleads::v0::common::HotelIdInfo)},
  { 50, -1, sizeof(::google::ads::googleads::v0::common::HotelClassInfo)},
  { 56, -1, sizeof(::google::ads::googleads::v0::common::HotelCountryRegionInfo)},
  { 62, -1, sizeof(::google::ads::googleads::v0::common::HotelStateInfo)},
  { 68, -1, sizeof(::google::ads::googleads::v0::common::HotelCityInfo)},
  { 74, -1, sizeof(::google::ads::googleads::v0::common::ListingCustomAttributeInfo)},
  { 81, -1, sizeof(::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo)},
  { 86, -1, sizeof(::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo)},
  { 93, -1, sizeof(::google::ads::googleads::v0::common::HotelLengthOfStayInfo)},
  { 100, -1, sizeof(::google::ads::googleads::v0::common::HotelCheckInDayInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_KeywordInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_LocationInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_PlatformInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_ListingGroupInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_ListingDimensionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_ListingBrandInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_HotelIdInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_HotelClassInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_HotelCountryRegionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_HotelStateInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_HotelCityInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_ListingCustomAttributeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_HotelDateSelectionTypeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_HotelAdvanceBookingWindowInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_HotelLengthOfStayInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_HotelCheckInDayInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/ads/googleads/v0/common/criteria.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n-google/ads/googleads/v0/common/criteri"
      "a.proto\022\036google.ads.googleads.v0.common\032"
      "6google/ads/googleads/v0/enums/keyword_m"
      "atch_type.proto\032Bgoogle/ads/googleads/v0"
      "/enums/listing_custom_attribute_index.pr"
      "oto\0326google/ads/googleads/v0/enums/listi"
      "ng_group_type.proto\032\036google/protobuf/wra"
      "ppers.proto\"\223\001\n\013KeywordInfo\022*\n\004text\030\001 \001("
      "\0132\034.google.protobuf.StringValue\022X\n\nmatch"
      "_type\030\002 \001(\0162D.google.ads.googleads.v0.en"
      "ums.KeywordMatchTypeEnum.KeywordMatchTyp"
      "e\"\016\n\014LocationInfo\"\016\n\014PlatformInfo\"\352\001\n\020Li"
      "stingGroupInfo\022R\n\004type\030\001 \001(\0162D.google.ad"
      "s.googleads.v0.enums.ListingGroupTypeEnu"
      "m.ListingGroupType\022H\n\ncase_value\030\002 \001(\01324"
      ".google.ads.googleads.v0.common.ListingD"
      "imensionInfo\0228\n\023parent_criterion_id\030\003 \001("
      "\0132\033.google.protobuf.Int64Value\"\272\004\n\024Listi"
      "ngDimensionInfo\022I\n\rlisting_brand\030\001 \001(\01320"
      ".google.ads.googleads.v0.common.ListingB"
      "randInfoH\000\022\?\n\010hotel_id\030\002 \001(\0132+.google.ad"
      "s.googleads.v0.common.HotelIdInfoH\000\022E\n\013h"
      "otel_class\030\003 \001(\0132..google.ads.googleads."
      "v0.common.HotelClassInfoH\000\022V\n\024hotel_coun"
      "try_region\030\004 \001(\01326.google.ads.googleads."
      "v0.common.HotelCountryRegionInfoH\000\022E\n\013ho"
      "tel_state\030\005 \001(\0132..google.ads.googleads.v"
      "0.common.HotelStateInfoH\000\022C\n\nhotel_city\030"
      "\006 \001(\0132-.google.ads.googleads.v0.common.H"
      "otelCityInfoH\000\022^\n\030listing_custom_attribu"
      "te\030\007 \001(\0132:.google.ads.googleads.v0.commo"
      "n.ListingCustomAttributeInfoH\000B\013\n\tdimens"
      "ion\"\?\n\020ListingBrandInfo\022+\n\005value\030\001 \001(\0132\034"
      ".google.protobuf.StringValue\":\n\013HotelIdI"
      "nfo\022+\n\005value\030\001 \001(\0132\034.google.protobuf.Str"
      "ingValue\"<\n\016HotelClassInfo\022*\n\005value\030\001 \001("
      "\0132\033.google.protobuf.Int64Value\"X\n\026HotelC"
      "ountryRegionInfo\022>\n\030country_region_crite"
      "rion\030\001 \001(\0132\034.google.protobuf.StringValue"
      "\"G\n\016HotelStateInfo\0225\n\017state_criterion\030\001 "
      "\001(\0132\034.google.protobuf.StringValue\"E\n\rHot"
      "elCityInfo\0224\n\016city_criterion\030\001 \001(\0132\034.goo"
      "gle.protobuf.StringValue\"\264\001\n\032ListingCust"
      "omAttributeInfo\022+\n\005value\030\001 \001(\0132\034.google."
      "protobuf.StringValue\022i\n\005index\030\002 \001(\0162Z.go"
      "ogle.ads.googleads.v0.enums.ListingCusto"
      "mAttributeIndexEnum.ListingCustomAttribu"
      "teIndex\"\034\n\032HotelDateSelectionTypeInfo\"}\n"
      "\035HotelAdvanceBookingWindowInfo\022-\n\010min_da"
      "ys\030\001 \001(\0132\033.google.protobuf.Int64Value\022-\n"
      "\010max_days\030\002 \001(\0132\033.google.protobuf.Int64V"
      "alue\"y\n\025HotelLengthOfStayInfo\022/\n\nmin_nig"
      "hts\030\001 \001(\0132\033.google.protobuf.Int64Value\022/"
      "\n\nmax_nights\030\002 \001(\0132\033.google.protobuf.Int"
      "64Value\"\025\n\023HotelCheckInDayInfoB\236\001\n\"com.g"
      "oogle.ads.googleads.v0.commonB\rCriteriaP"
      "rotoP\001\242\002\003GAA\252\002\036Google.Ads.GoogleAds.V0.C"
      "ommon\312\002\036Google\\Ads\\GoogleAds\\V0\\Common\342\002"
      "\036Google\\Ads\\GoogleAds\\V0\\Commonb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2359);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/ads/googleads/v0/common/criteria.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fenums_2fkeyword_5fmatch_5ftype_2eproto::AddDescriptors();
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fenums_2flisting_5fcustom_5fattribute_5findex_2eproto::AddDescriptors();
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fenums_2flisting_5fgroup_5ftype_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace common {

// ===================================================================

void KeywordInfo::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_KeywordInfo_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
void KeywordInfo::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeywordInfo::kTextFieldNumber;
const int KeywordInfo::kMatchTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeywordInfo::KeywordInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_KeywordInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.KeywordInfo)
}
KeywordInfo::KeywordInfo(const KeywordInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_text()) {
    text_ = new ::google::protobuf::StringValue(*from.text_);
  } else {
    text_ = NULL;
  }
  match_type_ = from.match_type_;
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.KeywordInfo)
}

void KeywordInfo::SharedCtor() {
  ::memset(&text_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_type_) -
      reinterpret_cast<char*>(&text_)) + sizeof(match_type_));
}

KeywordInfo::~KeywordInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.KeywordInfo)
  SharedDtor();
}

void KeywordInfo::SharedDtor() {
  if (this != internal_default_instance()) delete text_;
}

void KeywordInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeywordInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeywordInfo& KeywordInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_KeywordInfo.base);
  return *internal_default_instance();
}


void KeywordInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.KeywordInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  match_type_ = 0;
  _internal_metadata_.Clear();
}

bool KeywordInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.KeywordInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.enums.KeywordMatchTypeEnum.KeywordMatchType match_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::google::ads::googleads::v0::enums::KeywordMatchTypeEnum_KeywordMatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.KeywordInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.KeywordInfo)
  return false;
#undef DO_
}

void KeywordInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.KeywordInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue text = 1;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_text(), output);
  }

  // .google.ads.googleads.v0.enums.KeywordMatchTypeEnum.KeywordMatchType match_type = 2;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->match_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.KeywordInfo)
}

::google::protobuf::uint8* KeywordInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.KeywordInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue text = 1;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_text(), deterministic, target);
  }

  // .google.ads.googleads.v0.enums.KeywordMatchTypeEnum.KeywordMatchType match_type = 2;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->match_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.KeywordInfo)
  return target;
}

size_t KeywordInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.KeywordInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.StringValue text = 1;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.ads.googleads.v0.enums.KeywordMatchTypeEnum.KeywordMatchType match_type = 2;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeywordInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.KeywordInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const KeywordInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeywordInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.KeywordInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.KeywordInfo)
    MergeFrom(*source);
  }
}

void KeywordInfo::MergeFrom(const KeywordInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.KeywordInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_text()) {
    mutable_text()->::google::protobuf::StringValue::MergeFrom(from.text());
  }
  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
}

void KeywordInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.KeywordInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeywordInfo::CopyFrom(const KeywordInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.KeywordInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeywordInfo::IsInitialized() const {
  return true;
}

void KeywordInfo::Swap(KeywordInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeywordInfo::InternalSwap(KeywordInfo* other) {
  using std::swap;
  swap(text_, other->text_);
  swap(match_type_, other->match_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeywordInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocationInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocationInfo::LocationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_LocationInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.LocationInfo)
}
LocationInfo::LocationInfo(const LocationInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.LocationInfo)
}

void LocationInfo::SharedCtor() {
}

LocationInfo::~LocationInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.LocationInfo)
  SharedDtor();
}

void LocationInfo::SharedDtor() {
}

void LocationInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocationInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocationInfo& LocationInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_LocationInfo.base);
  return *internal_default_instance();
}


void LocationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.LocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LocationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.LocationInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.LocationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.LocationInfo)
  return false;
#undef DO_
}

void LocationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.LocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.LocationInfo)
}

::google::protobuf::uint8* LocationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.LocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.LocationInfo)
  return target;
}

size_t LocationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.LocationInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.LocationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.LocationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.LocationInfo)
    MergeFrom(*source);
  }
}

void LocationInfo::MergeFrom(const LocationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.LocationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LocationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.LocationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationInfo::CopyFrom(const LocationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.LocationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationInfo::IsInitialized() const {
  return true;
}

void LocationInfo::Swap(LocationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocationInfo::InternalSwap(LocationInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocationInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlatformInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlatformInfo::PlatformInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_PlatformInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.PlatformInfo)
}
PlatformInfo::PlatformInfo(const PlatformInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.PlatformInfo)
}

void PlatformInfo::SharedCtor() {
}

PlatformInfo::~PlatformInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.PlatformInfo)
  SharedDtor();
}

void PlatformInfo::SharedDtor() {
}

void PlatformInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlatformInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlatformInfo& PlatformInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_PlatformInfo.base);
  return *internal_default_instance();
}


void PlatformInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.PlatformInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PlatformInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.PlatformInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.PlatformInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.PlatformInfo)
  return false;
#undef DO_
}

void PlatformInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.PlatformInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.PlatformInfo)
}

::google::protobuf::uint8* PlatformInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.PlatformInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.PlatformInfo)
  return target;
}

size_t PlatformInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.PlatformInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlatformInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.PlatformInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlatformInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.PlatformInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.PlatformInfo)
    MergeFrom(*source);
  }
}

void PlatformInfo::MergeFrom(const PlatformInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.PlatformInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PlatformInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.PlatformInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformInfo::CopyFrom(const PlatformInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.PlatformInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformInfo::IsInitialized() const {
  return true;
}

void PlatformInfo::Swap(PlatformInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlatformInfo::InternalSwap(PlatformInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlatformInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListingGroupInfo::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_ListingGroupInfo_default_instance_._instance.get_mutable()->case_value_ = const_cast< ::google::ads::googleads::v0::common::ListingDimensionInfo*>(
      ::google::ads::googleads::v0::common::ListingDimensionInfo::internal_default_instance());
  ::google::ads::googleads::v0::common::_ListingGroupInfo_default_instance_._instance.get_mutable()->parent_criterion_id_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void ListingGroupInfo::clear_parent_criterion_id() {
  if (GetArenaNoVirtual() == NULL && parent_criterion_id_ != NULL) {
    delete parent_criterion_id_;
  }
  parent_criterion_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListingGroupInfo::kTypeFieldNumber;
const int ListingGroupInfo::kCaseValueFieldNumber;
const int ListingGroupInfo::kParentCriterionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListingGroupInfo::ListingGroupInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_ListingGroupInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.ListingGroupInfo)
}
ListingGroupInfo::ListingGroupInfo(const ListingGroupInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_case_value()) {
    case_value_ = new ::google::ads::googleads::v0::common::ListingDimensionInfo(*from.case_value_);
  } else {
    case_value_ = NULL;
  }
  if (from.has_parent_criterion_id()) {
    parent_criterion_id_ = new ::google::protobuf::Int64Value(*from.parent_criterion_id_);
  } else {
    parent_criterion_id_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.ListingGroupInfo)
}

void ListingGroupInfo::SharedCtor() {
  ::memset(&case_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&case_value_)) + sizeof(type_));
}

ListingGroupInfo::~ListingGroupInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.ListingGroupInfo)
  SharedDtor();
}

void ListingGroupInfo::SharedDtor() {
  if (this != internal_default_instance()) delete case_value_;
  if (this != internal_default_instance()) delete parent_criterion_id_;
}

void ListingGroupInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListingGroupInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListingGroupInfo& ListingGroupInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_ListingGroupInfo.base);
  return *internal_default_instance();
}


void ListingGroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.ListingGroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && case_value_ != NULL) {
    delete case_value_;
  }
  case_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && parent_criterion_id_ != NULL) {
    delete parent_criterion_id_;
  }
  parent_criterion_id_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool ListingGroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.ListingGroupInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.ads.googleads.v0.enums.ListingGroupTypeEnum.ListingGroupType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::ads::googleads::v0::enums::ListingGroupTypeEnum_ListingGroupType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.ListingDimensionInfo case_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_case_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value parent_criterion_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parent_criterion_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.ListingGroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.ListingGroupInfo)
  return false;
#undef DO_
}

void ListingGroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.ListingGroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.ads.googleads.v0.enums.ListingGroupTypeEnum.ListingGroupType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .google.ads.googleads.v0.common.ListingDimensionInfo case_value = 2;
  if (this->has_case_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_case_value(), output);
  }

  // .google.protobuf.Int64Value parent_criterion_id = 3;
  if (this->has_parent_criterion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_parent_criterion_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.ListingGroupInfo)
}

::google::protobuf::uint8* ListingGroupInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.ListingGroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.ads.googleads.v0.enums.ListingGroupTypeEnum.ListingGroupType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .google.ads.googleads.v0.common.ListingDimensionInfo case_value = 2;
  if (this->has_case_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_case_value(), deterministic, target);
  }

  // .google.protobuf.Int64Value parent_criterion_id = 3;
  if (this->has_parent_criterion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_parent_criterion_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.ListingGroupInfo)
  return target;
}

size_t ListingGroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.ListingGroupInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.ads.googleads.v0.common.ListingDimensionInfo case_value = 2;
  if (this->has_case_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *case_value_);
  }

  // .google.protobuf.Int64Value parent_criterion_id = 3;
  if (this->has_parent_criterion_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parent_criterion_id_);
  }

  // .google.ads.googleads.v0.enums.ListingGroupTypeEnum.ListingGroupType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListingGroupInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.ListingGroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ListingGroupInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListingGroupInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.ListingGroupInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.ListingGroupInfo)
    MergeFrom(*source);
  }
}

void ListingGroupInfo::MergeFrom(const ListingGroupInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.ListingGroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_case_value()) {
    mutable_case_value()->::google::ads::googleads::v0::common::ListingDimensionInfo::MergeFrom(from.case_value());
  }
  if (from.has_parent_criterion_id()) {
    mutable_parent_criterion_id()->::google::protobuf::Int64Value::MergeFrom(from.parent_criterion_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ListingGroupInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.ListingGroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListingGroupInfo::CopyFrom(const ListingGroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.ListingGroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListingGroupInfo::IsInitialized() const {
  return true;
}

void ListingGroupInfo::Swap(ListingGroupInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListingGroupInfo::InternalSwap(ListingGroupInfo* other) {
  using std::swap;
  swap(case_value_, other->case_value_);
  swap(parent_criterion_id_, other->parent_criterion_id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListingGroupInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListingDimensionInfo::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_ListingDimensionInfo_default_instance_.listing_brand_ = const_cast< ::google::ads::googleads::v0::common::ListingBrandInfo*>(
      ::google::ads::googleads::v0::common::ListingBrandInfo::internal_default_instance());
  ::google::ads::googleads::v0::common::_ListingDimensionInfo_default_instance_.hotel_id_ = const_cast< ::google::ads::googleads::v0::common::HotelIdInfo*>(
      ::google::ads::googleads::v0::common::HotelIdInfo::internal_default_instance());
  ::google::ads::googleads::v0::common::_ListingDimensionInfo_default_instance_.hotel_class_ = const_cast< ::google::ads::googleads::v0::common::HotelClassInfo*>(
      ::google::ads::googleads::v0::common::HotelClassInfo::internal_default_instance());
  ::google::ads::googleads::v0::common::_ListingDimensionInfo_default_instance_.hotel_country_region_ = const_cast< ::google::ads::googleads::v0::common::HotelCountryRegionInfo*>(
      ::google::ads::googleads::v0::common::HotelCountryRegionInfo::internal_default_instance());
  ::google::ads::googleads::v0::common::_ListingDimensionInfo_default_instance_.hotel_state_ = const_cast< ::google::ads::googleads::v0::common::HotelStateInfo*>(
      ::google::ads::googleads::v0::common::HotelStateInfo::internal_default_instance());
  ::google::ads::googleads::v0::common::_ListingDimensionInfo_default_instance_.hotel_city_ = const_cast< ::google::ads::googleads::v0::common::HotelCityInfo*>(
      ::google::ads::googleads::v0::common::HotelCityInfo::internal_default_instance());
  ::google::ads::googleads::v0::common::_ListingDimensionInfo_default_instance_.listing_custom_attribute_ = const_cast< ::google::ads::googleads::v0::common::ListingCustomAttributeInfo*>(
      ::google::ads::googleads::v0::common::ListingCustomAttributeInfo::internal_default_instance());
}
void ListingDimensionInfo::set_allocated_listing_brand(::google::ads::googleads::v0::common::ListingBrandInfo* listing_brand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_dimension();
  if (listing_brand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      listing_brand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, listing_brand, submessage_arena);
    }
    set_has_listing_brand();
    dimension_.listing_brand_ = listing_brand;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.ListingDimensionInfo.listing_brand)
}
void ListingDimensionInfo::set_allocated_hotel_id(::google::ads::googleads::v0::common::HotelIdInfo* hotel_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_dimension();
  if (hotel_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hotel_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hotel_id, submessage_arena);
    }
    set_has_hotel_id();
    dimension_.hotel_id_ = hotel_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_id)
}
void ListingDimensionInfo::set_allocated_hotel_class(::google::ads::googleads::v0::common::HotelClassInfo* hotel_class) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_dimension();
  if (hotel_class) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hotel_class = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hotel_class, submessage_arena);
    }
    set_has_hotel_class();
    dimension_.hotel_class_ = hotel_class;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_class)
}
void ListingDimensionInfo::set_allocated_hotel_country_region(::google::ads::googleads::v0::common::HotelCountryRegionInfo* hotel_country_region) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_dimension();
  if (hotel_country_region) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hotel_country_region = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hotel_country_region, submessage_arena);
    }
    set_has_hotel_country_region();
    dimension_.hotel_country_region_ = hotel_country_region;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_country_region)
}
void ListingDimensionInfo::set_allocated_hotel_state(::google::ads::googleads::v0::common::HotelStateInfo* hotel_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_dimension();
  if (hotel_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hotel_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hotel_state, submessage_arena);
    }
    set_has_hotel_state();
    dimension_.hotel_state_ = hotel_state;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_state)
}
void ListingDimensionInfo::set_allocated_hotel_city(::google::ads::googleads::v0::common::HotelCityInfo* hotel_city) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_dimension();
  if (hotel_city) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hotel_city = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hotel_city, submessage_arena);
    }
    set_has_hotel_city();
    dimension_.hotel_city_ = hotel_city;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_city)
}
void ListingDimensionInfo::set_allocated_listing_custom_attribute(::google::ads::googleads::v0::common::ListingCustomAttributeInfo* listing_custom_attribute) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_dimension();
  if (listing_custom_attribute) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      listing_custom_attribute = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, listing_custom_attribute, submessage_arena);
    }
    set_has_listing_custom_attribute();
    dimension_.listing_custom_attribute_ = listing_custom_attribute;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.ListingDimensionInfo.listing_custom_attribute)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListingDimensionInfo::kListingBrandFieldNumber;
const int ListingDimensionInfo::kHotelIdFieldNumber;
const int ListingDimensionInfo::kHotelClassFieldNumber;
const int ListingDimensionInfo::kHotelCountryRegionFieldNumber;
const int ListingDimensionInfo::kHotelStateFieldNumber;
const int ListingDimensionInfo::kHotelCityFieldNumber;
const int ListingDimensionInfo::kListingCustomAttributeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListingDimensionInfo::ListingDimensionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_ListingDimensionInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.ListingDimensionInfo)
}
ListingDimensionInfo::ListingDimensionInfo(const ListingDimensionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_dimension();
  switch (from.dimension_case()) {
    case kListingBrand: {
      mutable_listing_brand()->::google::ads::googleads::v0::common::ListingBrandInfo::MergeFrom(from.listing_brand());
      break;
    }
    case kHotelId: {
      mutable_hotel_id()->::google::ads::googleads::v0::common::HotelIdInfo::MergeFrom(from.hotel_id());
      break;
    }
    case kHotelClass: {
      mutable_hotel_class()->::google::ads::googleads::v0::common::HotelClassInfo::MergeFrom(from.hotel_class());
      break;
    }
    case kHotelCountryRegion: {
      mutable_hotel_country_region()->::google::ads::googleads::v0::common::HotelCountryRegionInfo::MergeFrom(from.hotel_country_region());
      break;
    }
    case kHotelState: {
      mutable_hotel_state()->::google::ads::googleads::v0::common::HotelStateInfo::MergeFrom(from.hotel_state());
      break;
    }
    case kHotelCity: {
      mutable_hotel_city()->::google::ads::googleads::v0::common::HotelCityInfo::MergeFrom(from.hotel_city());
      break;
    }
    case kListingCustomAttribute: {
      mutable_listing_custom_attribute()->::google::ads::googleads::v0::common::ListingCustomAttributeInfo::MergeFrom(from.listing_custom_attribute());
      break;
    }
    case DIMENSION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.ListingDimensionInfo)
}

void ListingDimensionInfo::SharedCtor() {
  clear_has_dimension();
}

ListingDimensionInfo::~ListingDimensionInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.ListingDimensionInfo)
  SharedDtor();
}

void ListingDimensionInfo::SharedDtor() {
  if (has_dimension()) {
    clear_dimension();
  }
}

void ListingDimensionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListingDimensionInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListingDimensionInfo& ListingDimensionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_ListingDimensionInfo.base);
  return *internal_default_instance();
}


void ListingDimensionInfo::clear_dimension() {
// @@protoc_insertion_point(one_of_clear_start:google.ads.googleads.v0.common.ListingDimensionInfo)
  switch (dimension_case()) {
    case kListingBrand: {
      delete dimension_.listing_brand_;
      break;
    }
    case kHotelId: {
      delete dimension_.hotel_id_;
      break;
    }
    case kHotelClass: {
      delete dimension_.hotel_class_;
      break;
    }
    case kHotelCountryRegion: {
      delete dimension_.hotel_country_region_;
      break;
    }
    case kHotelState: {
      delete dimension_.hotel_state_;
      break;
    }
    case kHotelCity: {
      delete dimension_.hotel_city_;
      break;
    }
    case kListingCustomAttribute: {
      delete dimension_.listing_custom_attribute_;
      break;
    }
    case DIMENSION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DIMENSION_NOT_SET;
}


void ListingDimensionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.ListingDimensionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_dimension();
  _internal_metadata_.Clear();
}

bool ListingDimensionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.ListingDimensionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.ads.googleads.v0.common.ListingBrandInfo listing_brand = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_listing_brand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.HotelIdInfo hotel_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hotel_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.HotelClassInfo hotel_class = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hotel_class()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.HotelCountryRegionInfo hotel_country_region = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hotel_country_region()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.HotelStateInfo hotel_state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hotel_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.HotelCityInfo hotel_city = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hotel_city()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.ListingCustomAttributeInfo listing_custom_attribute = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_listing_custom_attribute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.ListingDimensionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.ListingDimensionInfo)
  return false;
#undef DO_
}

void ListingDimensionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.ListingDimensionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.ads.googleads.v0.common.ListingBrandInfo listing_brand = 1;
  if (has_listing_brand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_listing_brand(), output);
  }

  // .google.ads.googleads.v0.common.HotelIdInfo hotel_id = 2;
  if (has_hotel_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_hotel_id(), output);
  }

  // .google.ads.googleads.v0.common.HotelClassInfo hotel_class = 3;
  if (has_hotel_class()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_hotel_class(), output);
  }

  // .google.ads.googleads.v0.common.HotelCountryRegionInfo hotel_country_region = 4;
  if (has_hotel_country_region()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_hotel_country_region(), output);
  }

  // .google.ads.googleads.v0.common.HotelStateInfo hotel_state = 5;
  if (has_hotel_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_hotel_state(), output);
  }

  // .google.ads.googleads.v0.common.HotelCityInfo hotel_city = 6;
  if (has_hotel_city()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_hotel_city(), output);
  }

  // .google.ads.googleads.v0.common.ListingCustomAttributeInfo listing_custom_attribute = 7;
  if (has_listing_custom_attribute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_listing_custom_attribute(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.ListingDimensionInfo)
}

::google::protobuf::uint8* ListingDimensionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.ListingDimensionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.ads.googleads.v0.common.ListingBrandInfo listing_brand = 1;
  if (has_listing_brand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_listing_brand(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.HotelIdInfo hotel_id = 2;
  if (has_hotel_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_hotel_id(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.HotelClassInfo hotel_class = 3;
  if (has_hotel_class()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_hotel_class(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.HotelCountryRegionInfo hotel_country_region = 4;
  if (has_hotel_country_region()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_hotel_country_region(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.HotelStateInfo hotel_state = 5;
  if (has_hotel_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_hotel_state(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.HotelCityInfo hotel_city = 6;
  if (has_hotel_city()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_hotel_city(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.ListingCustomAttributeInfo listing_custom_attribute = 7;
  if (has_listing_custom_attribute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_listing_custom_attribute(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.ListingDimensionInfo)
  return target;
}

size_t ListingDimensionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.ListingDimensionInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (dimension_case()) {
    // .google.ads.googleads.v0.common.ListingBrandInfo listing_brand = 1;
    case kListingBrand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dimension_.listing_brand_);
      break;
    }
    // .google.ads.googleads.v0.common.HotelIdInfo hotel_id = 2;
    case kHotelId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dimension_.hotel_id_);
      break;
    }
    // .google.ads.googleads.v0.common.HotelClassInfo hotel_class = 3;
    case kHotelClass: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dimension_.hotel_class_);
      break;
    }
    // .google.ads.googleads.v0.common.HotelCountryRegionInfo hotel_country_region = 4;
    case kHotelCountryRegion: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dimension_.hotel_country_region_);
      break;
    }
    // .google.ads.googleads.v0.common.HotelStateInfo hotel_state = 5;
    case kHotelState: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dimension_.hotel_state_);
      break;
    }
    // .google.ads.googleads.v0.common.HotelCityInfo hotel_city = 6;
    case kHotelCity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dimension_.hotel_city_);
      break;
    }
    // .google.ads.googleads.v0.common.ListingCustomAttributeInfo listing_custom_attribute = 7;
    case kListingCustomAttribute: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dimension_.listing_custom_attribute_);
      break;
    }
    case DIMENSION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListingDimensionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.ListingDimensionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ListingDimensionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListingDimensionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.ListingDimensionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.ListingDimensionInfo)
    MergeFrom(*source);
  }
}

void ListingDimensionInfo::MergeFrom(const ListingDimensionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.ListingDimensionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.dimension_case()) {
    case kListingBrand: {
      mutable_listing_brand()->::google::ads::googleads::v0::common::ListingBrandInfo::MergeFrom(from.listing_brand());
      break;
    }
    case kHotelId: {
      mutable_hotel_id()->::google::ads::googleads::v0::common::HotelIdInfo::MergeFrom(from.hotel_id());
      break;
    }
    case kHotelClass: {
      mutable_hotel_class()->::google::ads::googleads::v0::common::HotelClassInfo::MergeFrom(from.hotel_class());
      break;
    }
    case kHotelCountryRegion: {
      mutable_hotel_country_region()->::google::ads::googleads::v0::common::HotelCountryRegionInfo::MergeFrom(from.hotel_country_region());
      break;
    }
    case kHotelState: {
      mutable_hotel_state()->::google::ads::googleads::v0::common::HotelStateInfo::MergeFrom(from.hotel_state());
      break;
    }
    case kHotelCity: {
      mutable_hotel_city()->::google::ads::googleads::v0::common::HotelCityInfo::MergeFrom(from.hotel_city());
      break;
    }
    case kListingCustomAttribute: {
      mutable_listing_custom_attribute()->::google::ads::googleads::v0::common::ListingCustomAttributeInfo::MergeFrom(from.listing_custom_attribute());
      break;
    }
    case DIMENSION_NOT_SET: {
      break;
    }
  }
}

void ListingDimensionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.ListingDimensionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListingDimensionInfo::CopyFrom(const ListingDimensionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.ListingDimensionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListingDimensionInfo::IsInitialized() const {
  return true;
}

void ListingDimensionInfo::Swap(ListingDimensionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListingDimensionInfo::InternalSwap(ListingDimensionInfo* other) {
  using std::swap;
  swap(dimension_, other->dimension_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListingDimensionInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListingBrandInfo::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_ListingBrandInfo_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
void ListingBrandInfo::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListingBrandInfo::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListingBrandInfo::ListingBrandInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_ListingBrandInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.ListingBrandInfo)
}
ListingBrandInfo::ListingBrandInfo(const ListingBrandInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::google::protobuf::StringValue(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.ListingBrandInfo)
}

void ListingBrandInfo::SharedCtor() {
  value_ = NULL;
}

ListingBrandInfo::~ListingBrandInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.ListingBrandInfo)
  SharedDtor();
}

void ListingBrandInfo::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void ListingBrandInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListingBrandInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListingBrandInfo& ListingBrandInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_ListingBrandInfo.base);
  return *internal_default_instance();
}


void ListingBrandInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.ListingBrandInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool ListingBrandInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.ListingBrandInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.ListingBrandInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.ListingBrandInfo)
  return false;
#undef DO_
}

void ListingBrandInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.ListingBrandInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.ListingBrandInfo)
}

::google::protobuf::uint8* ListingBrandInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.ListingBrandInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.ListingBrandInfo)
  return target;
}

size_t ListingBrandInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.ListingBrandInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListingBrandInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.ListingBrandInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ListingBrandInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListingBrandInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.ListingBrandInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.ListingBrandInfo)
    MergeFrom(*source);
  }
}

void ListingBrandInfo::MergeFrom(const ListingBrandInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.ListingBrandInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::google::protobuf::StringValue::MergeFrom(from.value());
  }
}

void ListingBrandInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.ListingBrandInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListingBrandInfo::CopyFrom(const ListingBrandInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.ListingBrandInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListingBrandInfo::IsInitialized() const {
  return true;
}

void ListingBrandInfo::Swap(ListingBrandInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListingBrandInfo::InternalSwap(ListingBrandInfo* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListingBrandInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HotelIdInfo::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_HotelIdInfo_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
void HotelIdInfo::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HotelIdInfo::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HotelIdInfo::HotelIdInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelIdInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.HotelIdInfo)
}
HotelIdInfo::HotelIdInfo(const HotelIdInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::google::protobuf::StringValue(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.HotelIdInfo)
}

void HotelIdInfo::SharedCtor() {
  value_ = NULL;
}

HotelIdInfo::~HotelIdInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.HotelIdInfo)
  SharedDtor();
}

void HotelIdInfo::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void HotelIdInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HotelIdInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HotelIdInfo& HotelIdInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelIdInfo.base);
  return *internal_default_instance();
}


void HotelIdInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.HotelIdInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool HotelIdInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.HotelIdInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.HotelIdInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.HotelIdInfo)
  return false;
#undef DO_
}

void HotelIdInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.HotelIdInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.HotelIdInfo)
}

::google::protobuf::uint8* HotelIdInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.HotelIdInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.HotelIdInfo)
  return target;
}

size_t HotelIdInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.HotelIdInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HotelIdInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.HotelIdInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const HotelIdInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HotelIdInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.HotelIdInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.HotelIdInfo)
    MergeFrom(*source);
  }
}

void HotelIdInfo::MergeFrom(const HotelIdInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.HotelIdInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::google::protobuf::StringValue::MergeFrom(from.value());
  }
}

void HotelIdInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.HotelIdInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HotelIdInfo::CopyFrom(const HotelIdInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.HotelIdInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HotelIdInfo::IsInitialized() const {
  return true;
}

void HotelIdInfo::Swap(HotelIdInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HotelIdInfo::InternalSwap(HotelIdInfo* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HotelIdInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HotelClassInfo::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_HotelClassInfo_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void HotelClassInfo::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HotelClassInfo::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HotelClassInfo::HotelClassInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelClassInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.HotelClassInfo)
}
HotelClassInfo::HotelClassInfo(const HotelClassInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::google::protobuf::Int64Value(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.HotelClassInfo)
}

void HotelClassInfo::SharedCtor() {
  value_ = NULL;
}

HotelClassInfo::~HotelClassInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.HotelClassInfo)
  SharedDtor();
}

void HotelClassInfo::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void HotelClassInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HotelClassInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HotelClassInfo& HotelClassInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelClassInfo.base);
  return *internal_default_instance();
}


void HotelClassInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.HotelClassInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool HotelClassInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.HotelClassInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.HotelClassInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.HotelClassInfo)
  return false;
#undef DO_
}

void HotelClassInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.HotelClassInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value value = 1;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.HotelClassInfo)
}

::google::protobuf::uint8* HotelClassInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.HotelClassInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value value = 1;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.HotelClassInfo)
  return target;
}

size_t HotelClassInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.HotelClassInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HotelClassInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.HotelClassInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const HotelClassInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HotelClassInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.HotelClassInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.HotelClassInfo)
    MergeFrom(*source);
  }
}

void HotelClassInfo::MergeFrom(const HotelClassInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.HotelClassInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::google::protobuf::Int64Value::MergeFrom(from.value());
  }
}

void HotelClassInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.HotelClassInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HotelClassInfo::CopyFrom(const HotelClassInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.HotelClassInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HotelClassInfo::IsInitialized() const {
  return true;
}

void HotelClassInfo::Swap(HotelClassInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HotelClassInfo::InternalSwap(HotelClassInfo* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HotelClassInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HotelCountryRegionInfo::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_HotelCountryRegionInfo_default_instance_._instance.get_mutable()->country_region_criterion_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
void HotelCountryRegionInfo::clear_country_region_criterion() {
  if (GetArenaNoVirtual() == NULL && country_region_criterion_ != NULL) {
    delete country_region_criterion_;
  }
  country_region_criterion_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HotelCountryRegionInfo::kCountryRegionCriterionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HotelCountryRegionInfo::HotelCountryRegionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelCountryRegionInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.HotelCountryRegionInfo)
}
HotelCountryRegionInfo::HotelCountryRegionInfo(const HotelCountryRegionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_country_region_criterion()) {
    country_region_criterion_ = new ::google::protobuf::StringValue(*from.country_region_criterion_);
  } else {
    country_region_criterion_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.HotelCountryRegionInfo)
}

void HotelCountryRegionInfo::SharedCtor() {
  country_region_criterion_ = NULL;
}

HotelCountryRegionInfo::~HotelCountryRegionInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.HotelCountryRegionInfo)
  SharedDtor();
}

void HotelCountryRegionInfo::SharedDtor() {
  if (this != internal_default_instance()) delete country_region_criterion_;
}

void HotelCountryRegionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HotelCountryRegionInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HotelCountryRegionInfo& HotelCountryRegionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelCountryRegionInfo.base);
  return *internal_default_instance();
}


void HotelCountryRegionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.HotelCountryRegionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && country_region_criterion_ != NULL) {
    delete country_region_criterion_;
  }
  country_region_criterion_ = NULL;
  _internal_metadata_.Clear();
}

bool HotelCountryRegionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.HotelCountryRegionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue country_region_criterion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_country_region_criterion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.HotelCountryRegionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.HotelCountryRegionInfo)
  return false;
#undef DO_
}

void HotelCountryRegionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.HotelCountryRegionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue country_region_criterion = 1;
  if (this->has_country_region_criterion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_country_region_criterion(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.HotelCountryRegionInfo)
}

::google::protobuf::uint8* HotelCountryRegionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.HotelCountryRegionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue country_region_criterion = 1;
  if (this->has_country_region_criterion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_country_region_criterion(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.HotelCountryRegionInfo)
  return target;
}

size_t HotelCountryRegionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.HotelCountryRegionInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.StringValue country_region_criterion = 1;
  if (this->has_country_region_criterion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *country_region_criterion_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HotelCountryRegionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.HotelCountryRegionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const HotelCountryRegionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HotelCountryRegionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.HotelCountryRegionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.HotelCountryRegionInfo)
    MergeFrom(*source);
  }
}

void HotelCountryRegionInfo::MergeFrom(const HotelCountryRegionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.HotelCountryRegionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_country_region_criterion()) {
    mutable_country_region_criterion()->::google::protobuf::StringValue::MergeFrom(from.country_region_criterion());
  }
}

void HotelCountryRegionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.HotelCountryRegionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HotelCountryRegionInfo::CopyFrom(const HotelCountryRegionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.HotelCountryRegionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HotelCountryRegionInfo::IsInitialized() const {
  return true;
}

void HotelCountryRegionInfo::Swap(HotelCountryRegionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HotelCountryRegionInfo::InternalSwap(HotelCountryRegionInfo* other) {
  using std::swap;
  swap(country_region_criterion_, other->country_region_criterion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HotelCountryRegionInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HotelStateInfo::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_HotelStateInfo_default_instance_._instance.get_mutable()->state_criterion_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
void HotelStateInfo::clear_state_criterion() {
  if (GetArenaNoVirtual() == NULL && state_criterion_ != NULL) {
    delete state_criterion_;
  }
  state_criterion_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HotelStateInfo::kStateCriterionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HotelStateInfo::HotelStateInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelStateInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.HotelStateInfo)
}
HotelStateInfo::HotelStateInfo(const HotelStateInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state_criterion()) {
    state_criterion_ = new ::google::protobuf::StringValue(*from.state_criterion_);
  } else {
    state_criterion_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.HotelStateInfo)
}

void HotelStateInfo::SharedCtor() {
  state_criterion_ = NULL;
}

HotelStateInfo::~HotelStateInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.HotelStateInfo)
  SharedDtor();
}

void HotelStateInfo::SharedDtor() {
  if (this != internal_default_instance()) delete state_criterion_;
}

void HotelStateInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HotelStateInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HotelStateInfo& HotelStateInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelStateInfo.base);
  return *internal_default_instance();
}


void HotelStateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.HotelStateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_criterion_ != NULL) {
    delete state_criterion_;
  }
  state_criterion_ = NULL;
  _internal_metadata_.Clear();
}

bool HotelStateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.HotelStateInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue state_criterion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state_criterion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.HotelStateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.HotelStateInfo)
  return false;
#undef DO_
}

void HotelStateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.HotelStateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue state_criterion = 1;
  if (this->has_state_criterion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_state_criterion(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.HotelStateInfo)
}

::google::protobuf::uint8* HotelStateInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.HotelStateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue state_criterion = 1;
  if (this->has_state_criterion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_state_criterion(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.HotelStateInfo)
  return target;
}

size_t HotelStateInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.HotelStateInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.StringValue state_criterion = 1;
  if (this->has_state_criterion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *state_criterion_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HotelStateInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.HotelStateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const HotelStateInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HotelStateInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.HotelStateInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.HotelStateInfo)
    MergeFrom(*source);
  }
}

void HotelStateInfo::MergeFrom(const HotelStateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.HotelStateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state_criterion()) {
    mutable_state_criterion()->::google::protobuf::StringValue::MergeFrom(from.state_criterion());
  }
}

void HotelStateInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.HotelStateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HotelStateInfo::CopyFrom(const HotelStateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.HotelStateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HotelStateInfo::IsInitialized() const {
  return true;
}

void HotelStateInfo::Swap(HotelStateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HotelStateInfo::InternalSwap(HotelStateInfo* other) {
  using std::swap;
  swap(state_criterion_, other->state_criterion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HotelStateInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HotelCityInfo::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_HotelCityInfo_default_instance_._instance.get_mutable()->city_criterion_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
void HotelCityInfo::clear_city_criterion() {
  if (GetArenaNoVirtual() == NULL && city_criterion_ != NULL) {
    delete city_criterion_;
  }
  city_criterion_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HotelCityInfo::kCityCriterionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HotelCityInfo::HotelCityInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelCityInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.HotelCityInfo)
}
HotelCityInfo::HotelCityInfo(const HotelCityInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_city_criterion()) {
    city_criterion_ = new ::google::protobuf::StringValue(*from.city_criterion_);
  } else {
    city_criterion_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.HotelCityInfo)
}

void HotelCityInfo::SharedCtor() {
  city_criterion_ = NULL;
}

HotelCityInfo::~HotelCityInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.HotelCityInfo)
  SharedDtor();
}

void HotelCityInfo::SharedDtor() {
  if (this != internal_default_instance()) delete city_criterion_;
}

void HotelCityInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HotelCityInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HotelCityInfo& HotelCityInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelCityInfo.base);
  return *internal_default_instance();
}


void HotelCityInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.HotelCityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && city_criterion_ != NULL) {
    delete city_criterion_;
  }
  city_criterion_ = NULL;
  _internal_metadata_.Clear();
}

bool HotelCityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.HotelCityInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue city_criterion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_city_criterion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.HotelCityInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.HotelCityInfo)
  return false;
#undef DO_
}

void HotelCityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.HotelCityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue city_criterion = 1;
  if (this->has_city_criterion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_city_criterion(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.HotelCityInfo)
}

::google::protobuf::uint8* HotelCityInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.HotelCityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue city_criterion = 1;
  if (this->has_city_criterion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_city_criterion(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.HotelCityInfo)
  return target;
}

size_t HotelCityInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.HotelCityInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.StringValue city_criterion = 1;
  if (this->has_city_criterion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *city_criterion_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HotelCityInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.HotelCityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const HotelCityInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HotelCityInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.HotelCityInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.HotelCityInfo)
    MergeFrom(*source);
  }
}

void HotelCityInfo::MergeFrom(const HotelCityInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.HotelCityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_city_criterion()) {
    mutable_city_criterion()->::google::protobuf::StringValue::MergeFrom(from.city_criterion());
  }
}

void HotelCityInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.HotelCityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HotelCityInfo::CopyFrom(const HotelCityInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.HotelCityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HotelCityInfo::IsInitialized() const {
  return true;
}

void HotelCityInfo::Swap(HotelCityInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HotelCityInfo::InternalSwap(HotelCityInfo* other) {
  using std::swap;
  swap(city_criterion_, other->city_criterion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HotelCityInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListingCustomAttributeInfo::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_ListingCustomAttributeInfo_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
void ListingCustomAttributeInfo::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListingCustomAttributeInfo::kValueFieldNumber;
const int ListingCustomAttributeInfo::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListingCustomAttributeInfo::ListingCustomAttributeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_ListingCustomAttributeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
}
ListingCustomAttributeInfo::ListingCustomAttributeInfo(const ListingCustomAttributeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::google::protobuf::StringValue(*from.value_);
  } else {
    value_ = NULL;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
}

void ListingCustomAttributeInfo::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&value_)) + sizeof(index_));
}

ListingCustomAttributeInfo::~ListingCustomAttributeInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
  SharedDtor();
}

void ListingCustomAttributeInfo::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void ListingCustomAttributeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListingCustomAttributeInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListingCustomAttributeInfo& ListingCustomAttributeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_ListingCustomAttributeInfo.base);
  return *internal_default_instance();
}


void ListingCustomAttributeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  index_ = 0;
  _internal_metadata_.Clear();
}

bool ListingCustomAttributeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.enums.ListingCustomAttributeIndexEnum.ListingCustomAttributeIndex index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_index(static_cast< ::google::ads::googleads::v0::enums::ListingCustomAttributeIndexEnum_ListingCustomAttributeIndex >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
  return false;
#undef DO_
}

void ListingCustomAttributeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_value(), output);
  }

  // .google.ads.googleads.v0.enums.ListingCustomAttributeIndexEnum.ListingCustomAttributeIndex index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
}

::google::protobuf::uint8* ListingCustomAttributeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_value(), deterministic, target);
  }

  // .google.ads.googleads.v0.enums.ListingCustomAttributeIndexEnum.ListingCustomAttributeIndex index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
  return target;
}

size_t ListingCustomAttributeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.ads.googleads.v0.enums.ListingCustomAttributeIndexEnum.ListingCustomAttributeIndex index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListingCustomAttributeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ListingCustomAttributeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListingCustomAttributeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
    MergeFrom(*source);
  }
}

void ListingCustomAttributeInfo::MergeFrom(const ListingCustomAttributeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::google::protobuf::StringValue::MergeFrom(from.value());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void ListingCustomAttributeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListingCustomAttributeInfo::CopyFrom(const ListingCustomAttributeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListingCustomAttributeInfo::IsInitialized() const {
  return true;
}

void ListingCustomAttributeInfo::Swap(ListingCustomAttributeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListingCustomAttributeInfo::InternalSwap(ListingCustomAttributeInfo* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListingCustomAttributeInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HotelDateSelectionTypeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HotelDateSelectionTypeInfo::HotelDateSelectionTypeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelDateSelectionTypeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
}
HotelDateSelectionTypeInfo::HotelDateSelectionTypeInfo(const HotelDateSelectionTypeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
}

void HotelDateSelectionTypeInfo::SharedCtor() {
}

HotelDateSelectionTypeInfo::~HotelDateSelectionTypeInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
  SharedDtor();
}

void HotelDateSelectionTypeInfo::SharedDtor() {
}

void HotelDateSelectionTypeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HotelDateSelectionTypeInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HotelDateSelectionTypeInfo& HotelDateSelectionTypeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelDateSelectionTypeInfo.base);
  return *internal_default_instance();
}


void HotelDateSelectionTypeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool HotelDateSelectionTypeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
  return false;
#undef DO_
}

void HotelDateSelectionTypeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
}

::google::protobuf::uint8* HotelDateSelectionTypeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
  return target;
}

size_t HotelDateSelectionTypeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HotelDateSelectionTypeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const HotelDateSelectionTypeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HotelDateSelectionTypeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
    MergeFrom(*source);
  }
}

void HotelDateSelectionTypeInfo::MergeFrom(const HotelDateSelectionTypeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HotelDateSelectionTypeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HotelDateSelectionTypeInfo::CopyFrom(const HotelDateSelectionTypeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HotelDateSelectionTypeInfo::IsInitialized() const {
  return true;
}

void HotelDateSelectionTypeInfo::Swap(HotelDateSelectionTypeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HotelDateSelectionTypeInfo::InternalSwap(HotelDateSelectionTypeInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HotelDateSelectionTypeInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HotelAdvanceBookingWindowInfo::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_HotelAdvanceBookingWindowInfo_default_instance_._instance.get_mutable()->min_days_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_HotelAdvanceBookingWindowInfo_default_instance_._instance.get_mutable()->max_days_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void HotelAdvanceBookingWindowInfo::clear_min_days() {
  if (GetArenaNoVirtual() == NULL && min_days_ != NULL) {
    delete min_days_;
  }
  min_days_ = NULL;
}
void HotelAdvanceBookingWindowInfo::clear_max_days() {
  if (GetArenaNoVirtual() == NULL && max_days_ != NULL) {
    delete max_days_;
  }
  max_days_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HotelAdvanceBookingWindowInfo::kMinDaysFieldNumber;
const int HotelAdvanceBookingWindowInfo::kMaxDaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HotelAdvanceBookingWindowInfo::HotelAdvanceBookingWindowInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelAdvanceBookingWindowInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
}
HotelAdvanceBookingWindowInfo::HotelAdvanceBookingWindowInfo(const HotelAdvanceBookingWindowInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min_days()) {
    min_days_ = new ::google::protobuf::Int64Value(*from.min_days_);
  } else {
    min_days_ = NULL;
  }
  if (from.has_max_days()) {
    max_days_ = new ::google::protobuf::Int64Value(*from.max_days_);
  } else {
    max_days_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
}

void HotelAdvanceBookingWindowInfo::SharedCtor() {
  ::memset(&min_days_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_days_) -
      reinterpret_cast<char*>(&min_days_)) + sizeof(max_days_));
}

HotelAdvanceBookingWindowInfo::~HotelAdvanceBookingWindowInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
  SharedDtor();
}

void HotelAdvanceBookingWindowInfo::SharedDtor() {
  if (this != internal_default_instance()) delete min_days_;
  if (this != internal_default_instance()) delete max_days_;
}

void HotelAdvanceBookingWindowInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HotelAdvanceBookingWindowInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HotelAdvanceBookingWindowInfo& HotelAdvanceBookingWindowInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelAdvanceBookingWindowInfo.base);
  return *internal_default_instance();
}


void HotelAdvanceBookingWindowInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && min_days_ != NULL) {
    delete min_days_;
  }
  min_days_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_days_ != NULL) {
    delete max_days_;
  }
  max_days_ = NULL;
  _internal_metadata_.Clear();
}

bool HotelAdvanceBookingWindowInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value min_days = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_days()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value max_days = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_days()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
  return false;
#undef DO_
}

void HotelAdvanceBookingWindowInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value min_days = 1;
  if (this->has_min_days()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_min_days(), output);
  }

  // .google.protobuf.Int64Value max_days = 2;
  if (this->has_max_days()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_max_days(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
}

::google::protobuf::uint8* HotelAdvanceBookingWindowInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value min_days = 1;
  if (this->has_min_days()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_min_days(), deterministic, target);
  }

  // .google.protobuf.Int64Value max_days = 2;
  if (this->has_max_days()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_max_days(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
  return target;
}

size_t HotelAdvanceBookingWindowInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value min_days = 1;
  if (this->has_min_days()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_days_);
  }

  // .google.protobuf.Int64Value max_days = 2;
  if (this->has_max_days()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_days_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HotelAdvanceBookingWindowInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const HotelAdvanceBookingWindowInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HotelAdvanceBookingWindowInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
    MergeFrom(*source);
  }
}

void HotelAdvanceBookingWindowInfo::MergeFrom(const HotelAdvanceBookingWindowInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_min_days()) {
    mutable_min_days()->::google::protobuf::Int64Value::MergeFrom(from.min_days());
  }
  if (from.has_max_days()) {
    mutable_max_days()->::google::protobuf::Int64Value::MergeFrom(from.max_days());
  }
}

void HotelAdvanceBookingWindowInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HotelAdvanceBookingWindowInfo::CopyFrom(const HotelAdvanceBookingWindowInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HotelAdvanceBookingWindowInfo::IsInitialized() const {
  return true;
}

void HotelAdvanceBookingWindowInfo::Swap(HotelAdvanceBookingWindowInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HotelAdvanceBookingWindowInfo::InternalSwap(HotelAdvanceBookingWindowInfo* other) {
  using std::swap;
  swap(min_days_, other->min_days_);
  swap(max_days_, other->max_days_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HotelAdvanceBookingWindowInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HotelLengthOfStayInfo::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_HotelLengthOfStayInfo_default_instance_._instance.get_mutable()->min_nights_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_HotelLengthOfStayInfo_default_instance_._instance.get_mutable()->max_nights_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void HotelLengthOfStayInfo::clear_min_nights() {
  if (GetArenaNoVirtual() == NULL && min_nights_ != NULL) {
    delete min_nights_;
  }
  min_nights_ = NULL;
}
void HotelLengthOfStayInfo::clear_max_nights() {
  if (GetArenaNoVirtual() == NULL && max_nights_ != NULL) {
    delete max_nights_;
  }
  max_nights_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HotelLengthOfStayInfo::kMinNightsFieldNumber;
const int HotelLengthOfStayInfo::kMaxNightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HotelLengthOfStayInfo::HotelLengthOfStayInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelLengthOfStayInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
}
HotelLengthOfStayInfo::HotelLengthOfStayInfo(const HotelLengthOfStayInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min_nights()) {
    min_nights_ = new ::google::protobuf::Int64Value(*from.min_nights_);
  } else {
    min_nights_ = NULL;
  }
  if (from.has_max_nights()) {
    max_nights_ = new ::google::protobuf::Int64Value(*from.max_nights_);
  } else {
    max_nights_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
}

void HotelLengthOfStayInfo::SharedCtor() {
  ::memset(&min_nights_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_nights_) -
      reinterpret_cast<char*>(&min_nights_)) + sizeof(max_nights_));
}

HotelLengthOfStayInfo::~HotelLengthOfStayInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
  SharedDtor();
}

void HotelLengthOfStayInfo::SharedDtor() {
  if (this != internal_default_instance()) delete min_nights_;
  if (this != internal_default_instance()) delete max_nights_;
}

void HotelLengthOfStayInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HotelLengthOfStayInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HotelLengthOfStayInfo& HotelLengthOfStayInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelLengthOfStayInfo.base);
  return *internal_default_instance();
}


void HotelLengthOfStayInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && min_nights_ != NULL) {
    delete min_nights_;
  }
  min_nights_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_nights_ != NULL) {
    delete max_nights_;
  }
  max_nights_ = NULL;
  _internal_metadata_.Clear();
}

bool HotelLengthOfStayInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value min_nights = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_nights()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value max_nights = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_nights()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
  return false;
#undef DO_
}

void HotelLengthOfStayInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value min_nights = 1;
  if (this->has_min_nights()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_min_nights(), output);
  }

  // .google.protobuf.Int64Value max_nights = 2;
  if (this->has_max_nights()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_max_nights(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
}

::google::protobuf::uint8* HotelLengthOfStayInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value min_nights = 1;
  if (this->has_min_nights()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_min_nights(), deterministic, target);
  }

  // .google.protobuf.Int64Value max_nights = 2;
  if (this->has_max_nights()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_max_nights(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
  return target;
}

size_t HotelLengthOfStayInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Int64Value min_nights = 1;
  if (this->has_min_nights()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_nights_);
  }

  // .google.protobuf.Int64Value max_nights = 2;
  if (this->has_max_nights()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_nights_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HotelLengthOfStayInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const HotelLengthOfStayInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HotelLengthOfStayInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
    MergeFrom(*source);
  }
}

void HotelLengthOfStayInfo::MergeFrom(const HotelLengthOfStayInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_min_nights()) {
    mutable_min_nights()->::google::protobuf::Int64Value::MergeFrom(from.min_nights());
  }
  if (from.has_max_nights()) {
    mutable_max_nights()->::google::protobuf::Int64Value::MergeFrom(from.max_nights());
  }
}

void HotelLengthOfStayInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HotelLengthOfStayInfo::CopyFrom(const HotelLengthOfStayInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HotelLengthOfStayInfo::IsInitialized() const {
  return true;
}

void HotelLengthOfStayInfo::Swap(HotelLengthOfStayInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HotelLengthOfStayInfo::InternalSwap(HotelLengthOfStayInfo* other) {
  using std::swap;
  swap(min_nights_, other->min_nights_);
  swap(max_nights_, other->max_nights_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HotelLengthOfStayInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HotelCheckInDayInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HotelCheckInDayInfo::HotelCheckInDayInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelCheckInDayInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.HotelCheckInDayInfo)
}
HotelCheckInDayInfo::HotelCheckInDayInfo(const HotelCheckInDayInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.HotelCheckInDayInfo)
}

void HotelCheckInDayInfo::SharedCtor() {
}

HotelCheckInDayInfo::~HotelCheckInDayInfo() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.HotelCheckInDayInfo)
  SharedDtor();
}

void HotelCheckInDayInfo::SharedDtor() {
}

void HotelCheckInDayInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HotelCheckInDayInfo::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HotelCheckInDayInfo& HotelCheckInDayInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelCheckInDayInfo.base);
  return *internal_default_instance();
}


void HotelCheckInDayInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.HotelCheckInDayInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool HotelCheckInDayInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.HotelCheckInDayInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.HotelCheckInDayInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.HotelCheckInDayInfo)
  return false;
#undef DO_
}

void HotelCheckInDayInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.HotelCheckInDayInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.HotelCheckInDayInfo)
}

::google::protobuf::uint8* HotelCheckInDayInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.HotelCheckInDayInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.HotelCheckInDayInfo)
  return target;
}

size_t HotelCheckInDayInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.HotelCheckInDayInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HotelCheckInDayInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.HotelCheckInDayInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const HotelCheckInDayInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HotelCheckInDayInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.HotelCheckInDayInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.HotelCheckInDayInfo)
    MergeFrom(*source);
  }
}

void HotelCheckInDayInfo::MergeFrom(const HotelCheckInDayInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.HotelCheckInDayInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HotelCheckInDayInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.HotelCheckInDayInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HotelCheckInDayInfo::CopyFrom(const HotelCheckInDayInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.HotelCheckInDayInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HotelCheckInDayInfo::IsInitialized() const {
  return true;
}

void HotelCheckInDayInfo::Swap(HotelCheckInDayInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HotelCheckInDayInfo::InternalSwap(HotelCheckInDayInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HotelCheckInDayInfo::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::KeywordInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::KeywordInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::KeywordInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::LocationInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::LocationInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::LocationInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::PlatformInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::PlatformInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::PlatformInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::ListingGroupInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::ListingGroupInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::ListingGroupInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::ListingDimensionInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::ListingDimensionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::ListingDimensionInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::ListingBrandInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::ListingBrandInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::ListingBrandInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::HotelIdInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelIdInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::HotelIdInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::HotelClassInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelClassInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::HotelClassInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::HotelCountryRegionInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelCountryRegionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::HotelCountryRegionInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::HotelStateInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelStateInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::HotelStateInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::HotelCityInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelCityInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::HotelCityInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::ListingCustomAttributeInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::ListingCustomAttributeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::ListingCustomAttributeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::HotelLengthOfStayInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelLengthOfStayInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::HotelLengthOfStayInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::HotelCheckInDayInfo* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelCheckInDayInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::HotelCheckInDayInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
