// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/common/criteria.proto

#ifndef PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto
#define PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/ads/googleads/v0/enums/keyword_match_type.pb.h"
#include "google/ads/googleads/v0/enums/listing_custom_attribute_index.pb.h"
#include "google/ads/googleads/v0/enums/listing_group_type.pb.h"
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto 

namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace common {
class HotelAdvanceBookingWindowInfo;
class HotelAdvanceBookingWindowInfoDefaultTypeInternal;
extern HotelAdvanceBookingWindowInfoDefaultTypeInternal _HotelAdvanceBookingWindowInfo_default_instance_;
class HotelCheckInDayInfo;
class HotelCheckInDayInfoDefaultTypeInternal;
extern HotelCheckInDayInfoDefaultTypeInternal _HotelCheckInDayInfo_default_instance_;
class HotelCityInfo;
class HotelCityInfoDefaultTypeInternal;
extern HotelCityInfoDefaultTypeInternal _HotelCityInfo_default_instance_;
class HotelClassInfo;
class HotelClassInfoDefaultTypeInternal;
extern HotelClassInfoDefaultTypeInternal _HotelClassInfo_default_instance_;
class HotelCountryRegionInfo;
class HotelCountryRegionInfoDefaultTypeInternal;
extern HotelCountryRegionInfoDefaultTypeInternal _HotelCountryRegionInfo_default_instance_;
class HotelDateSelectionTypeInfo;
class HotelDateSelectionTypeInfoDefaultTypeInternal;
extern HotelDateSelectionTypeInfoDefaultTypeInternal _HotelDateSelectionTypeInfo_default_instance_;
class HotelIdInfo;
class HotelIdInfoDefaultTypeInternal;
extern HotelIdInfoDefaultTypeInternal _HotelIdInfo_default_instance_;
class HotelLengthOfStayInfo;
class HotelLengthOfStayInfoDefaultTypeInternal;
extern HotelLengthOfStayInfoDefaultTypeInternal _HotelLengthOfStayInfo_default_instance_;
class HotelStateInfo;
class HotelStateInfoDefaultTypeInternal;
extern HotelStateInfoDefaultTypeInternal _HotelStateInfo_default_instance_;
class KeywordInfo;
class KeywordInfoDefaultTypeInternal;
extern KeywordInfoDefaultTypeInternal _KeywordInfo_default_instance_;
class ListingBrandInfo;
class ListingBrandInfoDefaultTypeInternal;
extern ListingBrandInfoDefaultTypeInternal _ListingBrandInfo_default_instance_;
class ListingCustomAttributeInfo;
class ListingCustomAttributeInfoDefaultTypeInternal;
extern ListingCustomAttributeInfoDefaultTypeInternal _ListingCustomAttributeInfo_default_instance_;
class ListingDimensionInfo;
class ListingDimensionInfoDefaultTypeInternal;
extern ListingDimensionInfoDefaultTypeInternal _ListingDimensionInfo_default_instance_;
class ListingGroupInfo;
class ListingGroupInfoDefaultTypeInternal;
extern ListingGroupInfoDefaultTypeInternal _ListingGroupInfo_default_instance_;
class LocationInfo;
class LocationInfoDefaultTypeInternal;
extern LocationInfoDefaultTypeInternal _LocationInfo_default_instance_;
class PlatformInfo;
class PlatformInfoDefaultTypeInternal;
extern PlatformInfoDefaultTypeInternal _PlatformInfo_default_instance_;
}  // namespace common
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::HotelCheckInDayInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::HotelCheckInDayInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::HotelCityInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::HotelCityInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::HotelClassInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::HotelClassInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::HotelCountryRegionInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::HotelCountryRegionInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::HotelIdInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::HotelIdInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::HotelLengthOfStayInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::HotelLengthOfStayInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::HotelStateInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::HotelStateInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::KeywordInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::KeywordInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::ListingBrandInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::ListingBrandInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::ListingCustomAttributeInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::ListingCustomAttributeInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::ListingDimensionInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::ListingDimensionInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::ListingGroupInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::ListingGroupInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::LocationInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::LocationInfo>(Arena*);
template<> ::google::ads::googleads::v0::common::PlatformInfo* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::PlatformInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace common {

// ===================================================================

class KeywordInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.KeywordInfo) */ {
 public:
  KeywordInfo();
  virtual ~KeywordInfo();

  KeywordInfo(const KeywordInfo& from);

  inline KeywordInfo& operator=(const KeywordInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeywordInfo(KeywordInfo&& from) noexcept
    : KeywordInfo() {
    *this = ::std::move(from);
  }

  inline KeywordInfo& operator=(KeywordInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KeywordInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeywordInfo* internal_default_instance() {
    return reinterpret_cast<const KeywordInfo*>(
               &_KeywordInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(KeywordInfo* other);
  friend void swap(KeywordInfo& a, KeywordInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeywordInfo* New() const final {
    return CreateMaybeMessage<KeywordInfo>(NULL);
  }

  KeywordInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<KeywordInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const KeywordInfo& from);
  void MergeFrom(const KeywordInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeywordInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.StringValue text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  private:
  const ::google::protobuf::StringValue& _internal_text() const;
  public:
  const ::google::protobuf::StringValue& text() const;
  ::google::protobuf::StringValue* release_text();
  ::google::protobuf::StringValue* mutable_text();
  void set_allocated_text(::google::protobuf::StringValue* text);

  // .google.ads.googleads.v0.enums.KeywordMatchTypeEnum.KeywordMatchType match_type = 2;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 2;
  ::google::ads::googleads::v0::enums::KeywordMatchTypeEnum_KeywordMatchType match_type() const;
  void set_match_type(::google::ads::googleads::v0::enums::KeywordMatchTypeEnum_KeywordMatchType value);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.KeywordInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::StringValue* text_;
  int match_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LocationInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.LocationInfo) */ {
 public:
  LocationInfo();
  virtual ~LocationInfo();

  LocationInfo(const LocationInfo& from);

  inline LocationInfo& operator=(const LocationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocationInfo(LocationInfo&& from) noexcept
    : LocationInfo() {
    *this = ::std::move(from);
  }

  inline LocationInfo& operator=(LocationInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocationInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocationInfo* internal_default_instance() {
    return reinterpret_cast<const LocationInfo*>(
               &_LocationInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LocationInfo* other);
  friend void swap(LocationInfo& a, LocationInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocationInfo* New() const final {
    return CreateMaybeMessage<LocationInfo>(NULL);
  }

  LocationInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocationInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocationInfo& from);
  void MergeFrom(const LocationInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocationInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.LocationInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlatformInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.PlatformInfo) */ {
 public:
  PlatformInfo();
  virtual ~PlatformInfo();

  PlatformInfo(const PlatformInfo& from);

  inline PlatformInfo& operator=(const PlatformInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformInfo(PlatformInfo&& from) noexcept
    : PlatformInfo() {
    *this = ::std::move(from);
  }

  inline PlatformInfo& operator=(PlatformInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlatformInfo* internal_default_instance() {
    return reinterpret_cast<const PlatformInfo*>(
               &_PlatformInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PlatformInfo* other);
  friend void swap(PlatformInfo& a, PlatformInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformInfo* New() const final {
    return CreateMaybeMessage<PlatformInfo>(NULL);
  }

  PlatformInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlatformInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlatformInfo& from);
  void MergeFrom(const PlatformInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlatformInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.PlatformInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListingGroupInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.ListingGroupInfo) */ {
 public:
  ListingGroupInfo();
  virtual ~ListingGroupInfo();

  ListingGroupInfo(const ListingGroupInfo& from);

  inline ListingGroupInfo& operator=(const ListingGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListingGroupInfo(ListingGroupInfo&& from) noexcept
    : ListingGroupInfo() {
    *this = ::std::move(from);
  }

  inline ListingGroupInfo& operator=(ListingGroupInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListingGroupInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListingGroupInfo* internal_default_instance() {
    return reinterpret_cast<const ListingGroupInfo*>(
               &_ListingGroupInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ListingGroupInfo* other);
  friend void swap(ListingGroupInfo& a, ListingGroupInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListingGroupInfo* New() const final {
    return CreateMaybeMessage<ListingGroupInfo>(NULL);
  }

  ListingGroupInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListingGroupInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListingGroupInfo& from);
  void MergeFrom(const ListingGroupInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListingGroupInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.ads.googleads.v0.common.ListingDimensionInfo case_value = 2;
  bool has_case_value() const;
  void clear_case_value();
  static const int kCaseValueFieldNumber = 2;
  private:
  const ::google::ads::googleads::v0::common::ListingDimensionInfo& _internal_case_value() const;
  public:
  const ::google::ads::googleads::v0::common::ListingDimensionInfo& case_value() const;
  ::google::ads::googleads::v0::common::ListingDimensionInfo* release_case_value();
  ::google::ads::googleads::v0::common::ListingDimensionInfo* mutable_case_value();
  void set_allocated_case_value(::google::ads::googleads::v0::common::ListingDimensionInfo* case_value);

  // .google.protobuf.Int64Value parent_criterion_id = 3;
  bool has_parent_criterion_id() const;
  void clear_parent_criterion_id();
  static const int kParentCriterionIdFieldNumber = 3;
  private:
  const ::google::protobuf::Int64Value& _internal_parent_criterion_id() const;
  public:
  const ::google::protobuf::Int64Value& parent_criterion_id() const;
  ::google::protobuf::Int64Value* release_parent_criterion_id();
  ::google::protobuf::Int64Value* mutable_parent_criterion_id();
  void set_allocated_parent_criterion_id(::google::protobuf::Int64Value* parent_criterion_id);

  // .google.ads.googleads.v0.enums.ListingGroupTypeEnum.ListingGroupType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::ads::googleads::v0::enums::ListingGroupTypeEnum_ListingGroupType type() const;
  void set_type(::google::ads::googleads::v0::enums::ListingGroupTypeEnum_ListingGroupType value);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.ListingGroupInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::ads::googleads::v0::common::ListingDimensionInfo* case_value_;
  ::google::protobuf::Int64Value* parent_criterion_id_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListingDimensionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.ListingDimensionInfo) */ {
 public:
  ListingDimensionInfo();
  virtual ~ListingDimensionInfo();

  ListingDimensionInfo(const ListingDimensionInfo& from);

  inline ListingDimensionInfo& operator=(const ListingDimensionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListingDimensionInfo(ListingDimensionInfo&& from) noexcept
    : ListingDimensionInfo() {
    *this = ::std::move(from);
  }

  inline ListingDimensionInfo& operator=(ListingDimensionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListingDimensionInfo& default_instance();

  enum DimensionCase {
    kListingBrand = 1,
    kHotelId = 2,
    kHotelClass = 3,
    kHotelCountryRegion = 4,
    kHotelState = 5,
    kHotelCity = 6,
    kListingCustomAttribute = 7,
    DIMENSION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListingDimensionInfo* internal_default_instance() {
    return reinterpret_cast<const ListingDimensionInfo*>(
               &_ListingDimensionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ListingDimensionInfo* other);
  friend void swap(ListingDimensionInfo& a, ListingDimensionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListingDimensionInfo* New() const final {
    return CreateMaybeMessage<ListingDimensionInfo>(NULL);
  }

  ListingDimensionInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListingDimensionInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListingDimensionInfo& from);
  void MergeFrom(const ListingDimensionInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListingDimensionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.ads.googleads.v0.common.ListingBrandInfo listing_brand = 1;
  bool has_listing_brand() const;
  void clear_listing_brand();
  static const int kListingBrandFieldNumber = 1;
  private:
  const ::google::ads::googleads::v0::common::ListingBrandInfo& _internal_listing_brand() const;
  public:
  const ::google::ads::googleads::v0::common::ListingBrandInfo& listing_brand() const;
  ::google::ads::googleads::v0::common::ListingBrandInfo* release_listing_brand();
  ::google::ads::googleads::v0::common::ListingBrandInfo* mutable_listing_brand();
  void set_allocated_listing_brand(::google::ads::googleads::v0::common::ListingBrandInfo* listing_brand);

  // .google.ads.googleads.v0.common.HotelIdInfo hotel_id = 2;
  bool has_hotel_id() const;
  void clear_hotel_id();
  static const int kHotelIdFieldNumber = 2;
  private:
  const ::google::ads::googleads::v0::common::HotelIdInfo& _internal_hotel_id() const;
  public:
  const ::google::ads::googleads::v0::common::HotelIdInfo& hotel_id() const;
  ::google::ads::googleads::v0::common::HotelIdInfo* release_hotel_id();
  ::google::ads::googleads::v0::common::HotelIdInfo* mutable_hotel_id();
  void set_allocated_hotel_id(::google::ads::googleads::v0::common::HotelIdInfo* hotel_id);

  // .google.ads.googleads.v0.common.HotelClassInfo hotel_class = 3;
  bool has_hotel_class() const;
  void clear_hotel_class();
  static const int kHotelClassFieldNumber = 3;
  private:
  const ::google::ads::googleads::v0::common::HotelClassInfo& _internal_hotel_class() const;
  public:
  const ::google::ads::googleads::v0::common::HotelClassInfo& hotel_class() const;
  ::google::ads::googleads::v0::common::HotelClassInfo* release_hotel_class();
  ::google::ads::googleads::v0::common::HotelClassInfo* mutable_hotel_class();
  void set_allocated_hotel_class(::google::ads::googleads::v0::common::HotelClassInfo* hotel_class);

  // .google.ads.googleads.v0.common.HotelCountryRegionInfo hotel_country_region = 4;
  bool has_hotel_country_region() const;
  void clear_hotel_country_region();
  static const int kHotelCountryRegionFieldNumber = 4;
  private:
  const ::google::ads::googleads::v0::common::HotelCountryRegionInfo& _internal_hotel_country_region() const;
  public:
  const ::google::ads::googleads::v0::common::HotelCountryRegionInfo& hotel_country_region() const;
  ::google::ads::googleads::v0::common::HotelCountryRegionInfo* release_hotel_country_region();
  ::google::ads::googleads::v0::common::HotelCountryRegionInfo* mutable_hotel_country_region();
  void set_allocated_hotel_country_region(::google::ads::googleads::v0::common::HotelCountryRegionInfo* hotel_country_region);

  // .google.ads.googleads.v0.common.HotelStateInfo hotel_state = 5;
  bool has_hotel_state() const;
  void clear_hotel_state();
  static const int kHotelStateFieldNumber = 5;
  private:
  const ::google::ads::googleads::v0::common::HotelStateInfo& _internal_hotel_state() const;
  public:
  const ::google::ads::googleads::v0::common::HotelStateInfo& hotel_state() const;
  ::google::ads::googleads::v0::common::HotelStateInfo* release_hotel_state();
  ::google::ads::googleads::v0::common::HotelStateInfo* mutable_hotel_state();
  void set_allocated_hotel_state(::google::ads::googleads::v0::common::HotelStateInfo* hotel_state);

  // .google.ads.googleads.v0.common.HotelCityInfo hotel_city = 6;
  bool has_hotel_city() const;
  void clear_hotel_city();
  static const int kHotelCityFieldNumber = 6;
  private:
  const ::google::ads::googleads::v0::common::HotelCityInfo& _internal_hotel_city() const;
  public:
  const ::google::ads::googleads::v0::common::HotelCityInfo& hotel_city() const;
  ::google::ads::googleads::v0::common::HotelCityInfo* release_hotel_city();
  ::google::ads::googleads::v0::common::HotelCityInfo* mutable_hotel_city();
  void set_allocated_hotel_city(::google::ads::googleads::v0::common::HotelCityInfo* hotel_city);

  // .google.ads.googleads.v0.common.ListingCustomAttributeInfo listing_custom_attribute = 7;
  bool has_listing_custom_attribute() const;
  void clear_listing_custom_attribute();
  static const int kListingCustomAttributeFieldNumber = 7;
  private:
  const ::google::ads::googleads::v0::common::ListingCustomAttributeInfo& _internal_listing_custom_attribute() const;
  public:
  const ::google::ads::googleads::v0::common::ListingCustomAttributeInfo& listing_custom_attribute() const;
  ::google::ads::googleads::v0::common::ListingCustomAttributeInfo* release_listing_custom_attribute();
  ::google::ads::googleads::v0::common::ListingCustomAttributeInfo* mutable_listing_custom_attribute();
  void set_allocated_listing_custom_attribute(::google::ads::googleads::v0::common::ListingCustomAttributeInfo* listing_custom_attribute);

  void clear_dimension();
  DimensionCase dimension_case() const;
  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.ListingDimensionInfo)
 private:
  void set_has_listing_brand();
  void set_has_hotel_id();
  void set_has_hotel_class();
  void set_has_hotel_country_region();
  void set_has_hotel_state();
  void set_has_hotel_city();
  void set_has_listing_custom_attribute();

  inline bool has_dimension() const;
  inline void clear_has_dimension();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union DimensionUnion {
    DimensionUnion() {}
    ::google::ads::googleads::v0::common::ListingBrandInfo* listing_brand_;
    ::google::ads::googleads::v0::common::HotelIdInfo* hotel_id_;
    ::google::ads::googleads::v0::common::HotelClassInfo* hotel_class_;
    ::google::ads::googleads::v0::common::HotelCountryRegionInfo* hotel_country_region_;
    ::google::ads::googleads::v0::common::HotelStateInfo* hotel_state_;
    ::google::ads::googleads::v0::common::HotelCityInfo* hotel_city_;
    ::google::ads::googleads::v0::common::ListingCustomAttributeInfo* listing_custom_attribute_;
  } dimension_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListingBrandInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.ListingBrandInfo) */ {
 public:
  ListingBrandInfo();
  virtual ~ListingBrandInfo();

  ListingBrandInfo(const ListingBrandInfo& from);

  inline ListingBrandInfo& operator=(const ListingBrandInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListingBrandInfo(ListingBrandInfo&& from) noexcept
    : ListingBrandInfo() {
    *this = ::std::move(from);
  }

  inline ListingBrandInfo& operator=(ListingBrandInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListingBrandInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListingBrandInfo* internal_default_instance() {
    return reinterpret_cast<const ListingBrandInfo*>(
               &_ListingBrandInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ListingBrandInfo* other);
  friend void swap(ListingBrandInfo& a, ListingBrandInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListingBrandInfo* New() const final {
    return CreateMaybeMessage<ListingBrandInfo>(NULL);
  }

  ListingBrandInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListingBrandInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListingBrandInfo& from);
  void MergeFrom(const ListingBrandInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListingBrandInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.StringValue value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  private:
  const ::google::protobuf::StringValue& _internal_value() const;
  public:
  const ::google::protobuf::StringValue& value() const;
  ::google::protobuf::StringValue* release_value();
  ::google::protobuf::StringValue* mutable_value();
  void set_allocated_value(::google::protobuf::StringValue* value);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.ListingBrandInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::StringValue* value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HotelIdInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.HotelIdInfo) */ {
 public:
  HotelIdInfo();
  virtual ~HotelIdInfo();

  HotelIdInfo(const HotelIdInfo& from);

  inline HotelIdInfo& operator=(const HotelIdInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HotelIdInfo(HotelIdInfo&& from) noexcept
    : HotelIdInfo() {
    *this = ::std::move(from);
  }

  inline HotelIdInfo& operator=(HotelIdInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HotelIdInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HotelIdInfo* internal_default_instance() {
    return reinterpret_cast<const HotelIdInfo*>(
               &_HotelIdInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(HotelIdInfo* other);
  friend void swap(HotelIdInfo& a, HotelIdInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HotelIdInfo* New() const final {
    return CreateMaybeMessage<HotelIdInfo>(NULL);
  }

  HotelIdInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HotelIdInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HotelIdInfo& from);
  void MergeFrom(const HotelIdInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HotelIdInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.StringValue value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  private:
  const ::google::protobuf::StringValue& _internal_value() const;
  public:
  const ::google::protobuf::StringValue& value() const;
  ::google::protobuf::StringValue* release_value();
  ::google::protobuf::StringValue* mutable_value();
  void set_allocated_value(::google::protobuf::StringValue* value);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.HotelIdInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::StringValue* value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HotelClassInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.HotelClassInfo) */ {
 public:
  HotelClassInfo();
  virtual ~HotelClassInfo();

  HotelClassInfo(const HotelClassInfo& from);

  inline HotelClassInfo& operator=(const HotelClassInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HotelClassInfo(HotelClassInfo&& from) noexcept
    : HotelClassInfo() {
    *this = ::std::move(from);
  }

  inline HotelClassInfo& operator=(HotelClassInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HotelClassInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HotelClassInfo* internal_default_instance() {
    return reinterpret_cast<const HotelClassInfo*>(
               &_HotelClassInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(HotelClassInfo* other);
  friend void swap(HotelClassInfo& a, HotelClassInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HotelClassInfo* New() const final {
    return CreateMaybeMessage<HotelClassInfo>(NULL);
  }

  HotelClassInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HotelClassInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HotelClassInfo& from);
  void MergeFrom(const HotelClassInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HotelClassInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_value() const;
  public:
  const ::google::protobuf::Int64Value& value() const;
  ::google::protobuf::Int64Value* release_value();
  ::google::protobuf::Int64Value* mutable_value();
  void set_allocated_value(::google::protobuf::Int64Value* value);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.HotelClassInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Int64Value* value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HotelCountryRegionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.HotelCountryRegionInfo) */ {
 public:
  HotelCountryRegionInfo();
  virtual ~HotelCountryRegionInfo();

  HotelCountryRegionInfo(const HotelCountryRegionInfo& from);

  inline HotelCountryRegionInfo& operator=(const HotelCountryRegionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HotelCountryRegionInfo(HotelCountryRegionInfo&& from) noexcept
    : HotelCountryRegionInfo() {
    *this = ::std::move(from);
  }

  inline HotelCountryRegionInfo& operator=(HotelCountryRegionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HotelCountryRegionInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HotelCountryRegionInfo* internal_default_instance() {
    return reinterpret_cast<const HotelCountryRegionInfo*>(
               &_HotelCountryRegionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(HotelCountryRegionInfo* other);
  friend void swap(HotelCountryRegionInfo& a, HotelCountryRegionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HotelCountryRegionInfo* New() const final {
    return CreateMaybeMessage<HotelCountryRegionInfo>(NULL);
  }

  HotelCountryRegionInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HotelCountryRegionInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HotelCountryRegionInfo& from);
  void MergeFrom(const HotelCountryRegionInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HotelCountryRegionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.StringValue country_region_criterion = 1;
  bool has_country_region_criterion() const;
  void clear_country_region_criterion();
  static const int kCountryRegionCriterionFieldNumber = 1;
  private:
  const ::google::protobuf::StringValue& _internal_country_region_criterion() const;
  public:
  const ::google::protobuf::StringValue& country_region_criterion() const;
  ::google::protobuf::StringValue* release_country_region_criterion();
  ::google::protobuf::StringValue* mutable_country_region_criterion();
  void set_allocated_country_region_criterion(::google::protobuf::StringValue* country_region_criterion);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.HotelCountryRegionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::StringValue* country_region_criterion_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HotelStateInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.HotelStateInfo) */ {
 public:
  HotelStateInfo();
  virtual ~HotelStateInfo();

  HotelStateInfo(const HotelStateInfo& from);

  inline HotelStateInfo& operator=(const HotelStateInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HotelStateInfo(HotelStateInfo&& from) noexcept
    : HotelStateInfo() {
    *this = ::std::move(from);
  }

  inline HotelStateInfo& operator=(HotelStateInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HotelStateInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HotelStateInfo* internal_default_instance() {
    return reinterpret_cast<const HotelStateInfo*>(
               &_HotelStateInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(HotelStateInfo* other);
  friend void swap(HotelStateInfo& a, HotelStateInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HotelStateInfo* New() const final {
    return CreateMaybeMessage<HotelStateInfo>(NULL);
  }

  HotelStateInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HotelStateInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HotelStateInfo& from);
  void MergeFrom(const HotelStateInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HotelStateInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.StringValue state_criterion = 1;
  bool has_state_criterion() const;
  void clear_state_criterion();
  static const int kStateCriterionFieldNumber = 1;
  private:
  const ::google::protobuf::StringValue& _internal_state_criterion() const;
  public:
  const ::google::protobuf::StringValue& state_criterion() const;
  ::google::protobuf::StringValue* release_state_criterion();
  ::google::protobuf::StringValue* mutable_state_criterion();
  void set_allocated_state_criterion(::google::protobuf::StringValue* state_criterion);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.HotelStateInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::StringValue* state_criterion_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HotelCityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.HotelCityInfo) */ {
 public:
  HotelCityInfo();
  virtual ~HotelCityInfo();

  HotelCityInfo(const HotelCityInfo& from);

  inline HotelCityInfo& operator=(const HotelCityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HotelCityInfo(HotelCityInfo&& from) noexcept
    : HotelCityInfo() {
    *this = ::std::move(from);
  }

  inline HotelCityInfo& operator=(HotelCityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HotelCityInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HotelCityInfo* internal_default_instance() {
    return reinterpret_cast<const HotelCityInfo*>(
               &_HotelCityInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(HotelCityInfo* other);
  friend void swap(HotelCityInfo& a, HotelCityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HotelCityInfo* New() const final {
    return CreateMaybeMessage<HotelCityInfo>(NULL);
  }

  HotelCityInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HotelCityInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HotelCityInfo& from);
  void MergeFrom(const HotelCityInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HotelCityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.StringValue city_criterion = 1;
  bool has_city_criterion() const;
  void clear_city_criterion();
  static const int kCityCriterionFieldNumber = 1;
  private:
  const ::google::protobuf::StringValue& _internal_city_criterion() const;
  public:
  const ::google::protobuf::StringValue& city_criterion() const;
  ::google::protobuf::StringValue* release_city_criterion();
  ::google::protobuf::StringValue* mutable_city_criterion();
  void set_allocated_city_criterion(::google::protobuf::StringValue* city_criterion);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.HotelCityInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::StringValue* city_criterion_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListingCustomAttributeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.ListingCustomAttributeInfo) */ {
 public:
  ListingCustomAttributeInfo();
  virtual ~ListingCustomAttributeInfo();

  ListingCustomAttributeInfo(const ListingCustomAttributeInfo& from);

  inline ListingCustomAttributeInfo& operator=(const ListingCustomAttributeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListingCustomAttributeInfo(ListingCustomAttributeInfo&& from) noexcept
    : ListingCustomAttributeInfo() {
    *this = ::std::move(from);
  }

  inline ListingCustomAttributeInfo& operator=(ListingCustomAttributeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListingCustomAttributeInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListingCustomAttributeInfo* internal_default_instance() {
    return reinterpret_cast<const ListingCustomAttributeInfo*>(
               &_ListingCustomAttributeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ListingCustomAttributeInfo* other);
  friend void swap(ListingCustomAttributeInfo& a, ListingCustomAttributeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListingCustomAttributeInfo* New() const final {
    return CreateMaybeMessage<ListingCustomAttributeInfo>(NULL);
  }

  ListingCustomAttributeInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListingCustomAttributeInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListingCustomAttributeInfo& from);
  void MergeFrom(const ListingCustomAttributeInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListingCustomAttributeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.StringValue value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  private:
  const ::google::protobuf::StringValue& _internal_value() const;
  public:
  const ::google::protobuf::StringValue& value() const;
  ::google::protobuf::StringValue* release_value();
  ::google::protobuf::StringValue* mutable_value();
  void set_allocated_value(::google::protobuf::StringValue* value);

  // .google.ads.googleads.v0.enums.ListingCustomAttributeIndexEnum.ListingCustomAttributeIndex index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::ads::googleads::v0::enums::ListingCustomAttributeIndexEnum_ListingCustomAttributeIndex index() const;
  void set_index(::google::ads::googleads::v0::enums::ListingCustomAttributeIndexEnum_ListingCustomAttributeIndex value);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.ListingCustomAttributeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::StringValue* value_;
  int index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HotelDateSelectionTypeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo) */ {
 public:
  HotelDateSelectionTypeInfo();
  virtual ~HotelDateSelectionTypeInfo();

  HotelDateSelectionTypeInfo(const HotelDateSelectionTypeInfo& from);

  inline HotelDateSelectionTypeInfo& operator=(const HotelDateSelectionTypeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HotelDateSelectionTypeInfo(HotelDateSelectionTypeInfo&& from) noexcept
    : HotelDateSelectionTypeInfo() {
    *this = ::std::move(from);
  }

  inline HotelDateSelectionTypeInfo& operator=(HotelDateSelectionTypeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HotelDateSelectionTypeInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HotelDateSelectionTypeInfo* internal_default_instance() {
    return reinterpret_cast<const HotelDateSelectionTypeInfo*>(
               &_HotelDateSelectionTypeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(HotelDateSelectionTypeInfo* other);
  friend void swap(HotelDateSelectionTypeInfo& a, HotelDateSelectionTypeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HotelDateSelectionTypeInfo* New() const final {
    return CreateMaybeMessage<HotelDateSelectionTypeInfo>(NULL);
  }

  HotelDateSelectionTypeInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HotelDateSelectionTypeInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HotelDateSelectionTypeInfo& from);
  void MergeFrom(const HotelDateSelectionTypeInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HotelDateSelectionTypeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.HotelDateSelectionTypeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HotelAdvanceBookingWindowInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo) */ {
 public:
  HotelAdvanceBookingWindowInfo();
  virtual ~HotelAdvanceBookingWindowInfo();

  HotelAdvanceBookingWindowInfo(const HotelAdvanceBookingWindowInfo& from);

  inline HotelAdvanceBookingWindowInfo& operator=(const HotelAdvanceBookingWindowInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HotelAdvanceBookingWindowInfo(HotelAdvanceBookingWindowInfo&& from) noexcept
    : HotelAdvanceBookingWindowInfo() {
    *this = ::std::move(from);
  }

  inline HotelAdvanceBookingWindowInfo& operator=(HotelAdvanceBookingWindowInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HotelAdvanceBookingWindowInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HotelAdvanceBookingWindowInfo* internal_default_instance() {
    return reinterpret_cast<const HotelAdvanceBookingWindowInfo*>(
               &_HotelAdvanceBookingWindowInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(HotelAdvanceBookingWindowInfo* other);
  friend void swap(HotelAdvanceBookingWindowInfo& a, HotelAdvanceBookingWindowInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HotelAdvanceBookingWindowInfo* New() const final {
    return CreateMaybeMessage<HotelAdvanceBookingWindowInfo>(NULL);
  }

  HotelAdvanceBookingWindowInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HotelAdvanceBookingWindowInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HotelAdvanceBookingWindowInfo& from);
  void MergeFrom(const HotelAdvanceBookingWindowInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HotelAdvanceBookingWindowInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value min_days = 1;
  bool has_min_days() const;
  void clear_min_days();
  static const int kMinDaysFieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_min_days() const;
  public:
  const ::google::protobuf::Int64Value& min_days() const;
  ::google::protobuf::Int64Value* release_min_days();
  ::google::protobuf::Int64Value* mutable_min_days();
  void set_allocated_min_days(::google::protobuf::Int64Value* min_days);

  // .google.protobuf.Int64Value max_days = 2;
  bool has_max_days() const;
  void clear_max_days();
  static const int kMaxDaysFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_max_days() const;
  public:
  const ::google::protobuf::Int64Value& max_days() const;
  ::google::protobuf::Int64Value* release_max_days();
  ::google::protobuf::Int64Value* mutable_max_days();
  void set_allocated_max_days(::google::protobuf::Int64Value* max_days);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Int64Value* min_days_;
  ::google::protobuf::Int64Value* max_days_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HotelLengthOfStayInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.HotelLengthOfStayInfo) */ {
 public:
  HotelLengthOfStayInfo();
  virtual ~HotelLengthOfStayInfo();

  HotelLengthOfStayInfo(const HotelLengthOfStayInfo& from);

  inline HotelLengthOfStayInfo& operator=(const HotelLengthOfStayInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HotelLengthOfStayInfo(HotelLengthOfStayInfo&& from) noexcept
    : HotelLengthOfStayInfo() {
    *this = ::std::move(from);
  }

  inline HotelLengthOfStayInfo& operator=(HotelLengthOfStayInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HotelLengthOfStayInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HotelLengthOfStayInfo* internal_default_instance() {
    return reinterpret_cast<const HotelLengthOfStayInfo*>(
               &_HotelLengthOfStayInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(HotelLengthOfStayInfo* other);
  friend void swap(HotelLengthOfStayInfo& a, HotelLengthOfStayInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HotelLengthOfStayInfo* New() const final {
    return CreateMaybeMessage<HotelLengthOfStayInfo>(NULL);
  }

  HotelLengthOfStayInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HotelLengthOfStayInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HotelLengthOfStayInfo& from);
  void MergeFrom(const HotelLengthOfStayInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HotelLengthOfStayInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value min_nights = 1;
  bool has_min_nights() const;
  void clear_min_nights();
  static const int kMinNightsFieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_min_nights() const;
  public:
  const ::google::protobuf::Int64Value& min_nights() const;
  ::google::protobuf::Int64Value* release_min_nights();
  ::google::protobuf::Int64Value* mutable_min_nights();
  void set_allocated_min_nights(::google::protobuf::Int64Value* min_nights);

  // .google.protobuf.Int64Value max_nights = 2;
  bool has_max_nights() const;
  void clear_max_nights();
  static const int kMaxNightsFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_max_nights() const;
  public:
  const ::google::protobuf::Int64Value& max_nights() const;
  ::google::protobuf::Int64Value* release_max_nights();
  ::google::protobuf::Int64Value* mutable_max_nights();
  void set_allocated_max_nights(::google::protobuf::Int64Value* max_nights);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.HotelLengthOfStayInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Int64Value* min_nights_;
  ::google::protobuf::Int64Value* max_nights_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HotelCheckInDayInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.HotelCheckInDayInfo) */ {
 public:
  HotelCheckInDayInfo();
  virtual ~HotelCheckInDayInfo();

  HotelCheckInDayInfo(const HotelCheckInDayInfo& from);

  inline HotelCheckInDayInfo& operator=(const HotelCheckInDayInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HotelCheckInDayInfo(HotelCheckInDayInfo&& from) noexcept
    : HotelCheckInDayInfo() {
    *this = ::std::move(from);
  }

  inline HotelCheckInDayInfo& operator=(HotelCheckInDayInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HotelCheckInDayInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HotelCheckInDayInfo* internal_default_instance() {
    return reinterpret_cast<const HotelCheckInDayInfo*>(
               &_HotelCheckInDayInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(HotelCheckInDayInfo* other);
  friend void swap(HotelCheckInDayInfo& a, HotelCheckInDayInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HotelCheckInDayInfo* New() const final {
    return CreateMaybeMessage<HotelCheckInDayInfo>(NULL);
  }

  HotelCheckInDayInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HotelCheckInDayInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HotelCheckInDayInfo& from);
  void MergeFrom(const HotelCheckInDayInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HotelCheckInDayInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.HotelCheckInDayInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// KeywordInfo

// .google.protobuf.StringValue text = 1;
inline bool KeywordInfo::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::protobuf::StringValue& KeywordInfo::_internal_text() const {
  return *text_;
}
inline const ::google::protobuf::StringValue& KeywordInfo::text() const {
  const ::google::protobuf::StringValue* p = text_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.KeywordInfo.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* KeywordInfo::release_text() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.KeywordInfo.text)
  
  ::google::protobuf::StringValue* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* KeywordInfo::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.KeywordInfo.text)
  return text_;
}
inline void KeywordInfo::set_allocated_text(::google::protobuf::StringValue* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(text)->GetArena();
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.KeywordInfo.text)
}

// .google.ads.googleads.v0.enums.KeywordMatchTypeEnum.KeywordMatchType match_type = 2;
inline void KeywordInfo::clear_match_type() {
  match_type_ = 0;
}
inline ::google::ads::googleads::v0::enums::KeywordMatchTypeEnum_KeywordMatchType KeywordInfo::match_type() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.KeywordInfo.match_type)
  return static_cast< ::google::ads::googleads::v0::enums::KeywordMatchTypeEnum_KeywordMatchType >(match_type_);
}
inline void KeywordInfo::set_match_type(::google::ads::googleads::v0::enums::KeywordMatchTypeEnum_KeywordMatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.common.KeywordInfo.match_type)
}

// -------------------------------------------------------------------

// LocationInfo

// -------------------------------------------------------------------

// PlatformInfo

// -------------------------------------------------------------------

// ListingGroupInfo

// .google.ads.googleads.v0.enums.ListingGroupTypeEnum.ListingGroupType type = 1;
inline void ListingGroupInfo::clear_type() {
  type_ = 0;
}
inline ::google::ads::googleads::v0::enums::ListingGroupTypeEnum_ListingGroupType ListingGroupInfo::type() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ListingGroupInfo.type)
  return static_cast< ::google::ads::googleads::v0::enums::ListingGroupTypeEnum_ListingGroupType >(type_);
}
inline void ListingGroupInfo::set_type(::google::ads::googleads::v0::enums::ListingGroupTypeEnum_ListingGroupType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.common.ListingGroupInfo.type)
}

// .google.ads.googleads.v0.common.ListingDimensionInfo case_value = 2;
inline bool ListingGroupInfo::has_case_value() const {
  return this != internal_default_instance() && case_value_ != NULL;
}
inline void ListingGroupInfo::clear_case_value() {
  if (GetArenaNoVirtual() == NULL && case_value_ != NULL) {
    delete case_value_;
  }
  case_value_ = NULL;
}
inline const ::google::ads::googleads::v0::common::ListingDimensionInfo& ListingGroupInfo::_internal_case_value() const {
  return *case_value_;
}
inline const ::google::ads::googleads::v0::common::ListingDimensionInfo& ListingGroupInfo::case_value() const {
  const ::google::ads::googleads::v0::common::ListingDimensionInfo* p = case_value_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ListingGroupInfo.case_value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::common::ListingDimensionInfo*>(
      &::google::ads::googleads::v0::common::_ListingDimensionInfo_default_instance_);
}
inline ::google::ads::googleads::v0::common::ListingDimensionInfo* ListingGroupInfo::release_case_value() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.ListingGroupInfo.case_value)
  
  ::google::ads::googleads::v0::common::ListingDimensionInfo* temp = case_value_;
  case_value_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::common::ListingDimensionInfo* ListingGroupInfo::mutable_case_value() {
  
  if (case_value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::common::ListingDimensionInfo>(GetArenaNoVirtual());
    case_value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.ListingGroupInfo.case_value)
  return case_value_;
}
inline void ListingGroupInfo::set_allocated_case_value(::google::ads::googleads::v0::common::ListingDimensionInfo* case_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete case_value_;
  }
  if (case_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      case_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, case_value, submessage_arena);
    }
    
  } else {
    
  }
  case_value_ = case_value;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.ListingGroupInfo.case_value)
}

// .google.protobuf.Int64Value parent_criterion_id = 3;
inline bool ListingGroupInfo::has_parent_criterion_id() const {
  return this != internal_default_instance() && parent_criterion_id_ != NULL;
}
inline const ::google::protobuf::Int64Value& ListingGroupInfo::_internal_parent_criterion_id() const {
  return *parent_criterion_id_;
}
inline const ::google::protobuf::Int64Value& ListingGroupInfo::parent_criterion_id() const {
  const ::google::protobuf::Int64Value* p = parent_criterion_id_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ListingGroupInfo.parent_criterion_id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* ListingGroupInfo::release_parent_criterion_id() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.ListingGroupInfo.parent_criterion_id)
  
  ::google::protobuf::Int64Value* temp = parent_criterion_id_;
  parent_criterion_id_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* ListingGroupInfo::mutable_parent_criterion_id() {
  
  if (parent_criterion_id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    parent_criterion_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.ListingGroupInfo.parent_criterion_id)
  return parent_criterion_id_;
}
inline void ListingGroupInfo::set_allocated_parent_criterion_id(::google::protobuf::Int64Value* parent_criterion_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(parent_criterion_id_);
  }
  if (parent_criterion_id) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(parent_criterion_id)->GetArena();
    if (message_arena != submessage_arena) {
      parent_criterion_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parent_criterion_id, submessage_arena);
    }
    
  } else {
    
  }
  parent_criterion_id_ = parent_criterion_id;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.ListingGroupInfo.parent_criterion_id)
}

// -------------------------------------------------------------------

// ListingDimensionInfo

// .google.ads.googleads.v0.common.ListingBrandInfo listing_brand = 1;
inline bool ListingDimensionInfo::has_listing_brand() const {
  return dimension_case() == kListingBrand;
}
inline void ListingDimensionInfo::set_has_listing_brand() {
  _oneof_case_[0] = kListingBrand;
}
inline void ListingDimensionInfo::clear_listing_brand() {
  if (has_listing_brand()) {
    delete dimension_.listing_brand_;
    clear_has_dimension();
  }
}
inline const ::google::ads::googleads::v0::common::ListingBrandInfo& ListingDimensionInfo::_internal_listing_brand() const {
  return *dimension_.listing_brand_;
}
inline ::google::ads::googleads::v0::common::ListingBrandInfo* ListingDimensionInfo::release_listing_brand() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.ListingDimensionInfo.listing_brand)
  if (has_listing_brand()) {
    clear_has_dimension();
      ::google::ads::googleads::v0::common::ListingBrandInfo* temp = dimension_.listing_brand_;
    dimension_.listing_brand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::ads::googleads::v0::common::ListingBrandInfo& ListingDimensionInfo::listing_brand() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ListingDimensionInfo.listing_brand)
  return has_listing_brand()
      ? *dimension_.listing_brand_
      : *reinterpret_cast< ::google::ads::googleads::v0::common::ListingBrandInfo*>(&::google::ads::googleads::v0::common::_ListingBrandInfo_default_instance_);
}
inline ::google::ads::googleads::v0::common::ListingBrandInfo* ListingDimensionInfo::mutable_listing_brand() {
  if (!has_listing_brand()) {
    clear_dimension();
    set_has_listing_brand();
    dimension_.listing_brand_ = CreateMaybeMessage< ::google::ads::googleads::v0::common::ListingBrandInfo >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.ListingDimensionInfo.listing_brand)
  return dimension_.listing_brand_;
}

// .google.ads.googleads.v0.common.HotelIdInfo hotel_id = 2;
inline bool ListingDimensionInfo::has_hotel_id() const {
  return dimension_case() == kHotelId;
}
inline void ListingDimensionInfo::set_has_hotel_id() {
  _oneof_case_[0] = kHotelId;
}
inline void ListingDimensionInfo::clear_hotel_id() {
  if (has_hotel_id()) {
    delete dimension_.hotel_id_;
    clear_has_dimension();
  }
}
inline const ::google::ads::googleads::v0::common::HotelIdInfo& ListingDimensionInfo::_internal_hotel_id() const {
  return *dimension_.hotel_id_;
}
inline ::google::ads::googleads::v0::common::HotelIdInfo* ListingDimensionInfo::release_hotel_id() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_id)
  if (has_hotel_id()) {
    clear_has_dimension();
      ::google::ads::googleads::v0::common::HotelIdInfo* temp = dimension_.hotel_id_;
    dimension_.hotel_id_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::ads::googleads::v0::common::HotelIdInfo& ListingDimensionInfo::hotel_id() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_id)
  return has_hotel_id()
      ? *dimension_.hotel_id_
      : *reinterpret_cast< ::google::ads::googleads::v0::common::HotelIdInfo*>(&::google::ads::googleads::v0::common::_HotelIdInfo_default_instance_);
}
inline ::google::ads::googleads::v0::common::HotelIdInfo* ListingDimensionInfo::mutable_hotel_id() {
  if (!has_hotel_id()) {
    clear_dimension();
    set_has_hotel_id();
    dimension_.hotel_id_ = CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelIdInfo >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_id)
  return dimension_.hotel_id_;
}

// .google.ads.googleads.v0.common.HotelClassInfo hotel_class = 3;
inline bool ListingDimensionInfo::has_hotel_class() const {
  return dimension_case() == kHotelClass;
}
inline void ListingDimensionInfo::set_has_hotel_class() {
  _oneof_case_[0] = kHotelClass;
}
inline void ListingDimensionInfo::clear_hotel_class() {
  if (has_hotel_class()) {
    delete dimension_.hotel_class_;
    clear_has_dimension();
  }
}
inline const ::google::ads::googleads::v0::common::HotelClassInfo& ListingDimensionInfo::_internal_hotel_class() const {
  return *dimension_.hotel_class_;
}
inline ::google::ads::googleads::v0::common::HotelClassInfo* ListingDimensionInfo::release_hotel_class() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_class)
  if (has_hotel_class()) {
    clear_has_dimension();
      ::google::ads::googleads::v0::common::HotelClassInfo* temp = dimension_.hotel_class_;
    dimension_.hotel_class_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::ads::googleads::v0::common::HotelClassInfo& ListingDimensionInfo::hotel_class() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_class)
  return has_hotel_class()
      ? *dimension_.hotel_class_
      : *reinterpret_cast< ::google::ads::googleads::v0::common::HotelClassInfo*>(&::google::ads::googleads::v0::common::_HotelClassInfo_default_instance_);
}
inline ::google::ads::googleads::v0::common::HotelClassInfo* ListingDimensionInfo::mutable_hotel_class() {
  if (!has_hotel_class()) {
    clear_dimension();
    set_has_hotel_class();
    dimension_.hotel_class_ = CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelClassInfo >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_class)
  return dimension_.hotel_class_;
}

// .google.ads.googleads.v0.common.HotelCountryRegionInfo hotel_country_region = 4;
inline bool ListingDimensionInfo::has_hotel_country_region() const {
  return dimension_case() == kHotelCountryRegion;
}
inline void ListingDimensionInfo::set_has_hotel_country_region() {
  _oneof_case_[0] = kHotelCountryRegion;
}
inline void ListingDimensionInfo::clear_hotel_country_region() {
  if (has_hotel_country_region()) {
    delete dimension_.hotel_country_region_;
    clear_has_dimension();
  }
}
inline const ::google::ads::googleads::v0::common::HotelCountryRegionInfo& ListingDimensionInfo::_internal_hotel_country_region() const {
  return *dimension_.hotel_country_region_;
}
inline ::google::ads::googleads::v0::common::HotelCountryRegionInfo* ListingDimensionInfo::release_hotel_country_region() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_country_region)
  if (has_hotel_country_region()) {
    clear_has_dimension();
      ::google::ads::googleads::v0::common::HotelCountryRegionInfo* temp = dimension_.hotel_country_region_;
    dimension_.hotel_country_region_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::ads::googleads::v0::common::HotelCountryRegionInfo& ListingDimensionInfo::hotel_country_region() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_country_region)
  return has_hotel_country_region()
      ? *dimension_.hotel_country_region_
      : *reinterpret_cast< ::google::ads::googleads::v0::common::HotelCountryRegionInfo*>(&::google::ads::googleads::v0::common::_HotelCountryRegionInfo_default_instance_);
}
inline ::google::ads::googleads::v0::common::HotelCountryRegionInfo* ListingDimensionInfo::mutable_hotel_country_region() {
  if (!has_hotel_country_region()) {
    clear_dimension();
    set_has_hotel_country_region();
    dimension_.hotel_country_region_ = CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelCountryRegionInfo >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_country_region)
  return dimension_.hotel_country_region_;
}

// .google.ads.googleads.v0.common.HotelStateInfo hotel_state = 5;
inline bool ListingDimensionInfo::has_hotel_state() const {
  return dimension_case() == kHotelState;
}
inline void ListingDimensionInfo::set_has_hotel_state() {
  _oneof_case_[0] = kHotelState;
}
inline void ListingDimensionInfo::clear_hotel_state() {
  if (has_hotel_state()) {
    delete dimension_.hotel_state_;
    clear_has_dimension();
  }
}
inline const ::google::ads::googleads::v0::common::HotelStateInfo& ListingDimensionInfo::_internal_hotel_state() const {
  return *dimension_.hotel_state_;
}
inline ::google::ads::googleads::v0::common::HotelStateInfo* ListingDimensionInfo::release_hotel_state() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_state)
  if (has_hotel_state()) {
    clear_has_dimension();
      ::google::ads::googleads::v0::common::HotelStateInfo* temp = dimension_.hotel_state_;
    dimension_.hotel_state_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::ads::googleads::v0::common::HotelStateInfo& ListingDimensionInfo::hotel_state() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_state)
  return has_hotel_state()
      ? *dimension_.hotel_state_
      : *reinterpret_cast< ::google::ads::googleads::v0::common::HotelStateInfo*>(&::google::ads::googleads::v0::common::_HotelStateInfo_default_instance_);
}
inline ::google::ads::googleads::v0::common::HotelStateInfo* ListingDimensionInfo::mutable_hotel_state() {
  if (!has_hotel_state()) {
    clear_dimension();
    set_has_hotel_state();
    dimension_.hotel_state_ = CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelStateInfo >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_state)
  return dimension_.hotel_state_;
}

// .google.ads.googleads.v0.common.HotelCityInfo hotel_city = 6;
inline bool ListingDimensionInfo::has_hotel_city() const {
  return dimension_case() == kHotelCity;
}
inline void ListingDimensionInfo::set_has_hotel_city() {
  _oneof_case_[0] = kHotelCity;
}
inline void ListingDimensionInfo::clear_hotel_city() {
  if (has_hotel_city()) {
    delete dimension_.hotel_city_;
    clear_has_dimension();
  }
}
inline const ::google::ads::googleads::v0::common::HotelCityInfo& ListingDimensionInfo::_internal_hotel_city() const {
  return *dimension_.hotel_city_;
}
inline ::google::ads::googleads::v0::common::HotelCityInfo* ListingDimensionInfo::release_hotel_city() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_city)
  if (has_hotel_city()) {
    clear_has_dimension();
      ::google::ads::googleads::v0::common::HotelCityInfo* temp = dimension_.hotel_city_;
    dimension_.hotel_city_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::ads::googleads::v0::common::HotelCityInfo& ListingDimensionInfo::hotel_city() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_city)
  return has_hotel_city()
      ? *dimension_.hotel_city_
      : *reinterpret_cast< ::google::ads::googleads::v0::common::HotelCityInfo*>(&::google::ads::googleads::v0::common::_HotelCityInfo_default_instance_);
}
inline ::google::ads::googleads::v0::common::HotelCityInfo* ListingDimensionInfo::mutable_hotel_city() {
  if (!has_hotel_city()) {
    clear_dimension();
    set_has_hotel_city();
    dimension_.hotel_city_ = CreateMaybeMessage< ::google::ads::googleads::v0::common::HotelCityInfo >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.ListingDimensionInfo.hotel_city)
  return dimension_.hotel_city_;
}

// .google.ads.googleads.v0.common.ListingCustomAttributeInfo listing_custom_attribute = 7;
inline bool ListingDimensionInfo::has_listing_custom_attribute() const {
  return dimension_case() == kListingCustomAttribute;
}
inline void ListingDimensionInfo::set_has_listing_custom_attribute() {
  _oneof_case_[0] = kListingCustomAttribute;
}
inline void ListingDimensionInfo::clear_listing_custom_attribute() {
  if (has_listing_custom_attribute()) {
    delete dimension_.listing_custom_attribute_;
    clear_has_dimension();
  }
}
inline const ::google::ads::googleads::v0::common::ListingCustomAttributeInfo& ListingDimensionInfo::_internal_listing_custom_attribute() const {
  return *dimension_.listing_custom_attribute_;
}
inline ::google::ads::googleads::v0::common::ListingCustomAttributeInfo* ListingDimensionInfo::release_listing_custom_attribute() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.ListingDimensionInfo.listing_custom_attribute)
  if (has_listing_custom_attribute()) {
    clear_has_dimension();
      ::google::ads::googleads::v0::common::ListingCustomAttributeInfo* temp = dimension_.listing_custom_attribute_;
    dimension_.listing_custom_attribute_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::ads::googleads::v0::common::ListingCustomAttributeInfo& ListingDimensionInfo::listing_custom_attribute() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ListingDimensionInfo.listing_custom_attribute)
  return has_listing_custom_attribute()
      ? *dimension_.listing_custom_attribute_
      : *reinterpret_cast< ::google::ads::googleads::v0::common::ListingCustomAttributeInfo*>(&::google::ads::googleads::v0::common::_ListingCustomAttributeInfo_default_instance_);
}
inline ::google::ads::googleads::v0::common::ListingCustomAttributeInfo* ListingDimensionInfo::mutable_listing_custom_attribute() {
  if (!has_listing_custom_attribute()) {
    clear_dimension();
    set_has_listing_custom_attribute();
    dimension_.listing_custom_attribute_ = CreateMaybeMessage< ::google::ads::googleads::v0::common::ListingCustomAttributeInfo >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.ListingDimensionInfo.listing_custom_attribute)
  return dimension_.listing_custom_attribute_;
}

inline bool ListingDimensionInfo::has_dimension() const {
  return dimension_case() != DIMENSION_NOT_SET;
}
inline void ListingDimensionInfo::clear_has_dimension() {
  _oneof_case_[0] = DIMENSION_NOT_SET;
}
inline ListingDimensionInfo::DimensionCase ListingDimensionInfo::dimension_case() const {
  return ListingDimensionInfo::DimensionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ListingBrandInfo

// .google.protobuf.StringValue value = 1;
inline bool ListingBrandInfo::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline const ::google::protobuf::StringValue& ListingBrandInfo::_internal_value() const {
  return *value_;
}
inline const ::google::protobuf::StringValue& ListingBrandInfo::value() const {
  const ::google::protobuf::StringValue* p = value_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ListingBrandInfo.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* ListingBrandInfo::release_value() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.ListingBrandInfo.value)
  
  ::google::protobuf::StringValue* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* ListingBrandInfo::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.ListingBrandInfo.value)
  return value_;
}
inline void ListingBrandInfo::set_allocated_value(::google::protobuf::StringValue* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_);
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.ListingBrandInfo.value)
}

// -------------------------------------------------------------------

// HotelIdInfo

// .google.protobuf.StringValue value = 1;
inline bool HotelIdInfo::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline const ::google::protobuf::StringValue& HotelIdInfo::_internal_value() const {
  return *value_;
}
inline const ::google::protobuf::StringValue& HotelIdInfo::value() const {
  const ::google::protobuf::StringValue* p = value_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.HotelIdInfo.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* HotelIdInfo::release_value() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.HotelIdInfo.value)
  
  ::google::protobuf::StringValue* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* HotelIdInfo::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.HotelIdInfo.value)
  return value_;
}
inline void HotelIdInfo::set_allocated_value(::google::protobuf::StringValue* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_);
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.HotelIdInfo.value)
}

// -------------------------------------------------------------------

// HotelClassInfo

// .google.protobuf.Int64Value value = 1;
inline bool HotelClassInfo::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline const ::google::protobuf::Int64Value& HotelClassInfo::_internal_value() const {
  return *value_;
}
inline const ::google::protobuf::Int64Value& HotelClassInfo::value() const {
  const ::google::protobuf::Int64Value* p = value_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.HotelClassInfo.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* HotelClassInfo::release_value() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.HotelClassInfo.value)
  
  ::google::protobuf::Int64Value* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* HotelClassInfo::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.HotelClassInfo.value)
  return value_;
}
inline void HotelClassInfo::set_allocated_value(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_);
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.HotelClassInfo.value)
}

// -------------------------------------------------------------------

// HotelCountryRegionInfo

// .google.protobuf.StringValue country_region_criterion = 1;
inline bool HotelCountryRegionInfo::has_country_region_criterion() const {
  return this != internal_default_instance() && country_region_criterion_ != NULL;
}
inline const ::google::protobuf::StringValue& HotelCountryRegionInfo::_internal_country_region_criterion() const {
  return *country_region_criterion_;
}
inline const ::google::protobuf::StringValue& HotelCountryRegionInfo::country_region_criterion() const {
  const ::google::protobuf::StringValue* p = country_region_criterion_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.HotelCountryRegionInfo.country_region_criterion)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* HotelCountryRegionInfo::release_country_region_criterion() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.HotelCountryRegionInfo.country_region_criterion)
  
  ::google::protobuf::StringValue* temp = country_region_criterion_;
  country_region_criterion_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* HotelCountryRegionInfo::mutable_country_region_criterion() {
  
  if (country_region_criterion_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    country_region_criterion_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.HotelCountryRegionInfo.country_region_criterion)
  return country_region_criterion_;
}
inline void HotelCountryRegionInfo::set_allocated_country_region_criterion(::google::protobuf::StringValue* country_region_criterion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(country_region_criterion_);
  }
  if (country_region_criterion) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(country_region_criterion)->GetArena();
    if (message_arena != submessage_arena) {
      country_region_criterion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, country_region_criterion, submessage_arena);
    }
    
  } else {
    
  }
  country_region_criterion_ = country_region_criterion;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.HotelCountryRegionInfo.country_region_criterion)
}

// -------------------------------------------------------------------

// HotelStateInfo

// .google.protobuf.StringValue state_criterion = 1;
inline bool HotelStateInfo::has_state_criterion() const {
  return this != internal_default_instance() && state_criterion_ != NULL;
}
inline const ::google::protobuf::StringValue& HotelStateInfo::_internal_state_criterion() const {
  return *state_criterion_;
}
inline const ::google::protobuf::StringValue& HotelStateInfo::state_criterion() const {
  const ::google::protobuf::StringValue* p = state_criterion_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.HotelStateInfo.state_criterion)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* HotelStateInfo::release_state_criterion() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.HotelStateInfo.state_criterion)
  
  ::google::protobuf::StringValue* temp = state_criterion_;
  state_criterion_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* HotelStateInfo::mutable_state_criterion() {
  
  if (state_criterion_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    state_criterion_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.HotelStateInfo.state_criterion)
  return state_criterion_;
}
inline void HotelStateInfo::set_allocated_state_criterion(::google::protobuf::StringValue* state_criterion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(state_criterion_);
  }
  if (state_criterion) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(state_criterion)->GetArena();
    if (message_arena != submessage_arena) {
      state_criterion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state_criterion, submessage_arena);
    }
    
  } else {
    
  }
  state_criterion_ = state_criterion;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.HotelStateInfo.state_criterion)
}

// -------------------------------------------------------------------

// HotelCityInfo

// .google.protobuf.StringValue city_criterion = 1;
inline bool HotelCityInfo::has_city_criterion() const {
  return this != internal_default_instance() && city_criterion_ != NULL;
}
inline const ::google::protobuf::StringValue& HotelCityInfo::_internal_city_criterion() const {
  return *city_criterion_;
}
inline const ::google::protobuf::StringValue& HotelCityInfo::city_criterion() const {
  const ::google::protobuf::StringValue* p = city_criterion_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.HotelCityInfo.city_criterion)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* HotelCityInfo::release_city_criterion() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.HotelCityInfo.city_criterion)
  
  ::google::protobuf::StringValue* temp = city_criterion_;
  city_criterion_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* HotelCityInfo::mutable_city_criterion() {
  
  if (city_criterion_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    city_criterion_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.HotelCityInfo.city_criterion)
  return city_criterion_;
}
inline void HotelCityInfo::set_allocated_city_criterion(::google::protobuf::StringValue* city_criterion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(city_criterion_);
  }
  if (city_criterion) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(city_criterion)->GetArena();
    if (message_arena != submessage_arena) {
      city_criterion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, city_criterion, submessage_arena);
    }
    
  } else {
    
  }
  city_criterion_ = city_criterion;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.HotelCityInfo.city_criterion)
}

// -------------------------------------------------------------------

// ListingCustomAttributeInfo

// .google.protobuf.StringValue value = 1;
inline bool ListingCustomAttributeInfo::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline const ::google::protobuf::StringValue& ListingCustomAttributeInfo::_internal_value() const {
  return *value_;
}
inline const ::google::protobuf::StringValue& ListingCustomAttributeInfo::value() const {
  const ::google::protobuf::StringValue* p = value_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ListingCustomAttributeInfo.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* ListingCustomAttributeInfo::release_value() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.ListingCustomAttributeInfo.value)
  
  ::google::protobuf::StringValue* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* ListingCustomAttributeInfo::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.ListingCustomAttributeInfo.value)
  return value_;
}
inline void ListingCustomAttributeInfo::set_allocated_value(::google::protobuf::StringValue* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_);
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.ListingCustomAttributeInfo.value)
}

// .google.ads.googleads.v0.enums.ListingCustomAttributeIndexEnum.ListingCustomAttributeIndex index = 2;
inline void ListingCustomAttributeInfo::clear_index() {
  index_ = 0;
}
inline ::google::ads::googleads::v0::enums::ListingCustomAttributeIndexEnum_ListingCustomAttributeIndex ListingCustomAttributeInfo::index() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ListingCustomAttributeInfo.index)
  return static_cast< ::google::ads::googleads::v0::enums::ListingCustomAttributeIndexEnum_ListingCustomAttributeIndex >(index_);
}
inline void ListingCustomAttributeInfo::set_index(::google::ads::googleads::v0::enums::ListingCustomAttributeIndexEnum_ListingCustomAttributeIndex value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.common.ListingCustomAttributeInfo.index)
}

// -------------------------------------------------------------------

// HotelDateSelectionTypeInfo

// -------------------------------------------------------------------

// HotelAdvanceBookingWindowInfo

// .google.protobuf.Int64Value min_days = 1;
inline bool HotelAdvanceBookingWindowInfo::has_min_days() const {
  return this != internal_default_instance() && min_days_ != NULL;
}
inline const ::google::protobuf::Int64Value& HotelAdvanceBookingWindowInfo::_internal_min_days() const {
  return *min_days_;
}
inline const ::google::protobuf::Int64Value& HotelAdvanceBookingWindowInfo::min_days() const {
  const ::google::protobuf::Int64Value* p = min_days_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo.min_days)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* HotelAdvanceBookingWindowInfo::release_min_days() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo.min_days)
  
  ::google::protobuf::Int64Value* temp = min_days_;
  min_days_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* HotelAdvanceBookingWindowInfo::mutable_min_days() {
  
  if (min_days_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    min_days_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo.min_days)
  return min_days_;
}
inline void HotelAdvanceBookingWindowInfo::set_allocated_min_days(::google::protobuf::Int64Value* min_days) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_days_);
  }
  if (min_days) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(min_days)->GetArena();
    if (message_arena != submessage_arena) {
      min_days = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min_days, submessage_arena);
    }
    
  } else {
    
  }
  min_days_ = min_days;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo.min_days)
}

// .google.protobuf.Int64Value max_days = 2;
inline bool HotelAdvanceBookingWindowInfo::has_max_days() const {
  return this != internal_default_instance() && max_days_ != NULL;
}
inline const ::google::protobuf::Int64Value& HotelAdvanceBookingWindowInfo::_internal_max_days() const {
  return *max_days_;
}
inline const ::google::protobuf::Int64Value& HotelAdvanceBookingWindowInfo::max_days() const {
  const ::google::protobuf::Int64Value* p = max_days_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo.max_days)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* HotelAdvanceBookingWindowInfo::release_max_days() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo.max_days)
  
  ::google::protobuf::Int64Value* temp = max_days_;
  max_days_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* HotelAdvanceBookingWindowInfo::mutable_max_days() {
  
  if (max_days_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    max_days_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo.max_days)
  return max_days_;
}
inline void HotelAdvanceBookingWindowInfo::set_allocated_max_days(::google::protobuf::Int64Value* max_days) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_days_);
  }
  if (max_days) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(max_days)->GetArena();
    if (message_arena != submessage_arena) {
      max_days = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_days, submessage_arena);
    }
    
  } else {
    
  }
  max_days_ = max_days;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo.max_days)
}

// -------------------------------------------------------------------

// HotelLengthOfStayInfo

// .google.protobuf.Int64Value min_nights = 1;
inline bool HotelLengthOfStayInfo::has_min_nights() const {
  return this != internal_default_instance() && min_nights_ != NULL;
}
inline const ::google::protobuf::Int64Value& HotelLengthOfStayInfo::_internal_min_nights() const {
  return *min_nights_;
}
inline const ::google::protobuf::Int64Value& HotelLengthOfStayInfo::min_nights() const {
  const ::google::protobuf::Int64Value* p = min_nights_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.HotelLengthOfStayInfo.min_nights)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* HotelLengthOfStayInfo::release_min_nights() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.HotelLengthOfStayInfo.min_nights)
  
  ::google::protobuf::Int64Value* temp = min_nights_;
  min_nights_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* HotelLengthOfStayInfo::mutable_min_nights() {
  
  if (min_nights_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    min_nights_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.HotelLengthOfStayInfo.min_nights)
  return min_nights_;
}
inline void HotelLengthOfStayInfo::set_allocated_min_nights(::google::protobuf::Int64Value* min_nights) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_nights_);
  }
  if (min_nights) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(min_nights)->GetArena();
    if (message_arena != submessage_arena) {
      min_nights = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min_nights, submessage_arena);
    }
    
  } else {
    
  }
  min_nights_ = min_nights;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.HotelLengthOfStayInfo.min_nights)
}

// .google.protobuf.Int64Value max_nights = 2;
inline bool HotelLengthOfStayInfo::has_max_nights() const {
  return this != internal_default_instance() && max_nights_ != NULL;
}
inline const ::google::protobuf::Int64Value& HotelLengthOfStayInfo::_internal_max_nights() const {
  return *max_nights_;
}
inline const ::google::protobuf::Int64Value& HotelLengthOfStayInfo::max_nights() const {
  const ::google::protobuf::Int64Value* p = max_nights_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.HotelLengthOfStayInfo.max_nights)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* HotelLengthOfStayInfo::release_max_nights() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.HotelLengthOfStayInfo.max_nights)
  
  ::google::protobuf::Int64Value* temp = max_nights_;
  max_nights_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* HotelLengthOfStayInfo::mutable_max_nights() {
  
  if (max_nights_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    max_nights_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.HotelLengthOfStayInfo.max_nights)
  return max_nights_;
}
inline void HotelLengthOfStayInfo::set_allocated_max_nights(::google::protobuf::Int64Value* max_nights) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_nights_);
  }
  if (max_nights) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(max_nights)->GetArena();
    if (message_arena != submessage_arena) {
      max_nights = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_nights, submessage_arena);
    }
    
  } else {
    
  }
  max_nights_ = max_nights;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.HotelLengthOfStayInfo.max_nights)
}

// -------------------------------------------------------------------

// HotelCheckInDayInfo

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto
