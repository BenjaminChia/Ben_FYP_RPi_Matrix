// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/common/bidding.proto

#ifndef PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto
#define PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/ads/googleads/v0/enums/page_one_promoted_strategy_goal.pb.h"
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto 

namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace common {
class EnhancedCpc;
class EnhancedCpcDefaultTypeInternal;
extern EnhancedCpcDefaultTypeInternal _EnhancedCpc_default_instance_;
class ManualCpc;
class ManualCpcDefaultTypeInternal;
extern ManualCpcDefaultTypeInternal _ManualCpc_default_instance_;
class ManualCpm;
class ManualCpmDefaultTypeInternal;
extern ManualCpmDefaultTypeInternal _ManualCpm_default_instance_;
class MaximizeConversionValue;
class MaximizeConversionValueDefaultTypeInternal;
extern MaximizeConversionValueDefaultTypeInternal _MaximizeConversionValue_default_instance_;
class MaximizeConversions;
class MaximizeConversionsDefaultTypeInternal;
extern MaximizeConversionsDefaultTypeInternal _MaximizeConversions_default_instance_;
class PageOnePromoted;
class PageOnePromotedDefaultTypeInternal;
extern PageOnePromotedDefaultTypeInternal _PageOnePromoted_default_instance_;
class PercentCpc;
class PercentCpcDefaultTypeInternal;
extern PercentCpcDefaultTypeInternal _PercentCpc_default_instance_;
class TargetCpa;
class TargetCpaDefaultTypeInternal;
extern TargetCpaDefaultTypeInternal _TargetCpa_default_instance_;
class TargetOutrankShare;
class TargetOutrankShareDefaultTypeInternal;
extern TargetOutrankShareDefaultTypeInternal _TargetOutrankShare_default_instance_;
class TargetRoas;
class TargetRoasDefaultTypeInternal;
extern TargetRoasDefaultTypeInternal _TargetRoas_default_instance_;
class TargetSpend;
class TargetSpendDefaultTypeInternal;
extern TargetSpendDefaultTypeInternal _TargetSpend_default_instance_;
}  // namespace common
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::ads::googleads::v0::common::EnhancedCpc* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::EnhancedCpc>(Arena*);
template<> ::google::ads::googleads::v0::common::ManualCpc* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::ManualCpc>(Arena*);
template<> ::google::ads::googleads::v0::common::ManualCpm* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::ManualCpm>(Arena*);
template<> ::google::ads::googleads::v0::common::MaximizeConversionValue* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::MaximizeConversionValue>(Arena*);
template<> ::google::ads::googleads::v0::common::MaximizeConversions* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::MaximizeConversions>(Arena*);
template<> ::google::ads::googleads::v0::common::PageOnePromoted* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::PageOnePromoted>(Arena*);
template<> ::google::ads::googleads::v0::common::PercentCpc* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::PercentCpc>(Arena*);
template<> ::google::ads::googleads::v0::common::TargetCpa* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::TargetCpa>(Arena*);
template<> ::google::ads::googleads::v0::common::TargetOutrankShare* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::TargetOutrankShare>(Arena*);
template<> ::google::ads::googleads::v0::common::TargetRoas* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::TargetRoas>(Arena*);
template<> ::google::ads::googleads::v0::common::TargetSpend* Arena::CreateMaybeMessage<::google::ads::googleads::v0::common::TargetSpend>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace common {

// ===================================================================

class EnhancedCpc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.EnhancedCpc) */ {
 public:
  EnhancedCpc();
  virtual ~EnhancedCpc();

  EnhancedCpc(const EnhancedCpc& from);

  inline EnhancedCpc& operator=(const EnhancedCpc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnhancedCpc(EnhancedCpc&& from) noexcept
    : EnhancedCpc() {
    *this = ::std::move(from);
  }

  inline EnhancedCpc& operator=(EnhancedCpc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnhancedCpc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnhancedCpc* internal_default_instance() {
    return reinterpret_cast<const EnhancedCpc*>(
               &_EnhancedCpc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(EnhancedCpc* other);
  friend void swap(EnhancedCpc& a, EnhancedCpc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnhancedCpc* New() const final {
    return CreateMaybeMessage<EnhancedCpc>(NULL);
  }

  EnhancedCpc* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EnhancedCpc>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EnhancedCpc& from);
  void MergeFrom(const EnhancedCpc& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnhancedCpc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.EnhancedCpc)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualCpc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.ManualCpc) */ {
 public:
  ManualCpc();
  virtual ~ManualCpc();

  ManualCpc(const ManualCpc& from);

  inline ManualCpc& operator=(const ManualCpc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ManualCpc(ManualCpc&& from) noexcept
    : ManualCpc() {
    *this = ::std::move(from);
  }

  inline ManualCpc& operator=(ManualCpc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualCpc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManualCpc* internal_default_instance() {
    return reinterpret_cast<const ManualCpc*>(
               &_ManualCpc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ManualCpc* other);
  friend void swap(ManualCpc& a, ManualCpc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ManualCpc* New() const final {
    return CreateMaybeMessage<ManualCpc>(NULL);
  }

  ManualCpc* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ManualCpc>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ManualCpc& from);
  void MergeFrom(const ManualCpc& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManualCpc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.BoolValue enhanced_cpc_enabled = 1;
  bool has_enhanced_cpc_enabled() const;
  void clear_enhanced_cpc_enabled();
  static const int kEnhancedCpcEnabledFieldNumber = 1;
  private:
  const ::google::protobuf::BoolValue& _internal_enhanced_cpc_enabled() const;
  public:
  const ::google::protobuf::BoolValue& enhanced_cpc_enabled() const;
  ::google::protobuf::BoolValue* release_enhanced_cpc_enabled();
  ::google::protobuf::BoolValue* mutable_enhanced_cpc_enabled();
  void set_allocated_enhanced_cpc_enabled(::google::protobuf::BoolValue* enhanced_cpc_enabled);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.ManualCpc)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::BoolValue* enhanced_cpc_enabled_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualCpm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.ManualCpm) */ {
 public:
  ManualCpm();
  virtual ~ManualCpm();

  ManualCpm(const ManualCpm& from);

  inline ManualCpm& operator=(const ManualCpm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ManualCpm(ManualCpm&& from) noexcept
    : ManualCpm() {
    *this = ::std::move(from);
  }

  inline ManualCpm& operator=(ManualCpm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualCpm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManualCpm* internal_default_instance() {
    return reinterpret_cast<const ManualCpm*>(
               &_ManualCpm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ManualCpm* other);
  friend void swap(ManualCpm& a, ManualCpm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ManualCpm* New() const final {
    return CreateMaybeMessage<ManualCpm>(NULL);
  }

  ManualCpm* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ManualCpm>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ManualCpm& from);
  void MergeFrom(const ManualCpm& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManualCpm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.ManualCpm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MaximizeConversions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.MaximizeConversions) */ {
 public:
  MaximizeConversions();
  virtual ~MaximizeConversions();

  MaximizeConversions(const MaximizeConversions& from);

  inline MaximizeConversions& operator=(const MaximizeConversions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MaximizeConversions(MaximizeConversions&& from) noexcept
    : MaximizeConversions() {
    *this = ::std::move(from);
  }

  inline MaximizeConversions& operator=(MaximizeConversions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MaximizeConversions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MaximizeConversions* internal_default_instance() {
    return reinterpret_cast<const MaximizeConversions*>(
               &_MaximizeConversions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MaximizeConversions* other);
  friend void swap(MaximizeConversions& a, MaximizeConversions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MaximizeConversions* New() const final {
    return CreateMaybeMessage<MaximizeConversions>(NULL);
  }

  MaximizeConversions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MaximizeConversions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MaximizeConversions& from);
  void MergeFrom(const MaximizeConversions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MaximizeConversions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.MaximizeConversions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MaximizeConversionValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.MaximizeConversionValue) */ {
 public:
  MaximizeConversionValue();
  virtual ~MaximizeConversionValue();

  MaximizeConversionValue(const MaximizeConversionValue& from);

  inline MaximizeConversionValue& operator=(const MaximizeConversionValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MaximizeConversionValue(MaximizeConversionValue&& from) noexcept
    : MaximizeConversionValue() {
    *this = ::std::move(from);
  }

  inline MaximizeConversionValue& operator=(MaximizeConversionValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MaximizeConversionValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MaximizeConversionValue* internal_default_instance() {
    return reinterpret_cast<const MaximizeConversionValue*>(
               &_MaximizeConversionValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MaximizeConversionValue* other);
  friend void swap(MaximizeConversionValue& a, MaximizeConversionValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MaximizeConversionValue* New() const final {
    return CreateMaybeMessage<MaximizeConversionValue>(NULL);
  }

  MaximizeConversionValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MaximizeConversionValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MaximizeConversionValue& from);
  void MergeFrom(const MaximizeConversionValue& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MaximizeConversionValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.DoubleValue target_roas = 1;
  bool has_target_roas() const;
  void clear_target_roas();
  static const int kTargetRoasFieldNumber = 1;
  private:
  const ::google::protobuf::DoubleValue& _internal_target_roas() const;
  public:
  const ::google::protobuf::DoubleValue& target_roas() const;
  ::google::protobuf::DoubleValue* release_target_roas();
  ::google::protobuf::DoubleValue* mutable_target_roas();
  void set_allocated_target_roas(::google::protobuf::DoubleValue* target_roas);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.MaximizeConversionValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::DoubleValue* target_roas_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PageOnePromoted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.PageOnePromoted) */ {
 public:
  PageOnePromoted();
  virtual ~PageOnePromoted();

  PageOnePromoted(const PageOnePromoted& from);

  inline PageOnePromoted& operator=(const PageOnePromoted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PageOnePromoted(PageOnePromoted&& from) noexcept
    : PageOnePromoted() {
    *this = ::std::move(from);
  }

  inline PageOnePromoted& operator=(PageOnePromoted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PageOnePromoted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PageOnePromoted* internal_default_instance() {
    return reinterpret_cast<const PageOnePromoted*>(
               &_PageOnePromoted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PageOnePromoted* other);
  friend void swap(PageOnePromoted& a, PageOnePromoted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PageOnePromoted* New() const final {
    return CreateMaybeMessage<PageOnePromoted>(NULL);
  }

  PageOnePromoted* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PageOnePromoted>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PageOnePromoted& from);
  void MergeFrom(const PageOnePromoted& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PageOnePromoted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  bool has_cpc_bid_ceiling_micros() const;
  void clear_cpc_bid_ceiling_micros();
  static const int kCpcBidCeilingMicrosFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_cpc_bid_ceiling_micros() const;
  public:
  const ::google::protobuf::Int64Value& cpc_bid_ceiling_micros() const;
  ::google::protobuf::Int64Value* release_cpc_bid_ceiling_micros();
  ::google::protobuf::Int64Value* mutable_cpc_bid_ceiling_micros();
  void set_allocated_cpc_bid_ceiling_micros(::google::protobuf::Int64Value* cpc_bid_ceiling_micros);

  // .google.protobuf.DoubleValue bid_modifier = 3;
  bool has_bid_modifier() const;
  void clear_bid_modifier();
  static const int kBidModifierFieldNumber = 3;
  private:
  const ::google::protobuf::DoubleValue& _internal_bid_modifier() const;
  public:
  const ::google::protobuf::DoubleValue& bid_modifier() const;
  ::google::protobuf::DoubleValue* release_bid_modifier();
  ::google::protobuf::DoubleValue* mutable_bid_modifier();
  void set_allocated_bid_modifier(::google::protobuf::DoubleValue* bid_modifier);

  // .google.protobuf.BoolValue only_raise_cpc_bids = 4;
  bool has_only_raise_cpc_bids() const;
  void clear_only_raise_cpc_bids();
  static const int kOnlyRaiseCpcBidsFieldNumber = 4;
  private:
  const ::google::protobuf::BoolValue& _internal_only_raise_cpc_bids() const;
  public:
  const ::google::protobuf::BoolValue& only_raise_cpc_bids() const;
  ::google::protobuf::BoolValue* release_only_raise_cpc_bids();
  ::google::protobuf::BoolValue* mutable_only_raise_cpc_bids();
  void set_allocated_only_raise_cpc_bids(::google::protobuf::BoolValue* only_raise_cpc_bids);

  // .google.protobuf.BoolValue raise_cpc_bid_when_budget_constrained = 5;
  bool has_raise_cpc_bid_when_budget_constrained() const;
  void clear_raise_cpc_bid_when_budget_constrained();
  static const int kRaiseCpcBidWhenBudgetConstrainedFieldNumber = 5;
  private:
  const ::google::protobuf::BoolValue& _internal_raise_cpc_bid_when_budget_constrained() const;
  public:
  const ::google::protobuf::BoolValue& raise_cpc_bid_when_budget_constrained() const;
  ::google::protobuf::BoolValue* release_raise_cpc_bid_when_budget_constrained();
  ::google::protobuf::BoolValue* mutable_raise_cpc_bid_when_budget_constrained();
  void set_allocated_raise_cpc_bid_when_budget_constrained(::google::protobuf::BoolValue* raise_cpc_bid_when_budget_constrained);

  // .google.protobuf.BoolValue raise_cpc_bid_when_quality_score_is_low = 6;
  bool has_raise_cpc_bid_when_quality_score_is_low() const;
  void clear_raise_cpc_bid_when_quality_score_is_low();
  static const int kRaiseCpcBidWhenQualityScoreIsLowFieldNumber = 6;
  private:
  const ::google::protobuf::BoolValue& _internal_raise_cpc_bid_when_quality_score_is_low() const;
  public:
  const ::google::protobuf::BoolValue& raise_cpc_bid_when_quality_score_is_low() const;
  ::google::protobuf::BoolValue* release_raise_cpc_bid_when_quality_score_is_low();
  ::google::protobuf::BoolValue* mutable_raise_cpc_bid_when_quality_score_is_low();
  void set_allocated_raise_cpc_bid_when_quality_score_is_low(::google::protobuf::BoolValue* raise_cpc_bid_when_quality_score_is_low);

  // .google.ads.googleads.v0.enums.PageOnePromotedStrategyGoalEnum.PageOnePromotedStrategyGoal strategy_goal = 1;
  void clear_strategy_goal();
  static const int kStrategyGoalFieldNumber = 1;
  ::google::ads::googleads::v0::enums::PageOnePromotedStrategyGoalEnum_PageOnePromotedStrategyGoal strategy_goal() const;
  void set_strategy_goal(::google::ads::googleads::v0::enums::PageOnePromotedStrategyGoalEnum_PageOnePromotedStrategyGoal value);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.PageOnePromoted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Int64Value* cpc_bid_ceiling_micros_;
  ::google::protobuf::DoubleValue* bid_modifier_;
  ::google::protobuf::BoolValue* only_raise_cpc_bids_;
  ::google::protobuf::BoolValue* raise_cpc_bid_when_budget_constrained_;
  ::google::protobuf::BoolValue* raise_cpc_bid_when_quality_score_is_low_;
  int strategy_goal_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TargetCpa : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.TargetCpa) */ {
 public:
  TargetCpa();
  virtual ~TargetCpa();

  TargetCpa(const TargetCpa& from);

  inline TargetCpa& operator=(const TargetCpa& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetCpa(TargetCpa&& from) noexcept
    : TargetCpa() {
    *this = ::std::move(from);
  }

  inline TargetCpa& operator=(TargetCpa&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetCpa& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetCpa* internal_default_instance() {
    return reinterpret_cast<const TargetCpa*>(
               &_TargetCpa_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(TargetCpa* other);
  friend void swap(TargetCpa& a, TargetCpa& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetCpa* New() const final {
    return CreateMaybeMessage<TargetCpa>(NULL);
  }

  TargetCpa* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TargetCpa>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TargetCpa& from);
  void MergeFrom(const TargetCpa& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TargetCpa* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value target_cpa_micros = 1;
  bool has_target_cpa_micros() const;
  void clear_target_cpa_micros();
  static const int kTargetCpaMicrosFieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_target_cpa_micros() const;
  public:
  const ::google::protobuf::Int64Value& target_cpa_micros() const;
  ::google::protobuf::Int64Value* release_target_cpa_micros();
  ::google::protobuf::Int64Value* mutable_target_cpa_micros();
  void set_allocated_target_cpa_micros(::google::protobuf::Int64Value* target_cpa_micros);

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  bool has_cpc_bid_ceiling_micros() const;
  void clear_cpc_bid_ceiling_micros();
  static const int kCpcBidCeilingMicrosFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_cpc_bid_ceiling_micros() const;
  public:
  const ::google::protobuf::Int64Value& cpc_bid_ceiling_micros() const;
  ::google::protobuf::Int64Value* release_cpc_bid_ceiling_micros();
  ::google::protobuf::Int64Value* mutable_cpc_bid_ceiling_micros();
  void set_allocated_cpc_bid_ceiling_micros(::google::protobuf::Int64Value* cpc_bid_ceiling_micros);

  // .google.protobuf.Int64Value cpc_bid_floor_micros = 3;
  bool has_cpc_bid_floor_micros() const;
  void clear_cpc_bid_floor_micros();
  static const int kCpcBidFloorMicrosFieldNumber = 3;
  private:
  const ::google::protobuf::Int64Value& _internal_cpc_bid_floor_micros() const;
  public:
  const ::google::protobuf::Int64Value& cpc_bid_floor_micros() const;
  ::google::protobuf::Int64Value* release_cpc_bid_floor_micros();
  ::google::protobuf::Int64Value* mutable_cpc_bid_floor_micros();
  void set_allocated_cpc_bid_floor_micros(::google::protobuf::Int64Value* cpc_bid_floor_micros);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.TargetCpa)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Int64Value* target_cpa_micros_;
  ::google::protobuf::Int64Value* cpc_bid_ceiling_micros_;
  ::google::protobuf::Int64Value* cpc_bid_floor_micros_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TargetOutrankShare : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.TargetOutrankShare) */ {
 public:
  TargetOutrankShare();
  virtual ~TargetOutrankShare();

  TargetOutrankShare(const TargetOutrankShare& from);

  inline TargetOutrankShare& operator=(const TargetOutrankShare& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetOutrankShare(TargetOutrankShare&& from) noexcept
    : TargetOutrankShare() {
    *this = ::std::move(from);
  }

  inline TargetOutrankShare& operator=(TargetOutrankShare&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetOutrankShare& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetOutrankShare* internal_default_instance() {
    return reinterpret_cast<const TargetOutrankShare*>(
               &_TargetOutrankShare_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(TargetOutrankShare* other);
  friend void swap(TargetOutrankShare& a, TargetOutrankShare& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetOutrankShare* New() const final {
    return CreateMaybeMessage<TargetOutrankShare>(NULL);
  }

  TargetOutrankShare* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TargetOutrankShare>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TargetOutrankShare& from);
  void MergeFrom(const TargetOutrankShare& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TargetOutrankShare* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int32Value target_outrank_share_micros = 1;
  bool has_target_outrank_share_micros() const;
  void clear_target_outrank_share_micros();
  static const int kTargetOutrankShareMicrosFieldNumber = 1;
  private:
  const ::google::protobuf::Int32Value& _internal_target_outrank_share_micros() const;
  public:
  const ::google::protobuf::Int32Value& target_outrank_share_micros() const;
  ::google::protobuf::Int32Value* release_target_outrank_share_micros();
  ::google::protobuf::Int32Value* mutable_target_outrank_share_micros();
  void set_allocated_target_outrank_share_micros(::google::protobuf::Int32Value* target_outrank_share_micros);

  // .google.protobuf.StringValue competitor_domain = 2;
  bool has_competitor_domain() const;
  void clear_competitor_domain();
  static const int kCompetitorDomainFieldNumber = 2;
  private:
  const ::google::protobuf::StringValue& _internal_competitor_domain() const;
  public:
  const ::google::protobuf::StringValue& competitor_domain() const;
  ::google::protobuf::StringValue* release_competitor_domain();
  ::google::protobuf::StringValue* mutable_competitor_domain();
  void set_allocated_competitor_domain(::google::protobuf::StringValue* competitor_domain);

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 3;
  bool has_cpc_bid_ceiling_micros() const;
  void clear_cpc_bid_ceiling_micros();
  static const int kCpcBidCeilingMicrosFieldNumber = 3;
  private:
  const ::google::protobuf::Int64Value& _internal_cpc_bid_ceiling_micros() const;
  public:
  const ::google::protobuf::Int64Value& cpc_bid_ceiling_micros() const;
  ::google::protobuf::Int64Value* release_cpc_bid_ceiling_micros();
  ::google::protobuf::Int64Value* mutable_cpc_bid_ceiling_micros();
  void set_allocated_cpc_bid_ceiling_micros(::google::protobuf::Int64Value* cpc_bid_ceiling_micros);

  // .google.protobuf.BoolValue only_raise_cpc_bids = 4;
  bool has_only_raise_cpc_bids() const;
  void clear_only_raise_cpc_bids();
  static const int kOnlyRaiseCpcBidsFieldNumber = 4;
  private:
  const ::google::protobuf::BoolValue& _internal_only_raise_cpc_bids() const;
  public:
  const ::google::protobuf::BoolValue& only_raise_cpc_bids() const;
  ::google::protobuf::BoolValue* release_only_raise_cpc_bids();
  ::google::protobuf::BoolValue* mutable_only_raise_cpc_bids();
  void set_allocated_only_raise_cpc_bids(::google::protobuf::BoolValue* only_raise_cpc_bids);

  // .google.protobuf.BoolValue raise_cpc_bid_when_quality_score_is_low = 5;
  bool has_raise_cpc_bid_when_quality_score_is_low() const;
  void clear_raise_cpc_bid_when_quality_score_is_low();
  static const int kRaiseCpcBidWhenQualityScoreIsLowFieldNumber = 5;
  private:
  const ::google::protobuf::BoolValue& _internal_raise_cpc_bid_when_quality_score_is_low() const;
  public:
  const ::google::protobuf::BoolValue& raise_cpc_bid_when_quality_score_is_low() const;
  ::google::protobuf::BoolValue* release_raise_cpc_bid_when_quality_score_is_low();
  ::google::protobuf::BoolValue* mutable_raise_cpc_bid_when_quality_score_is_low();
  void set_allocated_raise_cpc_bid_when_quality_score_is_low(::google::protobuf::BoolValue* raise_cpc_bid_when_quality_score_is_low);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.TargetOutrankShare)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Int32Value* target_outrank_share_micros_;
  ::google::protobuf::StringValue* competitor_domain_;
  ::google::protobuf::Int64Value* cpc_bid_ceiling_micros_;
  ::google::protobuf::BoolValue* only_raise_cpc_bids_;
  ::google::protobuf::BoolValue* raise_cpc_bid_when_quality_score_is_low_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TargetRoas : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.TargetRoas) */ {
 public:
  TargetRoas();
  virtual ~TargetRoas();

  TargetRoas(const TargetRoas& from);

  inline TargetRoas& operator=(const TargetRoas& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetRoas(TargetRoas&& from) noexcept
    : TargetRoas() {
    *this = ::std::move(from);
  }

  inline TargetRoas& operator=(TargetRoas&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetRoas& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetRoas* internal_default_instance() {
    return reinterpret_cast<const TargetRoas*>(
               &_TargetRoas_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(TargetRoas* other);
  friend void swap(TargetRoas& a, TargetRoas& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetRoas* New() const final {
    return CreateMaybeMessage<TargetRoas>(NULL);
  }

  TargetRoas* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TargetRoas>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TargetRoas& from);
  void MergeFrom(const TargetRoas& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TargetRoas* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.DoubleValue target_roas = 1;
  bool has_target_roas() const;
  void clear_target_roas();
  static const int kTargetRoasFieldNumber = 1;
  private:
  const ::google::protobuf::DoubleValue& _internal_target_roas() const;
  public:
  const ::google::protobuf::DoubleValue& target_roas() const;
  ::google::protobuf::DoubleValue* release_target_roas();
  ::google::protobuf::DoubleValue* mutable_target_roas();
  void set_allocated_target_roas(::google::protobuf::DoubleValue* target_roas);

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  bool has_cpc_bid_ceiling_micros() const;
  void clear_cpc_bid_ceiling_micros();
  static const int kCpcBidCeilingMicrosFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_cpc_bid_ceiling_micros() const;
  public:
  const ::google::protobuf::Int64Value& cpc_bid_ceiling_micros() const;
  ::google::protobuf::Int64Value* release_cpc_bid_ceiling_micros();
  ::google::protobuf::Int64Value* mutable_cpc_bid_ceiling_micros();
  void set_allocated_cpc_bid_ceiling_micros(::google::protobuf::Int64Value* cpc_bid_ceiling_micros);

  // .google.protobuf.Int64Value cpc_bid_floor_micros = 3;
  bool has_cpc_bid_floor_micros() const;
  void clear_cpc_bid_floor_micros();
  static const int kCpcBidFloorMicrosFieldNumber = 3;
  private:
  const ::google::protobuf::Int64Value& _internal_cpc_bid_floor_micros() const;
  public:
  const ::google::protobuf::Int64Value& cpc_bid_floor_micros() const;
  ::google::protobuf::Int64Value* release_cpc_bid_floor_micros();
  ::google::protobuf::Int64Value* mutable_cpc_bid_floor_micros();
  void set_allocated_cpc_bid_floor_micros(::google::protobuf::Int64Value* cpc_bid_floor_micros);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.TargetRoas)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::DoubleValue* target_roas_;
  ::google::protobuf::Int64Value* cpc_bid_ceiling_micros_;
  ::google::protobuf::Int64Value* cpc_bid_floor_micros_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TargetSpend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.TargetSpend) */ {
 public:
  TargetSpend();
  virtual ~TargetSpend();

  TargetSpend(const TargetSpend& from);

  inline TargetSpend& operator=(const TargetSpend& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetSpend(TargetSpend&& from) noexcept
    : TargetSpend() {
    *this = ::std::move(from);
  }

  inline TargetSpend& operator=(TargetSpend&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetSpend& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetSpend* internal_default_instance() {
    return reinterpret_cast<const TargetSpend*>(
               &_TargetSpend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(TargetSpend* other);
  friend void swap(TargetSpend& a, TargetSpend& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetSpend* New() const final {
    return CreateMaybeMessage<TargetSpend>(NULL);
  }

  TargetSpend* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TargetSpend>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TargetSpend& from);
  void MergeFrom(const TargetSpend& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TargetSpend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value target_spend_micros = 1;
  bool has_target_spend_micros() const;
  void clear_target_spend_micros();
  static const int kTargetSpendMicrosFieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_target_spend_micros() const;
  public:
  const ::google::protobuf::Int64Value& target_spend_micros() const;
  ::google::protobuf::Int64Value* release_target_spend_micros();
  ::google::protobuf::Int64Value* mutable_target_spend_micros();
  void set_allocated_target_spend_micros(::google::protobuf::Int64Value* target_spend_micros);

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
  bool has_cpc_bid_ceiling_micros() const;
  void clear_cpc_bid_ceiling_micros();
  static const int kCpcBidCeilingMicrosFieldNumber = 2;
  private:
  const ::google::protobuf::Int64Value& _internal_cpc_bid_ceiling_micros() const;
  public:
  const ::google::protobuf::Int64Value& cpc_bid_ceiling_micros() const;
  ::google::protobuf::Int64Value* release_cpc_bid_ceiling_micros();
  ::google::protobuf::Int64Value* mutable_cpc_bid_ceiling_micros();
  void set_allocated_cpc_bid_ceiling_micros(::google::protobuf::Int64Value* cpc_bid_ceiling_micros);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.TargetSpend)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Int64Value* target_spend_micros_;
  ::google::protobuf::Int64Value* cpc_bid_ceiling_micros_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PercentCpc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.common.PercentCpc) */ {
 public:
  PercentCpc();
  virtual ~PercentCpc();

  PercentCpc(const PercentCpc& from);

  inline PercentCpc& operator=(const PercentCpc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PercentCpc(PercentCpc&& from) noexcept
    : PercentCpc() {
    *this = ::std::move(from);
  }

  inline PercentCpc& operator=(PercentCpc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PercentCpc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PercentCpc* internal_default_instance() {
    return reinterpret_cast<const PercentCpc*>(
               &_PercentCpc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(PercentCpc* other);
  friend void swap(PercentCpc& a, PercentCpc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PercentCpc* New() const final {
    return CreateMaybeMessage<PercentCpc>(NULL);
  }

  PercentCpc* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PercentCpc>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PercentCpc& from);
  void MergeFrom(const PercentCpc& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PercentCpc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value cpc_bid_ceiling_micros = 1;
  bool has_cpc_bid_ceiling_micros() const;
  void clear_cpc_bid_ceiling_micros();
  static const int kCpcBidCeilingMicrosFieldNumber = 1;
  private:
  const ::google::protobuf::Int64Value& _internal_cpc_bid_ceiling_micros() const;
  public:
  const ::google::protobuf::Int64Value& cpc_bid_ceiling_micros() const;
  ::google::protobuf::Int64Value* release_cpc_bid_ceiling_micros();
  ::google::protobuf::Int64Value* mutable_cpc_bid_ceiling_micros();
  void set_allocated_cpc_bid_ceiling_micros(::google::protobuf::Int64Value* cpc_bid_ceiling_micros);

  // .google.protobuf.BoolValue enhanced_cpc_enabled = 2;
  bool has_enhanced_cpc_enabled() const;
  void clear_enhanced_cpc_enabled();
  static const int kEnhancedCpcEnabledFieldNumber = 2;
  private:
  const ::google::protobuf::BoolValue& _internal_enhanced_cpc_enabled() const;
  public:
  const ::google::protobuf::BoolValue& enhanced_cpc_enabled() const;
  ::google::protobuf::BoolValue* release_enhanced_cpc_enabled();
  ::google::protobuf::BoolValue* mutable_enhanced_cpc_enabled();
  void set_allocated_enhanced_cpc_enabled(::google::protobuf::BoolValue* enhanced_cpc_enabled);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.common.PercentCpc)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Int64Value* cpc_bid_ceiling_micros_;
  ::google::protobuf::BoolValue* enhanced_cpc_enabled_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EnhancedCpc

// -------------------------------------------------------------------

// ManualCpc

// .google.protobuf.BoolValue enhanced_cpc_enabled = 1;
inline bool ManualCpc::has_enhanced_cpc_enabled() const {
  return this != internal_default_instance() && enhanced_cpc_enabled_ != NULL;
}
inline const ::google::protobuf::BoolValue& ManualCpc::_internal_enhanced_cpc_enabled() const {
  return *enhanced_cpc_enabled_;
}
inline const ::google::protobuf::BoolValue& ManualCpc::enhanced_cpc_enabled() const {
  const ::google::protobuf::BoolValue* p = enhanced_cpc_enabled_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.ManualCpc.enhanced_cpc_enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* ManualCpc::release_enhanced_cpc_enabled() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.ManualCpc.enhanced_cpc_enabled)
  
  ::google::protobuf::BoolValue* temp = enhanced_cpc_enabled_;
  enhanced_cpc_enabled_ = NULL;
  return temp;
}
inline ::google::protobuf::BoolValue* ManualCpc::mutable_enhanced_cpc_enabled() {
  
  if (enhanced_cpc_enabled_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArenaNoVirtual());
    enhanced_cpc_enabled_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.ManualCpc.enhanced_cpc_enabled)
  return enhanced_cpc_enabled_;
}
inline void ManualCpc::set_allocated_enhanced_cpc_enabled(::google::protobuf::BoolValue* enhanced_cpc_enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enhanced_cpc_enabled_);
  }
  if (enhanced_cpc_enabled) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(enhanced_cpc_enabled)->GetArena();
    if (message_arena != submessage_arena) {
      enhanced_cpc_enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enhanced_cpc_enabled, submessage_arena);
    }
    
  } else {
    
  }
  enhanced_cpc_enabled_ = enhanced_cpc_enabled;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.ManualCpc.enhanced_cpc_enabled)
}

// -------------------------------------------------------------------

// ManualCpm

// -------------------------------------------------------------------

// MaximizeConversions

// -------------------------------------------------------------------

// MaximizeConversionValue

// .google.protobuf.DoubleValue target_roas = 1;
inline bool MaximizeConversionValue::has_target_roas() const {
  return this != internal_default_instance() && target_roas_ != NULL;
}
inline const ::google::protobuf::DoubleValue& MaximizeConversionValue::_internal_target_roas() const {
  return *target_roas_;
}
inline const ::google::protobuf::DoubleValue& MaximizeConversionValue::target_roas() const {
  const ::google::protobuf::DoubleValue* p = target_roas_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.MaximizeConversionValue.target_roas)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::DoubleValue*>(
      &::google::protobuf::_DoubleValue_default_instance_);
}
inline ::google::protobuf::DoubleValue* MaximizeConversionValue::release_target_roas() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.MaximizeConversionValue.target_roas)
  
  ::google::protobuf::DoubleValue* temp = target_roas_;
  target_roas_ = NULL;
  return temp;
}
inline ::google::protobuf::DoubleValue* MaximizeConversionValue::mutable_target_roas() {
  
  if (target_roas_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::DoubleValue>(GetArenaNoVirtual());
    target_roas_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.MaximizeConversionValue.target_roas)
  return target_roas_;
}
inline void MaximizeConversionValue::set_allocated_target_roas(::google::protobuf::DoubleValue* target_roas) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_roas_);
  }
  if (target_roas) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(target_roas)->GetArena();
    if (message_arena != submessage_arena) {
      target_roas = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_roas, submessage_arena);
    }
    
  } else {
    
  }
  target_roas_ = target_roas;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.MaximizeConversionValue.target_roas)
}

// -------------------------------------------------------------------

// PageOnePromoted

// .google.ads.googleads.v0.enums.PageOnePromotedStrategyGoalEnum.PageOnePromotedStrategyGoal strategy_goal = 1;
inline void PageOnePromoted::clear_strategy_goal() {
  strategy_goal_ = 0;
}
inline ::google::ads::googleads::v0::enums::PageOnePromotedStrategyGoalEnum_PageOnePromotedStrategyGoal PageOnePromoted::strategy_goal() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.PageOnePromoted.strategy_goal)
  return static_cast< ::google::ads::googleads::v0::enums::PageOnePromotedStrategyGoalEnum_PageOnePromotedStrategyGoal >(strategy_goal_);
}
inline void PageOnePromoted::set_strategy_goal(::google::ads::googleads::v0::enums::PageOnePromotedStrategyGoalEnum_PageOnePromotedStrategyGoal value) {
  
  strategy_goal_ = value;
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.common.PageOnePromoted.strategy_goal)
}

// .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
inline bool PageOnePromoted::has_cpc_bid_ceiling_micros() const {
  return this != internal_default_instance() && cpc_bid_ceiling_micros_ != NULL;
}
inline const ::google::protobuf::Int64Value& PageOnePromoted::_internal_cpc_bid_ceiling_micros() const {
  return *cpc_bid_ceiling_micros_;
}
inline const ::google::protobuf::Int64Value& PageOnePromoted::cpc_bid_ceiling_micros() const {
  const ::google::protobuf::Int64Value* p = cpc_bid_ceiling_micros_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.PageOnePromoted.cpc_bid_ceiling_micros)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* PageOnePromoted::release_cpc_bid_ceiling_micros() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.PageOnePromoted.cpc_bid_ceiling_micros)
  
  ::google::protobuf::Int64Value* temp = cpc_bid_ceiling_micros_;
  cpc_bid_ceiling_micros_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* PageOnePromoted::mutable_cpc_bid_ceiling_micros() {
  
  if (cpc_bid_ceiling_micros_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    cpc_bid_ceiling_micros_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.PageOnePromoted.cpc_bid_ceiling_micros)
  return cpc_bid_ceiling_micros_;
}
inline void PageOnePromoted::set_allocated_cpc_bid_ceiling_micros(::google::protobuf::Int64Value* cpc_bid_ceiling_micros) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpc_bid_ceiling_micros_);
  }
  if (cpc_bid_ceiling_micros) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(cpc_bid_ceiling_micros)->GetArena();
    if (message_arena != submessage_arena) {
      cpc_bid_ceiling_micros = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpc_bid_ceiling_micros, submessage_arena);
    }
    
  } else {
    
  }
  cpc_bid_ceiling_micros_ = cpc_bid_ceiling_micros;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.PageOnePromoted.cpc_bid_ceiling_micros)
}

// .google.protobuf.DoubleValue bid_modifier = 3;
inline bool PageOnePromoted::has_bid_modifier() const {
  return this != internal_default_instance() && bid_modifier_ != NULL;
}
inline const ::google::protobuf::DoubleValue& PageOnePromoted::_internal_bid_modifier() const {
  return *bid_modifier_;
}
inline const ::google::protobuf::DoubleValue& PageOnePromoted::bid_modifier() const {
  const ::google::protobuf::DoubleValue* p = bid_modifier_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.PageOnePromoted.bid_modifier)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::DoubleValue*>(
      &::google::protobuf::_DoubleValue_default_instance_);
}
inline ::google::protobuf::DoubleValue* PageOnePromoted::release_bid_modifier() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.PageOnePromoted.bid_modifier)
  
  ::google::protobuf::DoubleValue* temp = bid_modifier_;
  bid_modifier_ = NULL;
  return temp;
}
inline ::google::protobuf::DoubleValue* PageOnePromoted::mutable_bid_modifier() {
  
  if (bid_modifier_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::DoubleValue>(GetArenaNoVirtual());
    bid_modifier_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.PageOnePromoted.bid_modifier)
  return bid_modifier_;
}
inline void PageOnePromoted::set_allocated_bid_modifier(::google::protobuf::DoubleValue* bid_modifier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bid_modifier_);
  }
  if (bid_modifier) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(bid_modifier)->GetArena();
    if (message_arena != submessage_arena) {
      bid_modifier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bid_modifier, submessage_arena);
    }
    
  } else {
    
  }
  bid_modifier_ = bid_modifier;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.PageOnePromoted.bid_modifier)
}

// .google.protobuf.BoolValue only_raise_cpc_bids = 4;
inline bool PageOnePromoted::has_only_raise_cpc_bids() const {
  return this != internal_default_instance() && only_raise_cpc_bids_ != NULL;
}
inline const ::google::protobuf::BoolValue& PageOnePromoted::_internal_only_raise_cpc_bids() const {
  return *only_raise_cpc_bids_;
}
inline const ::google::protobuf::BoolValue& PageOnePromoted::only_raise_cpc_bids() const {
  const ::google::protobuf::BoolValue* p = only_raise_cpc_bids_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.PageOnePromoted.only_raise_cpc_bids)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* PageOnePromoted::release_only_raise_cpc_bids() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.PageOnePromoted.only_raise_cpc_bids)
  
  ::google::protobuf::BoolValue* temp = only_raise_cpc_bids_;
  only_raise_cpc_bids_ = NULL;
  return temp;
}
inline ::google::protobuf::BoolValue* PageOnePromoted::mutable_only_raise_cpc_bids() {
  
  if (only_raise_cpc_bids_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArenaNoVirtual());
    only_raise_cpc_bids_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.PageOnePromoted.only_raise_cpc_bids)
  return only_raise_cpc_bids_;
}
inline void PageOnePromoted::set_allocated_only_raise_cpc_bids(::google::protobuf::BoolValue* only_raise_cpc_bids) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(only_raise_cpc_bids_);
  }
  if (only_raise_cpc_bids) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(only_raise_cpc_bids)->GetArena();
    if (message_arena != submessage_arena) {
      only_raise_cpc_bids = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, only_raise_cpc_bids, submessage_arena);
    }
    
  } else {
    
  }
  only_raise_cpc_bids_ = only_raise_cpc_bids;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.PageOnePromoted.only_raise_cpc_bids)
}

// .google.protobuf.BoolValue raise_cpc_bid_when_budget_constrained = 5;
inline bool PageOnePromoted::has_raise_cpc_bid_when_budget_constrained() const {
  return this != internal_default_instance() && raise_cpc_bid_when_budget_constrained_ != NULL;
}
inline const ::google::protobuf::BoolValue& PageOnePromoted::_internal_raise_cpc_bid_when_budget_constrained() const {
  return *raise_cpc_bid_when_budget_constrained_;
}
inline const ::google::protobuf::BoolValue& PageOnePromoted::raise_cpc_bid_when_budget_constrained() const {
  const ::google::protobuf::BoolValue* p = raise_cpc_bid_when_budget_constrained_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.PageOnePromoted.raise_cpc_bid_when_budget_constrained)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* PageOnePromoted::release_raise_cpc_bid_when_budget_constrained() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.PageOnePromoted.raise_cpc_bid_when_budget_constrained)
  
  ::google::protobuf::BoolValue* temp = raise_cpc_bid_when_budget_constrained_;
  raise_cpc_bid_when_budget_constrained_ = NULL;
  return temp;
}
inline ::google::protobuf::BoolValue* PageOnePromoted::mutable_raise_cpc_bid_when_budget_constrained() {
  
  if (raise_cpc_bid_when_budget_constrained_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArenaNoVirtual());
    raise_cpc_bid_when_budget_constrained_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.PageOnePromoted.raise_cpc_bid_when_budget_constrained)
  return raise_cpc_bid_when_budget_constrained_;
}
inline void PageOnePromoted::set_allocated_raise_cpc_bid_when_budget_constrained(::google::protobuf::BoolValue* raise_cpc_bid_when_budget_constrained) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(raise_cpc_bid_when_budget_constrained_);
  }
  if (raise_cpc_bid_when_budget_constrained) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(raise_cpc_bid_when_budget_constrained)->GetArena();
    if (message_arena != submessage_arena) {
      raise_cpc_bid_when_budget_constrained = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, raise_cpc_bid_when_budget_constrained, submessage_arena);
    }
    
  } else {
    
  }
  raise_cpc_bid_when_budget_constrained_ = raise_cpc_bid_when_budget_constrained;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.PageOnePromoted.raise_cpc_bid_when_budget_constrained)
}

// .google.protobuf.BoolValue raise_cpc_bid_when_quality_score_is_low = 6;
inline bool PageOnePromoted::has_raise_cpc_bid_when_quality_score_is_low() const {
  return this != internal_default_instance() && raise_cpc_bid_when_quality_score_is_low_ != NULL;
}
inline const ::google::protobuf::BoolValue& PageOnePromoted::_internal_raise_cpc_bid_when_quality_score_is_low() const {
  return *raise_cpc_bid_when_quality_score_is_low_;
}
inline const ::google::protobuf::BoolValue& PageOnePromoted::raise_cpc_bid_when_quality_score_is_low() const {
  const ::google::protobuf::BoolValue* p = raise_cpc_bid_when_quality_score_is_low_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.PageOnePromoted.raise_cpc_bid_when_quality_score_is_low)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* PageOnePromoted::release_raise_cpc_bid_when_quality_score_is_low() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.PageOnePromoted.raise_cpc_bid_when_quality_score_is_low)
  
  ::google::protobuf::BoolValue* temp = raise_cpc_bid_when_quality_score_is_low_;
  raise_cpc_bid_when_quality_score_is_low_ = NULL;
  return temp;
}
inline ::google::protobuf::BoolValue* PageOnePromoted::mutable_raise_cpc_bid_when_quality_score_is_low() {
  
  if (raise_cpc_bid_when_quality_score_is_low_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArenaNoVirtual());
    raise_cpc_bid_when_quality_score_is_low_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.PageOnePromoted.raise_cpc_bid_when_quality_score_is_low)
  return raise_cpc_bid_when_quality_score_is_low_;
}
inline void PageOnePromoted::set_allocated_raise_cpc_bid_when_quality_score_is_low(::google::protobuf::BoolValue* raise_cpc_bid_when_quality_score_is_low) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(raise_cpc_bid_when_quality_score_is_low_);
  }
  if (raise_cpc_bid_when_quality_score_is_low) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(raise_cpc_bid_when_quality_score_is_low)->GetArena();
    if (message_arena != submessage_arena) {
      raise_cpc_bid_when_quality_score_is_low = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, raise_cpc_bid_when_quality_score_is_low, submessage_arena);
    }
    
  } else {
    
  }
  raise_cpc_bid_when_quality_score_is_low_ = raise_cpc_bid_when_quality_score_is_low;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.PageOnePromoted.raise_cpc_bid_when_quality_score_is_low)
}

// -------------------------------------------------------------------

// TargetCpa

// .google.protobuf.Int64Value target_cpa_micros = 1;
inline bool TargetCpa::has_target_cpa_micros() const {
  return this != internal_default_instance() && target_cpa_micros_ != NULL;
}
inline const ::google::protobuf::Int64Value& TargetCpa::_internal_target_cpa_micros() const {
  return *target_cpa_micros_;
}
inline const ::google::protobuf::Int64Value& TargetCpa::target_cpa_micros() const {
  const ::google::protobuf::Int64Value* p = target_cpa_micros_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.TargetCpa.target_cpa_micros)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* TargetCpa::release_target_cpa_micros() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.TargetCpa.target_cpa_micros)
  
  ::google::protobuf::Int64Value* temp = target_cpa_micros_;
  target_cpa_micros_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* TargetCpa::mutable_target_cpa_micros() {
  
  if (target_cpa_micros_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    target_cpa_micros_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.TargetCpa.target_cpa_micros)
  return target_cpa_micros_;
}
inline void TargetCpa::set_allocated_target_cpa_micros(::google::protobuf::Int64Value* target_cpa_micros) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_cpa_micros_);
  }
  if (target_cpa_micros) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(target_cpa_micros)->GetArena();
    if (message_arena != submessage_arena) {
      target_cpa_micros = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_cpa_micros, submessage_arena);
    }
    
  } else {
    
  }
  target_cpa_micros_ = target_cpa_micros;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.TargetCpa.target_cpa_micros)
}

// .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
inline bool TargetCpa::has_cpc_bid_ceiling_micros() const {
  return this != internal_default_instance() && cpc_bid_ceiling_micros_ != NULL;
}
inline const ::google::protobuf::Int64Value& TargetCpa::_internal_cpc_bid_ceiling_micros() const {
  return *cpc_bid_ceiling_micros_;
}
inline const ::google::protobuf::Int64Value& TargetCpa::cpc_bid_ceiling_micros() const {
  const ::google::protobuf::Int64Value* p = cpc_bid_ceiling_micros_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.TargetCpa.cpc_bid_ceiling_micros)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* TargetCpa::release_cpc_bid_ceiling_micros() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.TargetCpa.cpc_bid_ceiling_micros)
  
  ::google::protobuf::Int64Value* temp = cpc_bid_ceiling_micros_;
  cpc_bid_ceiling_micros_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* TargetCpa::mutable_cpc_bid_ceiling_micros() {
  
  if (cpc_bid_ceiling_micros_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    cpc_bid_ceiling_micros_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.TargetCpa.cpc_bid_ceiling_micros)
  return cpc_bid_ceiling_micros_;
}
inline void TargetCpa::set_allocated_cpc_bid_ceiling_micros(::google::protobuf::Int64Value* cpc_bid_ceiling_micros) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpc_bid_ceiling_micros_);
  }
  if (cpc_bid_ceiling_micros) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(cpc_bid_ceiling_micros)->GetArena();
    if (message_arena != submessage_arena) {
      cpc_bid_ceiling_micros = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpc_bid_ceiling_micros, submessage_arena);
    }
    
  } else {
    
  }
  cpc_bid_ceiling_micros_ = cpc_bid_ceiling_micros;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.TargetCpa.cpc_bid_ceiling_micros)
}

// .google.protobuf.Int64Value cpc_bid_floor_micros = 3;
inline bool TargetCpa::has_cpc_bid_floor_micros() const {
  return this != internal_default_instance() && cpc_bid_floor_micros_ != NULL;
}
inline const ::google::protobuf::Int64Value& TargetCpa::_internal_cpc_bid_floor_micros() const {
  return *cpc_bid_floor_micros_;
}
inline const ::google::protobuf::Int64Value& TargetCpa::cpc_bid_floor_micros() const {
  const ::google::protobuf::Int64Value* p = cpc_bid_floor_micros_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.TargetCpa.cpc_bid_floor_micros)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* TargetCpa::release_cpc_bid_floor_micros() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.TargetCpa.cpc_bid_floor_micros)
  
  ::google::protobuf::Int64Value* temp = cpc_bid_floor_micros_;
  cpc_bid_floor_micros_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* TargetCpa::mutable_cpc_bid_floor_micros() {
  
  if (cpc_bid_floor_micros_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    cpc_bid_floor_micros_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.TargetCpa.cpc_bid_floor_micros)
  return cpc_bid_floor_micros_;
}
inline void TargetCpa::set_allocated_cpc_bid_floor_micros(::google::protobuf::Int64Value* cpc_bid_floor_micros) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpc_bid_floor_micros_);
  }
  if (cpc_bid_floor_micros) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(cpc_bid_floor_micros)->GetArena();
    if (message_arena != submessage_arena) {
      cpc_bid_floor_micros = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpc_bid_floor_micros, submessage_arena);
    }
    
  } else {
    
  }
  cpc_bid_floor_micros_ = cpc_bid_floor_micros;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.TargetCpa.cpc_bid_floor_micros)
}

// -------------------------------------------------------------------

// TargetOutrankShare

// .google.protobuf.Int32Value target_outrank_share_micros = 1;
inline bool TargetOutrankShare::has_target_outrank_share_micros() const {
  return this != internal_default_instance() && target_outrank_share_micros_ != NULL;
}
inline const ::google::protobuf::Int32Value& TargetOutrankShare::_internal_target_outrank_share_micros() const {
  return *target_outrank_share_micros_;
}
inline const ::google::protobuf::Int32Value& TargetOutrankShare::target_outrank_share_micros() const {
  const ::google::protobuf::Int32Value* p = target_outrank_share_micros_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.TargetOutrankShare.target_outrank_share_micros)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int32Value*>(
      &::google::protobuf::_Int32Value_default_instance_);
}
inline ::google::protobuf::Int32Value* TargetOutrankShare::release_target_outrank_share_micros() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.TargetOutrankShare.target_outrank_share_micros)
  
  ::google::protobuf::Int32Value* temp = target_outrank_share_micros_;
  target_outrank_share_micros_ = NULL;
  return temp;
}
inline ::google::protobuf::Int32Value* TargetOutrankShare::mutable_target_outrank_share_micros() {
  
  if (target_outrank_share_micros_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int32Value>(GetArenaNoVirtual());
    target_outrank_share_micros_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.TargetOutrankShare.target_outrank_share_micros)
  return target_outrank_share_micros_;
}
inline void TargetOutrankShare::set_allocated_target_outrank_share_micros(::google::protobuf::Int32Value* target_outrank_share_micros) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_outrank_share_micros_);
  }
  if (target_outrank_share_micros) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(target_outrank_share_micros)->GetArena();
    if (message_arena != submessage_arena) {
      target_outrank_share_micros = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_outrank_share_micros, submessage_arena);
    }
    
  } else {
    
  }
  target_outrank_share_micros_ = target_outrank_share_micros;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.TargetOutrankShare.target_outrank_share_micros)
}

// .google.protobuf.StringValue competitor_domain = 2;
inline bool TargetOutrankShare::has_competitor_domain() const {
  return this != internal_default_instance() && competitor_domain_ != NULL;
}
inline const ::google::protobuf::StringValue& TargetOutrankShare::_internal_competitor_domain() const {
  return *competitor_domain_;
}
inline const ::google::protobuf::StringValue& TargetOutrankShare::competitor_domain() const {
  const ::google::protobuf::StringValue* p = competitor_domain_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.TargetOutrankShare.competitor_domain)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* TargetOutrankShare::release_competitor_domain() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.TargetOutrankShare.competitor_domain)
  
  ::google::protobuf::StringValue* temp = competitor_domain_;
  competitor_domain_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* TargetOutrankShare::mutable_competitor_domain() {
  
  if (competitor_domain_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    competitor_domain_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.TargetOutrankShare.competitor_domain)
  return competitor_domain_;
}
inline void TargetOutrankShare::set_allocated_competitor_domain(::google::protobuf::StringValue* competitor_domain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(competitor_domain_);
  }
  if (competitor_domain) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(competitor_domain)->GetArena();
    if (message_arena != submessage_arena) {
      competitor_domain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, competitor_domain, submessage_arena);
    }
    
  } else {
    
  }
  competitor_domain_ = competitor_domain;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.TargetOutrankShare.competitor_domain)
}

// .google.protobuf.Int64Value cpc_bid_ceiling_micros = 3;
inline bool TargetOutrankShare::has_cpc_bid_ceiling_micros() const {
  return this != internal_default_instance() && cpc_bid_ceiling_micros_ != NULL;
}
inline const ::google::protobuf::Int64Value& TargetOutrankShare::_internal_cpc_bid_ceiling_micros() const {
  return *cpc_bid_ceiling_micros_;
}
inline const ::google::protobuf::Int64Value& TargetOutrankShare::cpc_bid_ceiling_micros() const {
  const ::google::protobuf::Int64Value* p = cpc_bid_ceiling_micros_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.TargetOutrankShare.cpc_bid_ceiling_micros)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* TargetOutrankShare::release_cpc_bid_ceiling_micros() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.TargetOutrankShare.cpc_bid_ceiling_micros)
  
  ::google::protobuf::Int64Value* temp = cpc_bid_ceiling_micros_;
  cpc_bid_ceiling_micros_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* TargetOutrankShare::mutable_cpc_bid_ceiling_micros() {
  
  if (cpc_bid_ceiling_micros_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    cpc_bid_ceiling_micros_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.TargetOutrankShare.cpc_bid_ceiling_micros)
  return cpc_bid_ceiling_micros_;
}
inline void TargetOutrankShare::set_allocated_cpc_bid_ceiling_micros(::google::protobuf::Int64Value* cpc_bid_ceiling_micros) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpc_bid_ceiling_micros_);
  }
  if (cpc_bid_ceiling_micros) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(cpc_bid_ceiling_micros)->GetArena();
    if (message_arena != submessage_arena) {
      cpc_bid_ceiling_micros = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpc_bid_ceiling_micros, submessage_arena);
    }
    
  } else {
    
  }
  cpc_bid_ceiling_micros_ = cpc_bid_ceiling_micros;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.TargetOutrankShare.cpc_bid_ceiling_micros)
}

// .google.protobuf.BoolValue only_raise_cpc_bids = 4;
inline bool TargetOutrankShare::has_only_raise_cpc_bids() const {
  return this != internal_default_instance() && only_raise_cpc_bids_ != NULL;
}
inline const ::google::protobuf::BoolValue& TargetOutrankShare::_internal_only_raise_cpc_bids() const {
  return *only_raise_cpc_bids_;
}
inline const ::google::protobuf::BoolValue& TargetOutrankShare::only_raise_cpc_bids() const {
  const ::google::protobuf::BoolValue* p = only_raise_cpc_bids_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.TargetOutrankShare.only_raise_cpc_bids)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* TargetOutrankShare::release_only_raise_cpc_bids() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.TargetOutrankShare.only_raise_cpc_bids)
  
  ::google::protobuf::BoolValue* temp = only_raise_cpc_bids_;
  only_raise_cpc_bids_ = NULL;
  return temp;
}
inline ::google::protobuf::BoolValue* TargetOutrankShare::mutable_only_raise_cpc_bids() {
  
  if (only_raise_cpc_bids_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArenaNoVirtual());
    only_raise_cpc_bids_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.TargetOutrankShare.only_raise_cpc_bids)
  return only_raise_cpc_bids_;
}
inline void TargetOutrankShare::set_allocated_only_raise_cpc_bids(::google::protobuf::BoolValue* only_raise_cpc_bids) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(only_raise_cpc_bids_);
  }
  if (only_raise_cpc_bids) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(only_raise_cpc_bids)->GetArena();
    if (message_arena != submessage_arena) {
      only_raise_cpc_bids = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, only_raise_cpc_bids, submessage_arena);
    }
    
  } else {
    
  }
  only_raise_cpc_bids_ = only_raise_cpc_bids;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.TargetOutrankShare.only_raise_cpc_bids)
}

// .google.protobuf.BoolValue raise_cpc_bid_when_quality_score_is_low = 5;
inline bool TargetOutrankShare::has_raise_cpc_bid_when_quality_score_is_low() const {
  return this != internal_default_instance() && raise_cpc_bid_when_quality_score_is_low_ != NULL;
}
inline const ::google::protobuf::BoolValue& TargetOutrankShare::_internal_raise_cpc_bid_when_quality_score_is_low() const {
  return *raise_cpc_bid_when_quality_score_is_low_;
}
inline const ::google::protobuf::BoolValue& TargetOutrankShare::raise_cpc_bid_when_quality_score_is_low() const {
  const ::google::protobuf::BoolValue* p = raise_cpc_bid_when_quality_score_is_low_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.TargetOutrankShare.raise_cpc_bid_when_quality_score_is_low)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* TargetOutrankShare::release_raise_cpc_bid_when_quality_score_is_low() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.TargetOutrankShare.raise_cpc_bid_when_quality_score_is_low)
  
  ::google::protobuf::BoolValue* temp = raise_cpc_bid_when_quality_score_is_low_;
  raise_cpc_bid_when_quality_score_is_low_ = NULL;
  return temp;
}
inline ::google::protobuf::BoolValue* TargetOutrankShare::mutable_raise_cpc_bid_when_quality_score_is_low() {
  
  if (raise_cpc_bid_when_quality_score_is_low_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArenaNoVirtual());
    raise_cpc_bid_when_quality_score_is_low_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.TargetOutrankShare.raise_cpc_bid_when_quality_score_is_low)
  return raise_cpc_bid_when_quality_score_is_low_;
}
inline void TargetOutrankShare::set_allocated_raise_cpc_bid_when_quality_score_is_low(::google::protobuf::BoolValue* raise_cpc_bid_when_quality_score_is_low) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(raise_cpc_bid_when_quality_score_is_low_);
  }
  if (raise_cpc_bid_when_quality_score_is_low) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(raise_cpc_bid_when_quality_score_is_low)->GetArena();
    if (message_arena != submessage_arena) {
      raise_cpc_bid_when_quality_score_is_low = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, raise_cpc_bid_when_quality_score_is_low, submessage_arena);
    }
    
  } else {
    
  }
  raise_cpc_bid_when_quality_score_is_low_ = raise_cpc_bid_when_quality_score_is_low;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.TargetOutrankShare.raise_cpc_bid_when_quality_score_is_low)
}

// -------------------------------------------------------------------

// TargetRoas

// .google.protobuf.DoubleValue target_roas = 1;
inline bool TargetRoas::has_target_roas() const {
  return this != internal_default_instance() && target_roas_ != NULL;
}
inline const ::google::protobuf::DoubleValue& TargetRoas::_internal_target_roas() const {
  return *target_roas_;
}
inline const ::google::protobuf::DoubleValue& TargetRoas::target_roas() const {
  const ::google::protobuf::DoubleValue* p = target_roas_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.TargetRoas.target_roas)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::DoubleValue*>(
      &::google::protobuf::_DoubleValue_default_instance_);
}
inline ::google::protobuf::DoubleValue* TargetRoas::release_target_roas() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.TargetRoas.target_roas)
  
  ::google::protobuf::DoubleValue* temp = target_roas_;
  target_roas_ = NULL;
  return temp;
}
inline ::google::protobuf::DoubleValue* TargetRoas::mutable_target_roas() {
  
  if (target_roas_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::DoubleValue>(GetArenaNoVirtual());
    target_roas_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.TargetRoas.target_roas)
  return target_roas_;
}
inline void TargetRoas::set_allocated_target_roas(::google::protobuf::DoubleValue* target_roas) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_roas_);
  }
  if (target_roas) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(target_roas)->GetArena();
    if (message_arena != submessage_arena) {
      target_roas = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_roas, submessage_arena);
    }
    
  } else {
    
  }
  target_roas_ = target_roas;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.TargetRoas.target_roas)
}

// .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
inline bool TargetRoas::has_cpc_bid_ceiling_micros() const {
  return this != internal_default_instance() && cpc_bid_ceiling_micros_ != NULL;
}
inline const ::google::protobuf::Int64Value& TargetRoas::_internal_cpc_bid_ceiling_micros() const {
  return *cpc_bid_ceiling_micros_;
}
inline const ::google::protobuf::Int64Value& TargetRoas::cpc_bid_ceiling_micros() const {
  const ::google::protobuf::Int64Value* p = cpc_bid_ceiling_micros_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.TargetRoas.cpc_bid_ceiling_micros)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* TargetRoas::release_cpc_bid_ceiling_micros() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.TargetRoas.cpc_bid_ceiling_micros)
  
  ::google::protobuf::Int64Value* temp = cpc_bid_ceiling_micros_;
  cpc_bid_ceiling_micros_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* TargetRoas::mutable_cpc_bid_ceiling_micros() {
  
  if (cpc_bid_ceiling_micros_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    cpc_bid_ceiling_micros_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.TargetRoas.cpc_bid_ceiling_micros)
  return cpc_bid_ceiling_micros_;
}
inline void TargetRoas::set_allocated_cpc_bid_ceiling_micros(::google::protobuf::Int64Value* cpc_bid_ceiling_micros) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpc_bid_ceiling_micros_);
  }
  if (cpc_bid_ceiling_micros) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(cpc_bid_ceiling_micros)->GetArena();
    if (message_arena != submessage_arena) {
      cpc_bid_ceiling_micros = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpc_bid_ceiling_micros, submessage_arena);
    }
    
  } else {
    
  }
  cpc_bid_ceiling_micros_ = cpc_bid_ceiling_micros;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.TargetRoas.cpc_bid_ceiling_micros)
}

// .google.protobuf.Int64Value cpc_bid_floor_micros = 3;
inline bool TargetRoas::has_cpc_bid_floor_micros() const {
  return this != internal_default_instance() && cpc_bid_floor_micros_ != NULL;
}
inline const ::google::protobuf::Int64Value& TargetRoas::_internal_cpc_bid_floor_micros() const {
  return *cpc_bid_floor_micros_;
}
inline const ::google::protobuf::Int64Value& TargetRoas::cpc_bid_floor_micros() const {
  const ::google::protobuf::Int64Value* p = cpc_bid_floor_micros_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.TargetRoas.cpc_bid_floor_micros)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* TargetRoas::release_cpc_bid_floor_micros() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.TargetRoas.cpc_bid_floor_micros)
  
  ::google::protobuf::Int64Value* temp = cpc_bid_floor_micros_;
  cpc_bid_floor_micros_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* TargetRoas::mutable_cpc_bid_floor_micros() {
  
  if (cpc_bid_floor_micros_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    cpc_bid_floor_micros_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.TargetRoas.cpc_bid_floor_micros)
  return cpc_bid_floor_micros_;
}
inline void TargetRoas::set_allocated_cpc_bid_floor_micros(::google::protobuf::Int64Value* cpc_bid_floor_micros) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpc_bid_floor_micros_);
  }
  if (cpc_bid_floor_micros) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(cpc_bid_floor_micros)->GetArena();
    if (message_arena != submessage_arena) {
      cpc_bid_floor_micros = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpc_bid_floor_micros, submessage_arena);
    }
    
  } else {
    
  }
  cpc_bid_floor_micros_ = cpc_bid_floor_micros;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.TargetRoas.cpc_bid_floor_micros)
}

// -------------------------------------------------------------------

// TargetSpend

// .google.protobuf.Int64Value target_spend_micros = 1;
inline bool TargetSpend::has_target_spend_micros() const {
  return this != internal_default_instance() && target_spend_micros_ != NULL;
}
inline const ::google::protobuf::Int64Value& TargetSpend::_internal_target_spend_micros() const {
  return *target_spend_micros_;
}
inline const ::google::protobuf::Int64Value& TargetSpend::target_spend_micros() const {
  const ::google::protobuf::Int64Value* p = target_spend_micros_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.TargetSpend.target_spend_micros)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* TargetSpend::release_target_spend_micros() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.TargetSpend.target_spend_micros)
  
  ::google::protobuf::Int64Value* temp = target_spend_micros_;
  target_spend_micros_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* TargetSpend::mutable_target_spend_micros() {
  
  if (target_spend_micros_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    target_spend_micros_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.TargetSpend.target_spend_micros)
  return target_spend_micros_;
}
inline void TargetSpend::set_allocated_target_spend_micros(::google::protobuf::Int64Value* target_spend_micros) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_spend_micros_);
  }
  if (target_spend_micros) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(target_spend_micros)->GetArena();
    if (message_arena != submessage_arena) {
      target_spend_micros = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_spend_micros, submessage_arena);
    }
    
  } else {
    
  }
  target_spend_micros_ = target_spend_micros;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.TargetSpend.target_spend_micros)
}

// .google.protobuf.Int64Value cpc_bid_ceiling_micros = 2;
inline bool TargetSpend::has_cpc_bid_ceiling_micros() const {
  return this != internal_default_instance() && cpc_bid_ceiling_micros_ != NULL;
}
inline const ::google::protobuf::Int64Value& TargetSpend::_internal_cpc_bid_ceiling_micros() const {
  return *cpc_bid_ceiling_micros_;
}
inline const ::google::protobuf::Int64Value& TargetSpend::cpc_bid_ceiling_micros() const {
  const ::google::protobuf::Int64Value* p = cpc_bid_ceiling_micros_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.TargetSpend.cpc_bid_ceiling_micros)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* TargetSpend::release_cpc_bid_ceiling_micros() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.TargetSpend.cpc_bid_ceiling_micros)
  
  ::google::protobuf::Int64Value* temp = cpc_bid_ceiling_micros_;
  cpc_bid_ceiling_micros_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* TargetSpend::mutable_cpc_bid_ceiling_micros() {
  
  if (cpc_bid_ceiling_micros_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    cpc_bid_ceiling_micros_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.TargetSpend.cpc_bid_ceiling_micros)
  return cpc_bid_ceiling_micros_;
}
inline void TargetSpend::set_allocated_cpc_bid_ceiling_micros(::google::protobuf::Int64Value* cpc_bid_ceiling_micros) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpc_bid_ceiling_micros_);
  }
  if (cpc_bid_ceiling_micros) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(cpc_bid_ceiling_micros)->GetArena();
    if (message_arena != submessage_arena) {
      cpc_bid_ceiling_micros = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpc_bid_ceiling_micros, submessage_arena);
    }
    
  } else {
    
  }
  cpc_bid_ceiling_micros_ = cpc_bid_ceiling_micros;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.TargetSpend.cpc_bid_ceiling_micros)
}

// -------------------------------------------------------------------

// PercentCpc

// .google.protobuf.Int64Value cpc_bid_ceiling_micros = 1;
inline bool PercentCpc::has_cpc_bid_ceiling_micros() const {
  return this != internal_default_instance() && cpc_bid_ceiling_micros_ != NULL;
}
inline const ::google::protobuf::Int64Value& PercentCpc::_internal_cpc_bid_ceiling_micros() const {
  return *cpc_bid_ceiling_micros_;
}
inline const ::google::protobuf::Int64Value& PercentCpc::cpc_bid_ceiling_micros() const {
  const ::google::protobuf::Int64Value* p = cpc_bid_ceiling_micros_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.PercentCpc.cpc_bid_ceiling_micros)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* PercentCpc::release_cpc_bid_ceiling_micros() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.PercentCpc.cpc_bid_ceiling_micros)
  
  ::google::protobuf::Int64Value* temp = cpc_bid_ceiling_micros_;
  cpc_bid_ceiling_micros_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* PercentCpc::mutable_cpc_bid_ceiling_micros() {
  
  if (cpc_bid_ceiling_micros_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    cpc_bid_ceiling_micros_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.PercentCpc.cpc_bid_ceiling_micros)
  return cpc_bid_ceiling_micros_;
}
inline void PercentCpc::set_allocated_cpc_bid_ceiling_micros(::google::protobuf::Int64Value* cpc_bid_ceiling_micros) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpc_bid_ceiling_micros_);
  }
  if (cpc_bid_ceiling_micros) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(cpc_bid_ceiling_micros)->GetArena();
    if (message_arena != submessage_arena) {
      cpc_bid_ceiling_micros = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpc_bid_ceiling_micros, submessage_arena);
    }
    
  } else {
    
  }
  cpc_bid_ceiling_micros_ = cpc_bid_ceiling_micros;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.PercentCpc.cpc_bid_ceiling_micros)
}

// .google.protobuf.BoolValue enhanced_cpc_enabled = 2;
inline bool PercentCpc::has_enhanced_cpc_enabled() const {
  return this != internal_default_instance() && enhanced_cpc_enabled_ != NULL;
}
inline const ::google::protobuf::BoolValue& PercentCpc::_internal_enhanced_cpc_enabled() const {
  return *enhanced_cpc_enabled_;
}
inline const ::google::protobuf::BoolValue& PercentCpc::enhanced_cpc_enabled() const {
  const ::google::protobuf::BoolValue* p = enhanced_cpc_enabled_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.common.PercentCpc.enhanced_cpc_enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* PercentCpc::release_enhanced_cpc_enabled() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.common.PercentCpc.enhanced_cpc_enabled)
  
  ::google::protobuf::BoolValue* temp = enhanced_cpc_enabled_;
  enhanced_cpc_enabled_ = NULL;
  return temp;
}
inline ::google::protobuf::BoolValue* PercentCpc::mutable_enhanced_cpc_enabled() {
  
  if (enhanced_cpc_enabled_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArenaNoVirtual());
    enhanced_cpc_enabled_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.common.PercentCpc.enhanced_cpc_enabled)
  return enhanced_cpc_enabled_;
}
inline void PercentCpc::set_allocated_enhanced_cpc_enabled(::google::protobuf::BoolValue* enhanced_cpc_enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enhanced_cpc_enabled_);
  }
  if (enhanced_cpc_enabled) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(enhanced_cpc_enabled)->GetArena();
    if (message_arena != submessage_arena) {
      enhanced_cpc_enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enhanced_cpc_enabled, submessage_arena);
    }
    
  } else {
    
  }
  enhanced_cpc_enabled_ = enhanced_cpc_enabled;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.common.PercentCpc.enhanced_cpc_enabled)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto
