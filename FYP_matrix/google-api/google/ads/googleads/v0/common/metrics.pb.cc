// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/common/metrics.proto

#include "google/ads/googleads/v0/common/metrics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64Value;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace common {
class MetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Metrics>
      _instance;
} _Metrics_default_instance_;
}  // namespace common
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fmetrics_2eproto {
static void InitDefaultsMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::common::_Metrics_default_instance_;
    new (ptr) ::google::ads::googleads::v0::common::Metrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::common::Metrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Metrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMetrics}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_DoubleValue.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Metrics.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, all_conversion_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, all_conversion_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, all_conversions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, all_conversions_value_per_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, all_conversions_value_per_interaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, average_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, average_cpc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, average_cpm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, average_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, bounce_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, clicks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, content_budget_lost_impression_share_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, content_impression_share_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, content_rank_lost_impression_share_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, conversion_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, conversion_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, conversion_value_per_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, conversion_value_per_interaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, conversions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, cost_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, cost_per_all_conversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, cost_per_conversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, cross_device_conversions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, ctr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, engagement_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, engagements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, impressions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, interaction_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, interactions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, invalid_click_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, invalid_clicks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, percent_new_visitors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, phone_calls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, phone_impressions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, phone_through_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, relative_ctr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, search_budget_lost_impression_share_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, search_exact_match_impression_share_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, search_impression_share_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, search_rank_lost_impression_share_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, value_per_all_conversions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, value_per_conversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::common::Metrics, view_through_conversions_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::ads::googleads::v0::common::Metrics)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::common::_Metrics_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/ads/googleads/v0/common/metrics.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n,google/ads/googleads/v0/common/metrics"
      ".proto\022\036google.ads.googleads.v0.common\032\036"
      "google/protobuf/wrappers.proto\"\367\023\n\007Metri"
      "cs\0229\n\023all_conversion_rate\030\005 \001(\0132\034.google"
      ".protobuf.DoubleValue\022:\n\024all_conversion_"
      "value\030\006 \001(\0132\034.google.protobuf.DoubleValu"
      "e\0225\n\017all_conversions\030\007 \001(\0132\034.google.prot"
      "obuf.DoubleValue\022D\n\036all_conversions_valu"
      "e_per_cost\030> \001(\0132\034.google.protobuf.Doubl"
      "eValue\022K\n%all_conversions_value_per_inte"
      "raction\030= \001(\0132\034.google.protobuf.DoubleVa"
      "lue\0222\n\014average_cost\030\010 \001(\0132\034.google.proto"
      "buf.DoubleValue\0221\n\013average_cpc\030\t \001(\0132\034.g"
      "oogle.protobuf.DoubleValue\0221\n\013average_cp"
      "m\030\n \001(\0132\034.google.protobuf.DoubleValue\0226\n"
      "\020average_position\030\r \001(\0132\034.google.protobu"
      "f.DoubleValue\0221\n\013bounce_rate\030\017 \001(\0132\034.goo"
      "gle.protobuf.DoubleValue\022+\n\006clicks\030\023 \001(\013"
      "2\033.google.protobuf.Int64Value\022J\n$content"
      "_budget_lost_impression_share\030\024 \001(\0132\034.go"
      "ogle.protobuf.DoubleValue\022>\n\030content_imp"
      "ression_share\030\025 \001(\0132\034.google.protobuf.Do"
      "ubleValue\022H\n\"content_rank_lost_impressio"
      "n_share\030\026 \001(\0132\034.google.protobuf.DoubleVa"
      "lue\0225\n\017conversion_rate\030\027 \001(\0132\034.google.pr"
      "otobuf.DoubleValue\0226\n\020conversion_value\030\030"
      " \001(\0132\034.google.protobuf.DoubleValue\022\?\n\031co"
      "nversion_value_per_cost\030@ \001(\0132\034.google.p"
      "rotobuf.DoubleValue\022F\n conversion_value_"
      "per_interaction\030\? \001(\0132\034.google.protobuf."
      "DoubleValue\0221\n\013conversions\030\031 \001(\0132\034.googl"
      "e.protobuf.DoubleValue\0220\n\013cost_micros\030\032 "
      "\001(\0132\033.google.protobuf.Int64Value\022=\n\027cost"
      "_per_all_conversion\030\033 \001(\0132\034.google.proto"
      "buf.DoubleValue\0229\n\023cost_per_conversion\030\034"
      " \001(\0132\034.google.protobuf.DoubleValue\022>\n\030cr"
      "oss_device_conversions\030\035 \001(\0132\034.google.pr"
      "otobuf.DoubleValue\022)\n\003ctr\030\036 \001(\0132\034.google"
      ".protobuf.DoubleValue\0225\n\017engagement_rate"
      "\030\037 \001(\0132\034.google.protobuf.DoubleValue\0220\n\013"
      "engagements\030  \001(\0132\033.google.protobuf.Int6"
      "4Value\0220\n\013impressions\030% \001(\0132\033.google.pro"
      "tobuf.Int64Value\0226\n\020interaction_rate\030& \001"
      "(\0132\034.google.protobuf.DoubleValue\0221\n\014inte"
      "ractions\030\' \001(\0132\033.google.protobuf.Int64Va"
      "lue\0228\n\022invalid_click_rate\030( \001(\0132\034.google"
      ".protobuf.DoubleValue\0223\n\016invalid_clicks\030"
      ") \001(\0132\033.google.protobuf.Int64Value\022:\n\024pe"
      "rcent_new_visitors\030* \001(\0132\034.google.protob"
      "uf.DoubleValue\0220\n\013phone_calls\030+ \001(\0132\033.go"
      "ogle.protobuf.Int64Value\0226\n\021phone_impres"
      "sions\030, \001(\0132\033.google.protobuf.Int64Value"
      "\0228\n\022phone_through_rate\030- \001(\0132\034.google.pr"
      "otobuf.DoubleValue\0222\n\014relative_ctr\030. \001(\013"
      "2\034.google.protobuf.DoubleValue\022I\n#search"
      "_budget_lost_impression_share\030/ \001(\0132\034.go"
      "ogle.protobuf.DoubleValue\022I\n#search_exac"
      "t_match_impression_share\0301 \001(\0132\034.google."
      "protobuf.DoubleValue\022=\n\027search_impressio"
      "n_share\0302 \001(\0132\034.google.protobuf.DoubleVa"
      "lue\022G\n!search_rank_lost_impression_share"
      "\0303 \001(\0132\034.google.protobuf.DoubleValue\022\?\n\031"
      "value_per_all_conversions\0304 \001(\0132\034.google"
      ".protobuf.DoubleValue\022:\n\024value_per_conve"
      "rsion\0305 \001(\0132\034.google.protobuf.DoubleValu"
      "e\022=\n\030view_through_conversions\030< \001(\0132\033.go"
      "ogle.protobuf.Int64ValueB\235\001\n\"com.google."
      "ads.googleads.v0.commonB\014MetricsProtoP\001\242"
      "\002\003GAA\252\002\036Google.Ads.GoogleAds.V0.Common\312\002"
      "\036Google\\Ads\\GoogleAds\\V0\\Common\342\002\036Google"
      "\\Ads\\GoogleAds\\V0\\Commonb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2832);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/ads/googleads/v0/common/metrics.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fmetrics_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace common {

// ===================================================================

void Metrics::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->all_conversion_rate_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->all_conversion_value_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->all_conversions_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->all_conversions_value_per_cost_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->all_conversions_value_per_interaction_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->average_cost_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->average_cpc_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->average_cpm_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->average_position_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->bounce_rate_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->clicks_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->content_budget_lost_impression_share_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->content_impression_share_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->content_rank_lost_impression_share_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->conversion_rate_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->conversion_value_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->conversion_value_per_cost_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->conversion_value_per_interaction_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->conversions_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->cost_micros_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->cost_per_all_conversion_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->cost_per_conversion_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->cross_device_conversions_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->ctr_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->engagement_rate_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->engagements_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->impressions_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->interaction_rate_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->interactions_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->invalid_click_rate_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->invalid_clicks_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->percent_new_visitors_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->phone_calls_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->phone_impressions_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->phone_through_rate_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->relative_ctr_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->search_budget_lost_impression_share_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->search_exact_match_impression_share_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->search_impression_share_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->search_rank_lost_impression_share_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->value_per_all_conversions_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->value_per_conversion_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::common::_Metrics_default_instance_._instance.get_mutable()->view_through_conversions_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
void Metrics::clear_all_conversion_rate() {
  if (GetArenaNoVirtual() == NULL && all_conversion_rate_ != NULL) {
    delete all_conversion_rate_;
  }
  all_conversion_rate_ = NULL;
}
void Metrics::clear_all_conversion_value() {
  if (GetArenaNoVirtual() == NULL && all_conversion_value_ != NULL) {
    delete all_conversion_value_;
  }
  all_conversion_value_ = NULL;
}
void Metrics::clear_all_conversions() {
  if (GetArenaNoVirtual() == NULL && all_conversions_ != NULL) {
    delete all_conversions_;
  }
  all_conversions_ = NULL;
}
void Metrics::clear_all_conversions_value_per_cost() {
  if (GetArenaNoVirtual() == NULL && all_conversions_value_per_cost_ != NULL) {
    delete all_conversions_value_per_cost_;
  }
  all_conversions_value_per_cost_ = NULL;
}
void Metrics::clear_all_conversions_value_per_interaction() {
  if (GetArenaNoVirtual() == NULL && all_conversions_value_per_interaction_ != NULL) {
    delete all_conversions_value_per_interaction_;
  }
  all_conversions_value_per_interaction_ = NULL;
}
void Metrics::clear_average_cost() {
  if (GetArenaNoVirtual() == NULL && average_cost_ != NULL) {
    delete average_cost_;
  }
  average_cost_ = NULL;
}
void Metrics::clear_average_cpc() {
  if (GetArenaNoVirtual() == NULL && average_cpc_ != NULL) {
    delete average_cpc_;
  }
  average_cpc_ = NULL;
}
void Metrics::clear_average_cpm() {
  if (GetArenaNoVirtual() == NULL && average_cpm_ != NULL) {
    delete average_cpm_;
  }
  average_cpm_ = NULL;
}
void Metrics::clear_average_position() {
  if (GetArenaNoVirtual() == NULL && average_position_ != NULL) {
    delete average_position_;
  }
  average_position_ = NULL;
}
void Metrics::clear_bounce_rate() {
  if (GetArenaNoVirtual() == NULL && bounce_rate_ != NULL) {
    delete bounce_rate_;
  }
  bounce_rate_ = NULL;
}
void Metrics::clear_clicks() {
  if (GetArenaNoVirtual() == NULL && clicks_ != NULL) {
    delete clicks_;
  }
  clicks_ = NULL;
}
void Metrics::clear_content_budget_lost_impression_share() {
  if (GetArenaNoVirtual() == NULL && content_budget_lost_impression_share_ != NULL) {
    delete content_budget_lost_impression_share_;
  }
  content_budget_lost_impression_share_ = NULL;
}
void Metrics::clear_content_impression_share() {
  if (GetArenaNoVirtual() == NULL && content_impression_share_ != NULL) {
    delete content_impression_share_;
  }
  content_impression_share_ = NULL;
}
void Metrics::clear_content_rank_lost_impression_share() {
  if (GetArenaNoVirtual() == NULL && content_rank_lost_impression_share_ != NULL) {
    delete content_rank_lost_impression_share_;
  }
  content_rank_lost_impression_share_ = NULL;
}
void Metrics::clear_conversion_rate() {
  if (GetArenaNoVirtual() == NULL && conversion_rate_ != NULL) {
    delete conversion_rate_;
  }
  conversion_rate_ = NULL;
}
void Metrics::clear_conversion_value() {
  if (GetArenaNoVirtual() == NULL && conversion_value_ != NULL) {
    delete conversion_value_;
  }
  conversion_value_ = NULL;
}
void Metrics::clear_conversion_value_per_cost() {
  if (GetArenaNoVirtual() == NULL && conversion_value_per_cost_ != NULL) {
    delete conversion_value_per_cost_;
  }
  conversion_value_per_cost_ = NULL;
}
void Metrics::clear_conversion_value_per_interaction() {
  if (GetArenaNoVirtual() == NULL && conversion_value_per_interaction_ != NULL) {
    delete conversion_value_per_interaction_;
  }
  conversion_value_per_interaction_ = NULL;
}
void Metrics::clear_conversions() {
  if (GetArenaNoVirtual() == NULL && conversions_ != NULL) {
    delete conversions_;
  }
  conversions_ = NULL;
}
void Metrics::clear_cost_micros() {
  if (GetArenaNoVirtual() == NULL && cost_micros_ != NULL) {
    delete cost_micros_;
  }
  cost_micros_ = NULL;
}
void Metrics::clear_cost_per_all_conversion() {
  if (GetArenaNoVirtual() == NULL && cost_per_all_conversion_ != NULL) {
    delete cost_per_all_conversion_;
  }
  cost_per_all_conversion_ = NULL;
}
void Metrics::clear_cost_per_conversion() {
  if (GetArenaNoVirtual() == NULL && cost_per_conversion_ != NULL) {
    delete cost_per_conversion_;
  }
  cost_per_conversion_ = NULL;
}
void Metrics::clear_cross_device_conversions() {
  if (GetArenaNoVirtual() == NULL && cross_device_conversions_ != NULL) {
    delete cross_device_conversions_;
  }
  cross_device_conversions_ = NULL;
}
void Metrics::clear_ctr() {
  if (GetArenaNoVirtual() == NULL && ctr_ != NULL) {
    delete ctr_;
  }
  ctr_ = NULL;
}
void Metrics::clear_engagement_rate() {
  if (GetArenaNoVirtual() == NULL && engagement_rate_ != NULL) {
    delete engagement_rate_;
  }
  engagement_rate_ = NULL;
}
void Metrics::clear_engagements() {
  if (GetArenaNoVirtual() == NULL && engagements_ != NULL) {
    delete engagements_;
  }
  engagements_ = NULL;
}
void Metrics::clear_impressions() {
  if (GetArenaNoVirtual() == NULL && impressions_ != NULL) {
    delete impressions_;
  }
  impressions_ = NULL;
}
void Metrics::clear_interaction_rate() {
  if (GetArenaNoVirtual() == NULL && interaction_rate_ != NULL) {
    delete interaction_rate_;
  }
  interaction_rate_ = NULL;
}
void Metrics::clear_interactions() {
  if (GetArenaNoVirtual() == NULL && interactions_ != NULL) {
    delete interactions_;
  }
  interactions_ = NULL;
}
void Metrics::clear_invalid_click_rate() {
  if (GetArenaNoVirtual() == NULL && invalid_click_rate_ != NULL) {
    delete invalid_click_rate_;
  }
  invalid_click_rate_ = NULL;
}
void Metrics::clear_invalid_clicks() {
  if (GetArenaNoVirtual() == NULL && invalid_clicks_ != NULL) {
    delete invalid_clicks_;
  }
  invalid_clicks_ = NULL;
}
void Metrics::clear_percent_new_visitors() {
  if (GetArenaNoVirtual() == NULL && percent_new_visitors_ != NULL) {
    delete percent_new_visitors_;
  }
  percent_new_visitors_ = NULL;
}
void Metrics::clear_phone_calls() {
  if (GetArenaNoVirtual() == NULL && phone_calls_ != NULL) {
    delete phone_calls_;
  }
  phone_calls_ = NULL;
}
void Metrics::clear_phone_impressions() {
  if (GetArenaNoVirtual() == NULL && phone_impressions_ != NULL) {
    delete phone_impressions_;
  }
  phone_impressions_ = NULL;
}
void Metrics::clear_phone_through_rate() {
  if (GetArenaNoVirtual() == NULL && phone_through_rate_ != NULL) {
    delete phone_through_rate_;
  }
  phone_through_rate_ = NULL;
}
void Metrics::clear_relative_ctr() {
  if (GetArenaNoVirtual() == NULL && relative_ctr_ != NULL) {
    delete relative_ctr_;
  }
  relative_ctr_ = NULL;
}
void Metrics::clear_search_budget_lost_impression_share() {
  if (GetArenaNoVirtual() == NULL && search_budget_lost_impression_share_ != NULL) {
    delete search_budget_lost_impression_share_;
  }
  search_budget_lost_impression_share_ = NULL;
}
void Metrics::clear_search_exact_match_impression_share() {
  if (GetArenaNoVirtual() == NULL && search_exact_match_impression_share_ != NULL) {
    delete search_exact_match_impression_share_;
  }
  search_exact_match_impression_share_ = NULL;
}
void Metrics::clear_search_impression_share() {
  if (GetArenaNoVirtual() == NULL && search_impression_share_ != NULL) {
    delete search_impression_share_;
  }
  search_impression_share_ = NULL;
}
void Metrics::clear_search_rank_lost_impression_share() {
  if (GetArenaNoVirtual() == NULL && search_rank_lost_impression_share_ != NULL) {
    delete search_rank_lost_impression_share_;
  }
  search_rank_lost_impression_share_ = NULL;
}
void Metrics::clear_value_per_all_conversions() {
  if (GetArenaNoVirtual() == NULL && value_per_all_conversions_ != NULL) {
    delete value_per_all_conversions_;
  }
  value_per_all_conversions_ = NULL;
}
void Metrics::clear_value_per_conversion() {
  if (GetArenaNoVirtual() == NULL && value_per_conversion_ != NULL) {
    delete value_per_conversion_;
  }
  value_per_conversion_ = NULL;
}
void Metrics::clear_view_through_conversions() {
  if (GetArenaNoVirtual() == NULL && view_through_conversions_ != NULL) {
    delete view_through_conversions_;
  }
  view_through_conversions_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metrics::kAllConversionRateFieldNumber;
const int Metrics::kAllConversionValueFieldNumber;
const int Metrics::kAllConversionsFieldNumber;
const int Metrics::kAllConversionsValuePerCostFieldNumber;
const int Metrics::kAllConversionsValuePerInteractionFieldNumber;
const int Metrics::kAverageCostFieldNumber;
const int Metrics::kAverageCpcFieldNumber;
const int Metrics::kAverageCpmFieldNumber;
const int Metrics::kAveragePositionFieldNumber;
const int Metrics::kBounceRateFieldNumber;
const int Metrics::kClicksFieldNumber;
const int Metrics::kContentBudgetLostImpressionShareFieldNumber;
const int Metrics::kContentImpressionShareFieldNumber;
const int Metrics::kContentRankLostImpressionShareFieldNumber;
const int Metrics::kConversionRateFieldNumber;
const int Metrics::kConversionValueFieldNumber;
const int Metrics::kConversionValuePerCostFieldNumber;
const int Metrics::kConversionValuePerInteractionFieldNumber;
const int Metrics::kConversionsFieldNumber;
const int Metrics::kCostMicrosFieldNumber;
const int Metrics::kCostPerAllConversionFieldNumber;
const int Metrics::kCostPerConversionFieldNumber;
const int Metrics::kCrossDeviceConversionsFieldNumber;
const int Metrics::kCtrFieldNumber;
const int Metrics::kEngagementRateFieldNumber;
const int Metrics::kEngagementsFieldNumber;
const int Metrics::kImpressionsFieldNumber;
const int Metrics::kInteractionRateFieldNumber;
const int Metrics::kInteractionsFieldNumber;
const int Metrics::kInvalidClickRateFieldNumber;
const int Metrics::kInvalidClicksFieldNumber;
const int Metrics::kPercentNewVisitorsFieldNumber;
const int Metrics::kPhoneCallsFieldNumber;
const int Metrics::kPhoneImpressionsFieldNumber;
const int Metrics::kPhoneThroughRateFieldNumber;
const int Metrics::kRelativeCtrFieldNumber;
const int Metrics::kSearchBudgetLostImpressionShareFieldNumber;
const int Metrics::kSearchExactMatchImpressionShareFieldNumber;
const int Metrics::kSearchImpressionShareFieldNumber;
const int Metrics::kSearchRankLostImpressionShareFieldNumber;
const int Metrics::kValuePerAllConversionsFieldNumber;
const int Metrics::kValuePerConversionFieldNumber;
const int Metrics::kViewThroughConversionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metrics::Metrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fmetrics_2eproto::scc_info_Metrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.common.Metrics)
}
Metrics::Metrics(const Metrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_all_conversion_rate()) {
    all_conversion_rate_ = new ::google::protobuf::DoubleValue(*from.all_conversion_rate_);
  } else {
    all_conversion_rate_ = NULL;
  }
  if (from.has_all_conversion_value()) {
    all_conversion_value_ = new ::google::protobuf::DoubleValue(*from.all_conversion_value_);
  } else {
    all_conversion_value_ = NULL;
  }
  if (from.has_all_conversions()) {
    all_conversions_ = new ::google::protobuf::DoubleValue(*from.all_conversions_);
  } else {
    all_conversions_ = NULL;
  }
  if (from.has_average_cost()) {
    average_cost_ = new ::google::protobuf::DoubleValue(*from.average_cost_);
  } else {
    average_cost_ = NULL;
  }
  if (from.has_average_cpc()) {
    average_cpc_ = new ::google::protobuf::DoubleValue(*from.average_cpc_);
  } else {
    average_cpc_ = NULL;
  }
  if (from.has_average_cpm()) {
    average_cpm_ = new ::google::protobuf::DoubleValue(*from.average_cpm_);
  } else {
    average_cpm_ = NULL;
  }
  if (from.has_average_position()) {
    average_position_ = new ::google::protobuf::DoubleValue(*from.average_position_);
  } else {
    average_position_ = NULL;
  }
  if (from.has_bounce_rate()) {
    bounce_rate_ = new ::google::protobuf::DoubleValue(*from.bounce_rate_);
  } else {
    bounce_rate_ = NULL;
  }
  if (from.has_clicks()) {
    clicks_ = new ::google::protobuf::Int64Value(*from.clicks_);
  } else {
    clicks_ = NULL;
  }
  if (from.has_content_budget_lost_impression_share()) {
    content_budget_lost_impression_share_ = new ::google::protobuf::DoubleValue(*from.content_budget_lost_impression_share_);
  } else {
    content_budget_lost_impression_share_ = NULL;
  }
  if (from.has_content_impression_share()) {
    content_impression_share_ = new ::google::protobuf::DoubleValue(*from.content_impression_share_);
  } else {
    content_impression_share_ = NULL;
  }
  if (from.has_content_rank_lost_impression_share()) {
    content_rank_lost_impression_share_ = new ::google::protobuf::DoubleValue(*from.content_rank_lost_impression_share_);
  } else {
    content_rank_lost_impression_share_ = NULL;
  }
  if (from.has_conversion_rate()) {
    conversion_rate_ = new ::google::protobuf::DoubleValue(*from.conversion_rate_);
  } else {
    conversion_rate_ = NULL;
  }
  if (from.has_conversion_value()) {
    conversion_value_ = new ::google::protobuf::DoubleValue(*from.conversion_value_);
  } else {
    conversion_value_ = NULL;
  }
  if (from.has_conversions()) {
    conversions_ = new ::google::protobuf::DoubleValue(*from.conversions_);
  } else {
    conversions_ = NULL;
  }
  if (from.has_cost_micros()) {
    cost_micros_ = new ::google::protobuf::Int64Value(*from.cost_micros_);
  } else {
    cost_micros_ = NULL;
  }
  if (from.has_cost_per_all_conversion()) {
    cost_per_all_conversion_ = new ::google::protobuf::DoubleValue(*from.cost_per_all_conversion_);
  } else {
    cost_per_all_conversion_ = NULL;
  }
  if (from.has_cost_per_conversion()) {
    cost_per_conversion_ = new ::google::protobuf::DoubleValue(*from.cost_per_conversion_);
  } else {
    cost_per_conversion_ = NULL;
  }
  if (from.has_cross_device_conversions()) {
    cross_device_conversions_ = new ::google::protobuf::DoubleValue(*from.cross_device_conversions_);
  } else {
    cross_device_conversions_ = NULL;
  }
  if (from.has_ctr()) {
    ctr_ = new ::google::protobuf::DoubleValue(*from.ctr_);
  } else {
    ctr_ = NULL;
  }
  if (from.has_engagement_rate()) {
    engagement_rate_ = new ::google::protobuf::DoubleValue(*from.engagement_rate_);
  } else {
    engagement_rate_ = NULL;
  }
  if (from.has_engagements()) {
    engagements_ = new ::google::protobuf::Int64Value(*from.engagements_);
  } else {
    engagements_ = NULL;
  }
  if (from.has_impressions()) {
    impressions_ = new ::google::protobuf::Int64Value(*from.impressions_);
  } else {
    impressions_ = NULL;
  }
  if (from.has_interaction_rate()) {
    interaction_rate_ = new ::google::protobuf::DoubleValue(*from.interaction_rate_);
  } else {
    interaction_rate_ = NULL;
  }
  if (from.has_interactions()) {
    interactions_ = new ::google::protobuf::Int64Value(*from.interactions_);
  } else {
    interactions_ = NULL;
  }
  if (from.has_invalid_click_rate()) {
    invalid_click_rate_ = new ::google::protobuf::DoubleValue(*from.invalid_click_rate_);
  } else {
    invalid_click_rate_ = NULL;
  }
  if (from.has_invalid_clicks()) {
    invalid_clicks_ = new ::google::protobuf::Int64Value(*from.invalid_clicks_);
  } else {
    invalid_clicks_ = NULL;
  }
  if (from.has_percent_new_visitors()) {
    percent_new_visitors_ = new ::google::protobuf::DoubleValue(*from.percent_new_visitors_);
  } else {
    percent_new_visitors_ = NULL;
  }
  if (from.has_phone_calls()) {
    phone_calls_ = new ::google::protobuf::Int64Value(*from.phone_calls_);
  } else {
    phone_calls_ = NULL;
  }
  if (from.has_phone_impressions()) {
    phone_impressions_ = new ::google::protobuf::Int64Value(*from.phone_impressions_);
  } else {
    phone_impressions_ = NULL;
  }
  if (from.has_phone_through_rate()) {
    phone_through_rate_ = new ::google::protobuf::DoubleValue(*from.phone_through_rate_);
  } else {
    phone_through_rate_ = NULL;
  }
  if (from.has_relative_ctr()) {
    relative_ctr_ = new ::google::protobuf::DoubleValue(*from.relative_ctr_);
  } else {
    relative_ctr_ = NULL;
  }
  if (from.has_search_budget_lost_impression_share()) {
    search_budget_lost_impression_share_ = new ::google::protobuf::DoubleValue(*from.search_budget_lost_impression_share_);
  } else {
    search_budget_lost_impression_share_ = NULL;
  }
  if (from.has_search_exact_match_impression_share()) {
    search_exact_match_impression_share_ = new ::google::protobuf::DoubleValue(*from.search_exact_match_impression_share_);
  } else {
    search_exact_match_impression_share_ = NULL;
  }
  if (from.has_search_impression_share()) {
    search_impression_share_ = new ::google::protobuf::DoubleValue(*from.search_impression_share_);
  } else {
    search_impression_share_ = NULL;
  }
  if (from.has_search_rank_lost_impression_share()) {
    search_rank_lost_impression_share_ = new ::google::protobuf::DoubleValue(*from.search_rank_lost_impression_share_);
  } else {
    search_rank_lost_impression_share_ = NULL;
  }
  if (from.has_value_per_all_conversions()) {
    value_per_all_conversions_ = new ::google::protobuf::DoubleValue(*from.value_per_all_conversions_);
  } else {
    value_per_all_conversions_ = NULL;
  }
  if (from.has_value_per_conversion()) {
    value_per_conversion_ = new ::google::protobuf::DoubleValue(*from.value_per_conversion_);
  } else {
    value_per_conversion_ = NULL;
  }
  if (from.has_view_through_conversions()) {
    view_through_conversions_ = new ::google::protobuf::Int64Value(*from.view_through_conversions_);
  } else {
    view_through_conversions_ = NULL;
  }
  if (from.has_all_conversions_value_per_interaction()) {
    all_conversions_value_per_interaction_ = new ::google::protobuf::DoubleValue(*from.all_conversions_value_per_interaction_);
  } else {
    all_conversions_value_per_interaction_ = NULL;
  }
  if (from.has_all_conversions_value_per_cost()) {
    all_conversions_value_per_cost_ = new ::google::protobuf::DoubleValue(*from.all_conversions_value_per_cost_);
  } else {
    all_conversions_value_per_cost_ = NULL;
  }
  if (from.has_conversion_value_per_interaction()) {
    conversion_value_per_interaction_ = new ::google::protobuf::DoubleValue(*from.conversion_value_per_interaction_);
  } else {
    conversion_value_per_interaction_ = NULL;
  }
  if (from.has_conversion_value_per_cost()) {
    conversion_value_per_cost_ = new ::google::protobuf::DoubleValue(*from.conversion_value_per_cost_);
  } else {
    conversion_value_per_cost_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.common.Metrics)
}

void Metrics::SharedCtor() {
  ::memset(&all_conversion_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conversion_value_per_cost_) -
      reinterpret_cast<char*>(&all_conversion_rate_)) + sizeof(conversion_value_per_cost_));
}

Metrics::~Metrics() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.common.Metrics)
  SharedDtor();
}

void Metrics::SharedDtor() {
  if (this != internal_default_instance()) delete all_conversion_rate_;
  if (this != internal_default_instance()) delete all_conversion_value_;
  if (this != internal_default_instance()) delete all_conversions_;
  if (this != internal_default_instance()) delete average_cost_;
  if (this != internal_default_instance()) delete average_cpc_;
  if (this != internal_default_instance()) delete average_cpm_;
  if (this != internal_default_instance()) delete average_position_;
  if (this != internal_default_instance()) delete bounce_rate_;
  if (this != internal_default_instance()) delete clicks_;
  if (this != internal_default_instance()) delete content_budget_lost_impression_share_;
  if (this != internal_default_instance()) delete content_impression_share_;
  if (this != internal_default_instance()) delete content_rank_lost_impression_share_;
  if (this != internal_default_instance()) delete conversion_rate_;
  if (this != internal_default_instance()) delete conversion_value_;
  if (this != internal_default_instance()) delete conversions_;
  if (this != internal_default_instance()) delete cost_micros_;
  if (this != internal_default_instance()) delete cost_per_all_conversion_;
  if (this != internal_default_instance()) delete cost_per_conversion_;
  if (this != internal_default_instance()) delete cross_device_conversions_;
  if (this != internal_default_instance()) delete ctr_;
  if (this != internal_default_instance()) delete engagement_rate_;
  if (this != internal_default_instance()) delete engagements_;
  if (this != internal_default_instance()) delete impressions_;
  if (this != internal_default_instance()) delete interaction_rate_;
  if (this != internal_default_instance()) delete interactions_;
  if (this != internal_default_instance()) delete invalid_click_rate_;
  if (this != internal_default_instance()) delete invalid_clicks_;
  if (this != internal_default_instance()) delete percent_new_visitors_;
  if (this != internal_default_instance()) delete phone_calls_;
  if (this != internal_default_instance()) delete phone_impressions_;
  if (this != internal_default_instance()) delete phone_through_rate_;
  if (this != internal_default_instance()) delete relative_ctr_;
  if (this != internal_default_instance()) delete search_budget_lost_impression_share_;
  if (this != internal_default_instance()) delete search_exact_match_impression_share_;
  if (this != internal_default_instance()) delete search_impression_share_;
  if (this != internal_default_instance()) delete search_rank_lost_impression_share_;
  if (this != internal_default_instance()) delete value_per_all_conversions_;
  if (this != internal_default_instance()) delete value_per_conversion_;
  if (this != internal_default_instance()) delete view_through_conversions_;
  if (this != internal_default_instance()) delete all_conversions_value_per_interaction_;
  if (this != internal_default_instance()) delete all_conversions_value_per_cost_;
  if (this != internal_default_instance()) delete conversion_value_per_interaction_;
  if (this != internal_default_instance()) delete conversion_value_per_cost_;
}

void Metrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Metrics::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fmetrics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Metrics& Metrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fmetrics_2eproto::scc_info_Metrics.base);
  return *internal_default_instance();
}


void Metrics::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.common.Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && all_conversion_rate_ != NULL) {
    delete all_conversion_rate_;
  }
  all_conversion_rate_ = NULL;
  if (GetArenaNoVirtual() == NULL && all_conversion_value_ != NULL) {
    delete all_conversion_value_;
  }
  all_conversion_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && all_conversions_ != NULL) {
    delete all_conversions_;
  }
  all_conversions_ = NULL;
  if (GetArenaNoVirtual() == NULL && average_cost_ != NULL) {
    delete average_cost_;
  }
  average_cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && average_cpc_ != NULL) {
    delete average_cpc_;
  }
  average_cpc_ = NULL;
  if (GetArenaNoVirtual() == NULL && average_cpm_ != NULL) {
    delete average_cpm_;
  }
  average_cpm_ = NULL;
  if (GetArenaNoVirtual() == NULL && average_position_ != NULL) {
    delete average_position_;
  }
  average_position_ = NULL;
  if (GetArenaNoVirtual() == NULL && bounce_rate_ != NULL) {
    delete bounce_rate_;
  }
  bounce_rate_ = NULL;
  if (GetArenaNoVirtual() == NULL && clicks_ != NULL) {
    delete clicks_;
  }
  clicks_ = NULL;
  if (GetArenaNoVirtual() == NULL && content_budget_lost_impression_share_ != NULL) {
    delete content_budget_lost_impression_share_;
  }
  content_budget_lost_impression_share_ = NULL;
  if (GetArenaNoVirtual() == NULL && content_impression_share_ != NULL) {
    delete content_impression_share_;
  }
  content_impression_share_ = NULL;
  if (GetArenaNoVirtual() == NULL && content_rank_lost_impression_share_ != NULL) {
    delete content_rank_lost_impression_share_;
  }
  content_rank_lost_impression_share_ = NULL;
  if (GetArenaNoVirtual() == NULL && conversion_rate_ != NULL) {
    delete conversion_rate_;
  }
  conversion_rate_ = NULL;
  if (GetArenaNoVirtual() == NULL && conversion_value_ != NULL) {
    delete conversion_value_;
  }
  conversion_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && conversions_ != NULL) {
    delete conversions_;
  }
  conversions_ = NULL;
  if (GetArenaNoVirtual() == NULL && cost_micros_ != NULL) {
    delete cost_micros_;
  }
  cost_micros_ = NULL;
  if (GetArenaNoVirtual() == NULL && cost_per_all_conversion_ != NULL) {
    delete cost_per_all_conversion_;
  }
  cost_per_all_conversion_ = NULL;
  if (GetArenaNoVirtual() == NULL && cost_per_conversion_ != NULL) {
    delete cost_per_conversion_;
  }
  cost_per_conversion_ = NULL;
  if (GetArenaNoVirtual() == NULL && cross_device_conversions_ != NULL) {
    delete cross_device_conversions_;
  }
  cross_device_conversions_ = NULL;
  if (GetArenaNoVirtual() == NULL && ctr_ != NULL) {
    delete ctr_;
  }
  ctr_ = NULL;
  if (GetArenaNoVirtual() == NULL && engagement_rate_ != NULL) {
    delete engagement_rate_;
  }
  engagement_rate_ = NULL;
  if (GetArenaNoVirtual() == NULL && engagements_ != NULL) {
    delete engagements_;
  }
  engagements_ = NULL;
  if (GetArenaNoVirtual() == NULL && impressions_ != NULL) {
    delete impressions_;
  }
  impressions_ = NULL;
  if (GetArenaNoVirtual() == NULL && interaction_rate_ != NULL) {
    delete interaction_rate_;
  }
  interaction_rate_ = NULL;
  if (GetArenaNoVirtual() == NULL && interactions_ != NULL) {
    delete interactions_;
  }
  interactions_ = NULL;
  if (GetArenaNoVirtual() == NULL && invalid_click_rate_ != NULL) {
    delete invalid_click_rate_;
  }
  invalid_click_rate_ = NULL;
  if (GetArenaNoVirtual() == NULL && invalid_clicks_ != NULL) {
    delete invalid_clicks_;
  }
  invalid_clicks_ = NULL;
  if (GetArenaNoVirtual() == NULL && percent_new_visitors_ != NULL) {
    delete percent_new_visitors_;
  }
  percent_new_visitors_ = NULL;
  if (GetArenaNoVirtual() == NULL && phone_calls_ != NULL) {
    delete phone_calls_;
  }
  phone_calls_ = NULL;
  if (GetArenaNoVirtual() == NULL && phone_impressions_ != NULL) {
    delete phone_impressions_;
  }
  phone_impressions_ = NULL;
  if (GetArenaNoVirtual() == NULL && phone_through_rate_ != NULL) {
    delete phone_through_rate_;
  }
  phone_through_rate_ = NULL;
  if (GetArenaNoVirtual() == NULL && relative_ctr_ != NULL) {
    delete relative_ctr_;
  }
  relative_ctr_ = NULL;
  if (GetArenaNoVirtual() == NULL && search_budget_lost_impression_share_ != NULL) {
    delete search_budget_lost_impression_share_;
  }
  search_budget_lost_impression_share_ = NULL;
  if (GetArenaNoVirtual() == NULL && search_exact_match_impression_share_ != NULL) {
    delete search_exact_match_impression_share_;
  }
  search_exact_match_impression_share_ = NULL;
  if (GetArenaNoVirtual() == NULL && search_impression_share_ != NULL) {
    delete search_impression_share_;
  }
  search_impression_share_ = NULL;
  if (GetArenaNoVirtual() == NULL && search_rank_lost_impression_share_ != NULL) {
    delete search_rank_lost_impression_share_;
  }
  search_rank_lost_impression_share_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_per_all_conversions_ != NULL) {
    delete value_per_all_conversions_;
  }
  value_per_all_conversions_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_per_conversion_ != NULL) {
    delete value_per_conversion_;
  }
  value_per_conversion_ = NULL;
  if (GetArenaNoVirtual() == NULL && view_through_conversions_ != NULL) {
    delete view_through_conversions_;
  }
  view_through_conversions_ = NULL;
  if (GetArenaNoVirtual() == NULL && all_conversions_value_per_interaction_ != NULL) {
    delete all_conversions_value_per_interaction_;
  }
  all_conversions_value_per_interaction_ = NULL;
  if (GetArenaNoVirtual() == NULL && all_conversions_value_per_cost_ != NULL) {
    delete all_conversions_value_per_cost_;
  }
  all_conversions_value_per_cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && conversion_value_per_interaction_ != NULL) {
    delete conversion_value_per_interaction_;
  }
  conversion_value_per_interaction_ = NULL;
  if (GetArenaNoVirtual() == NULL && conversion_value_per_cost_ != NULL) {
    delete conversion_value_per_cost_;
  }
  conversion_value_per_cost_ = NULL;
  _internal_metadata_.Clear();
}

bool Metrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.common.Metrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.DoubleValue all_conversion_rate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_all_conversion_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue all_conversion_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_all_conversion_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue all_conversions = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_all_conversions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue average_cost = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_average_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue average_cpc = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_average_cpc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue average_cpm = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_average_cpm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue average_position = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_average_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue bounce_rate = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounce_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value clicks = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clicks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue content_budget_lost_impression_share = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_content_budget_lost_impression_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue content_impression_share = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_content_impression_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue content_rank_lost_impression_share = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_content_rank_lost_impression_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue conversion_rate = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conversion_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue conversion_value = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conversion_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue conversions = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conversions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value cost_micros = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cost_micros()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue cost_per_all_conversion = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cost_per_all_conversion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue cost_per_conversion = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cost_per_conversion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue cross_device_conversions = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cross_device_conversions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue ctr = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ctr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue engagement_rate = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_engagement_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value engagements = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_engagements()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value impressions = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_impressions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue interaction_rate = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interaction_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value interactions = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue invalid_click_rate = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_invalid_click_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value invalid_clicks = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_invalid_clicks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue percent_new_visitors = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_percent_new_visitors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value phone_calls = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phone_calls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value phone_impressions = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phone_impressions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue phone_through_rate = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phone_through_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue relative_ctr = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 370 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_relative_ctr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue search_budget_lost_impression_share = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_search_budget_lost_impression_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue search_exact_match_impression_share = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_search_exact_match_impression_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue search_impression_share = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_search_impression_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue search_rank_lost_impression_share = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_search_rank_lost_impression_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue value_per_all_conversions = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_per_all_conversions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue value_per_conversion = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_per_conversion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value view_through_conversions = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view_through_conversions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue all_conversions_value_per_interaction = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_all_conversions_value_per_interaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue all_conversions_value_per_cost = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_all_conversions_value_per_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue conversion_value_per_interaction = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 506 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conversion_value_per_interaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue conversion_value_per_cost = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conversion_value_per_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.common.Metrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.common.Metrics)
  return false;
#undef DO_
}

void Metrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.common.Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue all_conversion_rate = 5;
  if (this->has_all_conversion_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_all_conversion_rate(), output);
  }

  // .google.protobuf.DoubleValue all_conversion_value = 6;
  if (this->has_all_conversion_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_all_conversion_value(), output);
  }

  // .google.protobuf.DoubleValue all_conversions = 7;
  if (this->has_all_conversions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_all_conversions(), output);
  }

  // .google.protobuf.DoubleValue average_cost = 8;
  if (this->has_average_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_average_cost(), output);
  }

  // .google.protobuf.DoubleValue average_cpc = 9;
  if (this->has_average_cpc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_average_cpc(), output);
  }

  // .google.protobuf.DoubleValue average_cpm = 10;
  if (this->has_average_cpm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_average_cpm(), output);
  }

  // .google.protobuf.DoubleValue average_position = 13;
  if (this->has_average_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_average_position(), output);
  }

  // .google.protobuf.DoubleValue bounce_rate = 15;
  if (this->has_bounce_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_bounce_rate(), output);
  }

  // .google.protobuf.Int64Value clicks = 19;
  if (this->has_clicks()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_clicks(), output);
  }

  // .google.protobuf.DoubleValue content_budget_lost_impression_share = 20;
  if (this->has_content_budget_lost_impression_share()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_content_budget_lost_impression_share(), output);
  }

  // .google.protobuf.DoubleValue content_impression_share = 21;
  if (this->has_content_impression_share()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_content_impression_share(), output);
  }

  // .google.protobuf.DoubleValue content_rank_lost_impression_share = 22;
  if (this->has_content_rank_lost_impression_share()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_content_rank_lost_impression_share(), output);
  }

  // .google.protobuf.DoubleValue conversion_rate = 23;
  if (this->has_conversion_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_conversion_rate(), output);
  }

  // .google.protobuf.DoubleValue conversion_value = 24;
  if (this->has_conversion_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_conversion_value(), output);
  }

  // .google.protobuf.DoubleValue conversions = 25;
  if (this->has_conversions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_conversions(), output);
  }

  // .google.protobuf.Int64Value cost_micros = 26;
  if (this->has_cost_micros()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_cost_micros(), output);
  }

  // .google.protobuf.DoubleValue cost_per_all_conversion = 27;
  if (this->has_cost_per_all_conversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_cost_per_all_conversion(), output);
  }

  // .google.protobuf.DoubleValue cost_per_conversion = 28;
  if (this->has_cost_per_conversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_cost_per_conversion(), output);
  }

  // .google.protobuf.DoubleValue cross_device_conversions = 29;
  if (this->has_cross_device_conversions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_cross_device_conversions(), output);
  }

  // .google.protobuf.DoubleValue ctr = 30;
  if (this->has_ctr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_ctr(), output);
  }

  // .google.protobuf.DoubleValue engagement_rate = 31;
  if (this->has_engagement_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_engagement_rate(), output);
  }

  // .google.protobuf.Int64Value engagements = 32;
  if (this->has_engagements()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->_internal_engagements(), output);
  }

  // .google.protobuf.Int64Value impressions = 37;
  if (this->has_impressions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->_internal_impressions(), output);
  }

  // .google.protobuf.DoubleValue interaction_rate = 38;
  if (this->has_interaction_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->_internal_interaction_rate(), output);
  }

  // .google.protobuf.Int64Value interactions = 39;
  if (this->has_interactions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, this->_internal_interactions(), output);
  }

  // .google.protobuf.DoubleValue invalid_click_rate = 40;
  if (this->has_invalid_click_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, this->_internal_invalid_click_rate(), output);
  }

  // .google.protobuf.Int64Value invalid_clicks = 41;
  if (this->has_invalid_clicks()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, this->_internal_invalid_clicks(), output);
  }

  // .google.protobuf.DoubleValue percent_new_visitors = 42;
  if (this->has_percent_new_visitors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42, this->_internal_percent_new_visitors(), output);
  }

  // .google.protobuf.Int64Value phone_calls = 43;
  if (this->has_phone_calls()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      43, this->_internal_phone_calls(), output);
  }

  // .google.protobuf.Int64Value phone_impressions = 44;
  if (this->has_phone_impressions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44, this->_internal_phone_impressions(), output);
  }

  // .google.protobuf.DoubleValue phone_through_rate = 45;
  if (this->has_phone_through_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      45, this->_internal_phone_through_rate(), output);
  }

  // .google.protobuf.DoubleValue relative_ctr = 46;
  if (this->has_relative_ctr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      46, this->_internal_relative_ctr(), output);
  }

  // .google.protobuf.DoubleValue search_budget_lost_impression_share = 47;
  if (this->has_search_budget_lost_impression_share()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      47, this->_internal_search_budget_lost_impression_share(), output);
  }

  // .google.protobuf.DoubleValue search_exact_match_impression_share = 49;
  if (this->has_search_exact_match_impression_share()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49, this->_internal_search_exact_match_impression_share(), output);
  }

  // .google.protobuf.DoubleValue search_impression_share = 50;
  if (this->has_search_impression_share()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->_internal_search_impression_share(), output);
  }

  // .google.protobuf.DoubleValue search_rank_lost_impression_share = 51;
  if (this->has_search_rank_lost_impression_share()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->_internal_search_rank_lost_impression_share(), output);
  }

  // .google.protobuf.DoubleValue value_per_all_conversions = 52;
  if (this->has_value_per_all_conversions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->_internal_value_per_all_conversions(), output);
  }

  // .google.protobuf.DoubleValue value_per_conversion = 53;
  if (this->has_value_per_conversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53, this->_internal_value_per_conversion(), output);
  }

  // .google.protobuf.Int64Value view_through_conversions = 60;
  if (this->has_view_through_conversions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, this->_internal_view_through_conversions(), output);
  }

  // .google.protobuf.DoubleValue all_conversions_value_per_interaction = 61;
  if (this->has_all_conversions_value_per_interaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      61, this->_internal_all_conversions_value_per_interaction(), output);
  }

  // .google.protobuf.DoubleValue all_conversions_value_per_cost = 62;
  if (this->has_all_conversions_value_per_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      62, this->_internal_all_conversions_value_per_cost(), output);
  }

  // .google.protobuf.DoubleValue conversion_value_per_interaction = 63;
  if (this->has_conversion_value_per_interaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      63, this->_internal_conversion_value_per_interaction(), output);
  }

  // .google.protobuf.DoubleValue conversion_value_per_cost = 64;
  if (this->has_conversion_value_per_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      64, this->_internal_conversion_value_per_cost(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.common.Metrics)
}

::google::protobuf::uint8* Metrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.common.Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue all_conversion_rate = 5;
  if (this->has_all_conversion_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_all_conversion_rate(), deterministic, target);
  }

  // .google.protobuf.DoubleValue all_conversion_value = 6;
  if (this->has_all_conversion_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_all_conversion_value(), deterministic, target);
  }

  // .google.protobuf.DoubleValue all_conversions = 7;
  if (this->has_all_conversions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_all_conversions(), deterministic, target);
  }

  // .google.protobuf.DoubleValue average_cost = 8;
  if (this->has_average_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_average_cost(), deterministic, target);
  }

  // .google.protobuf.DoubleValue average_cpc = 9;
  if (this->has_average_cpc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_average_cpc(), deterministic, target);
  }

  // .google.protobuf.DoubleValue average_cpm = 10;
  if (this->has_average_cpm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_average_cpm(), deterministic, target);
  }

  // .google.protobuf.DoubleValue average_position = 13;
  if (this->has_average_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_average_position(), deterministic, target);
  }

  // .google.protobuf.DoubleValue bounce_rate = 15;
  if (this->has_bounce_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_bounce_rate(), deterministic, target);
  }

  // .google.protobuf.Int64Value clicks = 19;
  if (this->has_clicks()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_clicks(), deterministic, target);
  }

  // .google.protobuf.DoubleValue content_budget_lost_impression_share = 20;
  if (this->has_content_budget_lost_impression_share()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_content_budget_lost_impression_share(), deterministic, target);
  }

  // .google.protobuf.DoubleValue content_impression_share = 21;
  if (this->has_content_impression_share()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_content_impression_share(), deterministic, target);
  }

  // .google.protobuf.DoubleValue content_rank_lost_impression_share = 22;
  if (this->has_content_rank_lost_impression_share()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_content_rank_lost_impression_share(), deterministic, target);
  }

  // .google.protobuf.DoubleValue conversion_rate = 23;
  if (this->has_conversion_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_conversion_rate(), deterministic, target);
  }

  // .google.protobuf.DoubleValue conversion_value = 24;
  if (this->has_conversion_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_conversion_value(), deterministic, target);
  }

  // .google.protobuf.DoubleValue conversions = 25;
  if (this->has_conversions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_conversions(), deterministic, target);
  }

  // .google.protobuf.Int64Value cost_micros = 26;
  if (this->has_cost_micros()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_cost_micros(), deterministic, target);
  }

  // .google.protobuf.DoubleValue cost_per_all_conversion = 27;
  if (this->has_cost_per_all_conversion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_cost_per_all_conversion(), deterministic, target);
  }

  // .google.protobuf.DoubleValue cost_per_conversion = 28;
  if (this->has_cost_per_conversion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_cost_per_conversion(), deterministic, target);
  }

  // .google.protobuf.DoubleValue cross_device_conversions = 29;
  if (this->has_cross_device_conversions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_cross_device_conversions(), deterministic, target);
  }

  // .google.protobuf.DoubleValue ctr = 30;
  if (this->has_ctr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_ctr(), deterministic, target);
  }

  // .google.protobuf.DoubleValue engagement_rate = 31;
  if (this->has_engagement_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_engagement_rate(), deterministic, target);
  }

  // .google.protobuf.Int64Value engagements = 32;
  if (this->has_engagements()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->_internal_engagements(), deterministic, target);
  }

  // .google.protobuf.Int64Value impressions = 37;
  if (this->has_impressions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, this->_internal_impressions(), deterministic, target);
  }

  // .google.protobuf.DoubleValue interaction_rate = 38;
  if (this->has_interaction_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, this->_internal_interaction_rate(), deterministic, target);
  }

  // .google.protobuf.Int64Value interactions = 39;
  if (this->has_interactions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        39, this->_internal_interactions(), deterministic, target);
  }

  // .google.protobuf.DoubleValue invalid_click_rate = 40;
  if (this->has_invalid_click_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40, this->_internal_invalid_click_rate(), deterministic, target);
  }

  // .google.protobuf.Int64Value invalid_clicks = 41;
  if (this->has_invalid_clicks()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        41, this->_internal_invalid_clicks(), deterministic, target);
  }

  // .google.protobuf.DoubleValue percent_new_visitors = 42;
  if (this->has_percent_new_visitors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        42, this->_internal_percent_new_visitors(), deterministic, target);
  }

  // .google.protobuf.Int64Value phone_calls = 43;
  if (this->has_phone_calls()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        43, this->_internal_phone_calls(), deterministic, target);
  }

  // .google.protobuf.Int64Value phone_impressions = 44;
  if (this->has_phone_impressions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        44, this->_internal_phone_impressions(), deterministic, target);
  }

  // .google.protobuf.DoubleValue phone_through_rate = 45;
  if (this->has_phone_through_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        45, this->_internal_phone_through_rate(), deterministic, target);
  }

  // .google.protobuf.DoubleValue relative_ctr = 46;
  if (this->has_relative_ctr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        46, this->_internal_relative_ctr(), deterministic, target);
  }

  // .google.protobuf.DoubleValue search_budget_lost_impression_share = 47;
  if (this->has_search_budget_lost_impression_share()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        47, this->_internal_search_budget_lost_impression_share(), deterministic, target);
  }

  // .google.protobuf.DoubleValue search_exact_match_impression_share = 49;
  if (this->has_search_exact_match_impression_share()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        49, this->_internal_search_exact_match_impression_share(), deterministic, target);
  }

  // .google.protobuf.DoubleValue search_impression_share = 50;
  if (this->has_search_impression_share()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50, this->_internal_search_impression_share(), deterministic, target);
  }

  // .google.protobuf.DoubleValue search_rank_lost_impression_share = 51;
  if (this->has_search_rank_lost_impression_share()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51, this->_internal_search_rank_lost_impression_share(), deterministic, target);
  }

  // .google.protobuf.DoubleValue value_per_all_conversions = 52;
  if (this->has_value_per_all_conversions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        52, this->_internal_value_per_all_conversions(), deterministic, target);
  }

  // .google.protobuf.DoubleValue value_per_conversion = 53;
  if (this->has_value_per_conversion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        53, this->_internal_value_per_conversion(), deterministic, target);
  }

  // .google.protobuf.Int64Value view_through_conversions = 60;
  if (this->has_view_through_conversions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        60, this->_internal_view_through_conversions(), deterministic, target);
  }

  // .google.protobuf.DoubleValue all_conversions_value_per_interaction = 61;
  if (this->has_all_conversions_value_per_interaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        61, this->_internal_all_conversions_value_per_interaction(), deterministic, target);
  }

  // .google.protobuf.DoubleValue all_conversions_value_per_cost = 62;
  if (this->has_all_conversions_value_per_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        62, this->_internal_all_conversions_value_per_cost(), deterministic, target);
  }

  // .google.protobuf.DoubleValue conversion_value_per_interaction = 63;
  if (this->has_conversion_value_per_interaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        63, this->_internal_conversion_value_per_interaction(), deterministic, target);
  }

  // .google.protobuf.DoubleValue conversion_value_per_cost = 64;
  if (this->has_conversion_value_per_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        64, this->_internal_conversion_value_per_cost(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.common.Metrics)
  return target;
}

size_t Metrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.common.Metrics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.DoubleValue all_conversion_rate = 5;
  if (this->has_all_conversion_rate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *all_conversion_rate_);
  }

  // .google.protobuf.DoubleValue all_conversion_value = 6;
  if (this->has_all_conversion_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *all_conversion_value_);
  }

  // .google.protobuf.DoubleValue all_conversions = 7;
  if (this->has_all_conversions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *all_conversions_);
  }

  // .google.protobuf.DoubleValue average_cost = 8;
  if (this->has_average_cost()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *average_cost_);
  }

  // .google.protobuf.DoubleValue average_cpc = 9;
  if (this->has_average_cpc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *average_cpc_);
  }

  // .google.protobuf.DoubleValue average_cpm = 10;
  if (this->has_average_cpm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *average_cpm_);
  }

  // .google.protobuf.DoubleValue average_position = 13;
  if (this->has_average_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *average_position_);
  }

  // .google.protobuf.DoubleValue bounce_rate = 15;
  if (this->has_bounce_rate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bounce_rate_);
  }

  // .google.protobuf.Int64Value clicks = 19;
  if (this->has_clicks()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *clicks_);
  }

  // .google.protobuf.DoubleValue content_budget_lost_impression_share = 20;
  if (this->has_content_budget_lost_impression_share()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *content_budget_lost_impression_share_);
  }

  // .google.protobuf.DoubleValue content_impression_share = 21;
  if (this->has_content_impression_share()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *content_impression_share_);
  }

  // .google.protobuf.DoubleValue content_rank_lost_impression_share = 22;
  if (this->has_content_rank_lost_impression_share()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *content_rank_lost_impression_share_);
  }

  // .google.protobuf.DoubleValue conversion_rate = 23;
  if (this->has_conversion_rate()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conversion_rate_);
  }

  // .google.protobuf.DoubleValue conversion_value = 24;
  if (this->has_conversion_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conversion_value_);
  }

  // .google.protobuf.DoubleValue conversions = 25;
  if (this->has_conversions()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conversions_);
  }

  // .google.protobuf.Int64Value cost_micros = 26;
  if (this->has_cost_micros()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cost_micros_);
  }

  // .google.protobuf.DoubleValue cost_per_all_conversion = 27;
  if (this->has_cost_per_all_conversion()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cost_per_all_conversion_);
  }

  // .google.protobuf.DoubleValue cost_per_conversion = 28;
  if (this->has_cost_per_conversion()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cost_per_conversion_);
  }

  // .google.protobuf.DoubleValue cross_device_conversions = 29;
  if (this->has_cross_device_conversions()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cross_device_conversions_);
  }

  // .google.protobuf.DoubleValue ctr = 30;
  if (this->has_ctr()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ctr_);
  }

  // .google.protobuf.DoubleValue engagement_rate = 31;
  if (this->has_engagement_rate()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *engagement_rate_);
  }

  // .google.protobuf.Int64Value engagements = 32;
  if (this->has_engagements()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *engagements_);
  }

  // .google.protobuf.Int64Value impressions = 37;
  if (this->has_impressions()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *impressions_);
  }

  // .google.protobuf.DoubleValue interaction_rate = 38;
  if (this->has_interaction_rate()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *interaction_rate_);
  }

  // .google.protobuf.Int64Value interactions = 39;
  if (this->has_interactions()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *interactions_);
  }

  // .google.protobuf.DoubleValue invalid_click_rate = 40;
  if (this->has_invalid_click_rate()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *invalid_click_rate_);
  }

  // .google.protobuf.Int64Value invalid_clicks = 41;
  if (this->has_invalid_clicks()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *invalid_clicks_);
  }

  // .google.protobuf.DoubleValue percent_new_visitors = 42;
  if (this->has_percent_new_visitors()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *percent_new_visitors_);
  }

  // .google.protobuf.Int64Value phone_calls = 43;
  if (this->has_phone_calls()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phone_calls_);
  }

  // .google.protobuf.Int64Value phone_impressions = 44;
  if (this->has_phone_impressions()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phone_impressions_);
  }

  // .google.protobuf.DoubleValue phone_through_rate = 45;
  if (this->has_phone_through_rate()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phone_through_rate_);
  }

  // .google.protobuf.DoubleValue relative_ctr = 46;
  if (this->has_relative_ctr()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *relative_ctr_);
  }

  // .google.protobuf.DoubleValue search_budget_lost_impression_share = 47;
  if (this->has_search_budget_lost_impression_share()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *search_budget_lost_impression_share_);
  }

  // .google.protobuf.DoubleValue search_exact_match_impression_share = 49;
  if (this->has_search_exact_match_impression_share()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *search_exact_match_impression_share_);
  }

  // .google.protobuf.DoubleValue search_impression_share = 50;
  if (this->has_search_impression_share()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *search_impression_share_);
  }

  // .google.protobuf.DoubleValue search_rank_lost_impression_share = 51;
  if (this->has_search_rank_lost_impression_share()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *search_rank_lost_impression_share_);
  }

  // .google.protobuf.DoubleValue value_per_all_conversions = 52;
  if (this->has_value_per_all_conversions()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_per_all_conversions_);
  }

  // .google.protobuf.DoubleValue value_per_conversion = 53;
  if (this->has_value_per_conversion()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_per_conversion_);
  }

  // .google.protobuf.Int64Value view_through_conversions = 60;
  if (this->has_view_through_conversions()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *view_through_conversions_);
  }

  // .google.protobuf.DoubleValue all_conversions_value_per_interaction = 61;
  if (this->has_all_conversions_value_per_interaction()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *all_conversions_value_per_interaction_);
  }

  // .google.protobuf.DoubleValue all_conversions_value_per_cost = 62;
  if (this->has_all_conversions_value_per_cost()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *all_conversions_value_per_cost_);
  }

  // .google.protobuf.DoubleValue conversion_value_per_interaction = 63;
  if (this->has_conversion_value_per_interaction()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conversion_value_per_interaction_);
  }

  // .google.protobuf.DoubleValue conversion_value_per_cost = 64;
  if (this->has_conversion_value_per_cost()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conversion_value_per_cost_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.common.Metrics)
  GOOGLE_DCHECK_NE(&from, this);
  const Metrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.common.Metrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.common.Metrics)
    MergeFrom(*source);
  }
}

void Metrics::MergeFrom(const Metrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.common.Metrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_all_conversion_rate()) {
    mutable_all_conversion_rate()->::google::protobuf::DoubleValue::MergeFrom(from.all_conversion_rate());
  }
  if (from.has_all_conversion_value()) {
    mutable_all_conversion_value()->::google::protobuf::DoubleValue::MergeFrom(from.all_conversion_value());
  }
  if (from.has_all_conversions()) {
    mutable_all_conversions()->::google::protobuf::DoubleValue::MergeFrom(from.all_conversions());
  }
  if (from.has_average_cost()) {
    mutable_average_cost()->::google::protobuf::DoubleValue::MergeFrom(from.average_cost());
  }
  if (from.has_average_cpc()) {
    mutable_average_cpc()->::google::protobuf::DoubleValue::MergeFrom(from.average_cpc());
  }
  if (from.has_average_cpm()) {
    mutable_average_cpm()->::google::protobuf::DoubleValue::MergeFrom(from.average_cpm());
  }
  if (from.has_average_position()) {
    mutable_average_position()->::google::protobuf::DoubleValue::MergeFrom(from.average_position());
  }
  if (from.has_bounce_rate()) {
    mutable_bounce_rate()->::google::protobuf::DoubleValue::MergeFrom(from.bounce_rate());
  }
  if (from.has_clicks()) {
    mutable_clicks()->::google::protobuf::Int64Value::MergeFrom(from.clicks());
  }
  if (from.has_content_budget_lost_impression_share()) {
    mutable_content_budget_lost_impression_share()->::google::protobuf::DoubleValue::MergeFrom(from.content_budget_lost_impression_share());
  }
  if (from.has_content_impression_share()) {
    mutable_content_impression_share()->::google::protobuf::DoubleValue::MergeFrom(from.content_impression_share());
  }
  if (from.has_content_rank_lost_impression_share()) {
    mutable_content_rank_lost_impression_share()->::google::protobuf::DoubleValue::MergeFrom(from.content_rank_lost_impression_share());
  }
  if (from.has_conversion_rate()) {
    mutable_conversion_rate()->::google::protobuf::DoubleValue::MergeFrom(from.conversion_rate());
  }
  if (from.has_conversion_value()) {
    mutable_conversion_value()->::google::protobuf::DoubleValue::MergeFrom(from.conversion_value());
  }
  if (from.has_conversions()) {
    mutable_conversions()->::google::protobuf::DoubleValue::MergeFrom(from.conversions());
  }
  if (from.has_cost_micros()) {
    mutable_cost_micros()->::google::protobuf::Int64Value::MergeFrom(from.cost_micros());
  }
  if (from.has_cost_per_all_conversion()) {
    mutable_cost_per_all_conversion()->::google::protobuf::DoubleValue::MergeFrom(from.cost_per_all_conversion());
  }
  if (from.has_cost_per_conversion()) {
    mutable_cost_per_conversion()->::google::protobuf::DoubleValue::MergeFrom(from.cost_per_conversion());
  }
  if (from.has_cross_device_conversions()) {
    mutable_cross_device_conversions()->::google::protobuf::DoubleValue::MergeFrom(from.cross_device_conversions());
  }
  if (from.has_ctr()) {
    mutable_ctr()->::google::protobuf::DoubleValue::MergeFrom(from.ctr());
  }
  if (from.has_engagement_rate()) {
    mutable_engagement_rate()->::google::protobuf::DoubleValue::MergeFrom(from.engagement_rate());
  }
  if (from.has_engagements()) {
    mutable_engagements()->::google::protobuf::Int64Value::MergeFrom(from.engagements());
  }
  if (from.has_impressions()) {
    mutable_impressions()->::google::protobuf::Int64Value::MergeFrom(from.impressions());
  }
  if (from.has_interaction_rate()) {
    mutable_interaction_rate()->::google::protobuf::DoubleValue::MergeFrom(from.interaction_rate());
  }
  if (from.has_interactions()) {
    mutable_interactions()->::google::protobuf::Int64Value::MergeFrom(from.interactions());
  }
  if (from.has_invalid_click_rate()) {
    mutable_invalid_click_rate()->::google::protobuf::DoubleValue::MergeFrom(from.invalid_click_rate());
  }
  if (from.has_invalid_clicks()) {
    mutable_invalid_clicks()->::google::protobuf::Int64Value::MergeFrom(from.invalid_clicks());
  }
  if (from.has_percent_new_visitors()) {
    mutable_percent_new_visitors()->::google::protobuf::DoubleValue::MergeFrom(from.percent_new_visitors());
  }
  if (from.has_phone_calls()) {
    mutable_phone_calls()->::google::protobuf::Int64Value::MergeFrom(from.phone_calls());
  }
  if (from.has_phone_impressions()) {
    mutable_phone_impressions()->::google::protobuf::Int64Value::MergeFrom(from.phone_impressions());
  }
  if (from.has_phone_through_rate()) {
    mutable_phone_through_rate()->::google::protobuf::DoubleValue::MergeFrom(from.phone_through_rate());
  }
  if (from.has_relative_ctr()) {
    mutable_relative_ctr()->::google::protobuf::DoubleValue::MergeFrom(from.relative_ctr());
  }
  if (from.has_search_budget_lost_impression_share()) {
    mutable_search_budget_lost_impression_share()->::google::protobuf::DoubleValue::MergeFrom(from.search_budget_lost_impression_share());
  }
  if (from.has_search_exact_match_impression_share()) {
    mutable_search_exact_match_impression_share()->::google::protobuf::DoubleValue::MergeFrom(from.search_exact_match_impression_share());
  }
  if (from.has_search_impression_share()) {
    mutable_search_impression_share()->::google::protobuf::DoubleValue::MergeFrom(from.search_impression_share());
  }
  if (from.has_search_rank_lost_impression_share()) {
    mutable_search_rank_lost_impression_share()->::google::protobuf::DoubleValue::MergeFrom(from.search_rank_lost_impression_share());
  }
  if (from.has_value_per_all_conversions()) {
    mutable_value_per_all_conversions()->::google::protobuf::DoubleValue::MergeFrom(from.value_per_all_conversions());
  }
  if (from.has_value_per_conversion()) {
    mutable_value_per_conversion()->::google::protobuf::DoubleValue::MergeFrom(from.value_per_conversion());
  }
  if (from.has_view_through_conversions()) {
    mutable_view_through_conversions()->::google::protobuf::Int64Value::MergeFrom(from.view_through_conversions());
  }
  if (from.has_all_conversions_value_per_interaction()) {
    mutable_all_conversions_value_per_interaction()->::google::protobuf::DoubleValue::MergeFrom(from.all_conversions_value_per_interaction());
  }
  if (from.has_all_conversions_value_per_cost()) {
    mutable_all_conversions_value_per_cost()->::google::protobuf::DoubleValue::MergeFrom(from.all_conversions_value_per_cost());
  }
  if (from.has_conversion_value_per_interaction()) {
    mutable_conversion_value_per_interaction()->::google::protobuf::DoubleValue::MergeFrom(from.conversion_value_per_interaction());
  }
  if (from.has_conversion_value_per_cost()) {
    mutable_conversion_value_per_cost()->::google::protobuf::DoubleValue::MergeFrom(from.conversion_value_per_cost());
  }
}

void Metrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.common.Metrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metrics::CopyFrom(const Metrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.common.Metrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metrics::IsInitialized() const {
  return true;
}

void Metrics::Swap(Metrics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metrics::InternalSwap(Metrics* other) {
  using std::swap;
  swap(all_conversion_rate_, other->all_conversion_rate_);
  swap(all_conversion_value_, other->all_conversion_value_);
  swap(all_conversions_, other->all_conversions_);
  swap(average_cost_, other->average_cost_);
  swap(average_cpc_, other->average_cpc_);
  swap(average_cpm_, other->average_cpm_);
  swap(average_position_, other->average_position_);
  swap(bounce_rate_, other->bounce_rate_);
  swap(clicks_, other->clicks_);
  swap(content_budget_lost_impression_share_, other->content_budget_lost_impression_share_);
  swap(content_impression_share_, other->content_impression_share_);
  swap(content_rank_lost_impression_share_, other->content_rank_lost_impression_share_);
  swap(conversion_rate_, other->conversion_rate_);
  swap(conversion_value_, other->conversion_value_);
  swap(conversions_, other->conversions_);
  swap(cost_micros_, other->cost_micros_);
  swap(cost_per_all_conversion_, other->cost_per_all_conversion_);
  swap(cost_per_conversion_, other->cost_per_conversion_);
  swap(cross_device_conversions_, other->cross_device_conversions_);
  swap(ctr_, other->ctr_);
  swap(engagement_rate_, other->engagement_rate_);
  swap(engagements_, other->engagements_);
  swap(impressions_, other->impressions_);
  swap(interaction_rate_, other->interaction_rate_);
  swap(interactions_, other->interactions_);
  swap(invalid_click_rate_, other->invalid_click_rate_);
  swap(invalid_clicks_, other->invalid_clicks_);
  swap(percent_new_visitors_, other->percent_new_visitors_);
  swap(phone_calls_, other->phone_calls_);
  swap(phone_impressions_, other->phone_impressions_);
  swap(phone_through_rate_, other->phone_through_rate_);
  swap(relative_ctr_, other->relative_ctr_);
  swap(search_budget_lost_impression_share_, other->search_budget_lost_impression_share_);
  swap(search_exact_match_impression_share_, other->search_exact_match_impression_share_);
  swap(search_impression_share_, other->search_impression_share_);
  swap(search_rank_lost_impression_share_, other->search_rank_lost_impression_share_);
  swap(value_per_all_conversions_, other->value_per_all_conversions_);
  swap(value_per_conversion_, other->value_per_conversion_);
  swap(view_through_conversions_, other->view_through_conversions_);
  swap(all_conversions_value_per_interaction_, other->all_conversions_value_per_interaction_);
  swap(all_conversions_value_per_cost_, other->all_conversions_value_per_cost_);
  swap(conversion_value_per_interaction_, other->conversion_value_per_interaction_);
  swap(conversion_value_per_cost_, other->conversion_value_per_cost_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Metrics::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fmetrics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fmetrics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::common::Metrics* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::common::Metrics >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::common::Metrics >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
