// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/resources/bidding_strategy.proto

#include "google/ads/googleads/v0/resources/bidding_strategy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EnhancedCpc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TargetCpa;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TargetSpend;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TargetRoas;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_PageOnePromoted;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_TargetOutrankShare;
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto
namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace resources {
class BiddingStrategyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BiddingStrategy>
      _instance;
  const ::google::ads::googleads::v0::common::EnhancedCpc* enhanced_cpc_;
  const ::google::ads::googleads::v0::common::PageOnePromoted* page_one_promoted_;
  const ::google::ads::googleads::v0::common::TargetCpa* target_cpa_;
  const ::google::ads::googleads::v0::common::TargetOutrankShare* target_outrank_share_;
  const ::google::ads::googleads::v0::common::TargetRoas* target_roas_;
  const ::google::ads::googleads::v0::common::TargetSpend* target_spend_;
} _BiddingStrategy_default_instance_;
}  // namespace resources
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fbidding_5fstrategy_2eproto {
static void InitDefaultsBiddingStrategy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::resources::_BiddingStrategy_default_instance_;
    new (ptr) ::google::ads::googleads::v0::resources::BiddingStrategy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::resources::BiddingStrategy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_BiddingStrategy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsBiddingStrategy}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_EnhancedCpc.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_PageOnePromoted.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_TargetCpa.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_TargetOutrankShare.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_TargetRoas.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::scc_info_TargetSpend.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BiddingStrategy.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::BiddingStrategy, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::BiddingStrategy, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::BiddingStrategy, resource_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::BiddingStrategy, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::BiddingStrategy, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::BiddingStrategy, type_),
  offsetof(::google::ads::googleads::v0::resources::BiddingStrategyDefaultTypeInternal, enhanced_cpc_),
  offsetof(::google::ads::googleads::v0::resources::BiddingStrategyDefaultTypeInternal, page_one_promoted_),
  offsetof(::google::ads::googleads::v0::resources::BiddingStrategyDefaultTypeInternal, target_cpa_),
  offsetof(::google::ads::googleads::v0::resources::BiddingStrategyDefaultTypeInternal, target_outrank_share_),
  offsetof(::google::ads::googleads::v0::resources::BiddingStrategyDefaultTypeInternal, target_roas_),
  offsetof(::google::ads::googleads::v0::resources::BiddingStrategyDefaultTypeInternal, target_spend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::BiddingStrategy, scheme_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::ads::googleads::v0::resources::BiddingStrategy)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::resources::_BiddingStrategy_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/ads/googleads/v0/resources/bidding_strategy.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n8google/ads/googleads/v0/resources/bidd"
      "ing_strategy.proto\022!google.ads.googleads"
      ".v0.resources\032,google/ads/googleads/v0/c"
      "ommon/bidding.proto\0329google/ads/googlead"
      "s/v0/enums/bidding_strategy_type.proto\032\036"
      "google/protobuf/wrappers.proto\"\221\005\n\017Biddi"
      "ngStrategy\022\025\n\rresource_name\030\001 \001(\t\022\'\n\002id\030"
      "\003 \001(\0132\033.google.protobuf.Int64Value\022*\n\004na"
      "me\030\004 \001(\0132\034.google.protobuf.StringValue\022X"
      "\n\004type\030\005 \001(\0162J.google.ads.googleads.v0.e"
      "nums.BiddingStrategyTypeEnum.BiddingStra"
      "tegyType\022C\n\014enhanced_cpc\030\007 \001(\0132+.google."
      "ads.googleads.v0.common.EnhancedCpcH\000\022L\n"
      "\021page_one_promoted\030\010 \001(\0132/.google.ads.go"
      "ogleads.v0.common.PageOnePromotedH\000\022\?\n\nt"
      "arget_cpa\030\t \001(\0132).google.ads.googleads.v"
      "0.common.TargetCpaH\000\022R\n\024target_outrank_s"
      "hare\030\n \001(\01322.google.ads.googleads.v0.com"
      "mon.TargetOutrankShareH\000\022A\n\013target_roas\030"
      "\013 \001(\0132*.google.ads.googleads.v0.common.T"
      "argetRoasH\000\022C\n\014target_spend\030\014 \001(\0132+.goog"
      "le.ads.googleads.v0.common.TargetSpendH\000"
      "B\010\n\006schemeB\261\001\n%com.google.ads.googleads."
      "v0.resourcesB\024BiddingStrategyProtoP\001\242\002\003G"
      "AA\252\002!Google.Ads.GoogleAds.V0.Resources\312\002"
      "!Google\\Ads\\GoogleAds\\V0\\Resources\342\002!Goo"
      "gle\\Ads\\GoogleAds\\V0\\Resourcesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1078);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/ads/googleads/v0/resources/bidding_strategy.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fbidding_2eproto::AddDescriptors();
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fenums_2fbidding_5fstrategy_5ftype_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fbidding_5fstrategy_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace resources {

// ===================================================================

void BiddingStrategy::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::resources::_BiddingStrategy_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::resources::_BiddingStrategy_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::google::ads::googleads::v0::resources::_BiddingStrategy_default_instance_.enhanced_cpc_ = const_cast< ::google::ads::googleads::v0::common::EnhancedCpc*>(
      ::google::ads::googleads::v0::common::EnhancedCpc::internal_default_instance());
  ::google::ads::googleads::v0::resources::_BiddingStrategy_default_instance_.page_one_promoted_ = const_cast< ::google::ads::googleads::v0::common::PageOnePromoted*>(
      ::google::ads::googleads::v0::common::PageOnePromoted::internal_default_instance());
  ::google::ads::googleads::v0::resources::_BiddingStrategy_default_instance_.target_cpa_ = const_cast< ::google::ads::googleads::v0::common::TargetCpa*>(
      ::google::ads::googleads::v0::common::TargetCpa::internal_default_instance());
  ::google::ads::googleads::v0::resources::_BiddingStrategy_default_instance_.target_outrank_share_ = const_cast< ::google::ads::googleads::v0::common::TargetOutrankShare*>(
      ::google::ads::googleads::v0::common::TargetOutrankShare::internal_default_instance());
  ::google::ads::googleads::v0::resources::_BiddingStrategy_default_instance_.target_roas_ = const_cast< ::google::ads::googleads::v0::common::TargetRoas*>(
      ::google::ads::googleads::v0::common::TargetRoas::internal_default_instance());
  ::google::ads::googleads::v0::resources::_BiddingStrategy_default_instance_.target_spend_ = const_cast< ::google::ads::googleads::v0::common::TargetSpend*>(
      ::google::ads::googleads::v0::common::TargetSpend::internal_default_instance());
}
void BiddingStrategy::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void BiddingStrategy::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void BiddingStrategy::set_allocated_enhanced_cpc(::google::ads::googleads::v0::common::EnhancedCpc* enhanced_cpc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_scheme();
  if (enhanced_cpc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enhanced_cpc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enhanced_cpc, submessage_arena);
    }
    set_has_enhanced_cpc();
    scheme_.enhanced_cpc_ = enhanced_cpc;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.BiddingStrategy.enhanced_cpc)
}
void BiddingStrategy::clear_enhanced_cpc() {
  if (has_enhanced_cpc()) {
    delete scheme_.enhanced_cpc_;
    clear_has_scheme();
  }
}
void BiddingStrategy::set_allocated_page_one_promoted(::google::ads::googleads::v0::common::PageOnePromoted* page_one_promoted) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_scheme();
  if (page_one_promoted) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      page_one_promoted = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, page_one_promoted, submessage_arena);
    }
    set_has_page_one_promoted();
    scheme_.page_one_promoted_ = page_one_promoted;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.BiddingStrategy.page_one_promoted)
}
void BiddingStrategy::clear_page_one_promoted() {
  if (has_page_one_promoted()) {
    delete scheme_.page_one_promoted_;
    clear_has_scheme();
  }
}
void BiddingStrategy::set_allocated_target_cpa(::google::ads::googleads::v0::common::TargetCpa* target_cpa) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_scheme();
  if (target_cpa) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_cpa = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_cpa, submessage_arena);
    }
    set_has_target_cpa();
    scheme_.target_cpa_ = target_cpa;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.BiddingStrategy.target_cpa)
}
void BiddingStrategy::clear_target_cpa() {
  if (has_target_cpa()) {
    delete scheme_.target_cpa_;
    clear_has_scheme();
  }
}
void BiddingStrategy::set_allocated_target_outrank_share(::google::ads::googleads::v0::common::TargetOutrankShare* target_outrank_share) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_scheme();
  if (target_outrank_share) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_outrank_share = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_outrank_share, submessage_arena);
    }
    set_has_target_outrank_share();
    scheme_.target_outrank_share_ = target_outrank_share;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.BiddingStrategy.target_outrank_share)
}
void BiddingStrategy::clear_target_outrank_share() {
  if (has_target_outrank_share()) {
    delete scheme_.target_outrank_share_;
    clear_has_scheme();
  }
}
void BiddingStrategy::set_allocated_target_roas(::google::ads::googleads::v0::common::TargetRoas* target_roas) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_scheme();
  if (target_roas) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_roas = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_roas, submessage_arena);
    }
    set_has_target_roas();
    scheme_.target_roas_ = target_roas;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.BiddingStrategy.target_roas)
}
void BiddingStrategy::clear_target_roas() {
  if (has_target_roas()) {
    delete scheme_.target_roas_;
    clear_has_scheme();
  }
}
void BiddingStrategy::set_allocated_target_spend(::google::ads::googleads::v0::common::TargetSpend* target_spend) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_scheme();
  if (target_spend) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_spend = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_spend, submessage_arena);
    }
    set_has_target_spend();
    scheme_.target_spend_ = target_spend;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.BiddingStrategy.target_spend)
}
void BiddingStrategy::clear_target_spend() {
  if (has_target_spend()) {
    delete scheme_.target_spend_;
    clear_has_scheme();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BiddingStrategy::kResourceNameFieldNumber;
const int BiddingStrategy::kIdFieldNumber;
const int BiddingStrategy::kNameFieldNumber;
const int BiddingStrategy::kTypeFieldNumber;
const int BiddingStrategy::kEnhancedCpcFieldNumber;
const int BiddingStrategy::kPageOnePromotedFieldNumber;
const int BiddingStrategy::kTargetCpaFieldNumber;
const int BiddingStrategy::kTargetOutrankShareFieldNumber;
const int BiddingStrategy::kTargetRoasFieldNumber;
const int BiddingStrategy::kTargetSpendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BiddingStrategy::BiddingStrategy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fbidding_5fstrategy_2eproto::scc_info_BiddingStrategy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.resources.BiddingStrategy)
}
BiddingStrategy::BiddingStrategy(const BiddingStrategy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_name().size() > 0) {
    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.has_id()) {
    id_ = new ::google::protobuf::Int64Value(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::google::protobuf::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  type_ = from.type_;
  clear_has_scheme();
  switch (from.scheme_case()) {
    case kEnhancedCpc: {
      mutable_enhanced_cpc()->::google::ads::googleads::v0::common::EnhancedCpc::MergeFrom(from.enhanced_cpc());
      break;
    }
    case kPageOnePromoted: {
      mutable_page_one_promoted()->::google::ads::googleads::v0::common::PageOnePromoted::MergeFrom(from.page_one_promoted());
      break;
    }
    case kTargetCpa: {
      mutable_target_cpa()->::google::ads::googleads::v0::common::TargetCpa::MergeFrom(from.target_cpa());
      break;
    }
    case kTargetOutrankShare: {
      mutable_target_outrank_share()->::google::ads::googleads::v0::common::TargetOutrankShare::MergeFrom(from.target_outrank_share());
      break;
    }
    case kTargetRoas: {
      mutable_target_roas()->::google::ads::googleads::v0::common::TargetRoas::MergeFrom(from.target_roas());
      break;
    }
    case kTargetSpend: {
      mutable_target_spend()->::google::ads::googleads::v0::common::TargetSpend::MergeFrom(from.target_spend());
      break;
    }
    case SCHEME_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.resources.BiddingStrategy)
}

void BiddingStrategy::SharedCtor() {
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  clear_has_scheme();
}

BiddingStrategy::~BiddingStrategy() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.resources.BiddingStrategy)
  SharedDtor();
}

void BiddingStrategy::SharedDtor() {
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete name_;
  if (has_scheme()) {
    clear_scheme();
  }
}

void BiddingStrategy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BiddingStrategy::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fbidding_5fstrategy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fbidding_5fstrategy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BiddingStrategy& BiddingStrategy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fbidding_5fstrategy_2eproto::scc_info_BiddingStrategy.base);
  return *internal_default_instance();
}


void BiddingStrategy::clear_scheme() {
// @@protoc_insertion_point(one_of_clear_start:google.ads.googleads.v0.resources.BiddingStrategy)
  switch (scheme_case()) {
    case kEnhancedCpc: {
      delete scheme_.enhanced_cpc_;
      break;
    }
    case kPageOnePromoted: {
      delete scheme_.page_one_promoted_;
      break;
    }
    case kTargetCpa: {
      delete scheme_.target_cpa_;
      break;
    }
    case kTargetOutrankShare: {
      delete scheme_.target_outrank_share_;
      break;
    }
    case kTargetRoas: {
      delete scheme_.target_roas_;
      break;
    }
    case kTargetSpend: {
      delete scheme_.target_spend_;
      break;
    }
    case SCHEME_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SCHEME_NOT_SET;
}


void BiddingStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.resources.BiddingStrategy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  type_ = 0;
  clear_scheme();
  _internal_metadata_.Clear();
}

bool BiddingStrategy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.resources.BiddingStrategy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), static_cast<int>(this->resource_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.ads.googleads.v0.resources.BiddingStrategy.resource_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.enums.BiddingStrategyTypeEnum.BiddingStrategyType type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::ads::googleads::v0::enums::BiddingStrategyTypeEnum_BiddingStrategyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.EnhancedCpc enhanced_cpc = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enhanced_cpc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.PageOnePromoted page_one_promoted = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_page_one_promoted()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.TargetCpa target_cpa = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_cpa()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.TargetOutrankShare target_outrank_share = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_outrank_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.TargetRoas target_roas = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_roas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.TargetSpend target_spend = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_spend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.resources.BiddingStrategy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.resources.BiddingStrategy)
  return false;
#undef DO_
}

void BiddingStrategy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.resources.BiddingStrategy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.ads.googleads.v0.resources.BiddingStrategy.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // .google.protobuf.Int64Value id = 3;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_id(), output);
  }

  // .google.protobuf.StringValue name = 4;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_name(), output);
  }

  // .google.ads.googleads.v0.enums.BiddingStrategyTypeEnum.BiddingStrategyType type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // .google.ads.googleads.v0.common.EnhancedCpc enhanced_cpc = 7;
  if (has_enhanced_cpc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_enhanced_cpc(), output);
  }

  // .google.ads.googleads.v0.common.PageOnePromoted page_one_promoted = 8;
  if (has_page_one_promoted()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_page_one_promoted(), output);
  }

  // .google.ads.googleads.v0.common.TargetCpa target_cpa = 9;
  if (has_target_cpa()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_target_cpa(), output);
  }

  // .google.ads.googleads.v0.common.TargetOutrankShare target_outrank_share = 10;
  if (has_target_outrank_share()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_target_outrank_share(), output);
  }

  // .google.ads.googleads.v0.common.TargetRoas target_roas = 11;
  if (has_target_roas()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_target_roas(), output);
  }

  // .google.ads.googleads.v0.common.TargetSpend target_spend = 12;
  if (has_target_spend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_target_spend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.resources.BiddingStrategy)
}

::google::protobuf::uint8* BiddingStrategy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.resources.BiddingStrategy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.ads.googleads.v0.resources.BiddingStrategy.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  // .google.protobuf.Int64Value id = 3;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_id(), deterministic, target);
  }

  // .google.protobuf.StringValue name = 4;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_name(), deterministic, target);
  }

  // .google.ads.googleads.v0.enums.BiddingStrategyTypeEnum.BiddingStrategyType type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // .google.ads.googleads.v0.common.EnhancedCpc enhanced_cpc = 7;
  if (has_enhanced_cpc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_enhanced_cpc(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.PageOnePromoted page_one_promoted = 8;
  if (has_page_one_promoted()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_page_one_promoted(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.TargetCpa target_cpa = 9;
  if (has_target_cpa()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_target_cpa(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.TargetOutrankShare target_outrank_share = 10;
  if (has_target_outrank_share()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_target_outrank_share(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.TargetRoas target_roas = 11;
  if (has_target_roas()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_target_roas(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.TargetSpend target_spend = 12;
  if (has_target_spend()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_target_spend(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.resources.BiddingStrategy)
  return target;
}

size_t BiddingStrategy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.resources.BiddingStrategy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  // .google.protobuf.Int64Value id = 3;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.protobuf.StringValue name = 4;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .google.ads.googleads.v0.enums.BiddingStrategyTypeEnum.BiddingStrategyType type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  switch (scheme_case()) {
    // .google.ads.googleads.v0.common.EnhancedCpc enhanced_cpc = 7;
    case kEnhancedCpc: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scheme_.enhanced_cpc_);
      break;
    }
    // .google.ads.googleads.v0.common.PageOnePromoted page_one_promoted = 8;
    case kPageOnePromoted: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scheme_.page_one_promoted_);
      break;
    }
    // .google.ads.googleads.v0.common.TargetCpa target_cpa = 9;
    case kTargetCpa: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scheme_.target_cpa_);
      break;
    }
    // .google.ads.googleads.v0.common.TargetOutrankShare target_outrank_share = 10;
    case kTargetOutrankShare: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scheme_.target_outrank_share_);
      break;
    }
    // .google.ads.googleads.v0.common.TargetRoas target_roas = 11;
    case kTargetRoas: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scheme_.target_roas_);
      break;
    }
    // .google.ads.googleads.v0.common.TargetSpend target_spend = 12;
    case kTargetSpend: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scheme_.target_spend_);
      break;
    }
    case SCHEME_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BiddingStrategy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.resources.BiddingStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  const BiddingStrategy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BiddingStrategy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.resources.BiddingStrategy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.resources.BiddingStrategy)
    MergeFrom(*source);
  }
}

void BiddingStrategy::MergeFrom(const BiddingStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.resources.BiddingStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.has_id()) {
    mutable_id()->::google::protobuf::Int64Value::MergeFrom(from.id());
  }
  if (from.has_name()) {
    mutable_name()->::google::protobuf::StringValue::MergeFrom(from.name());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  switch (from.scheme_case()) {
    case kEnhancedCpc: {
      mutable_enhanced_cpc()->::google::ads::googleads::v0::common::EnhancedCpc::MergeFrom(from.enhanced_cpc());
      break;
    }
    case kPageOnePromoted: {
      mutable_page_one_promoted()->::google::ads::googleads::v0::common::PageOnePromoted::MergeFrom(from.page_one_promoted());
      break;
    }
    case kTargetCpa: {
      mutable_target_cpa()->::google::ads::googleads::v0::common::TargetCpa::MergeFrom(from.target_cpa());
      break;
    }
    case kTargetOutrankShare: {
      mutable_target_outrank_share()->::google::ads::googleads::v0::common::TargetOutrankShare::MergeFrom(from.target_outrank_share());
      break;
    }
    case kTargetRoas: {
      mutable_target_roas()->::google::ads::googleads::v0::common::TargetRoas::MergeFrom(from.target_roas());
      break;
    }
    case kTargetSpend: {
      mutable_target_spend()->::google::ads::googleads::v0::common::TargetSpend::MergeFrom(from.target_spend());
      break;
    }
    case SCHEME_NOT_SET: {
      break;
    }
  }
}

void BiddingStrategy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.resources.BiddingStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BiddingStrategy::CopyFrom(const BiddingStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.resources.BiddingStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BiddingStrategy::IsInitialized() const {
  return true;
}

void BiddingStrategy::Swap(BiddingStrategy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BiddingStrategy::InternalSwap(BiddingStrategy* other) {
  using std::swap;
  resource_name_.Swap(&other->resource_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(name_, other->name_);
  swap(type_, other->type_);
  swap(scheme_, other->scheme_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BiddingStrategy::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fbidding_5fstrategy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fbidding_5fstrategy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace resources
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::resources::BiddingStrategy* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::resources::BiddingStrategy >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::resources::BiddingStrategy >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
