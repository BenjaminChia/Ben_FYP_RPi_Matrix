// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/resources/ad_group_bid_modifier.proto

#include "google/ads/googleads/v0/resources/ad_group_bid_modifier.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HotelCheckInDayInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HotelDateSelectionTypeInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HotelAdvanceBookingWindowInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HotelLengthOfStayInfo;
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto
namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace resources {
class AdGroupBidModifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdGroupBidModifier>
      _instance;
  const ::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo* hotel_date_selection_type_;
  const ::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo* hotel_advance_booking_window_;
  const ::google::ads::googleads::v0::common::HotelLengthOfStayInfo* hotel_length_of_stay_;
  const ::google::ads::googleads::v0::common::HotelCheckInDayInfo* hotel_check_in_day_;
} _AdGroupBidModifier_default_instance_;
}  // namespace resources
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fad_5fgroup_5fbid_5fmodifier_2eproto {
static void InitDefaultsAdGroupBidModifier() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::resources::_AdGroupBidModifier_default_instance_;
    new (ptr) ::google::ads::googleads::v0::resources::AdGroupBidModifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::resources::AdGroupBidModifier::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_AdGroupBidModifier =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsAdGroupBidModifier}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_DoubleValue.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelDateSelectionTypeInfo.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelAdvanceBookingWindowInfo.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelLengthOfStayInfo.base,
      &protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::scc_info_HotelCheckInDayInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AdGroupBidModifier.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::AdGroupBidModifier, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::AdGroupBidModifier, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::AdGroupBidModifier, resource_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::AdGroupBidModifier, ad_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::AdGroupBidModifier, criterion_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::AdGroupBidModifier, bid_modifier_),
  offsetof(::google::ads::googleads::v0::resources::AdGroupBidModifierDefaultTypeInternal, hotel_date_selection_type_),
  offsetof(::google::ads::googleads::v0::resources::AdGroupBidModifierDefaultTypeInternal, hotel_advance_booking_window_),
  offsetof(::google::ads::googleads::v0::resources::AdGroupBidModifierDefaultTypeInternal, hotel_length_of_stay_),
  offsetof(::google::ads::googleads::v0::resources::AdGroupBidModifierDefaultTypeInternal, hotel_check_in_day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::AdGroupBidModifier, criterion_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::ads::googleads::v0::resources::AdGroupBidModifier)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::resources::_AdGroupBidModifier_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/ads/googleads/v0/resources/ad_group_bid_modifier.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n=google/ads/googleads/v0/resources/ad_g"
      "roup_bid_modifier.proto\022!google.ads.goog"
      "leads.v0.resources\032-google/ads/googleads"
      "/v0/common/criteria.proto\032\036google/protob"
      "uf/wrappers.proto\"\301\004\n\022AdGroupBidModifier"
      "\022\025\n\rresource_name\030\001 \001(\t\022.\n\010ad_group\030\002 \001("
      "\0132\034.google.protobuf.StringValue\0221\n\014crite"
      "rion_id\030\003 \001(\0132\033.google.protobuf.Int64Val"
      "ue\0222\n\014bid_modifier\030\004 \001(\0132\034.google.protob"
      "uf.DoubleValue\022_\n\031hotel_date_selection_t"
      "ype\030\005 \001(\0132:.google.ads.googleads.v0.comm"
      "on.HotelDateSelectionTypeInfoH\000\022e\n\034hotel"
      "_advance_booking_window\030\006 \001(\0132=.google.a"
      "ds.googleads.v0.common.HotelAdvanceBooki"
      "ngWindowInfoH\000\022U\n\024hotel_length_of_stay\030\007"
      " \001(\01325.google.ads.googleads.v0.common.Ho"
      "telLengthOfStayInfoH\000\022Q\n\022hotel_check_in_"
      "day\030\010 \001(\01323.google.ads.googleads.v0.comm"
      "on.HotelCheckInDayInfoH\000B\013\n\tcriterionB\264\001"
      "\n%com.google.ads.googleads.v0.resourcesB"
      "\027AdGroupBidModifierProtoP\001\242\002\003GAA\252\002!Googl"
      "e.Ads.GoogleAds.V0.Resources\312\002!Google\\Ad"
      "s\\GoogleAds\\V0\\Resources\342\002!Google\\Ads\\Go"
      "ogleAds\\V0\\Resourcesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 948);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/ads/googleads/v0/resources/ad_group_bid_modifier.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fcommon_2fcriteria_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fad_5fgroup_5fbid_5fmodifier_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace resources {

// ===================================================================

void AdGroupBidModifier::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::resources::_AdGroupBidModifier_default_instance_._instance.get_mutable()->ad_group_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::google::ads::googleads::v0::resources::_AdGroupBidModifier_default_instance_._instance.get_mutable()->criterion_id_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::resources::_AdGroupBidModifier_default_instance_._instance.get_mutable()->bid_modifier_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::ads::googleads::v0::resources::_AdGroupBidModifier_default_instance_.hotel_date_selection_type_ = const_cast< ::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo*>(
      ::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo::internal_default_instance());
  ::google::ads::googleads::v0::resources::_AdGroupBidModifier_default_instance_.hotel_advance_booking_window_ = const_cast< ::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo*>(
      ::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo::internal_default_instance());
  ::google::ads::googleads::v0::resources::_AdGroupBidModifier_default_instance_.hotel_length_of_stay_ = const_cast< ::google::ads::googleads::v0::common::HotelLengthOfStayInfo*>(
      ::google::ads::googleads::v0::common::HotelLengthOfStayInfo::internal_default_instance());
  ::google::ads::googleads::v0::resources::_AdGroupBidModifier_default_instance_.hotel_check_in_day_ = const_cast< ::google::ads::googleads::v0::common::HotelCheckInDayInfo*>(
      ::google::ads::googleads::v0::common::HotelCheckInDayInfo::internal_default_instance());
}
void AdGroupBidModifier::clear_ad_group() {
  if (GetArenaNoVirtual() == NULL && ad_group_ != NULL) {
    delete ad_group_;
  }
  ad_group_ = NULL;
}
void AdGroupBidModifier::clear_criterion_id() {
  if (GetArenaNoVirtual() == NULL && criterion_id_ != NULL) {
    delete criterion_id_;
  }
  criterion_id_ = NULL;
}
void AdGroupBidModifier::clear_bid_modifier() {
  if (GetArenaNoVirtual() == NULL && bid_modifier_ != NULL) {
    delete bid_modifier_;
  }
  bid_modifier_ = NULL;
}
void AdGroupBidModifier::set_allocated_hotel_date_selection_type(::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo* hotel_date_selection_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_criterion();
  if (hotel_date_selection_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hotel_date_selection_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hotel_date_selection_type, submessage_arena);
    }
    set_has_hotel_date_selection_type();
    criterion_.hotel_date_selection_type_ = hotel_date_selection_type;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.AdGroupBidModifier.hotel_date_selection_type)
}
void AdGroupBidModifier::clear_hotel_date_selection_type() {
  if (has_hotel_date_selection_type()) {
    delete criterion_.hotel_date_selection_type_;
    clear_has_criterion();
  }
}
void AdGroupBidModifier::set_allocated_hotel_advance_booking_window(::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo* hotel_advance_booking_window) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_criterion();
  if (hotel_advance_booking_window) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hotel_advance_booking_window = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hotel_advance_booking_window, submessage_arena);
    }
    set_has_hotel_advance_booking_window();
    criterion_.hotel_advance_booking_window_ = hotel_advance_booking_window;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.AdGroupBidModifier.hotel_advance_booking_window)
}
void AdGroupBidModifier::clear_hotel_advance_booking_window() {
  if (has_hotel_advance_booking_window()) {
    delete criterion_.hotel_advance_booking_window_;
    clear_has_criterion();
  }
}
void AdGroupBidModifier::set_allocated_hotel_length_of_stay(::google::ads::googleads::v0::common::HotelLengthOfStayInfo* hotel_length_of_stay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_criterion();
  if (hotel_length_of_stay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hotel_length_of_stay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hotel_length_of_stay, submessage_arena);
    }
    set_has_hotel_length_of_stay();
    criterion_.hotel_length_of_stay_ = hotel_length_of_stay;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.AdGroupBidModifier.hotel_length_of_stay)
}
void AdGroupBidModifier::clear_hotel_length_of_stay() {
  if (has_hotel_length_of_stay()) {
    delete criterion_.hotel_length_of_stay_;
    clear_has_criterion();
  }
}
void AdGroupBidModifier::set_allocated_hotel_check_in_day(::google::ads::googleads::v0::common::HotelCheckInDayInfo* hotel_check_in_day) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_criterion();
  if (hotel_check_in_day) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hotel_check_in_day = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hotel_check_in_day, submessage_arena);
    }
    set_has_hotel_check_in_day();
    criterion_.hotel_check_in_day_ = hotel_check_in_day;
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.AdGroupBidModifier.hotel_check_in_day)
}
void AdGroupBidModifier::clear_hotel_check_in_day() {
  if (has_hotel_check_in_day()) {
    delete criterion_.hotel_check_in_day_;
    clear_has_criterion();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdGroupBidModifier::kResourceNameFieldNumber;
const int AdGroupBidModifier::kAdGroupFieldNumber;
const int AdGroupBidModifier::kCriterionIdFieldNumber;
const int AdGroupBidModifier::kBidModifierFieldNumber;
const int AdGroupBidModifier::kHotelDateSelectionTypeFieldNumber;
const int AdGroupBidModifier::kHotelAdvanceBookingWindowFieldNumber;
const int AdGroupBidModifier::kHotelLengthOfStayFieldNumber;
const int AdGroupBidModifier::kHotelCheckInDayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdGroupBidModifier::AdGroupBidModifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fad_5fgroup_5fbid_5fmodifier_2eproto::scc_info_AdGroupBidModifier.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.resources.AdGroupBidModifier)
}
AdGroupBidModifier::AdGroupBidModifier(const AdGroupBidModifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_name().size() > 0) {
    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.has_ad_group()) {
    ad_group_ = new ::google::protobuf::StringValue(*from.ad_group_);
  } else {
    ad_group_ = NULL;
  }
  if (from.has_criterion_id()) {
    criterion_id_ = new ::google::protobuf::Int64Value(*from.criterion_id_);
  } else {
    criterion_id_ = NULL;
  }
  if (from.has_bid_modifier()) {
    bid_modifier_ = new ::google::protobuf::DoubleValue(*from.bid_modifier_);
  } else {
    bid_modifier_ = NULL;
  }
  clear_has_criterion();
  switch (from.criterion_case()) {
    case kHotelDateSelectionType: {
      mutable_hotel_date_selection_type()->::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo::MergeFrom(from.hotel_date_selection_type());
      break;
    }
    case kHotelAdvanceBookingWindow: {
      mutable_hotel_advance_booking_window()->::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo::MergeFrom(from.hotel_advance_booking_window());
      break;
    }
    case kHotelLengthOfStay: {
      mutable_hotel_length_of_stay()->::google::ads::googleads::v0::common::HotelLengthOfStayInfo::MergeFrom(from.hotel_length_of_stay());
      break;
    }
    case kHotelCheckInDay: {
      mutable_hotel_check_in_day()->::google::ads::googleads::v0::common::HotelCheckInDayInfo::MergeFrom(from.hotel_check_in_day());
      break;
    }
    case CRITERION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.resources.AdGroupBidModifier)
}

void AdGroupBidModifier::SharedCtor() {
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ad_group_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bid_modifier_) -
      reinterpret_cast<char*>(&ad_group_)) + sizeof(bid_modifier_));
  clear_has_criterion();
}

AdGroupBidModifier::~AdGroupBidModifier() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.resources.AdGroupBidModifier)
  SharedDtor();
}

void AdGroupBidModifier::SharedDtor() {
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ad_group_;
  if (this != internal_default_instance()) delete criterion_id_;
  if (this != internal_default_instance()) delete bid_modifier_;
  if (has_criterion()) {
    clear_criterion();
  }
}

void AdGroupBidModifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdGroupBidModifier::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fad_5fgroup_5fbid_5fmodifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fad_5fgroup_5fbid_5fmodifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdGroupBidModifier& AdGroupBidModifier::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fad_5fgroup_5fbid_5fmodifier_2eproto::scc_info_AdGroupBidModifier.base);
  return *internal_default_instance();
}


void AdGroupBidModifier::clear_criterion() {
// @@protoc_insertion_point(one_of_clear_start:google.ads.googleads.v0.resources.AdGroupBidModifier)
  switch (criterion_case()) {
    case kHotelDateSelectionType: {
      delete criterion_.hotel_date_selection_type_;
      break;
    }
    case kHotelAdvanceBookingWindow: {
      delete criterion_.hotel_advance_booking_window_;
      break;
    }
    case kHotelLengthOfStay: {
      delete criterion_.hotel_length_of_stay_;
      break;
    }
    case kHotelCheckInDay: {
      delete criterion_.hotel_check_in_day_;
      break;
    }
    case CRITERION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CRITERION_NOT_SET;
}


void AdGroupBidModifier::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.resources.AdGroupBidModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ad_group_ != NULL) {
    delete ad_group_;
  }
  ad_group_ = NULL;
  if (GetArenaNoVirtual() == NULL && criterion_id_ != NULL) {
    delete criterion_id_;
  }
  criterion_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && bid_modifier_ != NULL) {
    delete bid_modifier_;
  }
  bid_modifier_ = NULL;
  clear_criterion();
  _internal_metadata_.Clear();
}

bool AdGroupBidModifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.resources.AdGroupBidModifier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), static_cast<int>(this->resource_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.ads.googleads.v0.resources.AdGroupBidModifier.resource_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue ad_group = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ad_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value criterion_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_criterion_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue bid_modifier = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bid_modifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.HotelDateSelectionTypeInfo hotel_date_selection_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hotel_date_selection_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo hotel_advance_booking_window = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hotel_advance_booking_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.HotelLengthOfStayInfo hotel_length_of_stay = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hotel_length_of_stay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.ads.googleads.v0.common.HotelCheckInDayInfo hotel_check_in_day = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hotel_check_in_day()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.resources.AdGroupBidModifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.resources.AdGroupBidModifier)
  return false;
#undef DO_
}

void AdGroupBidModifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.resources.AdGroupBidModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.ads.googleads.v0.resources.AdGroupBidModifier.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // .google.protobuf.StringValue ad_group = 2;
  if (this->has_ad_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_ad_group(), output);
  }

  // .google.protobuf.Int64Value criterion_id = 3;
  if (this->has_criterion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_criterion_id(), output);
  }

  // .google.protobuf.DoubleValue bid_modifier = 4;
  if (this->has_bid_modifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_bid_modifier(), output);
  }

  // .google.ads.googleads.v0.common.HotelDateSelectionTypeInfo hotel_date_selection_type = 5;
  if (has_hotel_date_selection_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_hotel_date_selection_type(), output);
  }

  // .google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo hotel_advance_booking_window = 6;
  if (has_hotel_advance_booking_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_hotel_advance_booking_window(), output);
  }

  // .google.ads.googleads.v0.common.HotelLengthOfStayInfo hotel_length_of_stay = 7;
  if (has_hotel_length_of_stay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_hotel_length_of_stay(), output);
  }

  // .google.ads.googleads.v0.common.HotelCheckInDayInfo hotel_check_in_day = 8;
  if (has_hotel_check_in_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_hotel_check_in_day(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.resources.AdGroupBidModifier)
}

::google::protobuf::uint8* AdGroupBidModifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.resources.AdGroupBidModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.ads.googleads.v0.resources.AdGroupBidModifier.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  // .google.protobuf.StringValue ad_group = 2;
  if (this->has_ad_group()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_ad_group(), deterministic, target);
  }

  // .google.protobuf.Int64Value criterion_id = 3;
  if (this->has_criterion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_criterion_id(), deterministic, target);
  }

  // .google.protobuf.DoubleValue bid_modifier = 4;
  if (this->has_bid_modifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_bid_modifier(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.HotelDateSelectionTypeInfo hotel_date_selection_type = 5;
  if (has_hotel_date_selection_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_hotel_date_selection_type(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo hotel_advance_booking_window = 6;
  if (has_hotel_advance_booking_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_hotel_advance_booking_window(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.HotelLengthOfStayInfo hotel_length_of_stay = 7;
  if (has_hotel_length_of_stay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_hotel_length_of_stay(), deterministic, target);
  }

  // .google.ads.googleads.v0.common.HotelCheckInDayInfo hotel_check_in_day = 8;
  if (has_hotel_check_in_day()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_hotel_check_in_day(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.resources.AdGroupBidModifier)
  return target;
}

size_t AdGroupBidModifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.resources.AdGroupBidModifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  // .google.protobuf.StringValue ad_group = 2;
  if (this->has_ad_group()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ad_group_);
  }

  // .google.protobuf.Int64Value criterion_id = 3;
  if (this->has_criterion_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *criterion_id_);
  }

  // .google.protobuf.DoubleValue bid_modifier = 4;
  if (this->has_bid_modifier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bid_modifier_);
  }

  switch (criterion_case()) {
    // .google.ads.googleads.v0.common.HotelDateSelectionTypeInfo hotel_date_selection_type = 5;
    case kHotelDateSelectionType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *criterion_.hotel_date_selection_type_);
      break;
    }
    // .google.ads.googleads.v0.common.HotelAdvanceBookingWindowInfo hotel_advance_booking_window = 6;
    case kHotelAdvanceBookingWindow: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *criterion_.hotel_advance_booking_window_);
      break;
    }
    // .google.ads.googleads.v0.common.HotelLengthOfStayInfo hotel_length_of_stay = 7;
    case kHotelLengthOfStay: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *criterion_.hotel_length_of_stay_);
      break;
    }
    // .google.ads.googleads.v0.common.HotelCheckInDayInfo hotel_check_in_day = 8;
    case kHotelCheckInDay: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *criterion_.hotel_check_in_day_);
      break;
    }
    case CRITERION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdGroupBidModifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.resources.AdGroupBidModifier)
  GOOGLE_DCHECK_NE(&from, this);
  const AdGroupBidModifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdGroupBidModifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.resources.AdGroupBidModifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.resources.AdGroupBidModifier)
    MergeFrom(*source);
  }
}

void AdGroupBidModifier::MergeFrom(const AdGroupBidModifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.resources.AdGroupBidModifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.has_ad_group()) {
    mutable_ad_group()->::google::protobuf::StringValue::MergeFrom(from.ad_group());
  }
  if (from.has_criterion_id()) {
    mutable_criterion_id()->::google::protobuf::Int64Value::MergeFrom(from.criterion_id());
  }
  if (from.has_bid_modifier()) {
    mutable_bid_modifier()->::google::protobuf::DoubleValue::MergeFrom(from.bid_modifier());
  }
  switch (from.criterion_case()) {
    case kHotelDateSelectionType: {
      mutable_hotel_date_selection_type()->::google::ads::googleads::v0::common::HotelDateSelectionTypeInfo::MergeFrom(from.hotel_date_selection_type());
      break;
    }
    case kHotelAdvanceBookingWindow: {
      mutable_hotel_advance_booking_window()->::google::ads::googleads::v0::common::HotelAdvanceBookingWindowInfo::MergeFrom(from.hotel_advance_booking_window());
      break;
    }
    case kHotelLengthOfStay: {
      mutable_hotel_length_of_stay()->::google::ads::googleads::v0::common::HotelLengthOfStayInfo::MergeFrom(from.hotel_length_of_stay());
      break;
    }
    case kHotelCheckInDay: {
      mutable_hotel_check_in_day()->::google::ads::googleads::v0::common::HotelCheckInDayInfo::MergeFrom(from.hotel_check_in_day());
      break;
    }
    case CRITERION_NOT_SET: {
      break;
    }
  }
}

void AdGroupBidModifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.resources.AdGroupBidModifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdGroupBidModifier::CopyFrom(const AdGroupBidModifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.resources.AdGroupBidModifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdGroupBidModifier::IsInitialized() const {
  return true;
}

void AdGroupBidModifier::Swap(AdGroupBidModifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdGroupBidModifier::InternalSwap(AdGroupBidModifier* other) {
  using std::swap;
  resource_name_.Swap(&other->resource_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ad_group_, other->ad_group_);
  swap(criterion_id_, other->criterion_id_);
  swap(bid_modifier_, other->bid_modifier_);
  swap(criterion_, other->criterion_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdGroupBidModifier::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fad_5fgroup_5fbid_5fmodifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fad_5fgroup_5fbid_5fmodifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace resources
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::resources::AdGroupBidModifier* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::resources::AdGroupBidModifier >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::resources::AdGroupBidModifier >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
