// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/resources/customer.proto

#include "google/ads/googleads/v0/resources/customer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoolValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace resources {
class CustomerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Customer>
      _instance;
} _Customer_default_instance_;
}  // namespace resources
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fcustomer_2eproto {
static void InitDefaultsCustomer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::resources::_Customer_default_instance_;
    new (ptr) ::google::ads::googleads::v0::resources::Customer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::resources::Customer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Customer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCustomer}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_BoolValue.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Customer.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::Customer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::Customer, resource_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::Customer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::Customer, descriptive_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::Customer, currency_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::Customer, time_zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::Customer, tracking_url_template_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::Customer, auto_tagging_enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::resources::Customer, has_partners_badge_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::ads::googleads::v0::resources::Customer)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::resources::_Customer_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/ads/googleads/v0/resources/customer.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n0google/ads/googleads/v0/resources/cust"
      "omer.proto\022!google.ads.googleads.v0.reso"
      "urces\032\036google/protobuf/wrappers.proto\"\227\003"
      "\n\010Customer\022\025\n\rresource_name\030\001 \001(\t\022\'\n\002id\030"
      "\003 \001(\0132\033.google.protobuf.Int64Value\0226\n\020de"
      "scriptive_name\030\004 \001(\0132\034.google.protobuf.S"
      "tringValue\0223\n\rcurrency_code\030\005 \001(\0132\034.goog"
      "le.protobuf.StringValue\022/\n\ttime_zone\030\006 \001"
      "(\0132\034.google.protobuf.StringValue\022;\n\025trac"
      "king_url_template\030\007 \001(\0132\034.google.protobu"
      "f.StringValue\0228\n\024auto_tagging_enabled\030\010 "
      "\001(\0132\032.google.protobuf.BoolValue\0226\n\022has_p"
      "artners_badge\030\t \001(\0132\032.google.protobuf.Bo"
      "olValueB\252\001\n%com.google.ads.googleads.v0."
      "resourcesB\rCustomerProtoP\001\242\002\003GAA\252\002!Googl"
      "e.Ads.GoogleAds.V0.Resources\312\002!Google\\Ad"
      "s\\GoogleAds\\V0\\Resources\342\002!Google\\Ads\\Go"
      "ogleAds\\V0\\Resourcesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 708);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/ads/googleads/v0/resources/customer.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fcustomer_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace resources {

// ===================================================================

void Customer::InitAsDefaultInstance() {
  ::google::ads::googleads::v0::resources::_Customer_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::google::ads::googleads::v0::resources::_Customer_default_instance_._instance.get_mutable()->descriptive_name_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::google::ads::googleads::v0::resources::_Customer_default_instance_._instance.get_mutable()->currency_code_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::google::ads::googleads::v0::resources::_Customer_default_instance_._instance.get_mutable()->time_zone_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::google::ads::googleads::v0::resources::_Customer_default_instance_._instance.get_mutable()->tracking_url_template_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::google::ads::googleads::v0::resources::_Customer_default_instance_._instance.get_mutable()->auto_tagging_enabled_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  ::google::ads::googleads::v0::resources::_Customer_default_instance_._instance.get_mutable()->has_partners_badge_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
}
void Customer::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void Customer::clear_descriptive_name() {
  if (GetArenaNoVirtual() == NULL && descriptive_name_ != NULL) {
    delete descriptive_name_;
  }
  descriptive_name_ = NULL;
}
void Customer::clear_currency_code() {
  if (GetArenaNoVirtual() == NULL && currency_code_ != NULL) {
    delete currency_code_;
  }
  currency_code_ = NULL;
}
void Customer::clear_time_zone() {
  if (GetArenaNoVirtual() == NULL && time_zone_ != NULL) {
    delete time_zone_;
  }
  time_zone_ = NULL;
}
void Customer::clear_tracking_url_template() {
  if (GetArenaNoVirtual() == NULL && tracking_url_template_ != NULL) {
    delete tracking_url_template_;
  }
  tracking_url_template_ = NULL;
}
void Customer::clear_auto_tagging_enabled() {
  if (GetArenaNoVirtual() == NULL && auto_tagging_enabled_ != NULL) {
    delete auto_tagging_enabled_;
  }
  auto_tagging_enabled_ = NULL;
}
void Customer::clear_has_partners_badge() {
  if (GetArenaNoVirtual() == NULL && has_partners_badge_ != NULL) {
    delete has_partners_badge_;
  }
  has_partners_badge_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Customer::kResourceNameFieldNumber;
const int Customer::kIdFieldNumber;
const int Customer::kDescriptiveNameFieldNumber;
const int Customer::kCurrencyCodeFieldNumber;
const int Customer::kTimeZoneFieldNumber;
const int Customer::kTrackingUrlTemplateFieldNumber;
const int Customer::kAutoTaggingEnabledFieldNumber;
const int Customer::kHasPartnersBadgeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Customer::Customer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fcustomer_2eproto::scc_info_Customer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.resources.Customer)
}
Customer::Customer(const Customer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_name().size() > 0) {
    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.has_id()) {
    id_ = new ::google::protobuf::Int64Value(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_descriptive_name()) {
    descriptive_name_ = new ::google::protobuf::StringValue(*from.descriptive_name_);
  } else {
    descriptive_name_ = NULL;
  }
  if (from.has_currency_code()) {
    currency_code_ = new ::google::protobuf::StringValue(*from.currency_code_);
  } else {
    currency_code_ = NULL;
  }
  if (from.has_time_zone()) {
    time_zone_ = new ::google::protobuf::StringValue(*from.time_zone_);
  } else {
    time_zone_ = NULL;
  }
  if (from.has_tracking_url_template()) {
    tracking_url_template_ = new ::google::protobuf::StringValue(*from.tracking_url_template_);
  } else {
    tracking_url_template_ = NULL;
  }
  if (from.has_auto_tagging_enabled()) {
    auto_tagging_enabled_ = new ::google::protobuf::BoolValue(*from.auto_tagging_enabled_);
  } else {
    auto_tagging_enabled_ = NULL;
  }
  if (from.has_has_partners_badge()) {
    has_partners_badge_ = new ::google::protobuf::BoolValue(*from.has_partners_badge_);
  } else {
    has_partners_badge_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.resources.Customer)
}

void Customer::SharedCtor() {
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&has_partners_badge_) -
      reinterpret_cast<char*>(&id_)) + sizeof(has_partners_badge_));
}

Customer::~Customer() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.resources.Customer)
  SharedDtor();
}

void Customer::SharedDtor() {
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete descriptive_name_;
  if (this != internal_default_instance()) delete currency_code_;
  if (this != internal_default_instance()) delete time_zone_;
  if (this != internal_default_instance()) delete tracking_url_template_;
  if (this != internal_default_instance()) delete auto_tagging_enabled_;
  if (this != internal_default_instance()) delete has_partners_badge_;
}

void Customer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Customer::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fcustomer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fcustomer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Customer& Customer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fcustomer_2eproto::scc_info_Customer.base);
  return *internal_default_instance();
}


void Customer::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.resources.Customer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && descriptive_name_ != NULL) {
    delete descriptive_name_;
  }
  descriptive_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && currency_code_ != NULL) {
    delete currency_code_;
  }
  currency_code_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_zone_ != NULL) {
    delete time_zone_;
  }
  time_zone_ = NULL;
  if (GetArenaNoVirtual() == NULL && tracking_url_template_ != NULL) {
    delete tracking_url_template_;
  }
  tracking_url_template_ = NULL;
  if (GetArenaNoVirtual() == NULL && auto_tagging_enabled_ != NULL) {
    delete auto_tagging_enabled_;
  }
  auto_tagging_enabled_ = NULL;
  if (GetArenaNoVirtual() == NULL && has_partners_badge_ != NULL) {
    delete has_partners_badge_;
  }
  has_partners_badge_ = NULL;
  _internal_metadata_.Clear();
}

bool Customer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.resources.Customer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), static_cast<int>(this->resource_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.ads.googleads.v0.resources.Customer.resource_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue descriptive_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_descriptive_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue currency_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_currency_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue time_zone = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_zone()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue tracking_url_template = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tracking_url_template()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue auto_tagging_enabled = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_auto_tagging_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue has_partners_badge = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_has_partners_badge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.resources.Customer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.resources.Customer)
  return false;
#undef DO_
}

void Customer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.resources.Customer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.ads.googleads.v0.resources.Customer.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // .google.protobuf.Int64Value id = 3;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_id(), output);
  }

  // .google.protobuf.StringValue descriptive_name = 4;
  if (this->has_descriptive_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_descriptive_name(), output);
  }

  // .google.protobuf.StringValue currency_code = 5;
  if (this->has_currency_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_currency_code(), output);
  }

  // .google.protobuf.StringValue time_zone = 6;
  if (this->has_time_zone()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_time_zone(), output);
  }

  // .google.protobuf.StringValue tracking_url_template = 7;
  if (this->has_tracking_url_template()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_tracking_url_template(), output);
  }

  // .google.protobuf.BoolValue auto_tagging_enabled = 8;
  if (this->has_auto_tagging_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_auto_tagging_enabled(), output);
  }

  // .google.protobuf.BoolValue has_partners_badge = 9;
  if (this->has_has_partners_badge()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_has_partners_badge(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.resources.Customer)
}

::google::protobuf::uint8* Customer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.resources.Customer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.ads.googleads.v0.resources.Customer.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  // .google.protobuf.Int64Value id = 3;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_id(), deterministic, target);
  }

  // .google.protobuf.StringValue descriptive_name = 4;
  if (this->has_descriptive_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_descriptive_name(), deterministic, target);
  }

  // .google.protobuf.StringValue currency_code = 5;
  if (this->has_currency_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_currency_code(), deterministic, target);
  }

  // .google.protobuf.StringValue time_zone = 6;
  if (this->has_time_zone()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_time_zone(), deterministic, target);
  }

  // .google.protobuf.StringValue tracking_url_template = 7;
  if (this->has_tracking_url_template()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_tracking_url_template(), deterministic, target);
  }

  // .google.protobuf.BoolValue auto_tagging_enabled = 8;
  if (this->has_auto_tagging_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_auto_tagging_enabled(), deterministic, target);
  }

  // .google.protobuf.BoolValue has_partners_badge = 9;
  if (this->has_has_partners_badge()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_has_partners_badge(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.resources.Customer)
  return target;
}

size_t Customer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.resources.Customer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  // .google.protobuf.Int64Value id = 3;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.protobuf.StringValue descriptive_name = 4;
  if (this->has_descriptive_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *descriptive_name_);
  }

  // .google.protobuf.StringValue currency_code = 5;
  if (this->has_currency_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *currency_code_);
  }

  // .google.protobuf.StringValue time_zone = 6;
  if (this->has_time_zone()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_zone_);
  }

  // .google.protobuf.StringValue tracking_url_template = 7;
  if (this->has_tracking_url_template()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tracking_url_template_);
  }

  // .google.protobuf.BoolValue auto_tagging_enabled = 8;
  if (this->has_auto_tagging_enabled()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *auto_tagging_enabled_);
  }

  // .google.protobuf.BoolValue has_partners_badge = 9;
  if (this->has_has_partners_badge()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *has_partners_badge_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Customer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.resources.Customer)
  GOOGLE_DCHECK_NE(&from, this);
  const Customer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Customer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.resources.Customer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.resources.Customer)
    MergeFrom(*source);
  }
}

void Customer::MergeFrom(const Customer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.resources.Customer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.has_id()) {
    mutable_id()->::google::protobuf::Int64Value::MergeFrom(from.id());
  }
  if (from.has_descriptive_name()) {
    mutable_descriptive_name()->::google::protobuf::StringValue::MergeFrom(from.descriptive_name());
  }
  if (from.has_currency_code()) {
    mutable_currency_code()->::google::protobuf::StringValue::MergeFrom(from.currency_code());
  }
  if (from.has_time_zone()) {
    mutable_time_zone()->::google::protobuf::StringValue::MergeFrom(from.time_zone());
  }
  if (from.has_tracking_url_template()) {
    mutable_tracking_url_template()->::google::protobuf::StringValue::MergeFrom(from.tracking_url_template());
  }
  if (from.has_auto_tagging_enabled()) {
    mutable_auto_tagging_enabled()->::google::protobuf::BoolValue::MergeFrom(from.auto_tagging_enabled());
  }
  if (from.has_has_partners_badge()) {
    mutable_has_partners_badge()->::google::protobuf::BoolValue::MergeFrom(from.has_partners_badge());
  }
}

void Customer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.resources.Customer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Customer::CopyFrom(const Customer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.resources.Customer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Customer::IsInitialized() const {
  return true;
}

void Customer::Swap(Customer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Customer::InternalSwap(Customer* other) {
  using std::swap;
  resource_name_.Swap(&other->resource_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(descriptive_name_, other->descriptive_name_);
  swap(currency_code_, other->currency_code_);
  swap(time_zone_, other->time_zone_);
  swap(tracking_url_template_, other->tracking_url_template_);
  swap(auto_tagging_enabled_, other->auto_tagging_enabled_);
  swap(has_partners_badge_, other->has_partners_badge_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Customer::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fcustomer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fcustomer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace resources
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::resources::Customer* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::resources::Customer >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::resources::Customer >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
