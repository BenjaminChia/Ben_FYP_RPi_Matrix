// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/resources/geo_target_constant.proto

#ifndef PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fresources_2fgeo_5ftarget_5fconstant_2eproto
#define PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fresources_2fgeo_5ftarget_5fconstant_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fgeo_5ftarget_5fconstant_2eproto 

namespace protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fgeo_5ftarget_5fconstant_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fgeo_5ftarget_5fconstant_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace resources {
class GeoTargetConstant;
class GeoTargetConstantDefaultTypeInternal;
extern GeoTargetConstantDefaultTypeInternal _GeoTargetConstant_default_instance_;
}  // namespace resources
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::ads::googleads::v0::resources::GeoTargetConstant* Arena::CreateMaybeMessage<::google::ads::googleads::v0::resources::GeoTargetConstant>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace resources {

// ===================================================================

class GeoTargetConstant : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.resources.GeoTargetConstant) */ {
 public:
  GeoTargetConstant();
  virtual ~GeoTargetConstant();

  GeoTargetConstant(const GeoTargetConstant& from);

  inline GeoTargetConstant& operator=(const GeoTargetConstant& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GeoTargetConstant(GeoTargetConstant&& from) noexcept
    : GeoTargetConstant() {
    *this = ::std::move(from);
  }

  inline GeoTargetConstant& operator=(GeoTargetConstant&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GeoTargetConstant& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeoTargetConstant* internal_default_instance() {
    return reinterpret_cast<const GeoTargetConstant*>(
               &_GeoTargetConstant_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GeoTargetConstant* other);
  friend void swap(GeoTargetConstant& a, GeoTargetConstant& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GeoTargetConstant* New() const final {
    return CreateMaybeMessage<GeoTargetConstant>(NULL);
  }

  GeoTargetConstant* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GeoTargetConstant>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GeoTargetConstant& from);
  void MergeFrom(const GeoTargetConstant& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeoTargetConstant* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string resource_name = 1;
  void clear_resource_name();
  static const int kResourceNameFieldNumber = 1;
  const ::std::string& resource_name() const;
  void set_resource_name(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_name(::std::string&& value);
  #endif
  void set_resource_name(const char* value);
  void set_resource_name(const char* value, size_t size);
  ::std::string* mutable_resource_name();
  ::std::string* release_resource_name();
  void set_allocated_resource_name(::std::string* resource_name);

  // .google.protobuf.Int64Value id = 3;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 3;
  private:
  const ::google::protobuf::Int64Value& _internal_id() const;
  public:
  const ::google::protobuf::Int64Value& id() const;
  ::google::protobuf::Int64Value* release_id();
  ::google::protobuf::Int64Value* mutable_id();
  void set_allocated_id(::google::protobuf::Int64Value* id);

  // .google.protobuf.StringValue name = 4;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 4;
  private:
  const ::google::protobuf::StringValue& _internal_name() const;
  public:
  const ::google::protobuf::StringValue& name() const;
  ::google::protobuf::StringValue* release_name();
  ::google::protobuf::StringValue* mutable_name();
  void set_allocated_name(::google::protobuf::StringValue* name);

  // .google.protobuf.StringValue country_code = 5;
  bool has_country_code() const;
  void clear_country_code();
  static const int kCountryCodeFieldNumber = 5;
  private:
  const ::google::protobuf::StringValue& _internal_country_code() const;
  public:
  const ::google::protobuf::StringValue& country_code() const;
  ::google::protobuf::StringValue* release_country_code();
  ::google::protobuf::StringValue* mutable_country_code();
  void set_allocated_country_code(::google::protobuf::StringValue* country_code);

  // .google.protobuf.StringValue target_type = 6;
  bool has_target_type() const;
  void clear_target_type();
  static const int kTargetTypeFieldNumber = 6;
  private:
  const ::google::protobuf::StringValue& _internal_target_type() const;
  public:
  const ::google::protobuf::StringValue& target_type() const;
  ::google::protobuf::StringValue* release_target_type();
  ::google::protobuf::StringValue* mutable_target_type();
  void set_allocated_target_type(::google::protobuf::StringValue* target_type);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.resources.GeoTargetConstant)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr resource_name_;
  ::google::protobuf::Int64Value* id_;
  ::google::protobuf::StringValue* name_;
  ::google::protobuf::StringValue* country_code_;
  ::google::protobuf::StringValue* target_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fgeo_5ftarget_5fconstant_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GeoTargetConstant

// string resource_name = 1;
inline void GeoTargetConstant::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GeoTargetConstant::resource_name() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.GeoTargetConstant.resource_name)
  return resource_name_.GetNoArena();
}
inline void GeoTargetConstant::set_resource_name(const ::std::string& value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.resources.GeoTargetConstant.resource_name)
}
#if LANG_CXX11
inline void GeoTargetConstant::set_resource_name(::std::string&& value) {
  
  resource_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.ads.googleads.v0.resources.GeoTargetConstant.resource_name)
}
#endif
inline void GeoTargetConstant::set_resource_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.ads.googleads.v0.resources.GeoTargetConstant.resource_name)
}
inline void GeoTargetConstant::set_resource_name(const char* value, size_t size) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.ads.googleads.v0.resources.GeoTargetConstant.resource_name)
}
inline ::std::string* GeoTargetConstant::mutable_resource_name() {
  
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.resources.GeoTargetConstant.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GeoTargetConstant::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.resources.GeoTargetConstant.resource_name)
  
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GeoTargetConstant::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    
  } else {
    
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.GeoTargetConstant.resource_name)
}

// .google.protobuf.Int64Value id = 3;
inline bool GeoTargetConstant::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::protobuf::Int64Value& GeoTargetConstant::_internal_id() const {
  return *id_;
}
inline const ::google::protobuf::Int64Value& GeoTargetConstant::id() const {
  const ::google::protobuf::Int64Value* p = id_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.GeoTargetConstant.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* GeoTargetConstant::release_id() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.resources.GeoTargetConstant.id)
  
  ::google::protobuf::Int64Value* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* GeoTargetConstant::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.resources.GeoTargetConstant.id)
  return id_;
}
inline void GeoTargetConstant::set_allocated_id(::google::protobuf::Int64Value* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(id)->GetArena();
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.GeoTargetConstant.id)
}

// .google.protobuf.StringValue name = 4;
inline bool GeoTargetConstant::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::google::protobuf::StringValue& GeoTargetConstant::_internal_name() const {
  return *name_;
}
inline const ::google::protobuf::StringValue& GeoTargetConstant::name() const {
  const ::google::protobuf::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.GeoTargetConstant.name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* GeoTargetConstant::release_name() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.resources.GeoTargetConstant.name)
  
  ::google::protobuf::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* GeoTargetConstant::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.resources.GeoTargetConstant.name)
  return name_;
}
inline void GeoTargetConstant::set_allocated_name(::google::protobuf::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(name)->GetArena();
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.GeoTargetConstant.name)
}

// .google.protobuf.StringValue country_code = 5;
inline bool GeoTargetConstant::has_country_code() const {
  return this != internal_default_instance() && country_code_ != NULL;
}
inline const ::google::protobuf::StringValue& GeoTargetConstant::_internal_country_code() const {
  return *country_code_;
}
inline const ::google::protobuf::StringValue& GeoTargetConstant::country_code() const {
  const ::google::protobuf::StringValue* p = country_code_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.GeoTargetConstant.country_code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* GeoTargetConstant::release_country_code() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.resources.GeoTargetConstant.country_code)
  
  ::google::protobuf::StringValue* temp = country_code_;
  country_code_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* GeoTargetConstant::mutable_country_code() {
  
  if (country_code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    country_code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.resources.GeoTargetConstant.country_code)
  return country_code_;
}
inline void GeoTargetConstant::set_allocated_country_code(::google::protobuf::StringValue* country_code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(country_code_);
  }
  if (country_code) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(country_code)->GetArena();
    if (message_arena != submessage_arena) {
      country_code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, country_code, submessage_arena);
    }
    
  } else {
    
  }
  country_code_ = country_code;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.GeoTargetConstant.country_code)
}

// .google.protobuf.StringValue target_type = 6;
inline bool GeoTargetConstant::has_target_type() const {
  return this != internal_default_instance() && target_type_ != NULL;
}
inline const ::google::protobuf::StringValue& GeoTargetConstant::_internal_target_type() const {
  return *target_type_;
}
inline const ::google::protobuf::StringValue& GeoTargetConstant::target_type() const {
  const ::google::protobuf::StringValue* p = target_type_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.GeoTargetConstant.target_type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* GeoTargetConstant::release_target_type() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.resources.GeoTargetConstant.target_type)
  
  ::google::protobuf::StringValue* temp = target_type_;
  target_type_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* GeoTargetConstant::mutable_target_type() {
  
  if (target_type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    target_type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.resources.GeoTargetConstant.target_type)
  return target_type_;
}
inline void GeoTargetConstant::set_allocated_target_type(::google::protobuf::StringValue* target_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_type_);
  }
  if (target_type) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(target_type)->GetArena();
    if (message_arena != submessage_arena) {
      target_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_type, submessage_arena);
    }
    
  } else {
    
  }
  target_type_ = target_type;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.GeoTargetConstant.target_type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace resources
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fresources_2fgeo_5ftarget_5fconstant_2eproto
