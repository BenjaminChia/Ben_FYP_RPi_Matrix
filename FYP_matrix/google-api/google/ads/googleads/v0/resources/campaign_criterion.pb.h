// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/resources/campaign_criterion.proto

#ifndef PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fresources_2fcampaign_5fcriterion_2eproto
#define PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fresources_2fcampaign_5fcriterion_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/ads/googleads/v0/common/criteria.pb.h"
#include "google/ads/googleads/v0/enums/criterion_type.pb.h"
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fcampaign_5fcriterion_2eproto 

namespace protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fcampaign_5fcriterion_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fcampaign_5fcriterion_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace resources {
class CampaignCriterion;
class CampaignCriterionDefaultTypeInternal;
extern CampaignCriterionDefaultTypeInternal _CampaignCriterion_default_instance_;
}  // namespace resources
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::ads::googleads::v0::resources::CampaignCriterion* Arena::CreateMaybeMessage<::google::ads::googleads::v0::resources::CampaignCriterion>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace resources {

// ===================================================================

class CampaignCriterion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.resources.CampaignCriterion) */ {
 public:
  CampaignCriterion();
  virtual ~CampaignCriterion();

  CampaignCriterion(const CampaignCriterion& from);

  inline CampaignCriterion& operator=(const CampaignCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CampaignCriterion(CampaignCriterion&& from) noexcept
    : CampaignCriterion() {
    *this = ::std::move(from);
  }

  inline CampaignCriterion& operator=(CampaignCriterion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CampaignCriterion& default_instance();

  enum CriterionCase {
    kKeyword = 8,
    kLocation = 12,
    kPlatform = 13,
    CRITERION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CampaignCriterion* internal_default_instance() {
    return reinterpret_cast<const CampaignCriterion*>(
               &_CampaignCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CampaignCriterion* other);
  friend void swap(CampaignCriterion& a, CampaignCriterion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CampaignCriterion* New() const final {
    return CreateMaybeMessage<CampaignCriterion>(NULL);
  }

  CampaignCriterion* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CampaignCriterion>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CampaignCriterion& from);
  void MergeFrom(const CampaignCriterion& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CampaignCriterion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string resource_name = 1;
  void clear_resource_name();
  static const int kResourceNameFieldNumber = 1;
  const ::std::string& resource_name() const;
  void set_resource_name(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_name(::std::string&& value);
  #endif
  void set_resource_name(const char* value);
  void set_resource_name(const char* value, size_t size);
  ::std::string* mutable_resource_name();
  ::std::string* release_resource_name();
  void set_allocated_resource_name(::std::string* resource_name);

  // .google.protobuf.StringValue campaign = 4;
  bool has_campaign() const;
  void clear_campaign();
  static const int kCampaignFieldNumber = 4;
  private:
  const ::google::protobuf::StringValue& _internal_campaign() const;
  public:
  const ::google::protobuf::StringValue& campaign() const;
  ::google::protobuf::StringValue* release_campaign();
  ::google::protobuf::StringValue* mutable_campaign();
  void set_allocated_campaign(::google::protobuf::StringValue* campaign);

  // .google.protobuf.Int64Value criterion_id = 5;
  bool has_criterion_id() const;
  void clear_criterion_id();
  static const int kCriterionIdFieldNumber = 5;
  private:
  const ::google::protobuf::Int64Value& _internal_criterion_id() const;
  public:
  const ::google::protobuf::Int64Value& criterion_id() const;
  ::google::protobuf::Int64Value* release_criterion_id();
  ::google::protobuf::Int64Value* mutable_criterion_id();
  void set_allocated_criterion_id(::google::protobuf::Int64Value* criterion_id);

  // .google.protobuf.BoolValue negative = 7;
  bool has_negative() const;
  void clear_negative();
  static const int kNegativeFieldNumber = 7;
  private:
  const ::google::protobuf::BoolValue& _internal_negative() const;
  public:
  const ::google::protobuf::BoolValue& negative() const;
  ::google::protobuf::BoolValue* release_negative();
  ::google::protobuf::BoolValue* mutable_negative();
  void set_allocated_negative(::google::protobuf::BoolValue* negative);

  // .google.protobuf.FloatValue bid_modifier = 14;
  bool has_bid_modifier() const;
  void clear_bid_modifier();
  static const int kBidModifierFieldNumber = 14;
  private:
  const ::google::protobuf::FloatValue& _internal_bid_modifier() const;
  public:
  const ::google::protobuf::FloatValue& bid_modifier() const;
  ::google::protobuf::FloatValue* release_bid_modifier();
  ::google::protobuf::FloatValue* mutable_bid_modifier();
  void set_allocated_bid_modifier(::google::protobuf::FloatValue* bid_modifier);

  // .google.ads.googleads.v0.enums.CriterionTypeEnum.CriterionType type = 6;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::google::ads::googleads::v0::enums::CriterionTypeEnum_CriterionType type() const;
  void set_type(::google::ads::googleads::v0::enums::CriterionTypeEnum_CriterionType value);

  // .google.ads.googleads.v0.common.KeywordInfo keyword = 8;
  bool has_keyword() const;
  void clear_keyword();
  static const int kKeywordFieldNumber = 8;
  private:
  const ::google::ads::googleads::v0::common::KeywordInfo& _internal_keyword() const;
  public:
  const ::google::ads::googleads::v0::common::KeywordInfo& keyword() const;
  ::google::ads::googleads::v0::common::KeywordInfo* release_keyword();
  ::google::ads::googleads::v0::common::KeywordInfo* mutable_keyword();
  void set_allocated_keyword(::google::ads::googleads::v0::common::KeywordInfo* keyword);

  // .google.ads.googleads.v0.common.LocationInfo location = 12;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 12;
  private:
  const ::google::ads::googleads::v0::common::LocationInfo& _internal_location() const;
  public:
  const ::google::ads::googleads::v0::common::LocationInfo& location() const;
  ::google::ads::googleads::v0::common::LocationInfo* release_location();
  ::google::ads::googleads::v0::common::LocationInfo* mutable_location();
  void set_allocated_location(::google::ads::googleads::v0::common::LocationInfo* location);

  // .google.ads.googleads.v0.common.PlatformInfo platform = 13;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 13;
  private:
  const ::google::ads::googleads::v0::common::PlatformInfo& _internal_platform() const;
  public:
  const ::google::ads::googleads::v0::common::PlatformInfo& platform() const;
  ::google::ads::googleads::v0::common::PlatformInfo* release_platform();
  ::google::ads::googleads::v0::common::PlatformInfo* mutable_platform();
  void set_allocated_platform(::google::ads::googleads::v0::common::PlatformInfo* platform);

  void clear_criterion();
  CriterionCase criterion_case() const;
  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.resources.CampaignCriterion)
 private:
  void set_has_keyword();
  void set_has_location();
  void set_has_platform();

  inline bool has_criterion() const;
  inline void clear_has_criterion();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr resource_name_;
  ::google::protobuf::StringValue* campaign_;
  ::google::protobuf::Int64Value* criterion_id_;
  ::google::protobuf::BoolValue* negative_;
  ::google::protobuf::FloatValue* bid_modifier_;
  int type_;
  union CriterionUnion {
    CriterionUnion() {}
    ::google::ads::googleads::v0::common::KeywordInfo* keyword_;
    ::google::ads::googleads::v0::common::LocationInfo* location_;
    ::google::ads::googleads::v0::common::PlatformInfo* platform_;
  } criterion_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fresources_2fcampaign_5fcriterion_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CampaignCriterion

// string resource_name = 1;
inline void CampaignCriterion::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CampaignCriterion::resource_name() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.CampaignCriterion.resource_name)
  return resource_name_.GetNoArena();
}
inline void CampaignCriterion::set_resource_name(const ::std::string& value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.resources.CampaignCriterion.resource_name)
}
#if LANG_CXX11
inline void CampaignCriterion::set_resource_name(::std::string&& value) {
  
  resource_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.ads.googleads.v0.resources.CampaignCriterion.resource_name)
}
#endif
inline void CampaignCriterion::set_resource_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.ads.googleads.v0.resources.CampaignCriterion.resource_name)
}
inline void CampaignCriterion::set_resource_name(const char* value, size_t size) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.ads.googleads.v0.resources.CampaignCriterion.resource_name)
}
inline ::std::string* CampaignCriterion::mutable_resource_name() {
  
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.resources.CampaignCriterion.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CampaignCriterion::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.resources.CampaignCriterion.resource_name)
  
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CampaignCriterion::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    
  } else {
    
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.CampaignCriterion.resource_name)
}

// .google.protobuf.StringValue campaign = 4;
inline bool CampaignCriterion::has_campaign() const {
  return this != internal_default_instance() && campaign_ != NULL;
}
inline const ::google::protobuf::StringValue& CampaignCriterion::_internal_campaign() const {
  return *campaign_;
}
inline const ::google::protobuf::StringValue& CampaignCriterion::campaign() const {
  const ::google::protobuf::StringValue* p = campaign_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.CampaignCriterion.campaign)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* CampaignCriterion::release_campaign() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.resources.CampaignCriterion.campaign)
  
  ::google::protobuf::StringValue* temp = campaign_;
  campaign_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* CampaignCriterion::mutable_campaign() {
  
  if (campaign_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    campaign_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.resources.CampaignCriterion.campaign)
  return campaign_;
}
inline void CampaignCriterion::set_allocated_campaign(::google::protobuf::StringValue* campaign) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(campaign_);
  }
  if (campaign) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(campaign)->GetArena();
    if (message_arena != submessage_arena) {
      campaign = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, campaign, submessage_arena);
    }
    
  } else {
    
  }
  campaign_ = campaign;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.CampaignCriterion.campaign)
}

// .google.protobuf.Int64Value criterion_id = 5;
inline bool CampaignCriterion::has_criterion_id() const {
  return this != internal_default_instance() && criterion_id_ != NULL;
}
inline const ::google::protobuf::Int64Value& CampaignCriterion::_internal_criterion_id() const {
  return *criterion_id_;
}
inline const ::google::protobuf::Int64Value& CampaignCriterion::criterion_id() const {
  const ::google::protobuf::Int64Value* p = criterion_id_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.CampaignCriterion.criterion_id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* CampaignCriterion::release_criterion_id() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.resources.CampaignCriterion.criterion_id)
  
  ::google::protobuf::Int64Value* temp = criterion_id_;
  criterion_id_ = NULL;
  return temp;
}
inline ::google::protobuf::Int64Value* CampaignCriterion::mutable_criterion_id() {
  
  if (criterion_id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    criterion_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.resources.CampaignCriterion.criterion_id)
  return criterion_id_;
}
inline void CampaignCriterion::set_allocated_criterion_id(::google::protobuf::Int64Value* criterion_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(criterion_id_);
  }
  if (criterion_id) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(criterion_id)->GetArena();
    if (message_arena != submessage_arena) {
      criterion_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, criterion_id, submessage_arena);
    }
    
  } else {
    
  }
  criterion_id_ = criterion_id;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.CampaignCriterion.criterion_id)
}

// .google.protobuf.FloatValue bid_modifier = 14;
inline bool CampaignCriterion::has_bid_modifier() const {
  return this != internal_default_instance() && bid_modifier_ != NULL;
}
inline const ::google::protobuf::FloatValue& CampaignCriterion::_internal_bid_modifier() const {
  return *bid_modifier_;
}
inline const ::google::protobuf::FloatValue& CampaignCriterion::bid_modifier() const {
  const ::google::protobuf::FloatValue* p = bid_modifier_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.CampaignCriterion.bid_modifier)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FloatValue*>(
      &::google::protobuf::_FloatValue_default_instance_);
}
inline ::google::protobuf::FloatValue* CampaignCriterion::release_bid_modifier() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.resources.CampaignCriterion.bid_modifier)
  
  ::google::protobuf::FloatValue* temp = bid_modifier_;
  bid_modifier_ = NULL;
  return temp;
}
inline ::google::protobuf::FloatValue* CampaignCriterion::mutable_bid_modifier() {
  
  if (bid_modifier_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FloatValue>(GetArenaNoVirtual());
    bid_modifier_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.resources.CampaignCriterion.bid_modifier)
  return bid_modifier_;
}
inline void CampaignCriterion::set_allocated_bid_modifier(::google::protobuf::FloatValue* bid_modifier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bid_modifier_);
  }
  if (bid_modifier) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(bid_modifier)->GetArena();
    if (message_arena != submessage_arena) {
      bid_modifier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bid_modifier, submessage_arena);
    }
    
  } else {
    
  }
  bid_modifier_ = bid_modifier;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.CampaignCriterion.bid_modifier)
}

// .google.protobuf.BoolValue negative = 7;
inline bool CampaignCriterion::has_negative() const {
  return this != internal_default_instance() && negative_ != NULL;
}
inline const ::google::protobuf::BoolValue& CampaignCriterion::_internal_negative() const {
  return *negative_;
}
inline const ::google::protobuf::BoolValue& CampaignCriterion::negative() const {
  const ::google::protobuf::BoolValue* p = negative_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.CampaignCriterion.negative)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* CampaignCriterion::release_negative() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.resources.CampaignCriterion.negative)
  
  ::google::protobuf::BoolValue* temp = negative_;
  negative_ = NULL;
  return temp;
}
inline ::google::protobuf::BoolValue* CampaignCriterion::mutable_negative() {
  
  if (negative_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArenaNoVirtual());
    negative_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.resources.CampaignCriterion.negative)
  return negative_;
}
inline void CampaignCriterion::set_allocated_negative(::google::protobuf::BoolValue* negative) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(negative_);
  }
  if (negative) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(negative)->GetArena();
    if (message_arena != submessage_arena) {
      negative = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, negative, submessage_arena);
    }
    
  } else {
    
  }
  negative_ = negative;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.resources.CampaignCriterion.negative)
}

// .google.ads.googleads.v0.enums.CriterionTypeEnum.CriterionType type = 6;
inline void CampaignCriterion::clear_type() {
  type_ = 0;
}
inline ::google::ads::googleads::v0::enums::CriterionTypeEnum_CriterionType CampaignCriterion::type() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.CampaignCriterion.type)
  return static_cast< ::google::ads::googleads::v0::enums::CriterionTypeEnum_CriterionType >(type_);
}
inline void CampaignCriterion::set_type(::google::ads::googleads::v0::enums::CriterionTypeEnum_CriterionType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.resources.CampaignCriterion.type)
}

// .google.ads.googleads.v0.common.KeywordInfo keyword = 8;
inline bool CampaignCriterion::has_keyword() const {
  return criterion_case() == kKeyword;
}
inline void CampaignCriterion::set_has_keyword() {
  _oneof_case_[0] = kKeyword;
}
inline const ::google::ads::googleads::v0::common::KeywordInfo& CampaignCriterion::_internal_keyword() const {
  return *criterion_.keyword_;
}
inline ::google::ads::googleads::v0::common::KeywordInfo* CampaignCriterion::release_keyword() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.resources.CampaignCriterion.keyword)
  if (has_keyword()) {
    clear_has_criterion();
      ::google::ads::googleads::v0::common::KeywordInfo* temp = criterion_.keyword_;
    criterion_.keyword_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::ads::googleads::v0::common::KeywordInfo& CampaignCriterion::keyword() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.CampaignCriterion.keyword)
  return has_keyword()
      ? *criterion_.keyword_
      : *reinterpret_cast< ::google::ads::googleads::v0::common::KeywordInfo*>(&::google::ads::googleads::v0::common::_KeywordInfo_default_instance_);
}
inline ::google::ads::googleads::v0::common::KeywordInfo* CampaignCriterion::mutable_keyword() {
  if (!has_keyword()) {
    clear_criterion();
    set_has_keyword();
    criterion_.keyword_ = CreateMaybeMessage< ::google::ads::googleads::v0::common::KeywordInfo >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.resources.CampaignCriterion.keyword)
  return criterion_.keyword_;
}

// .google.ads.googleads.v0.common.LocationInfo location = 12;
inline bool CampaignCriterion::has_location() const {
  return criterion_case() == kLocation;
}
inline void CampaignCriterion::set_has_location() {
  _oneof_case_[0] = kLocation;
}
inline const ::google::ads::googleads::v0::common::LocationInfo& CampaignCriterion::_internal_location() const {
  return *criterion_.location_;
}
inline ::google::ads::googleads::v0::common::LocationInfo* CampaignCriterion::release_location() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.resources.CampaignCriterion.location)
  if (has_location()) {
    clear_has_criterion();
      ::google::ads::googleads::v0::common::LocationInfo* temp = criterion_.location_;
    criterion_.location_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::ads::googleads::v0::common::LocationInfo& CampaignCriterion::location() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.CampaignCriterion.location)
  return has_location()
      ? *criterion_.location_
      : *reinterpret_cast< ::google::ads::googleads::v0::common::LocationInfo*>(&::google::ads::googleads::v0::common::_LocationInfo_default_instance_);
}
inline ::google::ads::googleads::v0::common::LocationInfo* CampaignCriterion::mutable_location() {
  if (!has_location()) {
    clear_criterion();
    set_has_location();
    criterion_.location_ = CreateMaybeMessage< ::google::ads::googleads::v0::common::LocationInfo >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.resources.CampaignCriterion.location)
  return criterion_.location_;
}

// .google.ads.googleads.v0.common.PlatformInfo platform = 13;
inline bool CampaignCriterion::has_platform() const {
  return criterion_case() == kPlatform;
}
inline void CampaignCriterion::set_has_platform() {
  _oneof_case_[0] = kPlatform;
}
inline const ::google::ads::googleads::v0::common::PlatformInfo& CampaignCriterion::_internal_platform() const {
  return *criterion_.platform_;
}
inline ::google::ads::googleads::v0::common::PlatformInfo* CampaignCriterion::release_platform() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.resources.CampaignCriterion.platform)
  if (has_platform()) {
    clear_has_criterion();
      ::google::ads::googleads::v0::common::PlatformInfo* temp = criterion_.platform_;
    criterion_.platform_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::ads::googleads::v0::common::PlatformInfo& CampaignCriterion::platform() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.resources.CampaignCriterion.platform)
  return has_platform()
      ? *criterion_.platform_
      : *reinterpret_cast< ::google::ads::googleads::v0::common::PlatformInfo*>(&::google::ads::googleads::v0::common::_PlatformInfo_default_instance_);
}
inline ::google::ads::googleads::v0::common::PlatformInfo* CampaignCriterion::mutable_platform() {
  if (!has_platform()) {
    clear_criterion();
    set_has_platform();
    criterion_.platform_ = CreateMaybeMessage< ::google::ads::googleads::v0::common::PlatformInfo >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.resources.CampaignCriterion.platform)
  return criterion_.platform_;
}

inline bool CampaignCriterion::has_criterion() const {
  return criterion_case() != CRITERION_NOT_SET;
}
inline void CampaignCriterion::clear_has_criterion() {
  _oneof_case_[0] = CRITERION_NOT_SET;
}
inline CampaignCriterion::CriterionCase CampaignCriterion::criterion_case() const {
  return CampaignCriterion::CriterionCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace resources
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fresources_2fcampaign_5fcriterion_2eproto
