// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/errors/ad_group_error.proto

#ifndef PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fad_5fgroup_5ferror_2eproto
#define PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fad_5fgroup_5ferror_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fad_5fgroup_5ferror_2eproto 

namespace protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fad_5fgroup_5ferror_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fad_5fgroup_5ferror_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace errors {
class AdGroupErrorEnum;
class AdGroupErrorEnumDefaultTypeInternal;
extern AdGroupErrorEnumDefaultTypeInternal _AdGroupErrorEnum_default_instance_;
}  // namespace errors
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::ads::googleads::v0::errors::AdGroupErrorEnum* Arena::CreateMaybeMessage<::google::ads::googleads::v0::errors::AdGroupErrorEnum>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace errors {

enum AdGroupErrorEnum_AdGroupError {
  AdGroupErrorEnum_AdGroupError_UNSPECIFIED = 0,
  AdGroupErrorEnum_AdGroupError_UNKNOWN = 1,
  AdGroupErrorEnum_AdGroupError_DUPLICATE_ADGROUP_NAME = 2,
  AdGroupErrorEnum_AdGroupError_INVALID_ADGROUP_NAME = 3,
  AdGroupErrorEnum_AdGroupError_ADVERTISER_NOT_ON_CONTENT_NETWORK = 5,
  AdGroupErrorEnum_AdGroupError_BID_TOO_BIG = 6,
  AdGroupErrorEnum_AdGroupError_BID_TYPE_AND_BIDDING_STRATEGY_MISMATCH = 7,
  AdGroupErrorEnum_AdGroupError_MISSING_ADGROUP_NAME = 8,
  AdGroupErrorEnum_AdGroupError_ADGROUP_LABEL_DOES_NOT_EXIST = 9,
  AdGroupErrorEnum_AdGroupError_ADGROUP_LABEL_ALREADY_EXISTS = 10,
  AdGroupErrorEnum_AdGroupError_INVALID_CONTENT_BID_CRITERION_TYPE_GROUP = 11,
  AdGroupErrorEnum_AdGroupError_AD_GROUP_TYPE_NOT_VALID_FOR_ADVERTISING_CHANNEL_TYPE = 12,
  AdGroupErrorEnum_AdGroupError_ADGROUP_TYPE_NOT_SUPPORTED_FOR_CAMPAIGN_SALES_COUNTRY = 13,
  AdGroupErrorEnum_AdGroupError_CANNOT_ADD_ADGROUP_OF_TYPE_DSA_TO_CAMPAIGN_WITHOUT_DSA_SETTING = 14,
  AdGroupErrorEnum_AdGroupError_AdGroupErrorEnum_AdGroupError_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AdGroupErrorEnum_AdGroupError_AdGroupErrorEnum_AdGroupError_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AdGroupErrorEnum_AdGroupError_IsValid(int value);
const AdGroupErrorEnum_AdGroupError AdGroupErrorEnum_AdGroupError_AdGroupError_MIN = AdGroupErrorEnum_AdGroupError_UNSPECIFIED;
const AdGroupErrorEnum_AdGroupError AdGroupErrorEnum_AdGroupError_AdGroupError_MAX = AdGroupErrorEnum_AdGroupError_CANNOT_ADD_ADGROUP_OF_TYPE_DSA_TO_CAMPAIGN_WITHOUT_DSA_SETTING;
const int AdGroupErrorEnum_AdGroupError_AdGroupError_ARRAYSIZE = AdGroupErrorEnum_AdGroupError_AdGroupError_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdGroupErrorEnum_AdGroupError_descriptor();
inline const ::std::string& AdGroupErrorEnum_AdGroupError_Name(AdGroupErrorEnum_AdGroupError value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdGroupErrorEnum_AdGroupError_descriptor(), value);
}
inline bool AdGroupErrorEnum_AdGroupError_Parse(
    const ::std::string& name, AdGroupErrorEnum_AdGroupError* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdGroupErrorEnum_AdGroupError>(
    AdGroupErrorEnum_AdGroupError_descriptor(), name, value);
}
// ===================================================================

class AdGroupErrorEnum : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.errors.AdGroupErrorEnum) */ {
 public:
  AdGroupErrorEnum();
  virtual ~AdGroupErrorEnum();

  AdGroupErrorEnum(const AdGroupErrorEnum& from);

  inline AdGroupErrorEnum& operator=(const AdGroupErrorEnum& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdGroupErrorEnum(AdGroupErrorEnum&& from) noexcept
    : AdGroupErrorEnum() {
    *this = ::std::move(from);
  }

  inline AdGroupErrorEnum& operator=(AdGroupErrorEnum&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdGroupErrorEnum& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdGroupErrorEnum* internal_default_instance() {
    return reinterpret_cast<const AdGroupErrorEnum*>(
               &_AdGroupErrorEnum_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AdGroupErrorEnum* other);
  friend void swap(AdGroupErrorEnum& a, AdGroupErrorEnum& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdGroupErrorEnum* New() const final {
    return CreateMaybeMessage<AdGroupErrorEnum>(NULL);
  }

  AdGroupErrorEnum* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdGroupErrorEnum>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdGroupErrorEnum& from);
  void MergeFrom(const AdGroupErrorEnum& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdGroupErrorEnum* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AdGroupErrorEnum_AdGroupError AdGroupError;
  static const AdGroupError UNSPECIFIED =
    AdGroupErrorEnum_AdGroupError_UNSPECIFIED;
  static const AdGroupError UNKNOWN =
    AdGroupErrorEnum_AdGroupError_UNKNOWN;
  static const AdGroupError DUPLICATE_ADGROUP_NAME =
    AdGroupErrorEnum_AdGroupError_DUPLICATE_ADGROUP_NAME;
  static const AdGroupError INVALID_ADGROUP_NAME =
    AdGroupErrorEnum_AdGroupError_INVALID_ADGROUP_NAME;
  static const AdGroupError ADVERTISER_NOT_ON_CONTENT_NETWORK =
    AdGroupErrorEnum_AdGroupError_ADVERTISER_NOT_ON_CONTENT_NETWORK;
  static const AdGroupError BID_TOO_BIG =
    AdGroupErrorEnum_AdGroupError_BID_TOO_BIG;
  static const AdGroupError BID_TYPE_AND_BIDDING_STRATEGY_MISMATCH =
    AdGroupErrorEnum_AdGroupError_BID_TYPE_AND_BIDDING_STRATEGY_MISMATCH;
  static const AdGroupError MISSING_ADGROUP_NAME =
    AdGroupErrorEnum_AdGroupError_MISSING_ADGROUP_NAME;
  static const AdGroupError ADGROUP_LABEL_DOES_NOT_EXIST =
    AdGroupErrorEnum_AdGroupError_ADGROUP_LABEL_DOES_NOT_EXIST;
  static const AdGroupError ADGROUP_LABEL_ALREADY_EXISTS =
    AdGroupErrorEnum_AdGroupError_ADGROUP_LABEL_ALREADY_EXISTS;
  static const AdGroupError INVALID_CONTENT_BID_CRITERION_TYPE_GROUP =
    AdGroupErrorEnum_AdGroupError_INVALID_CONTENT_BID_CRITERION_TYPE_GROUP;
  static const AdGroupError AD_GROUP_TYPE_NOT_VALID_FOR_ADVERTISING_CHANNEL_TYPE =
    AdGroupErrorEnum_AdGroupError_AD_GROUP_TYPE_NOT_VALID_FOR_ADVERTISING_CHANNEL_TYPE;
  static const AdGroupError ADGROUP_TYPE_NOT_SUPPORTED_FOR_CAMPAIGN_SALES_COUNTRY =
    AdGroupErrorEnum_AdGroupError_ADGROUP_TYPE_NOT_SUPPORTED_FOR_CAMPAIGN_SALES_COUNTRY;
  static const AdGroupError CANNOT_ADD_ADGROUP_OF_TYPE_DSA_TO_CAMPAIGN_WITHOUT_DSA_SETTING =
    AdGroupErrorEnum_AdGroupError_CANNOT_ADD_ADGROUP_OF_TYPE_DSA_TO_CAMPAIGN_WITHOUT_DSA_SETTING;
  static inline bool AdGroupError_IsValid(int value) {
    return AdGroupErrorEnum_AdGroupError_IsValid(value);
  }
  static const AdGroupError AdGroupError_MIN =
    AdGroupErrorEnum_AdGroupError_AdGroupError_MIN;
  static const AdGroupError AdGroupError_MAX =
    AdGroupErrorEnum_AdGroupError_AdGroupError_MAX;
  static const int AdGroupError_ARRAYSIZE =
    AdGroupErrorEnum_AdGroupError_AdGroupError_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AdGroupError_descriptor() {
    return AdGroupErrorEnum_AdGroupError_descriptor();
  }
  static inline const ::std::string& AdGroupError_Name(AdGroupError value) {
    return AdGroupErrorEnum_AdGroupError_Name(value);
  }
  static inline bool AdGroupError_Parse(const ::std::string& name,
      AdGroupError* value) {
    return AdGroupErrorEnum_AdGroupError_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.errors.AdGroupErrorEnum)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fad_5fgroup_5ferror_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AdGroupErrorEnum

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace errors
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::ads::googleads::v0::errors::AdGroupErrorEnum_AdGroupError> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::ads::googleads::v0::errors::AdGroupErrorEnum_AdGroupError>() {
  return ::google::ads::googleads::v0::errors::AdGroupErrorEnum_AdGroupError_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fad_5fgroup_5ferror_2eproto
