// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/errors/campaign_error.proto

#ifndef PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fcampaign_5ferror_2eproto
#define PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fcampaign_5ferror_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcampaign_5ferror_2eproto 

namespace protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcampaign_5ferror_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcampaign_5ferror_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace errors {
class CampaignErrorEnum;
class CampaignErrorEnumDefaultTypeInternal;
extern CampaignErrorEnumDefaultTypeInternal _CampaignErrorEnum_default_instance_;
}  // namespace errors
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::ads::googleads::v0::errors::CampaignErrorEnum* Arena::CreateMaybeMessage<::google::ads::googleads::v0::errors::CampaignErrorEnum>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace errors {

enum CampaignErrorEnum_CampaignError {
  CampaignErrorEnum_CampaignError_UNSPECIFIED = 0,
  CampaignErrorEnum_CampaignError_UNKNOWN = 1,
  CampaignErrorEnum_CampaignError_CANNOT_TARGET_CONTENT_NETWORK = 3,
  CampaignErrorEnum_CampaignError_CANNOT_TARGET_SEARCH_NETWORK = 4,
  CampaignErrorEnum_CampaignError_CANNOT_TARGET_SEARCH_NETWORK_WITHOUT_GOOGLE_SEARCH = 5,
  CampaignErrorEnum_CampaignError_CANNOT_TARGET_GOOGLE_SEARCH_FOR_CPM_CAMPAIGN = 6,
  CampaignErrorEnum_CampaignError_CAMPAIGN_MUST_TARGET_AT_LEAST_ONE_NETWORK = 7,
  CampaignErrorEnum_CampaignError_CANNOT_TARGET_PARTNER_SEARCH_NETWORK = 8,
  CampaignErrorEnum_CampaignError_CANNOT_TARGET_CONTENT_NETWORK_ONLY_WITH_CRITERIA_LEVEL_BIDDING_STRATEGY = 9,
  CampaignErrorEnum_CampaignError_CAMPAIGN_DURATION_MUST_CONTAIN_ALL_RUNNABLE_TRIALS = 10,
  CampaignErrorEnum_CampaignError_CANNOT_MODIFY_FOR_TRIAL_CAMPAIGN = 11,
  CampaignErrorEnum_CampaignError_DUPLICATE_CAMPAIGN_NAME = 12,
  CampaignErrorEnum_CampaignError_INCOMPATIBLE_CAMPAIGN_FIELD = 13,
  CampaignErrorEnum_CampaignError_INVALID_CAMPAIGN_NAME = 14,
  CampaignErrorEnum_CampaignError_INVALID_AD_SERVING_OPTIMIZATION_STATUS = 15,
  CampaignErrorEnum_CampaignError_INVALID_TRACKING_URL = 16,
  CampaignErrorEnum_CampaignError_CANNOT_SET_BOTH_TRACKING_URL_TEMPLATE_AND_TRACKING_SETTING = 17,
  CampaignErrorEnum_CampaignError_MAX_IMPRESSIONS_NOT_IN_RANGE = 18,
  CampaignErrorEnum_CampaignError_TIME_UNIT_NOT_SUPPORTED = 19,
  CampaignErrorEnum_CampaignError_INVALID_OPERATION_IF_SERVING_STATUS_HAS_ENDED = 20,
  CampaignErrorEnum_CampaignError_BUDGET_CANNOT_BE_SHARED = 21,
  CampaignErrorEnum_CampaignError_CAMPAIGN_CANNOT_USE_SHARED_BUDGET = 22,
  CampaignErrorEnum_CampaignError_CANNOT_CHANGE_BUDGET_ON_CAMPAIGN_WITH_TRIALS = 23,
  CampaignErrorEnum_CampaignError_CAMPAIGN_LABEL_DOES_NOT_EXIST = 24,
  CampaignErrorEnum_CampaignError_CAMPAIGN_LABEL_ALREADY_EXISTS = 25,
  CampaignErrorEnum_CampaignError_MISSING_SHOPPING_SETTING = 26,
  CampaignErrorEnum_CampaignError_INVALID_SHOPPING_SALES_COUNTRY = 27,
  CampaignErrorEnum_CampaignError_SHOPPING_MERCHANT_NOT_ALLOWED_FOR_PURCHASES_ON_GOOGLE = 28,
  CampaignErrorEnum_CampaignError_PURCHASES_ON_GOOGLE_NOT_SUPPORTED_FOR_SHOPPING_SALES_COUNTRY = 29,
  CampaignErrorEnum_CampaignError_MISSING_UNIVERSAL_APP_CAMPAIGN_SETTING = 30,
  CampaignErrorEnum_CampaignError_ADVERTISING_CHANNEL_TYPE_NOT_AVAILABLE_FOR_ACCOUNT_TYPE = 31,
  CampaignErrorEnum_CampaignError_INVALID_ADVERTISING_CHANNEL_SUB_TYPE = 32,
  CampaignErrorEnum_CampaignError_AT_LEAST_ONE_CONVERSION_MUST_BE_SELECTED = 33,
  CampaignErrorEnum_CampaignError_CANNOT_SET_AD_ROTATION_MODE = 34,
  CampaignErrorEnum_CampaignError_CANNOT_MODIFY_START_DATE_IF_ALREADY_STARTED = 35,
  CampaignErrorEnum_CampaignError_CANNOT_SET_DATE_TO_PAST = 36,
  CampaignErrorEnum_CampaignError_MISSING_HOTEL_CUSTOMER_LINK = 37,
  CampaignErrorEnum_CampaignError_INVALID_HOTEL_CUSTOMER_LINK = 38,
  CampaignErrorEnum_CampaignError_MISSING_HOTEL_SETTING = 39,
  CampaignErrorEnum_CampaignError_CampaignErrorEnum_CampaignError_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CampaignErrorEnum_CampaignError_CampaignErrorEnum_CampaignError_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CampaignErrorEnum_CampaignError_IsValid(int value);
const CampaignErrorEnum_CampaignError CampaignErrorEnum_CampaignError_CampaignError_MIN = CampaignErrorEnum_CampaignError_UNSPECIFIED;
const CampaignErrorEnum_CampaignError CampaignErrorEnum_CampaignError_CampaignError_MAX = CampaignErrorEnum_CampaignError_MISSING_HOTEL_SETTING;
const int CampaignErrorEnum_CampaignError_CampaignError_ARRAYSIZE = CampaignErrorEnum_CampaignError_CampaignError_MAX + 1;

const ::google::protobuf::EnumDescriptor* CampaignErrorEnum_CampaignError_descriptor();
inline const ::std::string& CampaignErrorEnum_CampaignError_Name(CampaignErrorEnum_CampaignError value) {
  return ::google::protobuf::internal::NameOfEnum(
    CampaignErrorEnum_CampaignError_descriptor(), value);
}
inline bool CampaignErrorEnum_CampaignError_Parse(
    const ::std::string& name, CampaignErrorEnum_CampaignError* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CampaignErrorEnum_CampaignError>(
    CampaignErrorEnum_CampaignError_descriptor(), name, value);
}
// ===================================================================

class CampaignErrorEnum : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.errors.CampaignErrorEnum) */ {
 public:
  CampaignErrorEnum();
  virtual ~CampaignErrorEnum();

  CampaignErrorEnum(const CampaignErrorEnum& from);

  inline CampaignErrorEnum& operator=(const CampaignErrorEnum& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CampaignErrorEnum(CampaignErrorEnum&& from) noexcept
    : CampaignErrorEnum() {
    *this = ::std::move(from);
  }

  inline CampaignErrorEnum& operator=(CampaignErrorEnum&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CampaignErrorEnum& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CampaignErrorEnum* internal_default_instance() {
    return reinterpret_cast<const CampaignErrorEnum*>(
               &_CampaignErrorEnum_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CampaignErrorEnum* other);
  friend void swap(CampaignErrorEnum& a, CampaignErrorEnum& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CampaignErrorEnum* New() const final {
    return CreateMaybeMessage<CampaignErrorEnum>(NULL);
  }

  CampaignErrorEnum* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CampaignErrorEnum>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CampaignErrorEnum& from);
  void MergeFrom(const CampaignErrorEnum& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CampaignErrorEnum* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CampaignErrorEnum_CampaignError CampaignError;
  static const CampaignError UNSPECIFIED =
    CampaignErrorEnum_CampaignError_UNSPECIFIED;
  static const CampaignError UNKNOWN =
    CampaignErrorEnum_CampaignError_UNKNOWN;
  static const CampaignError CANNOT_TARGET_CONTENT_NETWORK =
    CampaignErrorEnum_CampaignError_CANNOT_TARGET_CONTENT_NETWORK;
  static const CampaignError CANNOT_TARGET_SEARCH_NETWORK =
    CampaignErrorEnum_CampaignError_CANNOT_TARGET_SEARCH_NETWORK;
  static const CampaignError CANNOT_TARGET_SEARCH_NETWORK_WITHOUT_GOOGLE_SEARCH =
    CampaignErrorEnum_CampaignError_CANNOT_TARGET_SEARCH_NETWORK_WITHOUT_GOOGLE_SEARCH;
  static const CampaignError CANNOT_TARGET_GOOGLE_SEARCH_FOR_CPM_CAMPAIGN =
    CampaignErrorEnum_CampaignError_CANNOT_TARGET_GOOGLE_SEARCH_FOR_CPM_CAMPAIGN;
  static const CampaignError CAMPAIGN_MUST_TARGET_AT_LEAST_ONE_NETWORK =
    CampaignErrorEnum_CampaignError_CAMPAIGN_MUST_TARGET_AT_LEAST_ONE_NETWORK;
  static const CampaignError CANNOT_TARGET_PARTNER_SEARCH_NETWORK =
    CampaignErrorEnum_CampaignError_CANNOT_TARGET_PARTNER_SEARCH_NETWORK;
  static const CampaignError CANNOT_TARGET_CONTENT_NETWORK_ONLY_WITH_CRITERIA_LEVEL_BIDDING_STRATEGY =
    CampaignErrorEnum_CampaignError_CANNOT_TARGET_CONTENT_NETWORK_ONLY_WITH_CRITERIA_LEVEL_BIDDING_STRATEGY;
  static const CampaignError CAMPAIGN_DURATION_MUST_CONTAIN_ALL_RUNNABLE_TRIALS =
    CampaignErrorEnum_CampaignError_CAMPAIGN_DURATION_MUST_CONTAIN_ALL_RUNNABLE_TRIALS;
  static const CampaignError CANNOT_MODIFY_FOR_TRIAL_CAMPAIGN =
    CampaignErrorEnum_CampaignError_CANNOT_MODIFY_FOR_TRIAL_CAMPAIGN;
  static const CampaignError DUPLICATE_CAMPAIGN_NAME =
    CampaignErrorEnum_CampaignError_DUPLICATE_CAMPAIGN_NAME;
  static const CampaignError INCOMPATIBLE_CAMPAIGN_FIELD =
    CampaignErrorEnum_CampaignError_INCOMPATIBLE_CAMPAIGN_FIELD;
  static const CampaignError INVALID_CAMPAIGN_NAME =
    CampaignErrorEnum_CampaignError_INVALID_CAMPAIGN_NAME;
  static const CampaignError INVALID_AD_SERVING_OPTIMIZATION_STATUS =
    CampaignErrorEnum_CampaignError_INVALID_AD_SERVING_OPTIMIZATION_STATUS;
  static const CampaignError INVALID_TRACKING_URL =
    CampaignErrorEnum_CampaignError_INVALID_TRACKING_URL;
  static const CampaignError CANNOT_SET_BOTH_TRACKING_URL_TEMPLATE_AND_TRACKING_SETTING =
    CampaignErrorEnum_CampaignError_CANNOT_SET_BOTH_TRACKING_URL_TEMPLATE_AND_TRACKING_SETTING;
  static const CampaignError MAX_IMPRESSIONS_NOT_IN_RANGE =
    CampaignErrorEnum_CampaignError_MAX_IMPRESSIONS_NOT_IN_RANGE;
  static const CampaignError TIME_UNIT_NOT_SUPPORTED =
    CampaignErrorEnum_CampaignError_TIME_UNIT_NOT_SUPPORTED;
  static const CampaignError INVALID_OPERATION_IF_SERVING_STATUS_HAS_ENDED =
    CampaignErrorEnum_CampaignError_INVALID_OPERATION_IF_SERVING_STATUS_HAS_ENDED;
  static const CampaignError BUDGET_CANNOT_BE_SHARED =
    CampaignErrorEnum_CampaignError_BUDGET_CANNOT_BE_SHARED;
  static const CampaignError CAMPAIGN_CANNOT_USE_SHARED_BUDGET =
    CampaignErrorEnum_CampaignError_CAMPAIGN_CANNOT_USE_SHARED_BUDGET;
  static const CampaignError CANNOT_CHANGE_BUDGET_ON_CAMPAIGN_WITH_TRIALS =
    CampaignErrorEnum_CampaignError_CANNOT_CHANGE_BUDGET_ON_CAMPAIGN_WITH_TRIALS;
  static const CampaignError CAMPAIGN_LABEL_DOES_NOT_EXIST =
    CampaignErrorEnum_CampaignError_CAMPAIGN_LABEL_DOES_NOT_EXIST;
  static const CampaignError CAMPAIGN_LABEL_ALREADY_EXISTS =
    CampaignErrorEnum_CampaignError_CAMPAIGN_LABEL_ALREADY_EXISTS;
  static const CampaignError MISSING_SHOPPING_SETTING =
    CampaignErrorEnum_CampaignError_MISSING_SHOPPING_SETTING;
  static const CampaignError INVALID_SHOPPING_SALES_COUNTRY =
    CampaignErrorEnum_CampaignError_INVALID_SHOPPING_SALES_COUNTRY;
  static const CampaignError SHOPPING_MERCHANT_NOT_ALLOWED_FOR_PURCHASES_ON_GOOGLE =
    CampaignErrorEnum_CampaignError_SHOPPING_MERCHANT_NOT_ALLOWED_FOR_PURCHASES_ON_GOOGLE;
  static const CampaignError PURCHASES_ON_GOOGLE_NOT_SUPPORTED_FOR_SHOPPING_SALES_COUNTRY =
    CampaignErrorEnum_CampaignError_PURCHASES_ON_GOOGLE_NOT_SUPPORTED_FOR_SHOPPING_SALES_COUNTRY;
  static const CampaignError MISSING_UNIVERSAL_APP_CAMPAIGN_SETTING =
    CampaignErrorEnum_CampaignError_MISSING_UNIVERSAL_APP_CAMPAIGN_SETTING;
  static const CampaignError ADVERTISING_CHANNEL_TYPE_NOT_AVAILABLE_FOR_ACCOUNT_TYPE =
    CampaignErrorEnum_CampaignError_ADVERTISING_CHANNEL_TYPE_NOT_AVAILABLE_FOR_ACCOUNT_TYPE;
  static const CampaignError INVALID_ADVERTISING_CHANNEL_SUB_TYPE =
    CampaignErrorEnum_CampaignError_INVALID_ADVERTISING_CHANNEL_SUB_TYPE;
  static const CampaignError AT_LEAST_ONE_CONVERSION_MUST_BE_SELECTED =
    CampaignErrorEnum_CampaignError_AT_LEAST_ONE_CONVERSION_MUST_BE_SELECTED;
  static const CampaignError CANNOT_SET_AD_ROTATION_MODE =
    CampaignErrorEnum_CampaignError_CANNOT_SET_AD_ROTATION_MODE;
  static const CampaignError CANNOT_MODIFY_START_DATE_IF_ALREADY_STARTED =
    CampaignErrorEnum_CampaignError_CANNOT_MODIFY_START_DATE_IF_ALREADY_STARTED;
  static const CampaignError CANNOT_SET_DATE_TO_PAST =
    CampaignErrorEnum_CampaignError_CANNOT_SET_DATE_TO_PAST;
  static const CampaignError MISSING_HOTEL_CUSTOMER_LINK =
    CampaignErrorEnum_CampaignError_MISSING_HOTEL_CUSTOMER_LINK;
  static const CampaignError INVALID_HOTEL_CUSTOMER_LINK =
    CampaignErrorEnum_CampaignError_INVALID_HOTEL_CUSTOMER_LINK;
  static const CampaignError MISSING_HOTEL_SETTING =
    CampaignErrorEnum_CampaignError_MISSING_HOTEL_SETTING;
  static inline bool CampaignError_IsValid(int value) {
    return CampaignErrorEnum_CampaignError_IsValid(value);
  }
  static const CampaignError CampaignError_MIN =
    CampaignErrorEnum_CampaignError_CampaignError_MIN;
  static const CampaignError CampaignError_MAX =
    CampaignErrorEnum_CampaignError_CampaignError_MAX;
  static const int CampaignError_ARRAYSIZE =
    CampaignErrorEnum_CampaignError_CampaignError_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CampaignError_descriptor() {
    return CampaignErrorEnum_CampaignError_descriptor();
  }
  static inline const ::std::string& CampaignError_Name(CampaignError value) {
    return CampaignErrorEnum_CampaignError_Name(value);
  }
  static inline bool CampaignError_Parse(const ::std::string& name,
      CampaignError* value) {
    return CampaignErrorEnum_CampaignError_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.errors.CampaignErrorEnum)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcampaign_5ferror_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CampaignErrorEnum

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace errors
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::ads::googleads::v0::errors::CampaignErrorEnum_CampaignError> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::ads::googleads::v0::errors::CampaignErrorEnum_CampaignError>() {
  return ::google::ads::googleads::v0::errors::CampaignErrorEnum_CampaignError_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fcampaign_5ferror_2eproto
