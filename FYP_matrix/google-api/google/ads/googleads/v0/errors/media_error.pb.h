// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/errors/media_error.proto

#ifndef PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5ferror_2eproto
#define PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5ferror_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5ferror_2eproto 

namespace protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5ferror_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5ferror_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace errors {
class MediaErrorEnum;
class MediaErrorEnumDefaultTypeInternal;
extern MediaErrorEnumDefaultTypeInternal _MediaErrorEnum_default_instance_;
}  // namespace errors
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::ads::googleads::v0::errors::MediaErrorEnum* Arena::CreateMaybeMessage<::google::ads::googleads::v0::errors::MediaErrorEnum>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace errors {

enum MediaErrorEnum_MediaError {
  MediaErrorEnum_MediaError_UNSPECIFIED = 0,
  MediaErrorEnum_MediaError_UNKNOWN = 1,
  MediaErrorEnum_MediaError_CANNOT_ADD_STANDARD_ICON = 2,
  MediaErrorEnum_MediaError_CANNOT_SELECT_STANDARD_ICON_WITH_OTHER_TYPES = 3,
  MediaErrorEnum_MediaError_CANNOT_SPECIFY_MEDIA_ID_AND_DATA = 4,
  MediaErrorEnum_MediaError_DUPLICATE_MEDIA = 5,
  MediaErrorEnum_MediaError_EMPTY_FIELD = 6,
  MediaErrorEnum_MediaError_RESOURCE_REFERENCED_IN_MULTIPLE_OPS = 7,
  MediaErrorEnum_MediaError_FIELD_NOT_SUPPORTED_FOR_MEDIA_SUB_TYPE = 8,
  MediaErrorEnum_MediaError_INVALID_MEDIA_ID = 9,
  MediaErrorEnum_MediaError_INVALID_MEDIA_SUB_TYPE = 10,
  MediaErrorEnum_MediaError_INVALID_MEDIA_TYPE = 11,
  MediaErrorEnum_MediaError_INVALID_MIME_TYPE = 12,
  MediaErrorEnum_MediaError_INVALID_REFERENCE_ID = 13,
  MediaErrorEnum_MediaError_INVALID_YOU_TUBE_ID = 14,
  MediaErrorEnum_MediaError_MEDIA_FAILED_TRANSCODING = 15,
  MediaErrorEnum_MediaError_MEDIA_NOT_TRANSCODED = 16,
  MediaErrorEnum_MediaError_MEDIA_TYPE_DOES_NOT_MATCH_OBJECT_TYPE = 17,
  MediaErrorEnum_MediaError_NO_FIELDS_SPECIFIED = 18,
  MediaErrorEnum_MediaError_NULL_REFERENCE_ID_AND_MEDIA_ID = 19,
  MediaErrorEnum_MediaError_TOO_LONG = 20,
  MediaErrorEnum_MediaError_UNSUPPORTED_OPERATION = 21,
  MediaErrorEnum_MediaError_UNSUPPORTED_TYPE = 22,
  MediaErrorEnum_MediaError_YOU_TUBE_SERVICE_UNAVAILABLE = 23,
  MediaErrorEnum_MediaError_YOU_TUBE_VIDEO_HAS_NON_POSITIVE_DURATION = 24,
  MediaErrorEnum_MediaError_YOU_TUBE_VIDEO_NOT_FOUND = 25,
  MediaErrorEnum_MediaError_MediaErrorEnum_MediaError_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MediaErrorEnum_MediaError_MediaErrorEnum_MediaError_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MediaErrorEnum_MediaError_IsValid(int value);
const MediaErrorEnum_MediaError MediaErrorEnum_MediaError_MediaError_MIN = MediaErrorEnum_MediaError_UNSPECIFIED;
const MediaErrorEnum_MediaError MediaErrorEnum_MediaError_MediaError_MAX = MediaErrorEnum_MediaError_YOU_TUBE_VIDEO_NOT_FOUND;
const int MediaErrorEnum_MediaError_MediaError_ARRAYSIZE = MediaErrorEnum_MediaError_MediaError_MAX + 1;

const ::google::protobuf::EnumDescriptor* MediaErrorEnum_MediaError_descriptor();
inline const ::std::string& MediaErrorEnum_MediaError_Name(MediaErrorEnum_MediaError value) {
  return ::google::protobuf::internal::NameOfEnum(
    MediaErrorEnum_MediaError_descriptor(), value);
}
inline bool MediaErrorEnum_MediaError_Parse(
    const ::std::string& name, MediaErrorEnum_MediaError* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MediaErrorEnum_MediaError>(
    MediaErrorEnum_MediaError_descriptor(), name, value);
}
// ===================================================================

class MediaErrorEnum : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.errors.MediaErrorEnum) */ {
 public:
  MediaErrorEnum();
  virtual ~MediaErrorEnum();

  MediaErrorEnum(const MediaErrorEnum& from);

  inline MediaErrorEnum& operator=(const MediaErrorEnum& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MediaErrorEnum(MediaErrorEnum&& from) noexcept
    : MediaErrorEnum() {
    *this = ::std::move(from);
  }

  inline MediaErrorEnum& operator=(MediaErrorEnum&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MediaErrorEnum& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MediaErrorEnum* internal_default_instance() {
    return reinterpret_cast<const MediaErrorEnum*>(
               &_MediaErrorEnum_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MediaErrorEnum* other);
  friend void swap(MediaErrorEnum& a, MediaErrorEnum& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MediaErrorEnum* New() const final {
    return CreateMaybeMessage<MediaErrorEnum>(NULL);
  }

  MediaErrorEnum* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MediaErrorEnum>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MediaErrorEnum& from);
  void MergeFrom(const MediaErrorEnum& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MediaErrorEnum* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MediaErrorEnum_MediaError MediaError;
  static const MediaError UNSPECIFIED =
    MediaErrorEnum_MediaError_UNSPECIFIED;
  static const MediaError UNKNOWN =
    MediaErrorEnum_MediaError_UNKNOWN;
  static const MediaError CANNOT_ADD_STANDARD_ICON =
    MediaErrorEnum_MediaError_CANNOT_ADD_STANDARD_ICON;
  static const MediaError CANNOT_SELECT_STANDARD_ICON_WITH_OTHER_TYPES =
    MediaErrorEnum_MediaError_CANNOT_SELECT_STANDARD_ICON_WITH_OTHER_TYPES;
  static const MediaError CANNOT_SPECIFY_MEDIA_ID_AND_DATA =
    MediaErrorEnum_MediaError_CANNOT_SPECIFY_MEDIA_ID_AND_DATA;
  static const MediaError DUPLICATE_MEDIA =
    MediaErrorEnum_MediaError_DUPLICATE_MEDIA;
  static const MediaError EMPTY_FIELD =
    MediaErrorEnum_MediaError_EMPTY_FIELD;
  static const MediaError RESOURCE_REFERENCED_IN_MULTIPLE_OPS =
    MediaErrorEnum_MediaError_RESOURCE_REFERENCED_IN_MULTIPLE_OPS;
  static const MediaError FIELD_NOT_SUPPORTED_FOR_MEDIA_SUB_TYPE =
    MediaErrorEnum_MediaError_FIELD_NOT_SUPPORTED_FOR_MEDIA_SUB_TYPE;
  static const MediaError INVALID_MEDIA_ID =
    MediaErrorEnum_MediaError_INVALID_MEDIA_ID;
  static const MediaError INVALID_MEDIA_SUB_TYPE =
    MediaErrorEnum_MediaError_INVALID_MEDIA_SUB_TYPE;
  static const MediaError INVALID_MEDIA_TYPE =
    MediaErrorEnum_MediaError_INVALID_MEDIA_TYPE;
  static const MediaError INVALID_MIME_TYPE =
    MediaErrorEnum_MediaError_INVALID_MIME_TYPE;
  static const MediaError INVALID_REFERENCE_ID =
    MediaErrorEnum_MediaError_INVALID_REFERENCE_ID;
  static const MediaError INVALID_YOU_TUBE_ID =
    MediaErrorEnum_MediaError_INVALID_YOU_TUBE_ID;
  static const MediaError MEDIA_FAILED_TRANSCODING =
    MediaErrorEnum_MediaError_MEDIA_FAILED_TRANSCODING;
  static const MediaError MEDIA_NOT_TRANSCODED =
    MediaErrorEnum_MediaError_MEDIA_NOT_TRANSCODED;
  static const MediaError MEDIA_TYPE_DOES_NOT_MATCH_OBJECT_TYPE =
    MediaErrorEnum_MediaError_MEDIA_TYPE_DOES_NOT_MATCH_OBJECT_TYPE;
  static const MediaError NO_FIELDS_SPECIFIED =
    MediaErrorEnum_MediaError_NO_FIELDS_SPECIFIED;
  static const MediaError NULL_REFERENCE_ID_AND_MEDIA_ID =
    MediaErrorEnum_MediaError_NULL_REFERENCE_ID_AND_MEDIA_ID;
  static const MediaError TOO_LONG =
    MediaErrorEnum_MediaError_TOO_LONG;
  static const MediaError UNSUPPORTED_OPERATION =
    MediaErrorEnum_MediaError_UNSUPPORTED_OPERATION;
  static const MediaError UNSUPPORTED_TYPE =
    MediaErrorEnum_MediaError_UNSUPPORTED_TYPE;
  static const MediaError YOU_TUBE_SERVICE_UNAVAILABLE =
    MediaErrorEnum_MediaError_YOU_TUBE_SERVICE_UNAVAILABLE;
  static const MediaError YOU_TUBE_VIDEO_HAS_NON_POSITIVE_DURATION =
    MediaErrorEnum_MediaError_YOU_TUBE_VIDEO_HAS_NON_POSITIVE_DURATION;
  static const MediaError YOU_TUBE_VIDEO_NOT_FOUND =
    MediaErrorEnum_MediaError_YOU_TUBE_VIDEO_NOT_FOUND;
  static inline bool MediaError_IsValid(int value) {
    return MediaErrorEnum_MediaError_IsValid(value);
  }
  static const MediaError MediaError_MIN =
    MediaErrorEnum_MediaError_MediaError_MIN;
  static const MediaError MediaError_MAX =
    MediaErrorEnum_MediaError_MediaError_MAX;
  static const int MediaError_ARRAYSIZE =
    MediaErrorEnum_MediaError_MediaError_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MediaError_descriptor() {
    return MediaErrorEnum_MediaError_descriptor();
  }
  static inline const ::std::string& MediaError_Name(MediaError value) {
    return MediaErrorEnum_MediaError_Name(value);
  }
  static inline bool MediaError_Parse(const ::std::string& name,
      MediaError* value) {
    return MediaErrorEnum_MediaError_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.errors.MediaErrorEnum)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5ferror_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MediaErrorEnum

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace errors
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::ads::googleads::v0::errors::MediaErrorEnum_MediaError> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::ads::googleads::v0::errors::MediaErrorEnum_MediaError>() {
  return ::google::ads::googleads::v0::errors::MediaErrorEnum_MediaError_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5ferror_2eproto
