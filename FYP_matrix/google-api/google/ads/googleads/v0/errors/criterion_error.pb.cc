// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/errors/criterion_error.proto

#include "google/ads/googleads/v0/errors/criterion_error.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace errors {
class CriterionErrorEnumDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CriterionErrorEnum>
      _instance;
} _CriterionErrorEnum_default_instance_;
}  // namespace errors
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcriterion_5ferror_2eproto {
static void InitDefaultsCriterionErrorEnum() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::ads::googleads::v0::errors::_CriterionErrorEnum_default_instance_;
    new (ptr) ::google::ads::googleads::v0::errors::CriterionErrorEnum();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::ads::googleads::v0::errors::CriterionErrorEnum::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CriterionErrorEnum =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCriterionErrorEnum}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CriterionErrorEnum.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::ads::googleads::v0::errors::CriterionErrorEnum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::ads::googleads::v0::errors::CriterionErrorEnum)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::ads::googleads::v0::errors::_CriterionErrorEnum_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/ads/googleads/v0/errors/criterion_error.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n4google/ads/googleads/v0/errors/criteri"
      "on_error.proto\022\036google.ads.googleads.v0."
      "errors\"\243\030\n\022CriterionErrorEnum\"\214\030\n\016Criter"
      "ionError\022\017\n\013UNSPECIFIED\020\000\022\013\n\007UNKNOWN\020\001\022\032"
      "\n\026CONCRETE_TYPE_REQUIRED\020\002\022\035\n\031INVALID_EX"
      "CLUDED_CATEGORY\020\003\022\030\n\024INVALID_KEYWORD_TEX"
      "T\020\004\022\031\n\025KEYWORD_TEXT_TOO_LONG\020\005\022\036\n\032KEYWOR"
      "D_HAS_TOO_MANY_WORDS\020\006\022\035\n\031KEYWORD_HAS_IN"
      "VALID_CHARS\020\007\022\031\n\025INVALID_PLACEMENT_URL\020\010"
      "\022\025\n\021INVALID_USER_LIST\020\t\022\031\n\025INVALID_USER_"
      "INTEREST\020\n\022$\n INVALID_FORMAT_FOR_PLACEME"
      "NT_URL\020\013\022\035\n\031PLACEMENT_URL_IS_TOO_LONG\020\014\022"
      "\"\n\036PLACEMENT_URL_HAS_ILLEGAL_CHAR\020\r\022,\n(P"
      "LACEMENT_URL_HAS_MULTIPLE_SITES_IN_LINE\020"
      "\016\0229\n5PLACEMENT_IS_NOT_AVAILABLE_FOR_TARG"
      "ETING_OR_EXCLUSION\020\017\022\031\n\025INVALID_VERTICAL"
      "_PATH\020\020\022\036\n\032INVALID_YOUTUBE_CHANNEL_ID\020\021\022"
      "\034\n\030INVALID_YOUTUBE_VIDEO_ID\020\022\022\'\n#YOUTUBE"
      "_VERTICAL_CHANNEL_DEPRECATED\020\023\022*\n&YOUTUB"
      "E_DEMOGRAPHIC_CHANNEL_DEPRECATED\020\024\022\033\n\027YO"
      "UTUBE_URL_UNSUPPORTED\020\025\022 \n\034CANNOT_EXCLUD"
      "E_CRITERIA_TYPE\020\026\022\034\n\030CANNOT_ADD_CRITERIA"
      "_TYPE\020\027\022\032\n\026INVALID_PRODUCT_FILTER\020\030\022\033\n\027P"
      "RODUCT_FILTER_TOO_LONG\020\031\022$\n CANNOT_EXCLU"
      "DE_SIMILAR_USER_LIST\020\032\022\037\n\033CANNOT_ADD_CLO"
      "SED_USER_LIST\020\033\022:\n6CANNOT_ADD_DISPLAY_ON"
      "LY_LISTS_TO_SEARCH_ONLY_CAMPAIGNS\020\034\0225\n1C"
      "ANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_C"
      "AMPAIGNS\020\035\0227\n3CANNOT_ADD_DISPLAY_ONLY_LI"
      "STS_TO_SHOPPING_CAMPAIGNS\020\036\0221\n-CANNOT_AD"
      "D_USER_INTERESTS_TO_SEARCH_CAMPAIGNS\020\037\0229"
      "\n5CANNOT_SET_BIDS_ON_CRITERION_TYPE_IN_S"
      "EARCH_CAMPAIGNS\020 \0227\n3CANNOT_ADD_URLS_TO_"
      "CRITERION_TYPE_FOR_CAMPAIGN_TYPE\020!\022\026\n\022IN"
      "VALID_IP_ADDRESS\020\"\022\025\n\021INVALID_IP_FORMAT\020"
      "#\022\026\n\022INVALID_MOBILE_APP\020$\022\037\n\033INVALID_MOB"
      "ILE_APP_CATEGORY\020%\022\030\n\024INVALID_CRITERION_"
      "ID\020&\022\033\n\027CANNOT_TARGET_CRITERION\020\'\022$\n CAN"
      "NOT_TARGET_OBSOLETE_CRITERION\020(\022\"\n\036CRITE"
      "RION_ID_AND_TYPE_MISMATCH\020)\022\034\n\030INVALID_P"
      "ROXIMITY_RADIUS\020*\022\"\n\036INVALID_PROXIMITY_R"
      "ADIUS_UNITS\020+\022 \n\034INVALID_STREETADDRESS_L"
      "ENGTH\020,\022\033\n\027INVALID_CITYNAME_LENGTH\020-\022\035\n\031"
      "INVALID_REGIONCODE_LENGTH\020.\022\035\n\031INVALID_R"
      "EGIONNAME_LENGTH\020/\022\035\n\031INVALID_POSTALCODE"
      "_LENGTH\0200\022\030\n\024INVALID_COUNTRY_CODE\0201\022\024\n\020I"
      "NVALID_LATITUDE\0202\022\025\n\021INVALID_LONGITUDE\0203"
      "\0226\n2PROXIMITY_GEOPOINT_AND_ADDRESS_BOTH_"
      "CANNOT_BE_NULL\0204\022\035\n\031INVALID_PROXIMITY_AD"
      "DRESS\0205\022\034\n\030INVALID_USER_DOMAIN_NAME\0206\022 \n"
      "\034CRITERION_PARAMETER_TOO_LONG\0207\022&\n\"AD_SC"
      "HEDULE_TIME_INTERVALS_OVERLAP\0208\0222\n.AD_SC"
      "HEDULE_INTERVAL_CANNOT_SPAN_MULTIPLE_DAY"
      "S\0209\022%\n!AD_SCHEDULE_INVALID_TIME_INTERVAL"
      "\020:\0220\n,AD_SCHEDULE_EXCEEDED_INTERVALS_PER"
      "_DAY_LIMIT\020;\022/\n+AD_SCHEDULE_CRITERION_ID"
      "_MISMATCHING_FIELDS\020<\022$\n CANNOT_BID_MODI"
      "FY_CRITERION_TYPE\020=\0222\n.CANNOT_BID_MODIFY"
      "_CRITERION_CAMPAIGN_OPTED_OUT\020>\022(\n$CANNO"
      "T_BID_MODIFY_NEGATIVE_CRITERION\020\?\022\037\n\033BID"
      "_MODIFIER_ALREADY_EXISTS\020@\022\027\n\023FEED_ID_NO"
      "T_ALLOWED\020A\022(\n$ACCOUNT_INELIGIBLE_FOR_CR"
      "ITERIA_TYPE\020B\022.\n*CRITERIA_TYPE_INVALID_F"
      "OR_BIDDING_STRATEGY\020C\022\034\n\030CANNOT_EXCLUDE_"
      "CRITERION\020D\022\033\n\027CANNOT_REMOVE_CRITERION\020E"
      "\022\032\n\026PRODUCT_SCOPE_TOO_LONG\020F\022%\n!PRODUCT_"
      "SCOPE_TOO_MANY_DIMENSIONS\020G\022\036\n\032PRODUCT_P"
      "ARTITION_TOO_LONG\020H\022)\n%PRODUCT_PARTITION"
      "_TOO_MANY_DIMENSIONS\020I\022\035\n\031INVALID_PRODUC"
      "T_DIMENSION\020J\022\"\n\036INVALID_PRODUCT_DIMENSI"
      "ON_TYPE\020K\022$\n INVALID_PRODUCT_BIDDING_CAT"
      "EGORY\020L\022\034\n\030MISSING_SHOPPING_SETTING\020M\022\035\n"
      "\031INVALID_MATCHING_FUNCTION\020N\022\037\n\033LOCATION"
      "_FILTER_NOT_ALLOWED\020O\022\033\n\027LOCATION_FILTER"
      "_INVALID\020P\0222\n.CANNOT_ATTACH_CRITERIA_AT_"
      "CAMPAIGN_AND_ADGROUP\020Q\0229\n5HOTEL_LENGTH_O"
      "F_STAY_OVERLAPS_WITH_EXISTING_CRITERION\020"
      "R\022A\n=HOTEL_ADVANCE_BOOKING_WINDOW_OVERLA"
      "PS_WITH_EXISTING_CRITERION\020S\022.\n*FIELD_IN"
      "COMPATIBLE_WITH_NEGATIVE_TARGETING\020TB\244\001\n"
      "\"com.google.ads.googleads.v0.errorsB\023Cri"
      "terionErrorProtoP\001\242\002\003GAA\252\002\036Google.Ads.Go"
      "ogleAds.V0.Errors\312\002\036Google\\Ads\\GoogleAds"
      "\\V0\\Errors\342\002\036Google\\Ads\\GoogleAds\\V0\\Err"
      "orsb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3371);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/ads/googleads/v0/errors/criterion_error.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcriterion_5ferror_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace errors {
const ::google::protobuf::EnumDescriptor* CriterionErrorEnum_CriterionError_descriptor() {
  protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcriterion_5ferror_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcriterion_5ferror_2eproto::file_level_enum_descriptors[0];
}
bool CriterionErrorEnum_CriterionError_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CriterionErrorEnum_CriterionError CriterionErrorEnum::UNSPECIFIED;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::UNKNOWN;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CONCRETE_TYPE_REQUIRED;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_EXCLUDED_CATEGORY;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_KEYWORD_TEXT;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::KEYWORD_TEXT_TOO_LONG;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::KEYWORD_HAS_TOO_MANY_WORDS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::KEYWORD_HAS_INVALID_CHARS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_PLACEMENT_URL;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_USER_LIST;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_USER_INTEREST;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_FORMAT_FOR_PLACEMENT_URL;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::PLACEMENT_URL_IS_TOO_LONG;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::PLACEMENT_URL_HAS_ILLEGAL_CHAR;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::PLACEMENT_URL_HAS_MULTIPLE_SITES_IN_LINE;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::PLACEMENT_IS_NOT_AVAILABLE_FOR_TARGETING_OR_EXCLUSION;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_VERTICAL_PATH;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_YOUTUBE_CHANNEL_ID;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_YOUTUBE_VIDEO_ID;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::YOUTUBE_VERTICAL_CHANNEL_DEPRECATED;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::YOUTUBE_DEMOGRAPHIC_CHANNEL_DEPRECATED;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::YOUTUBE_URL_UNSUPPORTED;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_EXCLUDE_CRITERIA_TYPE;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_ADD_CRITERIA_TYPE;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_PRODUCT_FILTER;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::PRODUCT_FILTER_TOO_LONG;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_EXCLUDE_SIMILAR_USER_LIST;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_ADD_CLOSED_USER_LIST;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_ONLY_CAMPAIGNS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_CAMPAIGNS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SHOPPING_CAMPAIGNS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_ADD_USER_INTERESTS_TO_SEARCH_CAMPAIGNS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_SET_BIDS_ON_CRITERION_TYPE_IN_SEARCH_CAMPAIGNS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_ADD_URLS_TO_CRITERION_TYPE_FOR_CAMPAIGN_TYPE;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_IP_ADDRESS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_IP_FORMAT;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_MOBILE_APP;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_MOBILE_APP_CATEGORY;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_CRITERION_ID;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_TARGET_CRITERION;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_TARGET_OBSOLETE_CRITERION;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CRITERION_ID_AND_TYPE_MISMATCH;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_PROXIMITY_RADIUS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_PROXIMITY_RADIUS_UNITS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_STREETADDRESS_LENGTH;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_CITYNAME_LENGTH;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_REGIONCODE_LENGTH;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_REGIONNAME_LENGTH;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_POSTALCODE_LENGTH;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_COUNTRY_CODE;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_LATITUDE;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_LONGITUDE;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::PROXIMITY_GEOPOINT_AND_ADDRESS_BOTH_CANNOT_BE_NULL;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_PROXIMITY_ADDRESS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_USER_DOMAIN_NAME;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CRITERION_PARAMETER_TOO_LONG;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::AD_SCHEDULE_TIME_INTERVALS_OVERLAP;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::AD_SCHEDULE_INTERVAL_CANNOT_SPAN_MULTIPLE_DAYS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::AD_SCHEDULE_INVALID_TIME_INTERVAL;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::AD_SCHEDULE_EXCEEDED_INTERVALS_PER_DAY_LIMIT;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::AD_SCHEDULE_CRITERION_ID_MISMATCHING_FIELDS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_BID_MODIFY_CRITERION_TYPE;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_BID_MODIFY_CRITERION_CAMPAIGN_OPTED_OUT;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_BID_MODIFY_NEGATIVE_CRITERION;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::BID_MODIFIER_ALREADY_EXISTS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::FEED_ID_NOT_ALLOWED;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::ACCOUNT_INELIGIBLE_FOR_CRITERIA_TYPE;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CRITERIA_TYPE_INVALID_FOR_BIDDING_STRATEGY;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_EXCLUDE_CRITERION;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_REMOVE_CRITERION;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::PRODUCT_SCOPE_TOO_LONG;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::PRODUCT_SCOPE_TOO_MANY_DIMENSIONS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::PRODUCT_PARTITION_TOO_LONG;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::PRODUCT_PARTITION_TOO_MANY_DIMENSIONS;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_PRODUCT_DIMENSION;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_PRODUCT_DIMENSION_TYPE;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_PRODUCT_BIDDING_CATEGORY;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::MISSING_SHOPPING_SETTING;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::INVALID_MATCHING_FUNCTION;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::LOCATION_FILTER_NOT_ALLOWED;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::LOCATION_FILTER_INVALID;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CANNOT_ATTACH_CRITERIA_AT_CAMPAIGN_AND_ADGROUP;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::HOTEL_LENGTH_OF_STAY_OVERLAPS_WITH_EXISTING_CRITERION;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::HOTEL_ADVANCE_BOOKING_WINDOW_OVERLAPS_WITH_EXISTING_CRITERION;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::FIELD_INCOMPATIBLE_WITH_NEGATIVE_TARGETING;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CriterionError_MIN;
const CriterionErrorEnum_CriterionError CriterionErrorEnum::CriterionError_MAX;
const int CriterionErrorEnum::CriterionError_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void CriterionErrorEnum::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CriterionErrorEnum::CriterionErrorEnum()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcriterion_5ferror_2eproto::scc_info_CriterionErrorEnum.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.ads.googleads.v0.errors.CriterionErrorEnum)
}
CriterionErrorEnum::CriterionErrorEnum(const CriterionErrorEnum& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.ads.googleads.v0.errors.CriterionErrorEnum)
}

void CriterionErrorEnum::SharedCtor() {
}

CriterionErrorEnum::~CriterionErrorEnum() {
  // @@protoc_insertion_point(destructor:google.ads.googleads.v0.errors.CriterionErrorEnum)
  SharedDtor();
}

void CriterionErrorEnum::SharedDtor() {
}

void CriterionErrorEnum::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CriterionErrorEnum::descriptor() {
  ::protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcriterion_5ferror_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcriterion_5ferror_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CriterionErrorEnum& CriterionErrorEnum::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcriterion_5ferror_2eproto::scc_info_CriterionErrorEnum.base);
  return *internal_default_instance();
}


void CriterionErrorEnum::Clear() {
// @@protoc_insertion_point(message_clear_start:google.ads.googleads.v0.errors.CriterionErrorEnum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CriterionErrorEnum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.ads.googleads.v0.errors.CriterionErrorEnum)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.ads.googleads.v0.errors.CriterionErrorEnum)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.ads.googleads.v0.errors.CriterionErrorEnum)
  return false;
#undef DO_
}

void CriterionErrorEnum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.ads.googleads.v0.errors.CriterionErrorEnum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.ads.googleads.v0.errors.CriterionErrorEnum)
}

::google::protobuf::uint8* CriterionErrorEnum::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.ads.googleads.v0.errors.CriterionErrorEnum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.ads.googleads.v0.errors.CriterionErrorEnum)
  return target;
}

size_t CriterionErrorEnum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.ads.googleads.v0.errors.CriterionErrorEnum)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CriterionErrorEnum::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.ads.googleads.v0.errors.CriterionErrorEnum)
  GOOGLE_DCHECK_NE(&from, this);
  const CriterionErrorEnum* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CriterionErrorEnum>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.ads.googleads.v0.errors.CriterionErrorEnum)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.ads.googleads.v0.errors.CriterionErrorEnum)
    MergeFrom(*source);
  }
}

void CriterionErrorEnum::MergeFrom(const CriterionErrorEnum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.ads.googleads.v0.errors.CriterionErrorEnum)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CriterionErrorEnum::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.ads.googleads.v0.errors.CriterionErrorEnum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CriterionErrorEnum::CopyFrom(const CriterionErrorEnum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.ads.googleads.v0.errors.CriterionErrorEnum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CriterionErrorEnum::IsInitialized() const {
  return true;
}

void CriterionErrorEnum::Swap(CriterionErrorEnum* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CriterionErrorEnum::InternalSwap(CriterionErrorEnum* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CriterionErrorEnum::GetMetadata() const {
  protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcriterion_5ferror_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fcriterion_5ferror_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace errors
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::ads::googleads::v0::errors::CriterionErrorEnum* Arena::CreateMaybeMessage< ::google::ads::googleads::v0::errors::CriterionErrorEnum >(Arena* arena) {
  return Arena::CreateInternal< ::google::ads::googleads::v0::errors::CriterionErrorEnum >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
