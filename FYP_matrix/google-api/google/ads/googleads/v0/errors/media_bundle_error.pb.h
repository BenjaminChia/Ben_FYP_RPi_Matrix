// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/errors/media_bundle_error.proto

#ifndef PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5fbundle_5ferror_2eproto
#define PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5fbundle_5ferror_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5fbundle_5ferror_2eproto 

namespace protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5fbundle_5ferror_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5fbundle_5ferror_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace errors {
class MediaBundleErrorEnum;
class MediaBundleErrorEnumDefaultTypeInternal;
extern MediaBundleErrorEnumDefaultTypeInternal _MediaBundleErrorEnum_default_instance_;
}  // namespace errors
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::ads::googleads::v0::errors::MediaBundleErrorEnum* Arena::CreateMaybeMessage<::google::ads::googleads::v0::errors::MediaBundleErrorEnum>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace errors {

enum MediaBundleErrorEnum_MediaBundleError {
  MediaBundleErrorEnum_MediaBundleError_UNSPECIFIED = 0,
  MediaBundleErrorEnum_MediaBundleError_UNKNOWN = 1,
  MediaBundleErrorEnum_MediaBundleError_BAD_REQUEST = 3,
  MediaBundleErrorEnum_MediaBundleError_DOUBLECLICK_BUNDLE_NOT_ALLOWED = 4,
  MediaBundleErrorEnum_MediaBundleError_EXTERNAL_URL_NOT_ALLOWED = 5,
  MediaBundleErrorEnum_MediaBundleError_FILE_TOO_LARGE = 6,
  MediaBundleErrorEnum_MediaBundleError_GOOGLE_WEB_DESIGNER_ZIP_FILE_NOT_PUBLISHED = 7,
  MediaBundleErrorEnum_MediaBundleError_INVALID_INPUT = 8,
  MediaBundleErrorEnum_MediaBundleError_INVALID_MEDIA_BUNDLE = 9,
  MediaBundleErrorEnum_MediaBundleError_INVALID_MEDIA_BUNDLE_ENTRY = 10,
  MediaBundleErrorEnum_MediaBundleError_INVALID_MIME_TYPE = 11,
  MediaBundleErrorEnum_MediaBundleError_INVALID_PATH = 12,
  MediaBundleErrorEnum_MediaBundleError_INVALID_URL_REFERENCE = 13,
  MediaBundleErrorEnum_MediaBundleError_MEDIA_DATA_TOO_LARGE = 14,
  MediaBundleErrorEnum_MediaBundleError_MISSING_PRIMARY_MEDIA_BUNDLE_ENTRY = 15,
  MediaBundleErrorEnum_MediaBundleError_SERVER_ERROR = 16,
  MediaBundleErrorEnum_MediaBundleError_STORAGE_ERROR = 17,
  MediaBundleErrorEnum_MediaBundleError_SWIFFY_BUNDLE_NOT_ALLOWED = 18,
  MediaBundleErrorEnum_MediaBundleError_TOO_MANY_FILES = 19,
  MediaBundleErrorEnum_MediaBundleError_UNEXPECTED_SIZE = 20,
  MediaBundleErrorEnum_MediaBundleError_UNSUPPORTED_GOOGLE_WEB_DESIGNER_ENVIRONMENT = 21,
  MediaBundleErrorEnum_MediaBundleError_UNSUPPORTED_HTML5_FEATURE = 22,
  MediaBundleErrorEnum_MediaBundleError_URL_IN_MEDIA_BUNDLE_NOT_SSL_COMPLIANT = 23,
  MediaBundleErrorEnum_MediaBundleError_CUSTOM_EXIT_NOT_ALLOWED = 24,
  MediaBundleErrorEnum_MediaBundleError_MediaBundleErrorEnum_MediaBundleError_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MediaBundleErrorEnum_MediaBundleError_MediaBundleErrorEnum_MediaBundleError_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MediaBundleErrorEnum_MediaBundleError_IsValid(int value);
const MediaBundleErrorEnum_MediaBundleError MediaBundleErrorEnum_MediaBundleError_MediaBundleError_MIN = MediaBundleErrorEnum_MediaBundleError_UNSPECIFIED;
const MediaBundleErrorEnum_MediaBundleError MediaBundleErrorEnum_MediaBundleError_MediaBundleError_MAX = MediaBundleErrorEnum_MediaBundleError_CUSTOM_EXIT_NOT_ALLOWED;
const int MediaBundleErrorEnum_MediaBundleError_MediaBundleError_ARRAYSIZE = MediaBundleErrorEnum_MediaBundleError_MediaBundleError_MAX + 1;

const ::google::protobuf::EnumDescriptor* MediaBundleErrorEnum_MediaBundleError_descriptor();
inline const ::std::string& MediaBundleErrorEnum_MediaBundleError_Name(MediaBundleErrorEnum_MediaBundleError value) {
  return ::google::protobuf::internal::NameOfEnum(
    MediaBundleErrorEnum_MediaBundleError_descriptor(), value);
}
inline bool MediaBundleErrorEnum_MediaBundleError_Parse(
    const ::std::string& name, MediaBundleErrorEnum_MediaBundleError* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MediaBundleErrorEnum_MediaBundleError>(
    MediaBundleErrorEnum_MediaBundleError_descriptor(), name, value);
}
// ===================================================================

class MediaBundleErrorEnum : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.errors.MediaBundleErrorEnum) */ {
 public:
  MediaBundleErrorEnum();
  virtual ~MediaBundleErrorEnum();

  MediaBundleErrorEnum(const MediaBundleErrorEnum& from);

  inline MediaBundleErrorEnum& operator=(const MediaBundleErrorEnum& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MediaBundleErrorEnum(MediaBundleErrorEnum&& from) noexcept
    : MediaBundleErrorEnum() {
    *this = ::std::move(from);
  }

  inline MediaBundleErrorEnum& operator=(MediaBundleErrorEnum&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MediaBundleErrorEnum& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MediaBundleErrorEnum* internal_default_instance() {
    return reinterpret_cast<const MediaBundleErrorEnum*>(
               &_MediaBundleErrorEnum_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MediaBundleErrorEnum* other);
  friend void swap(MediaBundleErrorEnum& a, MediaBundleErrorEnum& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MediaBundleErrorEnum* New() const final {
    return CreateMaybeMessage<MediaBundleErrorEnum>(NULL);
  }

  MediaBundleErrorEnum* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MediaBundleErrorEnum>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MediaBundleErrorEnum& from);
  void MergeFrom(const MediaBundleErrorEnum& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MediaBundleErrorEnum* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MediaBundleErrorEnum_MediaBundleError MediaBundleError;
  static const MediaBundleError UNSPECIFIED =
    MediaBundleErrorEnum_MediaBundleError_UNSPECIFIED;
  static const MediaBundleError UNKNOWN =
    MediaBundleErrorEnum_MediaBundleError_UNKNOWN;
  static const MediaBundleError BAD_REQUEST =
    MediaBundleErrorEnum_MediaBundleError_BAD_REQUEST;
  static const MediaBundleError DOUBLECLICK_BUNDLE_NOT_ALLOWED =
    MediaBundleErrorEnum_MediaBundleError_DOUBLECLICK_BUNDLE_NOT_ALLOWED;
  static const MediaBundleError EXTERNAL_URL_NOT_ALLOWED =
    MediaBundleErrorEnum_MediaBundleError_EXTERNAL_URL_NOT_ALLOWED;
  static const MediaBundleError FILE_TOO_LARGE =
    MediaBundleErrorEnum_MediaBundleError_FILE_TOO_LARGE;
  static const MediaBundleError GOOGLE_WEB_DESIGNER_ZIP_FILE_NOT_PUBLISHED =
    MediaBundleErrorEnum_MediaBundleError_GOOGLE_WEB_DESIGNER_ZIP_FILE_NOT_PUBLISHED;
  static const MediaBundleError INVALID_INPUT =
    MediaBundleErrorEnum_MediaBundleError_INVALID_INPUT;
  static const MediaBundleError INVALID_MEDIA_BUNDLE =
    MediaBundleErrorEnum_MediaBundleError_INVALID_MEDIA_BUNDLE;
  static const MediaBundleError INVALID_MEDIA_BUNDLE_ENTRY =
    MediaBundleErrorEnum_MediaBundleError_INVALID_MEDIA_BUNDLE_ENTRY;
  static const MediaBundleError INVALID_MIME_TYPE =
    MediaBundleErrorEnum_MediaBundleError_INVALID_MIME_TYPE;
  static const MediaBundleError INVALID_PATH =
    MediaBundleErrorEnum_MediaBundleError_INVALID_PATH;
  static const MediaBundleError INVALID_URL_REFERENCE =
    MediaBundleErrorEnum_MediaBundleError_INVALID_URL_REFERENCE;
  static const MediaBundleError MEDIA_DATA_TOO_LARGE =
    MediaBundleErrorEnum_MediaBundleError_MEDIA_DATA_TOO_LARGE;
  static const MediaBundleError MISSING_PRIMARY_MEDIA_BUNDLE_ENTRY =
    MediaBundleErrorEnum_MediaBundleError_MISSING_PRIMARY_MEDIA_BUNDLE_ENTRY;
  static const MediaBundleError SERVER_ERROR =
    MediaBundleErrorEnum_MediaBundleError_SERVER_ERROR;
  static const MediaBundleError STORAGE_ERROR =
    MediaBundleErrorEnum_MediaBundleError_STORAGE_ERROR;
  static const MediaBundleError SWIFFY_BUNDLE_NOT_ALLOWED =
    MediaBundleErrorEnum_MediaBundleError_SWIFFY_BUNDLE_NOT_ALLOWED;
  static const MediaBundleError TOO_MANY_FILES =
    MediaBundleErrorEnum_MediaBundleError_TOO_MANY_FILES;
  static const MediaBundleError UNEXPECTED_SIZE =
    MediaBundleErrorEnum_MediaBundleError_UNEXPECTED_SIZE;
  static const MediaBundleError UNSUPPORTED_GOOGLE_WEB_DESIGNER_ENVIRONMENT =
    MediaBundleErrorEnum_MediaBundleError_UNSUPPORTED_GOOGLE_WEB_DESIGNER_ENVIRONMENT;
  static const MediaBundleError UNSUPPORTED_HTML5_FEATURE =
    MediaBundleErrorEnum_MediaBundleError_UNSUPPORTED_HTML5_FEATURE;
  static const MediaBundleError URL_IN_MEDIA_BUNDLE_NOT_SSL_COMPLIANT =
    MediaBundleErrorEnum_MediaBundleError_URL_IN_MEDIA_BUNDLE_NOT_SSL_COMPLIANT;
  static const MediaBundleError CUSTOM_EXIT_NOT_ALLOWED =
    MediaBundleErrorEnum_MediaBundleError_CUSTOM_EXIT_NOT_ALLOWED;
  static inline bool MediaBundleError_IsValid(int value) {
    return MediaBundleErrorEnum_MediaBundleError_IsValid(value);
  }
  static const MediaBundleError MediaBundleError_MIN =
    MediaBundleErrorEnum_MediaBundleError_MediaBundleError_MIN;
  static const MediaBundleError MediaBundleError_MAX =
    MediaBundleErrorEnum_MediaBundleError_MediaBundleError_MAX;
  static const int MediaBundleError_ARRAYSIZE =
    MediaBundleErrorEnum_MediaBundleError_MediaBundleError_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MediaBundleError_descriptor() {
    return MediaBundleErrorEnum_MediaBundleError_descriptor();
  }
  static inline const ::std::string& MediaBundleError_Name(MediaBundleError value) {
    return MediaBundleErrorEnum_MediaBundleError_Name(value);
  }
  static inline bool MediaBundleError_Parse(const ::std::string& name,
      MediaBundleError* value) {
    return MediaBundleErrorEnum_MediaBundleError_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.errors.MediaBundleErrorEnum)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5fbundle_5ferror_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MediaBundleErrorEnum

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace errors
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::ads::googleads::v0::errors::MediaBundleErrorEnum_MediaBundleError> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::ads::googleads::v0::errors::MediaBundleErrorEnum_MediaBundleError>() {
  return ::google::ads::googleads::v0::errors::MediaBundleErrorEnum_MediaBundleError_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fmedia_5fbundle_5ferror_2eproto
