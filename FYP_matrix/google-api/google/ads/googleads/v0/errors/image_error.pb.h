// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/errors/image_error.proto

#ifndef PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fimage_5ferror_2eproto
#define PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fimage_5ferror_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fimage_5ferror_2eproto 

namespace protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fimage_5ferror_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fimage_5ferror_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace errors {
class ImageErrorEnum;
class ImageErrorEnumDefaultTypeInternal;
extern ImageErrorEnumDefaultTypeInternal _ImageErrorEnum_default_instance_;
}  // namespace errors
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::ads::googleads::v0::errors::ImageErrorEnum* Arena::CreateMaybeMessage<::google::ads::googleads::v0::errors::ImageErrorEnum>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace errors {

enum ImageErrorEnum_ImageError {
  ImageErrorEnum_ImageError_UNSPECIFIED = 0,
  ImageErrorEnum_ImageError_UNKNOWN = 1,
  ImageErrorEnum_ImageError_INVALID_IMAGE = 2,
  ImageErrorEnum_ImageError_STORAGE_ERROR = 3,
  ImageErrorEnum_ImageError_BAD_REQUEST = 4,
  ImageErrorEnum_ImageError_UNEXPECTED_SIZE = 5,
  ImageErrorEnum_ImageError_ANIMATED_NOT_ALLOWED = 6,
  ImageErrorEnum_ImageError_ANIMATION_TOO_LONG = 7,
  ImageErrorEnum_ImageError_SERVER_ERROR = 8,
  ImageErrorEnum_ImageError_CMYK_JPEG_NOT_ALLOWED = 9,
  ImageErrorEnum_ImageError_FLASH_NOT_ALLOWED = 10,
  ImageErrorEnum_ImageError_FLASH_WITHOUT_CLICKTAG = 11,
  ImageErrorEnum_ImageError_FLASH_ERROR_AFTER_FIXING_CLICK_TAG = 12,
  ImageErrorEnum_ImageError_ANIMATED_VISUAL_EFFECT = 13,
  ImageErrorEnum_ImageError_FLASH_ERROR = 14,
  ImageErrorEnum_ImageError_LAYOUT_PROBLEM = 15,
  ImageErrorEnum_ImageError_PROBLEM_READING_IMAGE_FILE = 16,
  ImageErrorEnum_ImageError_ERROR_STORING_IMAGE = 17,
  ImageErrorEnum_ImageError_ASPECT_RATIO_NOT_ALLOWED = 18,
  ImageErrorEnum_ImageError_FLASH_HAS_NETWORK_OBJECTS = 19,
  ImageErrorEnum_ImageError_FLASH_HAS_NETWORK_METHODS = 20,
  ImageErrorEnum_ImageError_FLASH_HAS_URL = 21,
  ImageErrorEnum_ImageError_FLASH_HAS_MOUSE_TRACKING = 22,
  ImageErrorEnum_ImageError_FLASH_HAS_RANDOM_NUM = 23,
  ImageErrorEnum_ImageError_FLASH_SELF_TARGETS = 24,
  ImageErrorEnum_ImageError_FLASH_BAD_GETURL_TARGET = 25,
  ImageErrorEnum_ImageError_FLASH_VERSION_NOT_SUPPORTED = 26,
  ImageErrorEnum_ImageError_FLASH_WITHOUT_HARD_CODED_CLICK_URL = 27,
  ImageErrorEnum_ImageError_INVALID_FLASH_FILE = 28,
  ImageErrorEnum_ImageError_FAILED_TO_FIX_CLICK_TAG_IN_FLASH = 29,
  ImageErrorEnum_ImageError_FLASH_ACCESSES_NETWORK_RESOURCES = 30,
  ImageErrorEnum_ImageError_FLASH_EXTERNAL_JS_CALL = 31,
  ImageErrorEnum_ImageError_FLASH_EXTERNAL_FS_CALL = 32,
  ImageErrorEnum_ImageError_FILE_TOO_LARGE = 33,
  ImageErrorEnum_ImageError_IMAGE_DATA_TOO_LARGE = 34,
  ImageErrorEnum_ImageError_IMAGE_PROCESSING_ERROR = 35,
  ImageErrorEnum_ImageError_IMAGE_TOO_SMALL = 36,
  ImageErrorEnum_ImageError_INVALID_INPUT = 37,
  ImageErrorEnum_ImageError_PROBLEM_READING_FILE = 38,
  ImageErrorEnum_ImageError_ImageErrorEnum_ImageError_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ImageErrorEnum_ImageError_ImageErrorEnum_ImageError_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ImageErrorEnum_ImageError_IsValid(int value);
const ImageErrorEnum_ImageError ImageErrorEnum_ImageError_ImageError_MIN = ImageErrorEnum_ImageError_UNSPECIFIED;
const ImageErrorEnum_ImageError ImageErrorEnum_ImageError_ImageError_MAX = ImageErrorEnum_ImageError_PROBLEM_READING_FILE;
const int ImageErrorEnum_ImageError_ImageError_ARRAYSIZE = ImageErrorEnum_ImageError_ImageError_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImageErrorEnum_ImageError_descriptor();
inline const ::std::string& ImageErrorEnum_ImageError_Name(ImageErrorEnum_ImageError value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImageErrorEnum_ImageError_descriptor(), value);
}
inline bool ImageErrorEnum_ImageError_Parse(
    const ::std::string& name, ImageErrorEnum_ImageError* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImageErrorEnum_ImageError>(
    ImageErrorEnum_ImageError_descriptor(), name, value);
}
// ===================================================================

class ImageErrorEnum : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.errors.ImageErrorEnum) */ {
 public:
  ImageErrorEnum();
  virtual ~ImageErrorEnum();

  ImageErrorEnum(const ImageErrorEnum& from);

  inline ImageErrorEnum& operator=(const ImageErrorEnum& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageErrorEnum(ImageErrorEnum&& from) noexcept
    : ImageErrorEnum() {
    *this = ::std::move(from);
  }

  inline ImageErrorEnum& operator=(ImageErrorEnum&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageErrorEnum& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageErrorEnum* internal_default_instance() {
    return reinterpret_cast<const ImageErrorEnum*>(
               &_ImageErrorEnum_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ImageErrorEnum* other);
  friend void swap(ImageErrorEnum& a, ImageErrorEnum& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageErrorEnum* New() const final {
    return CreateMaybeMessage<ImageErrorEnum>(NULL);
  }

  ImageErrorEnum* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImageErrorEnum>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImageErrorEnum& from);
  void MergeFrom(const ImageErrorEnum& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImageErrorEnum* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ImageErrorEnum_ImageError ImageError;
  static const ImageError UNSPECIFIED =
    ImageErrorEnum_ImageError_UNSPECIFIED;
  static const ImageError UNKNOWN =
    ImageErrorEnum_ImageError_UNKNOWN;
  static const ImageError INVALID_IMAGE =
    ImageErrorEnum_ImageError_INVALID_IMAGE;
  static const ImageError STORAGE_ERROR =
    ImageErrorEnum_ImageError_STORAGE_ERROR;
  static const ImageError BAD_REQUEST =
    ImageErrorEnum_ImageError_BAD_REQUEST;
  static const ImageError UNEXPECTED_SIZE =
    ImageErrorEnum_ImageError_UNEXPECTED_SIZE;
  static const ImageError ANIMATED_NOT_ALLOWED =
    ImageErrorEnum_ImageError_ANIMATED_NOT_ALLOWED;
  static const ImageError ANIMATION_TOO_LONG =
    ImageErrorEnum_ImageError_ANIMATION_TOO_LONG;
  static const ImageError SERVER_ERROR =
    ImageErrorEnum_ImageError_SERVER_ERROR;
  static const ImageError CMYK_JPEG_NOT_ALLOWED =
    ImageErrorEnum_ImageError_CMYK_JPEG_NOT_ALLOWED;
  static const ImageError FLASH_NOT_ALLOWED =
    ImageErrorEnum_ImageError_FLASH_NOT_ALLOWED;
  static const ImageError FLASH_WITHOUT_CLICKTAG =
    ImageErrorEnum_ImageError_FLASH_WITHOUT_CLICKTAG;
  static const ImageError FLASH_ERROR_AFTER_FIXING_CLICK_TAG =
    ImageErrorEnum_ImageError_FLASH_ERROR_AFTER_FIXING_CLICK_TAG;
  static const ImageError ANIMATED_VISUAL_EFFECT =
    ImageErrorEnum_ImageError_ANIMATED_VISUAL_EFFECT;
  static const ImageError FLASH_ERROR =
    ImageErrorEnum_ImageError_FLASH_ERROR;
  static const ImageError LAYOUT_PROBLEM =
    ImageErrorEnum_ImageError_LAYOUT_PROBLEM;
  static const ImageError PROBLEM_READING_IMAGE_FILE =
    ImageErrorEnum_ImageError_PROBLEM_READING_IMAGE_FILE;
  static const ImageError ERROR_STORING_IMAGE =
    ImageErrorEnum_ImageError_ERROR_STORING_IMAGE;
  static const ImageError ASPECT_RATIO_NOT_ALLOWED =
    ImageErrorEnum_ImageError_ASPECT_RATIO_NOT_ALLOWED;
  static const ImageError FLASH_HAS_NETWORK_OBJECTS =
    ImageErrorEnum_ImageError_FLASH_HAS_NETWORK_OBJECTS;
  static const ImageError FLASH_HAS_NETWORK_METHODS =
    ImageErrorEnum_ImageError_FLASH_HAS_NETWORK_METHODS;
  static const ImageError FLASH_HAS_URL =
    ImageErrorEnum_ImageError_FLASH_HAS_URL;
  static const ImageError FLASH_HAS_MOUSE_TRACKING =
    ImageErrorEnum_ImageError_FLASH_HAS_MOUSE_TRACKING;
  static const ImageError FLASH_HAS_RANDOM_NUM =
    ImageErrorEnum_ImageError_FLASH_HAS_RANDOM_NUM;
  static const ImageError FLASH_SELF_TARGETS =
    ImageErrorEnum_ImageError_FLASH_SELF_TARGETS;
  static const ImageError FLASH_BAD_GETURL_TARGET =
    ImageErrorEnum_ImageError_FLASH_BAD_GETURL_TARGET;
  static const ImageError FLASH_VERSION_NOT_SUPPORTED =
    ImageErrorEnum_ImageError_FLASH_VERSION_NOT_SUPPORTED;
  static const ImageError FLASH_WITHOUT_HARD_CODED_CLICK_URL =
    ImageErrorEnum_ImageError_FLASH_WITHOUT_HARD_CODED_CLICK_URL;
  static const ImageError INVALID_FLASH_FILE =
    ImageErrorEnum_ImageError_INVALID_FLASH_FILE;
  static const ImageError FAILED_TO_FIX_CLICK_TAG_IN_FLASH =
    ImageErrorEnum_ImageError_FAILED_TO_FIX_CLICK_TAG_IN_FLASH;
  static const ImageError FLASH_ACCESSES_NETWORK_RESOURCES =
    ImageErrorEnum_ImageError_FLASH_ACCESSES_NETWORK_RESOURCES;
  static const ImageError FLASH_EXTERNAL_JS_CALL =
    ImageErrorEnum_ImageError_FLASH_EXTERNAL_JS_CALL;
  static const ImageError FLASH_EXTERNAL_FS_CALL =
    ImageErrorEnum_ImageError_FLASH_EXTERNAL_FS_CALL;
  static const ImageError FILE_TOO_LARGE =
    ImageErrorEnum_ImageError_FILE_TOO_LARGE;
  static const ImageError IMAGE_DATA_TOO_LARGE =
    ImageErrorEnum_ImageError_IMAGE_DATA_TOO_LARGE;
  static const ImageError IMAGE_PROCESSING_ERROR =
    ImageErrorEnum_ImageError_IMAGE_PROCESSING_ERROR;
  static const ImageError IMAGE_TOO_SMALL =
    ImageErrorEnum_ImageError_IMAGE_TOO_SMALL;
  static const ImageError INVALID_INPUT =
    ImageErrorEnum_ImageError_INVALID_INPUT;
  static const ImageError PROBLEM_READING_FILE =
    ImageErrorEnum_ImageError_PROBLEM_READING_FILE;
  static inline bool ImageError_IsValid(int value) {
    return ImageErrorEnum_ImageError_IsValid(value);
  }
  static const ImageError ImageError_MIN =
    ImageErrorEnum_ImageError_ImageError_MIN;
  static const ImageError ImageError_MAX =
    ImageErrorEnum_ImageError_ImageError_MAX;
  static const int ImageError_ARRAYSIZE =
    ImageErrorEnum_ImageError_ImageError_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ImageError_descriptor() {
    return ImageErrorEnum_ImageError_descriptor();
  }
  static inline const ::std::string& ImageError_Name(ImageError value) {
    return ImageErrorEnum_ImageError_Name(value);
  }
  static inline bool ImageError_Parse(const ::std::string& name,
      ImageError* value) {
    return ImageErrorEnum_ImageError_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.errors.ImageErrorEnum)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2ferrors_2fimage_5ferror_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ImageErrorEnum

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace errors
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::ads::googleads::v0::errors::ImageErrorEnum_ImageError> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::ads::googleads::v0::errors::ImageErrorEnum_ImageError>() {
  return ::google::ads::googleads::v0::errors::ImageErrorEnum_ImageError_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2ferrors_2fimage_5ferror_2eproto
