// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/services/google_ads_service.proto

#ifndef PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fservices_2fgoogle_5fads_5fservice_2eproto
#define PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fservices_2fgoogle_5fads_5fservice_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/ads/googleads/v0/common/metrics.pb.h"
#include "google/ads/googleads/v0/enums/ad_network_type.pb.h"
#include "google/ads/googleads/v0/enums/day_of_week.pb.h"
#include "google/ads/googleads/v0/enums/device.pb.h"
#include "google/ads/googleads/v0/enums/slot.pb.h"
#include "google/ads/googleads/v0/resources/ad_group.pb.h"
#include "google/ads/googleads/v0/resources/ad_group_ad.pb.h"
#include "google/ads/googleads/v0/resources/ad_group_bid_modifier.pb.h"
#include "google/ads/googleads/v0/resources/ad_group_criterion.pb.h"
#include "google/ads/googleads/v0/resources/bidding_strategy.pb.h"
#include "google/ads/googleads/v0/resources/campaign.pb.h"
#include "google/ads/googleads/v0/resources/campaign_budget.pb.h"
#include "google/ads/googleads/v0/resources/campaign_criterion.pb.h"
#include "google/ads/googleads/v0/resources/customer.pb.h"
#include "google/ads/googleads/v0/resources/geo_target_constant.pb.h"
#include "google/ads/googleads/v0/resources/keyword_view.pb.h"
#include "google/ads/googleads/v0/resources/recommendation.pb.h"
#include "google/api/annotations.pb.h"
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fgoogle_5fads_5fservice_2eproto 

namespace protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fgoogle_5fads_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fgoogle_5fads_5fservice_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace services {
class GoogleAdsRow;
class GoogleAdsRowDefaultTypeInternal;
extern GoogleAdsRowDefaultTypeInternal _GoogleAdsRow_default_instance_;
class SearchGoogleAdsRequest;
class SearchGoogleAdsRequestDefaultTypeInternal;
extern SearchGoogleAdsRequestDefaultTypeInternal _SearchGoogleAdsRequest_default_instance_;
class SearchGoogleAdsResponse;
class SearchGoogleAdsResponseDefaultTypeInternal;
extern SearchGoogleAdsResponseDefaultTypeInternal _SearchGoogleAdsResponse_default_instance_;
}  // namespace services
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::ads::googleads::v0::services::GoogleAdsRow* Arena::CreateMaybeMessage<::google::ads::googleads::v0::services::GoogleAdsRow>(Arena*);
template<> ::google::ads::googleads::v0::services::SearchGoogleAdsRequest* Arena::CreateMaybeMessage<::google::ads::googleads::v0::services::SearchGoogleAdsRequest>(Arena*);
template<> ::google::ads::googleads::v0::services::SearchGoogleAdsResponse* Arena::CreateMaybeMessage<::google::ads::googleads::v0::services::SearchGoogleAdsResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace services {

// ===================================================================

class SearchGoogleAdsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.services.SearchGoogleAdsRequest) */ {
 public:
  SearchGoogleAdsRequest();
  virtual ~SearchGoogleAdsRequest();

  SearchGoogleAdsRequest(const SearchGoogleAdsRequest& from);

  inline SearchGoogleAdsRequest& operator=(const SearchGoogleAdsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchGoogleAdsRequest(SearchGoogleAdsRequest&& from) noexcept
    : SearchGoogleAdsRequest() {
    *this = ::std::move(from);
  }

  inline SearchGoogleAdsRequest& operator=(SearchGoogleAdsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchGoogleAdsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchGoogleAdsRequest* internal_default_instance() {
    return reinterpret_cast<const SearchGoogleAdsRequest*>(
               &_SearchGoogleAdsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SearchGoogleAdsRequest* other);
  friend void swap(SearchGoogleAdsRequest& a, SearchGoogleAdsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchGoogleAdsRequest* New() const final {
    return CreateMaybeMessage<SearchGoogleAdsRequest>(NULL);
  }

  SearchGoogleAdsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SearchGoogleAdsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SearchGoogleAdsRequest& from);
  void MergeFrom(const SearchGoogleAdsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SearchGoogleAdsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // string query = 2;
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 4;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 4;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.services.SearchGoogleAdsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fgoogle_5fads_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchGoogleAdsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.services.SearchGoogleAdsResponse) */ {
 public:
  SearchGoogleAdsResponse();
  virtual ~SearchGoogleAdsResponse();

  SearchGoogleAdsResponse(const SearchGoogleAdsResponse& from);

  inline SearchGoogleAdsResponse& operator=(const SearchGoogleAdsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchGoogleAdsResponse(SearchGoogleAdsResponse&& from) noexcept
    : SearchGoogleAdsResponse() {
    *this = ::std::move(from);
  }

  inline SearchGoogleAdsResponse& operator=(SearchGoogleAdsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchGoogleAdsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchGoogleAdsResponse* internal_default_instance() {
    return reinterpret_cast<const SearchGoogleAdsResponse*>(
               &_SearchGoogleAdsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SearchGoogleAdsResponse* other);
  friend void swap(SearchGoogleAdsResponse& a, SearchGoogleAdsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchGoogleAdsResponse* New() const final {
    return CreateMaybeMessage<SearchGoogleAdsResponse>(NULL);
  }

  SearchGoogleAdsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SearchGoogleAdsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SearchGoogleAdsResponse& from);
  void MergeFrom(const SearchGoogleAdsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SearchGoogleAdsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.ads.googleads.v0.services.GoogleAdsRow results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  ::google::ads::googleads::v0::services::GoogleAdsRow* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::GoogleAdsRow >*
      mutable_results();
  const ::google::ads::googleads::v0::services::GoogleAdsRow& results(int index) const;
  ::google::ads::googleads::v0::services::GoogleAdsRow* add_results();
  const ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::GoogleAdsRow >&
      results() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // .google.protobuf.FieldMask field_mask = 5;
  bool has_field_mask() const;
  void clear_field_mask();
  static const int kFieldMaskFieldNumber = 5;
  private:
  const ::google::protobuf::FieldMask& _internal_field_mask() const;
  public:
  const ::google::protobuf::FieldMask& field_mask() const;
  ::google::protobuf::FieldMask* release_field_mask();
  ::google::protobuf::FieldMask* mutable_field_mask();
  void set_allocated_field_mask(::google::protobuf::FieldMask* field_mask);

  // int64 total_results_count = 3;
  void clear_total_results_count();
  static const int kTotalResultsCountFieldNumber = 3;
  ::google::protobuf::int64 total_results_count() const;
  void set_total_results_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.services.SearchGoogleAdsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::GoogleAdsRow > results_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  ::google::protobuf::FieldMask* field_mask_;
  ::google::protobuf::int64 total_results_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fgoogle_5fads_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GoogleAdsRow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.services.GoogleAdsRow) */ {
 public:
  GoogleAdsRow();
  virtual ~GoogleAdsRow();

  GoogleAdsRow(const GoogleAdsRow& from);

  inline GoogleAdsRow& operator=(const GoogleAdsRow& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GoogleAdsRow(GoogleAdsRow&& from) noexcept
    : GoogleAdsRow() {
    *this = ::std::move(from);
  }

  inline GoogleAdsRow& operator=(GoogleAdsRow&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GoogleAdsRow& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GoogleAdsRow* internal_default_instance() {
    return reinterpret_cast<const GoogleAdsRow*>(
               &_GoogleAdsRow_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GoogleAdsRow* other);
  friend void swap(GoogleAdsRow& a, GoogleAdsRow& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GoogleAdsRow* New() const final {
    return CreateMaybeMessage<GoogleAdsRow>(NULL);
  }

  GoogleAdsRow* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GoogleAdsRow>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GoogleAdsRow& from);
  void MergeFrom(const GoogleAdsRow& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoogleAdsRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.ads.googleads.v0.resources.Customer customer = 1;
  bool has_customer() const;
  void clear_customer();
  static const int kCustomerFieldNumber = 1;
  private:
  const ::google::ads::googleads::v0::resources::Customer& _internal_customer() const;
  public:
  const ::google::ads::googleads::v0::resources::Customer& customer() const;
  ::google::ads::googleads::v0::resources::Customer* release_customer();
  ::google::ads::googleads::v0::resources::Customer* mutable_customer();
  void set_allocated_customer(::google::ads::googleads::v0::resources::Customer* customer);

  // .google.ads.googleads.v0.resources.Campaign campaign = 2;
  bool has_campaign() const;
  void clear_campaign();
  static const int kCampaignFieldNumber = 2;
  private:
  const ::google::ads::googleads::v0::resources::Campaign& _internal_campaign() const;
  public:
  const ::google::ads::googleads::v0::resources::Campaign& campaign() const;
  ::google::ads::googleads::v0::resources::Campaign* release_campaign();
  ::google::ads::googleads::v0::resources::Campaign* mutable_campaign();
  void set_allocated_campaign(::google::ads::googleads::v0::resources::Campaign* campaign);

  // .google.ads.googleads.v0.resources.AdGroup ad_group = 3;
  bool has_ad_group() const;
  void clear_ad_group();
  static const int kAdGroupFieldNumber = 3;
  private:
  const ::google::ads::googleads::v0::resources::AdGroup& _internal_ad_group() const;
  public:
  const ::google::ads::googleads::v0::resources::AdGroup& ad_group() const;
  ::google::ads::googleads::v0::resources::AdGroup* release_ad_group();
  ::google::ads::googleads::v0::resources::AdGroup* mutable_ad_group();
  void set_allocated_ad_group(::google::ads::googleads::v0::resources::AdGroup* ad_group);

  // .google.ads.googleads.v0.common.Metrics metrics = 4;
  bool has_metrics() const;
  void clear_metrics();
  static const int kMetricsFieldNumber = 4;
  private:
  const ::google::ads::googleads::v0::common::Metrics& _internal_metrics() const;
  public:
  const ::google::ads::googleads::v0::common::Metrics& metrics() const;
  ::google::ads::googleads::v0::common::Metrics* release_metrics();
  ::google::ads::googleads::v0::common::Metrics* mutable_metrics();
  void set_allocated_metrics(::google::ads::googleads::v0::common::Metrics* metrics);

  // .google.protobuf.StringValue date = 6;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 6;
  private:
  const ::google::protobuf::StringValue& _internal_date() const;
  public:
  const ::google::protobuf::StringValue& date() const;
  ::google::protobuf::StringValue* release_date();
  ::google::protobuf::StringValue* mutable_date();
  void set_allocated_date(::google::protobuf::StringValue* date);

  // .google.protobuf.Int32Value hour = 9;
  bool has_hour() const;
  void clear_hour();
  static const int kHourFieldNumber = 9;
  private:
  const ::google::protobuf::Int32Value& _internal_hour() const;
  public:
  const ::google::protobuf::Int32Value& hour() const;
  ::google::protobuf::Int32Value* release_hour();
  ::google::protobuf::Int32Value* mutable_hour();
  void set_allocated_hour(::google::protobuf::Int32Value* hour);

  // .google.protobuf.StringValue month = 10;
  bool has_month() const;
  void clear_month();
  static const int kMonthFieldNumber = 10;
  private:
  const ::google::protobuf::StringValue& _internal_month() const;
  public:
  const ::google::protobuf::StringValue& month() const;
  ::google::protobuf::StringValue* release_month();
  ::google::protobuf::StringValue* mutable_month();
  void set_allocated_month(::google::protobuf::StringValue* month);

  // .google.protobuf.StringValue quarter = 12;
  bool has_quarter() const;
  void clear_quarter();
  static const int kQuarterFieldNumber = 12;
  private:
  const ::google::protobuf::StringValue& _internal_quarter() const;
  public:
  const ::google::protobuf::StringValue& quarter() const;
  ::google::protobuf::StringValue* release_quarter();
  ::google::protobuf::StringValue* mutable_quarter();
  void set_allocated_quarter(::google::protobuf::StringValue* quarter);

  // .google.protobuf.StringValue week = 14;
  bool has_week() const;
  void clear_week();
  static const int kWeekFieldNumber = 14;
  private:
  const ::google::protobuf::StringValue& _internal_week() const;
  public:
  const ::google::protobuf::StringValue& week() const;
  ::google::protobuf::StringValue* release_week();
  ::google::protobuf::StringValue* mutable_week();
  void set_allocated_week(::google::protobuf::StringValue* week);

  // .google.protobuf.Int32Value year = 15;
  bool has_year() const;
  void clear_year();
  static const int kYearFieldNumber = 15;
  private:
  const ::google::protobuf::Int32Value& _internal_year() const;
  public:
  const ::google::protobuf::Int32Value& year() const;
  ::google::protobuf::Int32Value* release_year();
  ::google::protobuf::Int32Value* mutable_year();
  void set_allocated_year(::google::protobuf::Int32Value* year);

  // .google.ads.googleads.v0.resources.AdGroupAd ad_group_ad = 16;
  bool has_ad_group_ad() const;
  void clear_ad_group_ad();
  static const int kAdGroupAdFieldNumber = 16;
  private:
  const ::google::ads::googleads::v0::resources::AdGroupAd& _internal_ad_group_ad() const;
  public:
  const ::google::ads::googleads::v0::resources::AdGroupAd& ad_group_ad() const;
  ::google::ads::googleads::v0::resources::AdGroupAd* release_ad_group_ad();
  ::google::ads::googleads::v0::resources::AdGroupAd* mutable_ad_group_ad();
  void set_allocated_ad_group_ad(::google::ads::googleads::v0::resources::AdGroupAd* ad_group_ad);

  // .google.ads.googleads.v0.resources.AdGroupCriterion ad_group_criterion = 17;
  bool has_ad_group_criterion() const;
  void clear_ad_group_criterion();
  static const int kAdGroupCriterionFieldNumber = 17;
  private:
  const ::google::ads::googleads::v0::resources::AdGroupCriterion& _internal_ad_group_criterion() const;
  public:
  const ::google::ads::googleads::v0::resources::AdGroupCriterion& ad_group_criterion() const;
  ::google::ads::googleads::v0::resources::AdGroupCriterion* release_ad_group_criterion();
  ::google::ads::googleads::v0::resources::AdGroupCriterion* mutable_ad_group_criterion();
  void set_allocated_ad_group_criterion(::google::ads::googleads::v0::resources::AdGroupCriterion* ad_group_criterion);

  // .google.ads.googleads.v0.resources.BiddingStrategy bidding_strategy = 18;
  bool has_bidding_strategy() const;
  void clear_bidding_strategy();
  static const int kBiddingStrategyFieldNumber = 18;
  private:
  const ::google::ads::googleads::v0::resources::BiddingStrategy& _internal_bidding_strategy() const;
  public:
  const ::google::ads::googleads::v0::resources::BiddingStrategy& bidding_strategy() const;
  ::google::ads::googleads::v0::resources::BiddingStrategy* release_bidding_strategy();
  ::google::ads::googleads::v0::resources::BiddingStrategy* mutable_bidding_strategy();
  void set_allocated_bidding_strategy(::google::ads::googleads::v0::resources::BiddingStrategy* bidding_strategy);

  // .google.ads.googleads.v0.resources.CampaignBudget campaign_budget = 19;
  bool has_campaign_budget() const;
  void clear_campaign_budget();
  static const int kCampaignBudgetFieldNumber = 19;
  private:
  const ::google::ads::googleads::v0::resources::CampaignBudget& _internal_campaign_budget() const;
  public:
  const ::google::ads::googleads::v0::resources::CampaignBudget& campaign_budget() const;
  ::google::ads::googleads::v0::resources::CampaignBudget* release_campaign_budget();
  ::google::ads::googleads::v0::resources::CampaignBudget* mutable_campaign_budget();
  void set_allocated_campaign_budget(::google::ads::googleads::v0::resources::CampaignBudget* campaign_budget);

  // .google.ads.googleads.v0.resources.CampaignCriterion campaign_criterion = 20;
  bool has_campaign_criterion() const;
  void clear_campaign_criterion();
  static const int kCampaignCriterionFieldNumber = 20;
  private:
  const ::google::ads::googleads::v0::resources::CampaignCriterion& _internal_campaign_criterion() const;
  public:
  const ::google::ads::googleads::v0::resources::CampaignCriterion& campaign_criterion() const;
  ::google::ads::googleads::v0::resources::CampaignCriterion* release_campaign_criterion();
  ::google::ads::googleads::v0::resources::CampaignCriterion* mutable_campaign_criterion();
  void set_allocated_campaign_criterion(::google::ads::googleads::v0::resources::CampaignCriterion* campaign_criterion);

  // .google.ads.googleads.v0.resources.KeywordView keyword_view = 21;
  bool has_keyword_view() const;
  void clear_keyword_view();
  static const int kKeywordViewFieldNumber = 21;
  private:
  const ::google::ads::googleads::v0::resources::KeywordView& _internal_keyword_view() const;
  public:
  const ::google::ads::googleads::v0::resources::KeywordView& keyword_view() const;
  ::google::ads::googleads::v0::resources::KeywordView* release_keyword_view();
  ::google::ads::googleads::v0::resources::KeywordView* mutable_keyword_view();
  void set_allocated_keyword_view(::google::ads::googleads::v0::resources::KeywordView* keyword_view);

  // .google.ads.googleads.v0.resources.Recommendation recommendation = 22;
  bool has_recommendation() const;
  void clear_recommendation();
  static const int kRecommendationFieldNumber = 22;
  private:
  const ::google::ads::googleads::v0::resources::Recommendation& _internal_recommendation() const;
  public:
  const ::google::ads::googleads::v0::resources::Recommendation& recommendation() const;
  ::google::ads::googleads::v0::resources::Recommendation* release_recommendation();
  ::google::ads::googleads::v0::resources::Recommendation* mutable_recommendation();
  void set_allocated_recommendation(::google::ads::googleads::v0::resources::Recommendation* recommendation);

  // .google.ads.googleads.v0.resources.GeoTargetConstant geo_target_constant = 23;
  bool has_geo_target_constant() const;
  void clear_geo_target_constant();
  static const int kGeoTargetConstantFieldNumber = 23;
  private:
  const ::google::ads::googleads::v0::resources::GeoTargetConstant& _internal_geo_target_constant() const;
  public:
  const ::google::ads::googleads::v0::resources::GeoTargetConstant& geo_target_constant() const;
  ::google::ads::googleads::v0::resources::GeoTargetConstant* release_geo_target_constant();
  ::google::ads::googleads::v0::resources::GeoTargetConstant* mutable_geo_target_constant();
  void set_allocated_geo_target_constant(::google::ads::googleads::v0::resources::GeoTargetConstant* geo_target_constant);

  // .google.ads.googleads.v0.resources.AdGroupBidModifier ad_group_bid_modifier = 24;
  bool has_ad_group_bid_modifier() const;
  void clear_ad_group_bid_modifier();
  static const int kAdGroupBidModifierFieldNumber = 24;
  private:
  const ::google::ads::googleads::v0::resources::AdGroupBidModifier& _internal_ad_group_bid_modifier() const;
  public:
  const ::google::ads::googleads::v0::resources::AdGroupBidModifier& ad_group_bid_modifier() const;
  ::google::ads::googleads::v0::resources::AdGroupBidModifier* release_ad_group_bid_modifier();
  ::google::ads::googleads::v0::resources::AdGroupBidModifier* mutable_ad_group_bid_modifier();
  void set_allocated_ad_group_bid_modifier(::google::ads::googleads::v0::resources::AdGroupBidModifier* ad_group_bid_modifier);

  // .google.ads.googleads.v0.enums.AdNetworkTypeEnum.AdNetworkType ad_network_type = 5;
  void clear_ad_network_type();
  static const int kAdNetworkTypeFieldNumber = 5;
  ::google::ads::googleads::v0::enums::AdNetworkTypeEnum_AdNetworkType ad_network_type() const;
  void set_ad_network_type(::google::ads::googleads::v0::enums::AdNetworkTypeEnum_AdNetworkType value);

  // .google.ads.googleads.v0.enums.DayOfWeekEnum.DayOfWeek day_of_week = 7;
  void clear_day_of_week();
  static const int kDayOfWeekFieldNumber = 7;
  ::google::ads::googleads::v0::enums::DayOfWeekEnum_DayOfWeek day_of_week() const;
  void set_day_of_week(::google::ads::googleads::v0::enums::DayOfWeekEnum_DayOfWeek value);

  // .google.ads.googleads.v0.enums.DeviceEnum.Device device = 8;
  void clear_device();
  static const int kDeviceFieldNumber = 8;
  ::google::ads::googleads::v0::enums::DeviceEnum_Device device() const;
  void set_device(::google::ads::googleads::v0::enums::DeviceEnum_Device value);

  // .google.ads.googleads.v0.enums.SlotEnum.Slot slot = 13;
  void clear_slot();
  static const int kSlotFieldNumber = 13;
  ::google::ads::googleads::v0::enums::SlotEnum_Slot slot() const;
  void set_slot(::google::ads::googleads::v0::enums::SlotEnum_Slot value);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.services.GoogleAdsRow)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::ads::googleads::v0::resources::Customer* customer_;
  ::google::ads::googleads::v0::resources::Campaign* campaign_;
  ::google::ads::googleads::v0::resources::AdGroup* ad_group_;
  ::google::ads::googleads::v0::common::Metrics* metrics_;
  ::google::protobuf::StringValue* date_;
  ::google::protobuf::Int32Value* hour_;
  ::google::protobuf::StringValue* month_;
  ::google::protobuf::StringValue* quarter_;
  ::google::protobuf::StringValue* week_;
  ::google::protobuf::Int32Value* year_;
  ::google::ads::googleads::v0::resources::AdGroupAd* ad_group_ad_;
  ::google::ads::googleads::v0::resources::AdGroupCriterion* ad_group_criterion_;
  ::google::ads::googleads::v0::resources::BiddingStrategy* bidding_strategy_;
  ::google::ads::googleads::v0::resources::CampaignBudget* campaign_budget_;
  ::google::ads::googleads::v0::resources::CampaignCriterion* campaign_criterion_;
  ::google::ads::googleads::v0::resources::KeywordView* keyword_view_;
  ::google::ads::googleads::v0::resources::Recommendation* recommendation_;
  ::google::ads::googleads::v0::resources::GeoTargetConstant* geo_target_constant_;
  ::google::ads::googleads::v0::resources::AdGroupBidModifier* ad_group_bid_modifier_;
  int ad_network_type_;
  int day_of_week_;
  int device_;
  int slot_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fgoogle_5fads_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SearchGoogleAdsRequest

// string customer_id = 1;
inline void SearchGoogleAdsRequest::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchGoogleAdsRequest::customer_id() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.SearchGoogleAdsRequest.customer_id)
  return customer_id_.GetNoArena();
}
inline void SearchGoogleAdsRequest::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.SearchGoogleAdsRequest.customer_id)
}
#if LANG_CXX11
inline void SearchGoogleAdsRequest::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.ads.googleads.v0.services.SearchGoogleAdsRequest.customer_id)
}
#endif
inline void SearchGoogleAdsRequest::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.ads.googleads.v0.services.SearchGoogleAdsRequest.customer_id)
}
inline void SearchGoogleAdsRequest::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.ads.googleads.v0.services.SearchGoogleAdsRequest.customer_id)
}
inline ::std::string* SearchGoogleAdsRequest::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.SearchGoogleAdsRequest.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchGoogleAdsRequest::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.SearchGoogleAdsRequest.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchGoogleAdsRequest::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != NULL) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.SearchGoogleAdsRequest.customer_id)
}

// string query = 2;
inline void SearchGoogleAdsRequest::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchGoogleAdsRequest::query() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.SearchGoogleAdsRequest.query)
  return query_.GetNoArena();
}
inline void SearchGoogleAdsRequest::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.SearchGoogleAdsRequest.query)
}
#if LANG_CXX11
inline void SearchGoogleAdsRequest::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.ads.googleads.v0.services.SearchGoogleAdsRequest.query)
}
#endif
inline void SearchGoogleAdsRequest::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.ads.googleads.v0.services.SearchGoogleAdsRequest.query)
}
inline void SearchGoogleAdsRequest::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.ads.googleads.v0.services.SearchGoogleAdsRequest.query)
}
inline ::std::string* SearchGoogleAdsRequest::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.SearchGoogleAdsRequest.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchGoogleAdsRequest::release_query() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.SearchGoogleAdsRequest.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchGoogleAdsRequest::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.SearchGoogleAdsRequest.query)
}

// string page_token = 3;
inline void SearchGoogleAdsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchGoogleAdsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.SearchGoogleAdsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void SearchGoogleAdsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.SearchGoogleAdsRequest.page_token)
}
#if LANG_CXX11
inline void SearchGoogleAdsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.ads.googleads.v0.services.SearchGoogleAdsRequest.page_token)
}
#endif
inline void SearchGoogleAdsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.ads.googleads.v0.services.SearchGoogleAdsRequest.page_token)
}
inline void SearchGoogleAdsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.ads.googleads.v0.services.SearchGoogleAdsRequest.page_token)
}
inline ::std::string* SearchGoogleAdsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.SearchGoogleAdsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchGoogleAdsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.SearchGoogleAdsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchGoogleAdsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.SearchGoogleAdsRequest.page_token)
}

// int32 page_size = 4;
inline void SearchGoogleAdsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 SearchGoogleAdsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.SearchGoogleAdsRequest.page_size)
  return page_size_;
}
inline void SearchGoogleAdsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.SearchGoogleAdsRequest.page_size)
}

// -------------------------------------------------------------------

// SearchGoogleAdsResponse

// repeated .google.ads.googleads.v0.services.GoogleAdsRow results = 1;
inline int SearchGoogleAdsResponse::results_size() const {
  return results_.size();
}
inline void SearchGoogleAdsResponse::clear_results() {
  results_.Clear();
}
inline ::google::ads::googleads::v0::services::GoogleAdsRow* SearchGoogleAdsResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.SearchGoogleAdsResponse.results)
  return results_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::GoogleAdsRow >*
SearchGoogleAdsResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:google.ads.googleads.v0.services.SearchGoogleAdsResponse.results)
  return &results_;
}
inline const ::google::ads::googleads::v0::services::GoogleAdsRow& SearchGoogleAdsResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.SearchGoogleAdsResponse.results)
  return results_.Get(index);
}
inline ::google::ads::googleads::v0::services::GoogleAdsRow* SearchGoogleAdsResponse::add_results() {
  // @@protoc_insertion_point(field_add:google.ads.googleads.v0.services.SearchGoogleAdsResponse.results)
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::GoogleAdsRow >&
SearchGoogleAdsResponse::results() const {
  // @@protoc_insertion_point(field_list:google.ads.googleads.v0.services.SearchGoogleAdsResponse.results)
  return results_;
}

// string next_page_token = 2;
inline void SearchGoogleAdsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchGoogleAdsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.SearchGoogleAdsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void SearchGoogleAdsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.SearchGoogleAdsResponse.next_page_token)
}
#if LANG_CXX11
inline void SearchGoogleAdsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.ads.googleads.v0.services.SearchGoogleAdsResponse.next_page_token)
}
#endif
inline void SearchGoogleAdsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.ads.googleads.v0.services.SearchGoogleAdsResponse.next_page_token)
}
inline void SearchGoogleAdsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.ads.googleads.v0.services.SearchGoogleAdsResponse.next_page_token)
}
inline ::std::string* SearchGoogleAdsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.SearchGoogleAdsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchGoogleAdsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.SearchGoogleAdsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchGoogleAdsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.SearchGoogleAdsResponse.next_page_token)
}

// int64 total_results_count = 3;
inline void SearchGoogleAdsResponse::clear_total_results_count() {
  total_results_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SearchGoogleAdsResponse::total_results_count() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.SearchGoogleAdsResponse.total_results_count)
  return total_results_count_;
}
inline void SearchGoogleAdsResponse::set_total_results_count(::google::protobuf::int64 value) {
  
  total_results_count_ = value;
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.SearchGoogleAdsResponse.total_results_count)
}

// .google.protobuf.FieldMask field_mask = 5;
inline bool SearchGoogleAdsResponse::has_field_mask() const {
  return this != internal_default_instance() && field_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& SearchGoogleAdsResponse::_internal_field_mask() const {
  return *field_mask_;
}
inline const ::google::protobuf::FieldMask& SearchGoogleAdsResponse::field_mask() const {
  const ::google::protobuf::FieldMask* p = field_mask_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.SearchGoogleAdsResponse.field_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* SearchGoogleAdsResponse::release_field_mask() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.SearchGoogleAdsResponse.field_mask)
  
  ::google::protobuf::FieldMask* temp = field_mask_;
  field_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* SearchGoogleAdsResponse::mutable_field_mask() {
  
  if (field_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    field_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.SearchGoogleAdsResponse.field_mask)
  return field_mask_;
}
inline void SearchGoogleAdsResponse::set_allocated_field_mask(::google::protobuf::FieldMask* field_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(field_mask_);
  }
  if (field_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      field_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, field_mask, submessage_arena);
    }
    
  } else {
    
  }
  field_mask_ = field_mask;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.SearchGoogleAdsResponse.field_mask)
}

// -------------------------------------------------------------------

// GoogleAdsRow

// .google.ads.googleads.v0.resources.AdGroup ad_group = 3;
inline bool GoogleAdsRow::has_ad_group() const {
  return this != internal_default_instance() && ad_group_ != NULL;
}
inline const ::google::ads::googleads::v0::resources::AdGroup& GoogleAdsRow::_internal_ad_group() const {
  return *ad_group_;
}
inline const ::google::ads::googleads::v0::resources::AdGroup& GoogleAdsRow::ad_group() const {
  const ::google::ads::googleads::v0::resources::AdGroup* p = ad_group_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.ad_group)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::resources::AdGroup*>(
      &::google::ads::googleads::v0::resources::_AdGroup_default_instance_);
}
inline ::google::ads::googleads::v0::resources::AdGroup* GoogleAdsRow::release_ad_group() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.ad_group)
  
  ::google::ads::googleads::v0::resources::AdGroup* temp = ad_group_;
  ad_group_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::resources::AdGroup* GoogleAdsRow::mutable_ad_group() {
  
  if (ad_group_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::resources::AdGroup>(GetArenaNoVirtual());
    ad_group_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.ad_group)
  return ad_group_;
}
inline void GoogleAdsRow::set_allocated_ad_group(::google::ads::googleads::v0::resources::AdGroup* ad_group) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ad_group_);
  }
  if (ad_group) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ad_group = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ad_group, submessage_arena);
    }
    
  } else {
    
  }
  ad_group_ = ad_group;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.ad_group)
}

// .google.ads.googleads.v0.resources.AdGroupAd ad_group_ad = 16;
inline bool GoogleAdsRow::has_ad_group_ad() const {
  return this != internal_default_instance() && ad_group_ad_ != NULL;
}
inline const ::google::ads::googleads::v0::resources::AdGroupAd& GoogleAdsRow::_internal_ad_group_ad() const {
  return *ad_group_ad_;
}
inline const ::google::ads::googleads::v0::resources::AdGroupAd& GoogleAdsRow::ad_group_ad() const {
  const ::google::ads::googleads::v0::resources::AdGroupAd* p = ad_group_ad_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.ad_group_ad)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::resources::AdGroupAd*>(
      &::google::ads::googleads::v0::resources::_AdGroupAd_default_instance_);
}
inline ::google::ads::googleads::v0::resources::AdGroupAd* GoogleAdsRow::release_ad_group_ad() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.ad_group_ad)
  
  ::google::ads::googleads::v0::resources::AdGroupAd* temp = ad_group_ad_;
  ad_group_ad_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::resources::AdGroupAd* GoogleAdsRow::mutable_ad_group_ad() {
  
  if (ad_group_ad_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::resources::AdGroupAd>(GetArenaNoVirtual());
    ad_group_ad_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.ad_group_ad)
  return ad_group_ad_;
}
inline void GoogleAdsRow::set_allocated_ad_group_ad(::google::ads::googleads::v0::resources::AdGroupAd* ad_group_ad) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ad_group_ad_);
  }
  if (ad_group_ad) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ad_group_ad = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ad_group_ad, submessage_arena);
    }
    
  } else {
    
  }
  ad_group_ad_ = ad_group_ad;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.ad_group_ad)
}

// .google.ads.googleads.v0.resources.AdGroupBidModifier ad_group_bid_modifier = 24;
inline bool GoogleAdsRow::has_ad_group_bid_modifier() const {
  return this != internal_default_instance() && ad_group_bid_modifier_ != NULL;
}
inline const ::google::ads::googleads::v0::resources::AdGroupBidModifier& GoogleAdsRow::_internal_ad_group_bid_modifier() const {
  return *ad_group_bid_modifier_;
}
inline const ::google::ads::googleads::v0::resources::AdGroupBidModifier& GoogleAdsRow::ad_group_bid_modifier() const {
  const ::google::ads::googleads::v0::resources::AdGroupBidModifier* p = ad_group_bid_modifier_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.ad_group_bid_modifier)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::resources::AdGroupBidModifier*>(
      &::google::ads::googleads::v0::resources::_AdGroupBidModifier_default_instance_);
}
inline ::google::ads::googleads::v0::resources::AdGroupBidModifier* GoogleAdsRow::release_ad_group_bid_modifier() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.ad_group_bid_modifier)
  
  ::google::ads::googleads::v0::resources::AdGroupBidModifier* temp = ad_group_bid_modifier_;
  ad_group_bid_modifier_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::resources::AdGroupBidModifier* GoogleAdsRow::mutable_ad_group_bid_modifier() {
  
  if (ad_group_bid_modifier_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::resources::AdGroupBidModifier>(GetArenaNoVirtual());
    ad_group_bid_modifier_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.ad_group_bid_modifier)
  return ad_group_bid_modifier_;
}
inline void GoogleAdsRow::set_allocated_ad_group_bid_modifier(::google::ads::googleads::v0::resources::AdGroupBidModifier* ad_group_bid_modifier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ad_group_bid_modifier_);
  }
  if (ad_group_bid_modifier) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ad_group_bid_modifier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ad_group_bid_modifier, submessage_arena);
    }
    
  } else {
    
  }
  ad_group_bid_modifier_ = ad_group_bid_modifier;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.ad_group_bid_modifier)
}

// .google.ads.googleads.v0.resources.AdGroupCriterion ad_group_criterion = 17;
inline bool GoogleAdsRow::has_ad_group_criterion() const {
  return this != internal_default_instance() && ad_group_criterion_ != NULL;
}
inline const ::google::ads::googleads::v0::resources::AdGroupCriterion& GoogleAdsRow::_internal_ad_group_criterion() const {
  return *ad_group_criterion_;
}
inline const ::google::ads::googleads::v0::resources::AdGroupCriterion& GoogleAdsRow::ad_group_criterion() const {
  const ::google::ads::googleads::v0::resources::AdGroupCriterion* p = ad_group_criterion_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.ad_group_criterion)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::resources::AdGroupCriterion*>(
      &::google::ads::googleads::v0::resources::_AdGroupCriterion_default_instance_);
}
inline ::google::ads::googleads::v0::resources::AdGroupCriterion* GoogleAdsRow::release_ad_group_criterion() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.ad_group_criterion)
  
  ::google::ads::googleads::v0::resources::AdGroupCriterion* temp = ad_group_criterion_;
  ad_group_criterion_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::resources::AdGroupCriterion* GoogleAdsRow::mutable_ad_group_criterion() {
  
  if (ad_group_criterion_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::resources::AdGroupCriterion>(GetArenaNoVirtual());
    ad_group_criterion_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.ad_group_criterion)
  return ad_group_criterion_;
}
inline void GoogleAdsRow::set_allocated_ad_group_criterion(::google::ads::googleads::v0::resources::AdGroupCriterion* ad_group_criterion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ad_group_criterion_);
  }
  if (ad_group_criterion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ad_group_criterion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ad_group_criterion, submessage_arena);
    }
    
  } else {
    
  }
  ad_group_criterion_ = ad_group_criterion;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.ad_group_criterion)
}

// .google.ads.googleads.v0.resources.BiddingStrategy bidding_strategy = 18;
inline bool GoogleAdsRow::has_bidding_strategy() const {
  return this != internal_default_instance() && bidding_strategy_ != NULL;
}
inline const ::google::ads::googleads::v0::resources::BiddingStrategy& GoogleAdsRow::_internal_bidding_strategy() const {
  return *bidding_strategy_;
}
inline const ::google::ads::googleads::v0::resources::BiddingStrategy& GoogleAdsRow::bidding_strategy() const {
  const ::google::ads::googleads::v0::resources::BiddingStrategy* p = bidding_strategy_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.bidding_strategy)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::resources::BiddingStrategy*>(
      &::google::ads::googleads::v0::resources::_BiddingStrategy_default_instance_);
}
inline ::google::ads::googleads::v0::resources::BiddingStrategy* GoogleAdsRow::release_bidding_strategy() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.bidding_strategy)
  
  ::google::ads::googleads::v0::resources::BiddingStrategy* temp = bidding_strategy_;
  bidding_strategy_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::resources::BiddingStrategy* GoogleAdsRow::mutable_bidding_strategy() {
  
  if (bidding_strategy_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::resources::BiddingStrategy>(GetArenaNoVirtual());
    bidding_strategy_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.bidding_strategy)
  return bidding_strategy_;
}
inline void GoogleAdsRow::set_allocated_bidding_strategy(::google::ads::googleads::v0::resources::BiddingStrategy* bidding_strategy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bidding_strategy_);
  }
  if (bidding_strategy) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bidding_strategy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bidding_strategy, submessage_arena);
    }
    
  } else {
    
  }
  bidding_strategy_ = bidding_strategy;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.bidding_strategy)
}

// .google.ads.googleads.v0.resources.CampaignBudget campaign_budget = 19;
inline bool GoogleAdsRow::has_campaign_budget() const {
  return this != internal_default_instance() && campaign_budget_ != NULL;
}
inline const ::google::ads::googleads::v0::resources::CampaignBudget& GoogleAdsRow::_internal_campaign_budget() const {
  return *campaign_budget_;
}
inline const ::google::ads::googleads::v0::resources::CampaignBudget& GoogleAdsRow::campaign_budget() const {
  const ::google::ads::googleads::v0::resources::CampaignBudget* p = campaign_budget_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.campaign_budget)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::resources::CampaignBudget*>(
      &::google::ads::googleads::v0::resources::_CampaignBudget_default_instance_);
}
inline ::google::ads::googleads::v0::resources::CampaignBudget* GoogleAdsRow::release_campaign_budget() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.campaign_budget)
  
  ::google::ads::googleads::v0::resources::CampaignBudget* temp = campaign_budget_;
  campaign_budget_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::resources::CampaignBudget* GoogleAdsRow::mutable_campaign_budget() {
  
  if (campaign_budget_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::resources::CampaignBudget>(GetArenaNoVirtual());
    campaign_budget_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.campaign_budget)
  return campaign_budget_;
}
inline void GoogleAdsRow::set_allocated_campaign_budget(::google::ads::googleads::v0::resources::CampaignBudget* campaign_budget) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(campaign_budget_);
  }
  if (campaign_budget) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      campaign_budget = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, campaign_budget, submessage_arena);
    }
    
  } else {
    
  }
  campaign_budget_ = campaign_budget;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.campaign_budget)
}

// .google.ads.googleads.v0.resources.Campaign campaign = 2;
inline bool GoogleAdsRow::has_campaign() const {
  return this != internal_default_instance() && campaign_ != NULL;
}
inline const ::google::ads::googleads::v0::resources::Campaign& GoogleAdsRow::_internal_campaign() const {
  return *campaign_;
}
inline const ::google::ads::googleads::v0::resources::Campaign& GoogleAdsRow::campaign() const {
  const ::google::ads::googleads::v0::resources::Campaign* p = campaign_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.campaign)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::resources::Campaign*>(
      &::google::ads::googleads::v0::resources::_Campaign_default_instance_);
}
inline ::google::ads::googleads::v0::resources::Campaign* GoogleAdsRow::release_campaign() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.campaign)
  
  ::google::ads::googleads::v0::resources::Campaign* temp = campaign_;
  campaign_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::resources::Campaign* GoogleAdsRow::mutable_campaign() {
  
  if (campaign_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::resources::Campaign>(GetArenaNoVirtual());
    campaign_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.campaign)
  return campaign_;
}
inline void GoogleAdsRow::set_allocated_campaign(::google::ads::googleads::v0::resources::Campaign* campaign) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(campaign_);
  }
  if (campaign) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      campaign = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, campaign, submessage_arena);
    }
    
  } else {
    
  }
  campaign_ = campaign;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.campaign)
}

// .google.ads.googleads.v0.resources.CampaignCriterion campaign_criterion = 20;
inline bool GoogleAdsRow::has_campaign_criterion() const {
  return this != internal_default_instance() && campaign_criterion_ != NULL;
}
inline const ::google::ads::googleads::v0::resources::CampaignCriterion& GoogleAdsRow::_internal_campaign_criterion() const {
  return *campaign_criterion_;
}
inline const ::google::ads::googleads::v0::resources::CampaignCriterion& GoogleAdsRow::campaign_criterion() const {
  const ::google::ads::googleads::v0::resources::CampaignCriterion* p = campaign_criterion_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.campaign_criterion)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::resources::CampaignCriterion*>(
      &::google::ads::googleads::v0::resources::_CampaignCriterion_default_instance_);
}
inline ::google::ads::googleads::v0::resources::CampaignCriterion* GoogleAdsRow::release_campaign_criterion() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.campaign_criterion)
  
  ::google::ads::googleads::v0::resources::CampaignCriterion* temp = campaign_criterion_;
  campaign_criterion_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::resources::CampaignCriterion* GoogleAdsRow::mutable_campaign_criterion() {
  
  if (campaign_criterion_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::resources::CampaignCriterion>(GetArenaNoVirtual());
    campaign_criterion_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.campaign_criterion)
  return campaign_criterion_;
}
inline void GoogleAdsRow::set_allocated_campaign_criterion(::google::ads::googleads::v0::resources::CampaignCriterion* campaign_criterion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(campaign_criterion_);
  }
  if (campaign_criterion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      campaign_criterion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, campaign_criterion, submessage_arena);
    }
    
  } else {
    
  }
  campaign_criterion_ = campaign_criterion;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.campaign_criterion)
}

// .google.ads.googleads.v0.resources.Customer customer = 1;
inline bool GoogleAdsRow::has_customer() const {
  return this != internal_default_instance() && customer_ != NULL;
}
inline const ::google::ads::googleads::v0::resources::Customer& GoogleAdsRow::_internal_customer() const {
  return *customer_;
}
inline const ::google::ads::googleads::v0::resources::Customer& GoogleAdsRow::customer() const {
  const ::google::ads::googleads::v0::resources::Customer* p = customer_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.customer)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::resources::Customer*>(
      &::google::ads::googleads::v0::resources::_Customer_default_instance_);
}
inline ::google::ads::googleads::v0::resources::Customer* GoogleAdsRow::release_customer() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.customer)
  
  ::google::ads::googleads::v0::resources::Customer* temp = customer_;
  customer_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::resources::Customer* GoogleAdsRow::mutable_customer() {
  
  if (customer_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::resources::Customer>(GetArenaNoVirtual());
    customer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.customer)
  return customer_;
}
inline void GoogleAdsRow::set_allocated_customer(::google::ads::googleads::v0::resources::Customer* customer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(customer_);
  }
  if (customer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      customer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, customer, submessage_arena);
    }
    
  } else {
    
  }
  customer_ = customer;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.customer)
}

// .google.ads.googleads.v0.resources.GeoTargetConstant geo_target_constant = 23;
inline bool GoogleAdsRow::has_geo_target_constant() const {
  return this != internal_default_instance() && geo_target_constant_ != NULL;
}
inline const ::google::ads::googleads::v0::resources::GeoTargetConstant& GoogleAdsRow::_internal_geo_target_constant() const {
  return *geo_target_constant_;
}
inline const ::google::ads::googleads::v0::resources::GeoTargetConstant& GoogleAdsRow::geo_target_constant() const {
  const ::google::ads::googleads::v0::resources::GeoTargetConstant* p = geo_target_constant_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.geo_target_constant)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::resources::GeoTargetConstant*>(
      &::google::ads::googleads::v0::resources::_GeoTargetConstant_default_instance_);
}
inline ::google::ads::googleads::v0::resources::GeoTargetConstant* GoogleAdsRow::release_geo_target_constant() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.geo_target_constant)
  
  ::google::ads::googleads::v0::resources::GeoTargetConstant* temp = geo_target_constant_;
  geo_target_constant_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::resources::GeoTargetConstant* GoogleAdsRow::mutable_geo_target_constant() {
  
  if (geo_target_constant_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::resources::GeoTargetConstant>(GetArenaNoVirtual());
    geo_target_constant_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.geo_target_constant)
  return geo_target_constant_;
}
inline void GoogleAdsRow::set_allocated_geo_target_constant(::google::ads::googleads::v0::resources::GeoTargetConstant* geo_target_constant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(geo_target_constant_);
  }
  if (geo_target_constant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      geo_target_constant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, geo_target_constant, submessage_arena);
    }
    
  } else {
    
  }
  geo_target_constant_ = geo_target_constant;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.geo_target_constant)
}

// .google.ads.googleads.v0.resources.KeywordView keyword_view = 21;
inline bool GoogleAdsRow::has_keyword_view() const {
  return this != internal_default_instance() && keyword_view_ != NULL;
}
inline const ::google::ads::googleads::v0::resources::KeywordView& GoogleAdsRow::_internal_keyword_view() const {
  return *keyword_view_;
}
inline const ::google::ads::googleads::v0::resources::KeywordView& GoogleAdsRow::keyword_view() const {
  const ::google::ads::googleads::v0::resources::KeywordView* p = keyword_view_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.keyword_view)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::resources::KeywordView*>(
      &::google::ads::googleads::v0::resources::_KeywordView_default_instance_);
}
inline ::google::ads::googleads::v0::resources::KeywordView* GoogleAdsRow::release_keyword_view() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.keyword_view)
  
  ::google::ads::googleads::v0::resources::KeywordView* temp = keyword_view_;
  keyword_view_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::resources::KeywordView* GoogleAdsRow::mutable_keyword_view() {
  
  if (keyword_view_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::resources::KeywordView>(GetArenaNoVirtual());
    keyword_view_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.keyword_view)
  return keyword_view_;
}
inline void GoogleAdsRow::set_allocated_keyword_view(::google::ads::googleads::v0::resources::KeywordView* keyword_view) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(keyword_view_);
  }
  if (keyword_view) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      keyword_view = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, keyword_view, submessage_arena);
    }
    
  } else {
    
  }
  keyword_view_ = keyword_view;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.keyword_view)
}

// .google.ads.googleads.v0.resources.Recommendation recommendation = 22;
inline bool GoogleAdsRow::has_recommendation() const {
  return this != internal_default_instance() && recommendation_ != NULL;
}
inline const ::google::ads::googleads::v0::resources::Recommendation& GoogleAdsRow::_internal_recommendation() const {
  return *recommendation_;
}
inline const ::google::ads::googleads::v0::resources::Recommendation& GoogleAdsRow::recommendation() const {
  const ::google::ads::googleads::v0::resources::Recommendation* p = recommendation_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.recommendation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::resources::Recommendation*>(
      &::google::ads::googleads::v0::resources::_Recommendation_default_instance_);
}
inline ::google::ads::googleads::v0::resources::Recommendation* GoogleAdsRow::release_recommendation() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.recommendation)
  
  ::google::ads::googleads::v0::resources::Recommendation* temp = recommendation_;
  recommendation_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::resources::Recommendation* GoogleAdsRow::mutable_recommendation() {
  
  if (recommendation_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::resources::Recommendation>(GetArenaNoVirtual());
    recommendation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.recommendation)
  return recommendation_;
}
inline void GoogleAdsRow::set_allocated_recommendation(::google::ads::googleads::v0::resources::Recommendation* recommendation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(recommendation_);
  }
  if (recommendation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      recommendation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recommendation, submessage_arena);
    }
    
  } else {
    
  }
  recommendation_ = recommendation;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.recommendation)
}

// .google.ads.googleads.v0.common.Metrics metrics = 4;
inline bool GoogleAdsRow::has_metrics() const {
  return this != internal_default_instance() && metrics_ != NULL;
}
inline const ::google::ads::googleads::v0::common::Metrics& GoogleAdsRow::_internal_metrics() const {
  return *metrics_;
}
inline const ::google::ads::googleads::v0::common::Metrics& GoogleAdsRow::metrics() const {
  const ::google::ads::googleads::v0::common::Metrics* p = metrics_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.metrics)
  return p != NULL ? *p : *reinterpret_cast<const ::google::ads::googleads::v0::common::Metrics*>(
      &::google::ads::googleads::v0::common::_Metrics_default_instance_);
}
inline ::google::ads::googleads::v0::common::Metrics* GoogleAdsRow::release_metrics() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.metrics)
  
  ::google::ads::googleads::v0::common::Metrics* temp = metrics_;
  metrics_ = NULL;
  return temp;
}
inline ::google::ads::googleads::v0::common::Metrics* GoogleAdsRow::mutable_metrics() {
  
  if (metrics_ == NULL) {
    auto* p = CreateMaybeMessage<::google::ads::googleads::v0::common::Metrics>(GetArenaNoVirtual());
    metrics_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.metrics)
  return metrics_;
}
inline void GoogleAdsRow::set_allocated_metrics(::google::ads::googleads::v0::common::Metrics* metrics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(metrics_);
  }
  if (metrics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      metrics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metrics, submessage_arena);
    }
    
  } else {
    
  }
  metrics_ = metrics;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.metrics)
}

// .google.ads.googleads.v0.enums.AdNetworkTypeEnum.AdNetworkType ad_network_type = 5;
inline void GoogleAdsRow::clear_ad_network_type() {
  ad_network_type_ = 0;
}
inline ::google::ads::googleads::v0::enums::AdNetworkTypeEnum_AdNetworkType GoogleAdsRow::ad_network_type() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.ad_network_type)
  return static_cast< ::google::ads::googleads::v0::enums::AdNetworkTypeEnum_AdNetworkType >(ad_network_type_);
}
inline void GoogleAdsRow::set_ad_network_type(::google::ads::googleads::v0::enums::AdNetworkTypeEnum_AdNetworkType value) {
  
  ad_network_type_ = value;
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.GoogleAdsRow.ad_network_type)
}

// .google.protobuf.StringValue date = 6;
inline bool GoogleAdsRow::has_date() const {
  return this != internal_default_instance() && date_ != NULL;
}
inline const ::google::protobuf::StringValue& GoogleAdsRow::_internal_date() const {
  return *date_;
}
inline const ::google::protobuf::StringValue& GoogleAdsRow::date() const {
  const ::google::protobuf::StringValue* p = date_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* GoogleAdsRow::release_date() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.date)
  
  ::google::protobuf::StringValue* temp = date_;
  date_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* GoogleAdsRow::mutable_date() {
  
  if (date_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    date_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.date)
  return date_;
}
inline void GoogleAdsRow::set_allocated_date(::google::protobuf::StringValue* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(date_);
  }
  if (date) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(date)->GetArena();
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    
  } else {
    
  }
  date_ = date;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.date)
}

// .google.ads.googleads.v0.enums.DayOfWeekEnum.DayOfWeek day_of_week = 7;
inline void GoogleAdsRow::clear_day_of_week() {
  day_of_week_ = 0;
}
inline ::google::ads::googleads::v0::enums::DayOfWeekEnum_DayOfWeek GoogleAdsRow::day_of_week() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.day_of_week)
  return static_cast< ::google::ads::googleads::v0::enums::DayOfWeekEnum_DayOfWeek >(day_of_week_);
}
inline void GoogleAdsRow::set_day_of_week(::google::ads::googleads::v0::enums::DayOfWeekEnum_DayOfWeek value) {
  
  day_of_week_ = value;
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.GoogleAdsRow.day_of_week)
}

// .google.ads.googleads.v0.enums.DeviceEnum.Device device = 8;
inline void GoogleAdsRow::clear_device() {
  device_ = 0;
}
inline ::google::ads::googleads::v0::enums::DeviceEnum_Device GoogleAdsRow::device() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.device)
  return static_cast< ::google::ads::googleads::v0::enums::DeviceEnum_Device >(device_);
}
inline void GoogleAdsRow::set_device(::google::ads::googleads::v0::enums::DeviceEnum_Device value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.GoogleAdsRow.device)
}

// .google.protobuf.Int32Value hour = 9;
inline bool GoogleAdsRow::has_hour() const {
  return this != internal_default_instance() && hour_ != NULL;
}
inline const ::google::protobuf::Int32Value& GoogleAdsRow::_internal_hour() const {
  return *hour_;
}
inline const ::google::protobuf::Int32Value& GoogleAdsRow::hour() const {
  const ::google::protobuf::Int32Value* p = hour_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.hour)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int32Value*>(
      &::google::protobuf::_Int32Value_default_instance_);
}
inline ::google::protobuf::Int32Value* GoogleAdsRow::release_hour() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.hour)
  
  ::google::protobuf::Int32Value* temp = hour_;
  hour_ = NULL;
  return temp;
}
inline ::google::protobuf::Int32Value* GoogleAdsRow::mutable_hour() {
  
  if (hour_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int32Value>(GetArenaNoVirtual());
    hour_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.hour)
  return hour_;
}
inline void GoogleAdsRow::set_allocated_hour(::google::protobuf::Int32Value* hour) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hour_);
  }
  if (hour) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(hour)->GetArena();
    if (message_arena != submessage_arena) {
      hour = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hour, submessage_arena);
    }
    
  } else {
    
  }
  hour_ = hour;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.hour)
}

// .google.protobuf.StringValue month = 10;
inline bool GoogleAdsRow::has_month() const {
  return this != internal_default_instance() && month_ != NULL;
}
inline const ::google::protobuf::StringValue& GoogleAdsRow::_internal_month() const {
  return *month_;
}
inline const ::google::protobuf::StringValue& GoogleAdsRow::month() const {
  const ::google::protobuf::StringValue* p = month_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.month)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* GoogleAdsRow::release_month() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.month)
  
  ::google::protobuf::StringValue* temp = month_;
  month_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* GoogleAdsRow::mutable_month() {
  
  if (month_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    month_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.month)
  return month_;
}
inline void GoogleAdsRow::set_allocated_month(::google::protobuf::StringValue* month) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(month_);
  }
  if (month) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(month)->GetArena();
    if (message_arena != submessage_arena) {
      month = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, month, submessage_arena);
    }
    
  } else {
    
  }
  month_ = month;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.month)
}

// .google.protobuf.StringValue quarter = 12;
inline bool GoogleAdsRow::has_quarter() const {
  return this != internal_default_instance() && quarter_ != NULL;
}
inline const ::google::protobuf::StringValue& GoogleAdsRow::_internal_quarter() const {
  return *quarter_;
}
inline const ::google::protobuf::StringValue& GoogleAdsRow::quarter() const {
  const ::google::protobuf::StringValue* p = quarter_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.quarter)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* GoogleAdsRow::release_quarter() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.quarter)
  
  ::google::protobuf::StringValue* temp = quarter_;
  quarter_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* GoogleAdsRow::mutable_quarter() {
  
  if (quarter_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    quarter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.quarter)
  return quarter_;
}
inline void GoogleAdsRow::set_allocated_quarter(::google::protobuf::StringValue* quarter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(quarter_);
  }
  if (quarter) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(quarter)->GetArena();
    if (message_arena != submessage_arena) {
      quarter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quarter, submessage_arena);
    }
    
  } else {
    
  }
  quarter_ = quarter;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.quarter)
}

// .google.ads.googleads.v0.enums.SlotEnum.Slot slot = 13;
inline void GoogleAdsRow::clear_slot() {
  slot_ = 0;
}
inline ::google::ads::googleads::v0::enums::SlotEnum_Slot GoogleAdsRow::slot() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.slot)
  return static_cast< ::google::ads::googleads::v0::enums::SlotEnum_Slot >(slot_);
}
inline void GoogleAdsRow::set_slot(::google::ads::googleads::v0::enums::SlotEnum_Slot value) {
  
  slot_ = value;
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.GoogleAdsRow.slot)
}

// .google.protobuf.StringValue week = 14;
inline bool GoogleAdsRow::has_week() const {
  return this != internal_default_instance() && week_ != NULL;
}
inline const ::google::protobuf::StringValue& GoogleAdsRow::_internal_week() const {
  return *week_;
}
inline const ::google::protobuf::StringValue& GoogleAdsRow::week() const {
  const ::google::protobuf::StringValue* p = week_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.week)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::StringValue*>(
      &::google::protobuf::_StringValue_default_instance_);
}
inline ::google::protobuf::StringValue* GoogleAdsRow::release_week() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.week)
  
  ::google::protobuf::StringValue* temp = week_;
  week_ = NULL;
  return temp;
}
inline ::google::protobuf::StringValue* GoogleAdsRow::mutable_week() {
  
  if (week_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArenaNoVirtual());
    week_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.week)
  return week_;
}
inline void GoogleAdsRow::set_allocated_week(::google::protobuf::StringValue* week) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(week_);
  }
  if (week) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(week)->GetArena();
    if (message_arena != submessage_arena) {
      week = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, week, submessage_arena);
    }
    
  } else {
    
  }
  week_ = week;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.week)
}

// .google.protobuf.Int32Value year = 15;
inline bool GoogleAdsRow::has_year() const {
  return this != internal_default_instance() && year_ != NULL;
}
inline const ::google::protobuf::Int32Value& GoogleAdsRow::_internal_year() const {
  return *year_;
}
inline const ::google::protobuf::Int32Value& GoogleAdsRow::year() const {
  const ::google::protobuf::Int32Value* p = year_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GoogleAdsRow.year)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Int32Value*>(
      &::google::protobuf::_Int32Value_default_instance_);
}
inline ::google::protobuf::Int32Value* GoogleAdsRow::release_year() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GoogleAdsRow.year)
  
  ::google::protobuf::Int32Value* temp = year_;
  year_ = NULL;
  return temp;
}
inline ::google::protobuf::Int32Value* GoogleAdsRow::mutable_year() {
  
  if (year_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int32Value>(GetArenaNoVirtual());
    year_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GoogleAdsRow.year)
  return year_;
}
inline void GoogleAdsRow::set_allocated_year(::google::protobuf::Int32Value* year) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(year_);
  }
  if (year) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(year)->GetArena();
    if (message_arena != submessage_arena) {
      year = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, year, submessage_arena);
    }
    
  } else {
    
  }
  year_ = year;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GoogleAdsRow.year)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace services
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fservices_2fgoogle_5fads_5fservice_2eproto
