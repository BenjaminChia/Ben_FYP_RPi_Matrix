// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/ads/googleads/v0/services/google_ads_service.proto

#include "google/ads/googleads/v0/services/google_ads_service.pb.h"
#include "google/ads/googleads/v0/services/google_ads_service.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace services {

static const char* GoogleAdsService_method_names[] = {
  "/google.ads.googleads.v0.services.GoogleAdsService/Search",
};

std::unique_ptr< GoogleAdsService::Stub> GoogleAdsService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< GoogleAdsService::Stub> stub(new GoogleAdsService::Stub(channel));
  return stub;
}

GoogleAdsService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_Search_(GoogleAdsService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status GoogleAdsService::Stub::Search(::grpc::ClientContext* context, const ::google::ads::googleads::v0::services::SearchGoogleAdsRequest& request, ::google::ads::googleads::v0::services::SearchGoogleAdsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_Search_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::ads::googleads::v0::services::SearchGoogleAdsResponse>* GoogleAdsService::Stub::AsyncSearchRaw(::grpc::ClientContext* context, const ::google::ads::googleads::v0::services::SearchGoogleAdsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::ads::googleads::v0::services::SearchGoogleAdsResponse>::Create(channel_.get(), cq, rpcmethod_Search_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::ads::googleads::v0::services::SearchGoogleAdsResponse>* GoogleAdsService::Stub::PrepareAsyncSearchRaw(::grpc::ClientContext* context, const ::google::ads::googleads::v0::services::SearchGoogleAdsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::ads::googleads::v0::services::SearchGoogleAdsResponse>::Create(channel_.get(), cq, rpcmethod_Search_, context, request, false);
}

GoogleAdsService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GoogleAdsService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GoogleAdsService::Service, ::google::ads::googleads::v0::services::SearchGoogleAdsRequest, ::google::ads::googleads::v0::services::SearchGoogleAdsResponse>(
          std::mem_fn(&GoogleAdsService::Service::Search), this)));
}

GoogleAdsService::Service::~Service() {
}

::grpc::Status GoogleAdsService::Service::Search(::grpc::ServerContext* context, const ::google::ads::googleads::v0::services::SearchGoogleAdsRequest* request, ::google::ads::googleads::v0::services::SearchGoogleAdsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace ads
}  // namespace googleads
}  // namespace v0
}  // namespace services

