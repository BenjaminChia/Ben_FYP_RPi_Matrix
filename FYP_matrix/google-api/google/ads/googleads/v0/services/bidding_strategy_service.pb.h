// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ads/googleads/v0/services/bidding_strategy_service.proto

#ifndef PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fservices_2fbidding_5fstrategy_5fservice_2eproto
#define PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fservices_2fbidding_5fstrategy_5fservice_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/ads/googleads/v0/resources/bidding_strategy.pb.h"
#include "google/api/annotations.pb.h"
#include <google/protobuf/field_mask.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fbidding_5fstrategy_5fservice_2eproto 

namespace protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fbidding_5fstrategy_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fbidding_5fstrategy_5fservice_2eproto
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace services {
class BiddingStrategyOperation;
class BiddingStrategyOperationDefaultTypeInternal;
extern BiddingStrategyOperationDefaultTypeInternal _BiddingStrategyOperation_default_instance_;
class GetBiddingStrategyRequest;
class GetBiddingStrategyRequestDefaultTypeInternal;
extern GetBiddingStrategyRequestDefaultTypeInternal _GetBiddingStrategyRequest_default_instance_;
class MutateBiddingStrategiesRequest;
class MutateBiddingStrategiesRequestDefaultTypeInternal;
extern MutateBiddingStrategiesRequestDefaultTypeInternal _MutateBiddingStrategiesRequest_default_instance_;
class MutateBiddingStrategiesResponse;
class MutateBiddingStrategiesResponseDefaultTypeInternal;
extern MutateBiddingStrategiesResponseDefaultTypeInternal _MutateBiddingStrategiesResponse_default_instance_;
class MutateBiddingStrategyResult;
class MutateBiddingStrategyResultDefaultTypeInternal;
extern MutateBiddingStrategyResultDefaultTypeInternal _MutateBiddingStrategyResult_default_instance_;
}  // namespace services
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::ads::googleads::v0::services::BiddingStrategyOperation* Arena::CreateMaybeMessage<::google::ads::googleads::v0::services::BiddingStrategyOperation>(Arena*);
template<> ::google::ads::googleads::v0::services::GetBiddingStrategyRequest* Arena::CreateMaybeMessage<::google::ads::googleads::v0::services::GetBiddingStrategyRequest>(Arena*);
template<> ::google::ads::googleads::v0::services::MutateBiddingStrategiesRequest* Arena::CreateMaybeMessage<::google::ads::googleads::v0::services::MutateBiddingStrategiesRequest>(Arena*);
template<> ::google::ads::googleads::v0::services::MutateBiddingStrategiesResponse* Arena::CreateMaybeMessage<::google::ads::googleads::v0::services::MutateBiddingStrategiesResponse>(Arena*);
template<> ::google::ads::googleads::v0::services::MutateBiddingStrategyResult* Arena::CreateMaybeMessage<::google::ads::googleads::v0::services::MutateBiddingStrategyResult>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace ads {
namespace googleads {
namespace v0 {
namespace services {

// ===================================================================

class GetBiddingStrategyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.services.GetBiddingStrategyRequest) */ {
 public:
  GetBiddingStrategyRequest();
  virtual ~GetBiddingStrategyRequest();

  GetBiddingStrategyRequest(const GetBiddingStrategyRequest& from);

  inline GetBiddingStrategyRequest& operator=(const GetBiddingStrategyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBiddingStrategyRequest(GetBiddingStrategyRequest&& from) noexcept
    : GetBiddingStrategyRequest() {
    *this = ::std::move(from);
  }

  inline GetBiddingStrategyRequest& operator=(GetBiddingStrategyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBiddingStrategyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBiddingStrategyRequest* internal_default_instance() {
    return reinterpret_cast<const GetBiddingStrategyRequest*>(
               &_GetBiddingStrategyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GetBiddingStrategyRequest* other);
  friend void swap(GetBiddingStrategyRequest& a, GetBiddingStrategyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBiddingStrategyRequest* New() const final {
    return CreateMaybeMessage<GetBiddingStrategyRequest>(NULL);
  }

  GetBiddingStrategyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetBiddingStrategyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetBiddingStrategyRequest& from);
  void MergeFrom(const GetBiddingStrategyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBiddingStrategyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string resource_name = 1;
  void clear_resource_name();
  static const int kResourceNameFieldNumber = 1;
  const ::std::string& resource_name() const;
  void set_resource_name(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_name(::std::string&& value);
  #endif
  void set_resource_name(const char* value);
  void set_resource_name(const char* value, size_t size);
  ::std::string* mutable_resource_name();
  ::std::string* release_resource_name();
  void set_allocated_resource_name(::std::string* resource_name);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.services.GetBiddingStrategyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr resource_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fbidding_5fstrategy_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MutateBiddingStrategiesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest) */ {
 public:
  MutateBiddingStrategiesRequest();
  virtual ~MutateBiddingStrategiesRequest();

  MutateBiddingStrategiesRequest(const MutateBiddingStrategiesRequest& from);

  inline MutateBiddingStrategiesRequest& operator=(const MutateBiddingStrategiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MutateBiddingStrategiesRequest(MutateBiddingStrategiesRequest&& from) noexcept
    : MutateBiddingStrategiesRequest() {
    *this = ::std::move(from);
  }

  inline MutateBiddingStrategiesRequest& operator=(MutateBiddingStrategiesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MutateBiddingStrategiesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MutateBiddingStrategiesRequest* internal_default_instance() {
    return reinterpret_cast<const MutateBiddingStrategiesRequest*>(
               &_MutateBiddingStrategiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MutateBiddingStrategiesRequest* other);
  friend void swap(MutateBiddingStrategiesRequest& a, MutateBiddingStrategiesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MutateBiddingStrategiesRequest* New() const final {
    return CreateMaybeMessage<MutateBiddingStrategiesRequest>(NULL);
  }

  MutateBiddingStrategiesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MutateBiddingStrategiesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MutateBiddingStrategiesRequest& from);
  void MergeFrom(const MutateBiddingStrategiesRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MutateBiddingStrategiesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.ads.googleads.v0.services.BiddingStrategyOperation operations = 2;
  int operations_size() const;
  void clear_operations();
  static const int kOperationsFieldNumber = 2;
  ::google::ads::googleads::v0::services::BiddingStrategyOperation* mutable_operations(int index);
  ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::BiddingStrategyOperation >*
      mutable_operations();
  const ::google::ads::googleads::v0::services::BiddingStrategyOperation& operations(int index) const;
  ::google::ads::googleads::v0::services::BiddingStrategyOperation* add_operations();
  const ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::BiddingStrategyOperation >&
      operations() const;

  // string customer_id = 1;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 1;
  const ::std::string& customer_id() const;
  void set_customer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_id(::std::string&& value);
  #endif
  void set_customer_id(const char* value);
  void set_customer_id(const char* value, size_t size);
  ::std::string* mutable_customer_id();
  ::std::string* release_customer_id();
  void set_allocated_customer_id(::std::string* customer_id);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::BiddingStrategyOperation > operations_;
  ::google::protobuf::internal::ArenaStringPtr customer_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fbidding_5fstrategy_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BiddingStrategyOperation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.services.BiddingStrategyOperation) */ {
 public:
  BiddingStrategyOperation();
  virtual ~BiddingStrategyOperation();

  BiddingStrategyOperation(const BiddingStrategyOperation& from);

  inline BiddingStrategyOperation& operator=(const BiddingStrategyOperation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BiddingStrategyOperation(BiddingStrategyOperation&& from) noexcept
    : BiddingStrategyOperation() {
    *this = ::std::move(from);
  }

  inline BiddingStrategyOperation& operator=(BiddingStrategyOperation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BiddingStrategyOperation& default_instance();

  enum OperationCase {
    kCreate = 1,
    kUpdate = 2,
    kRemove = 3,
    OPERATION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BiddingStrategyOperation* internal_default_instance() {
    return reinterpret_cast<const BiddingStrategyOperation*>(
               &_BiddingStrategyOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(BiddingStrategyOperation* other);
  friend void swap(BiddingStrategyOperation& a, BiddingStrategyOperation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BiddingStrategyOperation* New() const final {
    return CreateMaybeMessage<BiddingStrategyOperation>(NULL);
  }

  BiddingStrategyOperation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BiddingStrategyOperation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BiddingStrategyOperation& from);
  void MergeFrom(const BiddingStrategyOperation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BiddingStrategyOperation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.FieldMask update_mask = 4;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 4;
  private:
  const ::google::protobuf::FieldMask& _internal_update_mask() const;
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);

  // .google.ads.googleads.v0.resources.BiddingStrategy create = 1;
  bool has_create() const;
  void clear_create();
  static const int kCreateFieldNumber = 1;
  private:
  const ::google::ads::googleads::v0::resources::BiddingStrategy& _internal_create() const;
  public:
  const ::google::ads::googleads::v0::resources::BiddingStrategy& create() const;
  ::google::ads::googleads::v0::resources::BiddingStrategy* release_create();
  ::google::ads::googleads::v0::resources::BiddingStrategy* mutable_create();
  void set_allocated_create(::google::ads::googleads::v0::resources::BiddingStrategy* create);

  // .google.ads.googleads.v0.resources.BiddingStrategy update = 2;
  bool has_update() const;
  void clear_update();
  static const int kUpdateFieldNumber = 2;
  private:
  const ::google::ads::googleads::v0::resources::BiddingStrategy& _internal_update() const;
  public:
  const ::google::ads::googleads::v0::resources::BiddingStrategy& update() const;
  ::google::ads::googleads::v0::resources::BiddingStrategy* release_update();
  ::google::ads::googleads::v0::resources::BiddingStrategy* mutable_update();
  void set_allocated_update(::google::ads::googleads::v0::resources::BiddingStrategy* update);

  // string remove = 3;
  private:
  bool has_remove() const;
  public:
  void clear_remove();
  static const int kRemoveFieldNumber = 3;
  const ::std::string& remove() const;
  void set_remove(const ::std::string& value);
  #if LANG_CXX11
  void set_remove(::std::string&& value);
  #endif
  void set_remove(const char* value);
  void set_remove(const char* value, size_t size);
  ::std::string* mutable_remove();
  ::std::string* release_remove();
  void set_allocated_remove(::std::string* remove);

  void clear_operation();
  OperationCase operation_case() const;
  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.services.BiddingStrategyOperation)
 private:
  void set_has_create();
  void set_has_update();
  void set_has_remove();

  inline bool has_operation() const;
  inline void clear_has_operation();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::FieldMask* update_mask_;
  union OperationUnion {
    OperationUnion() {}
    ::google::ads::googleads::v0::resources::BiddingStrategy* create_;
    ::google::ads::googleads::v0::resources::BiddingStrategy* update_;
    ::google::protobuf::internal::ArenaStringPtr remove_;
  } operation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fbidding_5fstrategy_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MutateBiddingStrategiesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.services.MutateBiddingStrategiesResponse) */ {
 public:
  MutateBiddingStrategiesResponse();
  virtual ~MutateBiddingStrategiesResponse();

  MutateBiddingStrategiesResponse(const MutateBiddingStrategiesResponse& from);

  inline MutateBiddingStrategiesResponse& operator=(const MutateBiddingStrategiesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MutateBiddingStrategiesResponse(MutateBiddingStrategiesResponse&& from) noexcept
    : MutateBiddingStrategiesResponse() {
    *this = ::std::move(from);
  }

  inline MutateBiddingStrategiesResponse& operator=(MutateBiddingStrategiesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MutateBiddingStrategiesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MutateBiddingStrategiesResponse* internal_default_instance() {
    return reinterpret_cast<const MutateBiddingStrategiesResponse*>(
               &_MutateBiddingStrategiesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MutateBiddingStrategiesResponse* other);
  friend void swap(MutateBiddingStrategiesResponse& a, MutateBiddingStrategiesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MutateBiddingStrategiesResponse* New() const final {
    return CreateMaybeMessage<MutateBiddingStrategiesResponse>(NULL);
  }

  MutateBiddingStrategiesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MutateBiddingStrategiesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MutateBiddingStrategiesResponse& from);
  void MergeFrom(const MutateBiddingStrategiesResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MutateBiddingStrategiesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.ads.googleads.v0.services.MutateBiddingStrategyResult results = 2;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 2;
  ::google::ads::googleads::v0::services::MutateBiddingStrategyResult* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::MutateBiddingStrategyResult >*
      mutable_results();
  const ::google::ads::googleads::v0::services::MutateBiddingStrategyResult& results(int index) const;
  ::google::ads::googleads::v0::services::MutateBiddingStrategyResult* add_results();
  const ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::MutateBiddingStrategyResult >&
      results() const;

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.services.MutateBiddingStrategiesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::MutateBiddingStrategyResult > results_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fbidding_5fstrategy_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MutateBiddingStrategyResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.ads.googleads.v0.services.MutateBiddingStrategyResult) */ {
 public:
  MutateBiddingStrategyResult();
  virtual ~MutateBiddingStrategyResult();

  MutateBiddingStrategyResult(const MutateBiddingStrategyResult& from);

  inline MutateBiddingStrategyResult& operator=(const MutateBiddingStrategyResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MutateBiddingStrategyResult(MutateBiddingStrategyResult&& from) noexcept
    : MutateBiddingStrategyResult() {
    *this = ::std::move(from);
  }

  inline MutateBiddingStrategyResult& operator=(MutateBiddingStrategyResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MutateBiddingStrategyResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MutateBiddingStrategyResult* internal_default_instance() {
    return reinterpret_cast<const MutateBiddingStrategyResult*>(
               &_MutateBiddingStrategyResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MutateBiddingStrategyResult* other);
  friend void swap(MutateBiddingStrategyResult& a, MutateBiddingStrategyResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MutateBiddingStrategyResult* New() const final {
    return CreateMaybeMessage<MutateBiddingStrategyResult>(NULL);
  }

  MutateBiddingStrategyResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MutateBiddingStrategyResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MutateBiddingStrategyResult& from);
  void MergeFrom(const MutateBiddingStrategyResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MutateBiddingStrategyResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string resource_name = 1;
  void clear_resource_name();
  static const int kResourceNameFieldNumber = 1;
  const ::std::string& resource_name() const;
  void set_resource_name(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_name(::std::string&& value);
  #endif
  void set_resource_name(const char* value);
  void set_resource_name(const char* value, size_t size);
  ::std::string* mutable_resource_name();
  ::std::string* release_resource_name();
  void set_allocated_resource_name(::std::string* resource_name);

  // @@protoc_insertion_point(class_scope:google.ads.googleads.v0.services.MutateBiddingStrategyResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr resource_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fads_2fgoogleads_2fv0_2fservices_2fbidding_5fstrategy_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetBiddingStrategyRequest

// string resource_name = 1;
inline void GetBiddingStrategyRequest::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetBiddingStrategyRequest::resource_name() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.GetBiddingStrategyRequest.resource_name)
  return resource_name_.GetNoArena();
}
inline void GetBiddingStrategyRequest::set_resource_name(const ::std::string& value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.GetBiddingStrategyRequest.resource_name)
}
#if LANG_CXX11
inline void GetBiddingStrategyRequest::set_resource_name(::std::string&& value) {
  
  resource_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.ads.googleads.v0.services.GetBiddingStrategyRequest.resource_name)
}
#endif
inline void GetBiddingStrategyRequest::set_resource_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.ads.googleads.v0.services.GetBiddingStrategyRequest.resource_name)
}
inline void GetBiddingStrategyRequest::set_resource_name(const char* value, size_t size) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.ads.googleads.v0.services.GetBiddingStrategyRequest.resource_name)
}
inline ::std::string* GetBiddingStrategyRequest::mutable_resource_name() {
  
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.GetBiddingStrategyRequest.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBiddingStrategyRequest::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.GetBiddingStrategyRequest.resource_name)
  
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBiddingStrategyRequest::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    
  } else {
    
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.GetBiddingStrategyRequest.resource_name)
}

// -------------------------------------------------------------------

// MutateBiddingStrategiesRequest

// string customer_id = 1;
inline void MutateBiddingStrategiesRequest::clear_customer_id() {
  customer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MutateBiddingStrategiesRequest::customer_id() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest.customer_id)
  return customer_id_.GetNoArena();
}
inline void MutateBiddingStrategiesRequest::set_customer_id(const ::std::string& value) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest.customer_id)
}
#if LANG_CXX11
inline void MutateBiddingStrategiesRequest::set_customer_id(::std::string&& value) {
  
  customer_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest.customer_id)
}
#endif
inline void MutateBiddingStrategiesRequest::set_customer_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest.customer_id)
}
inline void MutateBiddingStrategiesRequest::set_customer_id(const char* value, size_t size) {
  
  customer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest.customer_id)
}
inline ::std::string* MutateBiddingStrategiesRequest::mutable_customer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest.customer_id)
  return customer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MutateBiddingStrategiesRequest::release_customer_id() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest.customer_id)
  
  return customer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MutateBiddingStrategiesRequest::set_allocated_customer_id(::std::string* customer_id) {
  if (customer_id != NULL) {
    
  } else {
    
  }
  customer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_id);
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest.customer_id)
}

// repeated .google.ads.googleads.v0.services.BiddingStrategyOperation operations = 2;
inline int MutateBiddingStrategiesRequest::operations_size() const {
  return operations_.size();
}
inline void MutateBiddingStrategiesRequest::clear_operations() {
  operations_.Clear();
}
inline ::google::ads::googleads::v0::services::BiddingStrategyOperation* MutateBiddingStrategiesRequest::mutable_operations(int index) {
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest.operations)
  return operations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::BiddingStrategyOperation >*
MutateBiddingStrategiesRequest::mutable_operations() {
  // @@protoc_insertion_point(field_mutable_list:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest.operations)
  return &operations_;
}
inline const ::google::ads::googleads::v0::services::BiddingStrategyOperation& MutateBiddingStrategiesRequest::operations(int index) const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest.operations)
  return operations_.Get(index);
}
inline ::google::ads::googleads::v0::services::BiddingStrategyOperation* MutateBiddingStrategiesRequest::add_operations() {
  // @@protoc_insertion_point(field_add:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest.operations)
  return operations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::BiddingStrategyOperation >&
MutateBiddingStrategiesRequest::operations() const {
  // @@protoc_insertion_point(field_list:google.ads.googleads.v0.services.MutateBiddingStrategiesRequest.operations)
  return operations_;
}

// -------------------------------------------------------------------

// BiddingStrategyOperation

// .google.protobuf.FieldMask update_mask = 4;
inline bool BiddingStrategyOperation::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& BiddingStrategyOperation::_internal_update_mask() const {
  return *update_mask_;
}
inline const ::google::protobuf::FieldMask& BiddingStrategyOperation::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.BiddingStrategyOperation.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* BiddingStrategyOperation::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.BiddingStrategyOperation.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* BiddingStrategyOperation::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    update_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.BiddingStrategyOperation.update_mask)
  return update_mask_;
}
inline void BiddingStrategyOperation::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.BiddingStrategyOperation.update_mask)
}

// .google.ads.googleads.v0.resources.BiddingStrategy create = 1;
inline bool BiddingStrategyOperation::has_create() const {
  return operation_case() == kCreate;
}
inline void BiddingStrategyOperation::set_has_create() {
  _oneof_case_[0] = kCreate;
}
inline const ::google::ads::googleads::v0::resources::BiddingStrategy& BiddingStrategyOperation::_internal_create() const {
  return *operation_.create_;
}
inline ::google::ads::googleads::v0::resources::BiddingStrategy* BiddingStrategyOperation::release_create() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.BiddingStrategyOperation.create)
  if (has_create()) {
    clear_has_operation();
      ::google::ads::googleads::v0::resources::BiddingStrategy* temp = operation_.create_;
    operation_.create_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::ads::googleads::v0::resources::BiddingStrategy& BiddingStrategyOperation::create() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.BiddingStrategyOperation.create)
  return has_create()
      ? *operation_.create_
      : *reinterpret_cast< ::google::ads::googleads::v0::resources::BiddingStrategy*>(&::google::ads::googleads::v0::resources::_BiddingStrategy_default_instance_);
}
inline ::google::ads::googleads::v0::resources::BiddingStrategy* BiddingStrategyOperation::mutable_create() {
  if (!has_create()) {
    clear_operation();
    set_has_create();
    operation_.create_ = CreateMaybeMessage< ::google::ads::googleads::v0::resources::BiddingStrategy >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.BiddingStrategyOperation.create)
  return operation_.create_;
}

// .google.ads.googleads.v0.resources.BiddingStrategy update = 2;
inline bool BiddingStrategyOperation::has_update() const {
  return operation_case() == kUpdate;
}
inline void BiddingStrategyOperation::set_has_update() {
  _oneof_case_[0] = kUpdate;
}
inline const ::google::ads::googleads::v0::resources::BiddingStrategy& BiddingStrategyOperation::_internal_update() const {
  return *operation_.update_;
}
inline ::google::ads::googleads::v0::resources::BiddingStrategy* BiddingStrategyOperation::release_update() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.BiddingStrategyOperation.update)
  if (has_update()) {
    clear_has_operation();
      ::google::ads::googleads::v0::resources::BiddingStrategy* temp = operation_.update_;
    operation_.update_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::ads::googleads::v0::resources::BiddingStrategy& BiddingStrategyOperation::update() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.BiddingStrategyOperation.update)
  return has_update()
      ? *operation_.update_
      : *reinterpret_cast< ::google::ads::googleads::v0::resources::BiddingStrategy*>(&::google::ads::googleads::v0::resources::_BiddingStrategy_default_instance_);
}
inline ::google::ads::googleads::v0::resources::BiddingStrategy* BiddingStrategyOperation::mutable_update() {
  if (!has_update()) {
    clear_operation();
    set_has_update();
    operation_.update_ = CreateMaybeMessage< ::google::ads::googleads::v0::resources::BiddingStrategy >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.BiddingStrategyOperation.update)
  return operation_.update_;
}

// string remove = 3;
inline bool BiddingStrategyOperation::has_remove() const {
  return operation_case() == kRemove;
}
inline void BiddingStrategyOperation::set_has_remove() {
  _oneof_case_[0] = kRemove;
}
inline void BiddingStrategyOperation::clear_remove() {
  if (has_remove()) {
    operation_.remove_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_operation();
  }
}
inline const ::std::string& BiddingStrategyOperation::remove() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.BiddingStrategyOperation.remove)
  if (has_remove()) {
    return operation_.remove_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void BiddingStrategyOperation::set_remove(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.BiddingStrategyOperation.remove)
  if (!has_remove()) {
    clear_operation();
    set_has_remove();
    operation_.remove_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  operation_.remove_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.BiddingStrategyOperation.remove)
}
#if LANG_CXX11
inline void BiddingStrategyOperation::set_remove(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.BiddingStrategyOperation.remove)
  if (!has_remove()) {
    clear_operation();
    set_has_remove();
    operation_.remove_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  operation_.remove_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.ads.googleads.v0.services.BiddingStrategyOperation.remove)
}
#endif
inline void BiddingStrategyOperation::set_remove(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_remove()) {
    clear_operation();
    set_has_remove();
    operation_.remove_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  operation_.remove_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.ads.googleads.v0.services.BiddingStrategyOperation.remove)
}
inline void BiddingStrategyOperation::set_remove(const char* value, size_t size) {
  if (!has_remove()) {
    clear_operation();
    set_has_remove();
    operation_.remove_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  operation_.remove_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.ads.googleads.v0.services.BiddingStrategyOperation.remove)
}
inline ::std::string* BiddingStrategyOperation::mutable_remove() {
  if (!has_remove()) {
    clear_operation();
    set_has_remove();
    operation_.remove_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.BiddingStrategyOperation.remove)
  return operation_.remove_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BiddingStrategyOperation::release_remove() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.BiddingStrategyOperation.remove)
  if (has_remove()) {
    clear_has_operation();
    return operation_.remove_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void BiddingStrategyOperation::set_allocated_remove(::std::string* remove) {
  if (!has_remove()) {
    operation_.remove_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_operation();
  if (remove != NULL) {
    set_has_remove();
    operation_.remove_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remove);
  }
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.BiddingStrategyOperation.remove)
}

inline bool BiddingStrategyOperation::has_operation() const {
  return operation_case() != OPERATION_NOT_SET;
}
inline void BiddingStrategyOperation::clear_has_operation() {
  _oneof_case_[0] = OPERATION_NOT_SET;
}
inline BiddingStrategyOperation::OperationCase BiddingStrategyOperation::operation_case() const {
  return BiddingStrategyOperation::OperationCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// MutateBiddingStrategiesResponse

// repeated .google.ads.googleads.v0.services.MutateBiddingStrategyResult results = 2;
inline int MutateBiddingStrategiesResponse::results_size() const {
  return results_.size();
}
inline void MutateBiddingStrategiesResponse::clear_results() {
  results_.Clear();
}
inline ::google::ads::googleads::v0::services::MutateBiddingStrategyResult* MutateBiddingStrategiesResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.MutateBiddingStrategiesResponse.results)
  return results_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::MutateBiddingStrategyResult >*
MutateBiddingStrategiesResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:google.ads.googleads.v0.services.MutateBiddingStrategiesResponse.results)
  return &results_;
}
inline const ::google::ads::googleads::v0::services::MutateBiddingStrategyResult& MutateBiddingStrategiesResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.MutateBiddingStrategiesResponse.results)
  return results_.Get(index);
}
inline ::google::ads::googleads::v0::services::MutateBiddingStrategyResult* MutateBiddingStrategiesResponse::add_results() {
  // @@protoc_insertion_point(field_add:google.ads.googleads.v0.services.MutateBiddingStrategiesResponse.results)
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::ads::googleads::v0::services::MutateBiddingStrategyResult >&
MutateBiddingStrategiesResponse::results() const {
  // @@protoc_insertion_point(field_list:google.ads.googleads.v0.services.MutateBiddingStrategiesResponse.results)
  return results_;
}

// -------------------------------------------------------------------

// MutateBiddingStrategyResult

// string resource_name = 1;
inline void MutateBiddingStrategyResult::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MutateBiddingStrategyResult::resource_name() const {
  // @@protoc_insertion_point(field_get:google.ads.googleads.v0.services.MutateBiddingStrategyResult.resource_name)
  return resource_name_.GetNoArena();
}
inline void MutateBiddingStrategyResult::set_resource_name(const ::std::string& value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.ads.googleads.v0.services.MutateBiddingStrategyResult.resource_name)
}
#if LANG_CXX11
inline void MutateBiddingStrategyResult::set_resource_name(::std::string&& value) {
  
  resource_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.ads.googleads.v0.services.MutateBiddingStrategyResult.resource_name)
}
#endif
inline void MutateBiddingStrategyResult::set_resource_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.ads.googleads.v0.services.MutateBiddingStrategyResult.resource_name)
}
inline void MutateBiddingStrategyResult::set_resource_name(const char* value, size_t size) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.ads.googleads.v0.services.MutateBiddingStrategyResult.resource_name)
}
inline ::std::string* MutateBiddingStrategyResult::mutable_resource_name() {
  
  // @@protoc_insertion_point(field_mutable:google.ads.googleads.v0.services.MutateBiddingStrategyResult.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MutateBiddingStrategyResult::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.ads.googleads.v0.services.MutateBiddingStrategyResult.resource_name)
  
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MutateBiddingStrategyResult::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    
  } else {
    
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:google.ads.googleads.v0.services.MutateBiddingStrategyResult.resource_name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace services
}  // namespace v0
}  // namespace googleads
}  // namespace ads
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fads_2fgoogleads_2fv0_2fservices_2fbidding_5fstrategy_5fservice_2eproto
