// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/v1/transaction.proto

#include "google/spanner/v1/transaction.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_google_2fspanner_2fv1_2ftransaction_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fspanner_2fv1_2ftransaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TransactionOptions_PartitionedDml;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fspanner_2fv1_2ftransaction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TransactionOptions_ReadWrite;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fspanner_2fv1_2ftransaction_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TransactionOptions_ReadOnly;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fspanner_2fv1_2ftransaction_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_TransactionOptions;
}  // namespace protobuf_google_2fspanner_2fv1_2ftransaction_2eproto
namespace google {
namespace spanner {
namespace v1 {
class TransactionOptions_ReadWriteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionOptions_ReadWrite>
      _instance;
} _TransactionOptions_ReadWrite_default_instance_;
class TransactionOptions_PartitionedDmlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionOptions_PartitionedDml>
      _instance;
} _TransactionOptions_PartitionedDml_default_instance_;
class TransactionOptions_ReadOnlyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionOptions_ReadOnly>
      _instance;
  bool strong_;
  const ::google::protobuf::Timestamp* min_read_timestamp_;
  const ::google::protobuf::Duration* max_staleness_;
  const ::google::protobuf::Timestamp* read_timestamp_;
  const ::google::protobuf::Duration* exact_staleness_;
} _TransactionOptions_ReadOnly_default_instance_;
class TransactionOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionOptions>
      _instance;
  const ::google::spanner::v1::TransactionOptions_ReadWrite* read_write_;
  const ::google::spanner::v1::TransactionOptions_PartitionedDml* partitioned_dml_;
  const ::google::spanner::v1::TransactionOptions_ReadOnly* read_only_;
} _TransactionOptions_default_instance_;
class TransactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Transaction>
      _instance;
} _Transaction_default_instance_;
class TransactionSelectorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionSelector>
      _instance;
  const ::google::spanner::v1::TransactionOptions* single_use_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  const ::google::spanner::v1::TransactionOptions* begin_;
} _TransactionSelector_default_instance_;
}  // namespace v1
}  // namespace spanner
}  // namespace google
namespace protobuf_google_2fspanner_2fv1_2ftransaction_2eproto {
static void InitDefaultsTransactionOptions_ReadWrite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::spanner::v1::_TransactionOptions_ReadWrite_default_instance_;
    new (ptr) ::google::spanner::v1::TransactionOptions_ReadWrite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::spanner::v1::TransactionOptions_ReadWrite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransactionOptions_ReadWrite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransactionOptions_ReadWrite}, {}};

static void InitDefaultsTransactionOptions_PartitionedDml() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::spanner::v1::_TransactionOptions_PartitionedDml_default_instance_;
    new (ptr) ::google::spanner::v1::TransactionOptions_PartitionedDml();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::spanner::v1::TransactionOptions_PartitionedDml::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransactionOptions_PartitionedDml =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransactionOptions_PartitionedDml}, {}};

static void InitDefaultsTransactionOptions_ReadOnly() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::spanner::v1::_TransactionOptions_ReadOnly_default_instance_;
    new (ptr) ::google::spanner::v1::TransactionOptions_ReadOnly();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::spanner::v1::TransactionOptions_ReadOnly::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TransactionOptions_ReadOnly =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTransactionOptions_ReadOnly}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,}};

static void InitDefaultsTransactionOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::spanner::v1::_TransactionOptions_default_instance_;
    new (ptr) ::google::spanner::v1::TransactionOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::spanner::v1::TransactionOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_TransactionOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTransactionOptions}, {
      &protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionOptions_ReadWrite.base,
      &protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionOptions_PartitionedDml.base,
      &protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionOptions_ReadOnly.base,}};

static void InitDefaultsTransaction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::spanner::v1::_Transaction_default_instance_;
    new (ptr) ::google::spanner::v1::Transaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::spanner::v1::Transaction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Transaction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransaction}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsTransactionSelector() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::spanner::v1::_TransactionSelector_default_instance_;
    new (ptr) ::google::spanner::v1::TransactionSelector();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::spanner::v1::TransactionSelector::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TransactionSelector =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransactionSelector}, {
      &protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionOptions.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TransactionOptions_ReadWrite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransactionOptions_PartitionedDml.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransactionOptions_ReadOnly.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransactionOptions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Transaction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransactionSelector.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::TransactionOptions_ReadWrite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::TransactionOptions_PartitionedDml, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::TransactionOptions_ReadOnly, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::TransactionOptions_ReadOnly, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::spanner::v1::TransactionOptions_ReadOnlyDefaultTypeInternal, strong_),
  offsetof(::google::spanner::v1::TransactionOptions_ReadOnlyDefaultTypeInternal, min_read_timestamp_),
  offsetof(::google::spanner::v1::TransactionOptions_ReadOnlyDefaultTypeInternal, max_staleness_),
  offsetof(::google::spanner::v1::TransactionOptions_ReadOnlyDefaultTypeInternal, read_timestamp_),
  offsetof(::google::spanner::v1::TransactionOptions_ReadOnlyDefaultTypeInternal, exact_staleness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::TransactionOptions_ReadOnly, return_read_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::TransactionOptions_ReadOnly, timestamp_bound_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::TransactionOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::TransactionOptions, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::spanner::v1::TransactionOptionsDefaultTypeInternal, read_write_),
  offsetof(::google::spanner::v1::TransactionOptionsDefaultTypeInternal, partitioned_dml_),
  offsetof(::google::spanner::v1::TransactionOptionsDefaultTypeInternal, read_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::TransactionOptions, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::Transaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::Transaction, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::Transaction, read_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::TransactionSelector, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::TransactionSelector, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::spanner::v1::TransactionSelectorDefaultTypeInternal, single_use_),
  offsetof(::google::spanner::v1::TransactionSelectorDefaultTypeInternal, id_),
  offsetof(::google::spanner::v1::TransactionSelectorDefaultTypeInternal, begin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::spanner::v1::TransactionSelector, selector_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::spanner::v1::TransactionOptions_ReadWrite)},
  { 5, -1, sizeof(::google::spanner::v1::TransactionOptions_PartitionedDml)},
  { 10, -1, sizeof(::google::spanner::v1::TransactionOptions_ReadOnly)},
  { 22, -1, sizeof(::google::spanner::v1::TransactionOptions)},
  { 31, -1, sizeof(::google::spanner::v1::Transaction)},
  { 38, -1, sizeof(::google::spanner::v1::TransactionSelector)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::spanner::v1::_TransactionOptions_ReadWrite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::spanner::v1::_TransactionOptions_PartitionedDml_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::spanner::v1::_TransactionOptions_ReadOnly_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::spanner::v1::_TransactionOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::spanner::v1::_Transaction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::spanner::v1::_TransactionSelector_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/spanner/v1/transaction.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n#google/spanner/v1/transaction.proto\022\021g"
      "oogle.spanner.v1\032\034google/api/annotations"
      ".proto\032\036google/protobuf/duration.proto\032\037"
      "google/protobuf/timestamp.proto\"\303\004\n\022Tran"
      "sactionOptions\022E\n\nread_write\030\001 \001(\0132/.goo"
      "gle.spanner.v1.TransactionOptions.ReadWr"
      "iteH\000\022O\n\017partitioned_dml\030\003 \001(\01324.google."
      "spanner.v1.TransactionOptions.Partitione"
      "dDmlH\000\022C\n\tread_only\030\002 \001(\0132..google.spann"
      "er.v1.TransactionOptions.ReadOnlyH\000\032\013\n\tR"
      "eadWrite\032\020\n\016PartitionedDml\032\250\002\n\010ReadOnly\022"
      "\020\n\006strong\030\001 \001(\010H\000\0228\n\022min_read_timestamp\030"
      "\002 \001(\0132\032.google.protobuf.TimestampH\000\0222\n\rm"
      "ax_staleness\030\003 \001(\0132\031.google.protobuf.Dur"
      "ationH\000\0224\n\016read_timestamp\030\004 \001(\0132\032.google"
      ".protobuf.TimestampH\000\0224\n\017exact_staleness"
      "\030\005 \001(\0132\031.google.protobuf.DurationH\000\022\035\n\025r"
      "eturn_read_timestamp\030\006 \001(\010B\021\n\017timestamp_"
      "boundB\006\n\004mode\"M\n\013Transaction\022\n\n\002id\030\001 \001(\014"
      "\0222\n\016read_timestamp\030\002 \001(\0132\032.google.protob"
      "uf.Timestamp\"\244\001\n\023TransactionSelector\022;\n\n"
      "single_use\030\001 \001(\0132%.google.spanner.v1.Tra"
      "nsactionOptionsH\000\022\014\n\002id\030\002 \001(\014H\000\0226\n\005begin"
      "\030\003 \001(\0132%.google.spanner.v1.TransactionOp"
      "tionsH\000B\n\n\010selectorB\231\001\n\025com.google.spann"
      "er.v1B\020TransactionProtoP\001Z8google.golang"
      ".org/genproto/googleapis/spanner/v1;span"
      "ner\252\002\027Google.Cloud.Spanner.V1\312\002\027Google\\C"
      "loud\\Spanner\\V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1143);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/spanner/v1/transaction.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fspanner_2fv1_2ftransaction_2eproto
namespace google {
namespace spanner {
namespace v1 {

// ===================================================================

void TransactionOptions_ReadWrite::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionOptions_ReadWrite::TransactionOptions_ReadWrite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionOptions_ReadWrite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.v1.TransactionOptions.ReadWrite)
}
TransactionOptions_ReadWrite::TransactionOptions_ReadWrite(const TransactionOptions_ReadWrite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.spanner.v1.TransactionOptions.ReadWrite)
}

void TransactionOptions_ReadWrite::SharedCtor() {
}

TransactionOptions_ReadWrite::~TransactionOptions_ReadWrite() {
  // @@protoc_insertion_point(destructor:google.spanner.v1.TransactionOptions.ReadWrite)
  SharedDtor();
}

void TransactionOptions_ReadWrite::SharedDtor() {
}

void TransactionOptions_ReadWrite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransactionOptions_ReadWrite::descriptor() {
  ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionOptions_ReadWrite& TransactionOptions_ReadWrite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionOptions_ReadWrite.base);
  return *internal_default_instance();
}


void TransactionOptions_ReadWrite::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.v1.TransactionOptions.ReadWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TransactionOptions_ReadWrite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.v1.TransactionOptions.ReadWrite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.v1.TransactionOptions.ReadWrite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.v1.TransactionOptions.ReadWrite)
  return false;
#undef DO_
}

void TransactionOptions_ReadWrite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.v1.TransactionOptions.ReadWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.spanner.v1.TransactionOptions.ReadWrite)
}

::google::protobuf::uint8* TransactionOptions_ReadWrite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.v1.TransactionOptions.ReadWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.v1.TransactionOptions.ReadWrite)
  return target;
}

size_t TransactionOptions_ReadWrite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.v1.TransactionOptions.ReadWrite)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionOptions_ReadWrite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.v1.TransactionOptions.ReadWrite)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionOptions_ReadWrite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionOptions_ReadWrite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.v1.TransactionOptions.ReadWrite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.v1.TransactionOptions.ReadWrite)
    MergeFrom(*source);
  }
}

void TransactionOptions_ReadWrite::MergeFrom(const TransactionOptions_ReadWrite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.v1.TransactionOptions.ReadWrite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TransactionOptions_ReadWrite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.v1.TransactionOptions.ReadWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionOptions_ReadWrite::CopyFrom(const TransactionOptions_ReadWrite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.v1.TransactionOptions.ReadWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionOptions_ReadWrite::IsInitialized() const {
  return true;
}

void TransactionOptions_ReadWrite::Swap(TransactionOptions_ReadWrite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionOptions_ReadWrite::InternalSwap(TransactionOptions_ReadWrite* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransactionOptions_ReadWrite::GetMetadata() const {
  protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionOptions_PartitionedDml::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionOptions_PartitionedDml::TransactionOptions_PartitionedDml()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionOptions_PartitionedDml.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.v1.TransactionOptions.PartitionedDml)
}
TransactionOptions_PartitionedDml::TransactionOptions_PartitionedDml(const TransactionOptions_PartitionedDml& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.spanner.v1.TransactionOptions.PartitionedDml)
}

void TransactionOptions_PartitionedDml::SharedCtor() {
}

TransactionOptions_PartitionedDml::~TransactionOptions_PartitionedDml() {
  // @@protoc_insertion_point(destructor:google.spanner.v1.TransactionOptions.PartitionedDml)
  SharedDtor();
}

void TransactionOptions_PartitionedDml::SharedDtor() {
}

void TransactionOptions_PartitionedDml::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransactionOptions_PartitionedDml::descriptor() {
  ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionOptions_PartitionedDml& TransactionOptions_PartitionedDml::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionOptions_PartitionedDml.base);
  return *internal_default_instance();
}


void TransactionOptions_PartitionedDml::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.v1.TransactionOptions.PartitionedDml)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TransactionOptions_PartitionedDml::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.v1.TransactionOptions.PartitionedDml)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.v1.TransactionOptions.PartitionedDml)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.v1.TransactionOptions.PartitionedDml)
  return false;
#undef DO_
}

void TransactionOptions_PartitionedDml::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.v1.TransactionOptions.PartitionedDml)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.spanner.v1.TransactionOptions.PartitionedDml)
}

::google::protobuf::uint8* TransactionOptions_PartitionedDml::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.v1.TransactionOptions.PartitionedDml)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.v1.TransactionOptions.PartitionedDml)
  return target;
}

size_t TransactionOptions_PartitionedDml::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.v1.TransactionOptions.PartitionedDml)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionOptions_PartitionedDml::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.v1.TransactionOptions.PartitionedDml)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionOptions_PartitionedDml* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionOptions_PartitionedDml>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.v1.TransactionOptions.PartitionedDml)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.v1.TransactionOptions.PartitionedDml)
    MergeFrom(*source);
  }
}

void TransactionOptions_PartitionedDml::MergeFrom(const TransactionOptions_PartitionedDml& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.v1.TransactionOptions.PartitionedDml)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TransactionOptions_PartitionedDml::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.v1.TransactionOptions.PartitionedDml)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionOptions_PartitionedDml::CopyFrom(const TransactionOptions_PartitionedDml& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.v1.TransactionOptions.PartitionedDml)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionOptions_PartitionedDml::IsInitialized() const {
  return true;
}

void TransactionOptions_PartitionedDml::Swap(TransactionOptions_PartitionedDml* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionOptions_PartitionedDml::InternalSwap(TransactionOptions_PartitionedDml* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransactionOptions_PartitionedDml::GetMetadata() const {
  protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionOptions_ReadOnly::InitAsDefaultInstance() {
  ::google::spanner::v1::_TransactionOptions_ReadOnly_default_instance_.strong_ = false;
  ::google::spanner::v1::_TransactionOptions_ReadOnly_default_instance_.min_read_timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::spanner::v1::_TransactionOptions_ReadOnly_default_instance_.max_staleness_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::spanner::v1::_TransactionOptions_ReadOnly_default_instance_.read_timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::spanner::v1::_TransactionOptions_ReadOnly_default_instance_.exact_staleness_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void TransactionOptions_ReadOnly::set_allocated_min_read_timestamp(::google::protobuf::Timestamp* min_read_timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_timestamp_bound();
  if (min_read_timestamp) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(min_read_timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      min_read_timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min_read_timestamp, submessage_arena);
    }
    set_has_min_read_timestamp();
    timestamp_bound_.min_read_timestamp_ = min_read_timestamp;
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.v1.TransactionOptions.ReadOnly.min_read_timestamp)
}
void TransactionOptions_ReadOnly::clear_min_read_timestamp() {
  if (has_min_read_timestamp()) {
    delete timestamp_bound_.min_read_timestamp_;
    clear_has_timestamp_bound();
  }
}
void TransactionOptions_ReadOnly::set_allocated_max_staleness(::google::protobuf::Duration* max_staleness) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_timestamp_bound();
  if (max_staleness) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(max_staleness)->GetArena();
    if (message_arena != submessage_arena) {
      max_staleness = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_staleness, submessage_arena);
    }
    set_has_max_staleness();
    timestamp_bound_.max_staleness_ = max_staleness;
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.v1.TransactionOptions.ReadOnly.max_staleness)
}
void TransactionOptions_ReadOnly::clear_max_staleness() {
  if (has_max_staleness()) {
    delete timestamp_bound_.max_staleness_;
    clear_has_timestamp_bound();
  }
}
void TransactionOptions_ReadOnly::set_allocated_read_timestamp(::google::protobuf::Timestamp* read_timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_timestamp_bound();
  if (read_timestamp) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(read_timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      read_timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, read_timestamp, submessage_arena);
    }
    set_has_read_timestamp();
    timestamp_bound_.read_timestamp_ = read_timestamp;
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.v1.TransactionOptions.ReadOnly.read_timestamp)
}
void TransactionOptions_ReadOnly::clear_read_timestamp() {
  if (has_read_timestamp()) {
    delete timestamp_bound_.read_timestamp_;
    clear_has_timestamp_bound();
  }
}
void TransactionOptions_ReadOnly::set_allocated_exact_staleness(::google::protobuf::Duration* exact_staleness) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_timestamp_bound();
  if (exact_staleness) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(exact_staleness)->GetArena();
    if (message_arena != submessage_arena) {
      exact_staleness = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exact_staleness, submessage_arena);
    }
    set_has_exact_staleness();
    timestamp_bound_.exact_staleness_ = exact_staleness;
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.v1.TransactionOptions.ReadOnly.exact_staleness)
}
void TransactionOptions_ReadOnly::clear_exact_staleness() {
  if (has_exact_staleness()) {
    delete timestamp_bound_.exact_staleness_;
    clear_has_timestamp_bound();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionOptions_ReadOnly::kStrongFieldNumber;
const int TransactionOptions_ReadOnly::kMinReadTimestampFieldNumber;
const int TransactionOptions_ReadOnly::kMaxStalenessFieldNumber;
const int TransactionOptions_ReadOnly::kReadTimestampFieldNumber;
const int TransactionOptions_ReadOnly::kExactStalenessFieldNumber;
const int TransactionOptions_ReadOnly::kReturnReadTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionOptions_ReadOnly::TransactionOptions_ReadOnly()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionOptions_ReadOnly.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.v1.TransactionOptions.ReadOnly)
}
TransactionOptions_ReadOnly::TransactionOptions_ReadOnly(const TransactionOptions_ReadOnly& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  return_read_timestamp_ = from.return_read_timestamp_;
  clear_has_timestamp_bound();
  switch (from.timestamp_bound_case()) {
    case kStrong: {
      set_strong(from.strong());
      break;
    }
    case kMinReadTimestamp: {
      mutable_min_read_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.min_read_timestamp());
      break;
    }
    case kMaxStaleness: {
      mutable_max_staleness()->::google::protobuf::Duration::MergeFrom(from.max_staleness());
      break;
    }
    case kReadTimestamp: {
      mutable_read_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.read_timestamp());
      break;
    }
    case kExactStaleness: {
      mutable_exact_staleness()->::google::protobuf::Duration::MergeFrom(from.exact_staleness());
      break;
    }
    case TIMESTAMP_BOUND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.v1.TransactionOptions.ReadOnly)
}

void TransactionOptions_ReadOnly::SharedCtor() {
  return_read_timestamp_ = false;
  clear_has_timestamp_bound();
}

TransactionOptions_ReadOnly::~TransactionOptions_ReadOnly() {
  // @@protoc_insertion_point(destructor:google.spanner.v1.TransactionOptions.ReadOnly)
  SharedDtor();
}

void TransactionOptions_ReadOnly::SharedDtor() {
  if (has_timestamp_bound()) {
    clear_timestamp_bound();
  }
}

void TransactionOptions_ReadOnly::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransactionOptions_ReadOnly::descriptor() {
  ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionOptions_ReadOnly& TransactionOptions_ReadOnly::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionOptions_ReadOnly.base);
  return *internal_default_instance();
}


void TransactionOptions_ReadOnly::clear_timestamp_bound() {
// @@protoc_insertion_point(one_of_clear_start:google.spanner.v1.TransactionOptions.ReadOnly)
  switch (timestamp_bound_case()) {
    case kStrong: {
      // No need to clear
      break;
    }
    case kMinReadTimestamp: {
      delete timestamp_bound_.min_read_timestamp_;
      break;
    }
    case kMaxStaleness: {
      delete timestamp_bound_.max_staleness_;
      break;
    }
    case kReadTimestamp: {
      delete timestamp_bound_.read_timestamp_;
      break;
    }
    case kExactStaleness: {
      delete timestamp_bound_.exact_staleness_;
      break;
    }
    case TIMESTAMP_BOUND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TIMESTAMP_BOUND_NOT_SET;
}


void TransactionOptions_ReadOnly::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.v1.TransactionOptions.ReadOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_read_timestamp_ = false;
  clear_timestamp_bound();
  _internal_metadata_.Clear();
}

bool TransactionOptions_ReadOnly::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.v1.TransactionOptions.ReadOnly)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool strong = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_timestamp_bound();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &timestamp_bound_.strong_)));
          set_has_strong();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp min_read_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_read_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration max_staleness = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_staleness()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp read_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration exact_staleness = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exact_staleness()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool return_read_timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_read_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.v1.TransactionOptions.ReadOnly)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.v1.TransactionOptions.ReadOnly)
  return false;
#undef DO_
}

void TransactionOptions_ReadOnly::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.v1.TransactionOptions.ReadOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool strong = 1;
  if (has_strong()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->strong(), output);
  }

  // .google.protobuf.Timestamp min_read_timestamp = 2;
  if (has_min_read_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_min_read_timestamp(), output);
  }

  // .google.protobuf.Duration max_staleness = 3;
  if (has_max_staleness()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_max_staleness(), output);
  }

  // .google.protobuf.Timestamp read_timestamp = 4;
  if (has_read_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_read_timestamp(), output);
  }

  // .google.protobuf.Duration exact_staleness = 5;
  if (has_exact_staleness()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_exact_staleness(), output);
  }

  // bool return_read_timestamp = 6;
  if (this->return_read_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->return_read_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.spanner.v1.TransactionOptions.ReadOnly)
}

::google::protobuf::uint8* TransactionOptions_ReadOnly::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.v1.TransactionOptions.ReadOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool strong = 1;
  if (has_strong()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->strong(), target);
  }

  // .google.protobuf.Timestamp min_read_timestamp = 2;
  if (has_min_read_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_min_read_timestamp(), deterministic, target);
  }

  // .google.protobuf.Duration max_staleness = 3;
  if (has_max_staleness()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_max_staleness(), deterministic, target);
  }

  // .google.protobuf.Timestamp read_timestamp = 4;
  if (has_read_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_read_timestamp(), deterministic, target);
  }

  // .google.protobuf.Duration exact_staleness = 5;
  if (has_exact_staleness()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_exact_staleness(), deterministic, target);
  }

  // bool return_read_timestamp = 6;
  if (this->return_read_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->return_read_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.v1.TransactionOptions.ReadOnly)
  return target;
}

size_t TransactionOptions_ReadOnly::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.v1.TransactionOptions.ReadOnly)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool return_read_timestamp = 6;
  if (this->return_read_timestamp() != 0) {
    total_size += 1 + 1;
  }

  switch (timestamp_bound_case()) {
    // bool strong = 1;
    case kStrong: {
      total_size += 1 + 1;
      break;
    }
    // .google.protobuf.Timestamp min_read_timestamp = 2;
    case kMinReadTimestamp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *timestamp_bound_.min_read_timestamp_);
      break;
    }
    // .google.protobuf.Duration max_staleness = 3;
    case kMaxStaleness: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *timestamp_bound_.max_staleness_);
      break;
    }
    // .google.protobuf.Timestamp read_timestamp = 4;
    case kReadTimestamp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *timestamp_bound_.read_timestamp_);
      break;
    }
    // .google.protobuf.Duration exact_staleness = 5;
    case kExactStaleness: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *timestamp_bound_.exact_staleness_);
      break;
    }
    case TIMESTAMP_BOUND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionOptions_ReadOnly::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.v1.TransactionOptions.ReadOnly)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionOptions_ReadOnly* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionOptions_ReadOnly>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.v1.TransactionOptions.ReadOnly)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.v1.TransactionOptions.ReadOnly)
    MergeFrom(*source);
  }
}

void TransactionOptions_ReadOnly::MergeFrom(const TransactionOptions_ReadOnly& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.v1.TransactionOptions.ReadOnly)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.return_read_timestamp() != 0) {
    set_return_read_timestamp(from.return_read_timestamp());
  }
  switch (from.timestamp_bound_case()) {
    case kStrong: {
      set_strong(from.strong());
      break;
    }
    case kMinReadTimestamp: {
      mutable_min_read_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.min_read_timestamp());
      break;
    }
    case kMaxStaleness: {
      mutable_max_staleness()->::google::protobuf::Duration::MergeFrom(from.max_staleness());
      break;
    }
    case kReadTimestamp: {
      mutable_read_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.read_timestamp());
      break;
    }
    case kExactStaleness: {
      mutable_exact_staleness()->::google::protobuf::Duration::MergeFrom(from.exact_staleness());
      break;
    }
    case TIMESTAMP_BOUND_NOT_SET: {
      break;
    }
  }
}

void TransactionOptions_ReadOnly::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.v1.TransactionOptions.ReadOnly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionOptions_ReadOnly::CopyFrom(const TransactionOptions_ReadOnly& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.v1.TransactionOptions.ReadOnly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionOptions_ReadOnly::IsInitialized() const {
  return true;
}

void TransactionOptions_ReadOnly::Swap(TransactionOptions_ReadOnly* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionOptions_ReadOnly::InternalSwap(TransactionOptions_ReadOnly* other) {
  using std::swap;
  swap(return_read_timestamp_, other->return_read_timestamp_);
  swap(timestamp_bound_, other->timestamp_bound_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransactionOptions_ReadOnly::GetMetadata() const {
  protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionOptions::InitAsDefaultInstance() {
  ::google::spanner::v1::_TransactionOptions_default_instance_.read_write_ = const_cast< ::google::spanner::v1::TransactionOptions_ReadWrite*>(
      ::google::spanner::v1::TransactionOptions_ReadWrite::internal_default_instance());
  ::google::spanner::v1::_TransactionOptions_default_instance_.partitioned_dml_ = const_cast< ::google::spanner::v1::TransactionOptions_PartitionedDml*>(
      ::google::spanner::v1::TransactionOptions_PartitionedDml::internal_default_instance());
  ::google::spanner::v1::_TransactionOptions_default_instance_.read_only_ = const_cast< ::google::spanner::v1::TransactionOptions_ReadOnly*>(
      ::google::spanner::v1::TransactionOptions_ReadOnly::internal_default_instance());
}
void TransactionOptions::set_allocated_read_write(::google::spanner::v1::TransactionOptions_ReadWrite* read_write) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mode();
  if (read_write) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      read_write = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, read_write, submessage_arena);
    }
    set_has_read_write();
    mode_.read_write_ = read_write;
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.v1.TransactionOptions.read_write)
}
void TransactionOptions::set_allocated_partitioned_dml(::google::spanner::v1::TransactionOptions_PartitionedDml* partitioned_dml) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mode();
  if (partitioned_dml) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      partitioned_dml = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, partitioned_dml, submessage_arena);
    }
    set_has_partitioned_dml();
    mode_.partitioned_dml_ = partitioned_dml;
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.v1.TransactionOptions.partitioned_dml)
}
void TransactionOptions::set_allocated_read_only(::google::spanner::v1::TransactionOptions_ReadOnly* read_only) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mode();
  if (read_only) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      read_only = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, read_only, submessage_arena);
    }
    set_has_read_only();
    mode_.read_only_ = read_only;
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.v1.TransactionOptions.read_only)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionOptions::kReadWriteFieldNumber;
const int TransactionOptions::kPartitionedDmlFieldNumber;
const int TransactionOptions::kReadOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionOptions::TransactionOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.v1.TransactionOptions)
}
TransactionOptions::TransactionOptions(const TransactionOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_mode();
  switch (from.mode_case()) {
    case kReadWrite: {
      mutable_read_write()->::google::spanner::v1::TransactionOptions_ReadWrite::MergeFrom(from.read_write());
      break;
    }
    case kPartitionedDml: {
      mutable_partitioned_dml()->::google::spanner::v1::TransactionOptions_PartitionedDml::MergeFrom(from.partitioned_dml());
      break;
    }
    case kReadOnly: {
      mutable_read_only()->::google::spanner::v1::TransactionOptions_ReadOnly::MergeFrom(from.read_only());
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.v1.TransactionOptions)
}

void TransactionOptions::SharedCtor() {
  clear_has_mode();
}

TransactionOptions::~TransactionOptions() {
  // @@protoc_insertion_point(destructor:google.spanner.v1.TransactionOptions)
  SharedDtor();
}

void TransactionOptions::SharedDtor() {
  if (has_mode()) {
    clear_mode();
  }
}

void TransactionOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransactionOptions::descriptor() {
  ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionOptions& TransactionOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionOptions.base);
  return *internal_default_instance();
}


void TransactionOptions::clear_mode() {
// @@protoc_insertion_point(one_of_clear_start:google.spanner.v1.TransactionOptions)
  switch (mode_case()) {
    case kReadWrite: {
      delete mode_.read_write_;
      break;
    }
    case kPartitionedDml: {
      delete mode_.partitioned_dml_;
      break;
    }
    case kReadOnly: {
      delete mode_.read_only_;
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MODE_NOT_SET;
}


void TransactionOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.v1.TransactionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_mode();
  _internal_metadata_.Clear();
}

bool TransactionOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.v1.TransactionOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.spanner.v1.TransactionOptions.ReadWrite read_write = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_write()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.spanner.v1.TransactionOptions.ReadOnly read_only = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_only()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.spanner.v1.TransactionOptions.PartitionedDml partitioned_dml = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_partitioned_dml()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.v1.TransactionOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.v1.TransactionOptions)
  return false;
#undef DO_
}

void TransactionOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.v1.TransactionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.spanner.v1.TransactionOptions.ReadWrite read_write = 1;
  if (has_read_write()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_read_write(), output);
  }

  // .google.spanner.v1.TransactionOptions.ReadOnly read_only = 2;
  if (has_read_only()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_read_only(), output);
  }

  // .google.spanner.v1.TransactionOptions.PartitionedDml partitioned_dml = 3;
  if (has_partitioned_dml()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_partitioned_dml(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.spanner.v1.TransactionOptions)
}

::google::protobuf::uint8* TransactionOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.v1.TransactionOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.spanner.v1.TransactionOptions.ReadWrite read_write = 1;
  if (has_read_write()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_read_write(), deterministic, target);
  }

  // .google.spanner.v1.TransactionOptions.ReadOnly read_only = 2;
  if (has_read_only()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_read_only(), deterministic, target);
  }

  // .google.spanner.v1.TransactionOptions.PartitionedDml partitioned_dml = 3;
  if (has_partitioned_dml()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_partitioned_dml(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.v1.TransactionOptions)
  return target;
}

size_t TransactionOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.v1.TransactionOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (mode_case()) {
    // .google.spanner.v1.TransactionOptions.ReadWrite read_write = 1;
    case kReadWrite: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mode_.read_write_);
      break;
    }
    // .google.spanner.v1.TransactionOptions.PartitionedDml partitioned_dml = 3;
    case kPartitionedDml: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mode_.partitioned_dml_);
      break;
    }
    // .google.spanner.v1.TransactionOptions.ReadOnly read_only = 2;
    case kReadOnly: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mode_.read_only_);
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.v1.TransactionOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.v1.TransactionOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.v1.TransactionOptions)
    MergeFrom(*source);
  }
}

void TransactionOptions::MergeFrom(const TransactionOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.v1.TransactionOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.mode_case()) {
    case kReadWrite: {
      mutable_read_write()->::google::spanner::v1::TransactionOptions_ReadWrite::MergeFrom(from.read_write());
      break;
    }
    case kPartitionedDml: {
      mutable_partitioned_dml()->::google::spanner::v1::TransactionOptions_PartitionedDml::MergeFrom(from.partitioned_dml());
      break;
    }
    case kReadOnly: {
      mutable_read_only()->::google::spanner::v1::TransactionOptions_ReadOnly::MergeFrom(from.read_only());
      break;
    }
    case MODE_NOT_SET: {
      break;
    }
  }
}

void TransactionOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.v1.TransactionOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionOptions::CopyFrom(const TransactionOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.v1.TransactionOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionOptions::IsInitialized() const {
  return true;
}

void TransactionOptions::Swap(TransactionOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionOptions::InternalSwap(TransactionOptions* other) {
  using std::swap;
  swap(mode_, other->mode_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransactionOptions::GetMetadata() const {
  protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Transaction::InitAsDefaultInstance() {
  ::google::spanner::v1::_Transaction_default_instance_._instance.get_mutable()->read_timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Transaction::clear_read_timestamp() {
  if (GetArenaNoVirtual() == NULL && read_timestamp_ != NULL) {
    delete read_timestamp_;
  }
  read_timestamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transaction::kIdFieldNumber;
const int Transaction::kReadTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transaction::Transaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_Transaction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.v1.Transaction)
}
Transaction::Transaction(const Transaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_read_timestamp()) {
    read_timestamp_ = new ::google::protobuf::Timestamp(*from.read_timestamp_);
  } else {
    read_timestamp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.v1.Transaction)
}

void Transaction::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  read_timestamp_ = NULL;
}

Transaction::~Transaction() {
  // @@protoc_insertion_point(destructor:google.spanner.v1.Transaction)
  SharedDtor();
}

void Transaction::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete read_timestamp_;
}

void Transaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Transaction::descriptor() {
  ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transaction& Transaction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_Transaction.base);
  return *internal_default_instance();
}


void Transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.v1.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && read_timestamp_ != NULL) {
    delete read_timestamp_;
  }
  read_timestamp_ = NULL;
  _internal_metadata_.Clear();
}

bool Transaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.v1.Transaction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp read_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.v1.Transaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.v1.Transaction)
  return false;
#undef DO_
}

void Transaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.v1.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->id(), output);
  }

  // .google.protobuf.Timestamp read_timestamp = 2;
  if (this->has_read_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_read_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.spanner.v1.Transaction)
}

::google::protobuf::uint8* Transaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.v1.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (this->id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->id(), target);
  }

  // .google.protobuf.Timestamp read_timestamp = 2;
  if (this->has_read_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_read_timestamp(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.v1.Transaction)
  return target;
}

size_t Transaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.v1.Transaction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->id());
  }

  // .google.protobuf.Timestamp read_timestamp = 2;
  if (this->has_read_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *read_timestamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Transaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.v1.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  const Transaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.v1.Transaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.v1.Transaction)
    MergeFrom(*source);
  }
}

void Transaction::MergeFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.v1.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_read_timestamp()) {
    mutable_read_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.read_timestamp());
  }
}

void Transaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.v1.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transaction::CopyFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.v1.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transaction::IsInitialized() const {
  return true;
}

void Transaction::Swap(Transaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transaction::InternalSwap(Transaction* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(read_timestamp_, other->read_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Transaction::GetMetadata() const {
  protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionSelector::InitAsDefaultInstance() {
  ::google::spanner::v1::_TransactionSelector_default_instance_.single_use_ = const_cast< ::google::spanner::v1::TransactionOptions*>(
      ::google::spanner::v1::TransactionOptions::internal_default_instance());
  ::google::spanner::v1::_TransactionSelector_default_instance_.id_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::spanner::v1::_TransactionSelector_default_instance_.begin_ = const_cast< ::google::spanner::v1::TransactionOptions*>(
      ::google::spanner::v1::TransactionOptions::internal_default_instance());
}
void TransactionSelector::set_allocated_single_use(::google::spanner::v1::TransactionOptions* single_use) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_selector();
  if (single_use) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      single_use = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, single_use, submessage_arena);
    }
    set_has_single_use();
    selector_.single_use_ = single_use;
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.v1.TransactionSelector.single_use)
}
void TransactionSelector::set_allocated_begin(::google::spanner::v1::TransactionOptions* begin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_selector();
  if (begin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      begin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, begin, submessage_arena);
    }
    set_has_begin();
    selector_.begin_ = begin;
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.v1.TransactionSelector.begin)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionSelector::kSingleUseFieldNumber;
const int TransactionSelector::kIdFieldNumber;
const int TransactionSelector::kBeginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionSelector::TransactionSelector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionSelector.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.v1.TransactionSelector)
}
TransactionSelector::TransactionSelector(const TransactionSelector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_selector();
  switch (from.selector_case()) {
    case kSingleUse: {
      mutable_single_use()->::google::spanner::v1::TransactionOptions::MergeFrom(from.single_use());
      break;
    }
    case kId: {
      set_id(from.id());
      break;
    }
    case kBegin: {
      mutable_begin()->::google::spanner::v1::TransactionOptions::MergeFrom(from.begin());
      break;
    }
    case SELECTOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.v1.TransactionSelector)
}

void TransactionSelector::SharedCtor() {
  clear_has_selector();
}

TransactionSelector::~TransactionSelector() {
  // @@protoc_insertion_point(destructor:google.spanner.v1.TransactionSelector)
  SharedDtor();
}

void TransactionSelector::SharedDtor() {
  if (has_selector()) {
    clear_selector();
  }
}

void TransactionSelector::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransactionSelector::descriptor() {
  ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionSelector& TransactionSelector::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::scc_info_TransactionSelector.base);
  return *internal_default_instance();
}


void TransactionSelector::clear_selector() {
// @@protoc_insertion_point(one_of_clear_start:google.spanner.v1.TransactionSelector)
  switch (selector_case()) {
    case kSingleUse: {
      delete selector_.single_use_;
      break;
    }
    case kId: {
      selector_.id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBegin: {
      delete selector_.begin_;
      break;
    }
    case SELECTOR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SELECTOR_NOT_SET;
}


void TransactionSelector::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.v1.TransactionSelector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_selector();
  _internal_metadata_.Clear();
}

bool TransactionSelector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.v1.TransactionSelector)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.spanner.v1.TransactionOptions single_use = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_single_use()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.spanner.v1.TransactionOptions begin = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_begin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.v1.TransactionSelector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.v1.TransactionSelector)
  return false;
#undef DO_
}

void TransactionSelector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.v1.TransactionSelector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.spanner.v1.TransactionOptions single_use = 1;
  if (has_single_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_single_use(), output);
  }

  // bytes id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->id(), output);
  }

  // .google.spanner.v1.TransactionOptions begin = 3;
  if (has_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_begin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.spanner.v1.TransactionSelector)
}

::google::protobuf::uint8* TransactionSelector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.v1.TransactionSelector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.spanner.v1.TransactionOptions single_use = 1;
  if (has_single_use()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_single_use(), deterministic, target);
  }

  // bytes id = 2;
  if (has_id()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->id(), target);
  }

  // .google.spanner.v1.TransactionOptions begin = 3;
  if (has_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_begin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.v1.TransactionSelector)
  return target;
}

size_t TransactionSelector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.v1.TransactionSelector)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (selector_case()) {
    // .google.spanner.v1.TransactionOptions single_use = 1;
    case kSingleUse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *selector_.single_use_);
      break;
    }
    // bytes id = 2;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id());
      break;
    }
    // .google.spanner.v1.TransactionOptions begin = 3;
    case kBegin: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *selector_.begin_);
      break;
    }
    case SELECTOR_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionSelector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.v1.TransactionSelector)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionSelector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionSelector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.v1.TransactionSelector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.v1.TransactionSelector)
    MergeFrom(*source);
  }
}

void TransactionSelector::MergeFrom(const TransactionSelector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.v1.TransactionSelector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.selector_case()) {
    case kSingleUse: {
      mutable_single_use()->::google::spanner::v1::TransactionOptions::MergeFrom(from.single_use());
      break;
    }
    case kId: {
      set_id(from.id());
      break;
    }
    case kBegin: {
      mutable_begin()->::google::spanner::v1::TransactionOptions::MergeFrom(from.begin());
      break;
    }
    case SELECTOR_NOT_SET: {
      break;
    }
  }
}

void TransactionSelector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.v1.TransactionSelector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionSelector::CopyFrom(const TransactionSelector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.v1.TransactionSelector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionSelector::IsInitialized() const {
  return true;
}

void TransactionSelector::Swap(TransactionSelector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionSelector::InternalSwap(TransactionSelector* other) {
  using std::swap;
  swap(selector_, other->selector_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransactionSelector::GetMetadata() const {
  protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fspanner_2fv1_2ftransaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace spanner
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::spanner::v1::TransactionOptions_ReadWrite* Arena::CreateMaybeMessage< ::google::spanner::v1::TransactionOptions_ReadWrite >(Arena* arena) {
  return Arena::CreateInternal< ::google::spanner::v1::TransactionOptions_ReadWrite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::spanner::v1::TransactionOptions_PartitionedDml* Arena::CreateMaybeMessage< ::google::spanner::v1::TransactionOptions_PartitionedDml >(Arena* arena) {
  return Arena::CreateInternal< ::google::spanner::v1::TransactionOptions_PartitionedDml >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::spanner::v1::TransactionOptions_ReadOnly* Arena::CreateMaybeMessage< ::google::spanner::v1::TransactionOptions_ReadOnly >(Arena* arena) {
  return Arena::CreateInternal< ::google::spanner::v1::TransactionOptions_ReadOnly >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::spanner::v1::TransactionOptions* Arena::CreateMaybeMessage< ::google::spanner::v1::TransactionOptions >(Arena* arena) {
  return Arena::CreateInternal< ::google::spanner::v1::TransactionOptions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::spanner::v1::Transaction* Arena::CreateMaybeMessage< ::google::spanner::v1::Transaction >(Arena* arena) {
  return Arena::CreateInternal< ::google::spanner::v1::Transaction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::spanner::v1::TransactionSelector* Arena::CreateMaybeMessage< ::google::spanner::v1::TransactionSelector >(Arena* arena) {
  return Arena::CreateInternal< ::google::spanner::v1::TransactionSelector >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
