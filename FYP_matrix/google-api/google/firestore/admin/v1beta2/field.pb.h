// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firestore/admin/v1beta2/field.proto

#ifndef PROTOBUF_INCLUDED_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto
#define PROTOBUF_INCLUDED_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/firestore/admin/v1beta2/index.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto 

namespace protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto
namespace google {
namespace firestore {
namespace admin {
namespace v1beta2 {
class Field;
class FieldDefaultTypeInternal;
extern FieldDefaultTypeInternal _Field_default_instance_;
class Field_IndexConfig;
class Field_IndexConfigDefaultTypeInternal;
extern Field_IndexConfigDefaultTypeInternal _Field_IndexConfig_default_instance_;
}  // namespace v1beta2
}  // namespace admin
}  // namespace firestore
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::firestore::admin::v1beta2::Field* Arena::CreateMaybeMessage<::google::firestore::admin::v1beta2::Field>(Arena*);
template<> ::google::firestore::admin::v1beta2::Field_IndexConfig* Arena::CreateMaybeMessage<::google::firestore::admin::v1beta2::Field_IndexConfig>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace firestore {
namespace admin {
namespace v1beta2 {

// ===================================================================

class Field_IndexConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta2.Field.IndexConfig) */ {
 public:
  Field_IndexConfig();
  virtual ~Field_IndexConfig();

  Field_IndexConfig(const Field_IndexConfig& from);

  inline Field_IndexConfig& operator=(const Field_IndexConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Field_IndexConfig(Field_IndexConfig&& from) noexcept
    : Field_IndexConfig() {
    *this = ::std::move(from);
  }

  inline Field_IndexConfig& operator=(Field_IndexConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Field_IndexConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Field_IndexConfig* internal_default_instance() {
    return reinterpret_cast<const Field_IndexConfig*>(
               &_Field_IndexConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Field_IndexConfig* other);
  friend void swap(Field_IndexConfig& a, Field_IndexConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Field_IndexConfig* New() const final {
    return CreateMaybeMessage<Field_IndexConfig>(NULL);
  }

  Field_IndexConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Field_IndexConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Field_IndexConfig& from);
  void MergeFrom(const Field_IndexConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Field_IndexConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.firestore.admin.v1beta2.Index indexes = 1;
  int indexes_size() const;
  void clear_indexes();
  static const int kIndexesFieldNumber = 1;
  ::google::firestore::admin::v1beta2::Index* mutable_indexes(int index);
  ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::Index >*
      mutable_indexes();
  const ::google::firestore::admin::v1beta2::Index& indexes(int index) const;
  ::google::firestore::admin::v1beta2::Index* add_indexes();
  const ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::Index >&
      indexes() const;

  // string ancestor_field = 3;
  void clear_ancestor_field();
  static const int kAncestorFieldFieldNumber = 3;
  const ::std::string& ancestor_field() const;
  void set_ancestor_field(const ::std::string& value);
  #if LANG_CXX11
  void set_ancestor_field(::std::string&& value);
  #endif
  void set_ancestor_field(const char* value);
  void set_ancestor_field(const char* value, size_t size);
  ::std::string* mutable_ancestor_field();
  ::std::string* release_ancestor_field();
  void set_allocated_ancestor_field(::std::string* ancestor_field);

  // bool uses_ancestor_config = 2;
  void clear_uses_ancestor_config();
  static const int kUsesAncestorConfigFieldNumber = 2;
  bool uses_ancestor_config() const;
  void set_uses_ancestor_config(bool value);

  // bool reverting = 4;
  void clear_reverting();
  static const int kRevertingFieldNumber = 4;
  bool reverting() const;
  void set_reverting(bool value);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta2.Field.IndexConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::Index > indexes_;
  ::google::protobuf::internal::ArenaStringPtr ancestor_field_;
  bool uses_ancestor_config_;
  bool reverting_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Field : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta2.Field) */ {
 public:
  Field();
  virtual ~Field();

  Field(const Field& from);

  inline Field& operator=(const Field& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Field(Field&& from) noexcept
    : Field() {
    *this = ::std::move(from);
  }

  inline Field& operator=(Field&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Field& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Field* internal_default_instance() {
    return reinterpret_cast<const Field*>(
               &_Field_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Field* other);
  friend void swap(Field& a, Field& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Field* New() const final {
    return CreateMaybeMessage<Field>(NULL);
  }

  Field* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Field>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Field& from);
  void MergeFrom(const Field& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Field* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Field_IndexConfig IndexConfig;

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.firestore.admin.v1beta2.Field.IndexConfig index_config = 2;
  bool has_index_config() const;
  void clear_index_config();
  static const int kIndexConfigFieldNumber = 2;
  private:
  const ::google::firestore::admin::v1beta2::Field_IndexConfig& _internal_index_config() const;
  public:
  const ::google::firestore::admin::v1beta2::Field_IndexConfig& index_config() const;
  ::google::firestore::admin::v1beta2::Field_IndexConfig* release_index_config();
  ::google::firestore::admin::v1beta2::Field_IndexConfig* mutable_index_config();
  void set_allocated_index_config(::google::firestore::admin::v1beta2::Field_IndexConfig* index_config);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta2.Field)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::firestore::admin::v1beta2::Field_IndexConfig* index_config_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Field_IndexConfig

// repeated .google.firestore.admin.v1beta2.Index indexes = 1;
inline int Field_IndexConfig::indexes_size() const {
  return indexes_.size();
}
inline ::google::firestore::admin::v1beta2::Index* Field_IndexConfig::mutable_indexes(int index) {
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.Field.IndexConfig.indexes)
  return indexes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::Index >*
Field_IndexConfig::mutable_indexes() {
  // @@protoc_insertion_point(field_mutable_list:google.firestore.admin.v1beta2.Field.IndexConfig.indexes)
  return &indexes_;
}
inline const ::google::firestore::admin::v1beta2::Index& Field_IndexConfig::indexes(int index) const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.Field.IndexConfig.indexes)
  return indexes_.Get(index);
}
inline ::google::firestore::admin::v1beta2::Index* Field_IndexConfig::add_indexes() {
  // @@protoc_insertion_point(field_add:google.firestore.admin.v1beta2.Field.IndexConfig.indexes)
  return indexes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::Index >&
Field_IndexConfig::indexes() const {
  // @@protoc_insertion_point(field_list:google.firestore.admin.v1beta2.Field.IndexConfig.indexes)
  return indexes_;
}

// bool uses_ancestor_config = 2;
inline void Field_IndexConfig::clear_uses_ancestor_config() {
  uses_ancestor_config_ = false;
}
inline bool Field_IndexConfig::uses_ancestor_config() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.Field.IndexConfig.uses_ancestor_config)
  return uses_ancestor_config_;
}
inline void Field_IndexConfig::set_uses_ancestor_config(bool value) {
  
  uses_ancestor_config_ = value;
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.Field.IndexConfig.uses_ancestor_config)
}

// string ancestor_field = 3;
inline void Field_IndexConfig::clear_ancestor_field() {
  ancestor_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Field_IndexConfig::ancestor_field() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.Field.IndexConfig.ancestor_field)
  return ancestor_field_.GetNoArena();
}
inline void Field_IndexConfig::set_ancestor_field(const ::std::string& value) {
  
  ancestor_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.Field.IndexConfig.ancestor_field)
}
#if LANG_CXX11
inline void Field_IndexConfig::set_ancestor_field(::std::string&& value) {
  
  ancestor_field_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta2.Field.IndexConfig.ancestor_field)
}
#endif
inline void Field_IndexConfig::set_ancestor_field(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ancestor_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta2.Field.IndexConfig.ancestor_field)
}
inline void Field_IndexConfig::set_ancestor_field(const char* value, size_t size) {
  
  ancestor_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta2.Field.IndexConfig.ancestor_field)
}
inline ::std::string* Field_IndexConfig::mutable_ancestor_field() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.Field.IndexConfig.ancestor_field)
  return ancestor_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Field_IndexConfig::release_ancestor_field() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.Field.IndexConfig.ancestor_field)
  
  return ancestor_field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Field_IndexConfig::set_allocated_ancestor_field(::std::string* ancestor_field) {
  if (ancestor_field != NULL) {
    
  } else {
    
  }
  ancestor_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ancestor_field);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.Field.IndexConfig.ancestor_field)
}

// bool reverting = 4;
inline void Field_IndexConfig::clear_reverting() {
  reverting_ = false;
}
inline bool Field_IndexConfig::reverting() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.Field.IndexConfig.reverting)
  return reverting_;
}
inline void Field_IndexConfig::set_reverting(bool value) {
  
  reverting_ = value;
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.Field.IndexConfig.reverting)
}

// -------------------------------------------------------------------

// Field

// string name = 1;
inline void Field::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Field::name() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.Field.name)
  return name_.GetNoArena();
}
inline void Field::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.Field.name)
}
#if LANG_CXX11
inline void Field::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta2.Field.name)
}
#endif
inline void Field::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta2.Field.name)
}
inline void Field::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta2.Field.name)
}
inline ::std::string* Field::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.Field.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Field::release_name() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.Field.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Field::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.Field.name)
}

// .google.firestore.admin.v1beta2.Field.IndexConfig index_config = 2;
inline bool Field::has_index_config() const {
  return this != internal_default_instance() && index_config_ != NULL;
}
inline void Field::clear_index_config() {
  if (GetArenaNoVirtual() == NULL && index_config_ != NULL) {
    delete index_config_;
  }
  index_config_ = NULL;
}
inline const ::google::firestore::admin::v1beta2::Field_IndexConfig& Field::_internal_index_config() const {
  return *index_config_;
}
inline const ::google::firestore::admin::v1beta2::Field_IndexConfig& Field::index_config() const {
  const ::google::firestore::admin::v1beta2::Field_IndexConfig* p = index_config_;
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.Field.index_config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::firestore::admin::v1beta2::Field_IndexConfig*>(
      &::google::firestore::admin::v1beta2::_Field_IndexConfig_default_instance_);
}
inline ::google::firestore::admin::v1beta2::Field_IndexConfig* Field::release_index_config() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.Field.index_config)
  
  ::google::firestore::admin::v1beta2::Field_IndexConfig* temp = index_config_;
  index_config_ = NULL;
  return temp;
}
inline ::google::firestore::admin::v1beta2::Field_IndexConfig* Field::mutable_index_config() {
  
  if (index_config_ == NULL) {
    auto* p = CreateMaybeMessage<::google::firestore::admin::v1beta2::Field_IndexConfig>(GetArenaNoVirtual());
    index_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.Field.index_config)
  return index_config_;
}
inline void Field::set_allocated_index_config(::google::firestore::admin::v1beta2::Field_IndexConfig* index_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete index_config_;
  }
  if (index_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      index_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, index_config, submessage_arena);
    }
    
  } else {
    
  }
  index_config_ = index_config;
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.Field.index_config)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta2
}  // namespace admin
}  // namespace firestore
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto
