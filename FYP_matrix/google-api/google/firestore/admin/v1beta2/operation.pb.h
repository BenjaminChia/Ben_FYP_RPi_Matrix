// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firestore/admin/v1beta2/operation.proto

#ifndef PROTOBUF_INCLUDED_google_2ffirestore_2fadmin_2fv1beta2_2foperation_2eproto
#define PROTOBUF_INCLUDED_google_2ffirestore_2fadmin_2fv1beta2_2foperation_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/firestore/admin/v1beta2/index.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2ffirestore_2fadmin_2fv1beta2_2foperation_2eproto 

namespace protobuf_google_2ffirestore_2fadmin_2fv1beta2_2foperation_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2ffirestore_2fadmin_2fv1beta2_2foperation_2eproto
namespace google {
namespace firestore {
namespace admin {
namespace v1beta2 {
class FieldOperationMetadata;
class FieldOperationMetadataDefaultTypeInternal;
extern FieldOperationMetadataDefaultTypeInternal _FieldOperationMetadata_default_instance_;
class FieldOperationMetadata_IndexConfigDelta;
class FieldOperationMetadata_IndexConfigDeltaDefaultTypeInternal;
extern FieldOperationMetadata_IndexConfigDeltaDefaultTypeInternal _FieldOperationMetadata_IndexConfigDelta_default_instance_;
class Progress;
class ProgressDefaultTypeInternal;
extern ProgressDefaultTypeInternal _Progress_default_instance_;
}  // namespace v1beta2
}  // namespace admin
}  // namespace firestore
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::firestore::admin::v1beta2::FieldOperationMetadata* Arena::CreateMaybeMessage<::google::firestore::admin::v1beta2::FieldOperationMetadata>(Arena*);
template<> ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta* Arena::CreateMaybeMessage<::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta>(Arena*);
template<> ::google::firestore::admin::v1beta2::Progress* Arena::CreateMaybeMessage<::google::firestore::admin::v1beta2::Progress>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace firestore {
namespace admin {
namespace v1beta2 {

enum FieldOperationMetadata_IndexConfigDelta_ChangeType {
  FieldOperationMetadata_IndexConfigDelta_ChangeType_CHANGE_TYPE_UNSPECIFIED = 0,
  FieldOperationMetadata_IndexConfigDelta_ChangeType_ADD = 1,
  FieldOperationMetadata_IndexConfigDelta_ChangeType_REMOVE = 2,
  FieldOperationMetadata_IndexConfigDelta_ChangeType_FieldOperationMetadata_IndexConfigDelta_ChangeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FieldOperationMetadata_IndexConfigDelta_ChangeType_FieldOperationMetadata_IndexConfigDelta_ChangeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FieldOperationMetadata_IndexConfigDelta_ChangeType_IsValid(int value);
const FieldOperationMetadata_IndexConfigDelta_ChangeType FieldOperationMetadata_IndexConfigDelta_ChangeType_ChangeType_MIN = FieldOperationMetadata_IndexConfigDelta_ChangeType_CHANGE_TYPE_UNSPECIFIED;
const FieldOperationMetadata_IndexConfigDelta_ChangeType FieldOperationMetadata_IndexConfigDelta_ChangeType_ChangeType_MAX = FieldOperationMetadata_IndexConfigDelta_ChangeType_REMOVE;
const int FieldOperationMetadata_IndexConfigDelta_ChangeType_ChangeType_ARRAYSIZE = FieldOperationMetadata_IndexConfigDelta_ChangeType_ChangeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FieldOperationMetadata_IndexConfigDelta_ChangeType_descriptor();
inline const ::std::string& FieldOperationMetadata_IndexConfigDelta_ChangeType_Name(FieldOperationMetadata_IndexConfigDelta_ChangeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FieldOperationMetadata_IndexConfigDelta_ChangeType_descriptor(), value);
}
inline bool FieldOperationMetadata_IndexConfigDelta_ChangeType_Parse(
    const ::std::string& name, FieldOperationMetadata_IndexConfigDelta_ChangeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FieldOperationMetadata_IndexConfigDelta_ChangeType>(
    FieldOperationMetadata_IndexConfigDelta_ChangeType_descriptor(), name, value);
}
enum OperationState {
  OPERATION_STATE_UNSPECIFIED = 0,
  INITIALIZING = 1,
  PROCESSING = 2,
  CANCELLING = 3,
  FINALIZING = 4,
  SUCCESSFUL = 5,
  FAILED = 6,
  CANCELLED = 7,
  OperationState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OperationState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OperationState_IsValid(int value);
const OperationState OperationState_MIN = OPERATION_STATE_UNSPECIFIED;
const OperationState OperationState_MAX = CANCELLED;
const int OperationState_ARRAYSIZE = OperationState_MAX + 1;

const ::google::protobuf::EnumDescriptor* OperationState_descriptor();
inline const ::std::string& OperationState_Name(OperationState value) {
  return ::google::protobuf::internal::NameOfEnum(
    OperationState_descriptor(), value);
}
inline bool OperationState_Parse(
    const ::std::string& name, OperationState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperationState>(
    OperationState_descriptor(), name, value);
}
// ===================================================================

class FieldOperationMetadata_IndexConfigDelta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta) */ {
 public:
  FieldOperationMetadata_IndexConfigDelta();
  virtual ~FieldOperationMetadata_IndexConfigDelta();

  FieldOperationMetadata_IndexConfigDelta(const FieldOperationMetadata_IndexConfigDelta& from);

  inline FieldOperationMetadata_IndexConfigDelta& operator=(const FieldOperationMetadata_IndexConfigDelta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FieldOperationMetadata_IndexConfigDelta(FieldOperationMetadata_IndexConfigDelta&& from) noexcept
    : FieldOperationMetadata_IndexConfigDelta() {
    *this = ::std::move(from);
  }

  inline FieldOperationMetadata_IndexConfigDelta& operator=(FieldOperationMetadata_IndexConfigDelta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldOperationMetadata_IndexConfigDelta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FieldOperationMetadata_IndexConfigDelta* internal_default_instance() {
    return reinterpret_cast<const FieldOperationMetadata_IndexConfigDelta*>(
               &_FieldOperationMetadata_IndexConfigDelta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(FieldOperationMetadata_IndexConfigDelta* other);
  friend void swap(FieldOperationMetadata_IndexConfigDelta& a, FieldOperationMetadata_IndexConfigDelta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FieldOperationMetadata_IndexConfigDelta* New() const final {
    return CreateMaybeMessage<FieldOperationMetadata_IndexConfigDelta>(NULL);
  }

  FieldOperationMetadata_IndexConfigDelta* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FieldOperationMetadata_IndexConfigDelta>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FieldOperationMetadata_IndexConfigDelta& from);
  void MergeFrom(const FieldOperationMetadata_IndexConfigDelta& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FieldOperationMetadata_IndexConfigDelta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FieldOperationMetadata_IndexConfigDelta_ChangeType ChangeType;
  static const ChangeType CHANGE_TYPE_UNSPECIFIED =
    FieldOperationMetadata_IndexConfigDelta_ChangeType_CHANGE_TYPE_UNSPECIFIED;
  static const ChangeType ADD =
    FieldOperationMetadata_IndexConfigDelta_ChangeType_ADD;
  static const ChangeType REMOVE =
    FieldOperationMetadata_IndexConfigDelta_ChangeType_REMOVE;
  static inline bool ChangeType_IsValid(int value) {
    return FieldOperationMetadata_IndexConfigDelta_ChangeType_IsValid(value);
  }
  static const ChangeType ChangeType_MIN =
    FieldOperationMetadata_IndexConfigDelta_ChangeType_ChangeType_MIN;
  static const ChangeType ChangeType_MAX =
    FieldOperationMetadata_IndexConfigDelta_ChangeType_ChangeType_MAX;
  static const int ChangeType_ARRAYSIZE =
    FieldOperationMetadata_IndexConfigDelta_ChangeType_ChangeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ChangeType_descriptor() {
    return FieldOperationMetadata_IndexConfigDelta_ChangeType_descriptor();
  }
  static inline const ::std::string& ChangeType_Name(ChangeType value) {
    return FieldOperationMetadata_IndexConfigDelta_ChangeType_Name(value);
  }
  static inline bool ChangeType_Parse(const ::std::string& name,
      ChangeType* value) {
    return FieldOperationMetadata_IndexConfigDelta_ChangeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .google.firestore.admin.v1beta2.Index index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  private:
  const ::google::firestore::admin::v1beta2::Index& _internal_index() const;
  public:
  const ::google::firestore::admin::v1beta2::Index& index() const;
  ::google::firestore::admin::v1beta2::Index* release_index();
  ::google::firestore::admin::v1beta2::Index* mutable_index();
  void set_allocated_index(::google::firestore::admin::v1beta2::Index* index);

  // .google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta.ChangeType change_type = 1;
  void clear_change_type();
  static const int kChangeTypeFieldNumber = 1;
  ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta_ChangeType change_type() const;
  void set_change_type(::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta_ChangeType value);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::firestore::admin::v1beta2::Index* index_;
  int change_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2foperation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FieldOperationMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta2.FieldOperationMetadata) */ {
 public:
  FieldOperationMetadata();
  virtual ~FieldOperationMetadata();

  FieldOperationMetadata(const FieldOperationMetadata& from);

  inline FieldOperationMetadata& operator=(const FieldOperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FieldOperationMetadata(FieldOperationMetadata&& from) noexcept
    : FieldOperationMetadata() {
    *this = ::std::move(from);
  }

  inline FieldOperationMetadata& operator=(FieldOperationMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldOperationMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FieldOperationMetadata* internal_default_instance() {
    return reinterpret_cast<const FieldOperationMetadata*>(
               &_FieldOperationMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(FieldOperationMetadata* other);
  friend void swap(FieldOperationMetadata& a, FieldOperationMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FieldOperationMetadata* New() const final {
    return CreateMaybeMessage<FieldOperationMetadata>(NULL);
  }

  FieldOperationMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FieldOperationMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FieldOperationMetadata& from);
  void MergeFrom(const FieldOperationMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FieldOperationMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FieldOperationMetadata_IndexConfigDelta IndexConfigDelta;

  // accessors -------------------------------------------------------

  // repeated .google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta index_config_deltas = 4;
  int index_config_deltas_size() const;
  void clear_index_config_deltas();
  static const int kIndexConfigDeltasFieldNumber = 4;
  ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta* mutable_index_config_deltas(int index);
  ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta >*
      mutable_index_config_deltas();
  const ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta& index_config_deltas(int index) const;
  ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta* add_index_config_deltas();
  const ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta >&
      index_config_deltas() const;

  // string field = 3;
  void clear_field();
  static const int kFieldFieldNumber = 3;
  const ::std::string& field() const;
  void set_field(const ::std::string& value);
  #if LANG_CXX11
  void set_field(::std::string&& value);
  #endif
  void set_field(const char* value);
  void set_field(const char* value, size_t size);
  ::std::string* mutable_field();
  ::std::string* release_field();
  void set_allocated_field(::std::string* field);

  // .google.protobuf.Timestamp start_time = 1;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  private:
  const ::google::protobuf::Timestamp& _internal_start_time() const;
  public:
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Timestamp end_time = 2;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  private:
  const ::google::protobuf::Timestamp& _internal_end_time() const;
  public:
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* release_end_time();
  ::google::protobuf::Timestamp* mutable_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);

  // .google.firestore.admin.v1beta2.Progress document_progress = 6;
  bool has_document_progress() const;
  void clear_document_progress();
  static const int kDocumentProgressFieldNumber = 6;
  private:
  const ::google::firestore::admin::v1beta2::Progress& _internal_document_progress() const;
  public:
  const ::google::firestore::admin::v1beta2::Progress& document_progress() const;
  ::google::firestore::admin::v1beta2::Progress* release_document_progress();
  ::google::firestore::admin::v1beta2::Progress* mutable_document_progress();
  void set_allocated_document_progress(::google::firestore::admin::v1beta2::Progress* document_progress);

  // .google.firestore.admin.v1beta2.Progress bytes_progress = 7;
  bool has_bytes_progress() const;
  void clear_bytes_progress();
  static const int kBytesProgressFieldNumber = 7;
  private:
  const ::google::firestore::admin::v1beta2::Progress& _internal_bytes_progress() const;
  public:
  const ::google::firestore::admin::v1beta2::Progress& bytes_progress() const;
  ::google::firestore::admin::v1beta2::Progress* release_bytes_progress();
  ::google::firestore::admin::v1beta2::Progress* mutable_bytes_progress();
  void set_allocated_bytes_progress(::google::firestore::admin::v1beta2::Progress* bytes_progress);

  // .google.firestore.admin.v1beta2.OperationState state = 5;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::google::firestore::admin::v1beta2::OperationState state() const;
  void set_state(::google::firestore::admin::v1beta2::OperationState value);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta2.FieldOperationMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta > index_config_deltas_;
  ::google::protobuf::internal::ArenaStringPtr field_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* end_time_;
  ::google::firestore::admin::v1beta2::Progress* document_progress_;
  ::google::firestore::admin::v1beta2::Progress* bytes_progress_;
  int state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2foperation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Progress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta2.Progress) */ {
 public:
  Progress();
  virtual ~Progress();

  Progress(const Progress& from);

  inline Progress& operator=(const Progress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Progress(Progress&& from) noexcept
    : Progress() {
    *this = ::std::move(from);
  }

  inline Progress& operator=(Progress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Progress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Progress* internal_default_instance() {
    return reinterpret_cast<const Progress*>(
               &_Progress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Progress* other);
  friend void swap(Progress& a, Progress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Progress* New() const final {
    return CreateMaybeMessage<Progress>(NULL);
  }

  Progress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Progress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Progress& from);
  void MergeFrom(const Progress& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Progress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 estimated_work = 1;
  void clear_estimated_work();
  static const int kEstimatedWorkFieldNumber = 1;
  ::google::protobuf::int64 estimated_work() const;
  void set_estimated_work(::google::protobuf::int64 value);

  // int64 completed_work = 2;
  void clear_completed_work();
  static const int kCompletedWorkFieldNumber = 2;
  ::google::protobuf::int64 completed_work() const;
  void set_completed_work(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta2.Progress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 estimated_work_;
  ::google::protobuf::int64 completed_work_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2foperation_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FieldOperationMetadata_IndexConfigDelta

// .google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta.ChangeType change_type = 1;
inline void FieldOperationMetadata_IndexConfigDelta::clear_change_type() {
  change_type_ = 0;
}
inline ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta_ChangeType FieldOperationMetadata_IndexConfigDelta::change_type() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta.change_type)
  return static_cast< ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta_ChangeType >(change_type_);
}
inline void FieldOperationMetadata_IndexConfigDelta::set_change_type(::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta_ChangeType value) {
  
  change_type_ = value;
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta.change_type)
}

// .google.firestore.admin.v1beta2.Index index = 2;
inline bool FieldOperationMetadata_IndexConfigDelta::has_index() const {
  return this != internal_default_instance() && index_ != NULL;
}
inline const ::google::firestore::admin::v1beta2::Index& FieldOperationMetadata_IndexConfigDelta::_internal_index() const {
  return *index_;
}
inline const ::google::firestore::admin::v1beta2::Index& FieldOperationMetadata_IndexConfigDelta::index() const {
  const ::google::firestore::admin::v1beta2::Index* p = index_;
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta.index)
  return p != NULL ? *p : *reinterpret_cast<const ::google::firestore::admin::v1beta2::Index*>(
      &::google::firestore::admin::v1beta2::_Index_default_instance_);
}
inline ::google::firestore::admin::v1beta2::Index* FieldOperationMetadata_IndexConfigDelta::release_index() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta.index)
  
  ::google::firestore::admin::v1beta2::Index* temp = index_;
  index_ = NULL;
  return temp;
}
inline ::google::firestore::admin::v1beta2::Index* FieldOperationMetadata_IndexConfigDelta::mutable_index() {
  
  if (index_ == NULL) {
    auto* p = CreateMaybeMessage<::google::firestore::admin::v1beta2::Index>(GetArenaNoVirtual());
    index_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta.index)
  return index_;
}
inline void FieldOperationMetadata_IndexConfigDelta::set_allocated_index(::google::firestore::admin::v1beta2::Index* index) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(index_);
  }
  if (index) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      index = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, index, submessage_arena);
    }
    
  } else {
    
  }
  index_ = index;
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta.index)
}

// -------------------------------------------------------------------

// FieldOperationMetadata

// .google.protobuf.Timestamp start_time = 1;
inline bool FieldOperationMetadata::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& FieldOperationMetadata::_internal_start_time() const {
  return *start_time_;
}
inline const ::google::protobuf::Timestamp& FieldOperationMetadata::start_time() const {
  const ::google::protobuf::Timestamp* p = start_time_;
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.FieldOperationMetadata.start_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* FieldOperationMetadata::release_start_time() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.FieldOperationMetadata.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* FieldOperationMetadata::mutable_start_time() {
  
  if (start_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    start_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.FieldOperationMetadata.start_time)
  return start_time_;
}
inline void FieldOperationMetadata::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(start_time)->GetArena();
    if (message_arena != submessage_arena) {
      start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.FieldOperationMetadata.start_time)
}

// .google.protobuf.Timestamp end_time = 2;
inline bool FieldOperationMetadata::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& FieldOperationMetadata::_internal_end_time() const {
  return *end_time_;
}
inline const ::google::protobuf::Timestamp& FieldOperationMetadata::end_time() const {
  const ::google::protobuf::Timestamp* p = end_time_;
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.FieldOperationMetadata.end_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* FieldOperationMetadata::release_end_time() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.FieldOperationMetadata.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* FieldOperationMetadata::mutable_end_time() {
  
  if (end_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    end_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.FieldOperationMetadata.end_time)
  return end_time_;
}
inline void FieldOperationMetadata::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(end_time_);
  }
  if (end_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(end_time)->GetArena();
    if (message_arena != submessage_arena) {
      end_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_time, submessage_arena);
    }
    
  } else {
    
  }
  end_time_ = end_time;
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.FieldOperationMetadata.end_time)
}

// string field = 3;
inline void FieldOperationMetadata::clear_field() {
  field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FieldOperationMetadata::field() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.FieldOperationMetadata.field)
  return field_.GetNoArena();
}
inline void FieldOperationMetadata::set_field(const ::std::string& value) {
  
  field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.FieldOperationMetadata.field)
}
#if LANG_CXX11
inline void FieldOperationMetadata::set_field(::std::string&& value) {
  
  field_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta2.FieldOperationMetadata.field)
}
#endif
inline void FieldOperationMetadata::set_field(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta2.FieldOperationMetadata.field)
}
inline void FieldOperationMetadata::set_field(const char* value, size_t size) {
  
  field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta2.FieldOperationMetadata.field)
}
inline ::std::string* FieldOperationMetadata::mutable_field() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.FieldOperationMetadata.field)
  return field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FieldOperationMetadata::release_field() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.FieldOperationMetadata.field)
  
  return field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FieldOperationMetadata::set_allocated_field(::std::string* field) {
  if (field != NULL) {
    
  } else {
    
  }
  field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.FieldOperationMetadata.field)
}

// repeated .google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta index_config_deltas = 4;
inline int FieldOperationMetadata::index_config_deltas_size() const {
  return index_config_deltas_.size();
}
inline void FieldOperationMetadata::clear_index_config_deltas() {
  index_config_deltas_.Clear();
}
inline ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta* FieldOperationMetadata::mutable_index_config_deltas(int index) {
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.FieldOperationMetadata.index_config_deltas)
  return index_config_deltas_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta >*
FieldOperationMetadata::mutable_index_config_deltas() {
  // @@protoc_insertion_point(field_mutable_list:google.firestore.admin.v1beta2.FieldOperationMetadata.index_config_deltas)
  return &index_config_deltas_;
}
inline const ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta& FieldOperationMetadata::index_config_deltas(int index) const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.FieldOperationMetadata.index_config_deltas)
  return index_config_deltas_.Get(index);
}
inline ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta* FieldOperationMetadata::add_index_config_deltas() {
  // @@protoc_insertion_point(field_add:google.firestore.admin.v1beta2.FieldOperationMetadata.index_config_deltas)
  return index_config_deltas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta >&
FieldOperationMetadata::index_config_deltas() const {
  // @@protoc_insertion_point(field_list:google.firestore.admin.v1beta2.FieldOperationMetadata.index_config_deltas)
  return index_config_deltas_;
}

// .google.firestore.admin.v1beta2.OperationState state = 5;
inline void FieldOperationMetadata::clear_state() {
  state_ = 0;
}
inline ::google::firestore::admin::v1beta2::OperationState FieldOperationMetadata::state() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.FieldOperationMetadata.state)
  return static_cast< ::google::firestore::admin::v1beta2::OperationState >(state_);
}
inline void FieldOperationMetadata::set_state(::google::firestore::admin::v1beta2::OperationState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.FieldOperationMetadata.state)
}

// .google.firestore.admin.v1beta2.Progress document_progress = 6;
inline bool FieldOperationMetadata::has_document_progress() const {
  return this != internal_default_instance() && document_progress_ != NULL;
}
inline void FieldOperationMetadata::clear_document_progress() {
  if (GetArenaNoVirtual() == NULL && document_progress_ != NULL) {
    delete document_progress_;
  }
  document_progress_ = NULL;
}
inline const ::google::firestore::admin::v1beta2::Progress& FieldOperationMetadata::_internal_document_progress() const {
  return *document_progress_;
}
inline const ::google::firestore::admin::v1beta2::Progress& FieldOperationMetadata::document_progress() const {
  const ::google::firestore::admin::v1beta2::Progress* p = document_progress_;
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.FieldOperationMetadata.document_progress)
  return p != NULL ? *p : *reinterpret_cast<const ::google::firestore::admin::v1beta2::Progress*>(
      &::google::firestore::admin::v1beta2::_Progress_default_instance_);
}
inline ::google::firestore::admin::v1beta2::Progress* FieldOperationMetadata::release_document_progress() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.FieldOperationMetadata.document_progress)
  
  ::google::firestore::admin::v1beta2::Progress* temp = document_progress_;
  document_progress_ = NULL;
  return temp;
}
inline ::google::firestore::admin::v1beta2::Progress* FieldOperationMetadata::mutable_document_progress() {
  
  if (document_progress_ == NULL) {
    auto* p = CreateMaybeMessage<::google::firestore::admin::v1beta2::Progress>(GetArenaNoVirtual());
    document_progress_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.FieldOperationMetadata.document_progress)
  return document_progress_;
}
inline void FieldOperationMetadata::set_allocated_document_progress(::google::firestore::admin::v1beta2::Progress* document_progress) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete document_progress_;
  }
  if (document_progress) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      document_progress = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, document_progress, submessage_arena);
    }
    
  } else {
    
  }
  document_progress_ = document_progress;
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.FieldOperationMetadata.document_progress)
}

// .google.firestore.admin.v1beta2.Progress bytes_progress = 7;
inline bool FieldOperationMetadata::has_bytes_progress() const {
  return this != internal_default_instance() && bytes_progress_ != NULL;
}
inline void FieldOperationMetadata::clear_bytes_progress() {
  if (GetArenaNoVirtual() == NULL && bytes_progress_ != NULL) {
    delete bytes_progress_;
  }
  bytes_progress_ = NULL;
}
inline const ::google::firestore::admin::v1beta2::Progress& FieldOperationMetadata::_internal_bytes_progress() const {
  return *bytes_progress_;
}
inline const ::google::firestore::admin::v1beta2::Progress& FieldOperationMetadata::bytes_progress() const {
  const ::google::firestore::admin::v1beta2::Progress* p = bytes_progress_;
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.FieldOperationMetadata.bytes_progress)
  return p != NULL ? *p : *reinterpret_cast<const ::google::firestore::admin::v1beta2::Progress*>(
      &::google::firestore::admin::v1beta2::_Progress_default_instance_);
}
inline ::google::firestore::admin::v1beta2::Progress* FieldOperationMetadata::release_bytes_progress() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.FieldOperationMetadata.bytes_progress)
  
  ::google::firestore::admin::v1beta2::Progress* temp = bytes_progress_;
  bytes_progress_ = NULL;
  return temp;
}
inline ::google::firestore::admin::v1beta2::Progress* FieldOperationMetadata::mutable_bytes_progress() {
  
  if (bytes_progress_ == NULL) {
    auto* p = CreateMaybeMessage<::google::firestore::admin::v1beta2::Progress>(GetArenaNoVirtual());
    bytes_progress_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.FieldOperationMetadata.bytes_progress)
  return bytes_progress_;
}
inline void FieldOperationMetadata::set_allocated_bytes_progress(::google::firestore::admin::v1beta2::Progress* bytes_progress) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bytes_progress_;
  }
  if (bytes_progress) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bytes_progress = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bytes_progress, submessage_arena);
    }
    
  } else {
    
  }
  bytes_progress_ = bytes_progress;
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.FieldOperationMetadata.bytes_progress)
}

// -------------------------------------------------------------------

// Progress

// int64 estimated_work = 1;
inline void Progress::clear_estimated_work() {
  estimated_work_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Progress::estimated_work() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.Progress.estimated_work)
  return estimated_work_;
}
inline void Progress::set_estimated_work(::google::protobuf::int64 value) {
  
  estimated_work_ = value;
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.Progress.estimated_work)
}

// int64 completed_work = 2;
inline void Progress::clear_completed_work() {
  completed_work_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Progress::completed_work() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.Progress.completed_work)
  return completed_work_;
}
inline void Progress::set_completed_work(::google::protobuf::int64 value) {
  
  completed_work_ = value;
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.Progress.completed_work)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta2
}  // namespace admin
}  // namespace firestore
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta_ChangeType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta_ChangeType>() {
  return ::google::firestore::admin::v1beta2::FieldOperationMetadata_IndexConfigDelta_ChangeType_descriptor();
}
template <> struct is_proto_enum< ::google::firestore::admin::v1beta2::OperationState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::firestore::admin::v1beta2::OperationState>() {
  return ::google::firestore::admin::v1beta2::OperationState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2ffirestore_2fadmin_2fv1beta2_2foperation_2eproto
