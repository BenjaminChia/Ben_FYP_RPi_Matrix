// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firestore/admin/v1beta2/field.proto

#include "google/firestore/admin/v1beta2/field.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Field_IndexConfig;
}  // namespace protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto
namespace protobuf_google_2ffirestore_2fadmin_2fv1beta2_2findex_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2ffirestore_2fadmin_2fv1beta2_2findex_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Index;
}  // namespace protobuf_google_2ffirestore_2fadmin_2fv1beta2_2findex_2eproto
namespace google {
namespace firestore {
namespace admin {
namespace v1beta2 {
class Field_IndexConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Field_IndexConfig>
      _instance;
} _Field_IndexConfig_default_instance_;
class FieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Field>
      _instance;
} _Field_default_instance_;
}  // namespace v1beta2
}  // namespace admin
}  // namespace firestore
}  // namespace google
namespace protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto {
static void InitDefaultsField_IndexConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::firestore::admin::v1beta2::_Field_IndexConfig_default_instance_;
    new (ptr) ::google::firestore::admin::v1beta2::Field_IndexConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::firestore::admin::v1beta2::Field_IndexConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Field_IndexConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsField_IndexConfig}, {
      &protobuf_google_2ffirestore_2fadmin_2fv1beta2_2findex_2eproto::scc_info_Index.base,}};

static void InitDefaultsField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::firestore::admin::v1beta2::_Field_default_instance_;
    new (ptr) ::google::firestore::admin::v1beta2::Field();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::firestore::admin::v1beta2::Field::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Field =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsField}, {
      &protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::scc_info_Field_IndexConfig.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Field_IndexConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Field.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta2::Field_IndexConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta2::Field_IndexConfig, indexes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta2::Field_IndexConfig, uses_ancestor_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta2::Field_IndexConfig, ancestor_field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta2::Field_IndexConfig, reverting_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta2::Field, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta2::Field, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::firestore::admin::v1beta2::Field, index_config_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::firestore::admin::v1beta2::Field_IndexConfig)},
  { 9, -1, sizeof(::google::firestore::admin::v1beta2::Field)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::firestore::admin::v1beta2::_Field_IndexConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::firestore::admin::v1beta2::_Field_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/firestore/admin/v1beta2/field.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*google/firestore/admin/v1beta2/field.p"
      "roto\022\036google.firestore.admin.v1beta2\032\034go"
      "ogle/api/annotations.proto\032*google/fires"
      "tore/admin/v1beta2/index.proto\"\357\001\n\005Field"
      "\022\014\n\004name\030\001 \001(\t\022G\n\014index_config\030\002 \001(\01321.g"
      "oogle.firestore.admin.v1beta2.Field.Inde"
      "xConfig\032\216\001\n\013IndexConfig\0226\n\007indexes\030\001 \003(\013"
      "2%.google.firestore.admin.v1beta2.Index\022"
      "\034\n\024uses_ancestor_config\030\002 \001(\010\022\026\n\016ancesto"
      "r_field\030\003 \001(\t\022\021\n\treverting\030\004 \001(\010B\245\001\n\"com"
      ".google.firestore.admin.v1beta2B\nFieldPr"
      "otoP\001ZCgoogle.golang.org/genproto/google"
      "apis/firestore/admin/v1beta2;admin\242\002\004GCF"
      "S\252\002$Google.Cloud.Firestore.Admin.V1Beta2"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 568);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/firestore/admin/v1beta2/field.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2findex_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto
namespace google {
namespace firestore {
namespace admin {
namespace v1beta2 {

// ===================================================================

void Field_IndexConfig::InitAsDefaultInstance() {
}
void Field_IndexConfig::clear_indexes() {
  indexes_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Field_IndexConfig::kIndexesFieldNumber;
const int Field_IndexConfig::kUsesAncestorConfigFieldNumber;
const int Field_IndexConfig::kAncestorFieldFieldNumber;
const int Field_IndexConfig::kRevertingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Field_IndexConfig::Field_IndexConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::scc_info_Field_IndexConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.firestore.admin.v1beta2.Field.IndexConfig)
}
Field_IndexConfig::Field_IndexConfig(const Field_IndexConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      indexes_(from.indexes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ancestor_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ancestor_field().size() > 0) {
    ancestor_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ancestor_field_);
  }
  ::memcpy(&uses_ancestor_config_, &from.uses_ancestor_config_,
    static_cast<size_t>(reinterpret_cast<char*>(&reverting_) -
    reinterpret_cast<char*>(&uses_ancestor_config_)) + sizeof(reverting_));
  // @@protoc_insertion_point(copy_constructor:google.firestore.admin.v1beta2.Field.IndexConfig)
}

void Field_IndexConfig::SharedCtor() {
  ancestor_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uses_ancestor_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reverting_) -
      reinterpret_cast<char*>(&uses_ancestor_config_)) + sizeof(reverting_));
}

Field_IndexConfig::~Field_IndexConfig() {
  // @@protoc_insertion_point(destructor:google.firestore.admin.v1beta2.Field.IndexConfig)
  SharedDtor();
}

void Field_IndexConfig::SharedDtor() {
  ancestor_field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Field_IndexConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Field_IndexConfig::descriptor() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Field_IndexConfig& Field_IndexConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::scc_info_Field_IndexConfig.base);
  return *internal_default_instance();
}


void Field_IndexConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.firestore.admin.v1beta2.Field.IndexConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  indexes_.Clear();
  ancestor_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uses_ancestor_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reverting_) -
      reinterpret_cast<char*>(&uses_ancestor_config_)) + sizeof(reverting_));
  _internal_metadata_.Clear();
}

bool Field_IndexConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.firestore.admin.v1beta2.Field.IndexConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.firestore.admin.v1beta2.Index indexes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_indexes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool uses_ancestor_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &uses_ancestor_config_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ancestor_field = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ancestor_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ancestor_field().data(), static_cast<int>(this->ancestor_field().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.firestore.admin.v1beta2.Field.IndexConfig.ancestor_field"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reverting = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reverting_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.firestore.admin.v1beta2.Field.IndexConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.firestore.admin.v1beta2.Field.IndexConfig)
  return false;
#undef DO_
}

void Field_IndexConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.firestore.admin.v1beta2.Field.IndexConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.firestore.admin.v1beta2.Index indexes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->indexes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->indexes(static_cast<int>(i)),
      output);
  }

  // bool uses_ancestor_config = 2;
  if (this->uses_ancestor_config() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->uses_ancestor_config(), output);
  }

  // string ancestor_field = 3;
  if (this->ancestor_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ancestor_field().data(), static_cast<int>(this->ancestor_field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta2.Field.IndexConfig.ancestor_field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ancestor_field(), output);
  }

  // bool reverting = 4;
  if (this->reverting() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->reverting(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.firestore.admin.v1beta2.Field.IndexConfig)
}

::google::protobuf::uint8* Field_IndexConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.firestore.admin.v1beta2.Field.IndexConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.firestore.admin.v1beta2.Index indexes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->indexes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->indexes(static_cast<int>(i)), deterministic, target);
  }

  // bool uses_ancestor_config = 2;
  if (this->uses_ancestor_config() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->uses_ancestor_config(), target);
  }

  // string ancestor_field = 3;
  if (this->ancestor_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ancestor_field().data(), static_cast<int>(this->ancestor_field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta2.Field.IndexConfig.ancestor_field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ancestor_field(), target);
  }

  // bool reverting = 4;
  if (this->reverting() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->reverting(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.firestore.admin.v1beta2.Field.IndexConfig)
  return target;
}

size_t Field_IndexConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.firestore.admin.v1beta2.Field.IndexConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.firestore.admin.v1beta2.Index indexes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->indexes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->indexes(static_cast<int>(i)));
    }
  }

  // string ancestor_field = 3;
  if (this->ancestor_field().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ancestor_field());
  }

  // bool uses_ancestor_config = 2;
  if (this->uses_ancestor_config() != 0) {
    total_size += 1 + 1;
  }

  // bool reverting = 4;
  if (this->reverting() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Field_IndexConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.firestore.admin.v1beta2.Field.IndexConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const Field_IndexConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Field_IndexConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.firestore.admin.v1beta2.Field.IndexConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.firestore.admin.v1beta2.Field.IndexConfig)
    MergeFrom(*source);
  }
}

void Field_IndexConfig::MergeFrom(const Field_IndexConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.firestore.admin.v1beta2.Field.IndexConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  indexes_.MergeFrom(from.indexes_);
  if (from.ancestor_field().size() > 0) {

    ancestor_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ancestor_field_);
  }
  if (from.uses_ancestor_config() != 0) {
    set_uses_ancestor_config(from.uses_ancestor_config());
  }
  if (from.reverting() != 0) {
    set_reverting(from.reverting());
  }
}

void Field_IndexConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.firestore.admin.v1beta2.Field.IndexConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Field_IndexConfig::CopyFrom(const Field_IndexConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.firestore.admin.v1beta2.Field.IndexConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Field_IndexConfig::IsInitialized() const {
  return true;
}

void Field_IndexConfig::Swap(Field_IndexConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Field_IndexConfig::InternalSwap(Field_IndexConfig* other) {
  using std::swap;
  CastToBase(&indexes_)->InternalSwap(CastToBase(&other->indexes_));
  ancestor_field_.Swap(&other->ancestor_field_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(uses_ancestor_config_, other->uses_ancestor_config_);
  swap(reverting_, other->reverting_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Field_IndexConfig::GetMetadata() const {
  protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Field::InitAsDefaultInstance() {
  ::google::firestore::admin::v1beta2::_Field_default_instance_._instance.get_mutable()->index_config_ = const_cast< ::google::firestore::admin::v1beta2::Field_IndexConfig*>(
      ::google::firestore::admin::v1beta2::Field_IndexConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Field::kNameFieldNumber;
const int Field::kIndexConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Field::Field()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::scc_info_Field.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.firestore.admin.v1beta2.Field)
}
Field::Field(const Field& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_index_config()) {
    index_config_ = new ::google::firestore::admin::v1beta2::Field_IndexConfig(*from.index_config_);
  } else {
    index_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.firestore.admin.v1beta2.Field)
}

void Field::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_config_ = NULL;
}

Field::~Field() {
  // @@protoc_insertion_point(destructor:google.firestore.admin.v1beta2.Field)
  SharedDtor();
}

void Field::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete index_config_;
}

void Field::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Field::descriptor() {
  ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Field& Field::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::scc_info_Field.base);
  return *internal_default_instance();
}


void Field::Clear() {
// @@protoc_insertion_point(message_clear_start:google.firestore.admin.v1beta2.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && index_config_ != NULL) {
    delete index_config_;
  }
  index_config_ = NULL;
  _internal_metadata_.Clear();
}

bool Field::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.firestore.admin.v1beta2.Field)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.firestore.admin.v1beta2.Field.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.firestore.admin.v1beta2.Field.IndexConfig index_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.firestore.admin.v1beta2.Field)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.firestore.admin.v1beta2.Field)
  return false;
#undef DO_
}

void Field::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.firestore.admin.v1beta2.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta2.Field.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.firestore.admin.v1beta2.Field.IndexConfig index_config = 2;
  if (this->has_index_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_index_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.firestore.admin.v1beta2.Field)
}

::google::protobuf::uint8* Field::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.firestore.admin.v1beta2.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.firestore.admin.v1beta2.Field.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.firestore.admin.v1beta2.Field.IndexConfig index_config = 2;
  if (this->has_index_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_index_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.firestore.admin.v1beta2.Field)
  return target;
}

size_t Field::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.firestore.admin.v1beta2.Field)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.firestore.admin.v1beta2.Field.IndexConfig index_config = 2;
  if (this->has_index_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *index_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Field::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.firestore.admin.v1beta2.Field)
  GOOGLE_DCHECK_NE(&from, this);
  const Field* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Field>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.firestore.admin.v1beta2.Field)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.firestore.admin.v1beta2.Field)
    MergeFrom(*source);
  }
}

void Field::MergeFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.firestore.admin.v1beta2.Field)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_index_config()) {
    mutable_index_config()->::google::firestore::admin::v1beta2::Field_IndexConfig::MergeFrom(from.index_config());
  }
}

void Field::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.firestore.admin.v1beta2.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Field::CopyFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.firestore.admin.v1beta2.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Field::IsInitialized() const {
  return true;
}

void Field::Swap(Field* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Field::InternalSwap(Field* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_config_, other->index_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Field::GetMetadata() const {
  protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffield_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta2
}  // namespace admin
}  // namespace firestore
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::firestore::admin::v1beta2::Field_IndexConfig* Arena::CreateMaybeMessage< ::google::firestore::admin::v1beta2::Field_IndexConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::firestore::admin::v1beta2::Field_IndexConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::firestore::admin::v1beta2::Field* Arena::CreateMaybeMessage< ::google::firestore::admin::v1beta2::Field >(Arena* arena) {
  return Arena::CreateInternal< ::google::firestore::admin::v1beta2::Field >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
