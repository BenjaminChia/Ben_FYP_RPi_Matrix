// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firestore/admin/v1beta2/firestore_admin.proto

#ifndef PROTOBUF_INCLUDED_google_2ffirestore_2fadmin_2fv1beta2_2ffirestore_5fadmin_2eproto
#define PROTOBUF_INCLUDED_google_2ffirestore_2fadmin_2fv1beta2_2ffirestore_5fadmin_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/firestore/admin/v1beta2/field.pb.h"
#include "google/firestore/admin/v1beta2/index.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffirestore_5fadmin_2eproto 

namespace protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffirestore_5fadmin_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffirestore_5fadmin_2eproto
namespace google {
namespace firestore {
namespace admin {
namespace v1beta2 {
class GetFieldRequest;
class GetFieldRequestDefaultTypeInternal;
extern GetFieldRequestDefaultTypeInternal _GetFieldRequest_default_instance_;
class ListFieldsRequest;
class ListFieldsRequestDefaultTypeInternal;
extern ListFieldsRequestDefaultTypeInternal _ListFieldsRequest_default_instance_;
class ListFieldsResponse;
class ListFieldsResponseDefaultTypeInternal;
extern ListFieldsResponseDefaultTypeInternal _ListFieldsResponse_default_instance_;
class UpdateFieldRequest;
class UpdateFieldRequestDefaultTypeInternal;
extern UpdateFieldRequestDefaultTypeInternal _UpdateFieldRequest_default_instance_;
}  // namespace v1beta2
}  // namespace admin
}  // namespace firestore
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::firestore::admin::v1beta2::GetFieldRequest* Arena::CreateMaybeMessage<::google::firestore::admin::v1beta2::GetFieldRequest>(Arena*);
template<> ::google::firestore::admin::v1beta2::ListFieldsRequest* Arena::CreateMaybeMessage<::google::firestore::admin::v1beta2::ListFieldsRequest>(Arena*);
template<> ::google::firestore::admin::v1beta2::ListFieldsResponse* Arena::CreateMaybeMessage<::google::firestore::admin::v1beta2::ListFieldsResponse>(Arena*);
template<> ::google::firestore::admin::v1beta2::UpdateFieldRequest* Arena::CreateMaybeMessage<::google::firestore::admin::v1beta2::UpdateFieldRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace firestore {
namespace admin {
namespace v1beta2 {

// ===================================================================

class UpdateFieldRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta2.UpdateFieldRequest) */ {
 public:
  UpdateFieldRequest();
  virtual ~UpdateFieldRequest();

  UpdateFieldRequest(const UpdateFieldRequest& from);

  inline UpdateFieldRequest& operator=(const UpdateFieldRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateFieldRequest(UpdateFieldRequest&& from) noexcept
    : UpdateFieldRequest() {
    *this = ::std::move(from);
  }

  inline UpdateFieldRequest& operator=(UpdateFieldRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFieldRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateFieldRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateFieldRequest*>(
               &_UpdateFieldRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(UpdateFieldRequest* other);
  friend void swap(UpdateFieldRequest& a, UpdateFieldRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateFieldRequest* New() const final {
    return CreateMaybeMessage<UpdateFieldRequest>(NULL);
  }

  UpdateFieldRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateFieldRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateFieldRequest& from);
  void MergeFrom(const UpdateFieldRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateFieldRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.firestore.admin.v1beta2.Field field = 1;
  bool has_field() const;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  private:
  const ::google::firestore::admin::v1beta2::Field& _internal_field() const;
  public:
  const ::google::firestore::admin::v1beta2::Field& field() const;
  ::google::firestore::admin::v1beta2::Field* release_field();
  ::google::firestore::admin::v1beta2::Field* mutable_field();
  void set_allocated_field(::google::firestore::admin::v1beta2::Field* field);

  // .google.protobuf.FieldMask update_mask = 2;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 2;
  private:
  const ::google::protobuf::FieldMask& _internal_update_mask() const;
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta2.UpdateFieldRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::firestore::admin::v1beta2::Field* field_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffirestore_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFieldRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta2.GetFieldRequest) */ {
 public:
  GetFieldRequest();
  virtual ~GetFieldRequest();

  GetFieldRequest(const GetFieldRequest& from);

  inline GetFieldRequest& operator=(const GetFieldRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFieldRequest(GetFieldRequest&& from) noexcept
    : GetFieldRequest() {
    *this = ::std::move(from);
  }

  inline GetFieldRequest& operator=(GetFieldRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFieldRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFieldRequest* internal_default_instance() {
    return reinterpret_cast<const GetFieldRequest*>(
               &_GetFieldRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetFieldRequest* other);
  friend void swap(GetFieldRequest& a, GetFieldRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFieldRequest* New() const final {
    return CreateMaybeMessage<GetFieldRequest>(NULL);
  }

  GetFieldRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetFieldRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetFieldRequest& from);
  void MergeFrom(const GetFieldRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFieldRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta2.GetFieldRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffirestore_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFieldsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta2.ListFieldsRequest) */ {
 public:
  ListFieldsRequest();
  virtual ~ListFieldsRequest();

  ListFieldsRequest(const ListFieldsRequest& from);

  inline ListFieldsRequest& operator=(const ListFieldsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFieldsRequest(ListFieldsRequest&& from) noexcept
    : ListFieldsRequest() {
    *this = ::std::move(from);
  }

  inline ListFieldsRequest& operator=(ListFieldsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFieldsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFieldsRequest* internal_default_instance() {
    return reinterpret_cast<const ListFieldsRequest*>(
               &_ListFieldsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ListFieldsRequest* other);
  friend void swap(ListFieldsRequest& a, ListFieldsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFieldsRequest* New() const final {
    return CreateMaybeMessage<ListFieldsRequest>(NULL);
  }

  ListFieldsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFieldsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFieldsRequest& from);
  void MergeFrom(const ListFieldsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFieldsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string filter = 2;
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // string page_token = 4;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 4;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta2.ListFieldsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffirestore_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFieldsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.firestore.admin.v1beta2.ListFieldsResponse) */ {
 public:
  ListFieldsResponse();
  virtual ~ListFieldsResponse();

  ListFieldsResponse(const ListFieldsResponse& from);

  inline ListFieldsResponse& operator=(const ListFieldsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFieldsResponse(ListFieldsResponse&& from) noexcept
    : ListFieldsResponse() {
    *this = ::std::move(from);
  }

  inline ListFieldsResponse& operator=(ListFieldsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFieldsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFieldsResponse* internal_default_instance() {
    return reinterpret_cast<const ListFieldsResponse*>(
               &_ListFieldsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ListFieldsResponse* other);
  friend void swap(ListFieldsResponse& a, ListFieldsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFieldsResponse* New() const final {
    return CreateMaybeMessage<ListFieldsResponse>(NULL);
  }

  ListFieldsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFieldsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFieldsResponse& from);
  void MergeFrom(const ListFieldsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFieldsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.firestore.admin.v1beta2.Field fields = 1;
  int fields_size() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 1;
  ::google::firestore::admin::v1beta2::Field* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::Field >*
      mutable_fields();
  const ::google::firestore::admin::v1beta2::Field& fields(int index) const;
  ::google::firestore::admin::v1beta2::Field* add_fields();
  const ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::Field >&
      fields() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.firestore.admin.v1beta2.ListFieldsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::Field > fields_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2ffirestore_2fadmin_2fv1beta2_2ffirestore_5fadmin_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UpdateFieldRequest

// .google.firestore.admin.v1beta2.Field field = 1;
inline bool UpdateFieldRequest::has_field() const {
  return this != internal_default_instance() && field_ != NULL;
}
inline const ::google::firestore::admin::v1beta2::Field& UpdateFieldRequest::_internal_field() const {
  return *field_;
}
inline const ::google::firestore::admin::v1beta2::Field& UpdateFieldRequest::field() const {
  const ::google::firestore::admin::v1beta2::Field* p = field_;
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.UpdateFieldRequest.field)
  return p != NULL ? *p : *reinterpret_cast<const ::google::firestore::admin::v1beta2::Field*>(
      &::google::firestore::admin::v1beta2::_Field_default_instance_);
}
inline ::google::firestore::admin::v1beta2::Field* UpdateFieldRequest::release_field() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.UpdateFieldRequest.field)
  
  ::google::firestore::admin::v1beta2::Field* temp = field_;
  field_ = NULL;
  return temp;
}
inline ::google::firestore::admin::v1beta2::Field* UpdateFieldRequest::mutable_field() {
  
  if (field_ == NULL) {
    auto* p = CreateMaybeMessage<::google::firestore::admin::v1beta2::Field>(GetArenaNoVirtual());
    field_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.UpdateFieldRequest.field)
  return field_;
}
inline void UpdateFieldRequest::set_allocated_field(::google::firestore::admin::v1beta2::Field* field) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(field_);
  }
  if (field) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      field = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, field, submessage_arena);
    }
    
  } else {
    
  }
  field_ = field;
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.UpdateFieldRequest.field)
}

// .google.protobuf.FieldMask update_mask = 2;
inline bool UpdateFieldRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateFieldRequest::_internal_update_mask() const {
  return *update_mask_;
}
inline const ::google::protobuf::FieldMask& UpdateFieldRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.UpdateFieldRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateFieldRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.UpdateFieldRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateFieldRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    update_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.UpdateFieldRequest.update_mask)
  return update_mask_;
}
inline void UpdateFieldRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.UpdateFieldRequest.update_mask)
}

// -------------------------------------------------------------------

// GetFieldRequest

// string name = 1;
inline void GetFieldRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetFieldRequest::name() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.GetFieldRequest.name)
  return name_.GetNoArena();
}
inline void GetFieldRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.GetFieldRequest.name)
}
#if LANG_CXX11
inline void GetFieldRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta2.GetFieldRequest.name)
}
#endif
inline void GetFieldRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta2.GetFieldRequest.name)
}
inline void GetFieldRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta2.GetFieldRequest.name)
}
inline ::std::string* GetFieldRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.GetFieldRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFieldRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.GetFieldRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFieldRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.GetFieldRequest.name)
}

// -------------------------------------------------------------------

// ListFieldsRequest

// string parent = 1;
inline void ListFieldsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListFieldsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.ListFieldsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListFieldsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.ListFieldsRequest.parent)
}
#if LANG_CXX11
inline void ListFieldsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta2.ListFieldsRequest.parent)
}
#endif
inline void ListFieldsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta2.ListFieldsRequest.parent)
}
inline void ListFieldsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta2.ListFieldsRequest.parent)
}
inline ::std::string* ListFieldsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.ListFieldsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListFieldsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.ListFieldsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListFieldsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.ListFieldsRequest.parent)
}

// string filter = 2;
inline void ListFieldsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListFieldsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.ListFieldsRequest.filter)
  return filter_.GetNoArena();
}
inline void ListFieldsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.ListFieldsRequest.filter)
}
#if LANG_CXX11
inline void ListFieldsRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta2.ListFieldsRequest.filter)
}
#endif
inline void ListFieldsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta2.ListFieldsRequest.filter)
}
inline void ListFieldsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta2.ListFieldsRequest.filter)
}
inline ::std::string* ListFieldsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.ListFieldsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListFieldsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.ListFieldsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListFieldsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.ListFieldsRequest.filter)
}

// int32 page_size = 3;
inline void ListFieldsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListFieldsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.ListFieldsRequest.page_size)
  return page_size_;
}
inline void ListFieldsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.ListFieldsRequest.page_size)
}

// string page_token = 4;
inline void ListFieldsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListFieldsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.ListFieldsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListFieldsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.ListFieldsRequest.page_token)
}
#if LANG_CXX11
inline void ListFieldsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta2.ListFieldsRequest.page_token)
}
#endif
inline void ListFieldsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta2.ListFieldsRequest.page_token)
}
inline void ListFieldsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta2.ListFieldsRequest.page_token)
}
inline ::std::string* ListFieldsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.ListFieldsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListFieldsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.ListFieldsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListFieldsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.ListFieldsRequest.page_token)
}

// -------------------------------------------------------------------

// ListFieldsResponse

// repeated .google.firestore.admin.v1beta2.Field fields = 1;
inline int ListFieldsResponse::fields_size() const {
  return fields_.size();
}
inline ::google::firestore::admin::v1beta2::Field* ListFieldsResponse::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.ListFieldsResponse.fields)
  return fields_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::Field >*
ListFieldsResponse::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:google.firestore.admin.v1beta2.ListFieldsResponse.fields)
  return &fields_;
}
inline const ::google::firestore::admin::v1beta2::Field& ListFieldsResponse::fields(int index) const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.ListFieldsResponse.fields)
  return fields_.Get(index);
}
inline ::google::firestore::admin::v1beta2::Field* ListFieldsResponse::add_fields() {
  // @@protoc_insertion_point(field_add:google.firestore.admin.v1beta2.ListFieldsResponse.fields)
  return fields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::firestore::admin::v1beta2::Field >&
ListFieldsResponse::fields() const {
  // @@protoc_insertion_point(field_list:google.firestore.admin.v1beta2.ListFieldsResponse.fields)
  return fields_;
}

// string next_page_token = 2;
inline void ListFieldsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListFieldsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.firestore.admin.v1beta2.ListFieldsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListFieldsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.firestore.admin.v1beta2.ListFieldsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListFieldsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.firestore.admin.v1beta2.ListFieldsResponse.next_page_token)
}
#endif
inline void ListFieldsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.firestore.admin.v1beta2.ListFieldsResponse.next_page_token)
}
inline void ListFieldsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.firestore.admin.v1beta2.ListFieldsResponse.next_page_token)
}
inline ::std::string* ListFieldsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.firestore.admin.v1beta2.ListFieldsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListFieldsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.firestore.admin.v1beta2.ListFieldsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListFieldsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.firestore.admin.v1beta2.ListFieldsResponse.next_page_token)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta2
}  // namespace admin
}  // namespace firestore
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2ffirestore_2fadmin_2fv1beta2_2ffirestore_5fadmin_2eproto
