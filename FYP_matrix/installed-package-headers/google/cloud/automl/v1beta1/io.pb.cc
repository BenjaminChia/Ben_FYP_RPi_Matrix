// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/automl/v1beta1/io.proto

#include "google/cloud/automl/v1beta1/io.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GcsDestination;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GcsSource;
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {
class InputConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputConfig>
      _instance;
  const ::google::cloud::automl::v1beta1::GcsSource* gcs_source_;
} _InputConfig_default_instance_;
class OutputConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OutputConfig>
      _instance;
  const ::google::cloud::automl::v1beta1::GcsDestination* gcs_destination_;
} _OutputConfig_default_instance_;
class GcsSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GcsSource>
      _instance;
} _GcsSource_default_instance_;
class GcsDestinationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GcsDestination>
      _instance;
} _GcsDestination_default_instance_;
}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto {
static void InitDefaultsInputConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::automl::v1beta1::_InputConfig_default_instance_;
    new (ptr) ::google::cloud::automl::v1beta1::InputConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::automl::v1beta1::InputConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InputConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInputConfig}, {
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::scc_info_GcsSource.base,}};

static void InitDefaultsOutputConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::automl::v1beta1::_OutputConfig_default_instance_;
    new (ptr) ::google::cloud::automl::v1beta1::OutputConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::automl::v1beta1::OutputConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OutputConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOutputConfig}, {
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::scc_info_GcsDestination.base,}};

static void InitDefaultsGcsSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::automl::v1beta1::_GcsSource_default_instance_;
    new (ptr) ::google::cloud::automl::v1beta1::GcsSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::automl::v1beta1::GcsSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GcsSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGcsSource}, {}};

static void InitDefaultsGcsDestination() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::automl::v1beta1::_GcsDestination_default_instance_;
    new (ptr) ::google::cloud::automl::v1beta1::GcsDestination();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::automl::v1beta1::GcsDestination::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GcsDestination =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGcsDestination}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_InputConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OutputConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GcsSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GcsDestination.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::InputConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::InputConfig, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::automl::v1beta1::InputConfigDefaultTypeInternal, gcs_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::InputConfig, source_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::OutputConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::OutputConfig, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::automl::v1beta1::OutputConfigDefaultTypeInternal, gcs_destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::OutputConfig, destination_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::GcsSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::GcsSource, input_uris_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::GcsDestination, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::GcsDestination, output_uri_prefix_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::automl::v1beta1::InputConfig)},
  { 7, -1, sizeof(::google::cloud::automl::v1beta1::OutputConfig)},
  { 14, -1, sizeof(::google::cloud::automl::v1beta1::GcsSource)},
  { 20, -1, sizeof(::google::cloud::automl::v1beta1::GcsDestination)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::automl::v1beta1::_InputConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::automl::v1beta1::_OutputConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::automl::v1beta1::_GcsSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::automl::v1beta1::_GcsDestination_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/automl/v1beta1/io.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n$google/cloud/automl/v1beta1/io.proto\022\033"
      "google.cloud.automl.v1beta1\032\034google/api/"
      "annotations.proto\"U\n\013InputConfig\022<\n\ngcs_"
      "source\030\001 \001(\0132&.google.cloud.automl.v1bet"
      "a1.GcsSourceH\000B\010\n\006source\"e\n\014OutputConfig"
      "\022F\n\017gcs_destination\030\001 \001(\0132+.google.cloud"
      ".automl.v1beta1.GcsDestinationH\000B\r\n\013dest"
      "ination\"\037\n\tGcsSource\022\022\n\ninput_uris\030\001 \003(\t"
      "\"+\n\016GcsDestination\022\031\n\021output_uri_prefix\030"
      "\001 \001(\tBf\n\037com.google.cloud.automl.v1beta1"
      "P\001ZAgoogle.golang.org/genproto/googleapi"
      "s/cloud/automl/v1beta1;automlb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 477);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/automl/v1beta1/io.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {

// ===================================================================

void InputConfig::InitAsDefaultInstance() {
  ::google::cloud::automl::v1beta1::_InputConfig_default_instance_.gcs_source_ = const_cast< ::google::cloud::automl::v1beta1::GcsSource*>(
      ::google::cloud::automl::v1beta1::GcsSource::internal_default_instance());
}
void InputConfig::set_allocated_gcs_source(::google::cloud::automl::v1beta1::GcsSource* gcs_source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_source();
  if (gcs_source) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gcs_source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gcs_source, submessage_arena);
    }
    set_has_gcs_source();
    source_.gcs_source_ = gcs_source;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.InputConfig.gcs_source)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputConfig::kGcsSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputConfig::InputConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::scc_info_InputConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.automl.v1beta1.InputConfig)
}
InputConfig::InputConfig(const InputConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_source();
  switch (from.source_case()) {
    case kGcsSource: {
      mutable_gcs_source()->::google::cloud::automl::v1beta1::GcsSource::MergeFrom(from.gcs_source());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.automl.v1beta1.InputConfig)
}

void InputConfig::SharedCtor() {
  clear_has_source();
}

InputConfig::~InputConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.automl.v1beta1.InputConfig)
  SharedDtor();
}

void InputConfig::SharedDtor() {
  if (has_source()) {
    clear_source();
  }
}

void InputConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputConfig::descriptor() {
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputConfig& InputConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::scc_info_InputConfig.base);
  return *internal_default_instance();
}


void InputConfig::clear_source() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.automl.v1beta1.InputConfig)
  switch (source_case()) {
    case kGcsSource: {
      delete source_.gcs_source_;
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SOURCE_NOT_SET;
}


void InputConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.automl.v1beta1.InputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_source();
  _internal_metadata_.Clear();
}

bool InputConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.automl.v1beta1.InputConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.automl.v1beta1.GcsSource gcs_source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gcs_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.automl.v1beta1.InputConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.automl.v1beta1.InputConfig)
  return false;
#undef DO_
}

void InputConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.automl.v1beta1.InputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.automl.v1beta1.GcsSource gcs_source = 1;
  if (has_gcs_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_gcs_source(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.automl.v1beta1.InputConfig)
}

::google::protobuf::uint8* InputConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.automl.v1beta1.InputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.automl.v1beta1.GcsSource gcs_source = 1;
  if (has_gcs_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_gcs_source(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.automl.v1beta1.InputConfig)
  return target;
}

size_t InputConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.automl.v1beta1.InputConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (source_case()) {
    // .google.cloud.automl.v1beta1.GcsSource gcs_source = 1;
    case kGcsSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_.gcs_source_);
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.automl.v1beta1.InputConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const InputConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.automl.v1beta1.InputConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.automl.v1beta1.InputConfig)
    MergeFrom(*source);
  }
}

void InputConfig::MergeFrom(const InputConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.automl.v1beta1.InputConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.source_case()) {
    case kGcsSource: {
      mutable_gcs_source()->::google::cloud::automl::v1beta1::GcsSource::MergeFrom(from.gcs_source());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
}

void InputConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.automl.v1beta1.InputConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputConfig::CopyFrom(const InputConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.automl.v1beta1.InputConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputConfig::IsInitialized() const {
  return true;
}

void InputConfig::Swap(InputConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputConfig::InternalSwap(InputConfig* other) {
  using std::swap;
  swap(source_, other->source_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OutputConfig::InitAsDefaultInstance() {
  ::google::cloud::automl::v1beta1::_OutputConfig_default_instance_.gcs_destination_ = const_cast< ::google::cloud::automl::v1beta1::GcsDestination*>(
      ::google::cloud::automl::v1beta1::GcsDestination::internal_default_instance());
}
void OutputConfig::set_allocated_gcs_destination(::google::cloud::automl::v1beta1::GcsDestination* gcs_destination) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_destination();
  if (gcs_destination) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gcs_destination = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gcs_destination, submessage_arena);
    }
    set_has_gcs_destination();
    destination_.gcs_destination_ = gcs_destination;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.OutputConfig.gcs_destination)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OutputConfig::kGcsDestinationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OutputConfig::OutputConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::scc_info_OutputConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.automl.v1beta1.OutputConfig)
}
OutputConfig::OutputConfig(const OutputConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_destination();
  switch (from.destination_case()) {
    case kGcsDestination: {
      mutable_gcs_destination()->::google::cloud::automl::v1beta1::GcsDestination::MergeFrom(from.gcs_destination());
      break;
    }
    case DESTINATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.automl.v1beta1.OutputConfig)
}

void OutputConfig::SharedCtor() {
  clear_has_destination();
}

OutputConfig::~OutputConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.automl.v1beta1.OutputConfig)
  SharedDtor();
}

void OutputConfig::SharedDtor() {
  if (has_destination()) {
    clear_destination();
  }
}

void OutputConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OutputConfig::descriptor() {
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OutputConfig& OutputConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::scc_info_OutputConfig.base);
  return *internal_default_instance();
}


void OutputConfig::clear_destination() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.automl.v1beta1.OutputConfig)
  switch (destination_case()) {
    case kGcsDestination: {
      delete destination_.gcs_destination_;
      break;
    }
    case DESTINATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DESTINATION_NOT_SET;
}


void OutputConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.automl.v1beta1.OutputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_destination();
  _internal_metadata_.Clear();
}

bool OutputConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.automl.v1beta1.OutputConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.automl.v1beta1.GcsDestination gcs_destination = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gcs_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.automl.v1beta1.OutputConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.automl.v1beta1.OutputConfig)
  return false;
#undef DO_
}

void OutputConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.automl.v1beta1.OutputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.automl.v1beta1.GcsDestination gcs_destination = 1;
  if (has_gcs_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_gcs_destination(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.automl.v1beta1.OutputConfig)
}

::google::protobuf::uint8* OutputConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.automl.v1beta1.OutputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.automl.v1beta1.GcsDestination gcs_destination = 1;
  if (has_gcs_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_gcs_destination(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.automl.v1beta1.OutputConfig)
  return target;
}

size_t OutputConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.automl.v1beta1.OutputConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (destination_case()) {
    // .google.cloud.automl.v1beta1.GcsDestination gcs_destination = 1;
    case kGcsDestination: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *destination_.gcs_destination_);
      break;
    }
    case DESTINATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutputConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.automl.v1beta1.OutputConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const OutputConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OutputConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.automl.v1beta1.OutputConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.automl.v1beta1.OutputConfig)
    MergeFrom(*source);
  }
}

void OutputConfig::MergeFrom(const OutputConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.automl.v1beta1.OutputConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.destination_case()) {
    case kGcsDestination: {
      mutable_gcs_destination()->::google::cloud::automl::v1beta1::GcsDestination::MergeFrom(from.gcs_destination());
      break;
    }
    case DESTINATION_NOT_SET: {
      break;
    }
  }
}

void OutputConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.automl.v1beta1.OutputConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputConfig::CopyFrom(const OutputConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.automl.v1beta1.OutputConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputConfig::IsInitialized() const {
  return true;
}

void OutputConfig::Swap(OutputConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OutputConfig::InternalSwap(OutputConfig* other) {
  using std::swap;
  swap(destination_, other->destination_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OutputConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GcsSource::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GcsSource::kInputUrisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GcsSource::GcsSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::scc_info_GcsSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.automl.v1beta1.GcsSource)
}
GcsSource::GcsSource(const GcsSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      input_uris_(from.input_uris_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.automl.v1beta1.GcsSource)
}

void GcsSource::SharedCtor() {
}

GcsSource::~GcsSource() {
  // @@protoc_insertion_point(destructor:google.cloud.automl.v1beta1.GcsSource)
  SharedDtor();
}

void GcsSource::SharedDtor() {
}

void GcsSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GcsSource::descriptor() {
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GcsSource& GcsSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::scc_info_GcsSource.base);
  return *internal_default_instance();
}


void GcsSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.automl.v1beta1.GcsSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_uris_.Clear();
  _internal_metadata_.Clear();
}

bool GcsSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.automl.v1beta1.GcsSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string input_uris = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_input_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_uris(this->input_uris_size() - 1).data(),
            static_cast<int>(this->input_uris(this->input_uris_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.automl.v1beta1.GcsSource.input_uris"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.automl.v1beta1.GcsSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.automl.v1beta1.GcsSource)
  return false;
#undef DO_
}

void GcsSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.automl.v1beta1.GcsSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string input_uris = 1;
  for (int i = 0, n = this->input_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_uris(i).data(), static_cast<int>(this->input_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.GcsSource.input_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->input_uris(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.automl.v1beta1.GcsSource)
}

::google::protobuf::uint8* GcsSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.automl.v1beta1.GcsSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string input_uris = 1;
  for (int i = 0, n = this->input_uris_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_uris(i).data(), static_cast<int>(this->input_uris(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.GcsSource.input_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->input_uris(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.automl.v1beta1.GcsSource)
  return target;
}

size_t GcsSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.automl.v1beta1.GcsSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string input_uris = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->input_uris_size());
  for (int i = 0, n = this->input_uris_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->input_uris(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GcsSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.automl.v1beta1.GcsSource)
  GOOGLE_DCHECK_NE(&from, this);
  const GcsSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GcsSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.automl.v1beta1.GcsSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.automl.v1beta1.GcsSource)
    MergeFrom(*source);
  }
}

void GcsSource::MergeFrom(const GcsSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.automl.v1beta1.GcsSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_uris_.MergeFrom(from.input_uris_);
}

void GcsSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.automl.v1beta1.GcsSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GcsSource::CopyFrom(const GcsSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.automl.v1beta1.GcsSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GcsSource::IsInitialized() const {
  return true;
}

void GcsSource::Swap(GcsSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GcsSource::InternalSwap(GcsSource* other) {
  using std::swap;
  input_uris_.InternalSwap(CastToBase(&other->input_uris_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GcsSource::GetMetadata() const {
  protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GcsDestination::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GcsDestination::kOutputUriPrefixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GcsDestination::GcsDestination()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::scc_info_GcsDestination.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.automl.v1beta1.GcsDestination)
}
GcsDestination::GcsDestination(const GcsDestination& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_uri_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_uri_prefix().size() > 0) {
    output_uri_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_uri_prefix_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.automl.v1beta1.GcsDestination)
}

void GcsDestination::SharedCtor() {
  output_uri_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GcsDestination::~GcsDestination() {
  // @@protoc_insertion_point(destructor:google.cloud.automl.v1beta1.GcsDestination)
  SharedDtor();
}

void GcsDestination::SharedDtor() {
  output_uri_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GcsDestination::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GcsDestination::descriptor() {
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GcsDestination& GcsDestination::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::scc_info_GcsDestination.base);
  return *internal_default_instance();
}


void GcsDestination::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.automl.v1beta1.GcsDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_uri_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GcsDestination::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.automl.v1beta1.GcsDestination)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string output_uri_prefix = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_uri_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_uri_prefix().data(), static_cast<int>(this->output_uri_prefix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.automl.v1beta1.GcsDestination.output_uri_prefix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.automl.v1beta1.GcsDestination)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.automl.v1beta1.GcsDestination)
  return false;
#undef DO_
}

void GcsDestination::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.automl.v1beta1.GcsDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string output_uri_prefix = 1;
  if (this->output_uri_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_uri_prefix().data(), static_cast<int>(this->output_uri_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.GcsDestination.output_uri_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->output_uri_prefix(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.automl.v1beta1.GcsDestination)
}

::google::protobuf::uint8* GcsDestination::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.automl.v1beta1.GcsDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string output_uri_prefix = 1;
  if (this->output_uri_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_uri_prefix().data(), static_cast<int>(this->output_uri_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.GcsDestination.output_uri_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->output_uri_prefix(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.automl.v1beta1.GcsDestination)
  return target;
}

size_t GcsDestination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.automl.v1beta1.GcsDestination)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string output_uri_prefix = 1;
  if (this->output_uri_prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_uri_prefix());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GcsDestination::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.automl.v1beta1.GcsDestination)
  GOOGLE_DCHECK_NE(&from, this);
  const GcsDestination* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GcsDestination>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.automl.v1beta1.GcsDestination)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.automl.v1beta1.GcsDestination)
    MergeFrom(*source);
  }
}

void GcsDestination::MergeFrom(const GcsDestination& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.automl.v1beta1.GcsDestination)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.output_uri_prefix().size() > 0) {

    output_uri_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_uri_prefix_);
  }
}

void GcsDestination::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.automl.v1beta1.GcsDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GcsDestination::CopyFrom(const GcsDestination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.automl.v1beta1.GcsDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GcsDestination::IsInitialized() const {
  return true;
}

void GcsDestination::Swap(GcsDestination* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GcsDestination::InternalSwap(GcsDestination* other) {
  using std::swap;
  output_uri_prefix_.Swap(&other->output_uri_prefix_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GcsDestination::GetMetadata() const {
  protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fio_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::automl::v1beta1::InputConfig* Arena::CreateMaybeMessage< ::google::cloud::automl::v1beta1::InputConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::automl::v1beta1::InputConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::automl::v1beta1::OutputConfig* Arena::CreateMaybeMessage< ::google::cloud::automl::v1beta1::OutputConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::automl::v1beta1::OutputConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::automl::v1beta1::GcsSource* Arena::CreateMaybeMessage< ::google::cloud::automl::v1beta1::GcsSource >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::automl::v1beta1::GcsSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::automl::v1beta1::GcsDestination* Arena::CreateMaybeMessage< ::google::cloud::automl::v1beta1::GcsDestination >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::automl::v1beta1::GcsDestination >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
