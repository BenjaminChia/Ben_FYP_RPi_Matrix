// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/automl/v1beta1/model.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2fautoml_2fv1beta1_2fmodel_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2fautoml_2fv1beta1_2fmodel_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/automl/v1beta1/image.pb.h"
#include "google/cloud/automl/v1beta1/text.pb.h"
#include "google/cloud/automl/v1beta1/translation.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2fmodel_2eproto 

namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fmodel_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fmodel_2eproto
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {
class Model;
class ModelDefaultTypeInternal;
extern ModelDefaultTypeInternal _Model_default_instance_;
}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::automl::v1beta1::Model* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::Model>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {

enum Model_DeploymentState {
  Model_DeploymentState_DEPLOYMENT_STATE_UNSPECIFIED = 0,
  Model_DeploymentState_DEPLOYED = 1,
  Model_DeploymentState_UNDEPLOYED = 2,
  Model_DeploymentState_Model_DeploymentState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Model_DeploymentState_Model_DeploymentState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Model_DeploymentState_IsValid(int value);
const Model_DeploymentState Model_DeploymentState_DeploymentState_MIN = Model_DeploymentState_DEPLOYMENT_STATE_UNSPECIFIED;
const Model_DeploymentState Model_DeploymentState_DeploymentState_MAX = Model_DeploymentState_UNDEPLOYED;
const int Model_DeploymentState_DeploymentState_ARRAYSIZE = Model_DeploymentState_DeploymentState_MAX + 1;

const ::google::protobuf::EnumDescriptor* Model_DeploymentState_descriptor();
inline const ::std::string& Model_DeploymentState_Name(Model_DeploymentState value) {
  return ::google::protobuf::internal::NameOfEnum(
    Model_DeploymentState_descriptor(), value);
}
inline bool Model_DeploymentState_Parse(
    const ::std::string& name, Model_DeploymentState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Model_DeploymentState>(
    Model_DeploymentState_descriptor(), name, value);
}
// ===================================================================

class Model : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.Model) */ {
 public:
  Model();
  virtual ~Model();

  Model(const Model& from);

  inline Model& operator=(const Model& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Model(Model&& from) noexcept
    : Model() {
    *this = ::std::move(from);
  }

  inline Model& operator=(Model&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Model& default_instance();

  enum ModelMetadataCase {
    kImageClassificationModelMetadata = 13,
    kTextClassificationModelMetadata = 14,
    kTranslationModelMetadata = 15,
    MODEL_METADATA_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Model* internal_default_instance() {
    return reinterpret_cast<const Model*>(
               &_Model_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Model* other);
  friend void swap(Model& a, Model& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Model* New() const final {
    return CreateMaybeMessage<Model>(NULL);
  }

  Model* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Model>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Model& from);
  void MergeFrom(const Model& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Model_DeploymentState DeploymentState;
  static const DeploymentState DEPLOYMENT_STATE_UNSPECIFIED =
    Model_DeploymentState_DEPLOYMENT_STATE_UNSPECIFIED;
  static const DeploymentState DEPLOYED =
    Model_DeploymentState_DEPLOYED;
  static const DeploymentState UNDEPLOYED =
    Model_DeploymentState_UNDEPLOYED;
  static inline bool DeploymentState_IsValid(int value) {
    return Model_DeploymentState_IsValid(value);
  }
  static const DeploymentState DeploymentState_MIN =
    Model_DeploymentState_DeploymentState_MIN;
  static const DeploymentState DeploymentState_MAX =
    Model_DeploymentState_DeploymentState_MAX;
  static const int DeploymentState_ARRAYSIZE =
    Model_DeploymentState_DeploymentState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DeploymentState_descriptor() {
    return Model_DeploymentState_descriptor();
  }
  static inline const ::std::string& DeploymentState_Name(DeploymentState value) {
    return Model_DeploymentState_Name(value);
  }
  static inline bool DeploymentState_Parse(const ::std::string& name,
      DeploymentState* value) {
    return Model_DeploymentState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string display_name = 2;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 2;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);

  // string dataset_id = 3;
  void clear_dataset_id();
  static const int kDatasetIdFieldNumber = 3;
  const ::std::string& dataset_id() const;
  void set_dataset_id(const ::std::string& value);
  #if LANG_CXX11
  void set_dataset_id(::std::string&& value);
  #endif
  void set_dataset_id(const char* value);
  void set_dataset_id(const char* value, size_t size);
  ::std::string* mutable_dataset_id();
  ::std::string* release_dataset_id();
  void set_allocated_dataset_id(::std::string* dataset_id);

  // .google.protobuf.Timestamp create_time = 7;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 7;
  private:
  const ::google::protobuf::Timestamp& _internal_create_time() const;
  public:
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // .google.protobuf.Timestamp update_time = 11;
  bool has_update_time() const;
  void clear_update_time();
  static const int kUpdateTimeFieldNumber = 11;
  private:
  const ::google::protobuf::Timestamp& _internal_update_time() const;
  public:
  const ::google::protobuf::Timestamp& update_time() const;
  ::google::protobuf::Timestamp* release_update_time();
  ::google::protobuf::Timestamp* mutable_update_time();
  void set_allocated_update_time(::google::protobuf::Timestamp* update_time);

  // .google.cloud.automl.v1beta1.Model.DeploymentState deployment_state = 8;
  void clear_deployment_state();
  static const int kDeploymentStateFieldNumber = 8;
  ::google::cloud::automl::v1beta1::Model_DeploymentState deployment_state() const;
  void set_deployment_state(::google::cloud::automl::v1beta1::Model_DeploymentState value);

  // .google.cloud.automl.v1beta1.ImageClassificationModelMetadata image_classification_model_metadata = 13;
  bool has_image_classification_model_metadata() const;
  void clear_image_classification_model_metadata();
  static const int kImageClassificationModelMetadataFieldNumber = 13;
  private:
  const ::google::cloud::automl::v1beta1::ImageClassificationModelMetadata& _internal_image_classification_model_metadata() const;
  public:
  const ::google::cloud::automl::v1beta1::ImageClassificationModelMetadata& image_classification_model_metadata() const;
  ::google::cloud::automl::v1beta1::ImageClassificationModelMetadata* release_image_classification_model_metadata();
  ::google::cloud::automl::v1beta1::ImageClassificationModelMetadata* mutable_image_classification_model_metadata();
  void set_allocated_image_classification_model_metadata(::google::cloud::automl::v1beta1::ImageClassificationModelMetadata* image_classification_model_metadata);

  // .google.cloud.automl.v1beta1.TextClassificationModelMetadata text_classification_model_metadata = 14;
  bool has_text_classification_model_metadata() const;
  void clear_text_classification_model_metadata();
  static const int kTextClassificationModelMetadataFieldNumber = 14;
  private:
  const ::google::cloud::automl::v1beta1::TextClassificationModelMetadata& _internal_text_classification_model_metadata() const;
  public:
  const ::google::cloud::automl::v1beta1::TextClassificationModelMetadata& text_classification_model_metadata() const;
  ::google::cloud::automl::v1beta1::TextClassificationModelMetadata* release_text_classification_model_metadata();
  ::google::cloud::automl::v1beta1::TextClassificationModelMetadata* mutable_text_classification_model_metadata();
  void set_allocated_text_classification_model_metadata(::google::cloud::automl::v1beta1::TextClassificationModelMetadata* text_classification_model_metadata);

  // .google.cloud.automl.v1beta1.TranslationModelMetadata translation_model_metadata = 15;
  bool has_translation_model_metadata() const;
  void clear_translation_model_metadata();
  static const int kTranslationModelMetadataFieldNumber = 15;
  private:
  const ::google::cloud::automl::v1beta1::TranslationModelMetadata& _internal_translation_model_metadata() const;
  public:
  const ::google::cloud::automl::v1beta1::TranslationModelMetadata& translation_model_metadata() const;
  ::google::cloud::automl::v1beta1::TranslationModelMetadata* release_translation_model_metadata();
  ::google::cloud::automl::v1beta1::TranslationModelMetadata* mutable_translation_model_metadata();
  void set_allocated_translation_model_metadata(::google::cloud::automl::v1beta1::TranslationModelMetadata* translation_model_metadata);

  void clear_model_metadata();
  ModelMetadataCase model_metadata_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.Model)
 private:
  void set_has_image_classification_model_metadata();
  void set_has_text_classification_model_metadata();
  void set_has_translation_model_metadata();

  inline bool has_model_metadata() const;
  inline void clear_has_model_metadata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::internal::ArenaStringPtr dataset_id_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::protobuf::Timestamp* update_time_;
  int deployment_state_;
  union ModelMetadataUnion {
    ModelMetadataUnion() {}
    ::google::cloud::automl::v1beta1::ImageClassificationModelMetadata* image_classification_model_metadata_;
    ::google::cloud::automl::v1beta1::TextClassificationModelMetadata* text_classification_model_metadata_;
    ::google::cloud::automl::v1beta1::TranslationModelMetadata* translation_model_metadata_;
  } model_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fmodel_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Model

// .google.cloud.automl.v1beta1.ImageClassificationModelMetadata image_classification_model_metadata = 13;
inline bool Model::has_image_classification_model_metadata() const {
  return model_metadata_case() == kImageClassificationModelMetadata;
}
inline void Model::set_has_image_classification_model_metadata() {
  _oneof_case_[0] = kImageClassificationModelMetadata;
}
inline const ::google::cloud::automl::v1beta1::ImageClassificationModelMetadata& Model::_internal_image_classification_model_metadata() const {
  return *model_metadata_.image_classification_model_metadata_;
}
inline ::google::cloud::automl::v1beta1::ImageClassificationModelMetadata* Model::release_image_classification_model_metadata() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Model.image_classification_model_metadata)
  if (has_image_classification_model_metadata()) {
    clear_has_model_metadata();
      ::google::cloud::automl::v1beta1::ImageClassificationModelMetadata* temp = model_metadata_.image_classification_model_metadata_;
    model_metadata_.image_classification_model_metadata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::automl::v1beta1::ImageClassificationModelMetadata& Model::image_classification_model_metadata() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Model.image_classification_model_metadata)
  return has_image_classification_model_metadata()
      ? *model_metadata_.image_classification_model_metadata_
      : *reinterpret_cast< ::google::cloud::automl::v1beta1::ImageClassificationModelMetadata*>(&::google::cloud::automl::v1beta1::_ImageClassificationModelMetadata_default_instance_);
}
inline ::google::cloud::automl::v1beta1::ImageClassificationModelMetadata* Model::mutable_image_classification_model_metadata() {
  if (!has_image_classification_model_metadata()) {
    clear_model_metadata();
    set_has_image_classification_model_metadata();
    model_metadata_.image_classification_model_metadata_ = CreateMaybeMessage< ::google::cloud::automl::v1beta1::ImageClassificationModelMetadata >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Model.image_classification_model_metadata)
  return model_metadata_.image_classification_model_metadata_;
}

// .google.cloud.automl.v1beta1.TextClassificationModelMetadata text_classification_model_metadata = 14;
inline bool Model::has_text_classification_model_metadata() const {
  return model_metadata_case() == kTextClassificationModelMetadata;
}
inline void Model::set_has_text_classification_model_metadata() {
  _oneof_case_[0] = kTextClassificationModelMetadata;
}
inline const ::google::cloud::automl::v1beta1::TextClassificationModelMetadata& Model::_internal_text_classification_model_metadata() const {
  return *model_metadata_.text_classification_model_metadata_;
}
inline ::google::cloud::automl::v1beta1::TextClassificationModelMetadata* Model::release_text_classification_model_metadata() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Model.text_classification_model_metadata)
  if (has_text_classification_model_metadata()) {
    clear_has_model_metadata();
      ::google::cloud::automl::v1beta1::TextClassificationModelMetadata* temp = model_metadata_.text_classification_model_metadata_;
    model_metadata_.text_classification_model_metadata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::automl::v1beta1::TextClassificationModelMetadata& Model::text_classification_model_metadata() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Model.text_classification_model_metadata)
  return has_text_classification_model_metadata()
      ? *model_metadata_.text_classification_model_metadata_
      : *reinterpret_cast< ::google::cloud::automl::v1beta1::TextClassificationModelMetadata*>(&::google::cloud::automl::v1beta1::_TextClassificationModelMetadata_default_instance_);
}
inline ::google::cloud::automl::v1beta1::TextClassificationModelMetadata* Model::mutable_text_classification_model_metadata() {
  if (!has_text_classification_model_metadata()) {
    clear_model_metadata();
    set_has_text_classification_model_metadata();
    model_metadata_.text_classification_model_metadata_ = CreateMaybeMessage< ::google::cloud::automl::v1beta1::TextClassificationModelMetadata >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Model.text_classification_model_metadata)
  return model_metadata_.text_classification_model_metadata_;
}

// .google.cloud.automl.v1beta1.TranslationModelMetadata translation_model_metadata = 15;
inline bool Model::has_translation_model_metadata() const {
  return model_metadata_case() == kTranslationModelMetadata;
}
inline void Model::set_has_translation_model_metadata() {
  _oneof_case_[0] = kTranslationModelMetadata;
}
inline const ::google::cloud::automl::v1beta1::TranslationModelMetadata& Model::_internal_translation_model_metadata() const {
  return *model_metadata_.translation_model_metadata_;
}
inline ::google::cloud::automl::v1beta1::TranslationModelMetadata* Model::release_translation_model_metadata() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Model.translation_model_metadata)
  if (has_translation_model_metadata()) {
    clear_has_model_metadata();
      ::google::cloud::automl::v1beta1::TranslationModelMetadata* temp = model_metadata_.translation_model_metadata_;
    model_metadata_.translation_model_metadata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::automl::v1beta1::TranslationModelMetadata& Model::translation_model_metadata() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Model.translation_model_metadata)
  return has_translation_model_metadata()
      ? *model_metadata_.translation_model_metadata_
      : *reinterpret_cast< ::google::cloud::automl::v1beta1::TranslationModelMetadata*>(&::google::cloud::automl::v1beta1::_TranslationModelMetadata_default_instance_);
}
inline ::google::cloud::automl::v1beta1::TranslationModelMetadata* Model::mutable_translation_model_metadata() {
  if (!has_translation_model_metadata()) {
    clear_model_metadata();
    set_has_translation_model_metadata();
    model_metadata_.translation_model_metadata_ = CreateMaybeMessage< ::google::cloud::automl::v1beta1::TranslationModelMetadata >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Model.translation_model_metadata)
  return model_metadata_.translation_model_metadata_;
}

// string name = 1;
inline void Model::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Model::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Model.name)
  return name_.GetNoArena();
}
inline void Model::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.Model.name)
}
#if LANG_CXX11
inline void Model::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.Model.name)
}
#endif
inline void Model::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.Model.name)
}
inline void Model::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.Model.name)
}
inline ::std::string* Model::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Model.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Model::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Model.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Model::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.Model.name)
}

// string display_name = 2;
inline void Model::clear_display_name() {
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Model::display_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Model.display_name)
  return display_name_.GetNoArena();
}
inline void Model::set_display_name(const ::std::string& value) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.Model.display_name)
}
#if LANG_CXX11
inline void Model::set_display_name(::std::string&& value) {
  
  display_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.Model.display_name)
}
#endif
inline void Model::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.Model.display_name)
}
inline void Model::set_display_name(const char* value, size_t size) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.Model.display_name)
}
inline ::std::string* Model::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Model.display_name)
  return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Model::release_display_name() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Model.display_name)
  
  return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Model::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.Model.display_name)
}

// string dataset_id = 3;
inline void Model::clear_dataset_id() {
  dataset_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Model::dataset_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Model.dataset_id)
  return dataset_id_.GetNoArena();
}
inline void Model::set_dataset_id(const ::std::string& value) {
  
  dataset_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.Model.dataset_id)
}
#if LANG_CXX11
inline void Model::set_dataset_id(::std::string&& value) {
  
  dataset_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.Model.dataset_id)
}
#endif
inline void Model::set_dataset_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataset_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.Model.dataset_id)
}
inline void Model::set_dataset_id(const char* value, size_t size) {
  
  dataset_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.Model.dataset_id)
}
inline ::std::string* Model::mutable_dataset_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Model.dataset_id)
  return dataset_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Model::release_dataset_id() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Model.dataset_id)
  
  return dataset_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Model::set_allocated_dataset_id(::std::string* dataset_id) {
  if (dataset_id != NULL) {
    
  } else {
    
  }
  dataset_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataset_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.Model.dataset_id)
}

// .google.protobuf.Timestamp create_time = 7;
inline bool Model::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Model::_internal_create_time() const {
  return *create_time_;
}
inline const ::google::protobuf::Timestamp& Model::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Model.create_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Model::release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Model.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Model::mutable_create_time() {
  
  if (create_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    create_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Model.create_time)
  return create_time_;
}
inline void Model::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.Model.create_time)
}

// .google.protobuf.Timestamp update_time = 11;
inline bool Model::has_update_time() const {
  return this != internal_default_instance() && update_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Model::_internal_update_time() const {
  return *update_time_;
}
inline const ::google::protobuf::Timestamp& Model::update_time() const {
  const ::google::protobuf::Timestamp* p = update_time_;
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Model.update_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Model::release_update_time() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Model.update_time)
  
  ::google::protobuf::Timestamp* temp = update_time_;
  update_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Model::mutable_update_time() {
  
  if (update_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    update_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Model.update_time)
  return update_time_;
}
inline void Model::set_allocated_update_time(::google::protobuf::Timestamp* update_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_time_);
  }
  if (update_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(update_time)->GetArena();
    if (message_arena != submessage_arena) {
      update_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_time, submessage_arena);
    }
    
  } else {
    
  }
  update_time_ = update_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.Model.update_time)
}

// .google.cloud.automl.v1beta1.Model.DeploymentState deployment_state = 8;
inline void Model::clear_deployment_state() {
  deployment_state_ = 0;
}
inline ::google::cloud::automl::v1beta1::Model_DeploymentState Model::deployment_state() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Model.deployment_state)
  return static_cast< ::google::cloud::automl::v1beta1::Model_DeploymentState >(deployment_state_);
}
inline void Model::set_deployment_state(::google::cloud::automl::v1beta1::Model_DeploymentState value) {
  
  deployment_state_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.Model.deployment_state)
}

inline bool Model::has_model_metadata() const {
  return model_metadata_case() != MODEL_METADATA_NOT_SET;
}
inline void Model::clear_has_model_metadata() {
  _oneof_case_[0] = MODEL_METADATA_NOT_SET;
}
inline Model::ModelMetadataCase Model::model_metadata_case() const {
  return Model::ModelMetadataCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::automl::v1beta1::Model_DeploymentState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::automl::v1beta1::Model_DeploymentState>() {
  return ::google::cloud::automl::v1beta1::Model_DeploymentState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2fautoml_2fv1beta1_2fmodel_2eproto
