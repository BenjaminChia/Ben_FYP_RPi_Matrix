// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/automl/v1beta1/image.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2fautoml_2fv1beta1_2fimage_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2fautoml_2fv1beta1_2fimage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/automl/v1beta1/classification.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2fimage_2eproto 

namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fimage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fimage_2eproto
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {
class ImageClassificationDatasetMetadata;
class ImageClassificationDatasetMetadataDefaultTypeInternal;
extern ImageClassificationDatasetMetadataDefaultTypeInternal _ImageClassificationDatasetMetadata_default_instance_;
class ImageClassificationModelMetadata;
class ImageClassificationModelMetadataDefaultTypeInternal;
extern ImageClassificationModelMetadataDefaultTypeInternal _ImageClassificationModelMetadata_default_instance_;
}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata>(Arena*);
template<> ::google::cloud::automl::v1beta1::ImageClassificationModelMetadata* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::ImageClassificationModelMetadata>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {

// ===================================================================

class ImageClassificationDatasetMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.ImageClassificationDatasetMetadata) */ {
 public:
  ImageClassificationDatasetMetadata();
  virtual ~ImageClassificationDatasetMetadata();

  ImageClassificationDatasetMetadata(const ImageClassificationDatasetMetadata& from);

  inline ImageClassificationDatasetMetadata& operator=(const ImageClassificationDatasetMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageClassificationDatasetMetadata(ImageClassificationDatasetMetadata&& from) noexcept
    : ImageClassificationDatasetMetadata() {
    *this = ::std::move(from);
  }

  inline ImageClassificationDatasetMetadata& operator=(ImageClassificationDatasetMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageClassificationDatasetMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageClassificationDatasetMetadata* internal_default_instance() {
    return reinterpret_cast<const ImageClassificationDatasetMetadata*>(
               &_ImageClassificationDatasetMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ImageClassificationDatasetMetadata* other);
  friend void swap(ImageClassificationDatasetMetadata& a, ImageClassificationDatasetMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageClassificationDatasetMetadata* New() const final {
    return CreateMaybeMessage<ImageClassificationDatasetMetadata>(NULL);
  }

  ImageClassificationDatasetMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImageClassificationDatasetMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImageClassificationDatasetMetadata& from);
  void MergeFrom(const ImageClassificationDatasetMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImageClassificationDatasetMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.automl.v1beta1.ClassificationType classification_type = 1;
  void clear_classification_type();
  static const int kClassificationTypeFieldNumber = 1;
  ::google::cloud::automl::v1beta1::ClassificationType classification_type() const;
  void set_classification_type(::google::cloud::automl::v1beta1::ClassificationType value);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.ImageClassificationDatasetMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int classification_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fimage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImageClassificationModelMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.ImageClassificationModelMetadata) */ {
 public:
  ImageClassificationModelMetadata();
  virtual ~ImageClassificationModelMetadata();

  ImageClassificationModelMetadata(const ImageClassificationModelMetadata& from);

  inline ImageClassificationModelMetadata& operator=(const ImageClassificationModelMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageClassificationModelMetadata(ImageClassificationModelMetadata&& from) noexcept
    : ImageClassificationModelMetadata() {
    *this = ::std::move(from);
  }

  inline ImageClassificationModelMetadata& operator=(ImageClassificationModelMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageClassificationModelMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageClassificationModelMetadata* internal_default_instance() {
    return reinterpret_cast<const ImageClassificationModelMetadata*>(
               &_ImageClassificationModelMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ImageClassificationModelMetadata* other);
  friend void swap(ImageClassificationModelMetadata& a, ImageClassificationModelMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageClassificationModelMetadata* New() const final {
    return CreateMaybeMessage<ImageClassificationModelMetadata>(NULL);
  }

  ImageClassificationModelMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImageClassificationModelMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImageClassificationModelMetadata& from);
  void MergeFrom(const ImageClassificationModelMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImageClassificationModelMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string base_model_id = 1;
  void clear_base_model_id();
  static const int kBaseModelIdFieldNumber = 1;
  const ::std::string& base_model_id() const;
  void set_base_model_id(const ::std::string& value);
  #if LANG_CXX11
  void set_base_model_id(::std::string&& value);
  #endif
  void set_base_model_id(const char* value);
  void set_base_model_id(const char* value, size_t size);
  ::std::string* mutable_base_model_id();
  ::std::string* release_base_model_id();
  void set_allocated_base_model_id(::std::string* base_model_id);

  // string stop_reason = 5;
  void clear_stop_reason();
  static const int kStopReasonFieldNumber = 5;
  const ::std::string& stop_reason() const;
  void set_stop_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_stop_reason(::std::string&& value);
  #endif
  void set_stop_reason(const char* value);
  void set_stop_reason(const char* value, size_t size);
  ::std::string* mutable_stop_reason();
  ::std::string* release_stop_reason();
  void set_allocated_stop_reason(::std::string* stop_reason);

  // int64 train_budget = 2;
  void clear_train_budget();
  static const int kTrainBudgetFieldNumber = 2;
  ::google::protobuf::int64 train_budget() const;
  void set_train_budget(::google::protobuf::int64 value);

  // int64 train_cost = 3;
  void clear_train_cost();
  static const int kTrainCostFieldNumber = 3;
  ::google::protobuf::int64 train_cost() const;
  void set_train_cost(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.ImageClassificationModelMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr base_model_id_;
  ::google::protobuf::internal::ArenaStringPtr stop_reason_;
  ::google::protobuf::int64 train_budget_;
  ::google::protobuf::int64 train_cost_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fimage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ImageClassificationDatasetMetadata

// .google.cloud.automl.v1beta1.ClassificationType classification_type = 1;
inline void ImageClassificationDatasetMetadata::clear_classification_type() {
  classification_type_ = 0;
}
inline ::google::cloud::automl::v1beta1::ClassificationType ImageClassificationDatasetMetadata::classification_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ImageClassificationDatasetMetadata.classification_type)
  return static_cast< ::google::cloud::automl::v1beta1::ClassificationType >(classification_type_);
}
inline void ImageClassificationDatasetMetadata::set_classification_type(::google::cloud::automl::v1beta1::ClassificationType value) {
  
  classification_type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ImageClassificationDatasetMetadata.classification_type)
}

// -------------------------------------------------------------------

// ImageClassificationModelMetadata

// string base_model_id = 1;
inline void ImageClassificationModelMetadata::clear_base_model_id() {
  base_model_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImageClassificationModelMetadata::base_model_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.base_model_id)
  return base_model_id_.GetNoArena();
}
inline void ImageClassificationModelMetadata::set_base_model_id(const ::std::string& value) {
  
  base_model_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.base_model_id)
}
#if LANG_CXX11
inline void ImageClassificationModelMetadata::set_base_model_id(::std::string&& value) {
  
  base_model_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.base_model_id)
}
#endif
inline void ImageClassificationModelMetadata::set_base_model_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  base_model_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.base_model_id)
}
inline void ImageClassificationModelMetadata::set_base_model_id(const char* value, size_t size) {
  
  base_model_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.base_model_id)
}
inline ::std::string* ImageClassificationModelMetadata::mutable_base_model_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.base_model_id)
  return base_model_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImageClassificationModelMetadata::release_base_model_id() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.base_model_id)
  
  return base_model_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageClassificationModelMetadata::set_allocated_base_model_id(::std::string* base_model_id) {
  if (base_model_id != NULL) {
    
  } else {
    
  }
  base_model_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), base_model_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.base_model_id)
}

// int64 train_budget = 2;
inline void ImageClassificationModelMetadata::clear_train_budget() {
  train_budget_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ImageClassificationModelMetadata::train_budget() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.train_budget)
  return train_budget_;
}
inline void ImageClassificationModelMetadata::set_train_budget(::google::protobuf::int64 value) {
  
  train_budget_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.train_budget)
}

// int64 train_cost = 3;
inline void ImageClassificationModelMetadata::clear_train_cost() {
  train_cost_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ImageClassificationModelMetadata::train_cost() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.train_cost)
  return train_cost_;
}
inline void ImageClassificationModelMetadata::set_train_cost(::google::protobuf::int64 value) {
  
  train_cost_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.train_cost)
}

// string stop_reason = 5;
inline void ImageClassificationModelMetadata::clear_stop_reason() {
  stop_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImageClassificationModelMetadata::stop_reason() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.stop_reason)
  return stop_reason_.GetNoArena();
}
inline void ImageClassificationModelMetadata::set_stop_reason(const ::std::string& value) {
  
  stop_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.stop_reason)
}
#if LANG_CXX11
inline void ImageClassificationModelMetadata::set_stop_reason(::std::string&& value) {
  
  stop_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.stop_reason)
}
#endif
inline void ImageClassificationModelMetadata::set_stop_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stop_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.stop_reason)
}
inline void ImageClassificationModelMetadata::set_stop_reason(const char* value, size_t size) {
  
  stop_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.stop_reason)
}
inline ::std::string* ImageClassificationModelMetadata::mutable_stop_reason() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.stop_reason)
  return stop_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImageClassificationModelMetadata::release_stop_reason() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.stop_reason)
  
  return stop_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageClassificationModelMetadata::set_allocated_stop_reason(::std::string* stop_reason) {
  if (stop_reason != NULL) {
    
  } else {
    
  }
  stop_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stop_reason);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ImageClassificationModelMetadata.stop_reason)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2fautoml_2fv1beta1_2fimage_2eproto
