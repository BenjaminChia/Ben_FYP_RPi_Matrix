// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/automl/v1beta1/dataset.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/automl/v1beta1/annotation_payload.pb.h"
#include "google/cloud/automl/v1beta1/data_items.pb.h"
#include "google/cloud/automl/v1beta1/image.pb.h"
#include "google/cloud/automl/v1beta1/text.pb.h"
#include "google/cloud/automl/v1beta1/translation.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto 

namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {
class Dataset;
class DatasetDefaultTypeInternal;
extern DatasetDefaultTypeInternal _Dataset_default_instance_;
}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::automl::v1beta1::Dataset* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::Dataset>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {

// ===================================================================

class Dataset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.Dataset) */ {
 public:
  Dataset();
  virtual ~Dataset();

  Dataset(const Dataset& from);

  inline Dataset& operator=(const Dataset& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Dataset(Dataset&& from) noexcept
    : Dataset() {
    *this = ::std::move(from);
  }

  inline Dataset& operator=(Dataset&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Dataset& default_instance();

  enum DatasetMetadataCase {
    kTranslationDatasetMetadata = 23,
    kImageClassificationDatasetMetadata = 24,
    kTextClassificationDatasetMetadata = 25,
    DATASET_METADATA_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Dataset* internal_default_instance() {
    return reinterpret_cast<const Dataset*>(
               &_Dataset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Dataset* other);
  friend void swap(Dataset& a, Dataset& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Dataset* New() const final {
    return CreateMaybeMessage<Dataset>(NULL);
  }

  Dataset* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Dataset>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Dataset& from);
  void MergeFrom(const Dataset& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Dataset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string display_name = 2;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 2;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);

  // .google.protobuf.Timestamp create_time = 14;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 14;
  private:
  const ::google::protobuf::Timestamp& _internal_create_time() const;
  public:
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // int32 example_count = 21;
  void clear_example_count();
  static const int kExampleCountFieldNumber = 21;
  ::google::protobuf::int32 example_count() const;
  void set_example_count(::google::protobuf::int32 value);

  // .google.cloud.automl.v1beta1.TranslationDatasetMetadata translation_dataset_metadata = 23;
  bool has_translation_dataset_metadata() const;
  void clear_translation_dataset_metadata();
  static const int kTranslationDatasetMetadataFieldNumber = 23;
  private:
  const ::google::cloud::automl::v1beta1::TranslationDatasetMetadata& _internal_translation_dataset_metadata() const;
  public:
  const ::google::cloud::automl::v1beta1::TranslationDatasetMetadata& translation_dataset_metadata() const;
  ::google::cloud::automl::v1beta1::TranslationDatasetMetadata* release_translation_dataset_metadata();
  ::google::cloud::automl::v1beta1::TranslationDatasetMetadata* mutable_translation_dataset_metadata();
  void set_allocated_translation_dataset_metadata(::google::cloud::automl::v1beta1::TranslationDatasetMetadata* translation_dataset_metadata);

  // .google.cloud.automl.v1beta1.ImageClassificationDatasetMetadata image_classification_dataset_metadata = 24;
  bool has_image_classification_dataset_metadata() const;
  void clear_image_classification_dataset_metadata();
  static const int kImageClassificationDatasetMetadataFieldNumber = 24;
  private:
  const ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata& _internal_image_classification_dataset_metadata() const;
  public:
  const ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata& image_classification_dataset_metadata() const;
  ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata* release_image_classification_dataset_metadata();
  ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata* mutable_image_classification_dataset_metadata();
  void set_allocated_image_classification_dataset_metadata(::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata* image_classification_dataset_metadata);

  // .google.cloud.automl.v1beta1.TextClassificationDatasetMetadata text_classification_dataset_metadata = 25;
  bool has_text_classification_dataset_metadata() const;
  void clear_text_classification_dataset_metadata();
  static const int kTextClassificationDatasetMetadataFieldNumber = 25;
  private:
  const ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata& _internal_text_classification_dataset_metadata() const;
  public:
  const ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata& text_classification_dataset_metadata() const;
  ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata* release_text_classification_dataset_metadata();
  ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata* mutable_text_classification_dataset_metadata();
  void set_allocated_text_classification_dataset_metadata(::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata* text_classification_dataset_metadata);

  void clear_dataset_metadata();
  DatasetMetadataCase dataset_metadata_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.Dataset)
 private:
  void set_has_translation_dataset_metadata();
  void set_has_image_classification_dataset_metadata();
  void set_has_text_classification_dataset_metadata();

  inline bool has_dataset_metadata() const;
  inline void clear_has_dataset_metadata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::protobuf::int32 example_count_;
  union DatasetMetadataUnion {
    DatasetMetadataUnion() {}
    ::google::cloud::automl::v1beta1::TranslationDatasetMetadata* translation_dataset_metadata_;
    ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata* image_classification_dataset_metadata_;
    ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata* text_classification_dataset_metadata_;
  } dataset_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Dataset

// .google.cloud.automl.v1beta1.TranslationDatasetMetadata translation_dataset_metadata = 23;
inline bool Dataset::has_translation_dataset_metadata() const {
  return dataset_metadata_case() == kTranslationDatasetMetadata;
}
inline void Dataset::set_has_translation_dataset_metadata() {
  _oneof_case_[0] = kTranslationDatasetMetadata;
}
inline const ::google::cloud::automl::v1beta1::TranslationDatasetMetadata& Dataset::_internal_translation_dataset_metadata() const {
  return *dataset_metadata_.translation_dataset_metadata_;
}
inline ::google::cloud::automl::v1beta1::TranslationDatasetMetadata* Dataset::release_translation_dataset_metadata() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Dataset.translation_dataset_metadata)
  if (has_translation_dataset_metadata()) {
    clear_has_dataset_metadata();
      ::google::cloud::automl::v1beta1::TranslationDatasetMetadata* temp = dataset_metadata_.translation_dataset_metadata_;
    dataset_metadata_.translation_dataset_metadata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::automl::v1beta1::TranslationDatasetMetadata& Dataset::translation_dataset_metadata() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Dataset.translation_dataset_metadata)
  return has_translation_dataset_metadata()
      ? *dataset_metadata_.translation_dataset_metadata_
      : *reinterpret_cast< ::google::cloud::automl::v1beta1::TranslationDatasetMetadata*>(&::google::cloud::automl::v1beta1::_TranslationDatasetMetadata_default_instance_);
}
inline ::google::cloud::automl::v1beta1::TranslationDatasetMetadata* Dataset::mutable_translation_dataset_metadata() {
  if (!has_translation_dataset_metadata()) {
    clear_dataset_metadata();
    set_has_translation_dataset_metadata();
    dataset_metadata_.translation_dataset_metadata_ = CreateMaybeMessage< ::google::cloud::automl::v1beta1::TranslationDatasetMetadata >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Dataset.translation_dataset_metadata)
  return dataset_metadata_.translation_dataset_metadata_;
}

// .google.cloud.automl.v1beta1.ImageClassificationDatasetMetadata image_classification_dataset_metadata = 24;
inline bool Dataset::has_image_classification_dataset_metadata() const {
  return dataset_metadata_case() == kImageClassificationDatasetMetadata;
}
inline void Dataset::set_has_image_classification_dataset_metadata() {
  _oneof_case_[0] = kImageClassificationDatasetMetadata;
}
inline const ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata& Dataset::_internal_image_classification_dataset_metadata() const {
  return *dataset_metadata_.image_classification_dataset_metadata_;
}
inline ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata* Dataset::release_image_classification_dataset_metadata() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Dataset.image_classification_dataset_metadata)
  if (has_image_classification_dataset_metadata()) {
    clear_has_dataset_metadata();
      ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata* temp = dataset_metadata_.image_classification_dataset_metadata_;
    dataset_metadata_.image_classification_dataset_metadata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata& Dataset::image_classification_dataset_metadata() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Dataset.image_classification_dataset_metadata)
  return has_image_classification_dataset_metadata()
      ? *dataset_metadata_.image_classification_dataset_metadata_
      : *reinterpret_cast< ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata*>(&::google::cloud::automl::v1beta1::_ImageClassificationDatasetMetadata_default_instance_);
}
inline ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata* Dataset::mutable_image_classification_dataset_metadata() {
  if (!has_image_classification_dataset_metadata()) {
    clear_dataset_metadata();
    set_has_image_classification_dataset_metadata();
    dataset_metadata_.image_classification_dataset_metadata_ = CreateMaybeMessage< ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Dataset.image_classification_dataset_metadata)
  return dataset_metadata_.image_classification_dataset_metadata_;
}

// .google.cloud.automl.v1beta1.TextClassificationDatasetMetadata text_classification_dataset_metadata = 25;
inline bool Dataset::has_text_classification_dataset_metadata() const {
  return dataset_metadata_case() == kTextClassificationDatasetMetadata;
}
inline void Dataset::set_has_text_classification_dataset_metadata() {
  _oneof_case_[0] = kTextClassificationDatasetMetadata;
}
inline const ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata& Dataset::_internal_text_classification_dataset_metadata() const {
  return *dataset_metadata_.text_classification_dataset_metadata_;
}
inline ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata* Dataset::release_text_classification_dataset_metadata() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Dataset.text_classification_dataset_metadata)
  if (has_text_classification_dataset_metadata()) {
    clear_has_dataset_metadata();
      ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata* temp = dataset_metadata_.text_classification_dataset_metadata_;
    dataset_metadata_.text_classification_dataset_metadata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata& Dataset::text_classification_dataset_metadata() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Dataset.text_classification_dataset_metadata)
  return has_text_classification_dataset_metadata()
      ? *dataset_metadata_.text_classification_dataset_metadata_
      : *reinterpret_cast< ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata*>(&::google::cloud::automl::v1beta1::_TextClassificationDatasetMetadata_default_instance_);
}
inline ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata* Dataset::mutable_text_classification_dataset_metadata() {
  if (!has_text_classification_dataset_metadata()) {
    clear_dataset_metadata();
    set_has_text_classification_dataset_metadata();
    dataset_metadata_.text_classification_dataset_metadata_ = CreateMaybeMessage< ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Dataset.text_classification_dataset_metadata)
  return dataset_metadata_.text_classification_dataset_metadata_;
}

// string name = 1;
inline void Dataset::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Dataset::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Dataset.name)
  return name_.GetNoArena();
}
inline void Dataset::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.Dataset.name)
}
#if LANG_CXX11
inline void Dataset::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.Dataset.name)
}
#endif
inline void Dataset::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.Dataset.name)
}
inline void Dataset::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.Dataset.name)
}
inline ::std::string* Dataset::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Dataset.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Dataset::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Dataset.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Dataset::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.Dataset.name)
}

// string display_name = 2;
inline void Dataset::clear_display_name() {
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Dataset::display_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Dataset.display_name)
  return display_name_.GetNoArena();
}
inline void Dataset::set_display_name(const ::std::string& value) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.Dataset.display_name)
}
#if LANG_CXX11
inline void Dataset::set_display_name(::std::string&& value) {
  
  display_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.Dataset.display_name)
}
#endif
inline void Dataset::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.Dataset.display_name)
}
inline void Dataset::set_display_name(const char* value, size_t size) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.Dataset.display_name)
}
inline ::std::string* Dataset::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Dataset.display_name)
  return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Dataset::release_display_name() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Dataset.display_name)
  
  return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Dataset::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.Dataset.display_name)
}

// int32 example_count = 21;
inline void Dataset::clear_example_count() {
  example_count_ = 0;
}
inline ::google::protobuf::int32 Dataset::example_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Dataset.example_count)
  return example_count_;
}
inline void Dataset::set_example_count(::google::protobuf::int32 value) {
  
  example_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.Dataset.example_count)
}

// .google.protobuf.Timestamp create_time = 14;
inline bool Dataset::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Dataset::_internal_create_time() const {
  return *create_time_;
}
inline const ::google::protobuf::Timestamp& Dataset::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.Dataset.create_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Dataset::release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.Dataset.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Dataset::mutable_create_time() {
  
  if (create_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    create_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.Dataset.create_time)
  return create_time_;
}
inline void Dataset::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.Dataset.create_time)
}

inline bool Dataset::has_dataset_metadata() const {
  return dataset_metadata_case() != DATASET_METADATA_NOT_SET;
}
inline void Dataset::clear_has_dataset_metadata() {
  _oneof_case_[0] = DATASET_METADATA_NOT_SET;
}
inline Dataset::DatasetMetadataCase Dataset::dataset_metadata_case() const {
  return Dataset::DatasetMetadataCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto
