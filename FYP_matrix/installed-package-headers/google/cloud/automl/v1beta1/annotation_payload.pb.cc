// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/automl/v1beta1/annotation_payload.proto

#include "google/cloud/automl/v1beta1/annotation_payload.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fclassification_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2fclassification_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClassificationAnnotation;
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fclassification_2eproto
namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftranslation_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftranslation_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TranslationAnnotation;
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftranslation_2eproto
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {
class AnnotationPayloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnnotationPayload>
      _instance;
  const ::google::cloud::automl::v1beta1::TranslationAnnotation* translation_;
  const ::google::cloud::automl::v1beta1::ClassificationAnnotation* classification_;
} _AnnotationPayload_default_instance_;
}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fannotation_5fpayload_2eproto {
static void InitDefaultsAnnotationPayload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::automl::v1beta1::_AnnotationPayload_default_instance_;
    new (ptr) ::google::cloud::automl::v1beta1::AnnotationPayload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::automl::v1beta1::AnnotationPayload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AnnotationPayload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAnnotationPayload}, {
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftranslation_2eproto::scc_info_TranslationAnnotation.base,
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fclassification_2eproto::scc_info_ClassificationAnnotation.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AnnotationPayload.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::AnnotationPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::AnnotationPayload, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::automl::v1beta1::AnnotationPayloadDefaultTypeInternal, translation_),
  offsetof(::google::cloud::automl::v1beta1::AnnotationPayloadDefaultTypeInternal, classification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::AnnotationPayload, annotation_spec_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::AnnotationPayload, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::AnnotationPayload, detail_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::automl::v1beta1::AnnotationPayload)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::automl::v1beta1::_AnnotationPayload_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/automl/v1beta1/annotation_payload.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n4google/cloud/automl/v1beta1/annotation"
      "_payload.proto\022\033google.cloud.automl.v1be"
      "ta1\032\034google/api/annotations.proto\0320googl"
      "e/cloud/automl/v1beta1/classification.pr"
      "oto\032-google/cloud/automl/v1beta1/transla"
      "tion.proto\"\353\001\n\021AnnotationPayload\022I\n\013tran"
      "slation\030\002 \001(\01322.google.cloud.automl.v1be"
      "ta1.TranslationAnnotationH\000\022O\n\016classific"
      "ation\030\003 \001(\01325.google.cloud.automl.v1beta"
      "1.ClassificationAnnotationH\000\022\032\n\022annotati"
      "on_spec_id\030\001 \001(\t\022\024\n\014display_name\030\005 \001(\tB\010"
      "\n\006detailBf\n\037com.google.cloud.automl.v1be"
      "ta1P\001ZAgoogle.golang.org/genproto/google"
      "apis/cloud/automl/v1beta1;automlb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 560);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/automl/v1beta1/annotation_payload.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fclassification_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftranslation_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fannotation_5fpayload_2eproto
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {

// ===================================================================

void AnnotationPayload::InitAsDefaultInstance() {
  ::google::cloud::automl::v1beta1::_AnnotationPayload_default_instance_.translation_ = const_cast< ::google::cloud::automl::v1beta1::TranslationAnnotation*>(
      ::google::cloud::automl::v1beta1::TranslationAnnotation::internal_default_instance());
  ::google::cloud::automl::v1beta1::_AnnotationPayload_default_instance_.classification_ = const_cast< ::google::cloud::automl::v1beta1::ClassificationAnnotation*>(
      ::google::cloud::automl::v1beta1::ClassificationAnnotation::internal_default_instance());
}
void AnnotationPayload::set_allocated_translation(::google::cloud::automl::v1beta1::TranslationAnnotation* translation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_detail();
  if (translation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      translation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, translation, submessage_arena);
    }
    set_has_translation();
    detail_.translation_ = translation;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.AnnotationPayload.translation)
}
void AnnotationPayload::clear_translation() {
  if (has_translation()) {
    delete detail_.translation_;
    clear_has_detail();
  }
}
void AnnotationPayload::set_allocated_classification(::google::cloud::automl::v1beta1::ClassificationAnnotation* classification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_detail();
  if (classification) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      classification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, classification, submessage_arena);
    }
    set_has_classification();
    detail_.classification_ = classification;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.AnnotationPayload.classification)
}
void AnnotationPayload::clear_classification() {
  if (has_classification()) {
    delete detail_.classification_;
    clear_has_detail();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnnotationPayload::kTranslationFieldNumber;
const int AnnotationPayload::kClassificationFieldNumber;
const int AnnotationPayload::kAnnotationSpecIdFieldNumber;
const int AnnotationPayload::kDisplayNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnnotationPayload::AnnotationPayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fannotation_5fpayload_2eproto::scc_info_AnnotationPayload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.automl.v1beta1.AnnotationPayload)
}
AnnotationPayload::AnnotationPayload(const AnnotationPayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotation_spec_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.annotation_spec_id().size() > 0) {
    annotation_spec_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.annotation_spec_id_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  clear_has_detail();
  switch (from.detail_case()) {
    case kTranslation: {
      mutable_translation()->::google::cloud::automl::v1beta1::TranslationAnnotation::MergeFrom(from.translation());
      break;
    }
    case kClassification: {
      mutable_classification()->::google::cloud::automl::v1beta1::ClassificationAnnotation::MergeFrom(from.classification());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.automl.v1beta1.AnnotationPayload)
}

void AnnotationPayload::SharedCtor() {
  annotation_spec_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_detail();
}

AnnotationPayload::~AnnotationPayload() {
  // @@protoc_insertion_point(destructor:google.cloud.automl.v1beta1.AnnotationPayload)
  SharedDtor();
}

void AnnotationPayload::SharedDtor() {
  annotation_spec_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_detail()) {
    clear_detail();
  }
}

void AnnotationPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AnnotationPayload::descriptor() {
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fannotation_5fpayload_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fannotation_5fpayload_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnnotationPayload& AnnotationPayload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fautoml_2fv1beta1_2fannotation_5fpayload_2eproto::scc_info_AnnotationPayload.base);
  return *internal_default_instance();
}


void AnnotationPayload::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.automl.v1beta1.AnnotationPayload)
  switch (detail_case()) {
    case kTranslation: {
      delete detail_.translation_;
      break;
    }
    case kClassification: {
      delete detail_.classification_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void AnnotationPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.automl.v1beta1.AnnotationPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  annotation_spec_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_detail();
  _internal_metadata_.Clear();
}

bool AnnotationPayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.automl.v1beta1.AnnotationPayload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string annotation_spec_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_annotation_spec_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotation_spec_id().data(), static_cast<int>(this->annotation_spec_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.automl.v1beta1.AnnotationPayload.annotation_spec_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.automl.v1beta1.TranslationAnnotation translation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_translation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.automl.v1beta1.ClassificationAnnotation classification = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_classification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.automl.v1beta1.AnnotationPayload.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.automl.v1beta1.AnnotationPayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.automl.v1beta1.AnnotationPayload)
  return false;
#undef DO_
}

void AnnotationPayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.automl.v1beta1.AnnotationPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string annotation_spec_id = 1;
  if (this->annotation_spec_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotation_spec_id().data(), static_cast<int>(this->annotation_spec_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.AnnotationPayload.annotation_spec_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->annotation_spec_id(), output);
  }

  // .google.cloud.automl.v1beta1.TranslationAnnotation translation = 2;
  if (has_translation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_translation(), output);
  }

  // .google.cloud.automl.v1beta1.ClassificationAnnotation classification = 3;
  if (has_classification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_classification(), output);
  }

  // string display_name = 5;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.AnnotationPayload.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->display_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.automl.v1beta1.AnnotationPayload)
}

::google::protobuf::uint8* AnnotationPayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.automl.v1beta1.AnnotationPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string annotation_spec_id = 1;
  if (this->annotation_spec_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotation_spec_id().data(), static_cast<int>(this->annotation_spec_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.AnnotationPayload.annotation_spec_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->annotation_spec_id(), target);
  }

  // .google.cloud.automl.v1beta1.TranslationAnnotation translation = 2;
  if (has_translation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_translation(), deterministic, target);
  }

  // .google.cloud.automl.v1beta1.ClassificationAnnotation classification = 3;
  if (has_classification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_classification(), deterministic, target);
  }

  // string display_name = 5;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.AnnotationPayload.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->display_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.automl.v1beta1.AnnotationPayload)
  return target;
}

size_t AnnotationPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.automl.v1beta1.AnnotationPayload)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string annotation_spec_id = 1;
  if (this->annotation_spec_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->annotation_spec_id());
  }

  // string display_name = 5;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  switch (detail_case()) {
    // .google.cloud.automl.v1beta1.TranslationAnnotation translation = 2;
    case kTranslation: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *detail_.translation_);
      break;
    }
    // .google.cloud.automl.v1beta1.ClassificationAnnotation classification = 3;
    case kClassification: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *detail_.classification_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnnotationPayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.automl.v1beta1.AnnotationPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const AnnotationPayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnnotationPayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.automl.v1beta1.AnnotationPayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.automl.v1beta1.AnnotationPayload)
    MergeFrom(*source);
  }
}

void AnnotationPayload::MergeFrom(const AnnotationPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.automl.v1beta1.AnnotationPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.annotation_spec_id().size() > 0) {

    annotation_spec_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.annotation_spec_id_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  switch (from.detail_case()) {
    case kTranslation: {
      mutable_translation()->::google::cloud::automl::v1beta1::TranslationAnnotation::MergeFrom(from.translation());
      break;
    }
    case kClassification: {
      mutable_classification()->::google::cloud::automl::v1beta1::ClassificationAnnotation::MergeFrom(from.classification());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void AnnotationPayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.automl.v1beta1.AnnotationPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnnotationPayload::CopyFrom(const AnnotationPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.automl.v1beta1.AnnotationPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnnotationPayload::IsInitialized() const {
  return true;
}

void AnnotationPayload::Swap(AnnotationPayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnnotationPayload::InternalSwap(AnnotationPayload* other) {
  using std::swap;
  annotation_spec_id_.Swap(&other->annotation_spec_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AnnotationPayload::GetMetadata() const {
  protobuf_google_2fcloud_2fautoml_2fv1beta1_2fannotation_5fpayload_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fannotation_5fpayload_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::automl::v1beta1::AnnotationPayload* Arena::CreateMaybeMessage< ::google::cloud::automl::v1beta1::AnnotationPayload >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::automl::v1beta1::AnnotationPayload >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
