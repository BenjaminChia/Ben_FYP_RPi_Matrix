// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/automl/v1beta1/service.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/automl/v1beta1/annotation_payload.pb.h"
#include "google/cloud/automl/v1beta1/dataset.pb.h"
#include "google/cloud/automl/v1beta1/io.pb.h"
#include "google/cloud/automl/v1beta1/model.pb.h"
#include "google/cloud/automl/v1beta1/model_evaluation.pb.h"
#include "google/cloud/automl/v1beta1/operations.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/field_mask.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto 

namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[17];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {
class CreateDatasetRequest;
class CreateDatasetRequestDefaultTypeInternal;
extern CreateDatasetRequestDefaultTypeInternal _CreateDatasetRequest_default_instance_;
class CreateModelRequest;
class CreateModelRequestDefaultTypeInternal;
extern CreateModelRequestDefaultTypeInternal _CreateModelRequest_default_instance_;
class DeleteDatasetRequest;
class DeleteDatasetRequestDefaultTypeInternal;
extern DeleteDatasetRequestDefaultTypeInternal _DeleteDatasetRequest_default_instance_;
class DeleteModelRequest;
class DeleteModelRequestDefaultTypeInternal;
extern DeleteModelRequestDefaultTypeInternal _DeleteModelRequest_default_instance_;
class DeployModelRequest;
class DeployModelRequestDefaultTypeInternal;
extern DeployModelRequestDefaultTypeInternal _DeployModelRequest_default_instance_;
class ExportDataRequest;
class ExportDataRequestDefaultTypeInternal;
extern ExportDataRequestDefaultTypeInternal _ExportDataRequest_default_instance_;
class GetDatasetRequest;
class GetDatasetRequestDefaultTypeInternal;
extern GetDatasetRequestDefaultTypeInternal _GetDatasetRequest_default_instance_;
class GetModelEvaluationRequest;
class GetModelEvaluationRequestDefaultTypeInternal;
extern GetModelEvaluationRequestDefaultTypeInternal _GetModelEvaluationRequest_default_instance_;
class GetModelRequest;
class GetModelRequestDefaultTypeInternal;
extern GetModelRequestDefaultTypeInternal _GetModelRequest_default_instance_;
class ImportDataRequest;
class ImportDataRequestDefaultTypeInternal;
extern ImportDataRequestDefaultTypeInternal _ImportDataRequest_default_instance_;
class ListDatasetsRequest;
class ListDatasetsRequestDefaultTypeInternal;
extern ListDatasetsRequestDefaultTypeInternal _ListDatasetsRequest_default_instance_;
class ListDatasetsResponse;
class ListDatasetsResponseDefaultTypeInternal;
extern ListDatasetsResponseDefaultTypeInternal _ListDatasetsResponse_default_instance_;
class ListModelEvaluationsRequest;
class ListModelEvaluationsRequestDefaultTypeInternal;
extern ListModelEvaluationsRequestDefaultTypeInternal _ListModelEvaluationsRequest_default_instance_;
class ListModelEvaluationsResponse;
class ListModelEvaluationsResponseDefaultTypeInternal;
extern ListModelEvaluationsResponseDefaultTypeInternal _ListModelEvaluationsResponse_default_instance_;
class ListModelsRequest;
class ListModelsRequestDefaultTypeInternal;
extern ListModelsRequestDefaultTypeInternal _ListModelsRequest_default_instance_;
class ListModelsResponse;
class ListModelsResponseDefaultTypeInternal;
extern ListModelsResponseDefaultTypeInternal _ListModelsResponse_default_instance_;
class UndeployModelRequest;
class UndeployModelRequestDefaultTypeInternal;
extern UndeployModelRequestDefaultTypeInternal _UndeployModelRequest_default_instance_;
}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::automl::v1beta1::CreateDatasetRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::CreateDatasetRequest>(Arena*);
template<> ::google::cloud::automl::v1beta1::CreateModelRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::CreateModelRequest>(Arena*);
template<> ::google::cloud::automl::v1beta1::DeleteDatasetRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::DeleteDatasetRequest>(Arena*);
template<> ::google::cloud::automl::v1beta1::DeleteModelRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::DeleteModelRequest>(Arena*);
template<> ::google::cloud::automl::v1beta1::DeployModelRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::DeployModelRequest>(Arena*);
template<> ::google::cloud::automl::v1beta1::ExportDataRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::ExportDataRequest>(Arena*);
template<> ::google::cloud::automl::v1beta1::GetDatasetRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::GetDatasetRequest>(Arena*);
template<> ::google::cloud::automl::v1beta1::GetModelEvaluationRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::GetModelEvaluationRequest>(Arena*);
template<> ::google::cloud::automl::v1beta1::GetModelRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::GetModelRequest>(Arena*);
template<> ::google::cloud::automl::v1beta1::ImportDataRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::ImportDataRequest>(Arena*);
template<> ::google::cloud::automl::v1beta1::ListDatasetsRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::ListDatasetsRequest>(Arena*);
template<> ::google::cloud::automl::v1beta1::ListDatasetsResponse* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::ListDatasetsResponse>(Arena*);
template<> ::google::cloud::automl::v1beta1::ListModelEvaluationsRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::ListModelEvaluationsRequest>(Arena*);
template<> ::google::cloud::automl::v1beta1::ListModelEvaluationsResponse* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::ListModelEvaluationsResponse>(Arena*);
template<> ::google::cloud::automl::v1beta1::ListModelsRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::ListModelsRequest>(Arena*);
template<> ::google::cloud::automl::v1beta1::ListModelsResponse* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::ListModelsResponse>(Arena*);
template<> ::google::cloud::automl::v1beta1::UndeployModelRequest* Arena::CreateMaybeMessage<::google::cloud::automl::v1beta1::UndeployModelRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {

// ===================================================================

class CreateDatasetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.CreateDatasetRequest) */ {
 public:
  CreateDatasetRequest();
  virtual ~CreateDatasetRequest();

  CreateDatasetRequest(const CreateDatasetRequest& from);

  inline CreateDatasetRequest& operator=(const CreateDatasetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateDatasetRequest(CreateDatasetRequest&& from) noexcept
    : CreateDatasetRequest() {
    *this = ::std::move(from);
  }

  inline CreateDatasetRequest& operator=(CreateDatasetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateDatasetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateDatasetRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDatasetRequest*>(
               &_CreateDatasetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CreateDatasetRequest* other);
  friend void swap(CreateDatasetRequest& a, CreateDatasetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateDatasetRequest* New() const final {
    return CreateMaybeMessage<CreateDatasetRequest>(NULL);
  }

  CreateDatasetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateDatasetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateDatasetRequest& from);
  void MergeFrom(const CreateDatasetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateDatasetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // .google.cloud.automl.v1beta1.Dataset dataset = 2;
  bool has_dataset() const;
  void clear_dataset();
  static const int kDatasetFieldNumber = 2;
  private:
  const ::google::cloud::automl::v1beta1::Dataset& _internal_dataset() const;
  public:
  const ::google::cloud::automl::v1beta1::Dataset& dataset() const;
  ::google::cloud::automl::v1beta1::Dataset* release_dataset();
  ::google::cloud::automl::v1beta1::Dataset* mutable_dataset();
  void set_allocated_dataset(::google::cloud::automl::v1beta1::Dataset* dataset);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.CreateDatasetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::automl::v1beta1::Dataset* dataset_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetDatasetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.GetDatasetRequest) */ {
 public:
  GetDatasetRequest();
  virtual ~GetDatasetRequest();

  GetDatasetRequest(const GetDatasetRequest& from);

  inline GetDatasetRequest& operator=(const GetDatasetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDatasetRequest(GetDatasetRequest&& from) noexcept
    : GetDatasetRequest() {
    *this = ::std::move(from);
  }

  inline GetDatasetRequest& operator=(GetDatasetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDatasetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetDatasetRequest* internal_default_instance() {
    return reinterpret_cast<const GetDatasetRequest*>(
               &_GetDatasetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetDatasetRequest* other);
  friend void swap(GetDatasetRequest& a, GetDatasetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDatasetRequest* New() const final {
    return CreateMaybeMessage<GetDatasetRequest>(NULL);
  }

  GetDatasetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetDatasetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetDatasetRequest& from);
  void MergeFrom(const GetDatasetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDatasetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.GetDatasetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDatasetsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.ListDatasetsRequest) */ {
 public:
  ListDatasetsRequest();
  virtual ~ListDatasetsRequest();

  ListDatasetsRequest(const ListDatasetsRequest& from);

  inline ListDatasetsRequest& operator=(const ListDatasetsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDatasetsRequest(ListDatasetsRequest&& from) noexcept
    : ListDatasetsRequest() {
    *this = ::std::move(from);
  }

  inline ListDatasetsRequest& operator=(ListDatasetsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDatasetsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDatasetsRequest* internal_default_instance() {
    return reinterpret_cast<const ListDatasetsRequest*>(
               &_ListDatasetsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ListDatasetsRequest* other);
  friend void swap(ListDatasetsRequest& a, ListDatasetsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDatasetsRequest* New() const final {
    return CreateMaybeMessage<ListDatasetsRequest>(NULL);
  }

  ListDatasetsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDatasetsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDatasetsRequest& from);
  void MergeFrom(const ListDatasetsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDatasetsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string filter = 3;
  void clear_filter();
  static const int kFilterFieldNumber = 3;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // string page_token = 6;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 6;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 4;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 4;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.ListDatasetsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDatasetsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.ListDatasetsResponse) */ {
 public:
  ListDatasetsResponse();
  virtual ~ListDatasetsResponse();

  ListDatasetsResponse(const ListDatasetsResponse& from);

  inline ListDatasetsResponse& operator=(const ListDatasetsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDatasetsResponse(ListDatasetsResponse&& from) noexcept
    : ListDatasetsResponse() {
    *this = ::std::move(from);
  }

  inline ListDatasetsResponse& operator=(ListDatasetsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDatasetsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDatasetsResponse* internal_default_instance() {
    return reinterpret_cast<const ListDatasetsResponse*>(
               &_ListDatasetsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ListDatasetsResponse* other);
  friend void swap(ListDatasetsResponse& a, ListDatasetsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDatasetsResponse* New() const final {
    return CreateMaybeMessage<ListDatasetsResponse>(NULL);
  }

  ListDatasetsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDatasetsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDatasetsResponse& from);
  void MergeFrom(const ListDatasetsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDatasetsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.automl.v1beta1.Dataset datasets = 1;
  int datasets_size() const;
  void clear_datasets();
  static const int kDatasetsFieldNumber = 1;
  ::google::cloud::automl::v1beta1::Dataset* mutable_datasets(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::Dataset >*
      mutable_datasets();
  const ::google::cloud::automl::v1beta1::Dataset& datasets(int index) const;
  ::google::cloud::automl::v1beta1::Dataset* add_datasets();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::Dataset >&
      datasets() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.ListDatasetsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::Dataset > datasets_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteDatasetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.DeleteDatasetRequest) */ {
 public:
  DeleteDatasetRequest();
  virtual ~DeleteDatasetRequest();

  DeleteDatasetRequest(const DeleteDatasetRequest& from);

  inline DeleteDatasetRequest& operator=(const DeleteDatasetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteDatasetRequest(DeleteDatasetRequest&& from) noexcept
    : DeleteDatasetRequest() {
    *this = ::std::move(from);
  }

  inline DeleteDatasetRequest& operator=(DeleteDatasetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteDatasetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteDatasetRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteDatasetRequest*>(
               &_DeleteDatasetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(DeleteDatasetRequest* other);
  friend void swap(DeleteDatasetRequest& a, DeleteDatasetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteDatasetRequest* New() const final {
    return CreateMaybeMessage<DeleteDatasetRequest>(NULL);
  }

  DeleteDatasetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteDatasetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteDatasetRequest& from);
  void MergeFrom(const DeleteDatasetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteDatasetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.DeleteDatasetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImportDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.ImportDataRequest) */ {
 public:
  ImportDataRequest();
  virtual ~ImportDataRequest();

  ImportDataRequest(const ImportDataRequest& from);

  inline ImportDataRequest& operator=(const ImportDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImportDataRequest(ImportDataRequest&& from) noexcept
    : ImportDataRequest() {
    *this = ::std::move(from);
  }

  inline ImportDataRequest& operator=(ImportDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImportDataRequest* internal_default_instance() {
    return reinterpret_cast<const ImportDataRequest*>(
               &_ImportDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ImportDataRequest* other);
  friend void swap(ImportDataRequest& a, ImportDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImportDataRequest* New() const final {
    return CreateMaybeMessage<ImportDataRequest>(NULL);
  }

  ImportDataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImportDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImportDataRequest& from);
  void MergeFrom(const ImportDataRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImportDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.cloud.automl.v1beta1.InputConfig input_config = 3;
  bool has_input_config() const;
  void clear_input_config();
  static const int kInputConfigFieldNumber = 3;
  private:
  const ::google::cloud::automl::v1beta1::InputConfig& _internal_input_config() const;
  public:
  const ::google::cloud::automl::v1beta1::InputConfig& input_config() const;
  ::google::cloud::automl::v1beta1::InputConfig* release_input_config();
  ::google::cloud::automl::v1beta1::InputConfig* mutable_input_config();
  void set_allocated_input_config(::google::cloud::automl::v1beta1::InputConfig* input_config);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.ImportDataRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::cloud::automl::v1beta1::InputConfig* input_config_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExportDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.ExportDataRequest) */ {
 public:
  ExportDataRequest();
  virtual ~ExportDataRequest();

  ExportDataRequest(const ExportDataRequest& from);

  inline ExportDataRequest& operator=(const ExportDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExportDataRequest(ExportDataRequest&& from) noexcept
    : ExportDataRequest() {
    *this = ::std::move(from);
  }

  inline ExportDataRequest& operator=(ExportDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExportDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExportDataRequest* internal_default_instance() {
    return reinterpret_cast<const ExportDataRequest*>(
               &_ExportDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ExportDataRequest* other);
  friend void swap(ExportDataRequest& a, ExportDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExportDataRequest* New() const final {
    return CreateMaybeMessage<ExportDataRequest>(NULL);
  }

  ExportDataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExportDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExportDataRequest& from);
  void MergeFrom(const ExportDataRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExportDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.cloud.automl.v1beta1.OutputConfig output_config = 3;
  bool has_output_config() const;
  void clear_output_config();
  static const int kOutputConfigFieldNumber = 3;
  private:
  const ::google::cloud::automl::v1beta1::OutputConfig& _internal_output_config() const;
  public:
  const ::google::cloud::automl::v1beta1::OutputConfig& output_config() const;
  ::google::cloud::automl::v1beta1::OutputConfig* release_output_config();
  ::google::cloud::automl::v1beta1::OutputConfig* mutable_output_config();
  void set_allocated_output_config(::google::cloud::automl::v1beta1::OutputConfig* output_config);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.ExportDataRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::cloud::automl::v1beta1::OutputConfig* output_config_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateModelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.CreateModelRequest) */ {
 public:
  CreateModelRequest();
  virtual ~CreateModelRequest();

  CreateModelRequest(const CreateModelRequest& from);

  inline CreateModelRequest& operator=(const CreateModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateModelRequest(CreateModelRequest&& from) noexcept
    : CreateModelRequest() {
    *this = ::std::move(from);
  }

  inline CreateModelRequest& operator=(CreateModelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateModelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateModelRequest* internal_default_instance() {
    return reinterpret_cast<const CreateModelRequest*>(
               &_CreateModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CreateModelRequest* other);
  friend void swap(CreateModelRequest& a, CreateModelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateModelRequest* New() const final {
    return CreateMaybeMessage<CreateModelRequest>(NULL);
  }

  CreateModelRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateModelRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateModelRequest& from);
  void MergeFrom(const CreateModelRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateModelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // .google.cloud.automl.v1beta1.Model model = 4;
  bool has_model() const;
  void clear_model();
  static const int kModelFieldNumber = 4;
  private:
  const ::google::cloud::automl::v1beta1::Model& _internal_model() const;
  public:
  const ::google::cloud::automl::v1beta1::Model& model() const;
  ::google::cloud::automl::v1beta1::Model* release_model();
  ::google::cloud::automl::v1beta1::Model* mutable_model();
  void set_allocated_model(::google::cloud::automl::v1beta1::Model* model);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.CreateModelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::automl::v1beta1::Model* model_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetModelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.GetModelRequest) */ {
 public:
  GetModelRequest();
  virtual ~GetModelRequest();

  GetModelRequest(const GetModelRequest& from);

  inline GetModelRequest& operator=(const GetModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetModelRequest(GetModelRequest&& from) noexcept
    : GetModelRequest() {
    *this = ::std::move(from);
  }

  inline GetModelRequest& operator=(GetModelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetModelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetModelRequest* internal_default_instance() {
    return reinterpret_cast<const GetModelRequest*>(
               &_GetModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GetModelRequest* other);
  friend void swap(GetModelRequest& a, GetModelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetModelRequest* New() const final {
    return CreateMaybeMessage<GetModelRequest>(NULL);
  }

  GetModelRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetModelRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetModelRequest& from);
  void MergeFrom(const GetModelRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetModelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.GetModelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListModelsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.ListModelsRequest) */ {
 public:
  ListModelsRequest();
  virtual ~ListModelsRequest();

  ListModelsRequest(const ListModelsRequest& from);

  inline ListModelsRequest& operator=(const ListModelsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListModelsRequest(ListModelsRequest&& from) noexcept
    : ListModelsRequest() {
    *this = ::std::move(from);
  }

  inline ListModelsRequest& operator=(ListModelsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListModelsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListModelsRequest* internal_default_instance() {
    return reinterpret_cast<const ListModelsRequest*>(
               &_ListModelsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ListModelsRequest* other);
  friend void swap(ListModelsRequest& a, ListModelsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListModelsRequest* New() const final {
    return CreateMaybeMessage<ListModelsRequest>(NULL);
  }

  ListModelsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListModelsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListModelsRequest& from);
  void MergeFrom(const ListModelsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListModelsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string filter = 3;
  void clear_filter();
  static const int kFilterFieldNumber = 3;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // string page_token = 6;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 6;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 4;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 4;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.ListModelsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListModelsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.ListModelsResponse) */ {
 public:
  ListModelsResponse();
  virtual ~ListModelsResponse();

  ListModelsResponse(const ListModelsResponse& from);

  inline ListModelsResponse& operator=(const ListModelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListModelsResponse(ListModelsResponse&& from) noexcept
    : ListModelsResponse() {
    *this = ::std::move(from);
  }

  inline ListModelsResponse& operator=(ListModelsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListModelsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListModelsResponse* internal_default_instance() {
    return reinterpret_cast<const ListModelsResponse*>(
               &_ListModelsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ListModelsResponse* other);
  friend void swap(ListModelsResponse& a, ListModelsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListModelsResponse* New() const final {
    return CreateMaybeMessage<ListModelsResponse>(NULL);
  }

  ListModelsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListModelsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListModelsResponse& from);
  void MergeFrom(const ListModelsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListModelsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.automl.v1beta1.Model model = 1;
  int model_size() const;
  void clear_model();
  static const int kModelFieldNumber = 1;
  ::google::cloud::automl::v1beta1::Model* mutable_model(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::Model >*
      mutable_model();
  const ::google::cloud::automl::v1beta1::Model& model(int index) const;
  ::google::cloud::automl::v1beta1::Model* add_model();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::Model >&
      model() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.ListModelsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::Model > model_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteModelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.DeleteModelRequest) */ {
 public:
  DeleteModelRequest();
  virtual ~DeleteModelRequest();

  DeleteModelRequest(const DeleteModelRequest& from);

  inline DeleteModelRequest& operator=(const DeleteModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteModelRequest(DeleteModelRequest&& from) noexcept
    : DeleteModelRequest() {
    *this = ::std::move(from);
  }

  inline DeleteModelRequest& operator=(DeleteModelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteModelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteModelRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteModelRequest*>(
               &_DeleteModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(DeleteModelRequest* other);
  friend void swap(DeleteModelRequest& a, DeleteModelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteModelRequest* New() const final {
    return CreateMaybeMessage<DeleteModelRequest>(NULL);
  }

  DeleteModelRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteModelRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteModelRequest& from);
  void MergeFrom(const DeleteModelRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteModelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.DeleteModelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeployModelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.DeployModelRequest) */ {
 public:
  DeployModelRequest();
  virtual ~DeployModelRequest();

  DeployModelRequest(const DeployModelRequest& from);

  inline DeployModelRequest& operator=(const DeployModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeployModelRequest(DeployModelRequest&& from) noexcept
    : DeployModelRequest() {
    *this = ::std::move(from);
  }

  inline DeployModelRequest& operator=(DeployModelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeployModelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeployModelRequest* internal_default_instance() {
    return reinterpret_cast<const DeployModelRequest*>(
               &_DeployModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(DeployModelRequest* other);
  friend void swap(DeployModelRequest& a, DeployModelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeployModelRequest* New() const final {
    return CreateMaybeMessage<DeployModelRequest>(NULL);
  }

  DeployModelRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeployModelRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeployModelRequest& from);
  void MergeFrom(const DeployModelRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeployModelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.DeployModelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UndeployModelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.UndeployModelRequest) */ {
 public:
  UndeployModelRequest();
  virtual ~UndeployModelRequest();

  UndeployModelRequest(const UndeployModelRequest& from);

  inline UndeployModelRequest& operator=(const UndeployModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UndeployModelRequest(UndeployModelRequest&& from) noexcept
    : UndeployModelRequest() {
    *this = ::std::move(from);
  }

  inline UndeployModelRequest& operator=(UndeployModelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UndeployModelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UndeployModelRequest* internal_default_instance() {
    return reinterpret_cast<const UndeployModelRequest*>(
               &_UndeployModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(UndeployModelRequest* other);
  friend void swap(UndeployModelRequest& a, UndeployModelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UndeployModelRequest* New() const final {
    return CreateMaybeMessage<UndeployModelRequest>(NULL);
  }

  UndeployModelRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UndeployModelRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UndeployModelRequest& from);
  void MergeFrom(const UndeployModelRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UndeployModelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.UndeployModelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetModelEvaluationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.GetModelEvaluationRequest) */ {
 public:
  GetModelEvaluationRequest();
  virtual ~GetModelEvaluationRequest();

  GetModelEvaluationRequest(const GetModelEvaluationRequest& from);

  inline GetModelEvaluationRequest& operator=(const GetModelEvaluationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetModelEvaluationRequest(GetModelEvaluationRequest&& from) noexcept
    : GetModelEvaluationRequest() {
    *this = ::std::move(from);
  }

  inline GetModelEvaluationRequest& operator=(GetModelEvaluationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetModelEvaluationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetModelEvaluationRequest* internal_default_instance() {
    return reinterpret_cast<const GetModelEvaluationRequest*>(
               &_GetModelEvaluationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(GetModelEvaluationRequest* other);
  friend void swap(GetModelEvaluationRequest& a, GetModelEvaluationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetModelEvaluationRequest* New() const final {
    return CreateMaybeMessage<GetModelEvaluationRequest>(NULL);
  }

  GetModelEvaluationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetModelEvaluationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetModelEvaluationRequest& from);
  void MergeFrom(const GetModelEvaluationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetModelEvaluationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.GetModelEvaluationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListModelEvaluationsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.ListModelEvaluationsRequest) */ {
 public:
  ListModelEvaluationsRequest();
  virtual ~ListModelEvaluationsRequest();

  ListModelEvaluationsRequest(const ListModelEvaluationsRequest& from);

  inline ListModelEvaluationsRequest& operator=(const ListModelEvaluationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListModelEvaluationsRequest(ListModelEvaluationsRequest&& from) noexcept
    : ListModelEvaluationsRequest() {
    *this = ::std::move(from);
  }

  inline ListModelEvaluationsRequest& operator=(ListModelEvaluationsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListModelEvaluationsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListModelEvaluationsRequest* internal_default_instance() {
    return reinterpret_cast<const ListModelEvaluationsRequest*>(
               &_ListModelEvaluationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(ListModelEvaluationsRequest* other);
  friend void swap(ListModelEvaluationsRequest& a, ListModelEvaluationsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListModelEvaluationsRequest* New() const final {
    return CreateMaybeMessage<ListModelEvaluationsRequest>(NULL);
  }

  ListModelEvaluationsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListModelEvaluationsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListModelEvaluationsRequest& from);
  void MergeFrom(const ListModelEvaluationsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListModelEvaluationsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string filter = 3;
  void clear_filter();
  static const int kFilterFieldNumber = 3;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // string page_token = 6;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 6;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 4;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 4;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.ListModelEvaluationsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListModelEvaluationsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.automl.v1beta1.ListModelEvaluationsResponse) */ {
 public:
  ListModelEvaluationsResponse();
  virtual ~ListModelEvaluationsResponse();

  ListModelEvaluationsResponse(const ListModelEvaluationsResponse& from);

  inline ListModelEvaluationsResponse& operator=(const ListModelEvaluationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListModelEvaluationsResponse(ListModelEvaluationsResponse&& from) noexcept
    : ListModelEvaluationsResponse() {
    *this = ::std::move(from);
  }

  inline ListModelEvaluationsResponse& operator=(ListModelEvaluationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListModelEvaluationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListModelEvaluationsResponse* internal_default_instance() {
    return reinterpret_cast<const ListModelEvaluationsResponse*>(
               &_ListModelEvaluationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(ListModelEvaluationsResponse* other);
  friend void swap(ListModelEvaluationsResponse& a, ListModelEvaluationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListModelEvaluationsResponse* New() const final {
    return CreateMaybeMessage<ListModelEvaluationsResponse>(NULL);
  }

  ListModelEvaluationsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListModelEvaluationsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListModelEvaluationsResponse& from);
  void MergeFrom(const ListModelEvaluationsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListModelEvaluationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.automl.v1beta1.ModelEvaluation model_evaluation = 1;
  int model_evaluation_size() const;
  void clear_model_evaluation();
  static const int kModelEvaluationFieldNumber = 1;
  ::google::cloud::automl::v1beta1::ModelEvaluation* mutable_model_evaluation(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::ModelEvaluation >*
      mutable_model_evaluation();
  const ::google::cloud::automl::v1beta1::ModelEvaluation& model_evaluation(int index) const;
  ::google::cloud::automl::v1beta1::ModelEvaluation* add_model_evaluation();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::ModelEvaluation >&
      model_evaluation() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.automl.v1beta1.ListModelEvaluationsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::ModelEvaluation > model_evaluation_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateDatasetRequest

// string parent = 1;
inline void CreateDatasetRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateDatasetRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.CreateDatasetRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateDatasetRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.CreateDatasetRequest.parent)
}
#if LANG_CXX11
inline void CreateDatasetRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.CreateDatasetRequest.parent)
}
#endif
inline void CreateDatasetRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.CreateDatasetRequest.parent)
}
inline void CreateDatasetRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.CreateDatasetRequest.parent)
}
inline ::std::string* CreateDatasetRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.CreateDatasetRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateDatasetRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.CreateDatasetRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateDatasetRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.CreateDatasetRequest.parent)
}

// .google.cloud.automl.v1beta1.Dataset dataset = 2;
inline bool CreateDatasetRequest::has_dataset() const {
  return this != internal_default_instance() && dataset_ != NULL;
}
inline const ::google::cloud::automl::v1beta1::Dataset& CreateDatasetRequest::_internal_dataset() const {
  return *dataset_;
}
inline const ::google::cloud::automl::v1beta1::Dataset& CreateDatasetRequest::dataset() const {
  const ::google::cloud::automl::v1beta1::Dataset* p = dataset_;
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.CreateDatasetRequest.dataset)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::automl::v1beta1::Dataset*>(
      &::google::cloud::automl::v1beta1::_Dataset_default_instance_);
}
inline ::google::cloud::automl::v1beta1::Dataset* CreateDatasetRequest::release_dataset() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.CreateDatasetRequest.dataset)
  
  ::google::cloud::automl::v1beta1::Dataset* temp = dataset_;
  dataset_ = NULL;
  return temp;
}
inline ::google::cloud::automl::v1beta1::Dataset* CreateDatasetRequest::mutable_dataset() {
  
  if (dataset_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::automl::v1beta1::Dataset>(GetArenaNoVirtual());
    dataset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.CreateDatasetRequest.dataset)
  return dataset_;
}
inline void CreateDatasetRequest::set_allocated_dataset(::google::cloud::automl::v1beta1::Dataset* dataset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dataset_);
  }
  if (dataset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dataset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dataset, submessage_arena);
    }
    
  } else {
    
  }
  dataset_ = dataset;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.CreateDatasetRequest.dataset)
}

// -------------------------------------------------------------------

// GetDatasetRequest

// string name = 1;
inline void GetDatasetRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetDatasetRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.GetDatasetRequest.name)
  return name_.GetNoArena();
}
inline void GetDatasetRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.GetDatasetRequest.name)
}
#if LANG_CXX11
inline void GetDatasetRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.GetDatasetRequest.name)
}
#endif
inline void GetDatasetRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.GetDatasetRequest.name)
}
inline void GetDatasetRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.GetDatasetRequest.name)
}
inline ::std::string* GetDatasetRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.GetDatasetRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetDatasetRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.GetDatasetRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetDatasetRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.GetDatasetRequest.name)
}

// -------------------------------------------------------------------

// ListDatasetsRequest

// string parent = 1;
inline void ListDatasetsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListDatasetsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListDatasetsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListDatasetsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListDatasetsRequest.parent)
}
#if LANG_CXX11
inline void ListDatasetsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ListDatasetsRequest.parent)
}
#endif
inline void ListDatasetsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ListDatasetsRequest.parent)
}
inline void ListDatasetsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ListDatasetsRequest.parent)
}
inline ::std::string* ListDatasetsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListDatasetsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListDatasetsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ListDatasetsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListDatasetsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ListDatasetsRequest.parent)
}

// string filter = 3;
inline void ListDatasetsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListDatasetsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListDatasetsRequest.filter)
  return filter_.GetNoArena();
}
inline void ListDatasetsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListDatasetsRequest.filter)
}
#if LANG_CXX11
inline void ListDatasetsRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ListDatasetsRequest.filter)
}
#endif
inline void ListDatasetsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ListDatasetsRequest.filter)
}
inline void ListDatasetsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ListDatasetsRequest.filter)
}
inline ::std::string* ListDatasetsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListDatasetsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListDatasetsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ListDatasetsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListDatasetsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ListDatasetsRequest.filter)
}

// int32 page_size = 4;
inline void ListDatasetsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListDatasetsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListDatasetsRequest.page_size)
  return page_size_;
}
inline void ListDatasetsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListDatasetsRequest.page_size)
}

// string page_token = 6;
inline void ListDatasetsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListDatasetsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListDatasetsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListDatasetsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListDatasetsRequest.page_token)
}
#if LANG_CXX11
inline void ListDatasetsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ListDatasetsRequest.page_token)
}
#endif
inline void ListDatasetsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ListDatasetsRequest.page_token)
}
inline void ListDatasetsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ListDatasetsRequest.page_token)
}
inline ::std::string* ListDatasetsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListDatasetsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListDatasetsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ListDatasetsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListDatasetsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ListDatasetsRequest.page_token)
}

// -------------------------------------------------------------------

// ListDatasetsResponse

// repeated .google.cloud.automl.v1beta1.Dataset datasets = 1;
inline int ListDatasetsResponse::datasets_size() const {
  return datasets_.size();
}
inline ::google::cloud::automl::v1beta1::Dataset* ListDatasetsResponse::mutable_datasets(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListDatasetsResponse.datasets)
  return datasets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::Dataset >*
ListDatasetsResponse::mutable_datasets() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.automl.v1beta1.ListDatasetsResponse.datasets)
  return &datasets_;
}
inline const ::google::cloud::automl::v1beta1::Dataset& ListDatasetsResponse::datasets(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListDatasetsResponse.datasets)
  return datasets_.Get(index);
}
inline ::google::cloud::automl::v1beta1::Dataset* ListDatasetsResponse::add_datasets() {
  // @@protoc_insertion_point(field_add:google.cloud.automl.v1beta1.ListDatasetsResponse.datasets)
  return datasets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::Dataset >&
ListDatasetsResponse::datasets() const {
  // @@protoc_insertion_point(field_list:google.cloud.automl.v1beta1.ListDatasetsResponse.datasets)
  return datasets_;
}

// string next_page_token = 2;
inline void ListDatasetsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListDatasetsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListDatasetsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListDatasetsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListDatasetsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListDatasetsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ListDatasetsResponse.next_page_token)
}
#endif
inline void ListDatasetsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ListDatasetsResponse.next_page_token)
}
inline void ListDatasetsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ListDatasetsResponse.next_page_token)
}
inline ::std::string* ListDatasetsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListDatasetsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListDatasetsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ListDatasetsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListDatasetsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ListDatasetsResponse.next_page_token)
}

// -------------------------------------------------------------------

// DeleteDatasetRequest

// string name = 1;
inline void DeleteDatasetRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteDatasetRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.DeleteDatasetRequest.name)
  return name_.GetNoArena();
}
inline void DeleteDatasetRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.DeleteDatasetRequest.name)
}
#if LANG_CXX11
inline void DeleteDatasetRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.DeleteDatasetRequest.name)
}
#endif
inline void DeleteDatasetRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.DeleteDatasetRequest.name)
}
inline void DeleteDatasetRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.DeleteDatasetRequest.name)
}
inline ::std::string* DeleteDatasetRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.DeleteDatasetRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteDatasetRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.DeleteDatasetRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteDatasetRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.DeleteDatasetRequest.name)
}

// -------------------------------------------------------------------

// ImportDataRequest

// string name = 1;
inline void ImportDataRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportDataRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ImportDataRequest.name)
  return name_.GetNoArena();
}
inline void ImportDataRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ImportDataRequest.name)
}
#if LANG_CXX11
inline void ImportDataRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ImportDataRequest.name)
}
#endif
inline void ImportDataRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ImportDataRequest.name)
}
inline void ImportDataRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ImportDataRequest.name)
}
inline ::std::string* ImportDataRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ImportDataRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportDataRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ImportDataRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportDataRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ImportDataRequest.name)
}

// .google.cloud.automl.v1beta1.InputConfig input_config = 3;
inline bool ImportDataRequest::has_input_config() const {
  return this != internal_default_instance() && input_config_ != NULL;
}
inline const ::google::cloud::automl::v1beta1::InputConfig& ImportDataRequest::_internal_input_config() const {
  return *input_config_;
}
inline const ::google::cloud::automl::v1beta1::InputConfig& ImportDataRequest::input_config() const {
  const ::google::cloud::automl::v1beta1::InputConfig* p = input_config_;
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ImportDataRequest.input_config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::automl::v1beta1::InputConfig*>(
      &::google::cloud::automl::v1beta1::_InputConfig_default_instance_);
}
inline ::google::cloud::automl::v1beta1::InputConfig* ImportDataRequest::release_input_config() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ImportDataRequest.input_config)
  
  ::google::cloud::automl::v1beta1::InputConfig* temp = input_config_;
  input_config_ = NULL;
  return temp;
}
inline ::google::cloud::automl::v1beta1::InputConfig* ImportDataRequest::mutable_input_config() {
  
  if (input_config_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::automl::v1beta1::InputConfig>(GetArenaNoVirtual());
    input_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ImportDataRequest.input_config)
  return input_config_;
}
inline void ImportDataRequest::set_allocated_input_config(::google::cloud::automl::v1beta1::InputConfig* input_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(input_config_);
  }
  if (input_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_config, submessage_arena);
    }
    
  } else {
    
  }
  input_config_ = input_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ImportDataRequest.input_config)
}

// -------------------------------------------------------------------

// ExportDataRequest

// string name = 1;
inline void ExportDataRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExportDataRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ExportDataRequest.name)
  return name_.GetNoArena();
}
inline void ExportDataRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ExportDataRequest.name)
}
#if LANG_CXX11
inline void ExportDataRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ExportDataRequest.name)
}
#endif
inline void ExportDataRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ExportDataRequest.name)
}
inline void ExportDataRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ExportDataRequest.name)
}
inline ::std::string* ExportDataRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ExportDataRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExportDataRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ExportDataRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExportDataRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ExportDataRequest.name)
}

// .google.cloud.automl.v1beta1.OutputConfig output_config = 3;
inline bool ExportDataRequest::has_output_config() const {
  return this != internal_default_instance() && output_config_ != NULL;
}
inline const ::google::cloud::automl::v1beta1::OutputConfig& ExportDataRequest::_internal_output_config() const {
  return *output_config_;
}
inline const ::google::cloud::automl::v1beta1::OutputConfig& ExportDataRequest::output_config() const {
  const ::google::cloud::automl::v1beta1::OutputConfig* p = output_config_;
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ExportDataRequest.output_config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::automl::v1beta1::OutputConfig*>(
      &::google::cloud::automl::v1beta1::_OutputConfig_default_instance_);
}
inline ::google::cloud::automl::v1beta1::OutputConfig* ExportDataRequest::release_output_config() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ExportDataRequest.output_config)
  
  ::google::cloud::automl::v1beta1::OutputConfig* temp = output_config_;
  output_config_ = NULL;
  return temp;
}
inline ::google::cloud::automl::v1beta1::OutputConfig* ExportDataRequest::mutable_output_config() {
  
  if (output_config_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::automl::v1beta1::OutputConfig>(GetArenaNoVirtual());
    output_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ExportDataRequest.output_config)
  return output_config_;
}
inline void ExportDataRequest::set_allocated_output_config(::google::cloud::automl::v1beta1::OutputConfig* output_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(output_config_);
  }
  if (output_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_config, submessage_arena);
    }
    
  } else {
    
  }
  output_config_ = output_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ExportDataRequest.output_config)
}

// -------------------------------------------------------------------

// CreateModelRequest

// string parent = 1;
inline void CreateModelRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateModelRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.CreateModelRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateModelRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.CreateModelRequest.parent)
}
#if LANG_CXX11
inline void CreateModelRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.CreateModelRequest.parent)
}
#endif
inline void CreateModelRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.CreateModelRequest.parent)
}
inline void CreateModelRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.CreateModelRequest.parent)
}
inline ::std::string* CreateModelRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.CreateModelRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateModelRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.CreateModelRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateModelRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.CreateModelRequest.parent)
}

// .google.cloud.automl.v1beta1.Model model = 4;
inline bool CreateModelRequest::has_model() const {
  return this != internal_default_instance() && model_ != NULL;
}
inline const ::google::cloud::automl::v1beta1::Model& CreateModelRequest::_internal_model() const {
  return *model_;
}
inline const ::google::cloud::automl::v1beta1::Model& CreateModelRequest::model() const {
  const ::google::cloud::automl::v1beta1::Model* p = model_;
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.CreateModelRequest.model)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::automl::v1beta1::Model*>(
      &::google::cloud::automl::v1beta1::_Model_default_instance_);
}
inline ::google::cloud::automl::v1beta1::Model* CreateModelRequest::release_model() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.CreateModelRequest.model)
  
  ::google::cloud::automl::v1beta1::Model* temp = model_;
  model_ = NULL;
  return temp;
}
inline ::google::cloud::automl::v1beta1::Model* CreateModelRequest::mutable_model() {
  
  if (model_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::automl::v1beta1::Model>(GetArenaNoVirtual());
    model_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.CreateModelRequest.model)
  return model_;
}
inline void CreateModelRequest::set_allocated_model(::google::cloud::automl::v1beta1::Model* model) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(model_);
  }
  if (model) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      model = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, model, submessage_arena);
    }
    
  } else {
    
  }
  model_ = model;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.CreateModelRequest.model)
}

// -------------------------------------------------------------------

// GetModelRequest

// string name = 1;
inline void GetModelRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetModelRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.GetModelRequest.name)
  return name_.GetNoArena();
}
inline void GetModelRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.GetModelRequest.name)
}
#if LANG_CXX11
inline void GetModelRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.GetModelRequest.name)
}
#endif
inline void GetModelRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.GetModelRequest.name)
}
inline void GetModelRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.GetModelRequest.name)
}
inline ::std::string* GetModelRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.GetModelRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetModelRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.GetModelRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModelRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.GetModelRequest.name)
}

// -------------------------------------------------------------------

// ListModelsRequest

// string parent = 1;
inline void ListModelsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModelsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListModelsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListModelsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListModelsRequest.parent)
}
#if LANG_CXX11
inline void ListModelsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ListModelsRequest.parent)
}
#endif
inline void ListModelsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ListModelsRequest.parent)
}
inline void ListModelsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ListModelsRequest.parent)
}
inline ::std::string* ListModelsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListModelsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModelsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ListModelsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModelsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ListModelsRequest.parent)
}

// string filter = 3;
inline void ListModelsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModelsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListModelsRequest.filter)
  return filter_.GetNoArena();
}
inline void ListModelsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListModelsRequest.filter)
}
#if LANG_CXX11
inline void ListModelsRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ListModelsRequest.filter)
}
#endif
inline void ListModelsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ListModelsRequest.filter)
}
inline void ListModelsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ListModelsRequest.filter)
}
inline ::std::string* ListModelsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListModelsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModelsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ListModelsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModelsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ListModelsRequest.filter)
}

// int32 page_size = 4;
inline void ListModelsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListModelsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListModelsRequest.page_size)
  return page_size_;
}
inline void ListModelsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListModelsRequest.page_size)
}

// string page_token = 6;
inline void ListModelsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModelsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListModelsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListModelsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListModelsRequest.page_token)
}
#if LANG_CXX11
inline void ListModelsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ListModelsRequest.page_token)
}
#endif
inline void ListModelsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ListModelsRequest.page_token)
}
inline void ListModelsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ListModelsRequest.page_token)
}
inline ::std::string* ListModelsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListModelsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModelsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ListModelsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModelsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ListModelsRequest.page_token)
}

// -------------------------------------------------------------------

// ListModelsResponse

// repeated .google.cloud.automl.v1beta1.Model model = 1;
inline int ListModelsResponse::model_size() const {
  return model_.size();
}
inline ::google::cloud::automl::v1beta1::Model* ListModelsResponse::mutable_model(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListModelsResponse.model)
  return model_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::Model >*
ListModelsResponse::mutable_model() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.automl.v1beta1.ListModelsResponse.model)
  return &model_;
}
inline const ::google::cloud::automl::v1beta1::Model& ListModelsResponse::model(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListModelsResponse.model)
  return model_.Get(index);
}
inline ::google::cloud::automl::v1beta1::Model* ListModelsResponse::add_model() {
  // @@protoc_insertion_point(field_add:google.cloud.automl.v1beta1.ListModelsResponse.model)
  return model_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::Model >&
ListModelsResponse::model() const {
  // @@protoc_insertion_point(field_list:google.cloud.automl.v1beta1.ListModelsResponse.model)
  return model_;
}

// string next_page_token = 2;
inline void ListModelsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModelsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListModelsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListModelsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListModelsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListModelsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ListModelsResponse.next_page_token)
}
#endif
inline void ListModelsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ListModelsResponse.next_page_token)
}
inline void ListModelsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ListModelsResponse.next_page_token)
}
inline ::std::string* ListModelsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListModelsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModelsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ListModelsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModelsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ListModelsResponse.next_page_token)
}

// -------------------------------------------------------------------

// DeleteModelRequest

// string name = 1;
inline void DeleteModelRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteModelRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.DeleteModelRequest.name)
  return name_.GetNoArena();
}
inline void DeleteModelRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.DeleteModelRequest.name)
}
#if LANG_CXX11
inline void DeleteModelRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.DeleteModelRequest.name)
}
#endif
inline void DeleteModelRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.DeleteModelRequest.name)
}
inline void DeleteModelRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.DeleteModelRequest.name)
}
inline ::std::string* DeleteModelRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.DeleteModelRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteModelRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.DeleteModelRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteModelRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.DeleteModelRequest.name)
}

// -------------------------------------------------------------------

// DeployModelRequest

// string name = 1;
inline void DeployModelRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeployModelRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.DeployModelRequest.name)
  return name_.GetNoArena();
}
inline void DeployModelRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.DeployModelRequest.name)
}
#if LANG_CXX11
inline void DeployModelRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.DeployModelRequest.name)
}
#endif
inline void DeployModelRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.DeployModelRequest.name)
}
inline void DeployModelRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.DeployModelRequest.name)
}
inline ::std::string* DeployModelRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.DeployModelRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeployModelRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.DeployModelRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeployModelRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.DeployModelRequest.name)
}

// -------------------------------------------------------------------

// UndeployModelRequest

// string name = 1;
inline void UndeployModelRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UndeployModelRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.UndeployModelRequest.name)
  return name_.GetNoArena();
}
inline void UndeployModelRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.UndeployModelRequest.name)
}
#if LANG_CXX11
inline void UndeployModelRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.UndeployModelRequest.name)
}
#endif
inline void UndeployModelRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.UndeployModelRequest.name)
}
inline void UndeployModelRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.UndeployModelRequest.name)
}
inline ::std::string* UndeployModelRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.UndeployModelRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UndeployModelRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.UndeployModelRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UndeployModelRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.UndeployModelRequest.name)
}

// -------------------------------------------------------------------

// GetModelEvaluationRequest

// string name = 1;
inline void GetModelEvaluationRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetModelEvaluationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.GetModelEvaluationRequest.name)
  return name_.GetNoArena();
}
inline void GetModelEvaluationRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.GetModelEvaluationRequest.name)
}
#if LANG_CXX11
inline void GetModelEvaluationRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.GetModelEvaluationRequest.name)
}
#endif
inline void GetModelEvaluationRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.GetModelEvaluationRequest.name)
}
inline void GetModelEvaluationRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.GetModelEvaluationRequest.name)
}
inline ::std::string* GetModelEvaluationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.GetModelEvaluationRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetModelEvaluationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.GetModelEvaluationRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModelEvaluationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.GetModelEvaluationRequest.name)
}

// -------------------------------------------------------------------

// ListModelEvaluationsRequest

// string parent = 1;
inline void ListModelEvaluationsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModelEvaluationsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListModelEvaluationsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.parent)
}
#if LANG_CXX11
inline void ListModelEvaluationsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.parent)
}
#endif
inline void ListModelEvaluationsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.parent)
}
inline void ListModelEvaluationsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.parent)
}
inline ::std::string* ListModelEvaluationsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModelEvaluationsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModelEvaluationsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.parent)
}

// string filter = 3;
inline void ListModelEvaluationsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModelEvaluationsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.filter)
  return filter_.GetNoArena();
}
inline void ListModelEvaluationsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.filter)
}
#if LANG_CXX11
inline void ListModelEvaluationsRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.filter)
}
#endif
inline void ListModelEvaluationsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.filter)
}
inline void ListModelEvaluationsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.filter)
}
inline ::std::string* ListModelEvaluationsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModelEvaluationsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModelEvaluationsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.filter)
}

// int32 page_size = 4;
inline void ListModelEvaluationsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListModelEvaluationsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.page_size)
  return page_size_;
}
inline void ListModelEvaluationsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.page_size)
}

// string page_token = 6;
inline void ListModelEvaluationsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModelEvaluationsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListModelEvaluationsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.page_token)
}
#if LANG_CXX11
inline void ListModelEvaluationsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.page_token)
}
#endif
inline void ListModelEvaluationsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.page_token)
}
inline void ListModelEvaluationsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.page_token)
}
inline ::std::string* ListModelEvaluationsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModelEvaluationsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModelEvaluationsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ListModelEvaluationsRequest.page_token)
}

// -------------------------------------------------------------------

// ListModelEvaluationsResponse

// repeated .google.cloud.automl.v1beta1.ModelEvaluation model_evaluation = 1;
inline int ListModelEvaluationsResponse::model_evaluation_size() const {
  return model_evaluation_.size();
}
inline ::google::cloud::automl::v1beta1::ModelEvaluation* ListModelEvaluationsResponse::mutable_model_evaluation(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListModelEvaluationsResponse.model_evaluation)
  return model_evaluation_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::ModelEvaluation >*
ListModelEvaluationsResponse::mutable_model_evaluation() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.automl.v1beta1.ListModelEvaluationsResponse.model_evaluation)
  return &model_evaluation_;
}
inline const ::google::cloud::automl::v1beta1::ModelEvaluation& ListModelEvaluationsResponse::model_evaluation(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListModelEvaluationsResponse.model_evaluation)
  return model_evaluation_.Get(index);
}
inline ::google::cloud::automl::v1beta1::ModelEvaluation* ListModelEvaluationsResponse::add_model_evaluation() {
  // @@protoc_insertion_point(field_add:google.cloud.automl.v1beta1.ListModelEvaluationsResponse.model_evaluation)
  return model_evaluation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::automl::v1beta1::ModelEvaluation >&
ListModelEvaluationsResponse::model_evaluation() const {
  // @@protoc_insertion_point(field_list:google.cloud.automl.v1beta1.ListModelEvaluationsResponse.model_evaluation)
  return model_evaluation_;
}

// string next_page_token = 2;
inline void ListModelEvaluationsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModelEvaluationsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.automl.v1beta1.ListModelEvaluationsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListModelEvaluationsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.automl.v1beta1.ListModelEvaluationsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListModelEvaluationsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.automl.v1beta1.ListModelEvaluationsResponse.next_page_token)
}
#endif
inline void ListModelEvaluationsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.automl.v1beta1.ListModelEvaluationsResponse.next_page_token)
}
inline void ListModelEvaluationsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.automl.v1beta1.ListModelEvaluationsResponse.next_page_token)
}
inline ::std::string* ListModelEvaluationsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.automl.v1beta1.ListModelEvaluationsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModelEvaluationsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.automl.v1beta1.ListModelEvaluationsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModelEvaluationsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.ListModelEvaluationsResponse.next_page_token)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2fautoml_2fv1beta1_2fservice_2eproto
