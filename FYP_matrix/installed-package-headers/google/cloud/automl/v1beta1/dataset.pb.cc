// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/automl/v1beta1/dataset.proto

#include "google/cloud/automl/v1beta1/dataset.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fimage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2fimage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ImageClassificationDatasetMetadata;
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fimage_2eproto
namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftext_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftext_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TextClassificationDatasetMetadata;
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftext_2eproto
namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftranslation_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftranslation_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TranslationDatasetMetadata;
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftranslation_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {
class DatasetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dataset>
      _instance;
  const ::google::cloud::automl::v1beta1::TranslationDatasetMetadata* translation_dataset_metadata_;
  const ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata* image_classification_dataset_metadata_;
  const ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata* text_classification_dataset_metadata_;
} _Dataset_default_instance_;
}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto {
static void InitDefaultsDataset() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::automl::v1beta1::_Dataset_default_instance_;
    new (ptr) ::google::cloud::automl::v1beta1::Dataset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::automl::v1beta1::Dataset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Dataset =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsDataset}, {
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftranslation_2eproto::scc_info_TranslationDatasetMetadata.base,
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fimage_2eproto::scc_info_ImageClassificationDatasetMetadata.base,
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftext_2eproto::scc_info_TextClassificationDatasetMetadata.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Dataset.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::Dataset, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::Dataset, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::automl::v1beta1::DatasetDefaultTypeInternal, translation_dataset_metadata_),
  offsetof(::google::cloud::automl::v1beta1::DatasetDefaultTypeInternal, image_classification_dataset_metadata_),
  offsetof(::google::cloud::automl::v1beta1::DatasetDefaultTypeInternal, text_classification_dataset_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::Dataset, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::Dataset, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::Dataset, example_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::Dataset, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::automl::v1beta1::Dataset, dataset_metadata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::automl::v1beta1::Dataset)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::automl::v1beta1::_Dataset_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/automl/v1beta1/dataset.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n)google/cloud/automl/v1beta1/dataset.pr"
      "oto\022\033google.cloud.automl.v1beta1\032\034google"
      "/api/annotations.proto\0324google/cloud/aut"
      "oml/v1beta1/annotation_payload.proto\032,go"
      "ogle/cloud/automl/v1beta1/data_items.pro"
      "to\032\'google/cloud/automl/v1beta1/image.pr"
      "oto\032&google/cloud/automl/v1beta1/text.pr"
      "oto\032-google/cloud/automl/v1beta1/transla"
      "tion.proto\032\037google/protobuf/timestamp.pr"
      "oto\"\314\003\n\007Dataset\022_\n\034translation_dataset_m"
      "etadata\030\027 \001(\01327.google.cloud.automl.v1be"
      "ta1.TranslationDatasetMetadataH\000\022p\n%imag"
      "e_classification_dataset_metadata\030\030 \001(\0132"
      "\?.google.cloud.automl.v1beta1.ImageClass"
      "ificationDatasetMetadataH\000\022n\n$text_class"
      "ification_dataset_metadata\030\031 \001(\0132>.googl"
      "e.cloud.automl.v1beta1.TextClassificatio"
      "nDatasetMetadataH\000\022\014\n\004name\030\001 \001(\t\022\024\n\014disp"
      "lay_name\030\002 \001(\t\022\025\n\rexample_count\030\025 \001(\005\022/\n"
      "\013create_time\030\016 \001(\0132\032.google.protobuf.Tim"
      "estampB\022\n\020dataset_metadataBf\n\037com.google"
      ".cloud.automl.v1beta1P\001ZAgoogle.golang.o"
      "rg/genproto/googleapis/cloud/automl/v1be"
      "ta1;automlb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 938);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/automl/v1beta1/dataset.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fannotation_5fpayload_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdata_5fitems_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fimage_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftext_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2ftranslation_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto
namespace google {
namespace cloud {
namespace automl {
namespace v1beta1 {

// ===================================================================

void Dataset::InitAsDefaultInstance() {
  ::google::cloud::automl::v1beta1::_Dataset_default_instance_.translation_dataset_metadata_ = const_cast< ::google::cloud::automl::v1beta1::TranslationDatasetMetadata*>(
      ::google::cloud::automl::v1beta1::TranslationDatasetMetadata::internal_default_instance());
  ::google::cloud::automl::v1beta1::_Dataset_default_instance_.image_classification_dataset_metadata_ = const_cast< ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata*>(
      ::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata::internal_default_instance());
  ::google::cloud::automl::v1beta1::_Dataset_default_instance_.text_classification_dataset_metadata_ = const_cast< ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata*>(
      ::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata::internal_default_instance());
  ::google::cloud::automl::v1beta1::_Dataset_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Dataset::set_allocated_translation_dataset_metadata(::google::cloud::automl::v1beta1::TranslationDatasetMetadata* translation_dataset_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_dataset_metadata();
  if (translation_dataset_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      translation_dataset_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, translation_dataset_metadata, submessage_arena);
    }
    set_has_translation_dataset_metadata();
    dataset_metadata_.translation_dataset_metadata_ = translation_dataset_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.Dataset.translation_dataset_metadata)
}
void Dataset::clear_translation_dataset_metadata() {
  if (has_translation_dataset_metadata()) {
    delete dataset_metadata_.translation_dataset_metadata_;
    clear_has_dataset_metadata();
  }
}
void Dataset::set_allocated_image_classification_dataset_metadata(::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata* image_classification_dataset_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_dataset_metadata();
  if (image_classification_dataset_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      image_classification_dataset_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, image_classification_dataset_metadata, submessage_arena);
    }
    set_has_image_classification_dataset_metadata();
    dataset_metadata_.image_classification_dataset_metadata_ = image_classification_dataset_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.Dataset.image_classification_dataset_metadata)
}
void Dataset::clear_image_classification_dataset_metadata() {
  if (has_image_classification_dataset_metadata()) {
    delete dataset_metadata_.image_classification_dataset_metadata_;
    clear_has_dataset_metadata();
  }
}
void Dataset::set_allocated_text_classification_dataset_metadata(::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata* text_classification_dataset_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_dataset_metadata();
  if (text_classification_dataset_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text_classification_dataset_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text_classification_dataset_metadata, submessage_arena);
    }
    set_has_text_classification_dataset_metadata();
    dataset_metadata_.text_classification_dataset_metadata_ = text_classification_dataset_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.automl.v1beta1.Dataset.text_classification_dataset_metadata)
}
void Dataset::clear_text_classification_dataset_metadata() {
  if (has_text_classification_dataset_metadata()) {
    delete dataset_metadata_.text_classification_dataset_metadata_;
    clear_has_dataset_metadata();
  }
}
void Dataset::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dataset::kTranslationDatasetMetadataFieldNumber;
const int Dataset::kImageClassificationDatasetMetadataFieldNumber;
const int Dataset::kTextClassificationDatasetMetadataFieldNumber;
const int Dataset::kNameFieldNumber;
const int Dataset::kDisplayNameFieldNumber;
const int Dataset::kExampleCountFieldNumber;
const int Dataset::kCreateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dataset::Dataset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto::scc_info_Dataset.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.automl.v1beta1.Dataset)
}
Dataset::Dataset(const Dataset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  example_count_ = from.example_count_;
  clear_has_dataset_metadata();
  switch (from.dataset_metadata_case()) {
    case kTranslationDatasetMetadata: {
      mutable_translation_dataset_metadata()->::google::cloud::automl::v1beta1::TranslationDatasetMetadata::MergeFrom(from.translation_dataset_metadata());
      break;
    }
    case kImageClassificationDatasetMetadata: {
      mutable_image_classification_dataset_metadata()->::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata::MergeFrom(from.image_classification_dataset_metadata());
      break;
    }
    case kTextClassificationDatasetMetadata: {
      mutable_text_classification_dataset_metadata()->::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata::MergeFrom(from.text_classification_dataset_metadata());
      break;
    }
    case DATASET_METADATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.automl.v1beta1.Dataset)
}

void Dataset::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&example_count_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(example_count_));
  clear_has_dataset_metadata();
}

Dataset::~Dataset() {
  // @@protoc_insertion_point(destructor:google.cloud.automl.v1beta1.Dataset)
  SharedDtor();
}

void Dataset::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (has_dataset_metadata()) {
    clear_dataset_metadata();
  }
}

void Dataset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Dataset::descriptor() {
  ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dataset& Dataset::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto::scc_info_Dataset.base);
  return *internal_default_instance();
}


void Dataset::clear_dataset_metadata() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.automl.v1beta1.Dataset)
  switch (dataset_metadata_case()) {
    case kTranslationDatasetMetadata: {
      delete dataset_metadata_.translation_dataset_metadata_;
      break;
    }
    case kImageClassificationDatasetMetadata: {
      delete dataset_metadata_.image_classification_dataset_metadata_;
      break;
    }
    case kTextClassificationDatasetMetadata: {
      delete dataset_metadata_.text_classification_dataset_metadata_;
      break;
    }
    case DATASET_METADATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATASET_METADATA_NOT_SET;
}


void Dataset::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.automl.v1beta1.Dataset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  example_count_ = 0;
  clear_dataset_metadata();
  _internal_metadata_.Clear();
}

bool Dataset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.automl.v1beta1.Dataset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.automl.v1beta1.Dataset.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.automl.v1beta1.Dataset.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 example_count = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &example_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.automl.v1beta1.TranslationDatasetMetadata translation_dataset_metadata = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_translation_dataset_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.automl.v1beta1.ImageClassificationDatasetMetadata image_classification_dataset_metadata = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image_classification_dataset_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.automl.v1beta1.TextClassificationDatasetMetadata text_classification_dataset_metadata = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text_classification_dataset_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.automl.v1beta1.Dataset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.automl.v1beta1.Dataset)
  return false;
#undef DO_
}

void Dataset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.automl.v1beta1.Dataset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.Dataset.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.Dataset.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // .google.protobuf.Timestamp create_time = 14;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_create_time(), output);
  }

  // int32 example_count = 21;
  if (this->example_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->example_count(), output);
  }

  // .google.cloud.automl.v1beta1.TranslationDatasetMetadata translation_dataset_metadata = 23;
  if (has_translation_dataset_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_translation_dataset_metadata(), output);
  }

  // .google.cloud.automl.v1beta1.ImageClassificationDatasetMetadata image_classification_dataset_metadata = 24;
  if (has_image_classification_dataset_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_image_classification_dataset_metadata(), output);
  }

  // .google.cloud.automl.v1beta1.TextClassificationDatasetMetadata text_classification_dataset_metadata = 25;
  if (has_text_classification_dataset_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_text_classification_dataset_metadata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.automl.v1beta1.Dataset)
}

::google::protobuf::uint8* Dataset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.automl.v1beta1.Dataset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.Dataset.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.automl.v1beta1.Dataset.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  // .google.protobuf.Timestamp create_time = 14;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_create_time(), deterministic, target);
  }

  // int32 example_count = 21;
  if (this->example_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->example_count(), target);
  }

  // .google.cloud.automl.v1beta1.TranslationDatasetMetadata translation_dataset_metadata = 23;
  if (has_translation_dataset_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_translation_dataset_metadata(), deterministic, target);
  }

  // .google.cloud.automl.v1beta1.ImageClassificationDatasetMetadata image_classification_dataset_metadata = 24;
  if (has_image_classification_dataset_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_image_classification_dataset_metadata(), deterministic, target);
  }

  // .google.cloud.automl.v1beta1.TextClassificationDatasetMetadata text_classification_dataset_metadata = 25;
  if (has_text_classification_dataset_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_text_classification_dataset_metadata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.automl.v1beta1.Dataset)
  return target;
}

size_t Dataset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.automl.v1beta1.Dataset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // .google.protobuf.Timestamp create_time = 14;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // int32 example_count = 21;
  if (this->example_count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->example_count());
  }

  switch (dataset_metadata_case()) {
    // .google.cloud.automl.v1beta1.TranslationDatasetMetadata translation_dataset_metadata = 23;
    case kTranslationDatasetMetadata: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dataset_metadata_.translation_dataset_metadata_);
      break;
    }
    // .google.cloud.automl.v1beta1.ImageClassificationDatasetMetadata image_classification_dataset_metadata = 24;
    case kImageClassificationDatasetMetadata: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dataset_metadata_.image_classification_dataset_metadata_);
      break;
    }
    // .google.cloud.automl.v1beta1.TextClassificationDatasetMetadata text_classification_dataset_metadata = 25;
    case kTextClassificationDatasetMetadata: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dataset_metadata_.text_classification_dataset_metadata_);
      break;
    }
    case DATASET_METADATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Dataset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.automl.v1beta1.Dataset)
  GOOGLE_DCHECK_NE(&from, this);
  const Dataset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Dataset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.automl.v1beta1.Dataset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.automl.v1beta1.Dataset)
    MergeFrom(*source);
  }
}

void Dataset::MergeFrom(const Dataset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.automl.v1beta1.Dataset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.example_count() != 0) {
    set_example_count(from.example_count());
  }
  switch (from.dataset_metadata_case()) {
    case kTranslationDatasetMetadata: {
      mutable_translation_dataset_metadata()->::google::cloud::automl::v1beta1::TranslationDatasetMetadata::MergeFrom(from.translation_dataset_metadata());
      break;
    }
    case kImageClassificationDatasetMetadata: {
      mutable_image_classification_dataset_metadata()->::google::cloud::automl::v1beta1::ImageClassificationDatasetMetadata::MergeFrom(from.image_classification_dataset_metadata());
      break;
    }
    case kTextClassificationDatasetMetadata: {
      mutable_text_classification_dataset_metadata()->::google::cloud::automl::v1beta1::TextClassificationDatasetMetadata::MergeFrom(from.text_classification_dataset_metadata());
      break;
    }
    case DATASET_METADATA_NOT_SET: {
      break;
    }
  }
}

void Dataset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.automl.v1beta1.Dataset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dataset::CopyFrom(const Dataset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.automl.v1beta1.Dataset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dataset::IsInitialized() const {
  return true;
}

void Dataset::Swap(Dataset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dataset::InternalSwap(Dataset* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(example_count_, other->example_count_);
  swap(dataset_metadata_, other->dataset_metadata_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Dataset::GetMetadata() const {
  protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fautoml_2fv1beta1_2fdataset_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace automl
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::automl::v1beta1::Dataset* Arena::CreateMaybeMessage< ::google::cloud::automl::v1beta1::Dataset >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::automl::v1beta1::Dataset >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
