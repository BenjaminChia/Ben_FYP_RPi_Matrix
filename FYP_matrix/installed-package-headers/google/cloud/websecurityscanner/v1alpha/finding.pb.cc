// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/websecurityscanner/v1alpha/finding.proto

#include "google/cloud/websecurityscanner/v1alpha/finding.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_5faddon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_5faddon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OutdatedLibrary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_5faddon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ViolatingResource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_5faddon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VulnerableParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_5faddon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Xss;
}  // namespace protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_5faddon_2eproto
namespace google {
namespace cloud {
namespace websecurityscanner {
namespace v1alpha {
class FindingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Finding>
      _instance;
} _Finding_default_instance_;
}  // namespace v1alpha
}  // namespace websecurityscanner
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto {
static void InitDefaultsFinding() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::websecurityscanner::v1alpha::_Finding_default_instance_;
    new (ptr) ::google::cloud::websecurityscanner::v1alpha::Finding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::websecurityscanner::v1alpha::Finding::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Finding =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsFinding}, {
      &protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_5faddon_2eproto::scc_info_OutdatedLibrary.base,
      &protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_5faddon_2eproto::scc_info_ViolatingResource.base,
      &protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_5faddon_2eproto::scc_info_VulnerableParameters.base,
      &protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_5faddon_2eproto::scc_info_Xss.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Finding.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, finding_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, http_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, fuzzed_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, body_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, reproduction_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, frame_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, final_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, tracking_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, outdated_library_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, violating_resource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, vulnerable_parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::websecurityscanner::v1alpha::Finding, xss_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::websecurityscanner::v1alpha::Finding)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::websecurityscanner::v1alpha::_Finding_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/websecurityscanner/v1alpha/finding.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n5google/cloud/websecurityscanner/v1alph"
      "a/finding.proto\022\'google.cloud.websecurit"
      "yscanner.v1alpha\032\034google/api/annotations"
      ".proto\032;google/cloud/websecurityscanner/"
      "v1alpha/finding_addon.proto\"\365\005\n\007Finding\022"
      "\014\n\004name\030\001 \001(\t\022R\n\014finding_type\030\002 \001(\0162<.go"
      "ogle.cloud.websecurityscanner.v1alpha.Fi"
      "nding.FindingType\022\023\n\013http_method\030\003 \001(\t\022\022"
      "\n\nfuzzed_url\030\004 \001(\t\022\014\n\004body\030\005 \001(\t\022\023\n\013desc"
      "ription\030\006 \001(\t\022\030\n\020reproduction_url\030\007 \001(\t\022"
      "\021\n\tframe_url\030\010 \001(\t\022\021\n\tfinal_url\030\t \001(\t\022\023\n"
      "\013tracking_id\030\n \001(\t\022R\n\020outdated_library\030\013"
      " \001(\01328.google.cloud.websecurityscanner.v"
      "1alpha.OutdatedLibrary\022V\n\022violating_reso"
      "urce\030\014 \001(\0132:.google.cloud.websecuritysca"
      "nner.v1alpha.ViolatingResource\022\\\n\025vulner"
      "able_parameters\030\r \001(\0132=.google.cloud.web"
      "securityscanner.v1alpha.VulnerableParame"
      "ters\0229\n\003xss\030\016 \001(\0132,.google.cloud.websecu"
      "rityscanner.v1alpha.Xss\"\241\001\n\013FindingType\022"
      "\034\n\030FINDING_TYPE_UNSPECIFIED\020\000\022\021\n\rMIXED_C"
      "ONTENT\020\001\022\024\n\020OUTDATED_LIBRARY\020\002\022\021\n\rROSETT"
      "A_FLASH\020\005\022\020\n\014XSS_CALLBACK\020\003\022\r\n\tXSS_ERROR"
      "\020\004\022\027\n\023CLEAR_TEXT_PASSWORD\020\006B\230\001\n+com.goog"
      "le.cloud.websecurityscanner.v1alphaB\014Fin"
      "dingProtoP\001ZYgoogle.golang.org/genproto/"
      "googleapis/cloud/websecurityscanner/v1al"
      "pha;websecurityscannerb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1110);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/websecurityscanner/v1alpha/finding.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_5faddon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto
namespace google {
namespace cloud {
namespace websecurityscanner {
namespace v1alpha {
const ::google::protobuf::EnumDescriptor* Finding_FindingType_descriptor() {
  protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto::file_level_enum_descriptors[0];
}
bool Finding_FindingType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Finding_FindingType Finding::FINDING_TYPE_UNSPECIFIED;
const Finding_FindingType Finding::MIXED_CONTENT;
const Finding_FindingType Finding::OUTDATED_LIBRARY;
const Finding_FindingType Finding::ROSETTA_FLASH;
const Finding_FindingType Finding::XSS_CALLBACK;
const Finding_FindingType Finding::XSS_ERROR;
const Finding_FindingType Finding::CLEAR_TEXT_PASSWORD;
const Finding_FindingType Finding::FindingType_MIN;
const Finding_FindingType Finding::FindingType_MAX;
const int Finding::FindingType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Finding::InitAsDefaultInstance() {
  ::google::cloud::websecurityscanner::v1alpha::_Finding_default_instance_._instance.get_mutable()->outdated_library_ = const_cast< ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary*>(
      ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary::internal_default_instance());
  ::google::cloud::websecurityscanner::v1alpha::_Finding_default_instance_._instance.get_mutable()->violating_resource_ = const_cast< ::google::cloud::websecurityscanner::v1alpha::ViolatingResource*>(
      ::google::cloud::websecurityscanner::v1alpha::ViolatingResource::internal_default_instance());
  ::google::cloud::websecurityscanner::v1alpha::_Finding_default_instance_._instance.get_mutable()->vulnerable_parameters_ = const_cast< ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters*>(
      ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters::internal_default_instance());
  ::google::cloud::websecurityscanner::v1alpha::_Finding_default_instance_._instance.get_mutable()->xss_ = const_cast< ::google::cloud::websecurityscanner::v1alpha::Xss*>(
      ::google::cloud::websecurityscanner::v1alpha::Xss::internal_default_instance());
}
void Finding::clear_outdated_library() {
  if (GetArenaNoVirtual() == NULL && outdated_library_ != NULL) {
    delete outdated_library_;
  }
  outdated_library_ = NULL;
}
void Finding::clear_violating_resource() {
  if (GetArenaNoVirtual() == NULL && violating_resource_ != NULL) {
    delete violating_resource_;
  }
  violating_resource_ = NULL;
}
void Finding::clear_vulnerable_parameters() {
  if (GetArenaNoVirtual() == NULL && vulnerable_parameters_ != NULL) {
    delete vulnerable_parameters_;
  }
  vulnerable_parameters_ = NULL;
}
void Finding::clear_xss() {
  if (GetArenaNoVirtual() == NULL && xss_ != NULL) {
    delete xss_;
  }
  xss_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Finding::kNameFieldNumber;
const int Finding::kFindingTypeFieldNumber;
const int Finding::kHttpMethodFieldNumber;
const int Finding::kFuzzedUrlFieldNumber;
const int Finding::kBodyFieldNumber;
const int Finding::kDescriptionFieldNumber;
const int Finding::kReproductionUrlFieldNumber;
const int Finding::kFrameUrlFieldNumber;
const int Finding::kFinalUrlFieldNumber;
const int Finding::kTrackingIdFieldNumber;
const int Finding::kOutdatedLibraryFieldNumber;
const int Finding::kViolatingResourceFieldNumber;
const int Finding::kVulnerableParametersFieldNumber;
const int Finding::kXssFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Finding::Finding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto::scc_info_Finding.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.websecurityscanner.v1alpha.Finding)
}
Finding::Finding(const Finding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  http_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.http_method().size() > 0) {
    http_method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_method_);
  }
  fuzzed_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fuzzed_url().size() > 0) {
    fuzzed_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fuzzed_url_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  reproduction_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reproduction_url().size() > 0) {
    reproduction_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reproduction_url_);
  }
  frame_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.frame_url().size() > 0) {
    frame_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_url_);
  }
  final_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.final_url().size() > 0) {
    final_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.final_url_);
  }
  tracking_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tracking_id().size() > 0) {
    tracking_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tracking_id_);
  }
  if (from.has_outdated_library()) {
    outdated_library_ = new ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary(*from.outdated_library_);
  } else {
    outdated_library_ = NULL;
  }
  if (from.has_violating_resource()) {
    violating_resource_ = new ::google::cloud::websecurityscanner::v1alpha::ViolatingResource(*from.violating_resource_);
  } else {
    violating_resource_ = NULL;
  }
  if (from.has_vulnerable_parameters()) {
    vulnerable_parameters_ = new ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters(*from.vulnerable_parameters_);
  } else {
    vulnerable_parameters_ = NULL;
  }
  if (from.has_xss()) {
    xss_ = new ::google::cloud::websecurityscanner::v1alpha::Xss(*from.xss_);
  } else {
    xss_ = NULL;
  }
  finding_type_ = from.finding_type_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.websecurityscanner.v1alpha.Finding)
}

void Finding::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fuzzed_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reproduction_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frame_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  final_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tracking_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&outdated_library_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finding_type_) -
      reinterpret_cast<char*>(&outdated_library_)) + sizeof(finding_type_));
}

Finding::~Finding() {
  // @@protoc_insertion_point(destructor:google.cloud.websecurityscanner.v1alpha.Finding)
  SharedDtor();
}

void Finding::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fuzzed_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reproduction_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frame_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  final_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tracking_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete outdated_library_;
  if (this != internal_default_instance()) delete violating_resource_;
  if (this != internal_default_instance()) delete vulnerable_parameters_;
  if (this != internal_default_instance()) delete xss_;
}

void Finding::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Finding::descriptor() {
  ::protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Finding& Finding::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto::scc_info_Finding.base);
  return *internal_default_instance();
}


void Finding::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.websecurityscanner.v1alpha.Finding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fuzzed_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reproduction_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frame_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  final_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tracking_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && outdated_library_ != NULL) {
    delete outdated_library_;
  }
  outdated_library_ = NULL;
  if (GetArenaNoVirtual() == NULL && violating_resource_ != NULL) {
    delete violating_resource_;
  }
  violating_resource_ = NULL;
  if (GetArenaNoVirtual() == NULL && vulnerable_parameters_ != NULL) {
    delete vulnerable_parameters_;
  }
  vulnerable_parameters_ = NULL;
  if (GetArenaNoVirtual() == NULL && xss_ != NULL) {
    delete xss_;
  }
  xss_ = NULL;
  finding_type_ = 0;
  _internal_metadata_.Clear();
}

bool Finding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.websecurityscanner.v1alpha.Finding)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.websecurityscanner.v1alpha.Finding.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.websecurityscanner.v1alpha.Finding.FindingType finding_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_finding_type(static_cast< ::google::cloud::websecurityscanner::v1alpha::Finding_FindingType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string http_method = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_http_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->http_method().data(), static_cast<int>(this->http_method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.websecurityscanner.v1alpha.Finding.http_method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fuzzed_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fuzzed_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fuzzed_url().data(), static_cast<int>(this->fuzzed_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.websecurityscanner.v1alpha.Finding.fuzzed_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string body = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->body().data(), static_cast<int>(this->body().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.websecurityscanner.v1alpha.Finding.body"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.websecurityscanner.v1alpha.Finding.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reproduction_url = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reproduction_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reproduction_url().data(), static_cast<int>(this->reproduction_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.websecurityscanner.v1alpha.Finding.reproduction_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string frame_url = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_frame_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->frame_url().data(), static_cast<int>(this->frame_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.websecurityscanner.v1alpha.Finding.frame_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string final_url = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_final_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->final_url().data(), static_cast<int>(this->final_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.websecurityscanner.v1alpha.Finding.final_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tracking_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tracking_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tracking_id().data(), static_cast<int>(this->tracking_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.websecurityscanner.v1alpha.Finding.tracking_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.websecurityscanner.v1alpha.OutdatedLibrary outdated_library = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_outdated_library()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.websecurityscanner.v1alpha.ViolatingResource violating_resource = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_violating_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.websecurityscanner.v1alpha.VulnerableParameters vulnerable_parameters = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vulnerable_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.websecurityscanner.v1alpha.Xss xss = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_xss()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.websecurityscanner.v1alpha.Finding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.websecurityscanner.v1alpha.Finding)
  return false;
#undef DO_
}

void Finding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.websecurityscanner.v1alpha.Finding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.cloud.websecurityscanner.v1alpha.Finding.FindingType finding_type = 2;
  if (this->finding_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->finding_type(), output);
  }

  // string http_method = 3;
  if (this->http_method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->http_method().data(), static_cast<int>(this->http_method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.http_method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->http_method(), output);
  }

  // string fuzzed_url = 4;
  if (this->fuzzed_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fuzzed_url().data(), static_cast<int>(this->fuzzed_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.fuzzed_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->fuzzed_url(), output);
  }

  // string body = 5;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->body(), output);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // string reproduction_url = 7;
  if (this->reproduction_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reproduction_url().data(), static_cast<int>(this->reproduction_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.reproduction_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->reproduction_url(), output);
  }

  // string frame_url = 8;
  if (this->frame_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->frame_url().data(), static_cast<int>(this->frame_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.frame_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->frame_url(), output);
  }

  // string final_url = 9;
  if (this->final_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->final_url().data(), static_cast<int>(this->final_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.final_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->final_url(), output);
  }

  // string tracking_id = 10;
  if (this->tracking_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tracking_id().data(), static_cast<int>(this->tracking_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.tracking_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->tracking_id(), output);
  }

  // .google.cloud.websecurityscanner.v1alpha.OutdatedLibrary outdated_library = 11;
  if (this->has_outdated_library()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_outdated_library(), output);
  }

  // .google.cloud.websecurityscanner.v1alpha.ViolatingResource violating_resource = 12;
  if (this->has_violating_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_violating_resource(), output);
  }

  // .google.cloud.websecurityscanner.v1alpha.VulnerableParameters vulnerable_parameters = 13;
  if (this->has_vulnerable_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_vulnerable_parameters(), output);
  }

  // .google.cloud.websecurityscanner.v1alpha.Xss xss = 14;
  if (this->has_xss()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_xss(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.websecurityscanner.v1alpha.Finding)
}

::google::protobuf::uint8* Finding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.websecurityscanner.v1alpha.Finding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.cloud.websecurityscanner.v1alpha.Finding.FindingType finding_type = 2;
  if (this->finding_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->finding_type(), target);
  }

  // string http_method = 3;
  if (this->http_method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->http_method().data(), static_cast<int>(this->http_method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.http_method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->http_method(), target);
  }

  // string fuzzed_url = 4;
  if (this->fuzzed_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fuzzed_url().data(), static_cast<int>(this->fuzzed_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.fuzzed_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->fuzzed_url(), target);
  }

  // string body = 5;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->body(), target);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // string reproduction_url = 7;
  if (this->reproduction_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reproduction_url().data(), static_cast<int>(this->reproduction_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.reproduction_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->reproduction_url(), target);
  }

  // string frame_url = 8;
  if (this->frame_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->frame_url().data(), static_cast<int>(this->frame_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.frame_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->frame_url(), target);
  }

  // string final_url = 9;
  if (this->final_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->final_url().data(), static_cast<int>(this->final_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.final_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->final_url(), target);
  }

  // string tracking_id = 10;
  if (this->tracking_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tracking_id().data(), static_cast<int>(this->tracking_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.websecurityscanner.v1alpha.Finding.tracking_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->tracking_id(), target);
  }

  // .google.cloud.websecurityscanner.v1alpha.OutdatedLibrary outdated_library = 11;
  if (this->has_outdated_library()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_outdated_library(), deterministic, target);
  }

  // .google.cloud.websecurityscanner.v1alpha.ViolatingResource violating_resource = 12;
  if (this->has_violating_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_violating_resource(), deterministic, target);
  }

  // .google.cloud.websecurityscanner.v1alpha.VulnerableParameters vulnerable_parameters = 13;
  if (this->has_vulnerable_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_vulnerable_parameters(), deterministic, target);
  }

  // .google.cloud.websecurityscanner.v1alpha.Xss xss = 14;
  if (this->has_xss()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_xss(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.websecurityscanner.v1alpha.Finding)
  return target;
}

size_t Finding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.websecurityscanner.v1alpha.Finding)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string http_method = 3;
  if (this->http_method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->http_method());
  }

  // string fuzzed_url = 4;
  if (this->fuzzed_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fuzzed_url());
  }

  // string body = 5;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());
  }

  // string description = 6;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string reproduction_url = 7;
  if (this->reproduction_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reproduction_url());
  }

  // string frame_url = 8;
  if (this->frame_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->frame_url());
  }

  // string final_url = 9;
  if (this->final_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->final_url());
  }

  // string tracking_id = 10;
  if (this->tracking_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tracking_id());
  }

  // .google.cloud.websecurityscanner.v1alpha.OutdatedLibrary outdated_library = 11;
  if (this->has_outdated_library()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *outdated_library_);
  }

  // .google.cloud.websecurityscanner.v1alpha.ViolatingResource violating_resource = 12;
  if (this->has_violating_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *violating_resource_);
  }

  // .google.cloud.websecurityscanner.v1alpha.VulnerableParameters vulnerable_parameters = 13;
  if (this->has_vulnerable_parameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vulnerable_parameters_);
  }

  // .google.cloud.websecurityscanner.v1alpha.Xss xss = 14;
  if (this->has_xss()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *xss_);
  }

  // .google.cloud.websecurityscanner.v1alpha.Finding.FindingType finding_type = 2;
  if (this->finding_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->finding_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Finding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.websecurityscanner.v1alpha.Finding)
  GOOGLE_DCHECK_NE(&from, this);
  const Finding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Finding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.websecurityscanner.v1alpha.Finding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.websecurityscanner.v1alpha.Finding)
    MergeFrom(*source);
  }
}

void Finding::MergeFrom(const Finding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.websecurityscanner.v1alpha.Finding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.http_method().size() > 0) {

    http_method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_method_);
  }
  if (from.fuzzed_url().size() > 0) {

    fuzzed_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fuzzed_url_);
  }
  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.reproduction_url().size() > 0) {

    reproduction_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reproduction_url_);
  }
  if (from.frame_url().size() > 0) {

    frame_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_url_);
  }
  if (from.final_url().size() > 0) {

    final_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.final_url_);
  }
  if (from.tracking_id().size() > 0) {

    tracking_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tracking_id_);
  }
  if (from.has_outdated_library()) {
    mutable_outdated_library()->::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary::MergeFrom(from.outdated_library());
  }
  if (from.has_violating_resource()) {
    mutable_violating_resource()->::google::cloud::websecurityscanner::v1alpha::ViolatingResource::MergeFrom(from.violating_resource());
  }
  if (from.has_vulnerable_parameters()) {
    mutable_vulnerable_parameters()->::google::cloud::websecurityscanner::v1alpha::VulnerableParameters::MergeFrom(from.vulnerable_parameters());
  }
  if (from.has_xss()) {
    mutable_xss()->::google::cloud::websecurityscanner::v1alpha::Xss::MergeFrom(from.xss());
  }
  if (from.finding_type() != 0) {
    set_finding_type(from.finding_type());
  }
}

void Finding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.websecurityscanner.v1alpha.Finding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Finding::CopyFrom(const Finding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.websecurityscanner.v1alpha.Finding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Finding::IsInitialized() const {
  return true;
}

void Finding::Swap(Finding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Finding::InternalSwap(Finding* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  http_method_.Swap(&other->http_method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fuzzed_url_.Swap(&other->fuzzed_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reproduction_url_.Swap(&other->reproduction_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  frame_url_.Swap(&other->frame_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  final_url_.Swap(&other->final_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tracking_id_.Swap(&other->tracking_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(outdated_library_, other->outdated_library_);
  swap(violating_resource_, other->violating_resource_);
  swap(vulnerable_parameters_, other->vulnerable_parameters_);
  swap(xss_, other->xss_);
  swap(finding_type_, other->finding_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Finding::GetMetadata() const {
  protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace websecurityscanner
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::websecurityscanner::v1alpha::Finding* Arena::CreateMaybeMessage< ::google::cloud::websecurityscanner::v1alpha::Finding >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::websecurityscanner::v1alpha::Finding >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
