// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/websecurityscanner/v1alpha/finding.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/websecurityscanner/v1alpha/finding_addon.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto 

namespace protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto
namespace google {
namespace cloud {
namespace websecurityscanner {
namespace v1alpha {
class Finding;
class FindingDefaultTypeInternal;
extern FindingDefaultTypeInternal _Finding_default_instance_;
}  // namespace v1alpha
}  // namespace websecurityscanner
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::websecurityscanner::v1alpha::Finding* Arena::CreateMaybeMessage<::google::cloud::websecurityscanner::v1alpha::Finding>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace websecurityscanner {
namespace v1alpha {

enum Finding_FindingType {
  Finding_FindingType_FINDING_TYPE_UNSPECIFIED = 0,
  Finding_FindingType_MIXED_CONTENT = 1,
  Finding_FindingType_OUTDATED_LIBRARY = 2,
  Finding_FindingType_ROSETTA_FLASH = 5,
  Finding_FindingType_XSS_CALLBACK = 3,
  Finding_FindingType_XSS_ERROR = 4,
  Finding_FindingType_CLEAR_TEXT_PASSWORD = 6,
  Finding_FindingType_Finding_FindingType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Finding_FindingType_Finding_FindingType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Finding_FindingType_IsValid(int value);
const Finding_FindingType Finding_FindingType_FindingType_MIN = Finding_FindingType_FINDING_TYPE_UNSPECIFIED;
const Finding_FindingType Finding_FindingType_FindingType_MAX = Finding_FindingType_CLEAR_TEXT_PASSWORD;
const int Finding_FindingType_FindingType_ARRAYSIZE = Finding_FindingType_FindingType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Finding_FindingType_descriptor();
inline const ::std::string& Finding_FindingType_Name(Finding_FindingType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Finding_FindingType_descriptor(), value);
}
inline bool Finding_FindingType_Parse(
    const ::std::string& name, Finding_FindingType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Finding_FindingType>(
    Finding_FindingType_descriptor(), name, value);
}
// ===================================================================

class Finding : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.websecurityscanner.v1alpha.Finding) */ {
 public:
  Finding();
  virtual ~Finding();

  Finding(const Finding& from);

  inline Finding& operator=(const Finding& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Finding(Finding&& from) noexcept
    : Finding() {
    *this = ::std::move(from);
  }

  inline Finding& operator=(Finding&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Finding& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Finding* internal_default_instance() {
    return reinterpret_cast<const Finding*>(
               &_Finding_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Finding* other);
  friend void swap(Finding& a, Finding& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Finding* New() const final {
    return CreateMaybeMessage<Finding>(NULL);
  }

  Finding* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Finding>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Finding& from);
  void MergeFrom(const Finding& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Finding* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Finding_FindingType FindingType;
  static const FindingType FINDING_TYPE_UNSPECIFIED =
    Finding_FindingType_FINDING_TYPE_UNSPECIFIED;
  static const FindingType MIXED_CONTENT =
    Finding_FindingType_MIXED_CONTENT;
  static const FindingType OUTDATED_LIBRARY =
    Finding_FindingType_OUTDATED_LIBRARY;
  static const FindingType ROSETTA_FLASH =
    Finding_FindingType_ROSETTA_FLASH;
  static const FindingType XSS_CALLBACK =
    Finding_FindingType_XSS_CALLBACK;
  static const FindingType XSS_ERROR =
    Finding_FindingType_XSS_ERROR;
  static const FindingType CLEAR_TEXT_PASSWORD =
    Finding_FindingType_CLEAR_TEXT_PASSWORD;
  static inline bool FindingType_IsValid(int value) {
    return Finding_FindingType_IsValid(value);
  }
  static const FindingType FindingType_MIN =
    Finding_FindingType_FindingType_MIN;
  static const FindingType FindingType_MAX =
    Finding_FindingType_FindingType_MAX;
  static const int FindingType_ARRAYSIZE =
    Finding_FindingType_FindingType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FindingType_descriptor() {
    return Finding_FindingType_descriptor();
  }
  static inline const ::std::string& FindingType_Name(FindingType value) {
    return Finding_FindingType_Name(value);
  }
  static inline bool FindingType_Parse(const ::std::string& name,
      FindingType* value) {
    return Finding_FindingType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string http_method = 3;
  void clear_http_method();
  static const int kHttpMethodFieldNumber = 3;
  const ::std::string& http_method() const;
  void set_http_method(const ::std::string& value);
  #if LANG_CXX11
  void set_http_method(::std::string&& value);
  #endif
  void set_http_method(const char* value);
  void set_http_method(const char* value, size_t size);
  ::std::string* mutable_http_method();
  ::std::string* release_http_method();
  void set_allocated_http_method(::std::string* http_method);

  // string fuzzed_url = 4;
  void clear_fuzzed_url();
  static const int kFuzzedUrlFieldNumber = 4;
  const ::std::string& fuzzed_url() const;
  void set_fuzzed_url(const ::std::string& value);
  #if LANG_CXX11
  void set_fuzzed_url(::std::string&& value);
  #endif
  void set_fuzzed_url(const char* value);
  void set_fuzzed_url(const char* value, size_t size);
  ::std::string* mutable_fuzzed_url();
  ::std::string* release_fuzzed_url();
  void set_allocated_fuzzed_url(::std::string* fuzzed_url);

  // string body = 5;
  void clear_body();
  static const int kBodyFieldNumber = 5;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const char* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // string description = 6;
  void clear_description();
  static const int kDescriptionFieldNumber = 6;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string reproduction_url = 7;
  void clear_reproduction_url();
  static const int kReproductionUrlFieldNumber = 7;
  const ::std::string& reproduction_url() const;
  void set_reproduction_url(const ::std::string& value);
  #if LANG_CXX11
  void set_reproduction_url(::std::string&& value);
  #endif
  void set_reproduction_url(const char* value);
  void set_reproduction_url(const char* value, size_t size);
  ::std::string* mutable_reproduction_url();
  ::std::string* release_reproduction_url();
  void set_allocated_reproduction_url(::std::string* reproduction_url);

  // string frame_url = 8;
  void clear_frame_url();
  static const int kFrameUrlFieldNumber = 8;
  const ::std::string& frame_url() const;
  void set_frame_url(const ::std::string& value);
  #if LANG_CXX11
  void set_frame_url(::std::string&& value);
  #endif
  void set_frame_url(const char* value);
  void set_frame_url(const char* value, size_t size);
  ::std::string* mutable_frame_url();
  ::std::string* release_frame_url();
  void set_allocated_frame_url(::std::string* frame_url);

  // string final_url = 9;
  void clear_final_url();
  static const int kFinalUrlFieldNumber = 9;
  const ::std::string& final_url() const;
  void set_final_url(const ::std::string& value);
  #if LANG_CXX11
  void set_final_url(::std::string&& value);
  #endif
  void set_final_url(const char* value);
  void set_final_url(const char* value, size_t size);
  ::std::string* mutable_final_url();
  ::std::string* release_final_url();
  void set_allocated_final_url(::std::string* final_url);

  // string tracking_id = 10;
  void clear_tracking_id();
  static const int kTrackingIdFieldNumber = 10;
  const ::std::string& tracking_id() const;
  void set_tracking_id(const ::std::string& value);
  #if LANG_CXX11
  void set_tracking_id(::std::string&& value);
  #endif
  void set_tracking_id(const char* value);
  void set_tracking_id(const char* value, size_t size);
  ::std::string* mutable_tracking_id();
  ::std::string* release_tracking_id();
  void set_allocated_tracking_id(::std::string* tracking_id);

  // .google.cloud.websecurityscanner.v1alpha.OutdatedLibrary outdated_library = 11;
  bool has_outdated_library() const;
  void clear_outdated_library();
  static const int kOutdatedLibraryFieldNumber = 11;
  private:
  const ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary& _internal_outdated_library() const;
  public:
  const ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary& outdated_library() const;
  ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary* release_outdated_library();
  ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary* mutable_outdated_library();
  void set_allocated_outdated_library(::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary* outdated_library);

  // .google.cloud.websecurityscanner.v1alpha.ViolatingResource violating_resource = 12;
  bool has_violating_resource() const;
  void clear_violating_resource();
  static const int kViolatingResourceFieldNumber = 12;
  private:
  const ::google::cloud::websecurityscanner::v1alpha::ViolatingResource& _internal_violating_resource() const;
  public:
  const ::google::cloud::websecurityscanner::v1alpha::ViolatingResource& violating_resource() const;
  ::google::cloud::websecurityscanner::v1alpha::ViolatingResource* release_violating_resource();
  ::google::cloud::websecurityscanner::v1alpha::ViolatingResource* mutable_violating_resource();
  void set_allocated_violating_resource(::google::cloud::websecurityscanner::v1alpha::ViolatingResource* violating_resource);

  // .google.cloud.websecurityscanner.v1alpha.VulnerableParameters vulnerable_parameters = 13;
  bool has_vulnerable_parameters() const;
  void clear_vulnerable_parameters();
  static const int kVulnerableParametersFieldNumber = 13;
  private:
  const ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters& _internal_vulnerable_parameters() const;
  public:
  const ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters& vulnerable_parameters() const;
  ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters* release_vulnerable_parameters();
  ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters* mutable_vulnerable_parameters();
  void set_allocated_vulnerable_parameters(::google::cloud::websecurityscanner::v1alpha::VulnerableParameters* vulnerable_parameters);

  // .google.cloud.websecurityscanner.v1alpha.Xss xss = 14;
  bool has_xss() const;
  void clear_xss();
  static const int kXssFieldNumber = 14;
  private:
  const ::google::cloud::websecurityscanner::v1alpha::Xss& _internal_xss() const;
  public:
  const ::google::cloud::websecurityscanner::v1alpha::Xss& xss() const;
  ::google::cloud::websecurityscanner::v1alpha::Xss* release_xss();
  ::google::cloud::websecurityscanner::v1alpha::Xss* mutable_xss();
  void set_allocated_xss(::google::cloud::websecurityscanner::v1alpha::Xss* xss);

  // .google.cloud.websecurityscanner.v1alpha.Finding.FindingType finding_type = 2;
  void clear_finding_type();
  static const int kFindingTypeFieldNumber = 2;
  ::google::cloud::websecurityscanner::v1alpha::Finding_FindingType finding_type() const;
  void set_finding_type(::google::cloud::websecurityscanner::v1alpha::Finding_FindingType value);

  // @@protoc_insertion_point(class_scope:google.cloud.websecurityscanner.v1alpha.Finding)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr http_method_;
  ::google::protobuf::internal::ArenaStringPtr fuzzed_url_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr reproduction_url_;
  ::google::protobuf::internal::ArenaStringPtr frame_url_;
  ::google::protobuf::internal::ArenaStringPtr final_url_;
  ::google::protobuf::internal::ArenaStringPtr tracking_id_;
  ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary* outdated_library_;
  ::google::cloud::websecurityscanner::v1alpha::ViolatingResource* violating_resource_;
  ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters* vulnerable_parameters_;
  ::google::cloud::websecurityscanner::v1alpha::Xss* xss_;
  int finding_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Finding

// string name = 1;
inline void Finding::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Finding::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.name)
  return name_.GetNoArena();
}
inline void Finding::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.websecurityscanner.v1alpha.Finding.name)
}
#if LANG_CXX11
inline void Finding::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.websecurityscanner.v1alpha.Finding.name)
}
#endif
inline void Finding::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.websecurityscanner.v1alpha.Finding.name)
}
inline void Finding::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.websecurityscanner.v1alpha.Finding.name)
}
inline ::std::string* Finding::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.websecurityscanner.v1alpha.Finding.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Finding::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.websecurityscanner.v1alpha.Finding.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Finding::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.websecurityscanner.v1alpha.Finding.name)
}

// .google.cloud.websecurityscanner.v1alpha.Finding.FindingType finding_type = 2;
inline void Finding::clear_finding_type() {
  finding_type_ = 0;
}
inline ::google::cloud::websecurityscanner::v1alpha::Finding_FindingType Finding::finding_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.finding_type)
  return static_cast< ::google::cloud::websecurityscanner::v1alpha::Finding_FindingType >(finding_type_);
}
inline void Finding::set_finding_type(::google::cloud::websecurityscanner::v1alpha::Finding_FindingType value) {
  
  finding_type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.websecurityscanner.v1alpha.Finding.finding_type)
}

// string http_method = 3;
inline void Finding::clear_http_method() {
  http_method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Finding::http_method() const {
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.http_method)
  return http_method_.GetNoArena();
}
inline void Finding::set_http_method(const ::std::string& value) {
  
  http_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.websecurityscanner.v1alpha.Finding.http_method)
}
#if LANG_CXX11
inline void Finding::set_http_method(::std::string&& value) {
  
  http_method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.websecurityscanner.v1alpha.Finding.http_method)
}
#endif
inline void Finding::set_http_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  http_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.websecurityscanner.v1alpha.Finding.http_method)
}
inline void Finding::set_http_method(const char* value, size_t size) {
  
  http_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.websecurityscanner.v1alpha.Finding.http_method)
}
inline ::std::string* Finding::mutable_http_method() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.websecurityscanner.v1alpha.Finding.http_method)
  return http_method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Finding::release_http_method() {
  // @@protoc_insertion_point(field_release:google.cloud.websecurityscanner.v1alpha.Finding.http_method)
  
  return http_method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Finding::set_allocated_http_method(::std::string* http_method) {
  if (http_method != NULL) {
    
  } else {
    
  }
  http_method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), http_method);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.websecurityscanner.v1alpha.Finding.http_method)
}

// string fuzzed_url = 4;
inline void Finding::clear_fuzzed_url() {
  fuzzed_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Finding::fuzzed_url() const {
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.fuzzed_url)
  return fuzzed_url_.GetNoArena();
}
inline void Finding::set_fuzzed_url(const ::std::string& value) {
  
  fuzzed_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.websecurityscanner.v1alpha.Finding.fuzzed_url)
}
#if LANG_CXX11
inline void Finding::set_fuzzed_url(::std::string&& value) {
  
  fuzzed_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.websecurityscanner.v1alpha.Finding.fuzzed_url)
}
#endif
inline void Finding::set_fuzzed_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fuzzed_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.websecurityscanner.v1alpha.Finding.fuzzed_url)
}
inline void Finding::set_fuzzed_url(const char* value, size_t size) {
  
  fuzzed_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.websecurityscanner.v1alpha.Finding.fuzzed_url)
}
inline ::std::string* Finding::mutable_fuzzed_url() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.websecurityscanner.v1alpha.Finding.fuzzed_url)
  return fuzzed_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Finding::release_fuzzed_url() {
  // @@protoc_insertion_point(field_release:google.cloud.websecurityscanner.v1alpha.Finding.fuzzed_url)
  
  return fuzzed_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Finding::set_allocated_fuzzed_url(::std::string* fuzzed_url) {
  if (fuzzed_url != NULL) {
    
  } else {
    
  }
  fuzzed_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fuzzed_url);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.websecurityscanner.v1alpha.Finding.fuzzed_url)
}

// string body = 5;
inline void Finding::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Finding::body() const {
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.body)
  return body_.GetNoArena();
}
inline void Finding::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.websecurityscanner.v1alpha.Finding.body)
}
#if LANG_CXX11
inline void Finding::set_body(::std::string&& value) {
  
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.websecurityscanner.v1alpha.Finding.body)
}
#endif
inline void Finding::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.websecurityscanner.v1alpha.Finding.body)
}
inline void Finding::set_body(const char* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.websecurityscanner.v1alpha.Finding.body)
}
inline ::std::string* Finding::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.websecurityscanner.v1alpha.Finding.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Finding::release_body() {
  // @@protoc_insertion_point(field_release:google.cloud.websecurityscanner.v1alpha.Finding.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Finding::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.websecurityscanner.v1alpha.Finding.body)
}

// string description = 6;
inline void Finding::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Finding::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.description)
  return description_.GetNoArena();
}
inline void Finding::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.websecurityscanner.v1alpha.Finding.description)
}
#if LANG_CXX11
inline void Finding::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.websecurityscanner.v1alpha.Finding.description)
}
#endif
inline void Finding::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.websecurityscanner.v1alpha.Finding.description)
}
inline void Finding::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.websecurityscanner.v1alpha.Finding.description)
}
inline ::std::string* Finding::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.websecurityscanner.v1alpha.Finding.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Finding::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.websecurityscanner.v1alpha.Finding.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Finding::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.websecurityscanner.v1alpha.Finding.description)
}

// string reproduction_url = 7;
inline void Finding::clear_reproduction_url() {
  reproduction_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Finding::reproduction_url() const {
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.reproduction_url)
  return reproduction_url_.GetNoArena();
}
inline void Finding::set_reproduction_url(const ::std::string& value) {
  
  reproduction_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.websecurityscanner.v1alpha.Finding.reproduction_url)
}
#if LANG_CXX11
inline void Finding::set_reproduction_url(::std::string&& value) {
  
  reproduction_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.websecurityscanner.v1alpha.Finding.reproduction_url)
}
#endif
inline void Finding::set_reproduction_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reproduction_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.websecurityscanner.v1alpha.Finding.reproduction_url)
}
inline void Finding::set_reproduction_url(const char* value, size_t size) {
  
  reproduction_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.websecurityscanner.v1alpha.Finding.reproduction_url)
}
inline ::std::string* Finding::mutable_reproduction_url() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.websecurityscanner.v1alpha.Finding.reproduction_url)
  return reproduction_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Finding::release_reproduction_url() {
  // @@protoc_insertion_point(field_release:google.cloud.websecurityscanner.v1alpha.Finding.reproduction_url)
  
  return reproduction_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Finding::set_allocated_reproduction_url(::std::string* reproduction_url) {
  if (reproduction_url != NULL) {
    
  } else {
    
  }
  reproduction_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reproduction_url);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.websecurityscanner.v1alpha.Finding.reproduction_url)
}

// string frame_url = 8;
inline void Finding::clear_frame_url() {
  frame_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Finding::frame_url() const {
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.frame_url)
  return frame_url_.GetNoArena();
}
inline void Finding::set_frame_url(const ::std::string& value) {
  
  frame_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.websecurityscanner.v1alpha.Finding.frame_url)
}
#if LANG_CXX11
inline void Finding::set_frame_url(::std::string&& value) {
  
  frame_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.websecurityscanner.v1alpha.Finding.frame_url)
}
#endif
inline void Finding::set_frame_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  frame_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.websecurityscanner.v1alpha.Finding.frame_url)
}
inline void Finding::set_frame_url(const char* value, size_t size) {
  
  frame_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.websecurityscanner.v1alpha.Finding.frame_url)
}
inline ::std::string* Finding::mutable_frame_url() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.websecurityscanner.v1alpha.Finding.frame_url)
  return frame_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Finding::release_frame_url() {
  // @@protoc_insertion_point(field_release:google.cloud.websecurityscanner.v1alpha.Finding.frame_url)
  
  return frame_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Finding::set_allocated_frame_url(::std::string* frame_url) {
  if (frame_url != NULL) {
    
  } else {
    
  }
  frame_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frame_url);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.websecurityscanner.v1alpha.Finding.frame_url)
}

// string final_url = 9;
inline void Finding::clear_final_url() {
  final_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Finding::final_url() const {
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.final_url)
  return final_url_.GetNoArena();
}
inline void Finding::set_final_url(const ::std::string& value) {
  
  final_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.websecurityscanner.v1alpha.Finding.final_url)
}
#if LANG_CXX11
inline void Finding::set_final_url(::std::string&& value) {
  
  final_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.websecurityscanner.v1alpha.Finding.final_url)
}
#endif
inline void Finding::set_final_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  final_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.websecurityscanner.v1alpha.Finding.final_url)
}
inline void Finding::set_final_url(const char* value, size_t size) {
  
  final_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.websecurityscanner.v1alpha.Finding.final_url)
}
inline ::std::string* Finding::mutable_final_url() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.websecurityscanner.v1alpha.Finding.final_url)
  return final_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Finding::release_final_url() {
  // @@protoc_insertion_point(field_release:google.cloud.websecurityscanner.v1alpha.Finding.final_url)
  
  return final_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Finding::set_allocated_final_url(::std::string* final_url) {
  if (final_url != NULL) {
    
  } else {
    
  }
  final_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), final_url);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.websecurityscanner.v1alpha.Finding.final_url)
}

// string tracking_id = 10;
inline void Finding::clear_tracking_id() {
  tracking_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Finding::tracking_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.tracking_id)
  return tracking_id_.GetNoArena();
}
inline void Finding::set_tracking_id(const ::std::string& value) {
  
  tracking_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.websecurityscanner.v1alpha.Finding.tracking_id)
}
#if LANG_CXX11
inline void Finding::set_tracking_id(::std::string&& value) {
  
  tracking_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.websecurityscanner.v1alpha.Finding.tracking_id)
}
#endif
inline void Finding::set_tracking_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tracking_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.websecurityscanner.v1alpha.Finding.tracking_id)
}
inline void Finding::set_tracking_id(const char* value, size_t size) {
  
  tracking_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.websecurityscanner.v1alpha.Finding.tracking_id)
}
inline ::std::string* Finding::mutable_tracking_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.websecurityscanner.v1alpha.Finding.tracking_id)
  return tracking_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Finding::release_tracking_id() {
  // @@protoc_insertion_point(field_release:google.cloud.websecurityscanner.v1alpha.Finding.tracking_id)
  
  return tracking_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Finding::set_allocated_tracking_id(::std::string* tracking_id) {
  if (tracking_id != NULL) {
    
  } else {
    
  }
  tracking_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tracking_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.websecurityscanner.v1alpha.Finding.tracking_id)
}

// .google.cloud.websecurityscanner.v1alpha.OutdatedLibrary outdated_library = 11;
inline bool Finding::has_outdated_library() const {
  return this != internal_default_instance() && outdated_library_ != NULL;
}
inline const ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary& Finding::_internal_outdated_library() const {
  return *outdated_library_;
}
inline const ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary& Finding::outdated_library() const {
  const ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary* p = outdated_library_;
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.outdated_library)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary*>(
      &::google::cloud::websecurityscanner::v1alpha::_OutdatedLibrary_default_instance_);
}
inline ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary* Finding::release_outdated_library() {
  // @@protoc_insertion_point(field_release:google.cloud.websecurityscanner.v1alpha.Finding.outdated_library)
  
  ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary* temp = outdated_library_;
  outdated_library_ = NULL;
  return temp;
}
inline ::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary* Finding::mutable_outdated_library() {
  
  if (outdated_library_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary>(GetArenaNoVirtual());
    outdated_library_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.websecurityscanner.v1alpha.Finding.outdated_library)
  return outdated_library_;
}
inline void Finding::set_allocated_outdated_library(::google::cloud::websecurityscanner::v1alpha::OutdatedLibrary* outdated_library) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(outdated_library_);
  }
  if (outdated_library) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      outdated_library = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, outdated_library, submessage_arena);
    }
    
  } else {
    
  }
  outdated_library_ = outdated_library;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.websecurityscanner.v1alpha.Finding.outdated_library)
}

// .google.cloud.websecurityscanner.v1alpha.ViolatingResource violating_resource = 12;
inline bool Finding::has_violating_resource() const {
  return this != internal_default_instance() && violating_resource_ != NULL;
}
inline const ::google::cloud::websecurityscanner::v1alpha::ViolatingResource& Finding::_internal_violating_resource() const {
  return *violating_resource_;
}
inline const ::google::cloud::websecurityscanner::v1alpha::ViolatingResource& Finding::violating_resource() const {
  const ::google::cloud::websecurityscanner::v1alpha::ViolatingResource* p = violating_resource_;
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.violating_resource)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::websecurityscanner::v1alpha::ViolatingResource*>(
      &::google::cloud::websecurityscanner::v1alpha::_ViolatingResource_default_instance_);
}
inline ::google::cloud::websecurityscanner::v1alpha::ViolatingResource* Finding::release_violating_resource() {
  // @@protoc_insertion_point(field_release:google.cloud.websecurityscanner.v1alpha.Finding.violating_resource)
  
  ::google::cloud::websecurityscanner::v1alpha::ViolatingResource* temp = violating_resource_;
  violating_resource_ = NULL;
  return temp;
}
inline ::google::cloud::websecurityscanner::v1alpha::ViolatingResource* Finding::mutable_violating_resource() {
  
  if (violating_resource_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::websecurityscanner::v1alpha::ViolatingResource>(GetArenaNoVirtual());
    violating_resource_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.websecurityscanner.v1alpha.Finding.violating_resource)
  return violating_resource_;
}
inline void Finding::set_allocated_violating_resource(::google::cloud::websecurityscanner::v1alpha::ViolatingResource* violating_resource) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(violating_resource_);
  }
  if (violating_resource) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      violating_resource = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, violating_resource, submessage_arena);
    }
    
  } else {
    
  }
  violating_resource_ = violating_resource;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.websecurityscanner.v1alpha.Finding.violating_resource)
}

// .google.cloud.websecurityscanner.v1alpha.VulnerableParameters vulnerable_parameters = 13;
inline bool Finding::has_vulnerable_parameters() const {
  return this != internal_default_instance() && vulnerable_parameters_ != NULL;
}
inline const ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters& Finding::_internal_vulnerable_parameters() const {
  return *vulnerable_parameters_;
}
inline const ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters& Finding::vulnerable_parameters() const {
  const ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters* p = vulnerable_parameters_;
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.vulnerable_parameters)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters*>(
      &::google::cloud::websecurityscanner::v1alpha::_VulnerableParameters_default_instance_);
}
inline ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters* Finding::release_vulnerable_parameters() {
  // @@protoc_insertion_point(field_release:google.cloud.websecurityscanner.v1alpha.Finding.vulnerable_parameters)
  
  ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters* temp = vulnerable_parameters_;
  vulnerable_parameters_ = NULL;
  return temp;
}
inline ::google::cloud::websecurityscanner::v1alpha::VulnerableParameters* Finding::mutable_vulnerable_parameters() {
  
  if (vulnerable_parameters_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::websecurityscanner::v1alpha::VulnerableParameters>(GetArenaNoVirtual());
    vulnerable_parameters_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.websecurityscanner.v1alpha.Finding.vulnerable_parameters)
  return vulnerable_parameters_;
}
inline void Finding::set_allocated_vulnerable_parameters(::google::cloud::websecurityscanner::v1alpha::VulnerableParameters* vulnerable_parameters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vulnerable_parameters_);
  }
  if (vulnerable_parameters) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vulnerable_parameters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vulnerable_parameters, submessage_arena);
    }
    
  } else {
    
  }
  vulnerable_parameters_ = vulnerable_parameters;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.websecurityscanner.v1alpha.Finding.vulnerable_parameters)
}

// .google.cloud.websecurityscanner.v1alpha.Xss xss = 14;
inline bool Finding::has_xss() const {
  return this != internal_default_instance() && xss_ != NULL;
}
inline const ::google::cloud::websecurityscanner::v1alpha::Xss& Finding::_internal_xss() const {
  return *xss_;
}
inline const ::google::cloud::websecurityscanner::v1alpha::Xss& Finding::xss() const {
  const ::google::cloud::websecurityscanner::v1alpha::Xss* p = xss_;
  // @@protoc_insertion_point(field_get:google.cloud.websecurityscanner.v1alpha.Finding.xss)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::websecurityscanner::v1alpha::Xss*>(
      &::google::cloud::websecurityscanner::v1alpha::_Xss_default_instance_);
}
inline ::google::cloud::websecurityscanner::v1alpha::Xss* Finding::release_xss() {
  // @@protoc_insertion_point(field_release:google.cloud.websecurityscanner.v1alpha.Finding.xss)
  
  ::google::cloud::websecurityscanner::v1alpha::Xss* temp = xss_;
  xss_ = NULL;
  return temp;
}
inline ::google::cloud::websecurityscanner::v1alpha::Xss* Finding::mutable_xss() {
  
  if (xss_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::websecurityscanner::v1alpha::Xss>(GetArenaNoVirtual());
    xss_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.websecurityscanner.v1alpha.Finding.xss)
  return xss_;
}
inline void Finding::set_allocated_xss(::google::cloud::websecurityscanner::v1alpha::Xss* xss) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(xss_);
  }
  if (xss) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      xss = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, xss, submessage_arena);
    }
    
  } else {
    
  }
  xss_ = xss;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.websecurityscanner.v1alpha.Finding.xss)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha
}  // namespace websecurityscanner
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::websecurityscanner::v1alpha::Finding_FindingType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::websecurityscanner::v1alpha::Finding_FindingType>() {
  return ::google::cloud::websecurityscanner::v1alpha::Finding_FindingType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2fwebsecurityscanner_2fv1alpha_2ffinding_2eproto
