// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/asset/v1beta1/asset_service.proto

#include "google/cloud/asset/v1beta1/asset_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GcsDestination;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OutputConfig;
}  // namespace protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto
namespace protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TimeWindow;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TemporalAsset;
}  // namespace protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace cloud {
namespace asset {
namespace v1beta1 {
class ExportAssetsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExportAssetsRequest>
      _instance;
} _ExportAssetsRequest_default_instance_;
class ExportAssetsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExportAssetsResponse>
      _instance;
} _ExportAssetsResponse_default_instance_;
class BatchGetAssetsHistoryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchGetAssetsHistoryRequest>
      _instance;
} _BatchGetAssetsHistoryRequest_default_instance_;
class BatchGetAssetsHistoryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchGetAssetsHistoryResponse>
      _instance;
} _BatchGetAssetsHistoryResponse_default_instance_;
class OutputConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OutputConfig>
      _instance;
  const ::google::cloud::asset::v1beta1::GcsDestination* gcs_destination_;
} _OutputConfig_default_instance_;
class GcsDestinationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GcsDestination>
      _instance;
} _GcsDestination_default_instance_;
}  // namespace v1beta1
}  // namespace asset
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto {
static void InitDefaultsExportAssetsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::asset::v1beta1::_ExportAssetsRequest_default_instance_;
    new (ptr) ::google::cloud::asset::v1beta1::ExportAssetsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::asset::v1beta1::ExportAssetsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ExportAssetsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExportAssetsRequest}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_OutputConfig.base,}};

static void InitDefaultsExportAssetsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::asset::v1beta1::_ExportAssetsResponse_default_instance_;
    new (ptr) ::google::cloud::asset::v1beta1::ExportAssetsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::asset::v1beta1::ExportAssetsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ExportAssetsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExportAssetsResponse}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_OutputConfig.base,}};

static void InitDefaultsBatchGetAssetsHistoryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::asset::v1beta1::_BatchGetAssetsHistoryRequest_default_instance_;
    new (ptr) ::google::cloud::asset::v1beta1::BatchGetAssetsHistoryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::asset::v1beta1::BatchGetAssetsHistoryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BatchGetAssetsHistoryRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBatchGetAssetsHistoryRequest}, {
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::scc_info_TimeWindow.base,}};

static void InitDefaultsBatchGetAssetsHistoryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::asset::v1beta1::_BatchGetAssetsHistoryResponse_default_instance_;
    new (ptr) ::google::cloud::asset::v1beta1::BatchGetAssetsHistoryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::asset::v1beta1::BatchGetAssetsHistoryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BatchGetAssetsHistoryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBatchGetAssetsHistoryResponse}, {
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::scc_info_TemporalAsset.base,}};

static void InitDefaultsOutputConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::asset::v1beta1::_OutputConfig_default_instance_;
    new (ptr) ::google::cloud::asset::v1beta1::OutputConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::asset::v1beta1::OutputConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OutputConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOutputConfig}, {
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_GcsDestination.base,}};

static void InitDefaultsGcsDestination() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::asset::v1beta1::_GcsDestination_default_instance_;
    new (ptr) ::google::cloud::asset::v1beta1::GcsDestination();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::asset::v1beta1::GcsDestination::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GcsDestination =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGcsDestination}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ExportAssetsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExportAssetsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchGetAssetsHistoryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchGetAssetsHistoryResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OutputConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GcsDestination.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::ExportAssetsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::ExportAssetsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::ExportAssetsRequest, read_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::ExportAssetsRequest, asset_types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::ExportAssetsRequest, content_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::ExportAssetsRequest, output_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::ExportAssetsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::ExportAssetsResponse, read_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::ExportAssetsResponse, output_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::BatchGetAssetsHistoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::BatchGetAssetsHistoryRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::BatchGetAssetsHistoryRequest, asset_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::BatchGetAssetsHistoryRequest, content_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::BatchGetAssetsHistoryRequest, read_time_window_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::BatchGetAssetsHistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::BatchGetAssetsHistoryResponse, assets_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::OutputConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::OutputConfig, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::asset::v1beta1::OutputConfigDefaultTypeInternal, gcs_destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::OutputConfig, destination_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::GcsDestination, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::asset::v1beta1::GcsDestination, uri_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::asset::v1beta1::ExportAssetsRequest)},
  { 10, -1, sizeof(::google::cloud::asset::v1beta1::ExportAssetsResponse)},
  { 17, -1, sizeof(::google::cloud::asset::v1beta1::BatchGetAssetsHistoryRequest)},
  { 26, -1, sizeof(::google::cloud::asset::v1beta1::BatchGetAssetsHistoryResponse)},
  { 32, -1, sizeof(::google::cloud::asset::v1beta1::OutputConfig)},
  { 39, -1, sizeof(::google::cloud::asset::v1beta1::GcsDestination)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::asset::v1beta1::_ExportAssetsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::asset::v1beta1::_ExportAssetsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::asset::v1beta1::_BatchGetAssetsHistoryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::asset::v1beta1::_BatchGetAssetsHistoryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::asset::v1beta1::_OutputConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::asset::v1beta1::_GcsDestination_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/asset/v1beta1/asset_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n.google/cloud/asset/v1beta1/asset_servi"
      "ce.proto\022\032google.cloud.asset.v1beta1\032\034go"
      "ogle/api/annotations.proto\032\'google/cloud"
      "/asset/v1beta1/assets.proto\032#google/long"
      "running/operations.proto\032\037google/protobu"
      "f/timestamp.proto\"\351\001\n\023ExportAssetsReques"
      "t\022\016\n\006parent\030\001 \001(\t\022-\n\tread_time\030\002 \001(\0132\032.g"
      "oogle.protobuf.Timestamp\022\023\n\013asset_types\030"
      "\003 \003(\t\022=\n\014content_type\030\004 \001(\0162\'.google.clo"
      "ud.asset.v1beta1.ContentType\022\?\n\routput_c"
      "onfig\030\005 \001(\0132(.google.cloud.asset.v1beta1"
      ".OutputConfig\"\206\001\n\024ExportAssetsResponse\022-"
      "\n\tread_time\030\001 \001(\0132\032.google.protobuf.Time"
      "stamp\022\?\n\routput_config\030\002 \001(\0132(.google.cl"
      "oud.asset.v1beta1.OutputConfig\"\304\001\n\034Batch"
      "GetAssetsHistoryRequest\022\016\n\006parent\030\001 \001(\t\022"
      "\023\n\013asset_names\030\002 \003(\t\022=\n\014content_type\030\003 \001"
      "(\0162\'.google.cloud.asset.v1beta1.ContentT"
      "ype\022@\n\020read_time_window\030\004 \001(\0132&.google.c"
      "loud.asset.v1beta1.TimeWindow\"Z\n\035BatchGe"
      "tAssetsHistoryResponse\0229\n\006assets\030\001 \003(\0132)"
      ".google.cloud.asset.v1beta1.TemporalAsse"
      "t\"d\n\014OutputConfig\022E\n\017gcs_destination\030\001 \001"
      "(\0132*.google.cloud.asset.v1beta1.GcsDesti"
      "nationH\000B\r\n\013destination\"\035\n\016GcsDestinatio"
      "n\022\013\n\003uri\030\001 \001(\t*I\n\013ContentType\022\034\n\030CONTENT"
      "_TYPE_UNSPECIFIED\020\000\022\014\n\010RESOURCE\020\001\022\016\n\nIAM"
      "_POLICY\020\0022\337\003\n\014AssetService\022\311\001\n\014ExportAss"
      "ets\022/.google.cloud.asset.v1beta1.ExportA"
      "ssetsRequest\032\035.google.longrunning.Operat"
      "ion\"i\202\323\344\223\002c\")/v1beta1/{parent=projects/*"
      "}:exportAssets:\001*Z3\"./v1beta1/{parent=or"
      "ganizations/*}:exportAssets:\001*\022\202\002\n\025Batch"
      "GetAssetsHistory\0228.google.cloud.asset.v1"
      "beta1.BatchGetAssetsHistoryRequest\0329.goo"
      "gle.cloud.asset.v1beta1.BatchGetAssetsHi"
      "storyResponse\"t\202\323\344\223\002n\0222/v1beta1/{parent="
      "projects/*}:batchGetAssetsHistoryZ8\0226/v1"
      "beta1/{parent=organizations/*}:batchGetA"
      "ssetHistoryB\260\001\n\036com.google.cloud.asset.v"
      "1beta1B\021AssetServiceProtoP\001Z\?google.gola"
      "ng.org/genproto/googleapis/cloud/asset/v"
      "1beta1;asset\252\002\032Google.Cloud.Asset.V1Beta"
      "1\312\002\032Google\\Cloud\\Asset\\V1beta1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1758);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/asset/v1beta1/asset_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fassets_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto
namespace google {
namespace cloud {
namespace asset {
namespace v1beta1 {
const ::google::protobuf::EnumDescriptor* ContentType_descriptor() {
  protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::file_level_enum_descriptors[0];
}
bool ContentType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ExportAssetsRequest::InitAsDefaultInstance() {
  ::google::cloud::asset::v1beta1::_ExportAssetsRequest_default_instance_._instance.get_mutable()->read_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::asset::v1beta1::_ExportAssetsRequest_default_instance_._instance.get_mutable()->output_config_ = const_cast< ::google::cloud::asset::v1beta1::OutputConfig*>(
      ::google::cloud::asset::v1beta1::OutputConfig::internal_default_instance());
}
void ExportAssetsRequest::clear_read_time() {
  if (GetArenaNoVirtual() == NULL && read_time_ != NULL) {
    delete read_time_;
  }
  read_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExportAssetsRequest::kParentFieldNumber;
const int ExportAssetsRequest::kReadTimeFieldNumber;
const int ExportAssetsRequest::kAssetTypesFieldNumber;
const int ExportAssetsRequest::kContentTypeFieldNumber;
const int ExportAssetsRequest::kOutputConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExportAssetsRequest::ExportAssetsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_ExportAssetsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.asset.v1beta1.ExportAssetsRequest)
}
ExportAssetsRequest::ExportAssetsRequest(const ExportAssetsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      asset_types_(from.asset_types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_read_time()) {
    read_time_ = new ::google::protobuf::Timestamp(*from.read_time_);
  } else {
    read_time_ = NULL;
  }
  if (from.has_output_config()) {
    output_config_ = new ::google::cloud::asset::v1beta1::OutputConfig(*from.output_config_);
  } else {
    output_config_ = NULL;
  }
  content_type_ = from.content_type_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.asset.v1beta1.ExportAssetsRequest)
}

void ExportAssetsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&read_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&content_type_) -
      reinterpret_cast<char*>(&read_time_)) + sizeof(content_type_));
}

ExportAssetsRequest::~ExportAssetsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.asset.v1beta1.ExportAssetsRequest)
  SharedDtor();
}

void ExportAssetsRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete read_time_;
  if (this != internal_default_instance()) delete output_config_;
}

void ExportAssetsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExportAssetsRequest::descriptor() {
  ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExportAssetsRequest& ExportAssetsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_ExportAssetsRequest.base);
  return *internal_default_instance();
}


void ExportAssetsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.asset.v1beta1.ExportAssetsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  asset_types_.Clear();
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && read_time_ != NULL) {
    delete read_time_;
  }
  read_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_config_ != NULL) {
    delete output_config_;
  }
  output_config_ = NULL;
  content_type_ = 0;
  _internal_metadata_.Clear();
}

bool ExportAssetsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.asset.v1beta1.ExportAssetsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.asset.v1beta1.ExportAssetsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp read_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string asset_types = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_asset_types()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->asset_types(this->asset_types_size() - 1).data(),
            static_cast<int>(this->asset_types(this->asset_types_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.asset.v1beta1.ExportAssetsRequest.asset_types"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.asset.v1beta1.ContentType content_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_content_type(static_cast< ::google::cloud::asset::v1beta1::ContentType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.asset.v1beta1.OutputConfig output_config = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.asset.v1beta1.ExportAssetsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.asset.v1beta1.ExportAssetsRequest)
  return false;
#undef DO_
}

void ExportAssetsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.asset.v1beta1.ExportAssetsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.ExportAssetsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.protobuf.Timestamp read_time = 2;
  if (this->has_read_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_read_time(), output);
  }

  // repeated string asset_types = 3;
  for (int i = 0, n = this->asset_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->asset_types(i).data(), static_cast<int>(this->asset_types(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.ExportAssetsRequest.asset_types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->asset_types(i), output);
  }

  // .google.cloud.asset.v1beta1.ContentType content_type = 4;
  if (this->content_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->content_type(), output);
  }

  // .google.cloud.asset.v1beta1.OutputConfig output_config = 5;
  if (this->has_output_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_output_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.asset.v1beta1.ExportAssetsRequest)
}

::google::protobuf::uint8* ExportAssetsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.asset.v1beta1.ExportAssetsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.ExportAssetsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.protobuf.Timestamp read_time = 2;
  if (this->has_read_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_read_time(), deterministic, target);
  }

  // repeated string asset_types = 3;
  for (int i = 0, n = this->asset_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->asset_types(i).data(), static_cast<int>(this->asset_types(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.ExportAssetsRequest.asset_types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->asset_types(i), target);
  }

  // .google.cloud.asset.v1beta1.ContentType content_type = 4;
  if (this->content_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->content_type(), target);
  }

  // .google.cloud.asset.v1beta1.OutputConfig output_config = 5;
  if (this->has_output_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_output_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.asset.v1beta1.ExportAssetsRequest)
  return target;
}

size_t ExportAssetsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.asset.v1beta1.ExportAssetsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string asset_types = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->asset_types_size());
  for (int i = 0, n = this->asset_types_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->asset_types(i));
  }

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.protobuf.Timestamp read_time = 2;
  if (this->has_read_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *read_time_);
  }

  // .google.cloud.asset.v1beta1.OutputConfig output_config = 5;
  if (this->has_output_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_config_);
  }

  // .google.cloud.asset.v1beta1.ContentType content_type = 4;
  if (this->content_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->content_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExportAssetsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.asset.v1beta1.ExportAssetsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExportAssetsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExportAssetsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.asset.v1beta1.ExportAssetsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.asset.v1beta1.ExportAssetsRequest)
    MergeFrom(*source);
  }
}

void ExportAssetsRequest::MergeFrom(const ExportAssetsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.asset.v1beta1.ExportAssetsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  asset_types_.MergeFrom(from.asset_types_);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_read_time()) {
    mutable_read_time()->::google::protobuf::Timestamp::MergeFrom(from.read_time());
  }
  if (from.has_output_config()) {
    mutable_output_config()->::google::cloud::asset::v1beta1::OutputConfig::MergeFrom(from.output_config());
  }
  if (from.content_type() != 0) {
    set_content_type(from.content_type());
  }
}

void ExportAssetsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.asset.v1beta1.ExportAssetsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportAssetsRequest::CopyFrom(const ExportAssetsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.asset.v1beta1.ExportAssetsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportAssetsRequest::IsInitialized() const {
  return true;
}

void ExportAssetsRequest::Swap(ExportAssetsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExportAssetsRequest::InternalSwap(ExportAssetsRequest* other) {
  using std::swap;
  asset_types_.InternalSwap(CastToBase(&other->asset_types_));
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(read_time_, other->read_time_);
  swap(output_config_, other->output_config_);
  swap(content_type_, other->content_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExportAssetsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExportAssetsResponse::InitAsDefaultInstance() {
  ::google::cloud::asset::v1beta1::_ExportAssetsResponse_default_instance_._instance.get_mutable()->read_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::asset::v1beta1::_ExportAssetsResponse_default_instance_._instance.get_mutable()->output_config_ = const_cast< ::google::cloud::asset::v1beta1::OutputConfig*>(
      ::google::cloud::asset::v1beta1::OutputConfig::internal_default_instance());
}
void ExportAssetsResponse::clear_read_time() {
  if (GetArenaNoVirtual() == NULL && read_time_ != NULL) {
    delete read_time_;
  }
  read_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExportAssetsResponse::kReadTimeFieldNumber;
const int ExportAssetsResponse::kOutputConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExportAssetsResponse::ExportAssetsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_ExportAssetsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.asset.v1beta1.ExportAssetsResponse)
}
ExportAssetsResponse::ExportAssetsResponse(const ExportAssetsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_read_time()) {
    read_time_ = new ::google::protobuf::Timestamp(*from.read_time_);
  } else {
    read_time_ = NULL;
  }
  if (from.has_output_config()) {
    output_config_ = new ::google::cloud::asset::v1beta1::OutputConfig(*from.output_config_);
  } else {
    output_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.asset.v1beta1.ExportAssetsResponse)
}

void ExportAssetsResponse::SharedCtor() {
  ::memset(&read_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_config_) -
      reinterpret_cast<char*>(&read_time_)) + sizeof(output_config_));
}

ExportAssetsResponse::~ExportAssetsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.asset.v1beta1.ExportAssetsResponse)
  SharedDtor();
}

void ExportAssetsResponse::SharedDtor() {
  if (this != internal_default_instance()) delete read_time_;
  if (this != internal_default_instance()) delete output_config_;
}

void ExportAssetsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExportAssetsResponse::descriptor() {
  ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExportAssetsResponse& ExportAssetsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_ExportAssetsResponse.base);
  return *internal_default_instance();
}


void ExportAssetsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.asset.v1beta1.ExportAssetsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && read_time_ != NULL) {
    delete read_time_;
  }
  read_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_config_ != NULL) {
    delete output_config_;
  }
  output_config_ = NULL;
  _internal_metadata_.Clear();
}

bool ExportAssetsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.asset.v1beta1.ExportAssetsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp read_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.asset.v1beta1.OutputConfig output_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.asset.v1beta1.ExportAssetsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.asset.v1beta1.ExportAssetsResponse)
  return false;
#undef DO_
}

void ExportAssetsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.asset.v1beta1.ExportAssetsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp read_time = 1;
  if (this->has_read_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_read_time(), output);
  }

  // .google.cloud.asset.v1beta1.OutputConfig output_config = 2;
  if (this->has_output_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_output_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.asset.v1beta1.ExportAssetsResponse)
}

::google::protobuf::uint8* ExportAssetsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.asset.v1beta1.ExportAssetsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp read_time = 1;
  if (this->has_read_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_read_time(), deterministic, target);
  }

  // .google.cloud.asset.v1beta1.OutputConfig output_config = 2;
  if (this->has_output_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_output_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.asset.v1beta1.ExportAssetsResponse)
  return target;
}

size_t ExportAssetsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.asset.v1beta1.ExportAssetsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Timestamp read_time = 1;
  if (this->has_read_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *read_time_);
  }

  // .google.cloud.asset.v1beta1.OutputConfig output_config = 2;
  if (this->has_output_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExportAssetsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.asset.v1beta1.ExportAssetsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExportAssetsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExportAssetsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.asset.v1beta1.ExportAssetsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.asset.v1beta1.ExportAssetsResponse)
    MergeFrom(*source);
  }
}

void ExportAssetsResponse::MergeFrom(const ExportAssetsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.asset.v1beta1.ExportAssetsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_read_time()) {
    mutable_read_time()->::google::protobuf::Timestamp::MergeFrom(from.read_time());
  }
  if (from.has_output_config()) {
    mutable_output_config()->::google::cloud::asset::v1beta1::OutputConfig::MergeFrom(from.output_config());
  }
}

void ExportAssetsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.asset.v1beta1.ExportAssetsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportAssetsResponse::CopyFrom(const ExportAssetsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.asset.v1beta1.ExportAssetsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportAssetsResponse::IsInitialized() const {
  return true;
}

void ExportAssetsResponse::Swap(ExportAssetsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExportAssetsResponse::InternalSwap(ExportAssetsResponse* other) {
  using std::swap;
  swap(read_time_, other->read_time_);
  swap(output_config_, other->output_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExportAssetsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchGetAssetsHistoryRequest::InitAsDefaultInstance() {
  ::google::cloud::asset::v1beta1::_BatchGetAssetsHistoryRequest_default_instance_._instance.get_mutable()->read_time_window_ = const_cast< ::google::cloud::asset::v1beta1::TimeWindow*>(
      ::google::cloud::asset::v1beta1::TimeWindow::internal_default_instance());
}
void BatchGetAssetsHistoryRequest::clear_read_time_window() {
  if (GetArenaNoVirtual() == NULL && read_time_window_ != NULL) {
    delete read_time_window_;
  }
  read_time_window_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchGetAssetsHistoryRequest::kParentFieldNumber;
const int BatchGetAssetsHistoryRequest::kAssetNamesFieldNumber;
const int BatchGetAssetsHistoryRequest::kContentTypeFieldNumber;
const int BatchGetAssetsHistoryRequest::kReadTimeWindowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchGetAssetsHistoryRequest::BatchGetAssetsHistoryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_BatchGetAssetsHistoryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
}
BatchGetAssetsHistoryRequest::BatchGetAssetsHistoryRequest(const BatchGetAssetsHistoryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      asset_names_(from.asset_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_read_time_window()) {
    read_time_window_ = new ::google::cloud::asset::v1beta1::TimeWindow(*from.read_time_window_);
  } else {
    read_time_window_ = NULL;
  }
  content_type_ = from.content_type_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
}

void BatchGetAssetsHistoryRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&read_time_window_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&content_type_) -
      reinterpret_cast<char*>(&read_time_window_)) + sizeof(content_type_));
}

BatchGetAssetsHistoryRequest::~BatchGetAssetsHistoryRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
  SharedDtor();
}

void BatchGetAssetsHistoryRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete read_time_window_;
}

void BatchGetAssetsHistoryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BatchGetAssetsHistoryRequest::descriptor() {
  ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchGetAssetsHistoryRequest& BatchGetAssetsHistoryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_BatchGetAssetsHistoryRequest.base);
  return *internal_default_instance();
}


void BatchGetAssetsHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  asset_names_.Clear();
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && read_time_window_ != NULL) {
    delete read_time_window_;
  }
  read_time_window_ = NULL;
  content_type_ = 0;
  _internal_metadata_.Clear();
}

bool BatchGetAssetsHistoryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string asset_names = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_asset_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->asset_names(this->asset_names_size() - 1).data(),
            static_cast<int>(this->asset_names(this->asset_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest.asset_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.asset.v1beta1.ContentType content_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_content_type(static_cast< ::google::cloud::asset::v1beta1::ContentType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.asset.v1beta1.TimeWindow read_time_window = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read_time_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
  return false;
#undef DO_
}

void BatchGetAssetsHistoryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // repeated string asset_names = 2;
  for (int i = 0, n = this->asset_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->asset_names(i).data(), static_cast<int>(this->asset_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest.asset_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->asset_names(i), output);
  }

  // .google.cloud.asset.v1beta1.ContentType content_type = 3;
  if (this->content_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->content_type(), output);
  }

  // .google.cloud.asset.v1beta1.TimeWindow read_time_window = 4;
  if (this->has_read_time_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_read_time_window(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
}

::google::protobuf::uint8* BatchGetAssetsHistoryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // repeated string asset_names = 2;
  for (int i = 0, n = this->asset_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->asset_names(i).data(), static_cast<int>(this->asset_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest.asset_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->asset_names(i), target);
  }

  // .google.cloud.asset.v1beta1.ContentType content_type = 3;
  if (this->content_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->content_type(), target);
  }

  // .google.cloud.asset.v1beta1.TimeWindow read_time_window = 4;
  if (this->has_read_time_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_read_time_window(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
  return target;
}

size_t BatchGetAssetsHistoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string asset_names = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->asset_names_size());
  for (int i = 0, n = this->asset_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->asset_names(i));
  }

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.cloud.asset.v1beta1.TimeWindow read_time_window = 4;
  if (this->has_read_time_window()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *read_time_window_);
  }

  // .google.cloud.asset.v1beta1.ContentType content_type = 3;
  if (this->content_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->content_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchGetAssetsHistoryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchGetAssetsHistoryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchGetAssetsHistoryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
    MergeFrom(*source);
  }
}

void BatchGetAssetsHistoryRequest::MergeFrom(const BatchGetAssetsHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  asset_names_.MergeFrom(from.asset_names_);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_read_time_window()) {
    mutable_read_time_window()->::google::cloud::asset::v1beta1::TimeWindow::MergeFrom(from.read_time_window());
  }
  if (from.content_type() != 0) {
    set_content_type(from.content_type());
  }
}

void BatchGetAssetsHistoryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchGetAssetsHistoryRequest::CopyFrom(const BatchGetAssetsHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchGetAssetsHistoryRequest::IsInitialized() const {
  return true;
}

void BatchGetAssetsHistoryRequest::Swap(BatchGetAssetsHistoryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchGetAssetsHistoryRequest::InternalSwap(BatchGetAssetsHistoryRequest* other) {
  using std::swap;
  asset_names_.InternalSwap(CastToBase(&other->asset_names_));
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(read_time_window_, other->read_time_window_);
  swap(content_type_, other->content_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BatchGetAssetsHistoryRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchGetAssetsHistoryResponse::InitAsDefaultInstance() {
}
void BatchGetAssetsHistoryResponse::clear_assets() {
  assets_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchGetAssetsHistoryResponse::kAssetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchGetAssetsHistoryResponse::BatchGetAssetsHistoryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_BatchGetAssetsHistoryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
}
BatchGetAssetsHistoryResponse::BatchGetAssetsHistoryResponse(const BatchGetAssetsHistoryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      assets_(from.assets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
}

void BatchGetAssetsHistoryResponse::SharedCtor() {
}

BatchGetAssetsHistoryResponse::~BatchGetAssetsHistoryResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
  SharedDtor();
}

void BatchGetAssetsHistoryResponse::SharedDtor() {
}

void BatchGetAssetsHistoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BatchGetAssetsHistoryResponse::descriptor() {
  ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchGetAssetsHistoryResponse& BatchGetAssetsHistoryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_BatchGetAssetsHistoryResponse.base);
  return *internal_default_instance();
}


void BatchGetAssetsHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  assets_.Clear();
  _internal_metadata_.Clear();
}

bool BatchGetAssetsHistoryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.asset.v1beta1.TemporalAsset assets = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_assets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
  return false;
#undef DO_
}

void BatchGetAssetsHistoryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.asset.v1beta1.TemporalAsset assets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->assets(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
}

::google::protobuf::uint8* BatchGetAssetsHistoryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.asset.v1beta1.TemporalAsset assets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->assets(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
  return target;
}

size_t BatchGetAssetsHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.asset.v1beta1.TemporalAsset assets = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->assets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->assets(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchGetAssetsHistoryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchGetAssetsHistoryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchGetAssetsHistoryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
    MergeFrom(*source);
  }
}

void BatchGetAssetsHistoryResponse::MergeFrom(const BatchGetAssetsHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  assets_.MergeFrom(from.assets_);
}

void BatchGetAssetsHistoryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchGetAssetsHistoryResponse::CopyFrom(const BatchGetAssetsHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.asset.v1beta1.BatchGetAssetsHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchGetAssetsHistoryResponse::IsInitialized() const {
  return true;
}

void BatchGetAssetsHistoryResponse::Swap(BatchGetAssetsHistoryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchGetAssetsHistoryResponse::InternalSwap(BatchGetAssetsHistoryResponse* other) {
  using std::swap;
  CastToBase(&assets_)->InternalSwap(CastToBase(&other->assets_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BatchGetAssetsHistoryResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OutputConfig::InitAsDefaultInstance() {
  ::google::cloud::asset::v1beta1::_OutputConfig_default_instance_.gcs_destination_ = const_cast< ::google::cloud::asset::v1beta1::GcsDestination*>(
      ::google::cloud::asset::v1beta1::GcsDestination::internal_default_instance());
}
void OutputConfig::set_allocated_gcs_destination(::google::cloud::asset::v1beta1::GcsDestination* gcs_destination) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_destination();
  if (gcs_destination) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gcs_destination = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gcs_destination, submessage_arena);
    }
    set_has_gcs_destination();
    destination_.gcs_destination_ = gcs_destination;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.asset.v1beta1.OutputConfig.gcs_destination)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OutputConfig::kGcsDestinationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OutputConfig::OutputConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_OutputConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.asset.v1beta1.OutputConfig)
}
OutputConfig::OutputConfig(const OutputConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_destination();
  switch (from.destination_case()) {
    case kGcsDestination: {
      mutable_gcs_destination()->::google::cloud::asset::v1beta1::GcsDestination::MergeFrom(from.gcs_destination());
      break;
    }
    case DESTINATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.asset.v1beta1.OutputConfig)
}

void OutputConfig::SharedCtor() {
  clear_has_destination();
}

OutputConfig::~OutputConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.asset.v1beta1.OutputConfig)
  SharedDtor();
}

void OutputConfig::SharedDtor() {
  if (has_destination()) {
    clear_destination();
  }
}

void OutputConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OutputConfig::descriptor() {
  ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OutputConfig& OutputConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_OutputConfig.base);
  return *internal_default_instance();
}


void OutputConfig::clear_destination() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.asset.v1beta1.OutputConfig)
  switch (destination_case()) {
    case kGcsDestination: {
      delete destination_.gcs_destination_;
      break;
    }
    case DESTINATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DESTINATION_NOT_SET;
}


void OutputConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.asset.v1beta1.OutputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_destination();
  _internal_metadata_.Clear();
}

bool OutputConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.asset.v1beta1.OutputConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.asset.v1beta1.GcsDestination gcs_destination = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gcs_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.asset.v1beta1.OutputConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.asset.v1beta1.OutputConfig)
  return false;
#undef DO_
}

void OutputConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.asset.v1beta1.OutputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.asset.v1beta1.GcsDestination gcs_destination = 1;
  if (has_gcs_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_gcs_destination(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.asset.v1beta1.OutputConfig)
}

::google::protobuf::uint8* OutputConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.asset.v1beta1.OutputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.asset.v1beta1.GcsDestination gcs_destination = 1;
  if (has_gcs_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_gcs_destination(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.asset.v1beta1.OutputConfig)
  return target;
}

size_t OutputConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.asset.v1beta1.OutputConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (destination_case()) {
    // .google.cloud.asset.v1beta1.GcsDestination gcs_destination = 1;
    case kGcsDestination: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *destination_.gcs_destination_);
      break;
    }
    case DESTINATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutputConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.asset.v1beta1.OutputConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const OutputConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OutputConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.asset.v1beta1.OutputConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.asset.v1beta1.OutputConfig)
    MergeFrom(*source);
  }
}

void OutputConfig::MergeFrom(const OutputConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.asset.v1beta1.OutputConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.destination_case()) {
    case kGcsDestination: {
      mutable_gcs_destination()->::google::cloud::asset::v1beta1::GcsDestination::MergeFrom(from.gcs_destination());
      break;
    }
    case DESTINATION_NOT_SET: {
      break;
    }
  }
}

void OutputConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.asset.v1beta1.OutputConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputConfig::CopyFrom(const OutputConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.asset.v1beta1.OutputConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputConfig::IsInitialized() const {
  return true;
}

void OutputConfig::Swap(OutputConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OutputConfig::InternalSwap(OutputConfig* other) {
  using std::swap;
  swap(destination_, other->destination_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OutputConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GcsDestination::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GcsDestination::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GcsDestination::GcsDestination()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_GcsDestination.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.asset.v1beta1.GcsDestination)
}
GcsDestination::GcsDestination(const GcsDestination& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.asset.v1beta1.GcsDestination)
}

void GcsDestination::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GcsDestination::~GcsDestination() {
  // @@protoc_insertion_point(destructor:google.cloud.asset.v1beta1.GcsDestination)
  SharedDtor();
}

void GcsDestination::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GcsDestination::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GcsDestination::descriptor() {
  ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GcsDestination& GcsDestination::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::scc_info_GcsDestination.base);
  return *internal_default_instance();
}


void GcsDestination::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.asset.v1beta1.GcsDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GcsDestination::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.asset.v1beta1.GcsDestination)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.asset.v1beta1.GcsDestination.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.asset.v1beta1.GcsDestination)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.asset.v1beta1.GcsDestination)
  return false;
#undef DO_
}

void GcsDestination::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.asset.v1beta1.GcsDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.GcsDestination.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.asset.v1beta1.GcsDestination)
}

::google::protobuf::uint8* GcsDestination::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.asset.v1beta1.GcsDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.asset.v1beta1.GcsDestination.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.asset.v1beta1.GcsDestination)
  return target;
}

size_t GcsDestination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.asset.v1beta1.GcsDestination)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GcsDestination::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.asset.v1beta1.GcsDestination)
  GOOGLE_DCHECK_NE(&from, this);
  const GcsDestination* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GcsDestination>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.asset.v1beta1.GcsDestination)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.asset.v1beta1.GcsDestination)
    MergeFrom(*source);
  }
}

void GcsDestination::MergeFrom(const GcsDestination& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.asset.v1beta1.GcsDestination)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
}

void GcsDestination::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.asset.v1beta1.GcsDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GcsDestination::CopyFrom(const GcsDestination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.asset.v1beta1.GcsDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GcsDestination::IsInitialized() const {
  return true;
}

void GcsDestination::Swap(GcsDestination* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GcsDestination::InternalSwap(GcsDestination* other) {
  using std::swap;
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GcsDestination::GetMetadata() const {
  protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fasset_2fv1beta1_2fasset_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace asset
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::asset::v1beta1::ExportAssetsRequest* Arena::CreateMaybeMessage< ::google::cloud::asset::v1beta1::ExportAssetsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::asset::v1beta1::ExportAssetsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::asset::v1beta1::ExportAssetsResponse* Arena::CreateMaybeMessage< ::google::cloud::asset::v1beta1::ExportAssetsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::asset::v1beta1::ExportAssetsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::asset::v1beta1::BatchGetAssetsHistoryRequest* Arena::CreateMaybeMessage< ::google::cloud::asset::v1beta1::BatchGetAssetsHistoryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::asset::v1beta1::BatchGetAssetsHistoryRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::asset::v1beta1::BatchGetAssetsHistoryResponse* Arena::CreateMaybeMessage< ::google::cloud::asset::v1beta1::BatchGetAssetsHistoryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::asset::v1beta1::BatchGetAssetsHistoryResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::asset::v1beta1::OutputConfig* Arena::CreateMaybeMessage< ::google::cloud::asset::v1beta1::OutputConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::asset::v1beta1::OutputConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::asset::v1beta1::GcsDestination* Arena::CreateMaybeMessage< ::google::cloud::asset::v1beta1::GcsDestination >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::asset::v1beta1::GcsDestination >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
