// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/audio_config.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto 

namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {
class OutputAudioConfig;
class OutputAudioConfigDefaultTypeInternal;
extern OutputAudioConfigDefaultTypeInternal _OutputAudioConfig_default_instance_;
class SynthesizeSpeechConfig;
class SynthesizeSpeechConfigDefaultTypeInternal;
extern SynthesizeSpeechConfigDefaultTypeInternal _SynthesizeSpeechConfig_default_instance_;
class VoiceSelectionParams;
class VoiceSelectionParamsDefaultTypeInternal;
extern VoiceSelectionParamsDefaultTypeInternal _VoiceSelectionParams_default_instance_;
}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::dialogflow::v2beta1::OutputAudioConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::OutputAudioConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig>(Arena*);
template<> ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* Arena::CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::VoiceSelectionParams>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

enum SsmlVoiceGender {
  SSML_VOICE_GENDER_UNSPECIFIED = 0,
  SSML_VOICE_GENDER_MALE = 1,
  SSML_VOICE_GENDER_FEMALE = 2,
  SSML_VOICE_GENDER_NEUTRAL = 3,
  SsmlVoiceGender_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SsmlVoiceGender_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SsmlVoiceGender_IsValid(int value);
const SsmlVoiceGender SsmlVoiceGender_MIN = SSML_VOICE_GENDER_UNSPECIFIED;
const SsmlVoiceGender SsmlVoiceGender_MAX = SSML_VOICE_GENDER_NEUTRAL;
const int SsmlVoiceGender_ARRAYSIZE = SsmlVoiceGender_MAX + 1;

const ::google::protobuf::EnumDescriptor* SsmlVoiceGender_descriptor();
inline const ::std::string& SsmlVoiceGender_Name(SsmlVoiceGender value) {
  return ::google::protobuf::internal::NameOfEnum(
    SsmlVoiceGender_descriptor(), value);
}
inline bool SsmlVoiceGender_Parse(
    const ::std::string& name, SsmlVoiceGender* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SsmlVoiceGender>(
    SsmlVoiceGender_descriptor(), name, value);
}
enum OutputAudioEncoding {
  OUTPUT_AUDIO_ENCODING_UNSPECIFIED = 0,
  OUTPUT_AUDIO_ENCODING_LINEAR_16 = 1,
  OUTPUT_AUDIO_ENCODING_MP3 = 2,
  OUTPUT_AUDIO_ENCODING_OGG_OPUS = 3,
  OutputAudioEncoding_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OutputAudioEncoding_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OutputAudioEncoding_IsValid(int value);
const OutputAudioEncoding OutputAudioEncoding_MIN = OUTPUT_AUDIO_ENCODING_UNSPECIFIED;
const OutputAudioEncoding OutputAudioEncoding_MAX = OUTPUT_AUDIO_ENCODING_OGG_OPUS;
const int OutputAudioEncoding_ARRAYSIZE = OutputAudioEncoding_MAX + 1;

const ::google::protobuf::EnumDescriptor* OutputAudioEncoding_descriptor();
inline const ::std::string& OutputAudioEncoding_Name(OutputAudioEncoding value) {
  return ::google::protobuf::internal::NameOfEnum(
    OutputAudioEncoding_descriptor(), value);
}
inline bool OutputAudioEncoding_Parse(
    const ::std::string& name, OutputAudioEncoding* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OutputAudioEncoding>(
    OutputAudioEncoding_descriptor(), name, value);
}
// ===================================================================

class VoiceSelectionParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.VoiceSelectionParams) */ {
 public:
  VoiceSelectionParams();
  virtual ~VoiceSelectionParams();

  VoiceSelectionParams(const VoiceSelectionParams& from);

  inline VoiceSelectionParams& operator=(const VoiceSelectionParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VoiceSelectionParams(VoiceSelectionParams&& from) noexcept
    : VoiceSelectionParams() {
    *this = ::std::move(from);
  }

  inline VoiceSelectionParams& operator=(VoiceSelectionParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const VoiceSelectionParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VoiceSelectionParams* internal_default_instance() {
    return reinterpret_cast<const VoiceSelectionParams*>(
               &_VoiceSelectionParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(VoiceSelectionParams* other);
  void Swap(VoiceSelectionParams* other);
  friend void swap(VoiceSelectionParams& a, VoiceSelectionParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VoiceSelectionParams* New() const final {
    return CreateMaybeMessage<VoiceSelectionParams>(NULL);
  }

  VoiceSelectionParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VoiceSelectionParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VoiceSelectionParams& from);
  void MergeFrom(const VoiceSelectionParams& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoiceSelectionParams* other);
  protected:
  explicit VoiceSelectionParams(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // .google.cloud.dialogflow.v2beta1.SsmlVoiceGender ssml_gender = 2;
  void clear_ssml_gender();
  static const int kSsmlGenderFieldNumber = 2;
  ::google::cloud::dialogflow::v2beta1::SsmlVoiceGender ssml_gender() const;
  void set_ssml_gender(::google::cloud::dialogflow::v2beta1::SsmlVoiceGender value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.VoiceSelectionParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int ssml_gender_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SynthesizeSpeechConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig) */ {
 public:
  SynthesizeSpeechConfig();
  virtual ~SynthesizeSpeechConfig();

  SynthesizeSpeechConfig(const SynthesizeSpeechConfig& from);

  inline SynthesizeSpeechConfig& operator=(const SynthesizeSpeechConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SynthesizeSpeechConfig(SynthesizeSpeechConfig&& from) noexcept
    : SynthesizeSpeechConfig() {
    *this = ::std::move(from);
  }

  inline SynthesizeSpeechConfig& operator=(SynthesizeSpeechConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SynthesizeSpeechConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SynthesizeSpeechConfig* internal_default_instance() {
    return reinterpret_cast<const SynthesizeSpeechConfig*>(
               &_SynthesizeSpeechConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(SynthesizeSpeechConfig* other);
  void Swap(SynthesizeSpeechConfig* other);
  friend void swap(SynthesizeSpeechConfig& a, SynthesizeSpeechConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SynthesizeSpeechConfig* New() const final {
    return CreateMaybeMessage<SynthesizeSpeechConfig>(NULL);
  }

  SynthesizeSpeechConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SynthesizeSpeechConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SynthesizeSpeechConfig& from);
  void MergeFrom(const SynthesizeSpeechConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SynthesizeSpeechConfig* other);
  protected:
  explicit SynthesizeSpeechConfig(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string effects_profile_id = 5;
  int effects_profile_id_size() const;
  void clear_effects_profile_id();
  static const int kEffectsProfileIdFieldNumber = 5;
  const ::std::string& effects_profile_id(int index) const;
  ::std::string* mutable_effects_profile_id(int index);
  void set_effects_profile_id(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_effects_profile_id(int index, ::std::string&& value);
  #endif
  void set_effects_profile_id(int index, const char* value);
  void set_effects_profile_id(int index, const char* value, size_t size);
  ::std::string* add_effects_profile_id();
  void add_effects_profile_id(const ::std::string& value);
  #if LANG_CXX11
  void add_effects_profile_id(::std::string&& value);
  #endif
  void add_effects_profile_id(const char* value);
  void add_effects_profile_id(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& effects_profile_id() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_effects_profile_id();

  // .google.cloud.dialogflow.v2beta1.VoiceSelectionParams voice = 4;
  bool has_voice() const;
  void clear_voice();
  static const int kVoiceFieldNumber = 4;
  private:
  const ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams& _internal_voice() const;
  public:
  const ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams& voice() const;
  ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* release_voice();
  ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* mutable_voice();
  void set_allocated_voice(::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* voice);
  void unsafe_arena_set_allocated_voice(
      ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* voice);
  ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* unsafe_arena_release_voice();

  // double speaking_rate = 1;
  void clear_speaking_rate();
  static const int kSpeakingRateFieldNumber = 1;
  double speaking_rate() const;
  void set_speaking_rate(double value);

  // double pitch = 2;
  void clear_pitch();
  static const int kPitchFieldNumber = 2;
  double pitch() const;
  void set_pitch(double value);

  // double volume_gain_db = 3;
  void clear_volume_gain_db();
  static const int kVolumeGainDbFieldNumber = 3;
  double volume_gain_db() const;
  void set_volume_gain_db(double value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> effects_profile_id_;
  ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* voice_;
  double speaking_rate_;
  double pitch_;
  double volume_gain_db_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OutputAudioConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dialogflow.v2beta1.OutputAudioConfig) */ {
 public:
  OutputAudioConfig();
  virtual ~OutputAudioConfig();

  OutputAudioConfig(const OutputAudioConfig& from);

  inline OutputAudioConfig& operator=(const OutputAudioConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OutputAudioConfig(OutputAudioConfig&& from) noexcept
    : OutputAudioConfig() {
    *this = ::std::move(from);
  }

  inline OutputAudioConfig& operator=(OutputAudioConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const OutputAudioConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OutputAudioConfig* internal_default_instance() {
    return reinterpret_cast<const OutputAudioConfig*>(
               &_OutputAudioConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(OutputAudioConfig* other);
  void Swap(OutputAudioConfig* other);
  friend void swap(OutputAudioConfig& a, OutputAudioConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OutputAudioConfig* New() const final {
    return CreateMaybeMessage<OutputAudioConfig>(NULL);
  }

  OutputAudioConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OutputAudioConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OutputAudioConfig& from);
  void MergeFrom(const OutputAudioConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OutputAudioConfig* other);
  protected:
  explicit OutputAudioConfig(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig synthesize_speech_config = 3;
  bool has_synthesize_speech_config() const;
  void clear_synthesize_speech_config();
  static const int kSynthesizeSpeechConfigFieldNumber = 3;
  private:
  const ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig& _internal_synthesize_speech_config() const;
  public:
  const ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig& synthesize_speech_config() const;
  ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* release_synthesize_speech_config();
  ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* mutable_synthesize_speech_config();
  void set_allocated_synthesize_speech_config(::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* synthesize_speech_config);
  void unsafe_arena_set_allocated_synthesize_speech_config(
      ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* synthesize_speech_config);
  ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* unsafe_arena_release_synthesize_speech_config();

  // .google.cloud.dialogflow.v2beta1.OutputAudioEncoding audio_encoding = 1;
  void clear_audio_encoding();
  static const int kAudioEncodingFieldNumber = 1;
  ::google::cloud::dialogflow::v2beta1::OutputAudioEncoding audio_encoding() const;
  void set_audio_encoding(::google::cloud::dialogflow::v2beta1::OutputAudioEncoding value);

  // int32 sample_rate_hertz = 2;
  void clear_sample_rate_hertz();
  static const int kSampleRateHertzFieldNumber = 2;
  ::google::protobuf::int32 sample_rate_hertz() const;
  void set_sample_rate_hertz(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2beta1.OutputAudioConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* synthesize_speech_config_;
  int audio_encoding_;
  ::google::protobuf::int32 sample_rate_hertz_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VoiceSelectionParams

// string name = 1;
inline void VoiceSelectionParams::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VoiceSelectionParams::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.VoiceSelectionParams.name)
  return name_.Get();
}
inline void VoiceSelectionParams::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.VoiceSelectionParams.name)
}
#if LANG_CXX11
inline void VoiceSelectionParams::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dialogflow.v2beta1.VoiceSelectionParams.name)
}
#endif
inline void VoiceSelectionParams::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.VoiceSelectionParams.name)
}
inline void VoiceSelectionParams::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.VoiceSelectionParams.name)
}
inline ::std::string* VoiceSelectionParams::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.VoiceSelectionParams.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VoiceSelectionParams::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.VoiceSelectionParams.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void VoiceSelectionParams::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.VoiceSelectionParams.name)
}
inline ::std::string* VoiceSelectionParams::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.VoiceSelectionParams.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VoiceSelectionParams::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.dialogflow.v2beta1.VoiceSelectionParams.name)
}

// .google.cloud.dialogflow.v2beta1.SsmlVoiceGender ssml_gender = 2;
inline void VoiceSelectionParams::clear_ssml_gender() {
  ssml_gender_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::SsmlVoiceGender VoiceSelectionParams::ssml_gender() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.VoiceSelectionParams.ssml_gender)
  return static_cast< ::google::cloud::dialogflow::v2beta1::SsmlVoiceGender >(ssml_gender_);
}
inline void VoiceSelectionParams::set_ssml_gender(::google::cloud::dialogflow::v2beta1::SsmlVoiceGender value) {
  
  ssml_gender_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.VoiceSelectionParams.ssml_gender)
}

// -------------------------------------------------------------------

// SynthesizeSpeechConfig

// double speaking_rate = 1;
inline void SynthesizeSpeechConfig::clear_speaking_rate() {
  speaking_rate_ = 0;
}
inline double SynthesizeSpeechConfig::speaking_rate() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.speaking_rate)
  return speaking_rate_;
}
inline void SynthesizeSpeechConfig::set_speaking_rate(double value) {
  
  speaking_rate_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.speaking_rate)
}

// double pitch = 2;
inline void SynthesizeSpeechConfig::clear_pitch() {
  pitch_ = 0;
}
inline double SynthesizeSpeechConfig::pitch() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.pitch)
  return pitch_;
}
inline void SynthesizeSpeechConfig::set_pitch(double value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.pitch)
}

// double volume_gain_db = 3;
inline void SynthesizeSpeechConfig::clear_volume_gain_db() {
  volume_gain_db_ = 0;
}
inline double SynthesizeSpeechConfig::volume_gain_db() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.volume_gain_db)
  return volume_gain_db_;
}
inline void SynthesizeSpeechConfig::set_volume_gain_db(double value) {
  
  volume_gain_db_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.volume_gain_db)
}

// repeated string effects_profile_id = 5;
inline int SynthesizeSpeechConfig::effects_profile_id_size() const {
  return effects_profile_id_.size();
}
inline void SynthesizeSpeechConfig::clear_effects_profile_id() {
  effects_profile_id_.Clear();
}
inline const ::std::string& SynthesizeSpeechConfig::effects_profile_id(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id)
  return effects_profile_id_.Get(index);
}
inline ::std::string* SynthesizeSpeechConfig::mutable_effects_profile_id(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id)
  return effects_profile_id_.Mutable(index);
}
inline void SynthesizeSpeechConfig::set_effects_profile_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id)
  effects_profile_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SynthesizeSpeechConfig::set_effects_profile_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id)
  effects_profile_id_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SynthesizeSpeechConfig::set_effects_profile_id(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  effects_profile_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id)
}
inline void SynthesizeSpeechConfig::set_effects_profile_id(int index, const char* value, size_t size) {
  effects_profile_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id)
}
inline ::std::string* SynthesizeSpeechConfig::add_effects_profile_id() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id)
  return effects_profile_id_.Add();
}
inline void SynthesizeSpeechConfig::add_effects_profile_id(const ::std::string& value) {
  effects_profile_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id)
}
#if LANG_CXX11
inline void SynthesizeSpeechConfig::add_effects_profile_id(::std::string&& value) {
  effects_profile_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id)
}
#endif
inline void SynthesizeSpeechConfig::add_effects_profile_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  effects_profile_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id)
}
inline void SynthesizeSpeechConfig::add_effects_profile_id(const char* value, size_t size) {
  effects_profile_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SynthesizeSpeechConfig::effects_profile_id() const {
  // @@protoc_insertion_point(field_list:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id)
  return effects_profile_id_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SynthesizeSpeechConfig::mutable_effects_profile_id() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.effects_profile_id)
  return &effects_profile_id_;
}

// .google.cloud.dialogflow.v2beta1.VoiceSelectionParams voice = 4;
inline bool SynthesizeSpeechConfig::has_voice() const {
  return this != internal_default_instance() && voice_ != NULL;
}
inline void SynthesizeSpeechConfig::clear_voice() {
  if (GetArenaNoVirtual() == NULL && voice_ != NULL) {
    delete voice_;
  }
  voice_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams& SynthesizeSpeechConfig::_internal_voice() const {
  return *voice_;
}
inline const ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams& SynthesizeSpeechConfig::voice() const {
  const ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* p = voice_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.voice)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams*>(
      &::google::cloud::dialogflow::v2beta1::_VoiceSelectionParams_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* SynthesizeSpeechConfig::release_voice() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.voice)
  
  ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* temp = voice_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  voice_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* SynthesizeSpeechConfig::unsafe_arena_release_voice() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.voice)
  
  ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* temp = voice_;
  voice_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* SynthesizeSpeechConfig::mutable_voice() {
  
  if (voice_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::VoiceSelectionParams>(GetArenaNoVirtual());
    voice_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.voice)
  return voice_;
}
inline void SynthesizeSpeechConfig::set_allocated_voice(::google::cloud::dialogflow::v2beta1::VoiceSelectionParams* voice) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete voice_;
  }
  if (voice) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(voice);
    if (message_arena != submessage_arena) {
      voice = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, voice, submessage_arena);
    }
    
  } else {
    
  }
  voice_ = voice;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig.voice)
}

// -------------------------------------------------------------------

// OutputAudioConfig

// .google.cloud.dialogflow.v2beta1.OutputAudioEncoding audio_encoding = 1;
inline void OutputAudioConfig::clear_audio_encoding() {
  audio_encoding_ = 0;
}
inline ::google::cloud::dialogflow::v2beta1::OutputAudioEncoding OutputAudioConfig::audio_encoding() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.OutputAudioConfig.audio_encoding)
  return static_cast< ::google::cloud::dialogflow::v2beta1::OutputAudioEncoding >(audio_encoding_);
}
inline void OutputAudioConfig::set_audio_encoding(::google::cloud::dialogflow::v2beta1::OutputAudioEncoding value) {
  
  audio_encoding_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.OutputAudioConfig.audio_encoding)
}

// int32 sample_rate_hertz = 2;
inline void OutputAudioConfig::clear_sample_rate_hertz() {
  sample_rate_hertz_ = 0;
}
inline ::google::protobuf::int32 OutputAudioConfig::sample_rate_hertz() const {
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.OutputAudioConfig.sample_rate_hertz)
  return sample_rate_hertz_;
}
inline void OutputAudioConfig::set_sample_rate_hertz(::google::protobuf::int32 value) {
  
  sample_rate_hertz_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dialogflow.v2beta1.OutputAudioConfig.sample_rate_hertz)
}

// .google.cloud.dialogflow.v2beta1.SynthesizeSpeechConfig synthesize_speech_config = 3;
inline bool OutputAudioConfig::has_synthesize_speech_config() const {
  return this != internal_default_instance() && synthesize_speech_config_ != NULL;
}
inline void OutputAudioConfig::clear_synthesize_speech_config() {
  if (GetArenaNoVirtual() == NULL && synthesize_speech_config_ != NULL) {
    delete synthesize_speech_config_;
  }
  synthesize_speech_config_ = NULL;
}
inline const ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig& OutputAudioConfig::_internal_synthesize_speech_config() const {
  return *synthesize_speech_config_;
}
inline const ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig& OutputAudioConfig::synthesize_speech_config() const {
  const ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* p = synthesize_speech_config_;
  // @@protoc_insertion_point(field_get:google.cloud.dialogflow.v2beta1.OutputAudioConfig.synthesize_speech_config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig*>(
      &::google::cloud::dialogflow::v2beta1::_SynthesizeSpeechConfig_default_instance_);
}
inline ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* OutputAudioConfig::release_synthesize_speech_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dialogflow.v2beta1.OutputAudioConfig.synthesize_speech_config)
  
  ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* temp = synthesize_speech_config_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  synthesize_speech_config_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* OutputAudioConfig::unsafe_arena_release_synthesize_speech_config() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.dialogflow.v2beta1.OutputAudioConfig.synthesize_speech_config)
  
  ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* temp = synthesize_speech_config_;
  synthesize_speech_config_ = NULL;
  return temp;
}
inline ::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* OutputAudioConfig::mutable_synthesize_speech_config() {
  
  if (synthesize_speech_config_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig>(GetArenaNoVirtual());
    synthesize_speech_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dialogflow.v2beta1.OutputAudioConfig.synthesize_speech_config)
  return synthesize_speech_config_;
}
inline void OutputAudioConfig::set_allocated_synthesize_speech_config(::google::cloud::dialogflow::v2beta1::SynthesizeSpeechConfig* synthesize_speech_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete synthesize_speech_config_;
  }
  if (synthesize_speech_config) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(synthesize_speech_config);
    if (message_arena != submessage_arena) {
      synthesize_speech_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, synthesize_speech_config, submessage_arena);
    }
    
  } else {
    
  }
  synthesize_speech_config_ = synthesize_speech_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dialogflow.v2beta1.OutputAudioConfig.synthesize_speech_config)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2beta1
}  // namespace dialogflow
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::dialogflow::v2beta1::SsmlVoiceGender> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2beta1::SsmlVoiceGender>() {
  return ::google::cloud::dialogflow::v2beta1::SsmlVoiceGender_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::dialogflow::v2beta1::OutputAudioEncoding> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dialogflow::v2beta1::OutputAudioEncoding>() {
  return ::google::cloud::dialogflow::v2beta1::OutputAudioEncoding_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2fdialogflow_2fv2beta1_2faudio_5fconfig_2eproto
