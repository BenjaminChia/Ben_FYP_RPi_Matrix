// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/dialogflow/v2beta1/document.proto

#include "google/cloud/dialogflow/v2beta1/document.pb.h"
#include "google/cloud/dialogflow/v2beta1/document.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace cloud {
namespace dialogflow {
namespace v2beta1 {

static const char* Documents_method_names[] = {
  "/google.cloud.dialogflow.v2beta1.Documents/ListDocuments",
  "/google.cloud.dialogflow.v2beta1.Documents/GetDocument",
  "/google.cloud.dialogflow.v2beta1.Documents/CreateDocument",
  "/google.cloud.dialogflow.v2beta1.Documents/DeleteDocument",
};

std::unique_ptr< Documents::Stub> Documents::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< Documents::Stub> stub(new Documents::Stub(channel));
  return stub;
}

Documents::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_ListDocuments_(Documents_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetDocument_(Documents_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateDocument_(Documents_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteDocument_(Documents_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status Documents::Stub::ListDocuments(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest& request, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListDocuments_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>* Documents::Stub::AsyncListDocumentsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>::Create(channel_.get(), cq, rpcmethod_ListDocuments_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>* Documents::Stub::PrepareAsyncListDocumentsRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>::Create(channel_.get(), cq, rpcmethod_ListDocuments_, context, request, false);
}

::grpc::Status Documents::Stub::GetDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest& request, ::google::cloud::dialogflow::v2beta1::Document* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetDocument_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Document>* Documents::Stub::AsyncGetDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::Document>::Create(channel_.get(), cq, rpcmethod_GetDocument_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dialogflow::v2beta1::Document>* Documents::Stub::PrepareAsyncGetDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dialogflow::v2beta1::Document>::Create(channel_.get(), cq, rpcmethod_GetDocument_, context, request, false);
}

::grpc::Status Documents::Stub::CreateDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateDocument_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* Documents::Stub::AsyncCreateDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateDocument_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* Documents::Stub::PrepareAsyncCreateDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateDocument_, context, request, false);
}

::grpc::Status Documents::Stub::DeleteDocument(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteDocument_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* Documents::Stub::AsyncDeleteDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_DeleteDocument_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* Documents::Stub::PrepareAsyncDeleteDocumentRaw(::grpc::ClientContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_DeleteDocument_, context, request, false);
}

Documents::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Documents_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Documents::Service, ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse>(
          std::mem_fn(&Documents::Service::ListDocuments), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Documents_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Documents::Service, ::google::cloud::dialogflow::v2beta1::GetDocumentRequest, ::google::cloud::dialogflow::v2beta1::Document>(
          std::mem_fn(&Documents::Service::GetDocument), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Documents_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Documents::Service, ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest, ::google::longrunning::Operation>(
          std::mem_fn(&Documents::Service::CreateDocument), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Documents_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Documents::Service, ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest, ::google::longrunning::Operation>(
          std::mem_fn(&Documents::Service::DeleteDocument), this)));
}

Documents::Service::~Service() {
}

::grpc::Status Documents::Service::ListDocuments(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::ListDocumentsRequest* request, ::google::cloud::dialogflow::v2beta1::ListDocumentsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Documents::Service::GetDocument(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::GetDocumentRequest* request, ::google::cloud::dialogflow::v2beta1::Document* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Documents::Service::CreateDocument(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::CreateDocumentRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Documents::Service::DeleteDocument(::grpc::ServerContext* context, const ::google::cloud::dialogflow::v2beta1::DeleteDocumentRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace cloud
}  // namespace dialogflow
}  // namespace v2beta1

