// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vision/v1/image_annotator.proto

#include "google/cloud/vision/v1/image_annotator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Position;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BoundingPoly;
}  // namespace protobuf_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto
namespace protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CropHintsParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Feature;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GcsDestination;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GcsSource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ImageAnnotationContext;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ImageSource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Property;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SafeSearchAnnotation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WebDetectionParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<10> scc_info_AnnotateImageResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AsyncAnnotateFileResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ColorInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CropHint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CropHintsAnnotation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DominantColorsAnnotation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FaceAnnotation_Landmark;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Image;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ImageProperties;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InputConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LatLongRect;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LocalizedObjectAnnotation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LocationInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OutputConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_FaceAnnotation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_AnnotateImageRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_EntityAnnotation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ImageContext;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_AsyncAnnotateFileRequest;
}  // namespace protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto
namespace protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TextAnnotation;
}  // namespace protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto
namespace protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_WebDetection;
}  // namespace protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_google_2frpc_2fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2frpc_2fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Status;
}  // namespace protobuf_google_2frpc_2fstatus_2eproto
namespace protobuf_google_2ftype_2fcolor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2ftype_2fcolor_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Color;
}  // namespace protobuf_google_2ftype_2fcolor_2eproto
namespace protobuf_google_2ftype_2flatlng_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2ftype_2flatlng_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LatLng;
}  // namespace protobuf_google_2ftype_2flatlng_2eproto
namespace google {
namespace cloud {
namespace vision {
namespace v1 {
class FeatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Feature>
      _instance;
} _Feature_default_instance_;
class ImageSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageSource>
      _instance;
} _ImageSource_default_instance_;
class ImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Image>
      _instance;
} _Image_default_instance_;
class FaceAnnotation_LandmarkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaceAnnotation_Landmark>
      _instance;
} _FaceAnnotation_Landmark_default_instance_;
class FaceAnnotationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaceAnnotation>
      _instance;
} _FaceAnnotation_default_instance_;
class LocationInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocationInfo>
      _instance;
} _LocationInfo_default_instance_;
class PropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Property>
      _instance;
} _Property_default_instance_;
class EntityAnnotationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntityAnnotation>
      _instance;
} _EntityAnnotation_default_instance_;
class LocalizedObjectAnnotationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalizedObjectAnnotation>
      _instance;
} _LocalizedObjectAnnotation_default_instance_;
class SafeSearchAnnotationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SafeSearchAnnotation>
      _instance;
} _SafeSearchAnnotation_default_instance_;
class LatLongRectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LatLongRect>
      _instance;
} _LatLongRect_default_instance_;
class ColorInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ColorInfo>
      _instance;
} _ColorInfo_default_instance_;
class DominantColorsAnnotationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DominantColorsAnnotation>
      _instance;
} _DominantColorsAnnotation_default_instance_;
class ImagePropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageProperties>
      _instance;
} _ImageProperties_default_instance_;
class CropHintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CropHint>
      _instance;
} _CropHint_default_instance_;
class CropHintsAnnotationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CropHintsAnnotation>
      _instance;
} _CropHintsAnnotation_default_instance_;
class CropHintsParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CropHintsParams>
      _instance;
} _CropHintsParams_default_instance_;
class WebDetectionParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WebDetectionParams>
      _instance;
} _WebDetectionParams_default_instance_;
class ImageContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageContext>
      _instance;
} _ImageContext_default_instance_;
class AnnotateImageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnnotateImageRequest>
      _instance;
} _AnnotateImageRequest_default_instance_;
class ImageAnnotationContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageAnnotationContext>
      _instance;
} _ImageAnnotationContext_default_instance_;
class AnnotateImageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnnotateImageResponse>
      _instance;
} _AnnotateImageResponse_default_instance_;
class AnnotateFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnnotateFileResponse>
      _instance;
} _AnnotateFileResponse_default_instance_;
class BatchAnnotateImagesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchAnnotateImagesRequest>
      _instance;
} _BatchAnnotateImagesRequest_default_instance_;
class BatchAnnotateImagesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchAnnotateImagesResponse>
      _instance;
} _BatchAnnotateImagesResponse_default_instance_;
class AsyncAnnotateFileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AsyncAnnotateFileRequest>
      _instance;
} _AsyncAnnotateFileRequest_default_instance_;
class AsyncAnnotateFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AsyncAnnotateFileResponse>
      _instance;
} _AsyncAnnotateFileResponse_default_instance_;
class AsyncBatchAnnotateFilesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AsyncBatchAnnotateFilesRequest>
      _instance;
} _AsyncBatchAnnotateFilesRequest_default_instance_;
class AsyncBatchAnnotateFilesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AsyncBatchAnnotateFilesResponse>
      _instance;
} _AsyncBatchAnnotateFilesResponse_default_instance_;
class InputConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputConfig>
      _instance;
} _InputConfig_default_instance_;
class OutputConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OutputConfig>
      _instance;
} _OutputConfig_default_instance_;
class GcsSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GcsSource>
      _instance;
} _GcsSource_default_instance_;
class GcsDestinationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GcsDestination>
      _instance;
} _GcsDestination_default_instance_;
class OperationMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationMetadata>
      _instance;
} _OperationMetadata_default_instance_;
}  // namespace v1
}  // namespace vision
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto {
static void InitDefaultsFeature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_Feature_default_instance_;
    new (ptr) ::google::cloud::vision::v1::Feature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::Feature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Feature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFeature}, {}};

static void InitDefaultsImageSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_ImageSource_default_instance_;
    new (ptr) ::google::cloud::vision::v1::ImageSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::ImageSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImageSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImageSource}, {}};

static void InitDefaultsImage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_Image_default_instance_;
    new (ptr) ::google::cloud::vision::v1::Image();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::Image::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Image =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImage}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageSource.base,}};

static void InitDefaultsFaceAnnotation_Landmark() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_FaceAnnotation_Landmark_default_instance_;
    new (ptr) ::google::cloud::vision::v1::FaceAnnotation_Landmark();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::FaceAnnotation_Landmark::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FaceAnnotation_Landmark =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFaceAnnotation_Landmark}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto::scc_info_Position.base,}};

static void InitDefaultsFaceAnnotation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_FaceAnnotation_default_instance_;
    new (ptr) ::google::cloud::vision::v1::FaceAnnotation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::FaceAnnotation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_FaceAnnotation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFaceAnnotation}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto::scc_info_BoundingPoly.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_FaceAnnotation_Landmark.base,}};

static void InitDefaultsLocationInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_LocationInfo_default_instance_;
    new (ptr) ::google::cloud::vision::v1::LocationInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::LocationInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LocationInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLocationInfo}, {
      &protobuf_google_2ftype_2flatlng_2eproto::scc_info_LatLng.base,}};

static void InitDefaultsProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_Property_default_instance_;
    new (ptr) ::google::cloud::vision::v1::Property();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::Property::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Property =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProperty}, {}};

static void InitDefaultsEntityAnnotation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_EntityAnnotation_default_instance_;
    new (ptr) ::google::cloud::vision::v1::EntityAnnotation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::EntityAnnotation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_EntityAnnotation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsEntityAnnotation}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto::scc_info_BoundingPoly.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_LocationInfo.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_Property.base,}};

static void InitDefaultsLocalizedObjectAnnotation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_LocalizedObjectAnnotation_default_instance_;
    new (ptr) ::google::cloud::vision::v1::LocalizedObjectAnnotation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::LocalizedObjectAnnotation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LocalizedObjectAnnotation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLocalizedObjectAnnotation}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto::scc_info_BoundingPoly.base,}};

static void InitDefaultsSafeSearchAnnotation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_SafeSearchAnnotation_default_instance_;
    new (ptr) ::google::cloud::vision::v1::SafeSearchAnnotation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::SafeSearchAnnotation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SafeSearchAnnotation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSafeSearchAnnotation}, {}};

static void InitDefaultsLatLongRect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_LatLongRect_default_instance_;
    new (ptr) ::google::cloud::vision::v1::LatLongRect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::LatLongRect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LatLongRect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLatLongRect}, {
      &protobuf_google_2ftype_2flatlng_2eproto::scc_info_LatLng.base,}};

static void InitDefaultsColorInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_ColorInfo_default_instance_;
    new (ptr) ::google::cloud::vision::v1::ColorInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::ColorInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ColorInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsColorInfo}, {
      &protobuf_google_2ftype_2fcolor_2eproto::scc_info_Color.base,}};

static void InitDefaultsDominantColorsAnnotation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_DominantColorsAnnotation_default_instance_;
    new (ptr) ::google::cloud::vision::v1::DominantColorsAnnotation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::DominantColorsAnnotation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DominantColorsAnnotation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDominantColorsAnnotation}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ColorInfo.base,}};

static void InitDefaultsImageProperties() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_ImageProperties_default_instance_;
    new (ptr) ::google::cloud::vision::v1::ImageProperties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::ImageProperties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImageProperties =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImageProperties}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_DominantColorsAnnotation.base,}};

static void InitDefaultsCropHint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_CropHint_default_instance_;
    new (ptr) ::google::cloud::vision::v1::CropHint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::CropHint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CropHint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCropHint}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto::scc_info_BoundingPoly.base,}};

static void InitDefaultsCropHintsAnnotation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_CropHintsAnnotation_default_instance_;
    new (ptr) ::google::cloud::vision::v1::CropHintsAnnotation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::CropHintsAnnotation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CropHintsAnnotation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCropHintsAnnotation}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_CropHint.base,}};

static void InitDefaultsCropHintsParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_CropHintsParams_default_instance_;
    new (ptr) ::google::cloud::vision::v1::CropHintsParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::CropHintsParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CropHintsParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCropHintsParams}, {}};

static void InitDefaultsWebDetectionParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_WebDetectionParams_default_instance_;
    new (ptr) ::google::cloud::vision::v1::WebDetectionParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::WebDetectionParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WebDetectionParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWebDetectionParams}, {}};

static void InitDefaultsImageContext() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_ImageContext_default_instance_;
    new (ptr) ::google::cloud::vision::v1::ImageContext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::ImageContext::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ImageContext =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsImageContext}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_LatLongRect.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_CropHintsParams.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_WebDetectionParams.base,}};

static void InitDefaultsAnnotateImageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_AnnotateImageRequest_default_instance_;
    new (ptr) ::google::cloud::vision::v1::AnnotateImageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::AnnotateImageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AnnotateImageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAnnotateImageRequest}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_Image.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_Feature.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageContext.base,}};

static void InitDefaultsImageAnnotationContext() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_ImageAnnotationContext_default_instance_;
    new (ptr) ::google::cloud::vision::v1::ImageAnnotationContext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::ImageAnnotationContext::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImageAnnotationContext =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImageAnnotationContext}, {}};

static void InitDefaultsAnnotateImageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_AnnotateImageResponse_default_instance_;
    new (ptr) ::google::cloud::vision::v1::AnnotateImageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::AnnotateImageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<10> scc_info_AnnotateImageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 10, InitDefaultsAnnotateImageResponse}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_FaceAnnotation.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_EntityAnnotation.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_LocalizedObjectAnnotation.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::scc_info_TextAnnotation.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_SafeSearchAnnotation.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageProperties.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_CropHintsAnnotation.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::scc_info_WebDetection.base,
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageAnnotationContext.base,}};

static void InitDefaultsAnnotateFileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_AnnotateFileResponse_default_instance_;
    new (ptr) ::google::cloud::vision::v1::AnnotateFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::AnnotateFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AnnotateFileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAnnotateFileResponse}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_InputConfig.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AnnotateImageResponse.base,}};

static void InitDefaultsBatchAnnotateImagesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_BatchAnnotateImagesRequest_default_instance_;
    new (ptr) ::google::cloud::vision::v1::BatchAnnotateImagesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::BatchAnnotateImagesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BatchAnnotateImagesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBatchAnnotateImagesRequest}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AnnotateImageRequest.base,}};

static void InitDefaultsBatchAnnotateImagesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_BatchAnnotateImagesResponse_default_instance_;
    new (ptr) ::google::cloud::vision::v1::BatchAnnotateImagesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::BatchAnnotateImagesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BatchAnnotateImagesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBatchAnnotateImagesResponse}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AnnotateImageResponse.base,}};

static void InitDefaultsAsyncAnnotateFileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_AsyncAnnotateFileRequest_default_instance_;
    new (ptr) ::google::cloud::vision::v1::AsyncAnnotateFileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::AsyncAnnotateFileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_AsyncAnnotateFileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsAsyncAnnotateFileRequest}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_InputConfig.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_Feature.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageContext.base,
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_OutputConfig.base,}};

static void InitDefaultsAsyncAnnotateFileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_AsyncAnnotateFileResponse_default_instance_;
    new (ptr) ::google::cloud::vision::v1::AsyncAnnotateFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::AsyncAnnotateFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AsyncAnnotateFileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAsyncAnnotateFileResponse}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_OutputConfig.base,}};

static void InitDefaultsAsyncBatchAnnotateFilesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_AsyncBatchAnnotateFilesRequest_default_instance_;
    new (ptr) ::google::cloud::vision::v1::AsyncBatchAnnotateFilesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::AsyncBatchAnnotateFilesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AsyncBatchAnnotateFilesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAsyncBatchAnnotateFilesRequest}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncAnnotateFileRequest.base,}};

static void InitDefaultsAsyncBatchAnnotateFilesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_AsyncBatchAnnotateFilesResponse_default_instance_;
    new (ptr) ::google::cloud::vision::v1::AsyncBatchAnnotateFilesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::AsyncBatchAnnotateFilesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AsyncBatchAnnotateFilesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAsyncBatchAnnotateFilesResponse}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncAnnotateFileResponse.base,}};

static void InitDefaultsInputConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_InputConfig_default_instance_;
    new (ptr) ::google::cloud::vision::v1::InputConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::InputConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InputConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInputConfig}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_GcsSource.base,}};

static void InitDefaultsOutputConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_OutputConfig_default_instance_;
    new (ptr) ::google::cloud::vision::v1::OutputConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::OutputConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OutputConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOutputConfig}, {
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_GcsDestination.base,}};

static void InitDefaultsGcsSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_GcsSource_default_instance_;
    new (ptr) ::google::cloud::vision::v1::GcsSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::GcsSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GcsSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGcsSource}, {}};

static void InitDefaultsGcsDestination() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_GcsDestination_default_instance_;
    new (ptr) ::google::cloud::vision::v1::GcsDestination();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::GcsDestination::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GcsDestination =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGcsDestination}, {}};

static void InitDefaultsOperationMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::vision::v1::_OperationMetadata_default_instance_;
    new (ptr) ::google::cloud::vision::v1::OperationMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::vision::v1::OperationMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OperationMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOperationMetadata}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Feature.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Image.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FaceAnnotation_Landmark.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FaceAnnotation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocationInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Property.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntityAnnotation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocalizedObjectAnnotation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SafeSearchAnnotation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LatLongRect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ColorInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DominantColorsAnnotation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageProperties.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CropHint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CropHintsAnnotation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CropHintsParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WebDetectionParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageContext.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnnotateImageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageAnnotationContext.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnnotateImageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnnotateFileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchAnnotateImagesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchAnnotateImagesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AsyncAnnotateFileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AsyncAnnotateFileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AsyncBatchAnnotateFilesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AsyncBatchAnnotateFilesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OutputConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GcsSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GcsDestination.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationMetadata.base);
}

::google::protobuf::Metadata file_level_metadata[34];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::Feature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::Feature, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::Feature, max_results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::Feature, model_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ImageSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ImageSource, gcs_image_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ImageSource, image_uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::Image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::Image, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::Image, source_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation_Landmark, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation_Landmark, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation_Landmark, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, bounding_poly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, fd_bounding_poly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, landmarks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, roll_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, pan_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, tilt_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, detection_confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, landmarking_confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, joy_likelihood_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, sorrow_likelihood_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, anger_likelihood_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, surprise_likelihood_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, under_exposed_likelihood_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, blurred_likelihood_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::FaceAnnotation, headwear_likelihood_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::LocationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::LocationInfo, lat_lng_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::Property, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::Property, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::Property, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::Property, uint64_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::EntityAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::EntityAnnotation, mid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::EntityAnnotation, locale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::EntityAnnotation, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::EntityAnnotation, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::EntityAnnotation, confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::EntityAnnotation, topicality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::EntityAnnotation, bounding_poly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::EntityAnnotation, locations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::EntityAnnotation, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::LocalizedObjectAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::LocalizedObjectAnnotation, mid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::LocalizedObjectAnnotation, language_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::LocalizedObjectAnnotation, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::LocalizedObjectAnnotation, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::LocalizedObjectAnnotation, bounding_poly_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::SafeSearchAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::SafeSearchAnnotation, adult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::SafeSearchAnnotation, spoof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::SafeSearchAnnotation, medical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::SafeSearchAnnotation, violence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::SafeSearchAnnotation, racy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::LatLongRect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::LatLongRect, min_lat_lng_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::LatLongRect, max_lat_lng_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ColorInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ColorInfo, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ColorInfo, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ColorInfo, pixel_fraction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::DominantColorsAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::DominantColorsAnnotation, colors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ImageProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ImageProperties, dominant_colors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::CropHint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::CropHint, bounding_poly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::CropHint, confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::CropHint, importance_fraction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::CropHintsAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::CropHintsAnnotation, crop_hints_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::CropHintsParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::CropHintsParams, aspect_ratios_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetectionParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::WebDetectionParams, include_geo_results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ImageContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ImageContext, lat_long_rect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ImageContext, language_hints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ImageContext, crop_hints_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ImageContext, web_detection_params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageRequest, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageRequest, features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageRequest, image_context_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ImageAnnotationContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ImageAnnotationContext, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::ImageAnnotationContext, page_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, face_annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, landmark_annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, logo_annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, label_annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, localized_object_annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, text_annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, full_text_annotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, safe_search_annotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, image_properties_annotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, crop_hints_annotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, web_detection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateImageResponse, context_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateFileResponse, input_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AnnotateFileResponse, responses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::BatchAnnotateImagesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::BatchAnnotateImagesRequest, requests_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::BatchAnnotateImagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::BatchAnnotateImagesResponse, responses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AsyncAnnotateFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AsyncAnnotateFileRequest, input_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AsyncAnnotateFileRequest, features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AsyncAnnotateFileRequest, image_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AsyncAnnotateFileRequest, output_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AsyncAnnotateFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AsyncAnnotateFileResponse, output_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AsyncBatchAnnotateFilesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AsyncBatchAnnotateFilesRequest, requests_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AsyncBatchAnnotateFilesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::AsyncBatchAnnotateFilesResponse, responses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::InputConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::InputConfig, gcs_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::InputConfig, mime_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::OutputConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::OutputConfig, gcs_destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::OutputConfig, batch_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::GcsSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::GcsSource, uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::GcsDestination, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::GcsDestination, uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::OperationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::OperationMetadata, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::OperationMetadata, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::vision::v1::OperationMetadata, update_time_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::vision::v1::Feature)},
  { 8, -1, sizeof(::google::cloud::vision::v1::ImageSource)},
  { 15, -1, sizeof(::google::cloud::vision::v1::Image)},
  { 22, -1, sizeof(::google::cloud::vision::v1::FaceAnnotation_Landmark)},
  { 29, -1, sizeof(::google::cloud::vision::v1::FaceAnnotation)},
  { 49, -1, sizeof(::google::cloud::vision::v1::LocationInfo)},
  { 55, -1, sizeof(::google::cloud::vision::v1::Property)},
  { 63, -1, sizeof(::google::cloud::vision::v1::EntityAnnotation)},
  { 77, -1, sizeof(::google::cloud::vision::v1::LocalizedObjectAnnotation)},
  { 87, -1, sizeof(::google::cloud::vision::v1::SafeSearchAnnotation)},
  { 97, -1, sizeof(::google::cloud::vision::v1::LatLongRect)},
  { 104, -1, sizeof(::google::cloud::vision::v1::ColorInfo)},
  { 112, -1, sizeof(::google::cloud::vision::v1::DominantColorsAnnotation)},
  { 118, -1, sizeof(::google::cloud::vision::v1::ImageProperties)},
  { 124, -1, sizeof(::google::cloud::vision::v1::CropHint)},
  { 132, -1, sizeof(::google::cloud::vision::v1::CropHintsAnnotation)},
  { 138, -1, sizeof(::google::cloud::vision::v1::CropHintsParams)},
  { 144, -1, sizeof(::google::cloud::vision::v1::WebDetectionParams)},
  { 150, -1, sizeof(::google::cloud::vision::v1::ImageContext)},
  { 159, -1, sizeof(::google::cloud::vision::v1::AnnotateImageRequest)},
  { 167, -1, sizeof(::google::cloud::vision::v1::ImageAnnotationContext)},
  { 174, -1, sizeof(::google::cloud::vision::v1::AnnotateImageResponse)},
  { 192, -1, sizeof(::google::cloud::vision::v1::AnnotateFileResponse)},
  { 199, -1, sizeof(::google::cloud::vision::v1::BatchAnnotateImagesRequest)},
  { 205, -1, sizeof(::google::cloud::vision::v1::BatchAnnotateImagesResponse)},
  { 211, -1, sizeof(::google::cloud::vision::v1::AsyncAnnotateFileRequest)},
  { 220, -1, sizeof(::google::cloud::vision::v1::AsyncAnnotateFileResponse)},
  { 226, -1, sizeof(::google::cloud::vision::v1::AsyncBatchAnnotateFilesRequest)},
  { 232, -1, sizeof(::google::cloud::vision::v1::AsyncBatchAnnotateFilesResponse)},
  { 238, -1, sizeof(::google::cloud::vision::v1::InputConfig)},
  { 245, -1, sizeof(::google::cloud::vision::v1::OutputConfig)},
  { 252, -1, sizeof(::google::cloud::vision::v1::GcsSource)},
  { 258, -1, sizeof(::google::cloud::vision::v1::GcsDestination)},
  { 264, -1, sizeof(::google::cloud::vision::v1::OperationMetadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_Feature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_ImageSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_Image_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_FaceAnnotation_Landmark_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_FaceAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_LocationInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_Property_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_EntityAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_LocalizedObjectAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_SafeSearchAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_LatLongRect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_ColorInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_DominantColorsAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_ImageProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_CropHint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_CropHintsAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_CropHintsParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_WebDetectionParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_ImageContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_AnnotateImageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_ImageAnnotationContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_AnnotateImageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_AnnotateFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_BatchAnnotateImagesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_BatchAnnotateImagesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_AsyncAnnotateFileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_AsyncAnnotateFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_AsyncBatchAnnotateFilesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_AsyncBatchAnnotateFilesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_InputConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_OutputConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_GcsSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_GcsDestination_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::vision::v1::_OperationMetadata_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/vision/v1/image_annotator.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 34);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n,google/cloud/vision/v1/image_annotator"
      ".proto\022\026google.cloud.vision.v1\032\034google/a"
      "pi/annotations.proto\032%google/cloud/visio"
      "n/v1/geometry.proto\032,google/cloud/vision"
      "/v1/text_annotation.proto\032*google/cloud/"
      "vision/v1/web_detection.proto\032#google/lo"
      "ngrunning/operations.proto\032\037google/proto"
      "buf/timestamp.proto\032\027google/rpc/status.p"
      "roto\032\027google/type/color.proto\032\030google/ty"
      "pe/latlng.proto\"\363\002\n\007Feature\0222\n\004type\030\001 \001("
      "\0162$.google.cloud.vision.v1.Feature.Type\022"
      "\023\n\013max_results\030\002 \001(\005\022\r\n\005model\030\003 \001(\t\"\217\002\n\004"
      "Type\022\024\n\020TYPE_UNSPECIFIED\020\000\022\022\n\016FACE_DETEC"
      "TION\020\001\022\026\n\022LANDMARK_DETECTION\020\002\022\022\n\016LOGO_D"
      "ETECTION\020\003\022\023\n\017LABEL_DETECTION\020\004\022\022\n\016TEXT_"
      "DETECTION\020\005\022\033\n\027DOCUMENT_TEXT_DETECTION\020\013"
      "\022\031\n\025SAFE_SEARCH_DETECTION\020\006\022\024\n\020IMAGE_PRO"
      "PERTIES\020\007\022\016\n\nCROP_HINTS\020\t\022\021\n\rWEB_DETECTI"
      "ON\020\n\022\027\n\023OBJECT_LOCALIZATION\020\023\"7\n\013ImageSo"
      "urce\022\025\n\rgcs_image_uri\030\001 \001(\t\022\021\n\timage_uri"
      "\030\002 \001(\t\"M\n\005Image\022\017\n\007content\030\001 \001(\014\0223\n\006sour"
      "ce\030\002 \001(\0132#.google.cloud.vision.v1.ImageS"
      "ource\"\307\r\n\016FaceAnnotation\022;\n\rbounding_pol"
      "y\030\001 \001(\0132$.google.cloud.vision.v1.Boundin"
      "gPoly\022>\n\020fd_bounding_poly\030\002 \001(\0132$.google"
      ".cloud.vision.v1.BoundingPoly\022B\n\tlandmar"
      "ks\030\003 \003(\0132/.google.cloud.vision.v1.FaceAn"
      "notation.Landmark\022\022\n\nroll_angle\030\004 \001(\002\022\021\n"
      "\tpan_angle\030\005 \001(\002\022\022\n\ntilt_angle\030\006 \001(\002\022\034\n\024"
      "detection_confidence\030\007 \001(\002\022\036\n\026landmarkin"
      "g_confidence\030\010 \001(\002\022:\n\016joy_likelihood\030\t \001"
      "(\0162\".google.cloud.vision.v1.Likelihood\022="
      "\n\021sorrow_likelihood\030\n \001(\0162\".google.cloud"
      ".vision.v1.Likelihood\022<\n\020anger_likelihoo"
      "d\030\013 \001(\0162\".google.cloud.vision.v1.Likelih"
      "ood\022\?\n\023surprise_likelihood\030\014 \001(\0162\".googl"
      "e.cloud.vision.v1.Likelihood\022D\n\030under_ex"
      "posed_likelihood\030\r \001(\0162\".google.cloud.vi"
      "sion.v1.Likelihood\022>\n\022blurred_likelihood"
      "\030\016 \001(\0162\".google.cloud.vision.v1.Likeliho"
      "od\022\?\n\023headwear_likelihood\030\017 \001(\0162\".google"
      ".cloud.vision.v1.Likelihood\032\271\007\n\010Landmark"
      "\022B\n\004type\030\003 \001(\01624.google.cloud.vision.v1."
      "FaceAnnotation.Landmark.Type\0222\n\010position"
      "\030\004 \001(\0132 .google.cloud.vision.v1.Position"
      "\"\264\006\n\004Type\022\024\n\020UNKNOWN_LANDMARK\020\000\022\014\n\010LEFT_"
      "EYE\020\001\022\r\n\tRIGHT_EYE\020\002\022\030\n\024LEFT_OF_LEFT_EYE"
      "BROW\020\003\022\031\n\025RIGHT_OF_LEFT_EYEBROW\020\004\022\031\n\025LEF"
      "T_OF_RIGHT_EYEBROW\020\005\022\032\n\026RIGHT_OF_RIGHT_E"
      "YEBROW\020\006\022\031\n\025MIDPOINT_BETWEEN_EYES\020\007\022\014\n\010N"
      "OSE_TIP\020\010\022\r\n\tUPPER_LIP\020\t\022\r\n\tLOWER_LIP\020\n\022"
      "\016\n\nMOUTH_LEFT\020\013\022\017\n\013MOUTH_RIGHT\020\014\022\020\n\014MOUT"
      "H_CENTER\020\r\022\025\n\021NOSE_BOTTOM_RIGHT\020\016\022\024\n\020NOS"
      "E_BOTTOM_LEFT\020\017\022\026\n\022NOSE_BOTTOM_CENTER\020\020\022"
      "\031\n\025LEFT_EYE_TOP_BOUNDARY\020\021\022\031\n\025LEFT_EYE_R"
      "IGHT_CORNER\020\022\022\034\n\030LEFT_EYE_BOTTOM_BOUNDAR"
      "Y\020\023\022\030\n\024LEFT_EYE_LEFT_CORNER\020\024\022\032\n\026RIGHT_E"
      "YE_TOP_BOUNDARY\020\025\022\032\n\026RIGHT_EYE_RIGHT_COR"
      "NER\020\026\022\035\n\031RIGHT_EYE_BOTTOM_BOUNDARY\020\027\022\031\n\025"
      "RIGHT_EYE_LEFT_CORNER\020\030\022\037\n\033LEFT_EYEBROW_"
      "UPPER_MIDPOINT\020\031\022 \n\034RIGHT_EYEBROW_UPPER_"
      "MIDPOINT\020\032\022\024\n\020LEFT_EAR_TRAGION\020\033\022\025\n\021RIGH"
      "T_EAR_TRAGION\020\034\022\022\n\016LEFT_EYE_PUPIL\020\035\022\023\n\017R"
      "IGHT_EYE_PUPIL\020\036\022\025\n\021FOREHEAD_GLABELLA\020\037\022"
      "\021\n\rCHIN_GNATHION\020 \022\024\n\020CHIN_LEFT_GONION\020!"
      "\022\025\n\021CHIN_RIGHT_GONION\020\"\"4\n\014LocationInfo\022"
      "$\n\007lat_lng\030\001 \001(\0132\023.google.type.LatLng\"=\n"
      "\010Property\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022\024"
      "\n\014uint64_value\030\003 \001(\004\"\247\002\n\020EntityAnnotatio"
      "n\022\013\n\003mid\030\001 \001(\t\022\016\n\006locale\030\002 \001(\t\022\023\n\013descri"
      "ption\030\003 \001(\t\022\r\n\005score\030\004 \001(\002\022\022\n\nconfidence"
      "\030\005 \001(\002\022\022\n\ntopicality\030\006 \001(\002\022;\n\rbounding_p"
      "oly\030\007 \001(\0132$.google.cloud.vision.v1.Bound"
      "ingPoly\0227\n\tlocations\030\010 \003(\0132$.google.clou"
      "d.vision.v1.LocationInfo\0224\n\nproperties\030\t"
      " \003(\0132 .google.cloud.vision.v1.Property\"\231"
      "\001\n\031LocalizedObjectAnnotation\022\013\n\003mid\030\001 \001("
      "\t\022\025\n\rlanguage_code\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\r"
      "\n\005score\030\004 \001(\002\022;\n\rbounding_poly\030\005 \001(\0132$.g"
      "oogle.cloud.vision.v1.BoundingPoly\"\231\002\n\024S"
      "afeSearchAnnotation\0221\n\005adult\030\001 \001(\0162\".goo"
      "gle.cloud.vision.v1.Likelihood\0221\n\005spoof\030"
      "\002 \001(\0162\".google.cloud.vision.v1.Likelihoo"
      "d\0223\n\007medical\030\003 \001(\0162\".google.cloud.vision"
      ".v1.Likelihood\0224\n\010violence\030\004 \001(\0162\".googl"
      "e.cloud.vision.v1.Likelihood\0220\n\004racy\030\t \001"
      "(\0162\".google.cloud.vision.v1.Likelihood\"a"
      "\n\013LatLongRect\022(\n\013min_lat_lng\030\001 \001(\0132\023.goo"
      "gle.type.LatLng\022(\n\013max_lat_lng\030\002 \001(\0132\023.g"
      "oogle.type.LatLng\"U\n\tColorInfo\022!\n\005color\030"
      "\001 \001(\0132\022.google.type.Color\022\r\n\005score\030\002 \001(\002"
      "\022\026\n\016pixel_fraction\030\003 \001(\002\"M\n\030DominantColo"
      "rsAnnotation\0221\n\006colors\030\001 \003(\0132!.google.cl"
      "oud.vision.v1.ColorInfo\"\\\n\017ImageProperti"
      "es\022I\n\017dominant_colors\030\001 \001(\01320.google.clo"
      "ud.vision.v1.DominantColorsAnnotation\"x\n"
      "\010CropHint\022;\n\rbounding_poly\030\001 \001(\0132$.googl"
      "e.cloud.vision.v1.BoundingPoly\022\022\n\nconfid"
      "ence\030\002 \001(\002\022\033\n\023importance_fraction\030\003 \001(\002\""
      "K\n\023CropHintsAnnotation\0224\n\ncrop_hints\030\001 \003"
      "(\0132 .google.cloud.vision.v1.CropHint\"(\n\017"
      "CropHintsParams\022\025\n\raspect_ratios\030\001 \003(\002\"1"
      "\n\022WebDetectionParams\022\033\n\023include_geo_resu"
      "lts\030\002 \001(\010\"\360\001\n\014ImageContext\022:\n\rlat_long_r"
      "ect\030\001 \001(\0132#.google.cloud.vision.v1.LatLo"
      "ngRect\022\026\n\016language_hints\030\002 \003(\t\022B\n\021crop_h"
      "ints_params\030\004 \001(\0132\'.google.cloud.vision."
      "v1.CropHintsParams\022H\n\024web_detection_para"
      "ms\030\006 \001(\0132*.google.cloud.vision.v1.WebDet"
      "ectionParams\"\264\001\n\024AnnotateImageRequest\022,\n"
      "\005image\030\001 \001(\0132\035.google.cloud.vision.v1.Im"
      "age\0221\n\010features\030\002 \003(\0132\037.google.cloud.vis"
      "ion.v1.Feature\022;\n\rimage_context\030\003 \001(\0132$."
      "google.cloud.vision.v1.ImageContext\":\n\026I"
      "mageAnnotationContext\022\013\n\003uri\030\001 \001(\t\022\023\n\013pa"
      "ge_number\030\002 \001(\005\"\226\007\n\025AnnotateImageRespons"
      "e\022@\n\020face_annotations\030\001 \003(\0132&.google.clo"
      "ud.vision.v1.FaceAnnotation\022F\n\024landmark_"
      "annotations\030\002 \003(\0132(.google.cloud.vision."
      "v1.EntityAnnotation\022B\n\020logo_annotations\030"
      "\003 \003(\0132(.google.cloud.vision.v1.EntityAnn"
      "otation\022C\n\021label_annotations\030\004 \003(\0132(.goo"
      "gle.cloud.vision.v1.EntityAnnotation\022W\n\034"
      "localized_object_annotations\030\026 \003(\01321.goo"
      "gle.cloud.vision.v1.LocalizedObjectAnnot"
      "ation\022B\n\020text_annotations\030\005 \003(\0132(.google"
      ".cloud.vision.v1.EntityAnnotation\022D\n\024ful"
      "l_text_annotation\030\014 \001(\0132&.google.cloud.v"
      "ision.v1.TextAnnotation\022L\n\026safe_search_a"
      "nnotation\030\006 \001(\0132,.google.cloud.vision.v1"
      ".SafeSearchAnnotation\022L\n\033image_propertie"
      "s_annotation\030\010 \001(\0132\'.google.cloud.vision"
      ".v1.ImageProperties\022J\n\025crop_hints_annota"
      "tion\030\013 \001(\0132+.google.cloud.vision.v1.Crop"
      "HintsAnnotation\022;\n\rweb_detection\030\r \001(\0132$"
      ".google.cloud.vision.v1.WebDetection\022!\n\005"
      "error\030\t \001(\0132\022.google.rpc.Status\022\?\n\007conte"
      "xt\030\025 \001(\0132..google.cloud.vision.v1.ImageA"
      "nnotationContext\"\223\001\n\024AnnotateFileRespons"
      "e\0229\n\014input_config\030\001 \001(\0132#.google.cloud.v"
      "ision.v1.InputConfig\022@\n\tresponses\030\002 \003(\0132"
      "-.google.cloud.vision.v1.AnnotateImageRe"
      "sponse\"\\\n\032BatchAnnotateImagesRequest\022>\n\010"
      "requests\030\001 \003(\0132,.google.cloud.vision.v1."
      "AnnotateImageRequest\"_\n\033BatchAnnotateIma"
      "gesResponse\022@\n\tresponses\030\001 \003(\0132-.google."
      "cloud.vision.v1.AnnotateImageResponse\"\202\002"
      "\n\030AsyncAnnotateFileRequest\0229\n\014input_conf"
      "ig\030\001 \001(\0132#.google.cloud.vision.v1.InputC"
      "onfig\0221\n\010features\030\002 \003(\0132\037.google.cloud.v"
      "ision.v1.Feature\022;\n\rimage_context\030\003 \001(\0132"
      "$.google.cloud.vision.v1.ImageContext\022;\n"
      "\routput_config\030\004 \001(\0132$.google.cloud.visi"
      "on.v1.OutputConfig\"X\n\031AsyncAnnotateFileR"
      "esponse\022;\n\routput_config\030\001 \001(\0132$.google."
      "cloud.vision.v1.OutputConfig\"d\n\036AsyncBat"
      "chAnnotateFilesRequest\022B\n\010requests\030\001 \003(\013"
      "20.google.cloud.vision.v1.AsyncAnnotateF"
      "ileRequest\"g\n\037AsyncBatchAnnotateFilesRes"
      "ponse\022D\n\tresponses\030\001 \003(\01321.google.cloud."
      "vision.v1.AsyncAnnotateFileResponse\"W\n\013I"
      "nputConfig\0225\n\ngcs_source\030\001 \001(\0132!.google."
      "cloud.vision.v1.GcsSource\022\021\n\tmime_type\030\002"
      " \001(\t\"c\n\014OutputConfig\022\?\n\017gcs_destination\030"
      "\001 \001(\0132&.google.cloud.vision.v1.GcsDestin"
      "ation\022\022\n\nbatch_size\030\002 \001(\005\"\030\n\tGcsSource\022\013"
      "\n\003uri\030\001 \001(\t\"\035\n\016GcsDestination\022\013\n\003uri\030\001 \001"
      "(\t\"\210\002\n\021OperationMetadata\022>\n\005state\030\001 \001(\0162"
      "/.google.cloud.vision.v1.OperationMetada"
      "ta.State\022/\n\013create_time\030\005 \001(\0132\032.google.p"
      "rotobuf.Timestamp\022/\n\013update_time\030\006 \001(\0132\032"
      ".google.protobuf.Timestamp\"Q\n\005State\022\025\n\021S"
      "TATE_UNSPECIFIED\020\000\022\013\n\007CREATED\020\001\022\013\n\007RUNNI"
      "NG\020\002\022\010\n\004DONE\020\003\022\r\n\tCANCELLED\020\004*e\n\nLikelih"
      "ood\022\013\n\007UNKNOWN\020\000\022\021\n\rVERY_UNLIKELY\020\001\022\014\n\010U"
      "NLIKELY\020\002\022\014\n\010POSSIBLE\020\003\022\n\n\006LIKELY\020\004\022\017\n\013V"
      "ERY_LIKELY\020\0052\315\002\n\016ImageAnnotator\022\236\001\n\023Batc"
      "hAnnotateImages\0222.google.cloud.vision.v1"
      ".BatchAnnotateImagesRequest\0323.google.clo"
      "ud.vision.v1.BatchAnnotateImagesResponse"
      "\"\036\202\323\344\223\002\030\"\023/v1/images:annotate:\001*\022\231\001\n\027Asy"
      "ncBatchAnnotateFiles\0226.google.cloud.visi"
      "on.v1.AsyncBatchAnnotateFilesRequest\032\035.g"
      "oogle.longrunning.Operation\"\'\202\323\344\223\002!\"\034/v1"
      "/files:asyncBatchAnnotate:\001*B{\n\032com.goog"
      "le.cloud.vision.v1B\023ImageAnnotatorProtoP"
      "\001Z<google.golang.org/genproto/googleapis"
      "/cloud/vision/v1;vision\370\001\001\242\002\004GCVNb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7521);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/vision/v1/image_annotator.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fvision_2fv1_2fweb_5fdetection_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
  ::protobuf_google_2ftype_2fcolor_2eproto::AddDescriptors();
  ::protobuf_google_2ftype_2flatlng_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto
namespace google {
namespace cloud {
namespace vision {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Feature_Type_descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_enum_descriptors[0];
}
bool Feature_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 19:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Feature_Type Feature::TYPE_UNSPECIFIED;
const Feature_Type Feature::FACE_DETECTION;
const Feature_Type Feature::LANDMARK_DETECTION;
const Feature_Type Feature::LOGO_DETECTION;
const Feature_Type Feature::LABEL_DETECTION;
const Feature_Type Feature::TEXT_DETECTION;
const Feature_Type Feature::DOCUMENT_TEXT_DETECTION;
const Feature_Type Feature::SAFE_SEARCH_DETECTION;
const Feature_Type Feature::IMAGE_PROPERTIES;
const Feature_Type Feature::CROP_HINTS;
const Feature_Type Feature::WEB_DETECTION;
const Feature_Type Feature::OBJECT_LOCALIZATION;
const Feature_Type Feature::Type_MIN;
const Feature_Type Feature::Type_MAX;
const int Feature::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FaceAnnotation_Landmark_Type_descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_enum_descriptors[1];
}
bool FaceAnnotation_Landmark_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::UNKNOWN_LANDMARK;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYE;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYE;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_OF_LEFT_EYEBROW;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_OF_LEFT_EYEBROW;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_OF_RIGHT_EYEBROW;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_OF_RIGHT_EYEBROW;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::MIDPOINT_BETWEEN_EYES;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::NOSE_TIP;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::UPPER_LIP;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LOWER_LIP;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::MOUTH_LEFT;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::MOUTH_RIGHT;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::MOUTH_CENTER;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::NOSE_BOTTOM_RIGHT;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::NOSE_BOTTOM_LEFT;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::NOSE_BOTTOM_CENTER;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYE_TOP_BOUNDARY;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYE_RIGHT_CORNER;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYE_BOTTOM_BOUNDARY;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYE_LEFT_CORNER;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYE_TOP_BOUNDARY;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYE_RIGHT_CORNER;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYE_BOTTOM_BOUNDARY;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYE_LEFT_CORNER;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYEBROW_UPPER_MIDPOINT;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYEBROW_UPPER_MIDPOINT;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EAR_TRAGION;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EAR_TRAGION;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYE_PUPIL;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYE_PUPIL;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::FOREHEAD_GLABELLA;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::CHIN_GNATHION;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::CHIN_LEFT_GONION;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::CHIN_RIGHT_GONION;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::Type_MIN;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::Type_MAX;
const int FaceAnnotation_Landmark::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OperationMetadata_State_descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_enum_descriptors[2];
}
bool OperationMetadata_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OperationMetadata_State OperationMetadata::STATE_UNSPECIFIED;
const OperationMetadata_State OperationMetadata::CREATED;
const OperationMetadata_State OperationMetadata::RUNNING;
const OperationMetadata_State OperationMetadata::DONE;
const OperationMetadata_State OperationMetadata::CANCELLED;
const OperationMetadata_State OperationMetadata::State_MIN;
const OperationMetadata_State OperationMetadata::State_MAX;
const int OperationMetadata::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Likelihood_descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_enum_descriptors[3];
}
bool Likelihood_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Feature::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Feature::kTypeFieldNumber;
const int Feature::kMaxResultsFieldNumber;
const int Feature::kModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Feature::Feature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_Feature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.Feature)
}
Feature::Feature(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_Feature.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.Feature)
}
Feature::Feature(const Feature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.model().size() > 0) {
    model_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model(),
      GetArenaNoVirtual());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_results_) -
    reinterpret_cast<char*>(&type_)) + sizeof(max_results_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.Feature)
}

void Feature::SharedCtor() {
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_results_) -
      reinterpret_cast<char*>(&type_)) + sizeof(max_results_));
}

Feature::~Feature() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.Feature)
  SharedDtor();
}

void Feature::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Feature::ArenaDtor(void* object) {
  Feature* _this = reinterpret_cast< Feature* >(object);
  (void)_this;
}
void Feature::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Feature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Feature::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Feature& Feature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_Feature.base);
  return *internal_default_instance();
}


void Feature::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.Feature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_results_) -
      reinterpret_cast<char*>(&type_)) + sizeof(max_results_));
  _internal_metadata_.Clear();
}

bool Feature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.Feature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.Feature.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::cloud::vision::v1::Feature_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model().data(), static_cast<int>(this->model().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.Feature.model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.Feature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.Feature)
  return false;
#undef DO_
}

void Feature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.Feature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.Feature.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // int32 max_results = 2;
  if (this->max_results() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_results(), output);
  }

  // string model = 3;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), static_cast<int>(this->model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.Feature.model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->model(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.Feature)
}

::google::protobuf::uint8* Feature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.Feature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.Feature.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // int32 max_results = 2;
  if (this->max_results() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_results(), target);
  }

  // string model = 3;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), static_cast<int>(this->model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.Feature.model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->model(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.Feature)
  return target;
}

size_t Feature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.Feature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string model = 3;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model());
  }

  // .google.cloud.vision.v1.Feature.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 max_results = 2;
  if (this->max_results() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_results());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Feature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.Feature)
  GOOGLE_DCHECK_NE(&from, this);
  const Feature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Feature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.Feature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.Feature)
    MergeFrom(*source);
  }
}

void Feature::MergeFrom(const Feature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.Feature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.model().size() > 0) {
    set_model(from.model());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.max_results() != 0) {
    set_max_results(from.max_results());
  }
}

void Feature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Feature::CopyFrom(const Feature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Feature::IsInitialized() const {
  return true;
}

void Feature::Swap(Feature* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Feature* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Feature::UnsafeArenaSwap(Feature* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Feature::InternalSwap(Feature* other) {
  using std::swap;
  model_.Swap(&other->model_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(max_results_, other->max_results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Feature::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageSource::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageSource::kGcsImageUriFieldNumber;
const int ImageSource::kImageUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageSource::ImageSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.ImageSource)
}
ImageSource::ImageSource(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageSource.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.ImageSource)
}
ImageSource::ImageSource(const ImageSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gcs_image_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gcs_image_uri().size() > 0) {
    gcs_image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcs_image_uri(),
      GetArenaNoVirtual());
  }
  image_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_uri().size() > 0) {
    image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_uri(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.ImageSource)
}

void ImageSource::SharedCtor() {
  gcs_image_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ImageSource::~ImageSource() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.ImageSource)
  SharedDtor();
}

void ImageSource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  gcs_image_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImageSource::ArenaDtor(void* object) {
  ImageSource* _this = reinterpret_cast< ImageSource* >(object);
  (void)_this;
}
void ImageSource::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ImageSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageSource::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageSource& ImageSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageSource.base);
  return *internal_default_instance();
}


void ImageSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.ImageSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gcs_image_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  image_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ImageSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.ImageSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string gcs_image_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcs_image_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gcs_image_uri().data(), static_cast<int>(this->gcs_image_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.ImageSource.gcs_image_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_uri().data(), static_cast<int>(this->image_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.ImageSource.image_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.ImageSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.ImageSource)
  return false;
#undef DO_
}

void ImageSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.ImageSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gcs_image_uri = 1;
  if (this->gcs_image_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcs_image_uri().data(), static_cast<int>(this->gcs_image_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.ImageSource.gcs_image_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gcs_image_uri(), output);
  }

  // string image_uri = 2;
  if (this->image_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_uri().data(), static_cast<int>(this->image_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.ImageSource.image_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->image_uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.ImageSource)
}

::google::protobuf::uint8* ImageSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.ImageSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gcs_image_uri = 1;
  if (this->gcs_image_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcs_image_uri().data(), static_cast<int>(this->gcs_image_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.ImageSource.gcs_image_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gcs_image_uri(), target);
  }

  // string image_uri = 2;
  if (this->image_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_uri().data(), static_cast<int>(this->image_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.ImageSource.image_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->image_uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.ImageSource)
  return target;
}

size_t ImageSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.ImageSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string gcs_image_uri = 1;
  if (this->gcs_image_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gcs_image_uri());
  }

  // string image_uri = 2;
  if (this->image_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.ImageSource)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.ImageSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.ImageSource)
    MergeFrom(*source);
  }
}

void ImageSource::MergeFrom(const ImageSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.ImageSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gcs_image_uri().size() > 0) {
    set_gcs_image_uri(from.gcs_image_uri());
  }
  if (from.image_uri().size() > 0) {
    set_image_uri(from.image_uri());
  }
}

void ImageSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.ImageSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageSource::CopyFrom(const ImageSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.ImageSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageSource::IsInitialized() const {
  return true;
}

void ImageSource::Swap(ImageSource* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ImageSource* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ImageSource::UnsafeArenaSwap(ImageSource* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ImageSource::InternalSwap(ImageSource* other) {
  using std::swap;
  gcs_image_uri_.Swap(&other->gcs_image_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_uri_.Swap(&other->image_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageSource::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Image::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_Image_default_instance_._instance.get_mutable()->source_ = const_cast< ::google::cloud::vision::v1::ImageSource*>(
      ::google::cloud::vision::v1::ImageSource::internal_default_instance());
}
void Image::unsafe_arena_set_allocated_source(
    ::google::cloud::vision::v1::ImageSource* source) {
  if (GetArenaNoVirtual() == NULL) {
    delete source_;
  }
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Image.source)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Image::kContentFieldNumber;
const int Image::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Image::Image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_Image.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.Image)
}
Image::Image(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_Image.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.Image)
}
Image::Image(const Image& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content(),
      GetArenaNoVirtual());
  }
  if (from.has_source()) {
    source_ = new ::google::cloud::vision::v1::ImageSource(*from.source_);
  } else {
    source_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.Image)
}

void Image::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_ = NULL;
}

Image::~Image() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.Image)
  SharedDtor();
}

void Image::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete source_;
}

void Image::ArenaDtor(void* object) {
  Image* _this = reinterpret_cast< Image* >(object);
  (void)_this;
}
void Image::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Image::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Image::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Image& Image::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_Image.base);
  return *internal_default_instance();
}


void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  _internal_metadata_.Clear();
}

bool Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.Image)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.ImageSource source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.Image)
  return false;
#undef DO_
}

void Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->content(), output);
  }

  // .google.cloud.vision.v1.ImageSource source = 2;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_source(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.Image)
}

::google::protobuf::uint8* Image::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->content(), target);
  }

  // .google.cloud.vision.v1.ImageSource source = 2;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_source(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.Image)
  return target;
}

size_t Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.Image)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // .google.cloud.vision.v1.ImageSource source = 2;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Image::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.Image)
  GOOGLE_DCHECK_NE(&from, this);
  const Image* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Image>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.Image)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.Image)
    MergeFrom(*source);
  }
}

void Image::MergeFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {
    set_content(from.content());
  }
  if (from.has_source()) {
    mutable_source()->::google::cloud::vision::v1::ImageSource::MergeFrom(from.source());
  }
}

void Image::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Image::IsInitialized() const {
  return true;
}

void Image::Swap(Image* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Image* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Image::UnsafeArenaSwap(Image* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Image::InternalSwap(Image* other) {
  using std::swap;
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_, other->source_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Image::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FaceAnnotation_Landmark::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_FaceAnnotation_Landmark_default_instance_._instance.get_mutable()->position_ = const_cast< ::google::cloud::vision::v1::Position*>(
      ::google::cloud::vision::v1::Position::internal_default_instance());
}
void FaceAnnotation_Landmark::unsafe_arena_set_allocated_position(
    ::google::cloud::vision::v1::Position* position) {
  if (GetArenaNoVirtual() == NULL) {
    delete position_;
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.FaceAnnotation.Landmark.position)
}
void FaceAnnotation_Landmark::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceAnnotation_Landmark::kTypeFieldNumber;
const int FaceAnnotation_Landmark::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceAnnotation_Landmark::FaceAnnotation_Landmark()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_FaceAnnotation_Landmark.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.FaceAnnotation.Landmark)
}
FaceAnnotation_Landmark::FaceAnnotation_Landmark(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_FaceAnnotation_Landmark.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.FaceAnnotation.Landmark)
}
FaceAnnotation_Landmark::FaceAnnotation_Landmark(const FaceAnnotation_Landmark& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::google::cloud::vision::v1::Position(*from.position_);
  } else {
    position_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.FaceAnnotation.Landmark)
}

void FaceAnnotation_Landmark::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&position_)) + sizeof(type_));
}

FaceAnnotation_Landmark::~FaceAnnotation_Landmark() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.FaceAnnotation.Landmark)
  SharedDtor();
}

void FaceAnnotation_Landmark::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete position_;
}

void FaceAnnotation_Landmark::ArenaDtor(void* object) {
  FaceAnnotation_Landmark* _this = reinterpret_cast< FaceAnnotation_Landmark* >(object);
  (void)_this;
}
void FaceAnnotation_Landmark::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FaceAnnotation_Landmark::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FaceAnnotation_Landmark::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaceAnnotation_Landmark& FaceAnnotation_Landmark::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_FaceAnnotation_Landmark.base);
  return *internal_default_instance();
}


void FaceAnnotation_Landmark::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool FaceAnnotation_Landmark::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.FaceAnnotation.Landmark.Type type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::cloud::vision::v1::FaceAnnotation_Landmark_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.Position position = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.FaceAnnotation.Landmark)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.FaceAnnotation.Landmark)
  return false;
#undef DO_
}

void FaceAnnotation_Landmark::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.FaceAnnotation.Landmark.Type type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // .google.cloud.vision.v1.Position position = 4;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.FaceAnnotation.Landmark)
}

::google::protobuf::uint8* FaceAnnotation_Landmark::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.FaceAnnotation.Landmark.Type type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // .google.cloud.vision.v1.Position position = 4;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_position(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.FaceAnnotation.Landmark)
  return target;
}

size_t FaceAnnotation_Landmark::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.vision.v1.Position position = 4;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .google.cloud.vision.v1.FaceAnnotation.Landmark.Type type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FaceAnnotation_Landmark::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceAnnotation_Landmark* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceAnnotation_Landmark>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.FaceAnnotation.Landmark)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.FaceAnnotation.Landmark)
    MergeFrom(*source);
  }
}

void FaceAnnotation_Landmark::MergeFrom(const FaceAnnotation_Landmark& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::google::cloud::vision::v1::Position::MergeFrom(from.position());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void FaceAnnotation_Landmark::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceAnnotation_Landmark::CopyFrom(const FaceAnnotation_Landmark& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceAnnotation_Landmark::IsInitialized() const {
  return true;
}

void FaceAnnotation_Landmark::Swap(FaceAnnotation_Landmark* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FaceAnnotation_Landmark* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FaceAnnotation_Landmark::UnsafeArenaSwap(FaceAnnotation_Landmark* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FaceAnnotation_Landmark::InternalSwap(FaceAnnotation_Landmark* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FaceAnnotation_Landmark::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FaceAnnotation::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_FaceAnnotation_default_instance_._instance.get_mutable()->bounding_poly_ = const_cast< ::google::cloud::vision::v1::BoundingPoly*>(
      ::google::cloud::vision::v1::BoundingPoly::internal_default_instance());
  ::google::cloud::vision::v1::_FaceAnnotation_default_instance_._instance.get_mutable()->fd_bounding_poly_ = const_cast< ::google::cloud::vision::v1::BoundingPoly*>(
      ::google::cloud::vision::v1::BoundingPoly::internal_default_instance());
}
void FaceAnnotation::unsafe_arena_set_allocated_bounding_poly(
    ::google::cloud::vision::v1::BoundingPoly* bounding_poly) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = bounding_poly;
  if (bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.FaceAnnotation.bounding_poly)
}
void FaceAnnotation::clear_bounding_poly() {
  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = NULL;
}
void FaceAnnotation::unsafe_arena_set_allocated_fd_bounding_poly(
    ::google::cloud::vision::v1::BoundingPoly* fd_bounding_poly) {
  if (GetArenaNoVirtual() == NULL) {
    delete fd_bounding_poly_;
  }
  fd_bounding_poly_ = fd_bounding_poly;
  if (fd_bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.FaceAnnotation.fd_bounding_poly)
}
void FaceAnnotation::clear_fd_bounding_poly() {
  if (GetArenaNoVirtual() == NULL && fd_bounding_poly_ != NULL) {
    delete fd_bounding_poly_;
  }
  fd_bounding_poly_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceAnnotation::kBoundingPolyFieldNumber;
const int FaceAnnotation::kFdBoundingPolyFieldNumber;
const int FaceAnnotation::kLandmarksFieldNumber;
const int FaceAnnotation::kRollAngleFieldNumber;
const int FaceAnnotation::kPanAngleFieldNumber;
const int FaceAnnotation::kTiltAngleFieldNumber;
const int FaceAnnotation::kDetectionConfidenceFieldNumber;
const int FaceAnnotation::kLandmarkingConfidenceFieldNumber;
const int FaceAnnotation::kJoyLikelihoodFieldNumber;
const int FaceAnnotation::kSorrowLikelihoodFieldNumber;
const int FaceAnnotation::kAngerLikelihoodFieldNumber;
const int FaceAnnotation::kSurpriseLikelihoodFieldNumber;
const int FaceAnnotation::kUnderExposedLikelihoodFieldNumber;
const int FaceAnnotation::kBlurredLikelihoodFieldNumber;
const int FaceAnnotation::kHeadwearLikelihoodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceAnnotation::FaceAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_FaceAnnotation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.FaceAnnotation)
}
FaceAnnotation::FaceAnnotation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  landmarks_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_FaceAnnotation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.FaceAnnotation)
}
FaceAnnotation::FaceAnnotation(const FaceAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      landmarks_(from.landmarks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bounding_poly()) {
    bounding_poly_ = new ::google::cloud::vision::v1::BoundingPoly(*from.bounding_poly_);
  } else {
    bounding_poly_ = NULL;
  }
  if (from.has_fd_bounding_poly()) {
    fd_bounding_poly_ = new ::google::cloud::vision::v1::BoundingPoly(*from.fd_bounding_poly_);
  } else {
    fd_bounding_poly_ = NULL;
  }
  ::memcpy(&roll_angle_, &from.roll_angle_,
    static_cast<size_t>(reinterpret_cast<char*>(&headwear_likelihood_) -
    reinterpret_cast<char*>(&roll_angle_)) + sizeof(headwear_likelihood_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.FaceAnnotation)
}

void FaceAnnotation::SharedCtor() {
  ::memset(&bounding_poly_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&headwear_likelihood_) -
      reinterpret_cast<char*>(&bounding_poly_)) + sizeof(headwear_likelihood_));
}

FaceAnnotation::~FaceAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.FaceAnnotation)
  SharedDtor();
}

void FaceAnnotation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete bounding_poly_;
  if (this != internal_default_instance()) delete fd_bounding_poly_;
}

void FaceAnnotation::ArenaDtor(void* object) {
  FaceAnnotation* _this = reinterpret_cast< FaceAnnotation* >(object);
  (void)_this;
}
void FaceAnnotation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FaceAnnotation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FaceAnnotation::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaceAnnotation& FaceAnnotation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_FaceAnnotation.base);
  return *internal_default_instance();
}


void FaceAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.FaceAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  landmarks_.Clear();
  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = NULL;
  if (GetArenaNoVirtual() == NULL && fd_bounding_poly_ != NULL) {
    delete fd_bounding_poly_;
  }
  fd_bounding_poly_ = NULL;
  ::memset(&roll_angle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&headwear_likelihood_) -
      reinterpret_cast<char*>(&roll_angle_)) + sizeof(headwear_likelihood_));
  _internal_metadata_.Clear();
}

bool FaceAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.FaceAnnotation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounding_poly()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.BoundingPoly fd_bounding_poly = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fd_bounding_poly()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.FaceAnnotation.Landmark landmarks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_landmarks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float roll_angle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pan_angle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pan_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float tilt_angle = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tilt_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float detection_confidence = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &detection_confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float landmarking_confidence = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &landmarking_confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.Likelihood joy_likelihood = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_joy_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.Likelihood sorrow_likelihood = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sorrow_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.Likelihood anger_likelihood = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_anger_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.Likelihood surprise_likelihood = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_surprise_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.Likelihood under_exposed_likelihood = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_under_exposed_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.Likelihood blurred_likelihood = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_blurred_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.Likelihood headwear_likelihood = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_headwear_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.FaceAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.FaceAnnotation)
  return false;
#undef DO_
}

void FaceAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.FaceAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
  if (this->has_bounding_poly()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_bounding_poly(), output);
  }

  // .google.cloud.vision.v1.BoundingPoly fd_bounding_poly = 2;
  if (this->has_fd_bounding_poly()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_fd_bounding_poly(), output);
  }

  // repeated .google.cloud.vision.v1.FaceAnnotation.Landmark landmarks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->landmarks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->landmarks(static_cast<int>(i)),
      output);
  }

  // float roll_angle = 4;
  if (this->roll_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->roll_angle(), output);
  }

  // float pan_angle = 5;
  if (this->pan_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->pan_angle(), output);
  }

  // float tilt_angle = 6;
  if (this->tilt_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->tilt_angle(), output);
  }

  // float detection_confidence = 7;
  if (this->detection_confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->detection_confidence(), output);
  }

  // float landmarking_confidence = 8;
  if (this->landmarking_confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->landmarking_confidence(), output);
  }

  // .google.cloud.vision.v1.Likelihood joy_likelihood = 9;
  if (this->joy_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->joy_likelihood(), output);
  }

  // .google.cloud.vision.v1.Likelihood sorrow_likelihood = 10;
  if (this->sorrow_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->sorrow_likelihood(), output);
  }

  // .google.cloud.vision.v1.Likelihood anger_likelihood = 11;
  if (this->anger_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->anger_likelihood(), output);
  }

  // .google.cloud.vision.v1.Likelihood surprise_likelihood = 12;
  if (this->surprise_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->surprise_likelihood(), output);
  }

  // .google.cloud.vision.v1.Likelihood under_exposed_likelihood = 13;
  if (this->under_exposed_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->under_exposed_likelihood(), output);
  }

  // .google.cloud.vision.v1.Likelihood blurred_likelihood = 14;
  if (this->blurred_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->blurred_likelihood(), output);
  }

  // .google.cloud.vision.v1.Likelihood headwear_likelihood = 15;
  if (this->headwear_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->headwear_likelihood(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.FaceAnnotation)
}

::google::protobuf::uint8* FaceAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.FaceAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
  if (this->has_bounding_poly()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_bounding_poly(), deterministic, target);
  }

  // .google.cloud.vision.v1.BoundingPoly fd_bounding_poly = 2;
  if (this->has_fd_bounding_poly()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_fd_bounding_poly(), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.FaceAnnotation.Landmark landmarks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->landmarks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->landmarks(static_cast<int>(i)), deterministic, target);
  }

  // float roll_angle = 4;
  if (this->roll_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->roll_angle(), target);
  }

  // float pan_angle = 5;
  if (this->pan_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->pan_angle(), target);
  }

  // float tilt_angle = 6;
  if (this->tilt_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->tilt_angle(), target);
  }

  // float detection_confidence = 7;
  if (this->detection_confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->detection_confidence(), target);
  }

  // float landmarking_confidence = 8;
  if (this->landmarking_confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->landmarking_confidence(), target);
  }

  // .google.cloud.vision.v1.Likelihood joy_likelihood = 9;
  if (this->joy_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->joy_likelihood(), target);
  }

  // .google.cloud.vision.v1.Likelihood sorrow_likelihood = 10;
  if (this->sorrow_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->sorrow_likelihood(), target);
  }

  // .google.cloud.vision.v1.Likelihood anger_likelihood = 11;
  if (this->anger_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->anger_likelihood(), target);
  }

  // .google.cloud.vision.v1.Likelihood surprise_likelihood = 12;
  if (this->surprise_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->surprise_likelihood(), target);
  }

  // .google.cloud.vision.v1.Likelihood under_exposed_likelihood = 13;
  if (this->under_exposed_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->under_exposed_likelihood(), target);
  }

  // .google.cloud.vision.v1.Likelihood blurred_likelihood = 14;
  if (this->blurred_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->blurred_likelihood(), target);
  }

  // .google.cloud.vision.v1.Likelihood headwear_likelihood = 15;
  if (this->headwear_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->headwear_likelihood(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.FaceAnnotation)
  return target;
}

size_t FaceAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.FaceAnnotation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1.FaceAnnotation.Landmark landmarks = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->landmarks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->landmarks(static_cast<int>(i)));
    }
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
  if (this->has_bounding_poly()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bounding_poly_);
  }

  // .google.cloud.vision.v1.BoundingPoly fd_bounding_poly = 2;
  if (this->has_fd_bounding_poly()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fd_bounding_poly_);
  }

  // float roll_angle = 4;
  if (this->roll_angle() != 0) {
    total_size += 1 + 4;
  }

  // float pan_angle = 5;
  if (this->pan_angle() != 0) {
    total_size += 1 + 4;
  }

  // float tilt_angle = 6;
  if (this->tilt_angle() != 0) {
    total_size += 1 + 4;
  }

  // float detection_confidence = 7;
  if (this->detection_confidence() != 0) {
    total_size += 1 + 4;
  }

  // float landmarking_confidence = 8;
  if (this->landmarking_confidence() != 0) {
    total_size += 1 + 4;
  }

  // .google.cloud.vision.v1.Likelihood joy_likelihood = 9;
  if (this->joy_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->joy_likelihood());
  }

  // .google.cloud.vision.v1.Likelihood sorrow_likelihood = 10;
  if (this->sorrow_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sorrow_likelihood());
  }

  // .google.cloud.vision.v1.Likelihood anger_likelihood = 11;
  if (this->anger_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->anger_likelihood());
  }

  // .google.cloud.vision.v1.Likelihood surprise_likelihood = 12;
  if (this->surprise_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->surprise_likelihood());
  }

  // .google.cloud.vision.v1.Likelihood under_exposed_likelihood = 13;
  if (this->under_exposed_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->under_exposed_likelihood());
  }

  // .google.cloud.vision.v1.Likelihood blurred_likelihood = 14;
  if (this->blurred_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->blurred_likelihood());
  }

  // .google.cloud.vision.v1.Likelihood headwear_likelihood = 15;
  if (this->headwear_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->headwear_likelihood());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FaceAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.FaceAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.FaceAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.FaceAnnotation)
    MergeFrom(*source);
  }
}

void FaceAnnotation::MergeFrom(const FaceAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.FaceAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  landmarks_.MergeFrom(from.landmarks_);
  if (from.has_bounding_poly()) {
    mutable_bounding_poly()->::google::cloud::vision::v1::BoundingPoly::MergeFrom(from.bounding_poly());
  }
  if (from.has_fd_bounding_poly()) {
    mutable_fd_bounding_poly()->::google::cloud::vision::v1::BoundingPoly::MergeFrom(from.fd_bounding_poly());
  }
  if (from.roll_angle() != 0) {
    set_roll_angle(from.roll_angle());
  }
  if (from.pan_angle() != 0) {
    set_pan_angle(from.pan_angle());
  }
  if (from.tilt_angle() != 0) {
    set_tilt_angle(from.tilt_angle());
  }
  if (from.detection_confidence() != 0) {
    set_detection_confidence(from.detection_confidence());
  }
  if (from.landmarking_confidence() != 0) {
    set_landmarking_confidence(from.landmarking_confidence());
  }
  if (from.joy_likelihood() != 0) {
    set_joy_likelihood(from.joy_likelihood());
  }
  if (from.sorrow_likelihood() != 0) {
    set_sorrow_likelihood(from.sorrow_likelihood());
  }
  if (from.anger_likelihood() != 0) {
    set_anger_likelihood(from.anger_likelihood());
  }
  if (from.surprise_likelihood() != 0) {
    set_surprise_likelihood(from.surprise_likelihood());
  }
  if (from.under_exposed_likelihood() != 0) {
    set_under_exposed_likelihood(from.under_exposed_likelihood());
  }
  if (from.blurred_likelihood() != 0) {
    set_blurred_likelihood(from.blurred_likelihood());
  }
  if (from.headwear_likelihood() != 0) {
    set_headwear_likelihood(from.headwear_likelihood());
  }
}

void FaceAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.FaceAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceAnnotation::CopyFrom(const FaceAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.FaceAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceAnnotation::IsInitialized() const {
  return true;
}

void FaceAnnotation::Swap(FaceAnnotation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FaceAnnotation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FaceAnnotation::UnsafeArenaSwap(FaceAnnotation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FaceAnnotation::InternalSwap(FaceAnnotation* other) {
  using std::swap;
  CastToBase(&landmarks_)->InternalSwap(CastToBase(&other->landmarks_));
  swap(bounding_poly_, other->bounding_poly_);
  swap(fd_bounding_poly_, other->fd_bounding_poly_);
  swap(roll_angle_, other->roll_angle_);
  swap(pan_angle_, other->pan_angle_);
  swap(tilt_angle_, other->tilt_angle_);
  swap(detection_confidence_, other->detection_confidence_);
  swap(landmarking_confidence_, other->landmarking_confidence_);
  swap(joy_likelihood_, other->joy_likelihood_);
  swap(sorrow_likelihood_, other->sorrow_likelihood_);
  swap(anger_likelihood_, other->anger_likelihood_);
  swap(surprise_likelihood_, other->surprise_likelihood_);
  swap(under_exposed_likelihood_, other->under_exposed_likelihood_);
  swap(blurred_likelihood_, other->blurred_likelihood_);
  swap(headwear_likelihood_, other->headwear_likelihood_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FaceAnnotation::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocationInfo::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_LocationInfo_default_instance_._instance.get_mutable()->lat_lng_ = const_cast< ::google::type::LatLng*>(
      ::google::type::LatLng::internal_default_instance());
}
void LocationInfo::unsafe_arena_set_allocated_lat_lng(
    ::google::type::LatLng* lat_lng) {
  if (GetArenaNoVirtual() == NULL) {
    delete lat_lng_;
  }
  lat_lng_ = lat_lng;
  if (lat_lng) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.LocationInfo.lat_lng)
}
void LocationInfo::clear_lat_lng() {
  if (GetArenaNoVirtual() == NULL && lat_lng_ != NULL) {
    delete lat_lng_;
  }
  lat_lng_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocationInfo::kLatLngFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocationInfo::LocationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_LocationInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.LocationInfo)
}
LocationInfo::LocationInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_LocationInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.LocationInfo)
}
LocationInfo::LocationInfo(const LocationInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lat_lng()) {
    lat_lng_ = new ::google::type::LatLng(*from.lat_lng_);
  } else {
    lat_lng_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.LocationInfo)
}

void LocationInfo::SharedCtor() {
  lat_lng_ = NULL;
}

LocationInfo::~LocationInfo() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.LocationInfo)
  SharedDtor();
}

void LocationInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete lat_lng_;
}

void LocationInfo::ArenaDtor(void* object) {
  LocationInfo* _this = reinterpret_cast< LocationInfo* >(object);
  (void)_this;
}
void LocationInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LocationInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocationInfo::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocationInfo& LocationInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_LocationInfo.base);
  return *internal_default_instance();
}


void LocationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.LocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lat_lng_ != NULL) {
    delete lat_lng_;
  }
  lat_lng_ = NULL;
  _internal_metadata_.Clear();
}

bool LocationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.LocationInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.type.LatLng lat_lng = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lat_lng()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.LocationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.LocationInfo)
  return false;
#undef DO_
}

void LocationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.LocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.type.LatLng lat_lng = 1;
  if (this->has_lat_lng()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_lat_lng(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.LocationInfo)
}

::google::protobuf::uint8* LocationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.LocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.type.LatLng lat_lng = 1;
  if (this->has_lat_lng()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_lat_lng(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.LocationInfo)
  return target;
}

size_t LocationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.LocationInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.type.LatLng lat_lng = 1;
  if (this->has_lat_lng()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lat_lng_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.LocationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.LocationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.LocationInfo)
    MergeFrom(*source);
  }
}

void LocationInfo::MergeFrom(const LocationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.LocationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lat_lng()) {
    mutable_lat_lng()->::google::type::LatLng::MergeFrom(from.lat_lng());
  }
}

void LocationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.LocationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationInfo::CopyFrom(const LocationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.LocationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationInfo::IsInitialized() const {
  return true;
}

void LocationInfo::Swap(LocationInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LocationInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LocationInfo::UnsafeArenaSwap(LocationInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LocationInfo::InternalSwap(LocationInfo* other) {
  using std::swap;
  swap(lat_lng_, other->lat_lng_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocationInfo::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Property::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Property::kNameFieldNumber;
const int Property::kValueFieldNumber;
const int Property::kUint64ValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Property::Property()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_Property.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.Property)
}
Property::Property(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_Property.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.Property)
}
Property::Property(const Property& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value(),
      GetArenaNoVirtual());
  }
  uint64_value_ = from.uint64_value_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.Property)
}

void Property::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uint64_value_ = GOOGLE_ULONGLONG(0);
}

Property::~Property() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.Property)
  SharedDtor();
}

void Property::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Property::ArenaDtor(void* object) {
  Property* _this = reinterpret_cast< Property* >(object);
  (void)_this;
}
void Property::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Property::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Property::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Property& Property::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_Property.base);
  return *internal_default_instance();
}


void Property::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  uint64_value_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Property::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.Property)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.Property.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.Property.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uint64_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uint64_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.Property)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.Property)
  return false;
#undef DO_
}

void Property::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.Property.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.Property.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // uint64 uint64_value = 3;
  if (this->uint64_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uint64_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.Property)
}

::google::protobuf::uint8* Property::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.Property.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.Property.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // uint64 uint64_value = 3;
  if (this->uint64_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->uint64_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.Property)
  return target;
}

size_t Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.Property)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // uint64 uint64_value = 3;
  if (this->uint64_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uint64_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Property::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.Property)
  GOOGLE_DCHECK_NE(&from, this);
  const Property* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Property>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.Property)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.Property)
    MergeFrom(*source);
  }
}

void Property::MergeFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.Property)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.value().size() > 0) {
    set_value(from.value());
  }
  if (from.uint64_value() != 0) {
    set_uint64_value(from.uint64_value());
  }
}

void Property::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Property::CopyFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Property::IsInitialized() const {
  return true;
}

void Property::Swap(Property* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Property* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Property::UnsafeArenaSwap(Property* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Property::InternalSwap(Property* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(uint64_value_, other->uint64_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Property::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntityAnnotation::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_EntityAnnotation_default_instance_._instance.get_mutable()->bounding_poly_ = const_cast< ::google::cloud::vision::v1::BoundingPoly*>(
      ::google::cloud::vision::v1::BoundingPoly::internal_default_instance());
}
void EntityAnnotation::unsafe_arena_set_allocated_bounding_poly(
    ::google::cloud::vision::v1::BoundingPoly* bounding_poly) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = bounding_poly;
  if (bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.EntityAnnotation.bounding_poly)
}
void EntityAnnotation::clear_bounding_poly() {
  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityAnnotation::kMidFieldNumber;
const int EntityAnnotation::kLocaleFieldNumber;
const int EntityAnnotation::kDescriptionFieldNumber;
const int EntityAnnotation::kScoreFieldNumber;
const int EntityAnnotation::kConfidenceFieldNumber;
const int EntityAnnotation::kTopicalityFieldNumber;
const int EntityAnnotation::kBoundingPolyFieldNumber;
const int EntityAnnotation::kLocationsFieldNumber;
const int EntityAnnotation::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityAnnotation::EntityAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_EntityAnnotation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.EntityAnnotation)
}
EntityAnnotation::EntityAnnotation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  locations_(arena),
  properties_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_EntityAnnotation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.EntityAnnotation)
}
EntityAnnotation::EntityAnnotation(const EntityAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      locations_(from.locations_),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mid().size() > 0) {
    mid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mid(),
      GetArenaNoVirtual());
  }
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.locale().size() > 0) {
    locale_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  if (from.has_bounding_poly()) {
    bounding_poly_ = new ::google::cloud::vision::v1::BoundingPoly(*from.bounding_poly_);
  } else {
    bounding_poly_ = NULL;
  }
  ::memcpy(&score_, &from.score_,
    static_cast<size_t>(reinterpret_cast<char*>(&topicality_) -
    reinterpret_cast<char*>(&score_)) + sizeof(topicality_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.EntityAnnotation)
}

void EntityAnnotation::SharedCtor() {
  mid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bounding_poly_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&topicality_) -
      reinterpret_cast<char*>(&bounding_poly_)) + sizeof(topicality_));
}

EntityAnnotation::~EntityAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.EntityAnnotation)
  SharedDtor();
}

void EntityAnnotation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  mid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bounding_poly_;
}

void EntityAnnotation::ArenaDtor(void* object) {
  EntityAnnotation* _this = reinterpret_cast< EntityAnnotation* >(object);
  (void)_this;
}
void EntityAnnotation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EntityAnnotation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntityAnnotation::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityAnnotation& EntityAnnotation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_EntityAnnotation.base);
  return *internal_default_instance();
}


void EntityAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.EntityAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  properties_.Clear();
  mid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  locale_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = NULL;
  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&topicality_) -
      reinterpret_cast<char*>(&score_)) + sizeof(topicality_));
  _internal_metadata_.Clear();
}

bool EntityAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.EntityAnnotation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mid().data(), static_cast<int>(this->mid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.EntityAnnotation.mid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string locale = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locale()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locale().data(), static_cast<int>(this->locale().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.EntityAnnotation.locale"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.EntityAnnotation.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float topicality = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &topicality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.BoundingPoly bounding_poly = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounding_poly()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.LocationInfo locations = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_locations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.Property properties = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.EntityAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.EntityAnnotation)
  return false;
#undef DO_
}

void EntityAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.EntityAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mid = 1;
  if (this->mid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mid().data(), static_cast<int>(this->mid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.EntityAnnotation.mid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mid(), output);
  }

  // string locale = 2;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), static_cast<int>(this->locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.EntityAnnotation.locale");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->locale(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.EntityAnnotation.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // float score = 4;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->score(), output);
  }

  // float confidence = 5;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->confidence(), output);
  }

  // float topicality = 6;
  if (this->topicality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->topicality(), output);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_poly = 7;
  if (this->has_bounding_poly()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_bounding_poly(), output);
  }

  // repeated .google.cloud.vision.v1.LocationInfo locations = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->locations(static_cast<int>(i)),
      output);
  }

  // repeated .google.cloud.vision.v1.Property properties = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->properties(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.EntityAnnotation)
}

::google::protobuf::uint8* EntityAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.EntityAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mid = 1;
  if (this->mid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mid().data(), static_cast<int>(this->mid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.EntityAnnotation.mid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mid(), target);
  }

  // string locale = 2;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), static_cast<int>(this->locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.EntityAnnotation.locale");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->locale(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.EntityAnnotation.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // float score = 4;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->score(), target);
  }

  // float confidence = 5;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->confidence(), target);
  }

  // float topicality = 6;
  if (this->topicality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->topicality(), target);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_poly = 7;
  if (this->has_bounding_poly()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_bounding_poly(), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.LocationInfo locations = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->locations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.Property properties = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->properties(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.EntityAnnotation)
  return target;
}

size_t EntityAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.EntityAnnotation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1.LocationInfo locations = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->locations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locations(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.vision.v1.Property properties = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  // string mid = 1;
  if (this->mid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mid());
  }

  // string locale = 2;
  if (this->locale().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locale());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_poly = 7;
  if (this->has_bounding_poly()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bounding_poly_);
  }

  // float score = 4;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  // float confidence = 5;
  if (this->confidence() != 0) {
    total_size += 1 + 4;
  }

  // float topicality = 6;
  if (this->topicality() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.EntityAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.EntityAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.EntityAnnotation)
    MergeFrom(*source);
  }
}

void EntityAnnotation::MergeFrom(const EntityAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.EntityAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  properties_.MergeFrom(from.properties_);
  if (from.mid().size() > 0) {
    set_mid(from.mid());
  }
  if (from.locale().size() > 0) {
    set_locale(from.locale());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.has_bounding_poly()) {
    mutable_bounding_poly()->::google::cloud::vision::v1::BoundingPoly::MergeFrom(from.bounding_poly());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
  if (from.topicality() != 0) {
    set_topicality(from.topicality());
  }
}

void EntityAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.EntityAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityAnnotation::CopyFrom(const EntityAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.EntityAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityAnnotation::IsInitialized() const {
  return true;
}

void EntityAnnotation::Swap(EntityAnnotation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EntityAnnotation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EntityAnnotation::UnsafeArenaSwap(EntityAnnotation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EntityAnnotation::InternalSwap(EntityAnnotation* other) {
  using std::swap;
  CastToBase(&locations_)->InternalSwap(CastToBase(&other->locations_));
  CastToBase(&properties_)->InternalSwap(CastToBase(&other->properties_));
  mid_.Swap(&other->mid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  locale_.Swap(&other->locale_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bounding_poly_, other->bounding_poly_);
  swap(score_, other->score_);
  swap(confidence_, other->confidence_);
  swap(topicality_, other->topicality_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntityAnnotation::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalizedObjectAnnotation::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_LocalizedObjectAnnotation_default_instance_._instance.get_mutable()->bounding_poly_ = const_cast< ::google::cloud::vision::v1::BoundingPoly*>(
      ::google::cloud::vision::v1::BoundingPoly::internal_default_instance());
}
void LocalizedObjectAnnotation::unsafe_arena_set_allocated_bounding_poly(
    ::google::cloud::vision::v1::BoundingPoly* bounding_poly) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = bounding_poly;
  if (bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.LocalizedObjectAnnotation.bounding_poly)
}
void LocalizedObjectAnnotation::clear_bounding_poly() {
  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalizedObjectAnnotation::kMidFieldNumber;
const int LocalizedObjectAnnotation::kLanguageCodeFieldNumber;
const int LocalizedObjectAnnotation::kNameFieldNumber;
const int LocalizedObjectAnnotation::kScoreFieldNumber;
const int LocalizedObjectAnnotation::kBoundingPolyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalizedObjectAnnotation::LocalizedObjectAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_LocalizedObjectAnnotation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.LocalizedObjectAnnotation)
}
LocalizedObjectAnnotation::LocalizedObjectAnnotation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_LocalizedObjectAnnotation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.LocalizedObjectAnnotation)
}
LocalizedObjectAnnotation::LocalizedObjectAnnotation(const LocalizedObjectAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mid().size() > 0) {
    mid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mid(),
      GetArenaNoVirtual());
  }
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_bounding_poly()) {
    bounding_poly_ = new ::google::cloud::vision::v1::BoundingPoly(*from.bounding_poly_);
  } else {
    bounding_poly_ = NULL;
  }
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.LocalizedObjectAnnotation)
}

void LocalizedObjectAnnotation::SharedCtor() {
  mid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bounding_poly_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&bounding_poly_)) + sizeof(score_));
}

LocalizedObjectAnnotation::~LocalizedObjectAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.LocalizedObjectAnnotation)
  SharedDtor();
}

void LocalizedObjectAnnotation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  mid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bounding_poly_;
}

void LocalizedObjectAnnotation::ArenaDtor(void* object) {
  LocalizedObjectAnnotation* _this = reinterpret_cast< LocalizedObjectAnnotation* >(object);
  (void)_this;
}
void LocalizedObjectAnnotation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LocalizedObjectAnnotation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocalizedObjectAnnotation::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalizedObjectAnnotation& LocalizedObjectAnnotation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_LocalizedObjectAnnotation.base);
  return *internal_default_instance();
}


void LocalizedObjectAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.LocalizedObjectAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = NULL;
  score_ = 0;
  _internal_metadata_.Clear();
}

bool LocalizedObjectAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.LocalizedObjectAnnotation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mid().data(), static_cast<int>(this->mid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.LocalizedObjectAnnotation.mid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.LocalizedObjectAnnotation.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.LocalizedObjectAnnotation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.BoundingPoly bounding_poly = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounding_poly()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.LocalizedObjectAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.LocalizedObjectAnnotation)
  return false;
#undef DO_
}

void LocalizedObjectAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.LocalizedObjectAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mid = 1;
  if (this->mid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mid().data(), static_cast<int>(this->mid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.LocalizedObjectAnnotation.mid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mid(), output);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.LocalizedObjectAnnotation.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->language_code(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.LocalizedObjectAnnotation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // float score = 4;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->score(), output);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_poly = 5;
  if (this->has_bounding_poly()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_bounding_poly(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.LocalizedObjectAnnotation)
}

::google::protobuf::uint8* LocalizedObjectAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.LocalizedObjectAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mid = 1;
  if (this->mid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mid().data(), static_cast<int>(this->mid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.LocalizedObjectAnnotation.mid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mid(), target);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.LocalizedObjectAnnotation.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->language_code(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.LocalizedObjectAnnotation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // float score = 4;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->score(), target);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_poly = 5;
  if (this->has_bounding_poly()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_bounding_poly(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.LocalizedObjectAnnotation)
  return target;
}

size_t LocalizedObjectAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.LocalizedObjectAnnotation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string mid = 1;
  if (this->mid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mid());
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_poly = 5;
  if (this->has_bounding_poly()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bounding_poly_);
  }

  // float score = 4;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalizedObjectAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.LocalizedObjectAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalizedObjectAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalizedObjectAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.LocalizedObjectAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.LocalizedObjectAnnotation)
    MergeFrom(*source);
  }
}

void LocalizedObjectAnnotation::MergeFrom(const LocalizedObjectAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.LocalizedObjectAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mid().size() > 0) {
    set_mid(from.mid());
  }
  if (from.language_code().size() > 0) {
    set_language_code(from.language_code());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_bounding_poly()) {
    mutable_bounding_poly()->::google::cloud::vision::v1::BoundingPoly::MergeFrom(from.bounding_poly());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void LocalizedObjectAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.LocalizedObjectAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalizedObjectAnnotation::CopyFrom(const LocalizedObjectAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.LocalizedObjectAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalizedObjectAnnotation::IsInitialized() const {
  return true;
}

void LocalizedObjectAnnotation::Swap(LocalizedObjectAnnotation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LocalizedObjectAnnotation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LocalizedObjectAnnotation::UnsafeArenaSwap(LocalizedObjectAnnotation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LocalizedObjectAnnotation::InternalSwap(LocalizedObjectAnnotation* other) {
  using std::swap;
  mid_.Swap(&other->mid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  language_code_.Swap(&other->language_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bounding_poly_, other->bounding_poly_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocalizedObjectAnnotation::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SafeSearchAnnotation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SafeSearchAnnotation::kAdultFieldNumber;
const int SafeSearchAnnotation::kSpoofFieldNumber;
const int SafeSearchAnnotation::kMedicalFieldNumber;
const int SafeSearchAnnotation::kViolenceFieldNumber;
const int SafeSearchAnnotation::kRacyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SafeSearchAnnotation::SafeSearchAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_SafeSearchAnnotation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.SafeSearchAnnotation)
}
SafeSearchAnnotation::SafeSearchAnnotation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_SafeSearchAnnotation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.SafeSearchAnnotation)
}
SafeSearchAnnotation::SafeSearchAnnotation(const SafeSearchAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&adult_, &from.adult_,
    static_cast<size_t>(reinterpret_cast<char*>(&racy_) -
    reinterpret_cast<char*>(&adult_)) + sizeof(racy_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.SafeSearchAnnotation)
}

void SafeSearchAnnotation::SharedCtor() {
  ::memset(&adult_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&racy_) -
      reinterpret_cast<char*>(&adult_)) + sizeof(racy_));
}

SafeSearchAnnotation::~SafeSearchAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.SafeSearchAnnotation)
  SharedDtor();
}

void SafeSearchAnnotation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void SafeSearchAnnotation::ArenaDtor(void* object) {
  SafeSearchAnnotation* _this = reinterpret_cast< SafeSearchAnnotation* >(object);
  (void)_this;
}
void SafeSearchAnnotation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SafeSearchAnnotation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SafeSearchAnnotation::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SafeSearchAnnotation& SafeSearchAnnotation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_SafeSearchAnnotation.base);
  return *internal_default_instance();
}


void SafeSearchAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.SafeSearchAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&adult_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&racy_) -
      reinterpret_cast<char*>(&adult_)) + sizeof(racy_));
  _internal_metadata_.Clear();
}

bool SafeSearchAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.SafeSearchAnnotation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.Likelihood adult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_adult(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.Likelihood spoof = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_spoof(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.Likelihood medical = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_medical(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.Likelihood violence = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_violence(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.Likelihood racy = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_racy(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.SafeSearchAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.SafeSearchAnnotation)
  return false;
#undef DO_
}

void SafeSearchAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.SafeSearchAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.Likelihood adult = 1;
  if (this->adult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->adult(), output);
  }

  // .google.cloud.vision.v1.Likelihood spoof = 2;
  if (this->spoof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->spoof(), output);
  }

  // .google.cloud.vision.v1.Likelihood medical = 3;
  if (this->medical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->medical(), output);
  }

  // .google.cloud.vision.v1.Likelihood violence = 4;
  if (this->violence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->violence(), output);
  }

  // .google.cloud.vision.v1.Likelihood racy = 9;
  if (this->racy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->racy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.SafeSearchAnnotation)
}

::google::protobuf::uint8* SafeSearchAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.SafeSearchAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.Likelihood adult = 1;
  if (this->adult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->adult(), target);
  }

  // .google.cloud.vision.v1.Likelihood spoof = 2;
  if (this->spoof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->spoof(), target);
  }

  // .google.cloud.vision.v1.Likelihood medical = 3;
  if (this->medical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->medical(), target);
  }

  // .google.cloud.vision.v1.Likelihood violence = 4;
  if (this->violence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->violence(), target);
  }

  // .google.cloud.vision.v1.Likelihood racy = 9;
  if (this->racy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->racy(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.SafeSearchAnnotation)
  return target;
}

size_t SafeSearchAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.SafeSearchAnnotation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.vision.v1.Likelihood adult = 1;
  if (this->adult() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->adult());
  }

  // .google.cloud.vision.v1.Likelihood spoof = 2;
  if (this->spoof() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->spoof());
  }

  // .google.cloud.vision.v1.Likelihood medical = 3;
  if (this->medical() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->medical());
  }

  // .google.cloud.vision.v1.Likelihood violence = 4;
  if (this->violence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->violence());
  }

  // .google.cloud.vision.v1.Likelihood racy = 9;
  if (this->racy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->racy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SafeSearchAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.SafeSearchAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const SafeSearchAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SafeSearchAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.SafeSearchAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.SafeSearchAnnotation)
    MergeFrom(*source);
  }
}

void SafeSearchAnnotation::MergeFrom(const SafeSearchAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.SafeSearchAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.adult() != 0) {
    set_adult(from.adult());
  }
  if (from.spoof() != 0) {
    set_spoof(from.spoof());
  }
  if (from.medical() != 0) {
    set_medical(from.medical());
  }
  if (from.violence() != 0) {
    set_violence(from.violence());
  }
  if (from.racy() != 0) {
    set_racy(from.racy());
  }
}

void SafeSearchAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.SafeSearchAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SafeSearchAnnotation::CopyFrom(const SafeSearchAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.SafeSearchAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SafeSearchAnnotation::IsInitialized() const {
  return true;
}

void SafeSearchAnnotation::Swap(SafeSearchAnnotation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SafeSearchAnnotation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SafeSearchAnnotation::UnsafeArenaSwap(SafeSearchAnnotation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SafeSearchAnnotation::InternalSwap(SafeSearchAnnotation* other) {
  using std::swap;
  swap(adult_, other->adult_);
  swap(spoof_, other->spoof_);
  swap(medical_, other->medical_);
  swap(violence_, other->violence_);
  swap(racy_, other->racy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SafeSearchAnnotation::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LatLongRect::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_LatLongRect_default_instance_._instance.get_mutable()->min_lat_lng_ = const_cast< ::google::type::LatLng*>(
      ::google::type::LatLng::internal_default_instance());
  ::google::cloud::vision::v1::_LatLongRect_default_instance_._instance.get_mutable()->max_lat_lng_ = const_cast< ::google::type::LatLng*>(
      ::google::type::LatLng::internal_default_instance());
}
void LatLongRect::unsafe_arena_set_allocated_min_lat_lng(
    ::google::type::LatLng* min_lat_lng) {
  if (GetArenaNoVirtual() == NULL) {
    delete min_lat_lng_;
  }
  min_lat_lng_ = min_lat_lng;
  if (min_lat_lng) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.LatLongRect.min_lat_lng)
}
void LatLongRect::clear_min_lat_lng() {
  if (GetArenaNoVirtual() == NULL && min_lat_lng_ != NULL) {
    delete min_lat_lng_;
  }
  min_lat_lng_ = NULL;
}
void LatLongRect::unsafe_arena_set_allocated_max_lat_lng(
    ::google::type::LatLng* max_lat_lng) {
  if (GetArenaNoVirtual() == NULL) {
    delete max_lat_lng_;
  }
  max_lat_lng_ = max_lat_lng;
  if (max_lat_lng) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.LatLongRect.max_lat_lng)
}
void LatLongRect::clear_max_lat_lng() {
  if (GetArenaNoVirtual() == NULL && max_lat_lng_ != NULL) {
    delete max_lat_lng_;
  }
  max_lat_lng_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatLongRect::kMinLatLngFieldNumber;
const int LatLongRect::kMaxLatLngFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatLongRect::LatLongRect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_LatLongRect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.LatLongRect)
}
LatLongRect::LatLongRect(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_LatLongRect.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.LatLongRect)
}
LatLongRect::LatLongRect(const LatLongRect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min_lat_lng()) {
    min_lat_lng_ = new ::google::type::LatLng(*from.min_lat_lng_);
  } else {
    min_lat_lng_ = NULL;
  }
  if (from.has_max_lat_lng()) {
    max_lat_lng_ = new ::google::type::LatLng(*from.max_lat_lng_);
  } else {
    max_lat_lng_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.LatLongRect)
}

void LatLongRect::SharedCtor() {
  ::memset(&min_lat_lng_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_lat_lng_) -
      reinterpret_cast<char*>(&min_lat_lng_)) + sizeof(max_lat_lng_));
}

LatLongRect::~LatLongRect() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.LatLongRect)
  SharedDtor();
}

void LatLongRect::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete min_lat_lng_;
  if (this != internal_default_instance()) delete max_lat_lng_;
}

void LatLongRect::ArenaDtor(void* object) {
  LatLongRect* _this = reinterpret_cast< LatLongRect* >(object);
  (void)_this;
}
void LatLongRect::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LatLongRect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LatLongRect::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LatLongRect& LatLongRect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_LatLongRect.base);
  return *internal_default_instance();
}


void LatLongRect::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.LatLongRect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && min_lat_lng_ != NULL) {
    delete min_lat_lng_;
  }
  min_lat_lng_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_lat_lng_ != NULL) {
    delete max_lat_lng_;
  }
  max_lat_lng_ = NULL;
  _internal_metadata_.Clear();
}

bool LatLongRect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.LatLongRect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.type.LatLng min_lat_lng = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_lat_lng()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.type.LatLng max_lat_lng = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_lat_lng()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.LatLongRect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.LatLongRect)
  return false;
#undef DO_
}

void LatLongRect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.LatLongRect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.type.LatLng min_lat_lng = 1;
  if (this->has_min_lat_lng()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_min_lat_lng(), output);
  }

  // .google.type.LatLng max_lat_lng = 2;
  if (this->has_max_lat_lng()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_max_lat_lng(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.LatLongRect)
}

::google::protobuf::uint8* LatLongRect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.LatLongRect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.type.LatLng min_lat_lng = 1;
  if (this->has_min_lat_lng()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_min_lat_lng(), deterministic, target);
  }

  // .google.type.LatLng max_lat_lng = 2;
  if (this->has_max_lat_lng()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_max_lat_lng(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.LatLongRect)
  return target;
}

size_t LatLongRect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.LatLongRect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.type.LatLng min_lat_lng = 1;
  if (this->has_min_lat_lng()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_lat_lng_);
  }

  // .google.type.LatLng max_lat_lng = 2;
  if (this->has_max_lat_lng()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_lat_lng_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LatLongRect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.LatLongRect)
  GOOGLE_DCHECK_NE(&from, this);
  const LatLongRect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatLongRect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.LatLongRect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.LatLongRect)
    MergeFrom(*source);
  }
}

void LatLongRect::MergeFrom(const LatLongRect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.LatLongRect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_min_lat_lng()) {
    mutable_min_lat_lng()->::google::type::LatLng::MergeFrom(from.min_lat_lng());
  }
  if (from.has_max_lat_lng()) {
    mutable_max_lat_lng()->::google::type::LatLng::MergeFrom(from.max_lat_lng());
  }
}

void LatLongRect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.LatLongRect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatLongRect::CopyFrom(const LatLongRect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.LatLongRect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatLongRect::IsInitialized() const {
  return true;
}

void LatLongRect::Swap(LatLongRect* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LatLongRect* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LatLongRect::UnsafeArenaSwap(LatLongRect* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LatLongRect::InternalSwap(LatLongRect* other) {
  using std::swap;
  swap(min_lat_lng_, other->min_lat_lng_);
  swap(max_lat_lng_, other->max_lat_lng_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LatLongRect::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ColorInfo::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_ColorInfo_default_instance_._instance.get_mutable()->color_ = const_cast< ::google::type::Color*>(
      ::google::type::Color::internal_default_instance());
}
void ColorInfo::unsafe_arena_set_allocated_color(
    ::google::type::Color* color) {
  if (GetArenaNoVirtual() == NULL) {
    delete color_;
  }
  color_ = color;
  if (color) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.ColorInfo.color)
}
void ColorInfo::clear_color() {
  if (GetArenaNoVirtual() == NULL && color_ != NULL) {
    delete color_;
  }
  color_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColorInfo::kColorFieldNumber;
const int ColorInfo::kScoreFieldNumber;
const int ColorInfo::kPixelFractionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColorInfo::ColorInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ColorInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.ColorInfo)
}
ColorInfo::ColorInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ColorInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.ColorInfo)
}
ColorInfo::ColorInfo(const ColorInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_color()) {
    color_ = new ::google::type::Color(*from.color_);
  } else {
    color_ = NULL;
  }
  ::memcpy(&score_, &from.score_,
    static_cast<size_t>(reinterpret_cast<char*>(&pixel_fraction_) -
    reinterpret_cast<char*>(&score_)) + sizeof(pixel_fraction_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.ColorInfo)
}

void ColorInfo::SharedCtor() {
  ::memset(&color_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pixel_fraction_) -
      reinterpret_cast<char*>(&color_)) + sizeof(pixel_fraction_));
}

ColorInfo::~ColorInfo() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.ColorInfo)
  SharedDtor();
}

void ColorInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete color_;
}

void ColorInfo::ArenaDtor(void* object) {
  ColorInfo* _this = reinterpret_cast< ColorInfo* >(object);
  (void)_this;
}
void ColorInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ColorInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ColorInfo::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ColorInfo& ColorInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ColorInfo.base);
  return *internal_default_instance();
}


void ColorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.ColorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && color_ != NULL) {
    delete color_;
  }
  color_ = NULL;
  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pixel_fraction_) -
      reinterpret_cast<char*>(&score_)) + sizeof(pixel_fraction_));
  _internal_metadata_.Clear();
}

bool ColorInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.ColorInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.type.Color color = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_color()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pixel_fraction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pixel_fraction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.ColorInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.ColorInfo)
  return false;
#undef DO_
}

void ColorInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.ColorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.type.Color color = 1;
  if (this->has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_color(), output);
  }

  // float score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->score(), output);
  }

  // float pixel_fraction = 3;
  if (this->pixel_fraction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->pixel_fraction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.ColorInfo)
}

::google::protobuf::uint8* ColorInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.ColorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.type.Color color = 1;
  if (this->has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_color(), deterministic, target);
  }

  // float score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->score(), target);
  }

  // float pixel_fraction = 3;
  if (this->pixel_fraction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->pixel_fraction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.ColorInfo)
  return target;
}

size_t ColorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.ColorInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.type.Color color = 1;
  if (this->has_color()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *color_);
  }

  // float score = 2;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  // float pixel_fraction = 3;
  if (this->pixel_fraction() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ColorInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.ColorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ColorInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ColorInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.ColorInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.ColorInfo)
    MergeFrom(*source);
  }
}

void ColorInfo::MergeFrom(const ColorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.ColorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_color()) {
    mutable_color()->::google::type::Color::MergeFrom(from.color());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.pixel_fraction() != 0) {
    set_pixel_fraction(from.pixel_fraction());
  }
}

void ColorInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.ColorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColorInfo::CopyFrom(const ColorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.ColorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColorInfo::IsInitialized() const {
  return true;
}

void ColorInfo::Swap(ColorInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ColorInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ColorInfo::UnsafeArenaSwap(ColorInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ColorInfo::InternalSwap(ColorInfo* other) {
  using std::swap;
  swap(color_, other->color_);
  swap(score_, other->score_);
  swap(pixel_fraction_, other->pixel_fraction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ColorInfo::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DominantColorsAnnotation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DominantColorsAnnotation::kColorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DominantColorsAnnotation::DominantColorsAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_DominantColorsAnnotation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.DominantColorsAnnotation)
}
DominantColorsAnnotation::DominantColorsAnnotation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  colors_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_DominantColorsAnnotation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.DominantColorsAnnotation)
}
DominantColorsAnnotation::DominantColorsAnnotation(const DominantColorsAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      colors_(from.colors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.DominantColorsAnnotation)
}

void DominantColorsAnnotation::SharedCtor() {
}

DominantColorsAnnotation::~DominantColorsAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.DominantColorsAnnotation)
  SharedDtor();
}

void DominantColorsAnnotation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DominantColorsAnnotation::ArenaDtor(void* object) {
  DominantColorsAnnotation* _this = reinterpret_cast< DominantColorsAnnotation* >(object);
  (void)_this;
}
void DominantColorsAnnotation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DominantColorsAnnotation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DominantColorsAnnotation::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DominantColorsAnnotation& DominantColorsAnnotation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_DominantColorsAnnotation.base);
  return *internal_default_instance();
}


void DominantColorsAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.DominantColorsAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  colors_.Clear();
  _internal_metadata_.Clear();
}

bool DominantColorsAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.DominantColorsAnnotation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.ColorInfo colors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_colors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.DominantColorsAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.DominantColorsAnnotation)
  return false;
#undef DO_
}

void DominantColorsAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.DominantColorsAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.ColorInfo colors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->colors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->colors(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.DominantColorsAnnotation)
}

::google::protobuf::uint8* DominantColorsAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.DominantColorsAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.ColorInfo colors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->colors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->colors(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.DominantColorsAnnotation)
  return target;
}

size_t DominantColorsAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.DominantColorsAnnotation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1.ColorInfo colors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->colors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->colors(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DominantColorsAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.DominantColorsAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const DominantColorsAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DominantColorsAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.DominantColorsAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.DominantColorsAnnotation)
    MergeFrom(*source);
  }
}

void DominantColorsAnnotation::MergeFrom(const DominantColorsAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.DominantColorsAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  colors_.MergeFrom(from.colors_);
}

void DominantColorsAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.DominantColorsAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DominantColorsAnnotation::CopyFrom(const DominantColorsAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.DominantColorsAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DominantColorsAnnotation::IsInitialized() const {
  return true;
}

void DominantColorsAnnotation::Swap(DominantColorsAnnotation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DominantColorsAnnotation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DominantColorsAnnotation::UnsafeArenaSwap(DominantColorsAnnotation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DominantColorsAnnotation::InternalSwap(DominantColorsAnnotation* other) {
  using std::swap;
  CastToBase(&colors_)->InternalSwap(CastToBase(&other->colors_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DominantColorsAnnotation::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageProperties::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_ImageProperties_default_instance_._instance.get_mutable()->dominant_colors_ = const_cast< ::google::cloud::vision::v1::DominantColorsAnnotation*>(
      ::google::cloud::vision::v1::DominantColorsAnnotation::internal_default_instance());
}
void ImageProperties::unsafe_arena_set_allocated_dominant_colors(
    ::google::cloud::vision::v1::DominantColorsAnnotation* dominant_colors) {
  if (GetArenaNoVirtual() == NULL) {
    delete dominant_colors_;
  }
  dominant_colors_ = dominant_colors;
  if (dominant_colors) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.ImageProperties.dominant_colors)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageProperties::kDominantColorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageProperties::ImageProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageProperties.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.ImageProperties)
}
ImageProperties::ImageProperties(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageProperties.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.ImageProperties)
}
ImageProperties::ImageProperties(const ImageProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dominant_colors()) {
    dominant_colors_ = new ::google::cloud::vision::v1::DominantColorsAnnotation(*from.dominant_colors_);
  } else {
    dominant_colors_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.ImageProperties)
}

void ImageProperties::SharedCtor() {
  dominant_colors_ = NULL;
}

ImageProperties::~ImageProperties() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.ImageProperties)
  SharedDtor();
}

void ImageProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete dominant_colors_;
}

void ImageProperties::ArenaDtor(void* object) {
  ImageProperties* _this = reinterpret_cast< ImageProperties* >(object);
  (void)_this;
}
void ImageProperties::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ImageProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageProperties::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageProperties& ImageProperties::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageProperties.base);
  return *internal_default_instance();
}


void ImageProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.ImageProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && dominant_colors_ != NULL) {
    delete dominant_colors_;
  }
  dominant_colors_ = NULL;
  _internal_metadata_.Clear();
}

bool ImageProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.ImageProperties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.DominantColorsAnnotation dominant_colors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dominant_colors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.ImageProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.ImageProperties)
  return false;
#undef DO_
}

void ImageProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.ImageProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.DominantColorsAnnotation dominant_colors = 1;
  if (this->has_dominant_colors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_dominant_colors(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.ImageProperties)
}

::google::protobuf::uint8* ImageProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.ImageProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.DominantColorsAnnotation dominant_colors = 1;
  if (this->has_dominant_colors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_dominant_colors(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.ImageProperties)
  return target;
}

size_t ImageProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.ImageProperties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.vision.v1.DominantColorsAnnotation dominant_colors = 1;
  if (this->has_dominant_colors()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dominant_colors_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.ImageProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.ImageProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.ImageProperties)
    MergeFrom(*source);
  }
}

void ImageProperties::MergeFrom(const ImageProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.ImageProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dominant_colors()) {
    mutable_dominant_colors()->::google::cloud::vision::v1::DominantColorsAnnotation::MergeFrom(from.dominant_colors());
  }
}

void ImageProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.ImageProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageProperties::CopyFrom(const ImageProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.ImageProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageProperties::IsInitialized() const {
  return true;
}

void ImageProperties::Swap(ImageProperties* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ImageProperties* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ImageProperties::UnsafeArenaSwap(ImageProperties* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ImageProperties::InternalSwap(ImageProperties* other) {
  using std::swap;
  swap(dominant_colors_, other->dominant_colors_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageProperties::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CropHint::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_CropHint_default_instance_._instance.get_mutable()->bounding_poly_ = const_cast< ::google::cloud::vision::v1::BoundingPoly*>(
      ::google::cloud::vision::v1::BoundingPoly::internal_default_instance());
}
void CropHint::unsafe_arena_set_allocated_bounding_poly(
    ::google::cloud::vision::v1::BoundingPoly* bounding_poly) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = bounding_poly;
  if (bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.CropHint.bounding_poly)
}
void CropHint::clear_bounding_poly() {
  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CropHint::kBoundingPolyFieldNumber;
const int CropHint::kConfidenceFieldNumber;
const int CropHint::kImportanceFractionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CropHint::CropHint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_CropHint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.CropHint)
}
CropHint::CropHint(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_CropHint.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.CropHint)
}
CropHint::CropHint(const CropHint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bounding_poly()) {
    bounding_poly_ = new ::google::cloud::vision::v1::BoundingPoly(*from.bounding_poly_);
  } else {
    bounding_poly_ = NULL;
  }
  ::memcpy(&confidence_, &from.confidence_,
    static_cast<size_t>(reinterpret_cast<char*>(&importance_fraction_) -
    reinterpret_cast<char*>(&confidence_)) + sizeof(importance_fraction_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.CropHint)
}

void CropHint::SharedCtor() {
  ::memset(&bounding_poly_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&importance_fraction_) -
      reinterpret_cast<char*>(&bounding_poly_)) + sizeof(importance_fraction_));
}

CropHint::~CropHint() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.CropHint)
  SharedDtor();
}

void CropHint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete bounding_poly_;
}

void CropHint::ArenaDtor(void* object) {
  CropHint* _this = reinterpret_cast< CropHint* >(object);
  (void)_this;
}
void CropHint::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CropHint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CropHint::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CropHint& CropHint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_CropHint.base);
  return *internal_default_instance();
}


void CropHint::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.CropHint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = NULL;
  ::memset(&confidence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&importance_fraction_) -
      reinterpret_cast<char*>(&confidence_)) + sizeof(importance_fraction_));
  _internal_metadata_.Clear();
}

bool CropHint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.CropHint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounding_poly()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float importance_fraction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &importance_fraction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.CropHint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.CropHint)
  return false;
#undef DO_
}

void CropHint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.CropHint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
  if (this->has_bounding_poly()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_bounding_poly(), output);
  }

  // float confidence = 2;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->confidence(), output);
  }

  // float importance_fraction = 3;
  if (this->importance_fraction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->importance_fraction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.CropHint)
}

::google::protobuf::uint8* CropHint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.CropHint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
  if (this->has_bounding_poly()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_bounding_poly(), deterministic, target);
  }

  // float confidence = 2;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->confidence(), target);
  }

  // float importance_fraction = 3;
  if (this->importance_fraction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->importance_fraction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.CropHint)
  return target;
}

size_t CropHint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.CropHint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
  if (this->has_bounding_poly()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bounding_poly_);
  }

  // float confidence = 2;
  if (this->confidence() != 0) {
    total_size += 1 + 4;
  }

  // float importance_fraction = 3;
  if (this->importance_fraction() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CropHint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.CropHint)
  GOOGLE_DCHECK_NE(&from, this);
  const CropHint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CropHint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.CropHint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.CropHint)
    MergeFrom(*source);
  }
}

void CropHint::MergeFrom(const CropHint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.CropHint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bounding_poly()) {
    mutable_bounding_poly()->::google::cloud::vision::v1::BoundingPoly::MergeFrom(from.bounding_poly());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
  if (from.importance_fraction() != 0) {
    set_importance_fraction(from.importance_fraction());
  }
}

void CropHint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.CropHint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CropHint::CopyFrom(const CropHint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.CropHint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CropHint::IsInitialized() const {
  return true;
}

void CropHint::Swap(CropHint* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CropHint* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CropHint::UnsafeArenaSwap(CropHint* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CropHint::InternalSwap(CropHint* other) {
  using std::swap;
  swap(bounding_poly_, other->bounding_poly_);
  swap(confidence_, other->confidence_);
  swap(importance_fraction_, other->importance_fraction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CropHint::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CropHintsAnnotation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CropHintsAnnotation::kCropHintsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CropHintsAnnotation::CropHintsAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_CropHintsAnnotation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.CropHintsAnnotation)
}
CropHintsAnnotation::CropHintsAnnotation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  crop_hints_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_CropHintsAnnotation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.CropHintsAnnotation)
}
CropHintsAnnotation::CropHintsAnnotation(const CropHintsAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      crop_hints_(from.crop_hints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.CropHintsAnnotation)
}

void CropHintsAnnotation::SharedCtor() {
}

CropHintsAnnotation::~CropHintsAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.CropHintsAnnotation)
  SharedDtor();
}

void CropHintsAnnotation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CropHintsAnnotation::ArenaDtor(void* object) {
  CropHintsAnnotation* _this = reinterpret_cast< CropHintsAnnotation* >(object);
  (void)_this;
}
void CropHintsAnnotation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CropHintsAnnotation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CropHintsAnnotation::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CropHintsAnnotation& CropHintsAnnotation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_CropHintsAnnotation.base);
  return *internal_default_instance();
}


void CropHintsAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.CropHintsAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crop_hints_.Clear();
  _internal_metadata_.Clear();
}

bool CropHintsAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.CropHintsAnnotation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.CropHint crop_hints = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_crop_hints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.CropHintsAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.CropHintsAnnotation)
  return false;
#undef DO_
}

void CropHintsAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.CropHintsAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.CropHint crop_hints = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crop_hints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->crop_hints(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.CropHintsAnnotation)
}

::google::protobuf::uint8* CropHintsAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.CropHintsAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.CropHint crop_hints = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crop_hints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->crop_hints(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.CropHintsAnnotation)
  return target;
}

size_t CropHintsAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.CropHintsAnnotation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1.CropHint crop_hints = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->crop_hints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->crop_hints(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CropHintsAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.CropHintsAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const CropHintsAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CropHintsAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.CropHintsAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.CropHintsAnnotation)
    MergeFrom(*source);
  }
}

void CropHintsAnnotation::MergeFrom(const CropHintsAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.CropHintsAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  crop_hints_.MergeFrom(from.crop_hints_);
}

void CropHintsAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.CropHintsAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CropHintsAnnotation::CopyFrom(const CropHintsAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.CropHintsAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CropHintsAnnotation::IsInitialized() const {
  return true;
}

void CropHintsAnnotation::Swap(CropHintsAnnotation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CropHintsAnnotation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CropHintsAnnotation::UnsafeArenaSwap(CropHintsAnnotation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CropHintsAnnotation::InternalSwap(CropHintsAnnotation* other) {
  using std::swap;
  CastToBase(&crop_hints_)->InternalSwap(CastToBase(&other->crop_hints_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CropHintsAnnotation::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CropHintsParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CropHintsParams::kAspectRatiosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CropHintsParams::CropHintsParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_CropHintsParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.CropHintsParams)
}
CropHintsParams::CropHintsParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  aspect_ratios_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_CropHintsParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.CropHintsParams)
}
CropHintsParams::CropHintsParams(const CropHintsParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      aspect_ratios_(from.aspect_ratios_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.CropHintsParams)
}

void CropHintsParams::SharedCtor() {
}

CropHintsParams::~CropHintsParams() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.CropHintsParams)
  SharedDtor();
}

void CropHintsParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CropHintsParams::ArenaDtor(void* object) {
  CropHintsParams* _this = reinterpret_cast< CropHintsParams* >(object);
  (void)_this;
}
void CropHintsParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CropHintsParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CropHintsParams::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CropHintsParams& CropHintsParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_CropHintsParams.base);
  return *internal_default_instance();
}


void CropHintsParams::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.CropHintsParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aspect_ratios_.Clear();
  _internal_metadata_.Clear();
}

bool CropHintsParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.CropHintsParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float aspect_ratios = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_aspect_ratios())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_aspect_ratios())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.CropHintsParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.CropHintsParams)
  return false;
#undef DO_
}

void CropHintsParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.CropHintsParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float aspect_ratios = 1;
  if (this->aspect_ratios_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _aspect_ratios_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->aspect_ratios().data(), this->aspect_ratios_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.CropHintsParams)
}

::google::protobuf::uint8* CropHintsParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.CropHintsParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float aspect_ratios = 1;
  if (this->aspect_ratios_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _aspect_ratios_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->aspect_ratios_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.CropHintsParams)
  return target;
}

size_t CropHintsParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.CropHintsParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float aspect_ratios = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->aspect_ratios_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _aspect_ratios_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CropHintsParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.CropHintsParams)
  GOOGLE_DCHECK_NE(&from, this);
  const CropHintsParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CropHintsParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.CropHintsParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.CropHintsParams)
    MergeFrom(*source);
  }
}

void CropHintsParams::MergeFrom(const CropHintsParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.CropHintsParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  aspect_ratios_.MergeFrom(from.aspect_ratios_);
}

void CropHintsParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.CropHintsParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CropHintsParams::CopyFrom(const CropHintsParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.CropHintsParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CropHintsParams::IsInitialized() const {
  return true;
}

void CropHintsParams::Swap(CropHintsParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CropHintsParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CropHintsParams::UnsafeArenaSwap(CropHintsParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CropHintsParams::InternalSwap(CropHintsParams* other) {
  using std::swap;
  aspect_ratios_.InternalSwap(&other->aspect_ratios_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CropHintsParams::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WebDetectionParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WebDetectionParams::kIncludeGeoResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WebDetectionParams::WebDetectionParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_WebDetectionParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.WebDetectionParams)
}
WebDetectionParams::WebDetectionParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_WebDetectionParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.WebDetectionParams)
}
WebDetectionParams::WebDetectionParams(const WebDetectionParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  include_geo_results_ = from.include_geo_results_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.WebDetectionParams)
}

void WebDetectionParams::SharedCtor() {
  include_geo_results_ = false;
}

WebDetectionParams::~WebDetectionParams() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.WebDetectionParams)
  SharedDtor();
}

void WebDetectionParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void WebDetectionParams::ArenaDtor(void* object) {
  WebDetectionParams* _this = reinterpret_cast< WebDetectionParams* >(object);
  (void)_this;
}
void WebDetectionParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WebDetectionParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WebDetectionParams::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WebDetectionParams& WebDetectionParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_WebDetectionParams.base);
  return *internal_default_instance();
}


void WebDetectionParams::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.WebDetectionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  include_geo_results_ = false;
  _internal_metadata_.Clear();
}

bool WebDetectionParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.WebDetectionParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool include_geo_results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_geo_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.WebDetectionParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.WebDetectionParams)
  return false;
#undef DO_
}

void WebDetectionParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.WebDetectionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool include_geo_results = 2;
  if (this->include_geo_results() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->include_geo_results(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.WebDetectionParams)
}

::google::protobuf::uint8* WebDetectionParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.WebDetectionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool include_geo_results = 2;
  if (this->include_geo_results() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->include_geo_results(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.WebDetectionParams)
  return target;
}

size_t WebDetectionParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.WebDetectionParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool include_geo_results = 2;
  if (this->include_geo_results() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WebDetectionParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.WebDetectionParams)
  GOOGLE_DCHECK_NE(&from, this);
  const WebDetectionParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WebDetectionParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.WebDetectionParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.WebDetectionParams)
    MergeFrom(*source);
  }
}

void WebDetectionParams::MergeFrom(const WebDetectionParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.WebDetectionParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.include_geo_results() != 0) {
    set_include_geo_results(from.include_geo_results());
  }
}

void WebDetectionParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.WebDetectionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebDetectionParams::CopyFrom(const WebDetectionParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.WebDetectionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebDetectionParams::IsInitialized() const {
  return true;
}

void WebDetectionParams::Swap(WebDetectionParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WebDetectionParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void WebDetectionParams::UnsafeArenaSwap(WebDetectionParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WebDetectionParams::InternalSwap(WebDetectionParams* other) {
  using std::swap;
  swap(include_geo_results_, other->include_geo_results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WebDetectionParams::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageContext::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_ImageContext_default_instance_._instance.get_mutable()->lat_long_rect_ = const_cast< ::google::cloud::vision::v1::LatLongRect*>(
      ::google::cloud::vision::v1::LatLongRect::internal_default_instance());
  ::google::cloud::vision::v1::_ImageContext_default_instance_._instance.get_mutable()->crop_hints_params_ = const_cast< ::google::cloud::vision::v1::CropHintsParams*>(
      ::google::cloud::vision::v1::CropHintsParams::internal_default_instance());
  ::google::cloud::vision::v1::_ImageContext_default_instance_._instance.get_mutable()->web_detection_params_ = const_cast< ::google::cloud::vision::v1::WebDetectionParams*>(
      ::google::cloud::vision::v1::WebDetectionParams::internal_default_instance());
}
void ImageContext::unsafe_arena_set_allocated_lat_long_rect(
    ::google::cloud::vision::v1::LatLongRect* lat_long_rect) {
  if (GetArenaNoVirtual() == NULL) {
    delete lat_long_rect_;
  }
  lat_long_rect_ = lat_long_rect;
  if (lat_long_rect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.ImageContext.lat_long_rect)
}
void ImageContext::unsafe_arena_set_allocated_crop_hints_params(
    ::google::cloud::vision::v1::CropHintsParams* crop_hints_params) {
  if (GetArenaNoVirtual() == NULL) {
    delete crop_hints_params_;
  }
  crop_hints_params_ = crop_hints_params;
  if (crop_hints_params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.ImageContext.crop_hints_params)
}
void ImageContext::unsafe_arena_set_allocated_web_detection_params(
    ::google::cloud::vision::v1::WebDetectionParams* web_detection_params) {
  if (GetArenaNoVirtual() == NULL) {
    delete web_detection_params_;
  }
  web_detection_params_ = web_detection_params;
  if (web_detection_params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.ImageContext.web_detection_params)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageContext::kLatLongRectFieldNumber;
const int ImageContext::kLanguageHintsFieldNumber;
const int ImageContext::kCropHintsParamsFieldNumber;
const int ImageContext::kWebDetectionParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageContext::ImageContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageContext.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.ImageContext)
}
ImageContext::ImageContext(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  language_hints_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageContext.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.ImageContext)
}
ImageContext::ImageContext(const ImageContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      language_hints_(from.language_hints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lat_long_rect()) {
    lat_long_rect_ = new ::google::cloud::vision::v1::LatLongRect(*from.lat_long_rect_);
  } else {
    lat_long_rect_ = NULL;
  }
  if (from.has_crop_hints_params()) {
    crop_hints_params_ = new ::google::cloud::vision::v1::CropHintsParams(*from.crop_hints_params_);
  } else {
    crop_hints_params_ = NULL;
  }
  if (from.has_web_detection_params()) {
    web_detection_params_ = new ::google::cloud::vision::v1::WebDetectionParams(*from.web_detection_params_);
  } else {
    web_detection_params_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.ImageContext)
}

void ImageContext::SharedCtor() {
  ::memset(&lat_long_rect_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&web_detection_params_) -
      reinterpret_cast<char*>(&lat_long_rect_)) + sizeof(web_detection_params_));
}

ImageContext::~ImageContext() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.ImageContext)
  SharedDtor();
}

void ImageContext::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete lat_long_rect_;
  if (this != internal_default_instance()) delete crop_hints_params_;
  if (this != internal_default_instance()) delete web_detection_params_;
}

void ImageContext::ArenaDtor(void* object) {
  ImageContext* _this = reinterpret_cast< ImageContext* >(object);
  (void)_this;
}
void ImageContext::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ImageContext::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageContext::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageContext& ImageContext::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageContext.base);
  return *internal_default_instance();
}


void ImageContext::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.ImageContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  language_hints_.Clear();
  if (GetArenaNoVirtual() == NULL && lat_long_rect_ != NULL) {
    delete lat_long_rect_;
  }
  lat_long_rect_ = NULL;
  if (GetArenaNoVirtual() == NULL && crop_hints_params_ != NULL) {
    delete crop_hints_params_;
  }
  crop_hints_params_ = NULL;
  if (GetArenaNoVirtual() == NULL && web_detection_params_ != NULL) {
    delete web_detection_params_;
  }
  web_detection_params_ = NULL;
  _internal_metadata_.Clear();
}

bool ImageContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.ImageContext)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.LatLongRect lat_long_rect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lat_long_rect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string language_hints = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_language_hints()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_hints(this->language_hints_size() - 1).data(),
            static_cast<int>(this->language_hints(this->language_hints_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.ImageContext.language_hints"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.CropHintsParams crop_hints_params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_crop_hints_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.WebDetectionParams web_detection_params = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_web_detection_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.ImageContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.ImageContext)
  return false;
#undef DO_
}

void ImageContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.ImageContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.LatLongRect lat_long_rect = 1;
  if (this->has_lat_long_rect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_lat_long_rect(), output);
  }

  // repeated string language_hints = 2;
  for (int i = 0, n = this->language_hints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_hints(i).data(), static_cast<int>(this->language_hints(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.ImageContext.language_hints");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->language_hints(i), output);
  }

  // .google.cloud.vision.v1.CropHintsParams crop_hints_params = 4;
  if (this->has_crop_hints_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_crop_hints_params(), output);
  }

  // .google.cloud.vision.v1.WebDetectionParams web_detection_params = 6;
  if (this->has_web_detection_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_web_detection_params(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.ImageContext)
}

::google::protobuf::uint8* ImageContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.ImageContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.LatLongRect lat_long_rect = 1;
  if (this->has_lat_long_rect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_lat_long_rect(), deterministic, target);
  }

  // repeated string language_hints = 2;
  for (int i = 0, n = this->language_hints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_hints(i).data(), static_cast<int>(this->language_hints(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.ImageContext.language_hints");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->language_hints(i), target);
  }

  // .google.cloud.vision.v1.CropHintsParams crop_hints_params = 4;
  if (this->has_crop_hints_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_crop_hints_params(), deterministic, target);
  }

  // .google.cloud.vision.v1.WebDetectionParams web_detection_params = 6;
  if (this->has_web_detection_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_web_detection_params(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.ImageContext)
  return target;
}

size_t ImageContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.ImageContext)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string language_hints = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->language_hints_size());
  for (int i = 0, n = this->language_hints_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->language_hints(i));
  }

  // .google.cloud.vision.v1.LatLongRect lat_long_rect = 1;
  if (this->has_lat_long_rect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lat_long_rect_);
  }

  // .google.cloud.vision.v1.CropHintsParams crop_hints_params = 4;
  if (this->has_crop_hints_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *crop_hints_params_);
  }

  // .google.cloud.vision.v1.WebDetectionParams web_detection_params = 6;
  if (this->has_web_detection_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *web_detection_params_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.ImageContext)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.ImageContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.ImageContext)
    MergeFrom(*source);
  }
}

void ImageContext::MergeFrom(const ImageContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.ImageContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  language_hints_.MergeFrom(from.language_hints_);
  if (from.has_lat_long_rect()) {
    mutable_lat_long_rect()->::google::cloud::vision::v1::LatLongRect::MergeFrom(from.lat_long_rect());
  }
  if (from.has_crop_hints_params()) {
    mutable_crop_hints_params()->::google::cloud::vision::v1::CropHintsParams::MergeFrom(from.crop_hints_params());
  }
  if (from.has_web_detection_params()) {
    mutable_web_detection_params()->::google::cloud::vision::v1::WebDetectionParams::MergeFrom(from.web_detection_params());
  }
}

void ImageContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.ImageContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageContext::CopyFrom(const ImageContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.ImageContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageContext::IsInitialized() const {
  return true;
}

void ImageContext::Swap(ImageContext* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ImageContext* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ImageContext::UnsafeArenaSwap(ImageContext* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ImageContext::InternalSwap(ImageContext* other) {
  using std::swap;
  language_hints_.InternalSwap(CastToBase(&other->language_hints_));
  swap(lat_long_rect_, other->lat_long_rect_);
  swap(crop_hints_params_, other->crop_hints_params_);
  swap(web_detection_params_, other->web_detection_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageContext::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AnnotateImageRequest::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_AnnotateImageRequest_default_instance_._instance.get_mutable()->image_ = const_cast< ::google::cloud::vision::v1::Image*>(
      ::google::cloud::vision::v1::Image::internal_default_instance());
  ::google::cloud::vision::v1::_AnnotateImageRequest_default_instance_._instance.get_mutable()->image_context_ = const_cast< ::google::cloud::vision::v1::ImageContext*>(
      ::google::cloud::vision::v1::ImageContext::internal_default_instance());
}
void AnnotateImageRequest::unsafe_arena_set_allocated_image(
    ::google::cloud::vision::v1::Image* image) {
  if (GetArenaNoVirtual() == NULL) {
    delete image_;
  }
  image_ = image;
  if (image) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageRequest.image)
}
void AnnotateImageRequest::unsafe_arena_set_allocated_image_context(
    ::google::cloud::vision::v1::ImageContext* image_context) {
  if (GetArenaNoVirtual() == NULL) {
    delete image_context_;
  }
  image_context_ = image_context;
  if (image_context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageRequest.image_context)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnnotateImageRequest::kImageFieldNumber;
const int AnnotateImageRequest::kFeaturesFieldNumber;
const int AnnotateImageRequest::kImageContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnnotateImageRequest::AnnotateImageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AnnotateImageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.AnnotateImageRequest)
}
AnnotateImageRequest::AnnotateImageRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  features_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AnnotateImageRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.AnnotateImageRequest)
}
AnnotateImageRequest::AnnotateImageRequest(const AnnotateImageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      features_(from.features_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_image()) {
    image_ = new ::google::cloud::vision::v1::Image(*from.image_);
  } else {
    image_ = NULL;
  }
  if (from.has_image_context()) {
    image_context_ = new ::google::cloud::vision::v1::ImageContext(*from.image_context_);
  } else {
    image_context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.AnnotateImageRequest)
}

void AnnotateImageRequest::SharedCtor() {
  ::memset(&image_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_context_) -
      reinterpret_cast<char*>(&image_)) + sizeof(image_context_));
}

AnnotateImageRequest::~AnnotateImageRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.AnnotateImageRequest)
  SharedDtor();
}

void AnnotateImageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete image_;
  if (this != internal_default_instance()) delete image_context_;
}

void AnnotateImageRequest::ArenaDtor(void* object) {
  AnnotateImageRequest* _this = reinterpret_cast< AnnotateImageRequest* >(object);
  (void)_this;
}
void AnnotateImageRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AnnotateImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AnnotateImageRequest::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnnotateImageRequest& AnnotateImageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AnnotateImageRequest.base);
  return *internal_default_instance();
}


void AnnotateImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.AnnotateImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  if (GetArenaNoVirtual() == NULL && image_context_ != NULL) {
    delete image_context_;
  }
  image_context_ = NULL;
  _internal_metadata_.Clear();
}

bool AnnotateImageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.AnnotateImageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.Image image = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.Feature features = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_features()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.ImageContext image_context = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.AnnotateImageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.AnnotateImageRequest)
  return false;
#undef DO_
}

void AnnotateImageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.AnnotateImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.Image image = 1;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_image(), output);
  }

  // repeated .google.cloud.vision.v1.Feature features = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->features_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->features(static_cast<int>(i)),
      output);
  }

  // .google.cloud.vision.v1.ImageContext image_context = 3;
  if (this->has_image_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_image_context(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.AnnotateImageRequest)
}

::google::protobuf::uint8* AnnotateImageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.AnnotateImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.Image image = 1;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_image(), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.Feature features = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->features_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->features(static_cast<int>(i)), deterministic, target);
  }

  // .google.cloud.vision.v1.ImageContext image_context = 3;
  if (this->has_image_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_image_context(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.AnnotateImageRequest)
  return target;
}

size_t AnnotateImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.AnnotateImageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1.Feature features = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->features_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->features(static_cast<int>(i)));
    }
  }

  // .google.cloud.vision.v1.Image image = 1;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *image_);
  }

  // .google.cloud.vision.v1.ImageContext image_context = 3;
  if (this->has_image_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *image_context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnnotateImageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.AnnotateImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AnnotateImageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnnotateImageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.AnnotateImageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.AnnotateImageRequest)
    MergeFrom(*source);
  }
}

void AnnotateImageRequest::MergeFrom(const AnnotateImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.AnnotateImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
  if (from.has_image()) {
    mutable_image()->::google::cloud::vision::v1::Image::MergeFrom(from.image());
  }
  if (from.has_image_context()) {
    mutable_image_context()->::google::cloud::vision::v1::ImageContext::MergeFrom(from.image_context());
  }
}

void AnnotateImageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.AnnotateImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnnotateImageRequest::CopyFrom(const AnnotateImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.AnnotateImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnnotateImageRequest::IsInitialized() const {
  return true;
}

void AnnotateImageRequest::Swap(AnnotateImageRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AnnotateImageRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AnnotateImageRequest::UnsafeArenaSwap(AnnotateImageRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AnnotateImageRequest::InternalSwap(AnnotateImageRequest* other) {
  using std::swap;
  CastToBase(&features_)->InternalSwap(CastToBase(&other->features_));
  swap(image_, other->image_);
  swap(image_context_, other->image_context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AnnotateImageRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageAnnotationContext::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageAnnotationContext::kUriFieldNumber;
const int ImageAnnotationContext::kPageNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageAnnotationContext::ImageAnnotationContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageAnnotationContext.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.ImageAnnotationContext)
}
ImageAnnotationContext::ImageAnnotationContext(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageAnnotationContext.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.ImageAnnotationContext)
}
ImageAnnotationContext::ImageAnnotationContext(const ImageAnnotationContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri(),
      GetArenaNoVirtual());
  }
  page_number_ = from.page_number_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.ImageAnnotationContext)
}

void ImageAnnotationContext::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_number_ = 0;
}

ImageAnnotationContext::~ImageAnnotationContext() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.ImageAnnotationContext)
  SharedDtor();
}

void ImageAnnotationContext::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImageAnnotationContext::ArenaDtor(void* object) {
  ImageAnnotationContext* _this = reinterpret_cast< ImageAnnotationContext* >(object);
  (void)_this;
}
void ImageAnnotationContext::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ImageAnnotationContext::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageAnnotationContext::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageAnnotationContext& ImageAnnotationContext::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_ImageAnnotationContext.base);
  return *internal_default_instance();
}


void ImageAnnotationContext::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.ImageAnnotationContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_number_ = 0;
  _internal_metadata_.Clear();
}

bool ImageAnnotationContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.ImageAnnotationContext)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.ImageAnnotationContext.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.ImageAnnotationContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.ImageAnnotationContext)
  return false;
#undef DO_
}

void ImageAnnotationContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.ImageAnnotationContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.ImageAnnotationContext.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  // int32 page_number = 2;
  if (this->page_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.ImageAnnotationContext)
}

::google::protobuf::uint8* ImageAnnotationContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.ImageAnnotationContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.ImageAnnotationContext.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  // int32 page_number = 2;
  if (this->page_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.ImageAnnotationContext)
  return target;
}

size_t ImageAnnotationContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.ImageAnnotationContext)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // int32 page_number = 2;
  if (this->page_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageAnnotationContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.ImageAnnotationContext)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageAnnotationContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageAnnotationContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.ImageAnnotationContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.ImageAnnotationContext)
    MergeFrom(*source);
  }
}

void ImageAnnotationContext::MergeFrom(const ImageAnnotationContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.ImageAnnotationContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {
    set_uri(from.uri());
  }
  if (from.page_number() != 0) {
    set_page_number(from.page_number());
  }
}

void ImageAnnotationContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.ImageAnnotationContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageAnnotationContext::CopyFrom(const ImageAnnotationContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.ImageAnnotationContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageAnnotationContext::IsInitialized() const {
  return true;
}

void ImageAnnotationContext::Swap(ImageAnnotationContext* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ImageAnnotationContext* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ImageAnnotationContext::UnsafeArenaSwap(ImageAnnotationContext* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ImageAnnotationContext::InternalSwap(ImageAnnotationContext* other) {
  using std::swap;
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_number_, other->page_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageAnnotationContext::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AnnotateImageResponse::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_AnnotateImageResponse_default_instance_._instance.get_mutable()->full_text_annotation_ = const_cast< ::google::cloud::vision::v1::TextAnnotation*>(
      ::google::cloud::vision::v1::TextAnnotation::internal_default_instance());
  ::google::cloud::vision::v1::_AnnotateImageResponse_default_instance_._instance.get_mutable()->safe_search_annotation_ = const_cast< ::google::cloud::vision::v1::SafeSearchAnnotation*>(
      ::google::cloud::vision::v1::SafeSearchAnnotation::internal_default_instance());
  ::google::cloud::vision::v1::_AnnotateImageResponse_default_instance_._instance.get_mutable()->image_properties_annotation_ = const_cast< ::google::cloud::vision::v1::ImageProperties*>(
      ::google::cloud::vision::v1::ImageProperties::internal_default_instance());
  ::google::cloud::vision::v1::_AnnotateImageResponse_default_instance_._instance.get_mutable()->crop_hints_annotation_ = const_cast< ::google::cloud::vision::v1::CropHintsAnnotation*>(
      ::google::cloud::vision::v1::CropHintsAnnotation::internal_default_instance());
  ::google::cloud::vision::v1::_AnnotateImageResponse_default_instance_._instance.get_mutable()->web_detection_ = const_cast< ::google::cloud::vision::v1::WebDetection*>(
      ::google::cloud::vision::v1::WebDetection::internal_default_instance());
  ::google::cloud::vision::v1::_AnnotateImageResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
  ::google::cloud::vision::v1::_AnnotateImageResponse_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::cloud::vision::v1::ImageAnnotationContext*>(
      ::google::cloud::vision::v1::ImageAnnotationContext::internal_default_instance());
}
void AnnotateImageResponse::unsafe_arena_set_allocated_full_text_annotation(
    ::google::cloud::vision::v1::TextAnnotation* full_text_annotation) {
  if (GetArenaNoVirtual() == NULL) {
    delete full_text_annotation_;
  }
  full_text_annotation_ = full_text_annotation;
  if (full_text_annotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.full_text_annotation)
}
void AnnotateImageResponse::clear_full_text_annotation() {
  if (GetArenaNoVirtual() == NULL && full_text_annotation_ != NULL) {
    delete full_text_annotation_;
  }
  full_text_annotation_ = NULL;
}
void AnnotateImageResponse::unsafe_arena_set_allocated_safe_search_annotation(
    ::google::cloud::vision::v1::SafeSearchAnnotation* safe_search_annotation) {
  if (GetArenaNoVirtual() == NULL) {
    delete safe_search_annotation_;
  }
  safe_search_annotation_ = safe_search_annotation;
  if (safe_search_annotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.safe_search_annotation)
}
void AnnotateImageResponse::unsafe_arena_set_allocated_image_properties_annotation(
    ::google::cloud::vision::v1::ImageProperties* image_properties_annotation) {
  if (GetArenaNoVirtual() == NULL) {
    delete image_properties_annotation_;
  }
  image_properties_annotation_ = image_properties_annotation;
  if (image_properties_annotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.image_properties_annotation)
}
void AnnotateImageResponse::unsafe_arena_set_allocated_crop_hints_annotation(
    ::google::cloud::vision::v1::CropHintsAnnotation* crop_hints_annotation) {
  if (GetArenaNoVirtual() == NULL) {
    delete crop_hints_annotation_;
  }
  crop_hints_annotation_ = crop_hints_annotation;
  if (crop_hints_annotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.crop_hints_annotation)
}
void AnnotateImageResponse::unsafe_arena_set_allocated_web_detection(
    ::google::cloud::vision::v1::WebDetection* web_detection) {
  if (GetArenaNoVirtual() == NULL) {
    delete web_detection_;
  }
  web_detection_ = web_detection;
  if (web_detection) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.web_detection)
}
void AnnotateImageResponse::clear_web_detection() {
  if (GetArenaNoVirtual() == NULL && web_detection_ != NULL) {
    delete web_detection_;
  }
  web_detection_ = NULL;
}
void AnnotateImageResponse::unsafe_arena_set_allocated_error(
    ::google::rpc::Status* error) {
  if (GetArenaNoVirtual() == NULL) {
    delete error_;
  }
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.error)
}
void AnnotateImageResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
void AnnotateImageResponse::unsafe_arena_set_allocated_context(
    ::google::cloud::vision::v1::ImageAnnotationContext* context) {
  if (GetArenaNoVirtual() == NULL) {
    delete context_;
  }
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.context)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnnotateImageResponse::kFaceAnnotationsFieldNumber;
const int AnnotateImageResponse::kLandmarkAnnotationsFieldNumber;
const int AnnotateImageResponse::kLogoAnnotationsFieldNumber;
const int AnnotateImageResponse::kLabelAnnotationsFieldNumber;
const int AnnotateImageResponse::kLocalizedObjectAnnotationsFieldNumber;
const int AnnotateImageResponse::kTextAnnotationsFieldNumber;
const int AnnotateImageResponse::kFullTextAnnotationFieldNumber;
const int AnnotateImageResponse::kSafeSearchAnnotationFieldNumber;
const int AnnotateImageResponse::kImagePropertiesAnnotationFieldNumber;
const int AnnotateImageResponse::kCropHintsAnnotationFieldNumber;
const int AnnotateImageResponse::kWebDetectionFieldNumber;
const int AnnotateImageResponse::kErrorFieldNumber;
const int AnnotateImageResponse::kContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnnotateImageResponse::AnnotateImageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AnnotateImageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.AnnotateImageResponse)
}
AnnotateImageResponse::AnnotateImageResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  face_annotations_(arena),
  landmark_annotations_(arena),
  logo_annotations_(arena),
  label_annotations_(arena),
  text_annotations_(arena),
  localized_object_annotations_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AnnotateImageResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.AnnotateImageResponse)
}
AnnotateImageResponse::AnnotateImageResponse(const AnnotateImageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      face_annotations_(from.face_annotations_),
      landmark_annotations_(from.landmark_annotations_),
      logo_annotations_(from.logo_annotations_),
      label_annotations_(from.label_annotations_),
      text_annotations_(from.text_annotations_),
      localized_object_annotations_(from.localized_object_annotations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_safe_search_annotation()) {
    safe_search_annotation_ = new ::google::cloud::vision::v1::SafeSearchAnnotation(*from.safe_search_annotation_);
  } else {
    safe_search_annotation_ = NULL;
  }
  if (from.has_image_properties_annotation()) {
    image_properties_annotation_ = new ::google::cloud::vision::v1::ImageProperties(*from.image_properties_annotation_);
  } else {
    image_properties_annotation_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::google::rpc::Status(*from.error_);
  } else {
    error_ = NULL;
  }
  if (from.has_crop_hints_annotation()) {
    crop_hints_annotation_ = new ::google::cloud::vision::v1::CropHintsAnnotation(*from.crop_hints_annotation_);
  } else {
    crop_hints_annotation_ = NULL;
  }
  if (from.has_full_text_annotation()) {
    full_text_annotation_ = new ::google::cloud::vision::v1::TextAnnotation(*from.full_text_annotation_);
  } else {
    full_text_annotation_ = NULL;
  }
  if (from.has_web_detection()) {
    web_detection_ = new ::google::cloud::vision::v1::WebDetection(*from.web_detection_);
  } else {
    web_detection_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::cloud::vision::v1::ImageAnnotationContext(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.AnnotateImageResponse)
}

void AnnotateImageResponse::SharedCtor() {
  ::memset(&safe_search_annotation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&context_) -
      reinterpret_cast<char*>(&safe_search_annotation_)) + sizeof(context_));
}

AnnotateImageResponse::~AnnotateImageResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.AnnotateImageResponse)
  SharedDtor();
}

void AnnotateImageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete safe_search_annotation_;
  if (this != internal_default_instance()) delete image_properties_annotation_;
  if (this != internal_default_instance()) delete error_;
  if (this != internal_default_instance()) delete crop_hints_annotation_;
  if (this != internal_default_instance()) delete full_text_annotation_;
  if (this != internal_default_instance()) delete web_detection_;
  if (this != internal_default_instance()) delete context_;
}

void AnnotateImageResponse::ArenaDtor(void* object) {
  AnnotateImageResponse* _this = reinterpret_cast< AnnotateImageResponse* >(object);
  (void)_this;
}
void AnnotateImageResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AnnotateImageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AnnotateImageResponse::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnnotateImageResponse& AnnotateImageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AnnotateImageResponse.base);
  return *internal_default_instance();
}


void AnnotateImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.AnnotateImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  face_annotations_.Clear();
  landmark_annotations_.Clear();
  logo_annotations_.Clear();
  label_annotations_.Clear();
  text_annotations_.Clear();
  localized_object_annotations_.Clear();
  if (GetArenaNoVirtual() == NULL && safe_search_annotation_ != NULL) {
    delete safe_search_annotation_;
  }
  safe_search_annotation_ = NULL;
  if (GetArenaNoVirtual() == NULL && image_properties_annotation_ != NULL) {
    delete image_properties_annotation_;
  }
  image_properties_annotation_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  if (GetArenaNoVirtual() == NULL && crop_hints_annotation_ != NULL) {
    delete crop_hints_annotation_;
  }
  crop_hints_annotation_ = NULL;
  if (GetArenaNoVirtual() == NULL && full_text_annotation_ != NULL) {
    delete full_text_annotation_;
  }
  full_text_annotation_ = NULL;
  if (GetArenaNoVirtual() == NULL && web_detection_ != NULL) {
    delete web_detection_;
  }
  web_detection_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  _internal_metadata_.Clear();
}

bool AnnotateImageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.AnnotateImageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.FaceAnnotation face_annotations = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_face_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.EntityAnnotation landmark_annotations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_landmark_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.EntityAnnotation logo_annotations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_logo_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.EntityAnnotation label_annotations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_label_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.EntityAnnotation text_annotations = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_text_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.SafeSearchAnnotation safe_search_annotation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_safe_search_annotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.ImageProperties image_properties_annotation = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image_properties_annotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status error = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.CropHintsAnnotation crop_hints_annotation = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_crop_hints_annotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.TextAnnotation full_text_annotation = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_full_text_annotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.WebDetection web_detection = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_web_detection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.ImageAnnotationContext context = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.LocalizedObjectAnnotation localized_object_annotations = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_localized_object_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.AnnotateImageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.AnnotateImageResponse)
  return false;
#undef DO_
}

void AnnotateImageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.AnnotateImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.FaceAnnotation face_annotations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->face_annotations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->face_annotations(static_cast<int>(i)),
      output);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation landmark_annotations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->landmark_annotations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->landmark_annotations(static_cast<int>(i)),
      output);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation logo_annotations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logo_annotations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->logo_annotations(static_cast<int>(i)),
      output);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation label_annotations = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->label_annotations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->label_annotations(static_cast<int>(i)),
      output);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation text_annotations = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->text_annotations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->text_annotations(static_cast<int>(i)),
      output);
  }

  // .google.cloud.vision.v1.SafeSearchAnnotation safe_search_annotation = 6;
  if (this->has_safe_search_annotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_safe_search_annotation(), output);
  }

  // .google.cloud.vision.v1.ImageProperties image_properties_annotation = 8;
  if (this->has_image_properties_annotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_image_properties_annotation(), output);
  }

  // .google.rpc.Status error = 9;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_error(), output);
  }

  // .google.cloud.vision.v1.CropHintsAnnotation crop_hints_annotation = 11;
  if (this->has_crop_hints_annotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_crop_hints_annotation(), output);
  }

  // .google.cloud.vision.v1.TextAnnotation full_text_annotation = 12;
  if (this->has_full_text_annotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_full_text_annotation(), output);
  }

  // .google.cloud.vision.v1.WebDetection web_detection = 13;
  if (this->has_web_detection()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_web_detection(), output);
  }

  // .google.cloud.vision.v1.ImageAnnotationContext context = 21;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_context(), output);
  }

  // repeated .google.cloud.vision.v1.LocalizedObjectAnnotation localized_object_annotations = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->localized_object_annotations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22,
      this->localized_object_annotations(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.AnnotateImageResponse)
}

::google::protobuf::uint8* AnnotateImageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.AnnotateImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.FaceAnnotation face_annotations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->face_annotations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->face_annotations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation landmark_annotations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->landmark_annotations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->landmark_annotations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation logo_annotations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logo_annotations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->logo_annotations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation label_annotations = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->label_annotations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->label_annotations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation text_annotations = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->text_annotations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->text_annotations(static_cast<int>(i)), deterministic, target);
  }

  // .google.cloud.vision.v1.SafeSearchAnnotation safe_search_annotation = 6;
  if (this->has_safe_search_annotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_safe_search_annotation(), deterministic, target);
  }

  // .google.cloud.vision.v1.ImageProperties image_properties_annotation = 8;
  if (this->has_image_properties_annotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_image_properties_annotation(), deterministic, target);
  }

  // .google.rpc.Status error = 9;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_error(), deterministic, target);
  }

  // .google.cloud.vision.v1.CropHintsAnnotation crop_hints_annotation = 11;
  if (this->has_crop_hints_annotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_crop_hints_annotation(), deterministic, target);
  }

  // .google.cloud.vision.v1.TextAnnotation full_text_annotation = 12;
  if (this->has_full_text_annotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_full_text_annotation(), deterministic, target);
  }

  // .google.cloud.vision.v1.WebDetection web_detection = 13;
  if (this->has_web_detection()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_web_detection(), deterministic, target);
  }

  // .google.cloud.vision.v1.ImageAnnotationContext context = 21;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_context(), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.LocalizedObjectAnnotation localized_object_annotations = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->localized_object_annotations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->localized_object_annotations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.AnnotateImageResponse)
  return target;
}

size_t AnnotateImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.AnnotateImageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1.FaceAnnotation face_annotations = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->face_annotations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->face_annotations(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation landmark_annotations = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->landmark_annotations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->landmark_annotations(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation logo_annotations = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->logo_annotations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->logo_annotations(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation label_annotations = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->label_annotations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->label_annotations(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation text_annotations = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->text_annotations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->text_annotations(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.vision.v1.LocalizedObjectAnnotation localized_object_annotations = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->localized_object_annotations_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->localized_object_annotations(static_cast<int>(i)));
    }
  }

  // .google.cloud.vision.v1.SafeSearchAnnotation safe_search_annotation = 6;
  if (this->has_safe_search_annotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *safe_search_annotation_);
  }

  // .google.cloud.vision.v1.ImageProperties image_properties_annotation = 8;
  if (this->has_image_properties_annotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *image_properties_annotation_);
  }

  // .google.rpc.Status error = 9;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // .google.cloud.vision.v1.CropHintsAnnotation crop_hints_annotation = 11;
  if (this->has_crop_hints_annotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *crop_hints_annotation_);
  }

  // .google.cloud.vision.v1.TextAnnotation full_text_annotation = 12;
  if (this->has_full_text_annotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *full_text_annotation_);
  }

  // .google.cloud.vision.v1.WebDetection web_detection = 13;
  if (this->has_web_detection()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *web_detection_);
  }

  // .google.cloud.vision.v1.ImageAnnotationContext context = 21;
  if (this->has_context()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnnotateImageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.AnnotateImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AnnotateImageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnnotateImageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.AnnotateImageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.AnnotateImageResponse)
    MergeFrom(*source);
  }
}

void AnnotateImageResponse::MergeFrom(const AnnotateImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.AnnotateImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  face_annotations_.MergeFrom(from.face_annotations_);
  landmark_annotations_.MergeFrom(from.landmark_annotations_);
  logo_annotations_.MergeFrom(from.logo_annotations_);
  label_annotations_.MergeFrom(from.label_annotations_);
  text_annotations_.MergeFrom(from.text_annotations_);
  localized_object_annotations_.MergeFrom(from.localized_object_annotations_);
  if (from.has_safe_search_annotation()) {
    mutable_safe_search_annotation()->::google::cloud::vision::v1::SafeSearchAnnotation::MergeFrom(from.safe_search_annotation());
  }
  if (from.has_image_properties_annotation()) {
    mutable_image_properties_annotation()->::google::cloud::vision::v1::ImageProperties::MergeFrom(from.image_properties_annotation());
  }
  if (from.has_error()) {
    mutable_error()->::google::rpc::Status::MergeFrom(from.error());
  }
  if (from.has_crop_hints_annotation()) {
    mutable_crop_hints_annotation()->::google::cloud::vision::v1::CropHintsAnnotation::MergeFrom(from.crop_hints_annotation());
  }
  if (from.has_full_text_annotation()) {
    mutable_full_text_annotation()->::google::cloud::vision::v1::TextAnnotation::MergeFrom(from.full_text_annotation());
  }
  if (from.has_web_detection()) {
    mutable_web_detection()->::google::cloud::vision::v1::WebDetection::MergeFrom(from.web_detection());
  }
  if (from.has_context()) {
    mutable_context()->::google::cloud::vision::v1::ImageAnnotationContext::MergeFrom(from.context());
  }
}

void AnnotateImageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.AnnotateImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnnotateImageResponse::CopyFrom(const AnnotateImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.AnnotateImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnnotateImageResponse::IsInitialized() const {
  return true;
}

void AnnotateImageResponse::Swap(AnnotateImageResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AnnotateImageResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AnnotateImageResponse::UnsafeArenaSwap(AnnotateImageResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AnnotateImageResponse::InternalSwap(AnnotateImageResponse* other) {
  using std::swap;
  CastToBase(&face_annotations_)->InternalSwap(CastToBase(&other->face_annotations_));
  CastToBase(&landmark_annotations_)->InternalSwap(CastToBase(&other->landmark_annotations_));
  CastToBase(&logo_annotations_)->InternalSwap(CastToBase(&other->logo_annotations_));
  CastToBase(&label_annotations_)->InternalSwap(CastToBase(&other->label_annotations_));
  CastToBase(&text_annotations_)->InternalSwap(CastToBase(&other->text_annotations_));
  CastToBase(&localized_object_annotations_)->InternalSwap(CastToBase(&other->localized_object_annotations_));
  swap(safe_search_annotation_, other->safe_search_annotation_);
  swap(image_properties_annotation_, other->image_properties_annotation_);
  swap(error_, other->error_);
  swap(crop_hints_annotation_, other->crop_hints_annotation_);
  swap(full_text_annotation_, other->full_text_annotation_);
  swap(web_detection_, other->web_detection_);
  swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AnnotateImageResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AnnotateFileResponse::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_AnnotateFileResponse_default_instance_._instance.get_mutable()->input_config_ = const_cast< ::google::cloud::vision::v1::InputConfig*>(
      ::google::cloud::vision::v1::InputConfig::internal_default_instance());
}
void AnnotateFileResponse::unsafe_arena_set_allocated_input_config(
    ::google::cloud::vision::v1::InputConfig* input_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete input_config_;
  }
  input_config_ = input_config;
  if (input_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateFileResponse.input_config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnnotateFileResponse::kInputConfigFieldNumber;
const int AnnotateFileResponse::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnnotateFileResponse::AnnotateFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AnnotateFileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.AnnotateFileResponse)
}
AnnotateFileResponse::AnnotateFileResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  responses_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AnnotateFileResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.AnnotateFileResponse)
}
AnnotateFileResponse::AnnotateFileResponse(const AnnotateFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_input_config()) {
    input_config_ = new ::google::cloud::vision::v1::InputConfig(*from.input_config_);
  } else {
    input_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.AnnotateFileResponse)
}

void AnnotateFileResponse::SharedCtor() {
  input_config_ = NULL;
}

AnnotateFileResponse::~AnnotateFileResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.AnnotateFileResponse)
  SharedDtor();
}

void AnnotateFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete input_config_;
}

void AnnotateFileResponse::ArenaDtor(void* object) {
  AnnotateFileResponse* _this = reinterpret_cast< AnnotateFileResponse* >(object);
  (void)_this;
}
void AnnotateFileResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AnnotateFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AnnotateFileResponse::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnnotateFileResponse& AnnotateFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AnnotateFileResponse.base);
  return *internal_default_instance();
}


void AnnotateFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.AnnotateFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  if (GetArenaNoVirtual() == NULL && input_config_ != NULL) {
    delete input_config_;
  }
  input_config_ = NULL;
  _internal_metadata_.Clear();
}

bool AnnotateFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.AnnotateFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.InputConfig input_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.AnnotateFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.AnnotateFileResponse)
  return false;
#undef DO_
}

void AnnotateFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.AnnotateFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.InputConfig input_config = 1;
  if (this->has_input_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_input_config(), output);
  }

  // repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->responses(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.AnnotateFileResponse)
}

::google::protobuf::uint8* AnnotateFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.AnnotateFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.InputConfig input_config = 1;
  if (this->has_input_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_input_config(), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->responses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.AnnotateFileResponse)
  return target;
}

size_t AnnotateFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.AnnotateFileResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  // .google.cloud.vision.v1.InputConfig input_config = 1;
  if (this->has_input_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnnotateFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.AnnotateFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AnnotateFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnnotateFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.AnnotateFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.AnnotateFileResponse)
    MergeFrom(*source);
  }
}

void AnnotateFileResponse::MergeFrom(const AnnotateFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.AnnotateFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
  if (from.has_input_config()) {
    mutable_input_config()->::google::cloud::vision::v1::InputConfig::MergeFrom(from.input_config());
  }
}

void AnnotateFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.AnnotateFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnnotateFileResponse::CopyFrom(const AnnotateFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.AnnotateFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnnotateFileResponse::IsInitialized() const {
  return true;
}

void AnnotateFileResponse::Swap(AnnotateFileResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AnnotateFileResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AnnotateFileResponse::UnsafeArenaSwap(AnnotateFileResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AnnotateFileResponse::InternalSwap(AnnotateFileResponse* other) {
  using std::swap;
  CastToBase(&responses_)->InternalSwap(CastToBase(&other->responses_));
  swap(input_config_, other->input_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AnnotateFileResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchAnnotateImagesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchAnnotateImagesRequest::kRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchAnnotateImagesRequest::BatchAnnotateImagesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_BatchAnnotateImagesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.BatchAnnotateImagesRequest)
}
BatchAnnotateImagesRequest::BatchAnnotateImagesRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  requests_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_BatchAnnotateImagesRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.BatchAnnotateImagesRequest)
}
BatchAnnotateImagesRequest::BatchAnnotateImagesRequest(const BatchAnnotateImagesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      requests_(from.requests_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.BatchAnnotateImagesRequest)
}

void BatchAnnotateImagesRequest::SharedCtor() {
}

BatchAnnotateImagesRequest::~BatchAnnotateImagesRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  SharedDtor();
}

void BatchAnnotateImagesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BatchAnnotateImagesRequest::ArenaDtor(void* object) {
  BatchAnnotateImagesRequest* _this = reinterpret_cast< BatchAnnotateImagesRequest* >(object);
  (void)_this;
}
void BatchAnnotateImagesRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BatchAnnotateImagesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BatchAnnotateImagesRequest::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchAnnotateImagesRequest& BatchAnnotateImagesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_BatchAnnotateImagesRequest.base);
  return *internal_default_instance();
}


void BatchAnnotateImagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requests_.Clear();
  _internal_metadata_.Clear();
}

bool BatchAnnotateImagesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.AnnotateImageRequest requests = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_requests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  return false;
#undef DO_
}

void BatchAnnotateImagesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.AnnotateImageRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->requests(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.BatchAnnotateImagesRequest)
}

::google::protobuf::uint8* BatchAnnotateImagesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.AnnotateImageRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->requests(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  return target;
}

size_t BatchAnnotateImagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1.AnnotateImageRequest requests = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->requests_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->requests(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchAnnotateImagesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchAnnotateImagesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchAnnotateImagesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.BatchAnnotateImagesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.BatchAnnotateImagesRequest)
    MergeFrom(*source);
  }
}

void BatchAnnotateImagesRequest::MergeFrom(const BatchAnnotateImagesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requests_.MergeFrom(from.requests_);
}

void BatchAnnotateImagesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchAnnotateImagesRequest::CopyFrom(const BatchAnnotateImagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchAnnotateImagesRequest::IsInitialized() const {
  return true;
}

void BatchAnnotateImagesRequest::Swap(BatchAnnotateImagesRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BatchAnnotateImagesRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BatchAnnotateImagesRequest::UnsafeArenaSwap(BatchAnnotateImagesRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BatchAnnotateImagesRequest::InternalSwap(BatchAnnotateImagesRequest* other) {
  using std::swap;
  CastToBase(&requests_)->InternalSwap(CastToBase(&other->requests_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BatchAnnotateImagesRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchAnnotateImagesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchAnnotateImagesResponse::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchAnnotateImagesResponse::BatchAnnotateImagesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_BatchAnnotateImagesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.BatchAnnotateImagesResponse)
}
BatchAnnotateImagesResponse::BatchAnnotateImagesResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  responses_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_BatchAnnotateImagesResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.BatchAnnotateImagesResponse)
}
BatchAnnotateImagesResponse::BatchAnnotateImagesResponse(const BatchAnnotateImagesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.BatchAnnotateImagesResponse)
}

void BatchAnnotateImagesResponse::SharedCtor() {
}

BatchAnnotateImagesResponse::~BatchAnnotateImagesResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  SharedDtor();
}

void BatchAnnotateImagesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BatchAnnotateImagesResponse::ArenaDtor(void* object) {
  BatchAnnotateImagesResponse* _this = reinterpret_cast< BatchAnnotateImagesResponse* >(object);
  (void)_this;
}
void BatchAnnotateImagesResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BatchAnnotateImagesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BatchAnnotateImagesResponse::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchAnnotateImagesResponse& BatchAnnotateImagesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_BatchAnnotateImagesResponse.base);
  return *internal_default_instance();
}


void BatchAnnotateImagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _internal_metadata_.Clear();
}

bool BatchAnnotateImagesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  return false;
#undef DO_
}

void BatchAnnotateImagesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->responses(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.BatchAnnotateImagesResponse)
}

::google::protobuf::uint8* BatchAnnotateImagesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->responses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  return target;
}

size_t BatchAnnotateImagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchAnnotateImagesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchAnnotateImagesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchAnnotateImagesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.BatchAnnotateImagesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.BatchAnnotateImagesResponse)
    MergeFrom(*source);
  }
}

void BatchAnnotateImagesResponse::MergeFrom(const BatchAnnotateImagesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
}

void BatchAnnotateImagesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchAnnotateImagesResponse::CopyFrom(const BatchAnnotateImagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchAnnotateImagesResponse::IsInitialized() const {
  return true;
}

void BatchAnnotateImagesResponse::Swap(BatchAnnotateImagesResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BatchAnnotateImagesResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BatchAnnotateImagesResponse::UnsafeArenaSwap(BatchAnnotateImagesResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BatchAnnotateImagesResponse::InternalSwap(BatchAnnotateImagesResponse* other) {
  using std::swap;
  CastToBase(&responses_)->InternalSwap(CastToBase(&other->responses_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BatchAnnotateImagesResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AsyncAnnotateFileRequest::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_AsyncAnnotateFileRequest_default_instance_._instance.get_mutable()->input_config_ = const_cast< ::google::cloud::vision::v1::InputConfig*>(
      ::google::cloud::vision::v1::InputConfig::internal_default_instance());
  ::google::cloud::vision::v1::_AsyncAnnotateFileRequest_default_instance_._instance.get_mutable()->image_context_ = const_cast< ::google::cloud::vision::v1::ImageContext*>(
      ::google::cloud::vision::v1::ImageContext::internal_default_instance());
  ::google::cloud::vision::v1::_AsyncAnnotateFileRequest_default_instance_._instance.get_mutable()->output_config_ = const_cast< ::google::cloud::vision::v1::OutputConfig*>(
      ::google::cloud::vision::v1::OutputConfig::internal_default_instance());
}
void AsyncAnnotateFileRequest::unsafe_arena_set_allocated_input_config(
    ::google::cloud::vision::v1::InputConfig* input_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete input_config_;
  }
  input_config_ = input_config;
  if (input_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AsyncAnnotateFileRequest.input_config)
}
void AsyncAnnotateFileRequest::unsafe_arena_set_allocated_image_context(
    ::google::cloud::vision::v1::ImageContext* image_context) {
  if (GetArenaNoVirtual() == NULL) {
    delete image_context_;
  }
  image_context_ = image_context;
  if (image_context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AsyncAnnotateFileRequest.image_context)
}
void AsyncAnnotateFileRequest::unsafe_arena_set_allocated_output_config(
    ::google::cloud::vision::v1::OutputConfig* output_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete output_config_;
  }
  output_config_ = output_config;
  if (output_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AsyncAnnotateFileRequest.output_config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AsyncAnnotateFileRequest::kInputConfigFieldNumber;
const int AsyncAnnotateFileRequest::kFeaturesFieldNumber;
const int AsyncAnnotateFileRequest::kImageContextFieldNumber;
const int AsyncAnnotateFileRequest::kOutputConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AsyncAnnotateFileRequest::AsyncAnnotateFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncAnnotateFileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.AsyncAnnotateFileRequest)
}
AsyncAnnotateFileRequest::AsyncAnnotateFileRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  features_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncAnnotateFileRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.AsyncAnnotateFileRequest)
}
AsyncAnnotateFileRequest::AsyncAnnotateFileRequest(const AsyncAnnotateFileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      features_(from.features_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_input_config()) {
    input_config_ = new ::google::cloud::vision::v1::InputConfig(*from.input_config_);
  } else {
    input_config_ = NULL;
  }
  if (from.has_image_context()) {
    image_context_ = new ::google::cloud::vision::v1::ImageContext(*from.image_context_);
  } else {
    image_context_ = NULL;
  }
  if (from.has_output_config()) {
    output_config_ = new ::google::cloud::vision::v1::OutputConfig(*from.output_config_);
  } else {
    output_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.AsyncAnnotateFileRequest)
}

void AsyncAnnotateFileRequest::SharedCtor() {
  ::memset(&input_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_config_) -
      reinterpret_cast<char*>(&input_config_)) + sizeof(output_config_));
}

AsyncAnnotateFileRequest::~AsyncAnnotateFileRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.AsyncAnnotateFileRequest)
  SharedDtor();
}

void AsyncAnnotateFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete input_config_;
  if (this != internal_default_instance()) delete image_context_;
  if (this != internal_default_instance()) delete output_config_;
}

void AsyncAnnotateFileRequest::ArenaDtor(void* object) {
  AsyncAnnotateFileRequest* _this = reinterpret_cast< AsyncAnnotateFileRequest* >(object);
  (void)_this;
}
void AsyncAnnotateFileRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AsyncAnnotateFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AsyncAnnotateFileRequest::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AsyncAnnotateFileRequest& AsyncAnnotateFileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncAnnotateFileRequest.base);
  return *internal_default_instance();
}


void AsyncAnnotateFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.AsyncAnnotateFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  if (GetArenaNoVirtual() == NULL && input_config_ != NULL) {
    delete input_config_;
  }
  input_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && image_context_ != NULL) {
    delete image_context_;
  }
  image_context_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_config_ != NULL) {
    delete output_config_;
  }
  output_config_ = NULL;
  _internal_metadata_.Clear();
}

bool AsyncAnnotateFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.AsyncAnnotateFileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.InputConfig input_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.Feature features = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_features()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.ImageContext image_context = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.OutputConfig output_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.AsyncAnnotateFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.AsyncAnnotateFileRequest)
  return false;
#undef DO_
}

void AsyncAnnotateFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.AsyncAnnotateFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.InputConfig input_config = 1;
  if (this->has_input_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_input_config(), output);
  }

  // repeated .google.cloud.vision.v1.Feature features = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->features_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->features(static_cast<int>(i)),
      output);
  }

  // .google.cloud.vision.v1.ImageContext image_context = 3;
  if (this->has_image_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_image_context(), output);
  }

  // .google.cloud.vision.v1.OutputConfig output_config = 4;
  if (this->has_output_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_output_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.AsyncAnnotateFileRequest)
}

::google::protobuf::uint8* AsyncAnnotateFileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.AsyncAnnotateFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.InputConfig input_config = 1;
  if (this->has_input_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_input_config(), deterministic, target);
  }

  // repeated .google.cloud.vision.v1.Feature features = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->features_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->features(static_cast<int>(i)), deterministic, target);
  }

  // .google.cloud.vision.v1.ImageContext image_context = 3;
  if (this->has_image_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_image_context(), deterministic, target);
  }

  // .google.cloud.vision.v1.OutputConfig output_config = 4;
  if (this->has_output_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_output_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.AsyncAnnotateFileRequest)
  return target;
}

size_t AsyncAnnotateFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.AsyncAnnotateFileRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1.Feature features = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->features_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->features(static_cast<int>(i)));
    }
  }

  // .google.cloud.vision.v1.InputConfig input_config = 1;
  if (this->has_input_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_config_);
  }

  // .google.cloud.vision.v1.ImageContext image_context = 3;
  if (this->has_image_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *image_context_);
  }

  // .google.cloud.vision.v1.OutputConfig output_config = 4;
  if (this->has_output_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AsyncAnnotateFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.AsyncAnnotateFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AsyncAnnotateFileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AsyncAnnotateFileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.AsyncAnnotateFileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.AsyncAnnotateFileRequest)
    MergeFrom(*source);
  }
}

void AsyncAnnotateFileRequest::MergeFrom(const AsyncAnnotateFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.AsyncAnnotateFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
  if (from.has_input_config()) {
    mutable_input_config()->::google::cloud::vision::v1::InputConfig::MergeFrom(from.input_config());
  }
  if (from.has_image_context()) {
    mutable_image_context()->::google::cloud::vision::v1::ImageContext::MergeFrom(from.image_context());
  }
  if (from.has_output_config()) {
    mutable_output_config()->::google::cloud::vision::v1::OutputConfig::MergeFrom(from.output_config());
  }
}

void AsyncAnnotateFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.AsyncAnnotateFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AsyncAnnotateFileRequest::CopyFrom(const AsyncAnnotateFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.AsyncAnnotateFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AsyncAnnotateFileRequest::IsInitialized() const {
  return true;
}

void AsyncAnnotateFileRequest::Swap(AsyncAnnotateFileRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AsyncAnnotateFileRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AsyncAnnotateFileRequest::UnsafeArenaSwap(AsyncAnnotateFileRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AsyncAnnotateFileRequest::InternalSwap(AsyncAnnotateFileRequest* other) {
  using std::swap;
  CastToBase(&features_)->InternalSwap(CastToBase(&other->features_));
  swap(input_config_, other->input_config_);
  swap(image_context_, other->image_context_);
  swap(output_config_, other->output_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AsyncAnnotateFileRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AsyncAnnotateFileResponse::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_AsyncAnnotateFileResponse_default_instance_._instance.get_mutable()->output_config_ = const_cast< ::google::cloud::vision::v1::OutputConfig*>(
      ::google::cloud::vision::v1::OutputConfig::internal_default_instance());
}
void AsyncAnnotateFileResponse::unsafe_arena_set_allocated_output_config(
    ::google::cloud::vision::v1::OutputConfig* output_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete output_config_;
  }
  output_config_ = output_config;
  if (output_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AsyncAnnotateFileResponse.output_config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AsyncAnnotateFileResponse::kOutputConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AsyncAnnotateFileResponse::AsyncAnnotateFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncAnnotateFileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.AsyncAnnotateFileResponse)
}
AsyncAnnotateFileResponse::AsyncAnnotateFileResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncAnnotateFileResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.AsyncAnnotateFileResponse)
}
AsyncAnnotateFileResponse::AsyncAnnotateFileResponse(const AsyncAnnotateFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_output_config()) {
    output_config_ = new ::google::cloud::vision::v1::OutputConfig(*from.output_config_);
  } else {
    output_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.AsyncAnnotateFileResponse)
}

void AsyncAnnotateFileResponse::SharedCtor() {
  output_config_ = NULL;
}

AsyncAnnotateFileResponse::~AsyncAnnotateFileResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.AsyncAnnotateFileResponse)
  SharedDtor();
}

void AsyncAnnotateFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete output_config_;
}

void AsyncAnnotateFileResponse::ArenaDtor(void* object) {
  AsyncAnnotateFileResponse* _this = reinterpret_cast< AsyncAnnotateFileResponse* >(object);
  (void)_this;
}
void AsyncAnnotateFileResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AsyncAnnotateFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AsyncAnnotateFileResponse::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AsyncAnnotateFileResponse& AsyncAnnotateFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncAnnotateFileResponse.base);
  return *internal_default_instance();
}


void AsyncAnnotateFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.AsyncAnnotateFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && output_config_ != NULL) {
    delete output_config_;
  }
  output_config_ = NULL;
  _internal_metadata_.Clear();
}

bool AsyncAnnotateFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.AsyncAnnotateFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.OutputConfig output_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.AsyncAnnotateFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.AsyncAnnotateFileResponse)
  return false;
#undef DO_
}

void AsyncAnnotateFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.AsyncAnnotateFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.OutputConfig output_config = 1;
  if (this->has_output_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_output_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.AsyncAnnotateFileResponse)
}

::google::protobuf::uint8* AsyncAnnotateFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.AsyncAnnotateFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.OutputConfig output_config = 1;
  if (this->has_output_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_output_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.AsyncAnnotateFileResponse)
  return target;
}

size_t AsyncAnnotateFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.AsyncAnnotateFileResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.vision.v1.OutputConfig output_config = 1;
  if (this->has_output_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AsyncAnnotateFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.AsyncAnnotateFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AsyncAnnotateFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AsyncAnnotateFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.AsyncAnnotateFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.AsyncAnnotateFileResponse)
    MergeFrom(*source);
  }
}

void AsyncAnnotateFileResponse::MergeFrom(const AsyncAnnotateFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.AsyncAnnotateFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_output_config()) {
    mutable_output_config()->::google::cloud::vision::v1::OutputConfig::MergeFrom(from.output_config());
  }
}

void AsyncAnnotateFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.AsyncAnnotateFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AsyncAnnotateFileResponse::CopyFrom(const AsyncAnnotateFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.AsyncAnnotateFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AsyncAnnotateFileResponse::IsInitialized() const {
  return true;
}

void AsyncAnnotateFileResponse::Swap(AsyncAnnotateFileResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AsyncAnnotateFileResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AsyncAnnotateFileResponse::UnsafeArenaSwap(AsyncAnnotateFileResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AsyncAnnotateFileResponse::InternalSwap(AsyncAnnotateFileResponse* other) {
  using std::swap;
  swap(output_config_, other->output_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AsyncAnnotateFileResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AsyncBatchAnnotateFilesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AsyncBatchAnnotateFilesRequest::kRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AsyncBatchAnnotateFilesRequest::AsyncBatchAnnotateFilesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncBatchAnnotateFilesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
}
AsyncBatchAnnotateFilesRequest::AsyncBatchAnnotateFilesRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  requests_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncBatchAnnotateFilesRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
}
AsyncBatchAnnotateFilesRequest::AsyncBatchAnnotateFilesRequest(const AsyncBatchAnnotateFilesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      requests_(from.requests_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
}

void AsyncBatchAnnotateFilesRequest::SharedCtor() {
}

AsyncBatchAnnotateFilesRequest::~AsyncBatchAnnotateFilesRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
  SharedDtor();
}

void AsyncBatchAnnotateFilesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void AsyncBatchAnnotateFilesRequest::ArenaDtor(void* object) {
  AsyncBatchAnnotateFilesRequest* _this = reinterpret_cast< AsyncBatchAnnotateFilesRequest* >(object);
  (void)_this;
}
void AsyncBatchAnnotateFilesRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AsyncBatchAnnotateFilesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AsyncBatchAnnotateFilesRequest::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AsyncBatchAnnotateFilesRequest& AsyncBatchAnnotateFilesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncBatchAnnotateFilesRequest.base);
  return *internal_default_instance();
}


void AsyncBatchAnnotateFilesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requests_.Clear();
  _internal_metadata_.Clear();
}

bool AsyncBatchAnnotateFilesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.AsyncAnnotateFileRequest requests = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_requests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
  return false;
#undef DO_
}

void AsyncBatchAnnotateFilesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.AsyncAnnotateFileRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->requests(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
}

::google::protobuf::uint8* AsyncBatchAnnotateFilesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.AsyncAnnotateFileRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->requests(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
  return target;
}

size_t AsyncBatchAnnotateFilesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1.AsyncAnnotateFileRequest requests = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->requests_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->requests(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AsyncBatchAnnotateFilesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AsyncBatchAnnotateFilesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AsyncBatchAnnotateFilesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
    MergeFrom(*source);
  }
}

void AsyncBatchAnnotateFilesRequest::MergeFrom(const AsyncBatchAnnotateFilesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requests_.MergeFrom(from.requests_);
}

void AsyncBatchAnnotateFilesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AsyncBatchAnnotateFilesRequest::CopyFrom(const AsyncBatchAnnotateFilesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AsyncBatchAnnotateFilesRequest::IsInitialized() const {
  return true;
}

void AsyncBatchAnnotateFilesRequest::Swap(AsyncBatchAnnotateFilesRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AsyncBatchAnnotateFilesRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AsyncBatchAnnotateFilesRequest::UnsafeArenaSwap(AsyncBatchAnnotateFilesRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AsyncBatchAnnotateFilesRequest::InternalSwap(AsyncBatchAnnotateFilesRequest* other) {
  using std::swap;
  CastToBase(&requests_)->InternalSwap(CastToBase(&other->requests_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AsyncBatchAnnotateFilesRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AsyncBatchAnnotateFilesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AsyncBatchAnnotateFilesResponse::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AsyncBatchAnnotateFilesResponse::AsyncBatchAnnotateFilesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncBatchAnnotateFilesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
}
AsyncBatchAnnotateFilesResponse::AsyncBatchAnnotateFilesResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  responses_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncBatchAnnotateFilesResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
}
AsyncBatchAnnotateFilesResponse::AsyncBatchAnnotateFilesResponse(const AsyncBatchAnnotateFilesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
}

void AsyncBatchAnnotateFilesResponse::SharedCtor() {
}

AsyncBatchAnnotateFilesResponse::~AsyncBatchAnnotateFilesResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
  SharedDtor();
}

void AsyncBatchAnnotateFilesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void AsyncBatchAnnotateFilesResponse::ArenaDtor(void* object) {
  AsyncBatchAnnotateFilesResponse* _this = reinterpret_cast< AsyncBatchAnnotateFilesResponse* >(object);
  (void)_this;
}
void AsyncBatchAnnotateFilesResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AsyncBatchAnnotateFilesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AsyncBatchAnnotateFilesResponse::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AsyncBatchAnnotateFilesResponse& AsyncBatchAnnotateFilesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_AsyncBatchAnnotateFilesResponse.base);
  return *internal_default_instance();
}


void AsyncBatchAnnotateFilesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _internal_metadata_.Clear();
}

bool AsyncBatchAnnotateFilesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.AsyncAnnotateFileResponse responses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
  return false;
#undef DO_
}

void AsyncBatchAnnotateFilesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.AsyncAnnotateFileResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->responses(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
}

::google::protobuf::uint8* AsyncBatchAnnotateFilesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.AsyncAnnotateFileResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->responses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
  return target;
}

size_t AsyncBatchAnnotateFilesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.vision.v1.AsyncAnnotateFileResponse responses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AsyncBatchAnnotateFilesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AsyncBatchAnnotateFilesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AsyncBatchAnnotateFilesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
    MergeFrom(*source);
  }
}

void AsyncBatchAnnotateFilesResponse::MergeFrom(const AsyncBatchAnnotateFilesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
}

void AsyncBatchAnnotateFilesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AsyncBatchAnnotateFilesResponse::CopyFrom(const AsyncBatchAnnotateFilesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.AsyncBatchAnnotateFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AsyncBatchAnnotateFilesResponse::IsInitialized() const {
  return true;
}

void AsyncBatchAnnotateFilesResponse::Swap(AsyncBatchAnnotateFilesResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AsyncBatchAnnotateFilesResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AsyncBatchAnnotateFilesResponse::UnsafeArenaSwap(AsyncBatchAnnotateFilesResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AsyncBatchAnnotateFilesResponse::InternalSwap(AsyncBatchAnnotateFilesResponse* other) {
  using std::swap;
  CastToBase(&responses_)->InternalSwap(CastToBase(&other->responses_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AsyncBatchAnnotateFilesResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InputConfig::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_InputConfig_default_instance_._instance.get_mutable()->gcs_source_ = const_cast< ::google::cloud::vision::v1::GcsSource*>(
      ::google::cloud::vision::v1::GcsSource::internal_default_instance());
}
void InputConfig::unsafe_arena_set_allocated_gcs_source(
    ::google::cloud::vision::v1::GcsSource* gcs_source) {
  if (GetArenaNoVirtual() == NULL) {
    delete gcs_source_;
  }
  gcs_source_ = gcs_source;
  if (gcs_source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.InputConfig.gcs_source)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputConfig::kGcsSourceFieldNumber;
const int InputConfig::kMimeTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputConfig::InputConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_InputConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.InputConfig)
}
InputConfig::InputConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_InputConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.InputConfig)
}
InputConfig::InputConfig(const InputConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mime_type().size() > 0) {
    mime_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type(),
      GetArenaNoVirtual());
  }
  if (from.has_gcs_source()) {
    gcs_source_ = new ::google::cloud::vision::v1::GcsSource(*from.gcs_source_);
  } else {
    gcs_source_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.InputConfig)
}

void InputConfig::SharedCtor() {
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcs_source_ = NULL;
}

InputConfig::~InputConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.InputConfig)
  SharedDtor();
}

void InputConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete gcs_source_;
}

void InputConfig::ArenaDtor(void* object) {
  InputConfig* _this = reinterpret_cast< InputConfig* >(object);
  (void)_this;
}
void InputConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void InputConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputConfig::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputConfig& InputConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_InputConfig.base);
  return *internal_default_instance();
}


void InputConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.InputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mime_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && gcs_source_ != NULL) {
    delete gcs_source_;
  }
  gcs_source_ = NULL;
  _internal_metadata_.Clear();
}

bool InputConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.InputConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.GcsSource gcs_source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gcs_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mime_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), static_cast<int>(this->mime_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.InputConfig.mime_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.InputConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.InputConfig)
  return false;
#undef DO_
}

void InputConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.InputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.GcsSource gcs_source = 1;
  if (this->has_gcs_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_gcs_source(), output);
  }

  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.InputConfig.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mime_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.InputConfig)
}

::google::protobuf::uint8* InputConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.InputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.GcsSource gcs_source = 1;
  if (this->has_gcs_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_gcs_source(), deterministic, target);
  }

  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.InputConfig.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mime_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.InputConfig)
  return target;
}

size_t InputConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.InputConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  // .google.cloud.vision.v1.GcsSource gcs_source = 1;
  if (this->has_gcs_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gcs_source_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.InputConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const InputConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.InputConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.InputConfig)
    MergeFrom(*source);
  }
}

void InputConfig::MergeFrom(const InputConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.InputConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mime_type().size() > 0) {
    set_mime_type(from.mime_type());
  }
  if (from.has_gcs_source()) {
    mutable_gcs_source()->::google::cloud::vision::v1::GcsSource::MergeFrom(from.gcs_source());
  }
}

void InputConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.InputConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputConfig::CopyFrom(const InputConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.InputConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputConfig::IsInitialized() const {
  return true;
}

void InputConfig::Swap(InputConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    InputConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void InputConfig::UnsafeArenaSwap(InputConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void InputConfig::InternalSwap(InputConfig* other) {
  using std::swap;
  mime_type_.Swap(&other->mime_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(gcs_source_, other->gcs_source_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OutputConfig::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_OutputConfig_default_instance_._instance.get_mutable()->gcs_destination_ = const_cast< ::google::cloud::vision::v1::GcsDestination*>(
      ::google::cloud::vision::v1::GcsDestination::internal_default_instance());
}
void OutputConfig::unsafe_arena_set_allocated_gcs_destination(
    ::google::cloud::vision::v1::GcsDestination* gcs_destination) {
  if (GetArenaNoVirtual() == NULL) {
    delete gcs_destination_;
  }
  gcs_destination_ = gcs_destination;
  if (gcs_destination) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.OutputConfig.gcs_destination)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OutputConfig::kGcsDestinationFieldNumber;
const int OutputConfig::kBatchSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OutputConfig::OutputConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_OutputConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.OutputConfig)
}
OutputConfig::OutputConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_OutputConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.OutputConfig)
}
OutputConfig::OutputConfig(const OutputConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gcs_destination()) {
    gcs_destination_ = new ::google::cloud::vision::v1::GcsDestination(*from.gcs_destination_);
  } else {
    gcs_destination_ = NULL;
  }
  batch_size_ = from.batch_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.OutputConfig)
}

void OutputConfig::SharedCtor() {
  ::memset(&gcs_destination_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batch_size_) -
      reinterpret_cast<char*>(&gcs_destination_)) + sizeof(batch_size_));
}

OutputConfig::~OutputConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.OutputConfig)
  SharedDtor();
}

void OutputConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete gcs_destination_;
}

void OutputConfig::ArenaDtor(void* object) {
  OutputConfig* _this = reinterpret_cast< OutputConfig* >(object);
  (void)_this;
}
void OutputConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OutputConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OutputConfig::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OutputConfig& OutputConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_OutputConfig.base);
  return *internal_default_instance();
}


void OutputConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.OutputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && gcs_destination_ != NULL) {
    delete gcs_destination_;
  }
  gcs_destination_ = NULL;
  batch_size_ = 0;
  _internal_metadata_.Clear();
}

bool OutputConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.OutputConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.GcsDestination gcs_destination = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gcs_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 batch_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &batch_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.OutputConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.OutputConfig)
  return false;
#undef DO_
}

void OutputConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.OutputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.GcsDestination gcs_destination = 1;
  if (this->has_gcs_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_gcs_destination(), output);
  }

  // int32 batch_size = 2;
  if (this->batch_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->batch_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.OutputConfig)
}

::google::protobuf::uint8* OutputConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.OutputConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.GcsDestination gcs_destination = 1;
  if (this->has_gcs_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_gcs_destination(), deterministic, target);
  }

  // int32 batch_size = 2;
  if (this->batch_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->batch_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.OutputConfig)
  return target;
}

size_t OutputConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.OutputConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.vision.v1.GcsDestination gcs_destination = 1;
  if (this->has_gcs_destination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gcs_destination_);
  }

  // int32 batch_size = 2;
  if (this->batch_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->batch_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutputConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.OutputConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const OutputConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OutputConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.OutputConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.OutputConfig)
    MergeFrom(*source);
  }
}

void OutputConfig::MergeFrom(const OutputConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.OutputConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gcs_destination()) {
    mutable_gcs_destination()->::google::cloud::vision::v1::GcsDestination::MergeFrom(from.gcs_destination());
  }
  if (from.batch_size() != 0) {
    set_batch_size(from.batch_size());
  }
}

void OutputConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.OutputConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputConfig::CopyFrom(const OutputConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.OutputConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputConfig::IsInitialized() const {
  return true;
}

void OutputConfig::Swap(OutputConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OutputConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void OutputConfig::UnsafeArenaSwap(OutputConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OutputConfig::InternalSwap(OutputConfig* other) {
  using std::swap;
  swap(gcs_destination_, other->gcs_destination_);
  swap(batch_size_, other->batch_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OutputConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GcsSource::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GcsSource::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GcsSource::GcsSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_GcsSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.GcsSource)
}
GcsSource::GcsSource(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_GcsSource.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.GcsSource)
}
GcsSource::GcsSource(const GcsSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.GcsSource)
}

void GcsSource::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GcsSource::~GcsSource() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.GcsSource)
  SharedDtor();
}

void GcsSource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GcsSource::ArenaDtor(void* object) {
  GcsSource* _this = reinterpret_cast< GcsSource* >(object);
  (void)_this;
}
void GcsSource::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GcsSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GcsSource::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GcsSource& GcsSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_GcsSource.base);
  return *internal_default_instance();
}


void GcsSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.GcsSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GcsSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.GcsSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.GcsSource.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.GcsSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.GcsSource)
  return false;
#undef DO_
}

void GcsSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.GcsSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.GcsSource.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.GcsSource)
}

::google::protobuf::uint8* GcsSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.GcsSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.GcsSource.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.GcsSource)
  return target;
}

size_t GcsSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.GcsSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GcsSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.GcsSource)
  GOOGLE_DCHECK_NE(&from, this);
  const GcsSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GcsSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.GcsSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.GcsSource)
    MergeFrom(*source);
  }
}

void GcsSource::MergeFrom(const GcsSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.GcsSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {
    set_uri(from.uri());
  }
}

void GcsSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.GcsSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GcsSource::CopyFrom(const GcsSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.GcsSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GcsSource::IsInitialized() const {
  return true;
}

void GcsSource::Swap(GcsSource* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GcsSource* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GcsSource::UnsafeArenaSwap(GcsSource* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GcsSource::InternalSwap(GcsSource* other) {
  using std::swap;
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GcsSource::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GcsDestination::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GcsDestination::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GcsDestination::GcsDestination()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_GcsDestination.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.GcsDestination)
}
GcsDestination::GcsDestination(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_GcsDestination.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.GcsDestination)
}
GcsDestination::GcsDestination(const GcsDestination& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.GcsDestination)
}

void GcsDestination::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GcsDestination::~GcsDestination() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.GcsDestination)
  SharedDtor();
}

void GcsDestination::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GcsDestination::ArenaDtor(void* object) {
  GcsDestination* _this = reinterpret_cast< GcsDestination* >(object);
  (void)_this;
}
void GcsDestination::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GcsDestination::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GcsDestination::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GcsDestination& GcsDestination::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_GcsDestination.base);
  return *internal_default_instance();
}


void GcsDestination::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.GcsDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GcsDestination::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.GcsDestination)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.GcsDestination.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.GcsDestination)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.GcsDestination)
  return false;
#undef DO_
}

void GcsDestination::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.GcsDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.GcsDestination.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.GcsDestination)
}

::google::protobuf::uint8* GcsDestination::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.GcsDestination)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.GcsDestination.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.GcsDestination)
  return target;
}

size_t GcsDestination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.GcsDestination)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GcsDestination::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.GcsDestination)
  GOOGLE_DCHECK_NE(&from, this);
  const GcsDestination* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GcsDestination>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.GcsDestination)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.GcsDestination)
    MergeFrom(*source);
  }
}

void GcsDestination::MergeFrom(const GcsDestination& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.GcsDestination)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {
    set_uri(from.uri());
  }
}

void GcsDestination::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.GcsDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GcsDestination::CopyFrom(const GcsDestination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.GcsDestination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GcsDestination::IsInitialized() const {
  return true;
}

void GcsDestination::Swap(GcsDestination* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GcsDestination* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GcsDestination::UnsafeArenaSwap(GcsDestination* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GcsDestination::InternalSwap(GcsDestination* other) {
  using std::swap;
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GcsDestination::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationMetadata::InitAsDefaultInstance() {
  ::google::cloud::vision::v1::_OperationMetadata_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::vision::v1::_OperationMetadata_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void OperationMetadata::unsafe_arena_set_allocated_create_time(
    ::google::protobuf::Timestamp* create_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete create_time_;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.OperationMetadata.create_time)
}
void OperationMetadata::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void OperationMetadata::unsafe_arena_set_allocated_update_time(
    ::google::protobuf::Timestamp* update_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete update_time_;
  }
  update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.OperationMetadata.update_time)
}
void OperationMetadata::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationMetadata::kStateFieldNumber;
const int OperationMetadata::kCreateTimeFieldNumber;
const int OperationMetadata::kUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationMetadata::OperationMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_OperationMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.OperationMetadata)
}
OperationMetadata::OperationMetadata(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_OperationMetadata.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.OperationMetadata)
}
OperationMetadata::OperationMetadata(const OperationMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = NULL;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.OperationMetadata)
}

void OperationMetadata::SharedCtor() {
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(state_));
}

OperationMetadata::~OperationMetadata() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.OperationMetadata)
  SharedDtor();
}

void OperationMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void OperationMetadata::ArenaDtor(void* object) {
  OperationMetadata* _this = reinterpret_cast< OperationMetadata* >(object);
  (void)_this;
}
void OperationMetadata::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OperationMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperationMetadata::descriptor() {
  ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationMetadata& OperationMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::scc_info_OperationMetadata.base);
  return *internal_default_instance();
}


void OperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.OperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
  state_ = 0;
  _internal_metadata_.Clear();
}

bool OperationMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.OperationMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.OperationMetadata.State state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::cloud::vision::v1::OperationMetadata_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.OperationMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.OperationMetadata)
  return false;
#undef DO_
}

void OperationMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.OperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.OperationMetadata.State state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // .google.protobuf.Timestamp create_time = 5;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_create_time(), output);
  }

  // .google.protobuf.Timestamp update_time = 6;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_update_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.OperationMetadata)
}

::google::protobuf::uint8* OperationMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.OperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.OperationMetadata.State state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // .google.protobuf.Timestamp create_time = 5;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_create_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp update_time = 6;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_update_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.OperationMetadata)
  return target;
}

size_t OperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.OperationMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Timestamp create_time = 5;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 6;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // .google.cloud.vision.v1.OperationMetadata.State state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.OperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.OperationMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.OperationMetadata)
    MergeFrom(*source);
  }
}

void OperationMetadata::MergeFrom(const OperationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.OperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void OperationMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.OperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationMetadata::CopyFrom(const OperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.OperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationMetadata::IsInitialized() const {
  return true;
}

void OperationMetadata::Swap(OperationMetadata* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OperationMetadata* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void OperationMetadata::UnsafeArenaSwap(OperationMetadata* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OperationMetadata::InternalSwap(OperationMetadata* other) {
  using std::swap;
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperationMetadata::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace vision
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::Feature* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::Feature >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::Feature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::ImageSource* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::ImageSource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::ImageSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::Image* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::Image >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::Image >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::FaceAnnotation_Landmark* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::FaceAnnotation_Landmark >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::FaceAnnotation_Landmark >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::FaceAnnotation* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::FaceAnnotation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::FaceAnnotation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::LocationInfo* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::LocationInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::LocationInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::Property* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::Property >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::Property >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::EntityAnnotation* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::EntityAnnotation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::EntityAnnotation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::LocalizedObjectAnnotation* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::LocalizedObjectAnnotation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::LocalizedObjectAnnotation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::SafeSearchAnnotation* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::SafeSearchAnnotation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::SafeSearchAnnotation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::LatLongRect* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::LatLongRect >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::LatLongRect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::ColorInfo* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::ColorInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::ColorInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::DominantColorsAnnotation* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::DominantColorsAnnotation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::DominantColorsAnnotation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::ImageProperties* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::ImageProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::ImageProperties >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::CropHint* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::CropHint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::CropHint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::CropHintsAnnotation* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::CropHintsAnnotation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::CropHintsAnnotation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::CropHintsParams* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::CropHintsParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::CropHintsParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::WebDetectionParams* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::WebDetectionParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::WebDetectionParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::ImageContext* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::ImageContext >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::ImageContext >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::AnnotateImageRequest* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::AnnotateImageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::AnnotateImageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::ImageAnnotationContext* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::ImageAnnotationContext >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::ImageAnnotationContext >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::AnnotateImageResponse* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::AnnotateImageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::AnnotateImageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::AnnotateFileResponse* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::AnnotateFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::AnnotateFileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::BatchAnnotateImagesRequest* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::BatchAnnotateImagesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::BatchAnnotateImagesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::BatchAnnotateImagesResponse* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::BatchAnnotateImagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::BatchAnnotateImagesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::AsyncAnnotateFileRequest* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::AsyncAnnotateFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::AsyncAnnotateFileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::AsyncAnnotateFileResponse* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::AsyncAnnotateFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::AsyncAnnotateFileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::AsyncBatchAnnotateFilesRequest* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::AsyncBatchAnnotateFilesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::AsyncBatchAnnotateFilesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::AsyncBatchAnnotateFilesResponse* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::AsyncBatchAnnotateFilesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::AsyncBatchAnnotateFilesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::InputConfig* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::InputConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::InputConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::OutputConfig* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::OutputConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::OutputConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::GcsSource* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::GcsSource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::GcsSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::GcsDestination* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::GcsDestination >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::GcsDestination >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::vision::v1::OperationMetadata* Arena::CreateMaybeMessage< ::google::cloud::vision::v1::OperationMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::vision::v1::OperationMetadata >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
