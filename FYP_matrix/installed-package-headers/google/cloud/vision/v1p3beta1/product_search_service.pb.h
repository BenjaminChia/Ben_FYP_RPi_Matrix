// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vision/v1p3beta1/product_search_service.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/vision/v1p3beta1/geometry.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto 

namespace protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[30];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto
namespace google {
namespace cloud {
namespace vision {
namespace v1p3beta1 {
class AddProductToProductSetRequest;
class AddProductToProductSetRequestDefaultTypeInternal;
extern AddProductToProductSetRequestDefaultTypeInternal _AddProductToProductSetRequest_default_instance_;
class BatchOperationMetadata;
class BatchOperationMetadataDefaultTypeInternal;
extern BatchOperationMetadataDefaultTypeInternal _BatchOperationMetadata_default_instance_;
class CreateProductRequest;
class CreateProductRequestDefaultTypeInternal;
extern CreateProductRequestDefaultTypeInternal _CreateProductRequest_default_instance_;
class CreateProductSetRequest;
class CreateProductSetRequestDefaultTypeInternal;
extern CreateProductSetRequestDefaultTypeInternal _CreateProductSetRequest_default_instance_;
class CreateReferenceImageRequest;
class CreateReferenceImageRequestDefaultTypeInternal;
extern CreateReferenceImageRequestDefaultTypeInternal _CreateReferenceImageRequest_default_instance_;
class DeleteProductRequest;
class DeleteProductRequestDefaultTypeInternal;
extern DeleteProductRequestDefaultTypeInternal _DeleteProductRequest_default_instance_;
class DeleteProductSetRequest;
class DeleteProductSetRequestDefaultTypeInternal;
extern DeleteProductSetRequestDefaultTypeInternal _DeleteProductSetRequest_default_instance_;
class DeleteReferenceImageRequest;
class DeleteReferenceImageRequestDefaultTypeInternal;
extern DeleteReferenceImageRequestDefaultTypeInternal _DeleteReferenceImageRequest_default_instance_;
class GetProductRequest;
class GetProductRequestDefaultTypeInternal;
extern GetProductRequestDefaultTypeInternal _GetProductRequest_default_instance_;
class GetProductSetRequest;
class GetProductSetRequestDefaultTypeInternal;
extern GetProductSetRequestDefaultTypeInternal _GetProductSetRequest_default_instance_;
class GetReferenceImageRequest;
class GetReferenceImageRequestDefaultTypeInternal;
extern GetReferenceImageRequestDefaultTypeInternal _GetReferenceImageRequest_default_instance_;
class ImportProductSetsGcsSource;
class ImportProductSetsGcsSourceDefaultTypeInternal;
extern ImportProductSetsGcsSourceDefaultTypeInternal _ImportProductSetsGcsSource_default_instance_;
class ImportProductSetsInputConfig;
class ImportProductSetsInputConfigDefaultTypeInternal;
extern ImportProductSetsInputConfigDefaultTypeInternal _ImportProductSetsInputConfig_default_instance_;
class ImportProductSetsRequest;
class ImportProductSetsRequestDefaultTypeInternal;
extern ImportProductSetsRequestDefaultTypeInternal _ImportProductSetsRequest_default_instance_;
class ImportProductSetsResponse;
class ImportProductSetsResponseDefaultTypeInternal;
extern ImportProductSetsResponseDefaultTypeInternal _ImportProductSetsResponse_default_instance_;
class ListProductSetsRequest;
class ListProductSetsRequestDefaultTypeInternal;
extern ListProductSetsRequestDefaultTypeInternal _ListProductSetsRequest_default_instance_;
class ListProductSetsResponse;
class ListProductSetsResponseDefaultTypeInternal;
extern ListProductSetsResponseDefaultTypeInternal _ListProductSetsResponse_default_instance_;
class ListProductsInProductSetRequest;
class ListProductsInProductSetRequestDefaultTypeInternal;
extern ListProductsInProductSetRequestDefaultTypeInternal _ListProductsInProductSetRequest_default_instance_;
class ListProductsInProductSetResponse;
class ListProductsInProductSetResponseDefaultTypeInternal;
extern ListProductsInProductSetResponseDefaultTypeInternal _ListProductsInProductSetResponse_default_instance_;
class ListProductsRequest;
class ListProductsRequestDefaultTypeInternal;
extern ListProductsRequestDefaultTypeInternal _ListProductsRequest_default_instance_;
class ListProductsResponse;
class ListProductsResponseDefaultTypeInternal;
extern ListProductsResponseDefaultTypeInternal _ListProductsResponse_default_instance_;
class ListReferenceImagesRequest;
class ListReferenceImagesRequestDefaultTypeInternal;
extern ListReferenceImagesRequestDefaultTypeInternal _ListReferenceImagesRequest_default_instance_;
class ListReferenceImagesResponse;
class ListReferenceImagesResponseDefaultTypeInternal;
extern ListReferenceImagesResponseDefaultTypeInternal _ListReferenceImagesResponse_default_instance_;
class Product;
class ProductDefaultTypeInternal;
extern ProductDefaultTypeInternal _Product_default_instance_;
class ProductSet;
class ProductSetDefaultTypeInternal;
extern ProductSetDefaultTypeInternal _ProductSet_default_instance_;
class Product_KeyValue;
class Product_KeyValueDefaultTypeInternal;
extern Product_KeyValueDefaultTypeInternal _Product_KeyValue_default_instance_;
class ReferenceImage;
class ReferenceImageDefaultTypeInternal;
extern ReferenceImageDefaultTypeInternal _ReferenceImage_default_instance_;
class RemoveProductFromProductSetRequest;
class RemoveProductFromProductSetRequestDefaultTypeInternal;
extern RemoveProductFromProductSetRequestDefaultTypeInternal _RemoveProductFromProductSetRequest_default_instance_;
class UpdateProductRequest;
class UpdateProductRequestDefaultTypeInternal;
extern UpdateProductRequestDefaultTypeInternal _UpdateProductRequest_default_instance_;
class UpdateProductSetRequest;
class UpdateProductSetRequestDefaultTypeInternal;
extern UpdateProductSetRequestDefaultTypeInternal _UpdateProductSetRequest_default_instance_;
}  // namespace v1p3beta1
}  // namespace vision
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::BatchOperationMetadata* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::BatchOperationMetadata>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::CreateProductRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::CreateProductRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::CreateProductSetRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::CreateProductSetRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::DeleteProductRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::DeleteProductRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::DeleteProductSetRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::GetProductRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::GetProductRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::GetProductSetRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::GetProductSetRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::GetReferenceImageRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ImportProductSetsRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ImportProductSetsResponse* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ImportProductSetsResponse>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ListProductSetsRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ListProductSetsRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ListProductSetsResponse* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ListProductSetsResponse>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ListProductsRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ListProductsRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ListProductsResponse* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ListProductsResponse>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::Product* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::Product>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ProductSet* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ProductSet>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::Product_KeyValue* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::Product_KeyValue>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::ReferenceImage* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ReferenceImage>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::UpdateProductRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::UpdateProductRequest>(Arena*);
template<> ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest* Arena::CreateMaybeMessage<::google::cloud::vision::v1p3beta1::UpdateProductSetRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace vision {
namespace v1p3beta1 {

enum BatchOperationMetadata_State {
  BatchOperationMetadata_State_STATE_UNSPECIFIED = 0,
  BatchOperationMetadata_State_PROCESSING = 1,
  BatchOperationMetadata_State_SUCCESSFUL = 2,
  BatchOperationMetadata_State_FAILED = 3,
  BatchOperationMetadata_State_CANCELLED = 4,
  BatchOperationMetadata_State_BatchOperationMetadata_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BatchOperationMetadata_State_BatchOperationMetadata_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BatchOperationMetadata_State_IsValid(int value);
const BatchOperationMetadata_State BatchOperationMetadata_State_State_MIN = BatchOperationMetadata_State_STATE_UNSPECIFIED;
const BatchOperationMetadata_State BatchOperationMetadata_State_State_MAX = BatchOperationMetadata_State_CANCELLED;
const int BatchOperationMetadata_State_State_ARRAYSIZE = BatchOperationMetadata_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* BatchOperationMetadata_State_descriptor();
inline const ::std::string& BatchOperationMetadata_State_Name(BatchOperationMetadata_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    BatchOperationMetadata_State_descriptor(), value);
}
inline bool BatchOperationMetadata_State_Parse(
    const ::std::string& name, BatchOperationMetadata_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BatchOperationMetadata_State>(
    BatchOperationMetadata_State_descriptor(), name, value);
}
// ===================================================================

class Product_KeyValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.Product.KeyValue) */ {
 public:
  Product_KeyValue();
  virtual ~Product_KeyValue();

  Product_KeyValue(const Product_KeyValue& from);

  inline Product_KeyValue& operator=(const Product_KeyValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Product_KeyValue(Product_KeyValue&& from) noexcept
    : Product_KeyValue() {
    *this = ::std::move(from);
  }

  inline Product_KeyValue& operator=(Product_KeyValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Product_KeyValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Product_KeyValue* internal_default_instance() {
    return reinterpret_cast<const Product_KeyValue*>(
               &_Product_KeyValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Product_KeyValue* other);
  void Swap(Product_KeyValue* other);
  friend void swap(Product_KeyValue& a, Product_KeyValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Product_KeyValue* New() const final {
    return CreateMaybeMessage<Product_KeyValue>(NULL);
  }

  Product_KeyValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Product_KeyValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Product_KeyValue& from);
  void MergeFrom(const Product_KeyValue& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Product_KeyValue* other);
  protected:
  explicit Product_KeyValue(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_key();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_key(
      ::std::string* key);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_value();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_value(
      ::std::string* value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.Product.KeyValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Product : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.Product) */ {
 public:
  Product();
  virtual ~Product();

  Product(const Product& from);

  inline Product& operator=(const Product& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Product(Product&& from) noexcept
    : Product() {
    *this = ::std::move(from);
  }

  inline Product& operator=(Product&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Product& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Product* internal_default_instance() {
    return reinterpret_cast<const Product*>(
               &_Product_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(Product* other);
  void Swap(Product* other);
  friend void swap(Product& a, Product& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Product* New() const final {
    return CreateMaybeMessage<Product>(NULL);
  }

  Product* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Product>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Product& from);
  void MergeFrom(const Product& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Product* other);
  protected:
  explicit Product(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Product_KeyValue KeyValue;

  // accessors -------------------------------------------------------

  // repeated .google.cloud.vision.v1p3beta1.Product.KeyValue product_labels = 5;
  int product_labels_size() const;
  void clear_product_labels();
  static const int kProductLabelsFieldNumber = 5;
  ::google::cloud::vision::v1p3beta1::Product_KeyValue* mutable_product_labels(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product_KeyValue >*
      mutable_product_labels();
  const ::google::cloud::vision::v1p3beta1::Product_KeyValue& product_labels(int index) const;
  ::google::cloud::vision::v1p3beta1::Product_KeyValue* add_product_labels();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product_KeyValue >&
      product_labels() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string display_name = 2;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 2;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_display_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_display_name(
      ::std::string* display_name);

  // string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_description();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // string product_category = 4;
  void clear_product_category();
  static const int kProductCategoryFieldNumber = 4;
  const ::std::string& product_category() const;
  void set_product_category(const ::std::string& value);
  #if LANG_CXX11
  void set_product_category(::std::string&& value);
  #endif
  void set_product_category(const char* value);
  void set_product_category(const char* value, size_t size);
  ::std::string* mutable_product_category();
  ::std::string* release_product_category();
  void set_allocated_product_category(::std::string* product_category);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_product_category();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_product_category(
      ::std::string* product_category);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.Product)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product_KeyValue > product_labels_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr product_category_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ProductSet) */ {
 public:
  ProductSet();
  virtual ~ProductSet();

  ProductSet(const ProductSet& from);

  inline ProductSet& operator=(const ProductSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductSet(ProductSet&& from) noexcept
    : ProductSet() {
    *this = ::std::move(from);
  }

  inline ProductSet& operator=(ProductSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductSet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProductSet* internal_default_instance() {
    return reinterpret_cast<const ProductSet*>(
               &_ProductSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ProductSet* other);
  void Swap(ProductSet* other);
  friend void swap(ProductSet& a, ProductSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductSet* New() const final {
    return CreateMaybeMessage<ProductSet>(NULL);
  }

  ProductSet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProductSet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProductSet& from);
  void MergeFrom(const ProductSet& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProductSet* other);
  protected:
  explicit ProductSet(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string display_name = 2;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 2;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_display_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_display_name(
      ::std::string* display_name);

  // .google.protobuf.Timestamp index_time = 3;
  bool has_index_time() const;
  void clear_index_time();
  static const int kIndexTimeFieldNumber = 3;
  private:
  const ::google::protobuf::Timestamp& _internal_index_time() const;
  public:
  const ::google::protobuf::Timestamp& index_time() const;
  ::google::protobuf::Timestamp* release_index_time();
  ::google::protobuf::Timestamp* mutable_index_time();
  void set_allocated_index_time(::google::protobuf::Timestamp* index_time);
  void unsafe_arena_set_allocated_index_time(
      ::google::protobuf::Timestamp* index_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_index_time();

  // .google.rpc.Status index_error = 4;
  bool has_index_error() const;
  void clear_index_error();
  static const int kIndexErrorFieldNumber = 4;
  private:
  const ::google::rpc::Status& _internal_index_error() const;
  public:
  const ::google::rpc::Status& index_error() const;
  ::google::rpc::Status* release_index_error();
  ::google::rpc::Status* mutable_index_error();
  void set_allocated_index_error(::google::rpc::Status* index_error);
  void unsafe_arena_set_allocated_index_error(
      ::google::rpc::Status* index_error);
  ::google::rpc::Status* unsafe_arena_release_index_error();

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ProductSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::Timestamp* index_time_;
  ::google::rpc::Status* index_error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReferenceImage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ReferenceImage) */ {
 public:
  ReferenceImage();
  virtual ~ReferenceImage();

  ReferenceImage(const ReferenceImage& from);

  inline ReferenceImage& operator=(const ReferenceImage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReferenceImage(ReferenceImage&& from) noexcept
    : ReferenceImage() {
    *this = ::std::move(from);
  }

  inline ReferenceImage& operator=(ReferenceImage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReferenceImage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReferenceImage* internal_default_instance() {
    return reinterpret_cast<const ReferenceImage*>(
               &_ReferenceImage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(ReferenceImage* other);
  void Swap(ReferenceImage* other);
  friend void swap(ReferenceImage& a, ReferenceImage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReferenceImage* New() const final {
    return CreateMaybeMessage<ReferenceImage>(NULL);
  }

  ReferenceImage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReferenceImage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReferenceImage& from);
  void MergeFrom(const ReferenceImage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReferenceImage* other);
  protected:
  explicit ReferenceImage(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.vision.v1p3beta1.BoundingPoly bounding_polys = 3;
  int bounding_polys_size() const;
  void clear_bounding_polys();
  static const int kBoundingPolysFieldNumber = 3;
  ::google::cloud::vision::v1p3beta1::BoundingPoly* mutable_bounding_polys(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::BoundingPoly >*
      mutable_bounding_polys();
  const ::google::cloud::vision::v1p3beta1::BoundingPoly& bounding_polys(int index) const;
  ::google::cloud::vision::v1p3beta1::BoundingPoly* add_bounding_polys();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::BoundingPoly >&
      bounding_polys() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string uri = 2;
  void clear_uri();
  static const int kUriFieldNumber = 2;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_uri(
      ::std::string* uri);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ReferenceImage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::BoundingPoly > bounding_polys_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateProductRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.CreateProductRequest) */ {
 public:
  CreateProductRequest();
  virtual ~CreateProductRequest();

  CreateProductRequest(const CreateProductRequest& from);

  inline CreateProductRequest& operator=(const CreateProductRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateProductRequest(CreateProductRequest&& from) noexcept
    : CreateProductRequest() {
    *this = ::std::move(from);
  }

  inline CreateProductRequest& operator=(CreateProductRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateProductRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateProductRequest* internal_default_instance() {
    return reinterpret_cast<const CreateProductRequest*>(
               &_CreateProductRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(CreateProductRequest* other);
  void Swap(CreateProductRequest* other);
  friend void swap(CreateProductRequest& a, CreateProductRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateProductRequest* New() const final {
    return CreateMaybeMessage<CreateProductRequest>(NULL);
  }

  CreateProductRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateProductRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateProductRequest& from);
  void MergeFrom(const CreateProductRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateProductRequest* other);
  protected:
  explicit CreateProductRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string product_id = 3;
  void clear_product_id();
  static const int kProductIdFieldNumber = 3;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_product_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_product_id(
      ::std::string* product_id);

  // .google.cloud.vision.v1p3beta1.Product product = 2;
  bool has_product() const;
  void clear_product();
  static const int kProductFieldNumber = 2;
  private:
  const ::google::cloud::vision::v1p3beta1::Product& _internal_product() const;
  public:
  const ::google::cloud::vision::v1p3beta1::Product& product() const;
  ::google::cloud::vision::v1p3beta1::Product* release_product();
  ::google::cloud::vision::v1p3beta1::Product* mutable_product();
  void set_allocated_product(::google::cloud::vision::v1p3beta1::Product* product);
  void unsafe_arena_set_allocated_product(
      ::google::cloud::vision::v1p3beta1::Product* product);
  ::google::cloud::vision::v1p3beta1::Product* unsafe_arena_release_product();

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.CreateProductRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::cloud::vision::v1p3beta1::Product* product_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListProductsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ListProductsRequest) */ {
 public:
  ListProductsRequest();
  virtual ~ListProductsRequest();

  ListProductsRequest(const ListProductsRequest& from);

  inline ListProductsRequest& operator=(const ListProductsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListProductsRequest(ListProductsRequest&& from) noexcept
    : ListProductsRequest() {
    *this = ::std::move(from);
  }

  inline ListProductsRequest& operator=(ListProductsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListProductsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListProductsRequest* internal_default_instance() {
    return reinterpret_cast<const ListProductsRequest*>(
               &_ListProductsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(ListProductsRequest* other);
  void Swap(ListProductsRequest* other);
  friend void swap(ListProductsRequest& a, ListProductsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListProductsRequest* New() const final {
    return CreateMaybeMessage<ListProductsRequest>(NULL);
  }

  ListProductsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListProductsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListProductsRequest& from);
  void MergeFrom(const ListProductsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListProductsRequest* other);
  protected:
  explicit ListProductsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ListProductsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListProductsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ListProductsResponse) */ {
 public:
  ListProductsResponse();
  virtual ~ListProductsResponse();

  ListProductsResponse(const ListProductsResponse& from);

  inline ListProductsResponse& operator=(const ListProductsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListProductsResponse(ListProductsResponse&& from) noexcept
    : ListProductsResponse() {
    *this = ::std::move(from);
  }

  inline ListProductsResponse& operator=(ListProductsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListProductsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListProductsResponse* internal_default_instance() {
    return reinterpret_cast<const ListProductsResponse*>(
               &_ListProductsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(ListProductsResponse* other);
  void Swap(ListProductsResponse* other);
  friend void swap(ListProductsResponse& a, ListProductsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListProductsResponse* New() const final {
    return CreateMaybeMessage<ListProductsResponse>(NULL);
  }

  ListProductsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListProductsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListProductsResponse& from);
  void MergeFrom(const ListProductsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListProductsResponse* other);
  protected:
  explicit ListProductsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.vision.v1p3beta1.Product products = 1;
  int products_size() const;
  void clear_products();
  static const int kProductsFieldNumber = 1;
  ::google::cloud::vision::v1p3beta1::Product* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product >*
      mutable_products();
  const ::google::cloud::vision::v1p3beta1::Product& products(int index) const;
  ::google::cloud::vision::v1p3beta1::Product* add_products();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product >&
      products() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ListProductsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product > products_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetProductRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.GetProductRequest) */ {
 public:
  GetProductRequest();
  virtual ~GetProductRequest();

  GetProductRequest(const GetProductRequest& from);

  inline GetProductRequest& operator=(const GetProductRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetProductRequest(GetProductRequest&& from) noexcept
    : GetProductRequest() {
    *this = ::std::move(from);
  }

  inline GetProductRequest& operator=(GetProductRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProductRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetProductRequest* internal_default_instance() {
    return reinterpret_cast<const GetProductRequest*>(
               &_GetProductRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(GetProductRequest* other);
  void Swap(GetProductRequest* other);
  friend void swap(GetProductRequest& a, GetProductRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetProductRequest* New() const final {
    return CreateMaybeMessage<GetProductRequest>(NULL);
  }

  GetProductRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetProductRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetProductRequest& from);
  void MergeFrom(const GetProductRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetProductRequest* other);
  protected:
  explicit GetProductRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.GetProductRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateProductRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.UpdateProductRequest) */ {
 public:
  UpdateProductRequest();
  virtual ~UpdateProductRequest();

  UpdateProductRequest(const UpdateProductRequest& from);

  inline UpdateProductRequest& operator=(const UpdateProductRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateProductRequest(UpdateProductRequest&& from) noexcept
    : UpdateProductRequest() {
    *this = ::std::move(from);
  }

  inline UpdateProductRequest& operator=(UpdateProductRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateProductRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateProductRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateProductRequest*>(
               &_UpdateProductRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(UpdateProductRequest* other);
  void Swap(UpdateProductRequest* other);
  friend void swap(UpdateProductRequest& a, UpdateProductRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateProductRequest* New() const final {
    return CreateMaybeMessage<UpdateProductRequest>(NULL);
  }

  UpdateProductRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateProductRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateProductRequest& from);
  void MergeFrom(const UpdateProductRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateProductRequest* other);
  protected:
  explicit UpdateProductRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.vision.v1p3beta1.Product product = 1;
  bool has_product() const;
  void clear_product();
  static const int kProductFieldNumber = 1;
  private:
  const ::google::cloud::vision::v1p3beta1::Product& _internal_product() const;
  public:
  const ::google::cloud::vision::v1p3beta1::Product& product() const;
  ::google::cloud::vision::v1p3beta1::Product* release_product();
  ::google::cloud::vision::v1p3beta1::Product* mutable_product();
  void set_allocated_product(::google::cloud::vision::v1p3beta1::Product* product);
  void unsafe_arena_set_allocated_product(
      ::google::cloud::vision::v1p3beta1::Product* product);
  ::google::cloud::vision::v1p3beta1::Product* unsafe_arena_release_product();

  // .google.protobuf.FieldMask update_mask = 2;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 2;
  private:
  const ::google::protobuf::FieldMask& _internal_update_mask() const;
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.UpdateProductRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::cloud::vision::v1p3beta1::Product* product_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteProductRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.DeleteProductRequest) */ {
 public:
  DeleteProductRequest();
  virtual ~DeleteProductRequest();

  DeleteProductRequest(const DeleteProductRequest& from);

  inline DeleteProductRequest& operator=(const DeleteProductRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteProductRequest(DeleteProductRequest&& from) noexcept
    : DeleteProductRequest() {
    *this = ::std::move(from);
  }

  inline DeleteProductRequest& operator=(DeleteProductRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteProductRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteProductRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteProductRequest*>(
               &_DeleteProductRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(DeleteProductRequest* other);
  void Swap(DeleteProductRequest* other);
  friend void swap(DeleteProductRequest& a, DeleteProductRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteProductRequest* New() const final {
    return CreateMaybeMessage<DeleteProductRequest>(NULL);
  }

  DeleteProductRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteProductRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteProductRequest& from);
  void MergeFrom(const DeleteProductRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteProductRequest* other);
  protected:
  explicit DeleteProductRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.DeleteProductRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateProductSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.CreateProductSetRequest) */ {
 public:
  CreateProductSetRequest();
  virtual ~CreateProductSetRequest();

  CreateProductSetRequest(const CreateProductSetRequest& from);

  inline CreateProductSetRequest& operator=(const CreateProductSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateProductSetRequest(CreateProductSetRequest&& from) noexcept
    : CreateProductSetRequest() {
    *this = ::std::move(from);
  }

  inline CreateProductSetRequest& operator=(CreateProductSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateProductSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateProductSetRequest* internal_default_instance() {
    return reinterpret_cast<const CreateProductSetRequest*>(
               &_CreateProductSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(CreateProductSetRequest* other);
  void Swap(CreateProductSetRequest* other);
  friend void swap(CreateProductSetRequest& a, CreateProductSetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateProductSetRequest* New() const final {
    return CreateMaybeMessage<CreateProductSetRequest>(NULL);
  }

  CreateProductSetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateProductSetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateProductSetRequest& from);
  void MergeFrom(const CreateProductSetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateProductSetRequest* other);
  protected:
  explicit CreateProductSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string product_set_id = 3;
  void clear_product_set_id();
  static const int kProductSetIdFieldNumber = 3;
  const ::std::string& product_set_id() const;
  void set_product_set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_set_id(::std::string&& value);
  #endif
  void set_product_set_id(const char* value);
  void set_product_set_id(const char* value, size_t size);
  ::std::string* mutable_product_set_id();
  ::std::string* release_product_set_id();
  void set_allocated_product_set_id(::std::string* product_set_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_product_set_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_product_set_id(
      ::std::string* product_set_id);

  // .google.cloud.vision.v1p3beta1.ProductSet product_set = 2;
  bool has_product_set() const;
  void clear_product_set();
  static const int kProductSetFieldNumber = 2;
  private:
  const ::google::cloud::vision::v1p3beta1::ProductSet& _internal_product_set() const;
  public:
  const ::google::cloud::vision::v1p3beta1::ProductSet& product_set() const;
  ::google::cloud::vision::v1p3beta1::ProductSet* release_product_set();
  ::google::cloud::vision::v1p3beta1::ProductSet* mutable_product_set();
  void set_allocated_product_set(::google::cloud::vision::v1p3beta1::ProductSet* product_set);
  void unsafe_arena_set_allocated_product_set(
      ::google::cloud::vision::v1p3beta1::ProductSet* product_set);
  ::google::cloud::vision::v1p3beta1::ProductSet* unsafe_arena_release_product_set();

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.CreateProductSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr product_set_id_;
  ::google::cloud::vision::v1p3beta1::ProductSet* product_set_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListProductSetsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ListProductSetsRequest) */ {
 public:
  ListProductSetsRequest();
  virtual ~ListProductSetsRequest();

  ListProductSetsRequest(const ListProductSetsRequest& from);

  inline ListProductSetsRequest& operator=(const ListProductSetsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListProductSetsRequest(ListProductSetsRequest&& from) noexcept
    : ListProductSetsRequest() {
    *this = ::std::move(from);
  }

  inline ListProductSetsRequest& operator=(ListProductSetsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListProductSetsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListProductSetsRequest* internal_default_instance() {
    return reinterpret_cast<const ListProductSetsRequest*>(
               &_ListProductSetsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(ListProductSetsRequest* other);
  void Swap(ListProductSetsRequest* other);
  friend void swap(ListProductSetsRequest& a, ListProductSetsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListProductSetsRequest* New() const final {
    return CreateMaybeMessage<ListProductSetsRequest>(NULL);
  }

  ListProductSetsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListProductSetsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListProductSetsRequest& from);
  void MergeFrom(const ListProductSetsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListProductSetsRequest* other);
  protected:
  explicit ListProductSetsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ListProductSetsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListProductSetsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ListProductSetsResponse) */ {
 public:
  ListProductSetsResponse();
  virtual ~ListProductSetsResponse();

  ListProductSetsResponse(const ListProductSetsResponse& from);

  inline ListProductSetsResponse& operator=(const ListProductSetsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListProductSetsResponse(ListProductSetsResponse&& from) noexcept
    : ListProductSetsResponse() {
    *this = ::std::move(from);
  }

  inline ListProductSetsResponse& operator=(ListProductSetsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListProductSetsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListProductSetsResponse* internal_default_instance() {
    return reinterpret_cast<const ListProductSetsResponse*>(
               &_ListProductSetsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(ListProductSetsResponse* other);
  void Swap(ListProductSetsResponse* other);
  friend void swap(ListProductSetsResponse& a, ListProductSetsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListProductSetsResponse* New() const final {
    return CreateMaybeMessage<ListProductSetsResponse>(NULL);
  }

  ListProductSetsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListProductSetsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListProductSetsResponse& from);
  void MergeFrom(const ListProductSetsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListProductSetsResponse* other);
  protected:
  explicit ListProductSetsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.vision.v1p3beta1.ProductSet product_sets = 1;
  int product_sets_size() const;
  void clear_product_sets();
  static const int kProductSetsFieldNumber = 1;
  ::google::cloud::vision::v1p3beta1::ProductSet* mutable_product_sets(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSet >*
      mutable_product_sets();
  const ::google::cloud::vision::v1p3beta1::ProductSet& product_sets(int index) const;
  ::google::cloud::vision::v1p3beta1::ProductSet* add_product_sets();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSet >&
      product_sets() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ListProductSetsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSet > product_sets_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetProductSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.GetProductSetRequest) */ {
 public:
  GetProductSetRequest();
  virtual ~GetProductSetRequest();

  GetProductSetRequest(const GetProductSetRequest& from);

  inline GetProductSetRequest& operator=(const GetProductSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetProductSetRequest(GetProductSetRequest&& from) noexcept
    : GetProductSetRequest() {
    *this = ::std::move(from);
  }

  inline GetProductSetRequest& operator=(GetProductSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProductSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetProductSetRequest* internal_default_instance() {
    return reinterpret_cast<const GetProductSetRequest*>(
               &_GetProductSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(GetProductSetRequest* other);
  void Swap(GetProductSetRequest* other);
  friend void swap(GetProductSetRequest& a, GetProductSetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetProductSetRequest* New() const final {
    return CreateMaybeMessage<GetProductSetRequest>(NULL);
  }

  GetProductSetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetProductSetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetProductSetRequest& from);
  void MergeFrom(const GetProductSetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetProductSetRequest* other);
  protected:
  explicit GetProductSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.GetProductSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateProductSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.UpdateProductSetRequest) */ {
 public:
  UpdateProductSetRequest();
  virtual ~UpdateProductSetRequest();

  UpdateProductSetRequest(const UpdateProductSetRequest& from);

  inline UpdateProductSetRequest& operator=(const UpdateProductSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateProductSetRequest(UpdateProductSetRequest&& from) noexcept
    : UpdateProductSetRequest() {
    *this = ::std::move(from);
  }

  inline UpdateProductSetRequest& operator=(UpdateProductSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateProductSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateProductSetRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateProductSetRequest*>(
               &_UpdateProductSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(UpdateProductSetRequest* other);
  void Swap(UpdateProductSetRequest* other);
  friend void swap(UpdateProductSetRequest& a, UpdateProductSetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateProductSetRequest* New() const final {
    return CreateMaybeMessage<UpdateProductSetRequest>(NULL);
  }

  UpdateProductSetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateProductSetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateProductSetRequest& from);
  void MergeFrom(const UpdateProductSetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateProductSetRequest* other);
  protected:
  explicit UpdateProductSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.vision.v1p3beta1.ProductSet product_set = 1;
  bool has_product_set() const;
  void clear_product_set();
  static const int kProductSetFieldNumber = 1;
  private:
  const ::google::cloud::vision::v1p3beta1::ProductSet& _internal_product_set() const;
  public:
  const ::google::cloud::vision::v1p3beta1::ProductSet& product_set() const;
  ::google::cloud::vision::v1p3beta1::ProductSet* release_product_set();
  ::google::cloud::vision::v1p3beta1::ProductSet* mutable_product_set();
  void set_allocated_product_set(::google::cloud::vision::v1p3beta1::ProductSet* product_set);
  void unsafe_arena_set_allocated_product_set(
      ::google::cloud::vision::v1p3beta1::ProductSet* product_set);
  ::google::cloud::vision::v1p3beta1::ProductSet* unsafe_arena_release_product_set();

  // .google.protobuf.FieldMask update_mask = 2;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 2;
  private:
  const ::google::protobuf::FieldMask& _internal_update_mask() const;
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.UpdateProductSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::cloud::vision::v1p3beta1::ProductSet* product_set_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteProductSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.DeleteProductSetRequest) */ {
 public:
  DeleteProductSetRequest();
  virtual ~DeleteProductSetRequest();

  DeleteProductSetRequest(const DeleteProductSetRequest& from);

  inline DeleteProductSetRequest& operator=(const DeleteProductSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteProductSetRequest(DeleteProductSetRequest&& from) noexcept
    : DeleteProductSetRequest() {
    *this = ::std::move(from);
  }

  inline DeleteProductSetRequest& operator=(DeleteProductSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteProductSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteProductSetRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteProductSetRequest*>(
               &_DeleteProductSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(DeleteProductSetRequest* other);
  void Swap(DeleteProductSetRequest* other);
  friend void swap(DeleteProductSetRequest& a, DeleteProductSetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteProductSetRequest* New() const final {
    return CreateMaybeMessage<DeleteProductSetRequest>(NULL);
  }

  DeleteProductSetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteProductSetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteProductSetRequest& from);
  void MergeFrom(const DeleteProductSetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteProductSetRequest* other);
  protected:
  explicit DeleteProductSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.DeleteProductSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateReferenceImageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest) */ {
 public:
  CreateReferenceImageRequest();
  virtual ~CreateReferenceImageRequest();

  CreateReferenceImageRequest(const CreateReferenceImageRequest& from);

  inline CreateReferenceImageRequest& operator=(const CreateReferenceImageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateReferenceImageRequest(CreateReferenceImageRequest&& from) noexcept
    : CreateReferenceImageRequest() {
    *this = ::std::move(from);
  }

  inline CreateReferenceImageRequest& operator=(CreateReferenceImageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateReferenceImageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateReferenceImageRequest* internal_default_instance() {
    return reinterpret_cast<const CreateReferenceImageRequest*>(
               &_CreateReferenceImageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(CreateReferenceImageRequest* other);
  void Swap(CreateReferenceImageRequest* other);
  friend void swap(CreateReferenceImageRequest& a, CreateReferenceImageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateReferenceImageRequest* New() const final {
    return CreateMaybeMessage<CreateReferenceImageRequest>(NULL);
  }

  CreateReferenceImageRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateReferenceImageRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateReferenceImageRequest& from);
  void MergeFrom(const CreateReferenceImageRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateReferenceImageRequest* other);
  protected:
  explicit CreateReferenceImageRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string reference_image_id = 3;
  void clear_reference_image_id();
  static const int kReferenceImageIdFieldNumber = 3;
  const ::std::string& reference_image_id() const;
  void set_reference_image_id(const ::std::string& value);
  #if LANG_CXX11
  void set_reference_image_id(::std::string&& value);
  #endif
  void set_reference_image_id(const char* value);
  void set_reference_image_id(const char* value, size_t size);
  ::std::string* mutable_reference_image_id();
  ::std::string* release_reference_image_id();
  void set_allocated_reference_image_id(::std::string* reference_image_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reference_image_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reference_image_id(
      ::std::string* reference_image_id);

  // .google.cloud.vision.v1p3beta1.ReferenceImage reference_image = 2;
  bool has_reference_image() const;
  void clear_reference_image();
  static const int kReferenceImageFieldNumber = 2;
  private:
  const ::google::cloud::vision::v1p3beta1::ReferenceImage& _internal_reference_image() const;
  public:
  const ::google::cloud::vision::v1p3beta1::ReferenceImage& reference_image() const;
  ::google::cloud::vision::v1p3beta1::ReferenceImage* release_reference_image();
  ::google::cloud::vision::v1p3beta1::ReferenceImage* mutable_reference_image();
  void set_allocated_reference_image(::google::cloud::vision::v1p3beta1::ReferenceImage* reference_image);
  void unsafe_arena_set_allocated_reference_image(
      ::google::cloud::vision::v1p3beta1::ReferenceImage* reference_image);
  ::google::cloud::vision::v1p3beta1::ReferenceImage* unsafe_arena_release_reference_image();

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr reference_image_id_;
  ::google::cloud::vision::v1p3beta1::ReferenceImage* reference_image_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListReferenceImagesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest) */ {
 public:
  ListReferenceImagesRequest();
  virtual ~ListReferenceImagesRequest();

  ListReferenceImagesRequest(const ListReferenceImagesRequest& from);

  inline ListReferenceImagesRequest& operator=(const ListReferenceImagesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListReferenceImagesRequest(ListReferenceImagesRequest&& from) noexcept
    : ListReferenceImagesRequest() {
    *this = ::std::move(from);
  }

  inline ListReferenceImagesRequest& operator=(ListReferenceImagesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListReferenceImagesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListReferenceImagesRequest* internal_default_instance() {
    return reinterpret_cast<const ListReferenceImagesRequest*>(
               &_ListReferenceImagesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(ListReferenceImagesRequest* other);
  void Swap(ListReferenceImagesRequest* other);
  friend void swap(ListReferenceImagesRequest& a, ListReferenceImagesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListReferenceImagesRequest* New() const final {
    return CreateMaybeMessage<ListReferenceImagesRequest>(NULL);
  }

  ListReferenceImagesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListReferenceImagesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListReferenceImagesRequest& from);
  void MergeFrom(const ListReferenceImagesRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListReferenceImagesRequest* other);
  protected:
  explicit ListReferenceImagesRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListReferenceImagesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse) */ {
 public:
  ListReferenceImagesResponse();
  virtual ~ListReferenceImagesResponse();

  ListReferenceImagesResponse(const ListReferenceImagesResponse& from);

  inline ListReferenceImagesResponse& operator=(const ListReferenceImagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListReferenceImagesResponse(ListReferenceImagesResponse&& from) noexcept
    : ListReferenceImagesResponse() {
    *this = ::std::move(from);
  }

  inline ListReferenceImagesResponse& operator=(ListReferenceImagesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListReferenceImagesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListReferenceImagesResponse* internal_default_instance() {
    return reinterpret_cast<const ListReferenceImagesResponse*>(
               &_ListReferenceImagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void UnsafeArenaSwap(ListReferenceImagesResponse* other);
  void Swap(ListReferenceImagesResponse* other);
  friend void swap(ListReferenceImagesResponse& a, ListReferenceImagesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListReferenceImagesResponse* New() const final {
    return CreateMaybeMessage<ListReferenceImagesResponse>(NULL);
  }

  ListReferenceImagesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListReferenceImagesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListReferenceImagesResponse& from);
  void MergeFrom(const ListReferenceImagesResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListReferenceImagesResponse* other);
  protected:
  explicit ListReferenceImagesResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.vision.v1p3beta1.ReferenceImage reference_images = 1;
  int reference_images_size() const;
  void clear_reference_images();
  static const int kReferenceImagesFieldNumber = 1;
  ::google::cloud::vision::v1p3beta1::ReferenceImage* mutable_reference_images(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ReferenceImage >*
      mutable_reference_images();
  const ::google::cloud::vision::v1p3beta1::ReferenceImage& reference_images(int index) const;
  ::google::cloud::vision::v1p3beta1::ReferenceImage* add_reference_images();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ReferenceImage >&
      reference_images() const;

  // string next_page_token = 3;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 3;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ReferenceImage > reference_images_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetReferenceImageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.GetReferenceImageRequest) */ {
 public:
  GetReferenceImageRequest();
  virtual ~GetReferenceImageRequest();

  GetReferenceImageRequest(const GetReferenceImageRequest& from);

  inline GetReferenceImageRequest& operator=(const GetReferenceImageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetReferenceImageRequest(GetReferenceImageRequest&& from) noexcept
    : GetReferenceImageRequest() {
    *this = ::std::move(from);
  }

  inline GetReferenceImageRequest& operator=(GetReferenceImageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReferenceImageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetReferenceImageRequest* internal_default_instance() {
    return reinterpret_cast<const GetReferenceImageRequest*>(
               &_GetReferenceImageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void UnsafeArenaSwap(GetReferenceImageRequest* other);
  void Swap(GetReferenceImageRequest* other);
  friend void swap(GetReferenceImageRequest& a, GetReferenceImageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetReferenceImageRequest* New() const final {
    return CreateMaybeMessage<GetReferenceImageRequest>(NULL);
  }

  GetReferenceImageRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetReferenceImageRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetReferenceImageRequest& from);
  void MergeFrom(const GetReferenceImageRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetReferenceImageRequest* other);
  protected:
  explicit GetReferenceImageRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.GetReferenceImageRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteReferenceImageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest) */ {
 public:
  DeleteReferenceImageRequest();
  virtual ~DeleteReferenceImageRequest();

  DeleteReferenceImageRequest(const DeleteReferenceImageRequest& from);

  inline DeleteReferenceImageRequest& operator=(const DeleteReferenceImageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteReferenceImageRequest(DeleteReferenceImageRequest&& from) noexcept
    : DeleteReferenceImageRequest() {
    *this = ::std::move(from);
  }

  inline DeleteReferenceImageRequest& operator=(DeleteReferenceImageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteReferenceImageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteReferenceImageRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteReferenceImageRequest*>(
               &_DeleteReferenceImageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void UnsafeArenaSwap(DeleteReferenceImageRequest* other);
  void Swap(DeleteReferenceImageRequest* other);
  friend void swap(DeleteReferenceImageRequest& a, DeleteReferenceImageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteReferenceImageRequest* New() const final {
    return CreateMaybeMessage<DeleteReferenceImageRequest>(NULL);
  }

  DeleteReferenceImageRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteReferenceImageRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteReferenceImageRequest& from);
  void MergeFrom(const DeleteReferenceImageRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteReferenceImageRequest* other);
  protected:
  explicit DeleteReferenceImageRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddProductToProductSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest) */ {
 public:
  AddProductToProductSetRequest();
  virtual ~AddProductToProductSetRequest();

  AddProductToProductSetRequest(const AddProductToProductSetRequest& from);

  inline AddProductToProductSetRequest& operator=(const AddProductToProductSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddProductToProductSetRequest(AddProductToProductSetRequest&& from) noexcept
    : AddProductToProductSetRequest() {
    *this = ::std::move(from);
  }

  inline AddProductToProductSetRequest& operator=(AddProductToProductSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddProductToProductSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddProductToProductSetRequest* internal_default_instance() {
    return reinterpret_cast<const AddProductToProductSetRequest*>(
               &_AddProductToProductSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void UnsafeArenaSwap(AddProductToProductSetRequest* other);
  void Swap(AddProductToProductSetRequest* other);
  friend void swap(AddProductToProductSetRequest& a, AddProductToProductSetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddProductToProductSetRequest* New() const final {
    return CreateMaybeMessage<AddProductToProductSetRequest>(NULL);
  }

  AddProductToProductSetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddProductToProductSetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddProductToProductSetRequest& from);
  void MergeFrom(const AddProductToProductSetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddProductToProductSetRequest* other);
  protected:
  explicit AddProductToProductSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string product = 2;
  void clear_product();
  static const int kProductFieldNumber = 2;
  const ::std::string& product() const;
  void set_product(const ::std::string& value);
  #if LANG_CXX11
  void set_product(::std::string&& value);
  #endif
  void set_product(const char* value);
  void set_product(const char* value, size_t size);
  ::std::string* mutable_product();
  ::std::string* release_product();
  void set_allocated_product(::std::string* product);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_product();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_product(
      ::std::string* product);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr product_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveProductFromProductSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest) */ {
 public:
  RemoveProductFromProductSetRequest();
  virtual ~RemoveProductFromProductSetRequest();

  RemoveProductFromProductSetRequest(const RemoveProductFromProductSetRequest& from);

  inline RemoveProductFromProductSetRequest& operator=(const RemoveProductFromProductSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveProductFromProductSetRequest(RemoveProductFromProductSetRequest&& from) noexcept
    : RemoveProductFromProductSetRequest() {
    *this = ::std::move(from);
  }

  inline RemoveProductFromProductSetRequest& operator=(RemoveProductFromProductSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveProductFromProductSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveProductFromProductSetRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveProductFromProductSetRequest*>(
               &_RemoveProductFromProductSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void UnsafeArenaSwap(RemoveProductFromProductSetRequest* other);
  void Swap(RemoveProductFromProductSetRequest* other);
  friend void swap(RemoveProductFromProductSetRequest& a, RemoveProductFromProductSetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveProductFromProductSetRequest* New() const final {
    return CreateMaybeMessage<RemoveProductFromProductSetRequest>(NULL);
  }

  RemoveProductFromProductSetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoveProductFromProductSetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoveProductFromProductSetRequest& from);
  void MergeFrom(const RemoveProductFromProductSetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveProductFromProductSetRequest* other);
  protected:
  explicit RemoveProductFromProductSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string product = 2;
  void clear_product();
  static const int kProductFieldNumber = 2;
  const ::std::string& product() const;
  void set_product(const ::std::string& value);
  #if LANG_CXX11
  void set_product(::std::string&& value);
  #endif
  void set_product(const char* value);
  void set_product(const char* value, size_t size);
  ::std::string* mutable_product();
  ::std::string* release_product();
  void set_allocated_product(::std::string* product);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_product();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_product(
      ::std::string* product);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr product_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListProductsInProductSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest) */ {
 public:
  ListProductsInProductSetRequest();
  virtual ~ListProductsInProductSetRequest();

  ListProductsInProductSetRequest(const ListProductsInProductSetRequest& from);

  inline ListProductsInProductSetRequest& operator=(const ListProductsInProductSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListProductsInProductSetRequest(ListProductsInProductSetRequest&& from) noexcept
    : ListProductsInProductSetRequest() {
    *this = ::std::move(from);
  }

  inline ListProductsInProductSetRequest& operator=(ListProductsInProductSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListProductsInProductSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListProductsInProductSetRequest* internal_default_instance() {
    return reinterpret_cast<const ListProductsInProductSetRequest*>(
               &_ListProductsInProductSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void UnsafeArenaSwap(ListProductsInProductSetRequest* other);
  void Swap(ListProductsInProductSetRequest* other);
  friend void swap(ListProductsInProductSetRequest& a, ListProductsInProductSetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListProductsInProductSetRequest* New() const final {
    return CreateMaybeMessage<ListProductsInProductSetRequest>(NULL);
  }

  ListProductsInProductSetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListProductsInProductSetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListProductsInProductSetRequest& from);
  void MergeFrom(const ListProductsInProductSetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListProductsInProductSetRequest* other);
  protected:
  explicit ListProductsInProductSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListProductsInProductSetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse) */ {
 public:
  ListProductsInProductSetResponse();
  virtual ~ListProductsInProductSetResponse();

  ListProductsInProductSetResponse(const ListProductsInProductSetResponse& from);

  inline ListProductsInProductSetResponse& operator=(const ListProductsInProductSetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListProductsInProductSetResponse(ListProductsInProductSetResponse&& from) noexcept
    : ListProductsInProductSetResponse() {
    *this = ::std::move(from);
  }

  inline ListProductsInProductSetResponse& operator=(ListProductsInProductSetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListProductsInProductSetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListProductsInProductSetResponse* internal_default_instance() {
    return reinterpret_cast<const ListProductsInProductSetResponse*>(
               &_ListProductsInProductSetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void UnsafeArenaSwap(ListProductsInProductSetResponse* other);
  void Swap(ListProductsInProductSetResponse* other);
  friend void swap(ListProductsInProductSetResponse& a, ListProductsInProductSetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListProductsInProductSetResponse* New() const final {
    return CreateMaybeMessage<ListProductsInProductSetResponse>(NULL);
  }

  ListProductsInProductSetResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListProductsInProductSetResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListProductsInProductSetResponse& from);
  void MergeFrom(const ListProductsInProductSetResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListProductsInProductSetResponse* other);
  protected:
  explicit ListProductsInProductSetResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.vision.v1p3beta1.Product products = 1;
  int products_size() const;
  void clear_products();
  static const int kProductsFieldNumber = 1;
  ::google::cloud::vision::v1p3beta1::Product* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product >*
      mutable_products();
  const ::google::cloud::vision::v1p3beta1::Product& products(int index) const;
  ::google::cloud::vision::v1p3beta1::Product* add_products();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product >&
      products() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product > products_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImportProductSetsGcsSource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource) */ {
 public:
  ImportProductSetsGcsSource();
  virtual ~ImportProductSetsGcsSource();

  ImportProductSetsGcsSource(const ImportProductSetsGcsSource& from);

  inline ImportProductSetsGcsSource& operator=(const ImportProductSetsGcsSource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImportProductSetsGcsSource(ImportProductSetsGcsSource&& from) noexcept
    : ImportProductSetsGcsSource() {
    *this = ::std::move(from);
  }

  inline ImportProductSetsGcsSource& operator=(ImportProductSetsGcsSource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportProductSetsGcsSource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImportProductSetsGcsSource* internal_default_instance() {
    return reinterpret_cast<const ImportProductSetsGcsSource*>(
               &_ImportProductSetsGcsSource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void UnsafeArenaSwap(ImportProductSetsGcsSource* other);
  void Swap(ImportProductSetsGcsSource* other);
  friend void swap(ImportProductSetsGcsSource& a, ImportProductSetsGcsSource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImportProductSetsGcsSource* New() const final {
    return CreateMaybeMessage<ImportProductSetsGcsSource>(NULL);
  }

  ImportProductSetsGcsSource* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImportProductSetsGcsSource>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImportProductSetsGcsSource& from);
  void MergeFrom(const ImportProductSetsGcsSource& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImportProductSetsGcsSource* other);
  protected:
  explicit ImportProductSetsGcsSource(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string csv_file_uri = 1;
  void clear_csv_file_uri();
  static const int kCsvFileUriFieldNumber = 1;
  const ::std::string& csv_file_uri() const;
  void set_csv_file_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_csv_file_uri(::std::string&& value);
  #endif
  void set_csv_file_uri(const char* value);
  void set_csv_file_uri(const char* value, size_t size);
  ::std::string* mutable_csv_file_uri();
  ::std::string* release_csv_file_uri();
  void set_allocated_csv_file_uri(::std::string* csv_file_uri);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_csv_file_uri();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_csv_file_uri(
      ::std::string* csv_file_uri);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr csv_file_uri_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImportProductSetsInputConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig) */ {
 public:
  ImportProductSetsInputConfig();
  virtual ~ImportProductSetsInputConfig();

  ImportProductSetsInputConfig(const ImportProductSetsInputConfig& from);

  inline ImportProductSetsInputConfig& operator=(const ImportProductSetsInputConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImportProductSetsInputConfig(ImportProductSetsInputConfig&& from) noexcept
    : ImportProductSetsInputConfig() {
    *this = ::std::move(from);
  }

  inline ImportProductSetsInputConfig& operator=(ImportProductSetsInputConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportProductSetsInputConfig& default_instance();

  enum SourceCase {
    kGcsSource = 1,
    SOURCE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImportProductSetsInputConfig* internal_default_instance() {
    return reinterpret_cast<const ImportProductSetsInputConfig*>(
               &_ImportProductSetsInputConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void UnsafeArenaSwap(ImportProductSetsInputConfig* other);
  void Swap(ImportProductSetsInputConfig* other);
  friend void swap(ImportProductSetsInputConfig& a, ImportProductSetsInputConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImportProductSetsInputConfig* New() const final {
    return CreateMaybeMessage<ImportProductSetsInputConfig>(NULL);
  }

  ImportProductSetsInputConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImportProductSetsInputConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImportProductSetsInputConfig& from);
  void MergeFrom(const ImportProductSetsInputConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImportProductSetsInputConfig* other);
  protected:
  explicit ImportProductSetsInputConfig(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource gcs_source = 1;
  bool has_gcs_source() const;
  void clear_gcs_source();
  static const int kGcsSourceFieldNumber = 1;
  private:
  const ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource& _internal_gcs_source() const;
  public:
  const ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource& gcs_source() const;
  ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource* release_gcs_source();
  ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource* mutable_gcs_source();
  void set_allocated_gcs_source(::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource* gcs_source);
  void unsafe_arena_set_allocated_gcs_source(
      ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource* gcs_source);
  ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource* unsafe_arena_release_gcs_source();

  void clear_source();
  SourceCase source_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig)
 private:
  void set_has_gcs_source();

  inline bool has_source() const;
  inline void clear_has_source();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union SourceUnion {
    SourceUnion() {}
    ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource* gcs_source_;
  } source_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImportProductSetsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ImportProductSetsRequest) */ {
 public:
  ImportProductSetsRequest();
  virtual ~ImportProductSetsRequest();

  ImportProductSetsRequest(const ImportProductSetsRequest& from);

  inline ImportProductSetsRequest& operator=(const ImportProductSetsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImportProductSetsRequest(ImportProductSetsRequest&& from) noexcept
    : ImportProductSetsRequest() {
    *this = ::std::move(from);
  }

  inline ImportProductSetsRequest& operator=(ImportProductSetsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportProductSetsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImportProductSetsRequest* internal_default_instance() {
    return reinterpret_cast<const ImportProductSetsRequest*>(
               &_ImportProductSetsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void UnsafeArenaSwap(ImportProductSetsRequest* other);
  void Swap(ImportProductSetsRequest* other);
  friend void swap(ImportProductSetsRequest& a, ImportProductSetsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImportProductSetsRequest* New() const final {
    return CreateMaybeMessage<ImportProductSetsRequest>(NULL);
  }

  ImportProductSetsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImportProductSetsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImportProductSetsRequest& from);
  void MergeFrom(const ImportProductSetsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImportProductSetsRequest* other);
  protected:
  explicit ImportProductSetsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // .google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig input_config = 2;
  bool has_input_config() const;
  void clear_input_config();
  static const int kInputConfigFieldNumber = 2;
  private:
  const ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig& _internal_input_config() const;
  public:
  const ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig& input_config() const;
  ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* release_input_config();
  ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* mutable_input_config();
  void set_allocated_input_config(::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* input_config);
  void unsafe_arena_set_allocated_input_config(
      ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* input_config);
  ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* unsafe_arena_release_input_config();

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ImportProductSetsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* input_config_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImportProductSetsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.ImportProductSetsResponse) */ {
 public:
  ImportProductSetsResponse();
  virtual ~ImportProductSetsResponse();

  ImportProductSetsResponse(const ImportProductSetsResponse& from);

  inline ImportProductSetsResponse& operator=(const ImportProductSetsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImportProductSetsResponse(ImportProductSetsResponse&& from) noexcept
    : ImportProductSetsResponse() {
    *this = ::std::move(from);
  }

  inline ImportProductSetsResponse& operator=(ImportProductSetsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportProductSetsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImportProductSetsResponse* internal_default_instance() {
    return reinterpret_cast<const ImportProductSetsResponse*>(
               &_ImportProductSetsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void UnsafeArenaSwap(ImportProductSetsResponse* other);
  void Swap(ImportProductSetsResponse* other);
  friend void swap(ImportProductSetsResponse& a, ImportProductSetsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImportProductSetsResponse* New() const final {
    return CreateMaybeMessage<ImportProductSetsResponse>(NULL);
  }

  ImportProductSetsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImportProductSetsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImportProductSetsResponse& from);
  void MergeFrom(const ImportProductSetsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImportProductSetsResponse* other);
  protected:
  explicit ImportProductSetsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.vision.v1p3beta1.ReferenceImage reference_images = 1;
  int reference_images_size() const;
  void clear_reference_images();
  static const int kReferenceImagesFieldNumber = 1;
  ::google::cloud::vision::v1p3beta1::ReferenceImage* mutable_reference_images(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ReferenceImage >*
      mutable_reference_images();
  const ::google::cloud::vision::v1p3beta1::ReferenceImage& reference_images(int index) const;
  ::google::cloud::vision::v1p3beta1::ReferenceImage* add_reference_images();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ReferenceImage >&
      reference_images() const;

  // repeated .google.rpc.Status statuses = 2;
  int statuses_size() const;
  void clear_statuses();
  static const int kStatusesFieldNumber = 2;
  ::google::rpc::Status* mutable_statuses(int index);
  ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >*
      mutable_statuses();
  const ::google::rpc::Status& statuses(int index) const;
  ::google::rpc::Status* add_statuses();
  const ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >&
      statuses() const;

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.ImportProductSetsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ReferenceImage > reference_images_;
  ::google::protobuf::RepeatedPtrField< ::google::rpc::Status > statuses_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchOperationMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1p3beta1.BatchOperationMetadata) */ {
 public:
  BatchOperationMetadata();
  virtual ~BatchOperationMetadata();

  BatchOperationMetadata(const BatchOperationMetadata& from);

  inline BatchOperationMetadata& operator=(const BatchOperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchOperationMetadata(BatchOperationMetadata&& from) noexcept
    : BatchOperationMetadata() {
    *this = ::std::move(from);
  }

  inline BatchOperationMetadata& operator=(BatchOperationMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchOperationMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchOperationMetadata* internal_default_instance() {
    return reinterpret_cast<const BatchOperationMetadata*>(
               &_BatchOperationMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void UnsafeArenaSwap(BatchOperationMetadata* other);
  void Swap(BatchOperationMetadata* other);
  friend void swap(BatchOperationMetadata& a, BatchOperationMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchOperationMetadata* New() const final {
    return CreateMaybeMessage<BatchOperationMetadata>(NULL);
  }

  BatchOperationMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BatchOperationMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BatchOperationMetadata& from);
  void MergeFrom(const BatchOperationMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchOperationMetadata* other);
  protected:
  explicit BatchOperationMetadata(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef BatchOperationMetadata_State State;
  static const State STATE_UNSPECIFIED =
    BatchOperationMetadata_State_STATE_UNSPECIFIED;
  static const State PROCESSING =
    BatchOperationMetadata_State_PROCESSING;
  static const State SUCCESSFUL =
    BatchOperationMetadata_State_SUCCESSFUL;
  static const State FAILED =
    BatchOperationMetadata_State_FAILED;
  static const State CANCELLED =
    BatchOperationMetadata_State_CANCELLED;
  static inline bool State_IsValid(int value) {
    return BatchOperationMetadata_State_IsValid(value);
  }
  static const State State_MIN =
    BatchOperationMetadata_State_State_MIN;
  static const State State_MAX =
    BatchOperationMetadata_State_State_MAX;
  static const int State_ARRAYSIZE =
    BatchOperationMetadata_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return BatchOperationMetadata_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return BatchOperationMetadata_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return BatchOperationMetadata_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .google.protobuf.Timestamp submit_time = 2;
  bool has_submit_time() const;
  void clear_submit_time();
  static const int kSubmitTimeFieldNumber = 2;
  private:
  const ::google::protobuf::Timestamp& _internal_submit_time() const;
  public:
  const ::google::protobuf::Timestamp& submit_time() const;
  ::google::protobuf::Timestamp* release_submit_time();
  ::google::protobuf::Timestamp* mutable_submit_time();
  void set_allocated_submit_time(::google::protobuf::Timestamp* submit_time);
  void unsafe_arena_set_allocated_submit_time(
      ::google::protobuf::Timestamp* submit_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_submit_time();

  // .google.protobuf.Timestamp end_time = 3;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  private:
  const ::google::protobuf::Timestamp& _internal_end_time() const;
  public:
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* release_end_time();
  ::google::protobuf::Timestamp* mutable_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);
  void unsafe_arena_set_allocated_end_time(
      ::google::protobuf::Timestamp* end_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_end_time();

  // .google.cloud.vision.v1p3beta1.BatchOperationMetadata.State state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::google::cloud::vision::v1p3beta1::BatchOperationMetadata_State state() const;
  void set_state(::google::cloud::vision::v1p3beta1::BatchOperationMetadata_State value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1p3beta1.BatchOperationMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::Timestamp* submit_time_;
  ::google::protobuf::Timestamp* end_time_;
  int state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Product_KeyValue

// string key = 1;
inline void Product_KeyValue::clear_key() {
  key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Product_KeyValue::key() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.Product.KeyValue.key)
  return key_.Get();
}
inline void Product_KeyValue::set_key(const ::std::string& value) {
  
  key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.Product.KeyValue.key)
}
#if LANG_CXX11
inline void Product_KeyValue::set_key(::std::string&& value) {
  
  key_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.Product.KeyValue.key)
}
#endif
inline void Product_KeyValue::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.Product.KeyValue.key)
}
inline void Product_KeyValue::set_key(const char* value,
    size_t size) {
  
  key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.Product.KeyValue.key)
}
inline ::std::string* Product_KeyValue::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.Product.KeyValue.key)
  return key_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Product_KeyValue::release_key() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.Product.KeyValue.key)
  
  return key_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Product_KeyValue::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.Product.KeyValue.key)
}
inline ::std::string* Product_KeyValue::unsafe_arena_release_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.Product.KeyValue.key)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return key_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Product_KeyValue::unsafe_arena_set_allocated_key(
    ::std::string* key) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (key != NULL) {
    
  } else {
    
  }
  key_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      key, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Product.KeyValue.key)
}

// string value = 2;
inline void Product_KeyValue::clear_value() {
  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Product_KeyValue::value() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.Product.KeyValue.value)
  return value_.Get();
}
inline void Product_KeyValue::set_value(const ::std::string& value) {
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.Product.KeyValue.value)
}
#if LANG_CXX11
inline void Product_KeyValue::set_value(::std::string&& value) {
  
  value_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.Product.KeyValue.value)
}
#endif
inline void Product_KeyValue::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.Product.KeyValue.value)
}
inline void Product_KeyValue::set_value(const char* value,
    size_t size) {
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.Product.KeyValue.value)
}
inline ::std::string* Product_KeyValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.Product.KeyValue.value)
  return value_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Product_KeyValue::release_value() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.Product.KeyValue.value)
  
  return value_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Product_KeyValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.Product.KeyValue.value)
}
inline ::std::string* Product_KeyValue::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.Product.KeyValue.value)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return value_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Product_KeyValue::unsafe_arena_set_allocated_value(
    ::std::string* value) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (value != NULL) {
    
  } else {
    
  }
  value_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Product.KeyValue.value)
}

// -------------------------------------------------------------------

// Product

// string name = 1;
inline void Product::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Product::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.Product.name)
  return name_.Get();
}
inline void Product::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.Product.name)
}
#if LANG_CXX11
inline void Product::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.Product.name)
}
#endif
inline void Product::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.Product.name)
}
inline void Product::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.Product.name)
}
inline ::std::string* Product::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.Product.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Product::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.Product.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Product::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.Product.name)
}
inline ::std::string* Product::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.Product.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Product::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Product.name)
}

// string display_name = 2;
inline void Product::clear_display_name() {
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Product::display_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.Product.display_name)
  return display_name_.Get();
}
inline void Product::set_display_name(const ::std::string& value) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.Product.display_name)
}
#if LANG_CXX11
inline void Product::set_display_name(::std::string&& value) {
  
  display_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.Product.display_name)
}
#endif
inline void Product::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.Product.display_name)
}
inline void Product::set_display_name(const char* value,
    size_t size) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.Product.display_name)
}
inline ::std::string* Product::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.Product.display_name)
  return display_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Product::release_display_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.Product.display_name)
  
  return display_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Product::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.Product.display_name)
}
inline ::std::string* Product::unsafe_arena_release_display_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.Product.display_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return display_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Product::unsafe_arena_set_allocated_display_name(
    ::std::string* display_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      display_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Product.display_name)
}

// string description = 3;
inline void Product::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Product::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.Product.description)
  return description_.Get();
}
inline void Product::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.Product.description)
}
#if LANG_CXX11
inline void Product::set_description(::std::string&& value) {
  
  description_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.Product.description)
}
#endif
inline void Product::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.Product.description)
}
inline void Product::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.Product.description)
}
inline ::std::string* Product::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.Product.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Product::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.Product.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Product::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.Product.description)
}
inline ::std::string* Product::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.Product.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Product::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Product.description)
}

// string product_category = 4;
inline void Product::clear_product_category() {
  product_category_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Product::product_category() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.Product.product_category)
  return product_category_.Get();
}
inline void Product::set_product_category(const ::std::string& value) {
  
  product_category_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.Product.product_category)
}
#if LANG_CXX11
inline void Product::set_product_category(::std::string&& value) {
  
  product_category_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.Product.product_category)
}
#endif
inline void Product::set_product_category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_category_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.Product.product_category)
}
inline void Product::set_product_category(const char* value,
    size_t size) {
  
  product_category_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.Product.product_category)
}
inline ::std::string* Product::mutable_product_category() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.Product.product_category)
  return product_category_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Product::release_product_category() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.Product.product_category)
  
  return product_category_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Product::set_allocated_product_category(::std::string* product_category) {
  if (product_category != NULL) {
    
  } else {
    
  }
  product_category_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_category,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.Product.product_category)
}
inline ::std::string* Product::unsafe_arena_release_product_category() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.Product.product_category)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return product_category_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Product::unsafe_arena_set_allocated_product_category(
    ::std::string* product_category) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (product_category != NULL) {
    
  } else {
    
  }
  product_category_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      product_category, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.Product.product_category)
}

// repeated .google.cloud.vision.v1p3beta1.Product.KeyValue product_labels = 5;
inline int Product::product_labels_size() const {
  return product_labels_.size();
}
inline void Product::clear_product_labels() {
  product_labels_.Clear();
}
inline ::google::cloud::vision::v1p3beta1::Product_KeyValue* Product::mutable_product_labels(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.Product.product_labels)
  return product_labels_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product_KeyValue >*
Product::mutable_product_labels() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1p3beta1.Product.product_labels)
  return &product_labels_;
}
inline const ::google::cloud::vision::v1p3beta1::Product_KeyValue& Product::product_labels(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.Product.product_labels)
  return product_labels_.Get(index);
}
inline ::google::cloud::vision::v1p3beta1::Product_KeyValue* Product::add_product_labels() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1p3beta1.Product.product_labels)
  return product_labels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product_KeyValue >&
Product::product_labels() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1p3beta1.Product.product_labels)
  return product_labels_;
}

// -------------------------------------------------------------------

// ProductSet

// string name = 1;
inline void ProductSet::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ProductSet::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSet.name)
  return name_.Get();
}
inline void ProductSet::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSet.name)
}
#if LANG_CXX11
inline void ProductSet::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ProductSet.name)
}
#endif
inline void ProductSet::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ProductSet.name)
}
inline void ProductSet::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ProductSet.name)
}
inline ::std::string* ProductSet::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSet.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductSet::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSet.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ProductSet::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSet.name)
}
inline ::std::string* ProductSet::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSet.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductSet::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ProductSet.name)
}

// string display_name = 2;
inline void ProductSet::clear_display_name() {
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ProductSet::display_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSet.display_name)
  return display_name_.Get();
}
inline void ProductSet::set_display_name(const ::std::string& value) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ProductSet.display_name)
}
#if LANG_CXX11
inline void ProductSet::set_display_name(::std::string&& value) {
  
  display_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ProductSet.display_name)
}
#endif
inline void ProductSet::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ProductSet.display_name)
}
inline void ProductSet::set_display_name(const char* value,
    size_t size) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ProductSet.display_name)
}
inline ::std::string* ProductSet::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSet.display_name)
  return display_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ProductSet::release_display_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSet.display_name)
  
  return display_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ProductSet::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSet.display_name)
}
inline ::std::string* ProductSet::unsafe_arena_release_display_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSet.display_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return display_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ProductSet::unsafe_arena_set_allocated_display_name(
    ::std::string* display_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      display_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ProductSet.display_name)
}

// .google.protobuf.Timestamp index_time = 3;
inline bool ProductSet::has_index_time() const {
  return this != internal_default_instance() && index_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& ProductSet::_internal_index_time() const {
  return *index_time_;
}
inline const ::google::protobuf::Timestamp& ProductSet::index_time() const {
  const ::google::protobuf::Timestamp* p = index_time_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSet.index_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* ProductSet::release_index_time() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSet.index_time)
  
  ::google::protobuf::Timestamp* temp = index_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  index_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* ProductSet::unsafe_arena_release_index_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSet.index_time)
  
  ::google::protobuf::Timestamp* temp = index_time_;
  index_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* ProductSet::mutable_index_time() {
  
  if (index_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    index_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSet.index_time)
  return index_time_;
}
inline void ProductSet::set_allocated_index_time(::google::protobuf::Timestamp* index_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(index_time_);
  }
  if (index_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(index_time)->GetArena();
    if (message_arena != submessage_arena) {
      index_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, index_time, submessage_arena);
    }
    
  } else {
    
  }
  index_time_ = index_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSet.index_time)
}

// .google.rpc.Status index_error = 4;
inline bool ProductSet::has_index_error() const {
  return this != internal_default_instance() && index_error_ != NULL;
}
inline const ::google::rpc::Status& ProductSet::_internal_index_error() const {
  return *index_error_;
}
inline const ::google::rpc::Status& ProductSet::index_error() const {
  const ::google::rpc::Status* p = index_error_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ProductSet.index_error)
  return p != NULL ? *p : *reinterpret_cast<const ::google::rpc::Status*>(
      &::google::rpc::_Status_default_instance_);
}
inline ::google::rpc::Status* ProductSet::release_index_error() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ProductSet.index_error)
  
  ::google::rpc::Status* temp = index_error_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  index_error_ = NULL;
  return temp;
}
inline ::google::rpc::Status* ProductSet::unsafe_arena_release_index_error() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ProductSet.index_error)
  
  ::google::rpc::Status* temp = index_error_;
  index_error_ = NULL;
  return temp;
}
inline ::google::rpc::Status* ProductSet::mutable_index_error() {
  
  if (index_error_ == NULL) {
    auto* p = CreateMaybeMessage<::google::rpc::Status>(GetArenaNoVirtual());
    index_error_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ProductSet.index_error)
  return index_error_;
}
inline void ProductSet::set_allocated_index_error(::google::rpc::Status* index_error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(index_error_);
  }
  if (index_error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      index_error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, index_error, submessage_arena);
    }
    
  } else {
    
  }
  index_error_ = index_error;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ProductSet.index_error)
}

// -------------------------------------------------------------------

// ReferenceImage

// string name = 1;
inline void ReferenceImage::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReferenceImage::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ReferenceImage.name)
  return name_.Get();
}
inline void ReferenceImage::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ReferenceImage.name)
}
#if LANG_CXX11
inline void ReferenceImage::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ReferenceImage.name)
}
#endif
inline void ReferenceImage::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ReferenceImage.name)
}
inline void ReferenceImage::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ReferenceImage.name)
}
inline ::std::string* ReferenceImage::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ReferenceImage.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReferenceImage::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ReferenceImage.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ReferenceImage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ReferenceImage.name)
}
inline ::std::string* ReferenceImage::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ReferenceImage.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReferenceImage::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ReferenceImage.name)
}

// string uri = 2;
inline void ReferenceImage::clear_uri() {
  uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReferenceImage::uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ReferenceImage.uri)
  return uri_.Get();
}
inline void ReferenceImage::set_uri(const ::std::string& value) {
  
  uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ReferenceImage.uri)
}
#if LANG_CXX11
inline void ReferenceImage::set_uri(::std::string&& value) {
  
  uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ReferenceImage.uri)
}
#endif
inline void ReferenceImage::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ReferenceImage.uri)
}
inline void ReferenceImage::set_uri(const char* value,
    size_t size) {
  
  uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ReferenceImage.uri)
}
inline ::std::string* ReferenceImage::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ReferenceImage.uri)
  return uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReferenceImage::release_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ReferenceImage.uri)
  
  return uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ReferenceImage::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ReferenceImage.uri)
}
inline ::std::string* ReferenceImage::unsafe_arena_release_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ReferenceImage.uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return uri_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReferenceImage::unsafe_arena_set_allocated_uri(
    ::std::string* uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      uri, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ReferenceImage.uri)
}

// repeated .google.cloud.vision.v1p3beta1.BoundingPoly bounding_polys = 3;
inline int ReferenceImage::bounding_polys_size() const {
  return bounding_polys_.size();
}
inline ::google::cloud::vision::v1p3beta1::BoundingPoly* ReferenceImage::mutable_bounding_polys(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ReferenceImage.bounding_polys)
  return bounding_polys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::BoundingPoly >*
ReferenceImage::mutable_bounding_polys() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1p3beta1.ReferenceImage.bounding_polys)
  return &bounding_polys_;
}
inline const ::google::cloud::vision::v1p3beta1::BoundingPoly& ReferenceImage::bounding_polys(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ReferenceImage.bounding_polys)
  return bounding_polys_.Get(index);
}
inline ::google::cloud::vision::v1p3beta1::BoundingPoly* ReferenceImage::add_bounding_polys() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1p3beta1.ReferenceImage.bounding_polys)
  return bounding_polys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::BoundingPoly >&
ReferenceImage::bounding_polys() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1p3beta1.ReferenceImage.bounding_polys)
  return bounding_polys_;
}

// -------------------------------------------------------------------

// CreateProductRequest

// string parent = 1;
inline void CreateProductRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateProductRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.CreateProductRequest.parent)
  return parent_.Get();
}
inline void CreateProductRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.CreateProductRequest.parent)
}
#if LANG_CXX11
inline void CreateProductRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.CreateProductRequest.parent)
}
#endif
inline void CreateProductRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.CreateProductRequest.parent)
}
inline void CreateProductRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.CreateProductRequest.parent)
}
inline ::std::string* CreateProductRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.CreateProductRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateProductRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.CreateProductRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateProductRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.CreateProductRequest.parent)
}
inline ::std::string* CreateProductRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.CreateProductRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateProductRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.CreateProductRequest.parent)
}

// .google.cloud.vision.v1p3beta1.Product product = 2;
inline bool CreateProductRequest::has_product() const {
  return this != internal_default_instance() && product_ != NULL;
}
inline void CreateProductRequest::clear_product() {
  if (GetArenaNoVirtual() == NULL && product_ != NULL) {
    delete product_;
  }
  product_ = NULL;
}
inline const ::google::cloud::vision::v1p3beta1::Product& CreateProductRequest::_internal_product() const {
  return *product_;
}
inline const ::google::cloud::vision::v1p3beta1::Product& CreateProductRequest::product() const {
  const ::google::cloud::vision::v1p3beta1::Product* p = product_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.CreateProductRequest.product)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::vision::v1p3beta1::Product*>(
      &::google::cloud::vision::v1p3beta1::_Product_default_instance_);
}
inline ::google::cloud::vision::v1p3beta1::Product* CreateProductRequest::release_product() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.CreateProductRequest.product)
  
  ::google::cloud::vision::v1p3beta1::Product* temp = product_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  product_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::Product* CreateProductRequest::unsafe_arena_release_product() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.CreateProductRequest.product)
  
  ::google::cloud::vision::v1p3beta1::Product* temp = product_;
  product_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::Product* CreateProductRequest::mutable_product() {
  
  if (product_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::vision::v1p3beta1::Product>(GetArenaNoVirtual());
    product_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.CreateProductRequest.product)
  return product_;
}
inline void CreateProductRequest::set_allocated_product(::google::cloud::vision::v1p3beta1::Product* product) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete product_;
  }
  if (product) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(product);
    if (message_arena != submessage_arena) {
      product = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, product, submessage_arena);
    }
    
  } else {
    
  }
  product_ = product;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.CreateProductRequest.product)
}

// string product_id = 3;
inline void CreateProductRequest::clear_product_id() {
  product_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateProductRequest::product_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.CreateProductRequest.product_id)
  return product_id_.Get();
}
inline void CreateProductRequest::set_product_id(const ::std::string& value) {
  
  product_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.CreateProductRequest.product_id)
}
#if LANG_CXX11
inline void CreateProductRequest::set_product_id(::std::string&& value) {
  
  product_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.CreateProductRequest.product_id)
}
#endif
inline void CreateProductRequest::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.CreateProductRequest.product_id)
}
inline void CreateProductRequest::set_product_id(const char* value,
    size_t size) {
  
  product_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.CreateProductRequest.product_id)
}
inline ::std::string* CreateProductRequest::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.CreateProductRequest.product_id)
  return product_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateProductRequest::release_product_id() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.CreateProductRequest.product_id)
  
  return product_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateProductRequest::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.CreateProductRequest.product_id)
}
inline ::std::string* CreateProductRequest::unsafe_arena_release_product_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.CreateProductRequest.product_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return product_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateProductRequest::unsafe_arena_set_allocated_product_id(
    ::std::string* product_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      product_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.CreateProductRequest.product_id)
}

// -------------------------------------------------------------------

// ListProductsRequest

// string parent = 1;
inline void ListProductsRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListProductsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductsRequest.parent)
  return parent_.Get();
}
inline void ListProductsRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListProductsRequest.parent)
}
#if LANG_CXX11
inline void ListProductsRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ListProductsRequest.parent)
}
#endif
inline void ListProductsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ListProductsRequest.parent)
}
inline void ListProductsRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ListProductsRequest.parent)
}
inline ::std::string* ListProductsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListProductsRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListProductsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ListProductsRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListProductsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ListProductsRequest.parent)
}
inline ::std::string* ListProductsRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ListProductsRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListProductsRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ListProductsRequest.parent)
}

// int32 page_size = 2;
inline void ListProductsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListProductsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductsRequest.page_size)
  return page_size_;
}
inline void ListProductsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListProductsRequest.page_size)
}

// string page_token = 3;
inline void ListProductsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListProductsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductsRequest.page_token)
  return page_token_.Get();
}
inline void ListProductsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListProductsRequest.page_token)
}
#if LANG_CXX11
inline void ListProductsRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ListProductsRequest.page_token)
}
#endif
inline void ListProductsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ListProductsRequest.page_token)
}
inline void ListProductsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ListProductsRequest.page_token)
}
inline ::std::string* ListProductsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListProductsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListProductsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ListProductsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListProductsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ListProductsRequest.page_token)
}
inline ::std::string* ListProductsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ListProductsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListProductsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ListProductsRequest.page_token)
}

// -------------------------------------------------------------------

// ListProductsResponse

// repeated .google.cloud.vision.v1p3beta1.Product products = 1;
inline int ListProductsResponse::products_size() const {
  return products_.size();
}
inline void ListProductsResponse::clear_products() {
  products_.Clear();
}
inline ::google::cloud::vision::v1p3beta1::Product* ListProductsResponse::mutable_products(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListProductsResponse.products)
  return products_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product >*
ListProductsResponse::mutable_products() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1p3beta1.ListProductsResponse.products)
  return &products_;
}
inline const ::google::cloud::vision::v1p3beta1::Product& ListProductsResponse::products(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductsResponse.products)
  return products_.Get(index);
}
inline ::google::cloud::vision::v1p3beta1::Product* ListProductsResponse::add_products() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1p3beta1.ListProductsResponse.products)
  return products_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product >&
ListProductsResponse::products() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1p3beta1.ListProductsResponse.products)
  return products_;
}

// string next_page_token = 2;
inline void ListProductsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListProductsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListProductsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListProductsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListProductsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ListProductsResponse.next_page_token)
}
#endif
inline void ListProductsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ListProductsResponse.next_page_token)
}
inline void ListProductsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ListProductsResponse.next_page_token)
}
inline ::std::string* ListProductsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListProductsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListProductsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ListProductsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListProductsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ListProductsResponse.next_page_token)
}
inline ::std::string* ListProductsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ListProductsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListProductsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ListProductsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetProductRequest

// string name = 1;
inline void GetProductRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetProductRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.GetProductRequest.name)
  return name_.Get();
}
inline void GetProductRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.GetProductRequest.name)
}
#if LANG_CXX11
inline void GetProductRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.GetProductRequest.name)
}
#endif
inline void GetProductRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.GetProductRequest.name)
}
inline void GetProductRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.GetProductRequest.name)
}
inline ::std::string* GetProductRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.GetProductRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetProductRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.GetProductRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetProductRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.GetProductRequest.name)
}
inline ::std::string* GetProductRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.GetProductRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetProductRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.GetProductRequest.name)
}

// -------------------------------------------------------------------

// UpdateProductRequest

// .google.cloud.vision.v1p3beta1.Product product = 1;
inline bool UpdateProductRequest::has_product() const {
  return this != internal_default_instance() && product_ != NULL;
}
inline void UpdateProductRequest::clear_product() {
  if (GetArenaNoVirtual() == NULL && product_ != NULL) {
    delete product_;
  }
  product_ = NULL;
}
inline const ::google::cloud::vision::v1p3beta1::Product& UpdateProductRequest::_internal_product() const {
  return *product_;
}
inline const ::google::cloud::vision::v1p3beta1::Product& UpdateProductRequest::product() const {
  const ::google::cloud::vision::v1p3beta1::Product* p = product_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.UpdateProductRequest.product)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::vision::v1p3beta1::Product*>(
      &::google::cloud::vision::v1p3beta1::_Product_default_instance_);
}
inline ::google::cloud::vision::v1p3beta1::Product* UpdateProductRequest::release_product() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.UpdateProductRequest.product)
  
  ::google::cloud::vision::v1p3beta1::Product* temp = product_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  product_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::Product* UpdateProductRequest::unsafe_arena_release_product() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.UpdateProductRequest.product)
  
  ::google::cloud::vision::v1p3beta1::Product* temp = product_;
  product_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::Product* UpdateProductRequest::mutable_product() {
  
  if (product_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::vision::v1p3beta1::Product>(GetArenaNoVirtual());
    product_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.UpdateProductRequest.product)
  return product_;
}
inline void UpdateProductRequest::set_allocated_product(::google::cloud::vision::v1p3beta1::Product* product) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete product_;
  }
  if (product) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(product);
    if (message_arena != submessage_arena) {
      product = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, product, submessage_arena);
    }
    
  } else {
    
  }
  product_ = product;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.UpdateProductRequest.product)
}

// .google.protobuf.FieldMask update_mask = 2;
inline bool UpdateProductRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateProductRequest::_internal_update_mask() const {
  return *update_mask_;
}
inline const ::google::protobuf::FieldMask& UpdateProductRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.UpdateProductRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateProductRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.UpdateProductRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateProductRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.UpdateProductRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateProductRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    update_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.UpdateProductRequest.update_mask)
  return update_mask_;
}
inline void UpdateProductRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.UpdateProductRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteProductRequest

// string name = 1;
inline void DeleteProductRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteProductRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.DeleteProductRequest.name)
  return name_.Get();
}
inline void DeleteProductRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.DeleteProductRequest.name)
}
#if LANG_CXX11
inline void DeleteProductRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.DeleteProductRequest.name)
}
#endif
inline void DeleteProductRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.DeleteProductRequest.name)
}
inline void DeleteProductRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.DeleteProductRequest.name)
}
inline ::std::string* DeleteProductRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.DeleteProductRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteProductRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.DeleteProductRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DeleteProductRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.DeleteProductRequest.name)
}
inline ::std::string* DeleteProductRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.DeleteProductRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteProductRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.DeleteProductRequest.name)
}

// -------------------------------------------------------------------

// CreateProductSetRequest

// string parent = 1;
inline void CreateProductSetRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateProductSetRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.CreateProductSetRequest.parent)
  return parent_.Get();
}
inline void CreateProductSetRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.CreateProductSetRequest.parent)
}
#if LANG_CXX11
inline void CreateProductSetRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.CreateProductSetRequest.parent)
}
#endif
inline void CreateProductSetRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.CreateProductSetRequest.parent)
}
inline void CreateProductSetRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.CreateProductSetRequest.parent)
}
inline ::std::string* CreateProductSetRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.CreateProductSetRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateProductSetRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.CreateProductSetRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateProductSetRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.CreateProductSetRequest.parent)
}
inline ::std::string* CreateProductSetRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.CreateProductSetRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateProductSetRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.CreateProductSetRequest.parent)
}

// .google.cloud.vision.v1p3beta1.ProductSet product_set = 2;
inline bool CreateProductSetRequest::has_product_set() const {
  return this != internal_default_instance() && product_set_ != NULL;
}
inline void CreateProductSetRequest::clear_product_set() {
  if (GetArenaNoVirtual() == NULL && product_set_ != NULL) {
    delete product_set_;
  }
  product_set_ = NULL;
}
inline const ::google::cloud::vision::v1p3beta1::ProductSet& CreateProductSetRequest::_internal_product_set() const {
  return *product_set_;
}
inline const ::google::cloud::vision::v1p3beta1::ProductSet& CreateProductSetRequest::product_set() const {
  const ::google::cloud::vision::v1p3beta1::ProductSet* p = product_set_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::vision::v1p3beta1::ProductSet*>(
      &::google::cloud::vision::v1p3beta1::_ProductSet_default_instance_);
}
inline ::google::cloud::vision::v1p3beta1::ProductSet* CreateProductSetRequest::release_product_set() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set)
  
  ::google::cloud::vision::v1p3beta1::ProductSet* temp = product_set_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  product_set_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::ProductSet* CreateProductSetRequest::unsafe_arena_release_product_set() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set)
  
  ::google::cloud::vision::v1p3beta1::ProductSet* temp = product_set_;
  product_set_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::ProductSet* CreateProductSetRequest::mutable_product_set() {
  
  if (product_set_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ProductSet>(GetArenaNoVirtual());
    product_set_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set)
  return product_set_;
}
inline void CreateProductSetRequest::set_allocated_product_set(::google::cloud::vision::v1p3beta1::ProductSet* product_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete product_set_;
  }
  if (product_set) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(product_set);
    if (message_arena != submessage_arena) {
      product_set = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, product_set, submessage_arena);
    }
    
  } else {
    
  }
  product_set_ = product_set;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set)
}

// string product_set_id = 3;
inline void CreateProductSetRequest::clear_product_set_id() {
  product_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateProductSetRequest::product_set_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set_id)
  return product_set_id_.Get();
}
inline void CreateProductSetRequest::set_product_set_id(const ::std::string& value) {
  
  product_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set_id)
}
#if LANG_CXX11
inline void CreateProductSetRequest::set_product_set_id(::std::string&& value) {
  
  product_set_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set_id)
}
#endif
inline void CreateProductSetRequest::set_product_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set_id)
}
inline void CreateProductSetRequest::set_product_set_id(const char* value,
    size_t size) {
  
  product_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set_id)
}
inline ::std::string* CreateProductSetRequest::mutable_product_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set_id)
  return product_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateProductSetRequest::release_product_set_id() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set_id)
  
  return product_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateProductSetRequest::set_allocated_product_set_id(::std::string* product_set_id) {
  if (product_set_id != NULL) {
    
  } else {
    
  }
  product_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set_id)
}
inline ::std::string* CreateProductSetRequest::unsafe_arena_release_product_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return product_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateProductSetRequest::unsafe_arena_set_allocated_product_set_id(
    ::std::string* product_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (product_set_id != NULL) {
    
  } else {
    
  }
  product_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      product_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.CreateProductSetRequest.product_set_id)
}

// -------------------------------------------------------------------

// ListProductSetsRequest

// string parent = 1;
inline void ListProductSetsRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListProductSetsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductSetsRequest.parent)
  return parent_.Get();
}
inline void ListProductSetsRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListProductSetsRequest.parent)
}
#if LANG_CXX11
inline void ListProductSetsRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ListProductSetsRequest.parent)
}
#endif
inline void ListProductSetsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ListProductSetsRequest.parent)
}
inline void ListProductSetsRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ListProductSetsRequest.parent)
}
inline ::std::string* ListProductSetsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListProductSetsRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListProductSetsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ListProductSetsRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListProductSetsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ListProductSetsRequest.parent)
}
inline ::std::string* ListProductSetsRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ListProductSetsRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListProductSetsRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ListProductSetsRequest.parent)
}

// int32 page_size = 2;
inline void ListProductSetsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListProductSetsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductSetsRequest.page_size)
  return page_size_;
}
inline void ListProductSetsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListProductSetsRequest.page_size)
}

// string page_token = 3;
inline void ListProductSetsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListProductSetsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductSetsRequest.page_token)
  return page_token_.Get();
}
inline void ListProductSetsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListProductSetsRequest.page_token)
}
#if LANG_CXX11
inline void ListProductSetsRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ListProductSetsRequest.page_token)
}
#endif
inline void ListProductSetsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ListProductSetsRequest.page_token)
}
inline void ListProductSetsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ListProductSetsRequest.page_token)
}
inline ::std::string* ListProductSetsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListProductSetsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListProductSetsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ListProductSetsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListProductSetsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ListProductSetsRequest.page_token)
}
inline ::std::string* ListProductSetsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ListProductSetsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListProductSetsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ListProductSetsRequest.page_token)
}

// -------------------------------------------------------------------

// ListProductSetsResponse

// repeated .google.cloud.vision.v1p3beta1.ProductSet product_sets = 1;
inline int ListProductSetsResponse::product_sets_size() const {
  return product_sets_.size();
}
inline void ListProductSetsResponse::clear_product_sets() {
  product_sets_.Clear();
}
inline ::google::cloud::vision::v1p3beta1::ProductSet* ListProductSetsResponse::mutable_product_sets(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListProductSetsResponse.product_sets)
  return product_sets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSet >*
ListProductSetsResponse::mutable_product_sets() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1p3beta1.ListProductSetsResponse.product_sets)
  return &product_sets_;
}
inline const ::google::cloud::vision::v1p3beta1::ProductSet& ListProductSetsResponse::product_sets(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductSetsResponse.product_sets)
  return product_sets_.Get(index);
}
inline ::google::cloud::vision::v1p3beta1::ProductSet* ListProductSetsResponse::add_product_sets() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1p3beta1.ListProductSetsResponse.product_sets)
  return product_sets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ProductSet >&
ListProductSetsResponse::product_sets() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1p3beta1.ListProductSetsResponse.product_sets)
  return product_sets_;
}

// string next_page_token = 2;
inline void ListProductSetsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListProductSetsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductSetsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListProductSetsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListProductSetsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListProductSetsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ListProductSetsResponse.next_page_token)
}
#endif
inline void ListProductSetsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ListProductSetsResponse.next_page_token)
}
inline void ListProductSetsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ListProductSetsResponse.next_page_token)
}
inline ::std::string* ListProductSetsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListProductSetsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListProductSetsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ListProductSetsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListProductSetsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ListProductSetsResponse.next_page_token)
}
inline ::std::string* ListProductSetsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ListProductSetsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListProductSetsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ListProductSetsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetProductSetRequest

// string name = 1;
inline void GetProductSetRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetProductSetRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.GetProductSetRequest.name)
  return name_.Get();
}
inline void GetProductSetRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.GetProductSetRequest.name)
}
#if LANG_CXX11
inline void GetProductSetRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.GetProductSetRequest.name)
}
#endif
inline void GetProductSetRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.GetProductSetRequest.name)
}
inline void GetProductSetRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.GetProductSetRequest.name)
}
inline ::std::string* GetProductSetRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.GetProductSetRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetProductSetRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.GetProductSetRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetProductSetRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.GetProductSetRequest.name)
}
inline ::std::string* GetProductSetRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.GetProductSetRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetProductSetRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.GetProductSetRequest.name)
}

// -------------------------------------------------------------------

// UpdateProductSetRequest

// .google.cloud.vision.v1p3beta1.ProductSet product_set = 1;
inline bool UpdateProductSetRequest::has_product_set() const {
  return this != internal_default_instance() && product_set_ != NULL;
}
inline void UpdateProductSetRequest::clear_product_set() {
  if (GetArenaNoVirtual() == NULL && product_set_ != NULL) {
    delete product_set_;
  }
  product_set_ = NULL;
}
inline const ::google::cloud::vision::v1p3beta1::ProductSet& UpdateProductSetRequest::_internal_product_set() const {
  return *product_set_;
}
inline const ::google::cloud::vision::v1p3beta1::ProductSet& UpdateProductSetRequest::product_set() const {
  const ::google::cloud::vision::v1p3beta1::ProductSet* p = product_set_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.UpdateProductSetRequest.product_set)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::vision::v1p3beta1::ProductSet*>(
      &::google::cloud::vision::v1p3beta1::_ProductSet_default_instance_);
}
inline ::google::cloud::vision::v1p3beta1::ProductSet* UpdateProductSetRequest::release_product_set() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.UpdateProductSetRequest.product_set)
  
  ::google::cloud::vision::v1p3beta1::ProductSet* temp = product_set_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  product_set_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::ProductSet* UpdateProductSetRequest::unsafe_arena_release_product_set() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.UpdateProductSetRequest.product_set)
  
  ::google::cloud::vision::v1p3beta1::ProductSet* temp = product_set_;
  product_set_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::ProductSet* UpdateProductSetRequest::mutable_product_set() {
  
  if (product_set_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ProductSet>(GetArenaNoVirtual());
    product_set_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.UpdateProductSetRequest.product_set)
  return product_set_;
}
inline void UpdateProductSetRequest::set_allocated_product_set(::google::cloud::vision::v1p3beta1::ProductSet* product_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete product_set_;
  }
  if (product_set) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(product_set);
    if (message_arena != submessage_arena) {
      product_set = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, product_set, submessage_arena);
    }
    
  } else {
    
  }
  product_set_ = product_set;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.UpdateProductSetRequest.product_set)
}

// .google.protobuf.FieldMask update_mask = 2;
inline bool UpdateProductSetRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateProductSetRequest::_internal_update_mask() const {
  return *update_mask_;
}
inline const ::google::protobuf::FieldMask& UpdateProductSetRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.UpdateProductSetRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateProductSetRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.UpdateProductSetRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateProductSetRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.UpdateProductSetRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateProductSetRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    update_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.UpdateProductSetRequest.update_mask)
  return update_mask_;
}
inline void UpdateProductSetRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.UpdateProductSetRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteProductSetRequest

// string name = 1;
inline void DeleteProductSetRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteProductSetRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.DeleteProductSetRequest.name)
  return name_.Get();
}
inline void DeleteProductSetRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.DeleteProductSetRequest.name)
}
#if LANG_CXX11
inline void DeleteProductSetRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.DeleteProductSetRequest.name)
}
#endif
inline void DeleteProductSetRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.DeleteProductSetRequest.name)
}
inline void DeleteProductSetRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.DeleteProductSetRequest.name)
}
inline ::std::string* DeleteProductSetRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.DeleteProductSetRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteProductSetRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.DeleteProductSetRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DeleteProductSetRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.DeleteProductSetRequest.name)
}
inline ::std::string* DeleteProductSetRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.DeleteProductSetRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteProductSetRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.DeleteProductSetRequest.name)
}

// -------------------------------------------------------------------

// CreateReferenceImageRequest

// string parent = 1;
inline void CreateReferenceImageRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateReferenceImageRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.parent)
  return parent_.Get();
}
inline void CreateReferenceImageRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.parent)
}
#if LANG_CXX11
inline void CreateReferenceImageRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.parent)
}
#endif
inline void CreateReferenceImageRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.parent)
}
inline void CreateReferenceImageRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.parent)
}
inline ::std::string* CreateReferenceImageRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateReferenceImageRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateReferenceImageRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.parent)
}
inline ::std::string* CreateReferenceImageRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateReferenceImageRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.parent)
}

// .google.cloud.vision.v1p3beta1.ReferenceImage reference_image = 2;
inline bool CreateReferenceImageRequest::has_reference_image() const {
  return this != internal_default_instance() && reference_image_ != NULL;
}
inline void CreateReferenceImageRequest::clear_reference_image() {
  if (GetArenaNoVirtual() == NULL && reference_image_ != NULL) {
    delete reference_image_;
  }
  reference_image_ = NULL;
}
inline const ::google::cloud::vision::v1p3beta1::ReferenceImage& CreateReferenceImageRequest::_internal_reference_image() const {
  return *reference_image_;
}
inline const ::google::cloud::vision::v1p3beta1::ReferenceImage& CreateReferenceImageRequest::reference_image() const {
  const ::google::cloud::vision::v1p3beta1::ReferenceImage* p = reference_image_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::vision::v1p3beta1::ReferenceImage*>(
      &::google::cloud::vision::v1p3beta1::_ReferenceImage_default_instance_);
}
inline ::google::cloud::vision::v1p3beta1::ReferenceImage* CreateReferenceImageRequest::release_reference_image() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image)
  
  ::google::cloud::vision::v1p3beta1::ReferenceImage* temp = reference_image_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  reference_image_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::ReferenceImage* CreateReferenceImageRequest::unsafe_arena_release_reference_image() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image)
  
  ::google::cloud::vision::v1p3beta1::ReferenceImage* temp = reference_image_;
  reference_image_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::ReferenceImage* CreateReferenceImageRequest::mutable_reference_image() {
  
  if (reference_image_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ReferenceImage>(GetArenaNoVirtual());
    reference_image_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image)
  return reference_image_;
}
inline void CreateReferenceImageRequest::set_allocated_reference_image(::google::cloud::vision::v1p3beta1::ReferenceImage* reference_image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reference_image_;
  }
  if (reference_image) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(reference_image);
    if (message_arena != submessage_arena) {
      reference_image = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference_image, submessage_arena);
    }
    
  } else {
    
  }
  reference_image_ = reference_image;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image)
}

// string reference_image_id = 3;
inline void CreateReferenceImageRequest::clear_reference_image_id() {
  reference_image_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateReferenceImageRequest::reference_image_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image_id)
  return reference_image_id_.Get();
}
inline void CreateReferenceImageRequest::set_reference_image_id(const ::std::string& value) {
  
  reference_image_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image_id)
}
#if LANG_CXX11
inline void CreateReferenceImageRequest::set_reference_image_id(::std::string&& value) {
  
  reference_image_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image_id)
}
#endif
inline void CreateReferenceImageRequest::set_reference_image_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reference_image_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image_id)
}
inline void CreateReferenceImageRequest::set_reference_image_id(const char* value,
    size_t size) {
  
  reference_image_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image_id)
}
inline ::std::string* CreateReferenceImageRequest::mutable_reference_image_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image_id)
  return reference_image_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateReferenceImageRequest::release_reference_image_id() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image_id)
  
  return reference_image_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateReferenceImageRequest::set_allocated_reference_image_id(::std::string* reference_image_id) {
  if (reference_image_id != NULL) {
    
  } else {
    
  }
  reference_image_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_image_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image_id)
}
inline ::std::string* CreateReferenceImageRequest::unsafe_arena_release_reference_image_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_image_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateReferenceImageRequest::unsafe_arena_set_allocated_reference_image_id(
    ::std::string* reference_image_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_image_id != NULL) {
    
  } else {
    
  }
  reference_image_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_image_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.CreateReferenceImageRequest.reference_image_id)
}

// -------------------------------------------------------------------

// ListReferenceImagesRequest

// string parent = 1;
inline void ListReferenceImagesRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListReferenceImagesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.parent)
  return parent_.Get();
}
inline void ListReferenceImagesRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.parent)
}
#if LANG_CXX11
inline void ListReferenceImagesRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.parent)
}
#endif
inline void ListReferenceImagesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.parent)
}
inline void ListReferenceImagesRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.parent)
}
inline ::std::string* ListReferenceImagesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListReferenceImagesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListReferenceImagesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.parent)
}
inline ::std::string* ListReferenceImagesRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListReferenceImagesRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.parent)
}

// int32 page_size = 2;
inline void ListReferenceImagesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListReferenceImagesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.page_size)
  return page_size_;
}
inline void ListReferenceImagesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.page_size)
}

// string page_token = 3;
inline void ListReferenceImagesRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListReferenceImagesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.page_token)
  return page_token_.Get();
}
inline void ListReferenceImagesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.page_token)
}
#if LANG_CXX11
inline void ListReferenceImagesRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.page_token)
}
#endif
inline void ListReferenceImagesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.page_token)
}
inline void ListReferenceImagesRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.page_token)
}
inline ::std::string* ListReferenceImagesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListReferenceImagesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListReferenceImagesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.page_token)
}
inline ::std::string* ListReferenceImagesRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListReferenceImagesRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ListReferenceImagesRequest.page_token)
}

// -------------------------------------------------------------------

// ListReferenceImagesResponse

// repeated .google.cloud.vision.v1p3beta1.ReferenceImage reference_images = 1;
inline int ListReferenceImagesResponse::reference_images_size() const {
  return reference_images_.size();
}
inline void ListReferenceImagesResponse::clear_reference_images() {
  reference_images_.Clear();
}
inline ::google::cloud::vision::v1p3beta1::ReferenceImage* ListReferenceImagesResponse::mutable_reference_images(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.reference_images)
  return reference_images_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ReferenceImage >*
ListReferenceImagesResponse::mutable_reference_images() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.reference_images)
  return &reference_images_;
}
inline const ::google::cloud::vision::v1p3beta1::ReferenceImage& ListReferenceImagesResponse::reference_images(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.reference_images)
  return reference_images_.Get(index);
}
inline ::google::cloud::vision::v1p3beta1::ReferenceImage* ListReferenceImagesResponse::add_reference_images() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.reference_images)
  return reference_images_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ReferenceImage >&
ListReferenceImagesResponse::reference_images() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.reference_images)
  return reference_images_;
}

// int32 page_size = 2;
inline void ListReferenceImagesResponse::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListReferenceImagesResponse::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.page_size)
  return page_size_;
}
inline void ListReferenceImagesResponse::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.page_size)
}

// string next_page_token = 3;
inline void ListReferenceImagesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListReferenceImagesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListReferenceImagesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListReferenceImagesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.next_page_token)
}
#endif
inline void ListReferenceImagesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.next_page_token)
}
inline void ListReferenceImagesResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.next_page_token)
}
inline ::std::string* ListReferenceImagesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListReferenceImagesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListReferenceImagesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.next_page_token)
}
inline ::std::string* ListReferenceImagesResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListReferenceImagesResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ListReferenceImagesResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetReferenceImageRequest

// string name = 1;
inline void GetReferenceImageRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetReferenceImageRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.GetReferenceImageRequest.name)
  return name_.Get();
}
inline void GetReferenceImageRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.GetReferenceImageRequest.name)
}
#if LANG_CXX11
inline void GetReferenceImageRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.GetReferenceImageRequest.name)
}
#endif
inline void GetReferenceImageRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.GetReferenceImageRequest.name)
}
inline void GetReferenceImageRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.GetReferenceImageRequest.name)
}
inline ::std::string* GetReferenceImageRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.GetReferenceImageRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetReferenceImageRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.GetReferenceImageRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetReferenceImageRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.GetReferenceImageRequest.name)
}
inline ::std::string* GetReferenceImageRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.GetReferenceImageRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetReferenceImageRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.GetReferenceImageRequest.name)
}

// -------------------------------------------------------------------

// DeleteReferenceImageRequest

// string name = 1;
inline void DeleteReferenceImageRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteReferenceImageRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest.name)
  return name_.Get();
}
inline void DeleteReferenceImageRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest.name)
}
#if LANG_CXX11
inline void DeleteReferenceImageRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest.name)
}
#endif
inline void DeleteReferenceImageRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest.name)
}
inline void DeleteReferenceImageRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest.name)
}
inline ::std::string* DeleteReferenceImageRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteReferenceImageRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DeleteReferenceImageRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest.name)
}
inline ::std::string* DeleteReferenceImageRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteReferenceImageRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.DeleteReferenceImageRequest.name)
}

// -------------------------------------------------------------------

// AddProductToProductSetRequest

// string name = 1;
inline void AddProductToProductSetRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AddProductToProductSetRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.name)
  return name_.Get();
}
inline void AddProductToProductSetRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.name)
}
#if LANG_CXX11
inline void AddProductToProductSetRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.name)
}
#endif
inline void AddProductToProductSetRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.name)
}
inline void AddProductToProductSetRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.name)
}
inline ::std::string* AddProductToProductSetRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AddProductToProductSetRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AddProductToProductSetRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.name)
}
inline ::std::string* AddProductToProductSetRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AddProductToProductSetRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.name)
}

// string product = 2;
inline void AddProductToProductSetRequest::clear_product() {
  product_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AddProductToProductSetRequest::product() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.product)
  return product_.Get();
}
inline void AddProductToProductSetRequest::set_product(const ::std::string& value) {
  
  product_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.product)
}
#if LANG_CXX11
inline void AddProductToProductSetRequest::set_product(::std::string&& value) {
  
  product_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.product)
}
#endif
inline void AddProductToProductSetRequest::set_product(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.product)
}
inline void AddProductToProductSetRequest::set_product(const char* value,
    size_t size) {
  
  product_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.product)
}
inline ::std::string* AddProductToProductSetRequest::mutable_product() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.product)
  return product_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AddProductToProductSetRequest::release_product() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.product)
  
  return product_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AddProductToProductSetRequest::set_allocated_product(::std::string* product) {
  if (product != NULL) {
    
  } else {
    
  }
  product_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.product)
}
inline ::std::string* AddProductToProductSetRequest::unsafe_arena_release_product() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.product)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return product_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AddProductToProductSetRequest::unsafe_arena_set_allocated_product(
    ::std::string* product) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (product != NULL) {
    
  } else {
    
  }
  product_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      product, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.AddProductToProductSetRequest.product)
}

// -------------------------------------------------------------------

// RemoveProductFromProductSetRequest

// string name = 1;
inline void RemoveProductFromProductSetRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& RemoveProductFromProductSetRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.name)
  return name_.Get();
}
inline void RemoveProductFromProductSetRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.name)
}
#if LANG_CXX11
inline void RemoveProductFromProductSetRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.name)
}
#endif
inline void RemoveProductFromProductSetRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.name)
}
inline void RemoveProductFromProductSetRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.name)
}
inline ::std::string* RemoveProductFromProductSetRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* RemoveProductFromProductSetRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void RemoveProductFromProductSetRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.name)
}
inline ::std::string* RemoveProductFromProductSetRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void RemoveProductFromProductSetRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.name)
}

// string product = 2;
inline void RemoveProductFromProductSetRequest::clear_product() {
  product_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& RemoveProductFromProductSetRequest::product() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.product)
  return product_.Get();
}
inline void RemoveProductFromProductSetRequest::set_product(const ::std::string& value) {
  
  product_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.product)
}
#if LANG_CXX11
inline void RemoveProductFromProductSetRequest::set_product(::std::string&& value) {
  
  product_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.product)
}
#endif
inline void RemoveProductFromProductSetRequest::set_product(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.product)
}
inline void RemoveProductFromProductSetRequest::set_product(const char* value,
    size_t size) {
  
  product_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.product)
}
inline ::std::string* RemoveProductFromProductSetRequest::mutable_product() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.product)
  return product_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* RemoveProductFromProductSetRequest::release_product() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.product)
  
  return product_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void RemoveProductFromProductSetRequest::set_allocated_product(::std::string* product) {
  if (product != NULL) {
    
  } else {
    
  }
  product_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.product)
}
inline ::std::string* RemoveProductFromProductSetRequest::unsafe_arena_release_product() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.product)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return product_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void RemoveProductFromProductSetRequest::unsafe_arena_set_allocated_product(
    ::std::string* product) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (product != NULL) {
    
  } else {
    
  }
  product_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      product, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.RemoveProductFromProductSetRequest.product)
}

// -------------------------------------------------------------------

// ListProductsInProductSetRequest

// string name = 1;
inline void ListProductsInProductSetRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListProductsInProductSetRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.name)
  return name_.Get();
}
inline void ListProductsInProductSetRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.name)
}
#if LANG_CXX11
inline void ListProductsInProductSetRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.name)
}
#endif
inline void ListProductsInProductSetRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.name)
}
inline void ListProductsInProductSetRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.name)
}
inline ::std::string* ListProductsInProductSetRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListProductsInProductSetRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListProductsInProductSetRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.name)
}
inline ::std::string* ListProductsInProductSetRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListProductsInProductSetRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.name)
}

// int32 page_size = 2;
inline void ListProductsInProductSetRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListProductsInProductSetRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.page_size)
  return page_size_;
}
inline void ListProductsInProductSetRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.page_size)
}

// string page_token = 3;
inline void ListProductsInProductSetRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListProductsInProductSetRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.page_token)
  return page_token_.Get();
}
inline void ListProductsInProductSetRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.page_token)
}
#if LANG_CXX11
inline void ListProductsInProductSetRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.page_token)
}
#endif
inline void ListProductsInProductSetRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.page_token)
}
inline void ListProductsInProductSetRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.page_token)
}
inline ::std::string* ListProductsInProductSetRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListProductsInProductSetRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListProductsInProductSetRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.page_token)
}
inline ::std::string* ListProductsInProductSetRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListProductsInProductSetRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ListProductsInProductSetRequest.page_token)
}

// -------------------------------------------------------------------

// ListProductsInProductSetResponse

// repeated .google.cloud.vision.v1p3beta1.Product products = 1;
inline int ListProductsInProductSetResponse::products_size() const {
  return products_.size();
}
inline void ListProductsInProductSetResponse::clear_products() {
  products_.Clear();
}
inline ::google::cloud::vision::v1p3beta1::Product* ListProductsInProductSetResponse::mutable_products(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.products)
  return products_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product >*
ListProductsInProductSetResponse::mutable_products() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.products)
  return &products_;
}
inline const ::google::cloud::vision::v1p3beta1::Product& ListProductsInProductSetResponse::products(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.products)
  return products_.Get(index);
}
inline ::google::cloud::vision::v1p3beta1::Product* ListProductsInProductSetResponse::add_products() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.products)
  return products_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::Product >&
ListProductsInProductSetResponse::products() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.products)
  return products_;
}

// string next_page_token = 2;
inline void ListProductsInProductSetResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListProductsInProductSetResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListProductsInProductSetResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.next_page_token)
}
#if LANG_CXX11
inline void ListProductsInProductSetResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.next_page_token)
}
#endif
inline void ListProductsInProductSetResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.next_page_token)
}
inline void ListProductsInProductSetResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.next_page_token)
}
inline ::std::string* ListProductsInProductSetResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListProductsInProductSetResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListProductsInProductSetResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.next_page_token)
}
inline ::std::string* ListProductsInProductSetResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListProductsInProductSetResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ListProductsInProductSetResponse.next_page_token)
}

// -------------------------------------------------------------------

// ImportProductSetsGcsSource

// string csv_file_uri = 1;
inline void ImportProductSetsGcsSource::clear_csv_file_uri() {
  csv_file_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ImportProductSetsGcsSource::csv_file_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri)
  return csv_file_uri_.Get();
}
inline void ImportProductSetsGcsSource::set_csv_file_uri(const ::std::string& value) {
  
  csv_file_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri)
}
#if LANG_CXX11
inline void ImportProductSetsGcsSource::set_csv_file_uri(::std::string&& value) {
  
  csv_file_uri_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri)
}
#endif
inline void ImportProductSetsGcsSource::set_csv_file_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  csv_file_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri)
}
inline void ImportProductSetsGcsSource::set_csv_file_uri(const char* value,
    size_t size) {
  
  csv_file_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri)
}
inline ::std::string* ImportProductSetsGcsSource::mutable_csv_file_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri)
  return csv_file_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ImportProductSetsGcsSource::release_csv_file_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri)
  
  return csv_file_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ImportProductSetsGcsSource::set_allocated_csv_file_uri(::std::string* csv_file_uri) {
  if (csv_file_uri != NULL) {
    
  } else {
    
  }
  csv_file_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), csv_file_uri,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri)
}
inline ::std::string* ImportProductSetsGcsSource::unsafe_arena_release_csv_file_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return csv_file_uri_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ImportProductSetsGcsSource::unsafe_arena_set_allocated_csv_file_uri(
    ::std::string* csv_file_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (csv_file_uri != NULL) {
    
  } else {
    
  }
  csv_file_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      csv_file_uri, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri)
}

// -------------------------------------------------------------------

// ImportProductSetsInputConfig

// .google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource gcs_source = 1;
inline bool ImportProductSetsInputConfig::has_gcs_source() const {
  return source_case() == kGcsSource;
}
inline void ImportProductSetsInputConfig::set_has_gcs_source() {
  _oneof_case_[0] = kGcsSource;
}
inline void ImportProductSetsInputConfig::clear_gcs_source() {
  if (has_gcs_source()) {
    if (GetArenaNoVirtual() == NULL) {
      delete source_.gcs_source_;
    }
    clear_has_source();
  }
}
inline const ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource& ImportProductSetsInputConfig::_internal_gcs_source() const {
  return *source_.gcs_source_;
}
inline ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource* ImportProductSetsInputConfig::release_gcs_source() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig.gcs_source)
  if (has_gcs_source()) {
    clear_has_source();
      ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource* temp = source_.gcs_source_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    source_.gcs_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource& ImportProductSetsInputConfig::gcs_source() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig.gcs_source)
  return has_gcs_source()
      ? *source_.gcs_source_
      : *reinterpret_cast< ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource*>(&::google::cloud::vision::v1p3beta1::_ImportProductSetsGcsSource_default_instance_);
}
inline ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource* ImportProductSetsInputConfig::unsafe_arena_release_gcs_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig.gcs_source)
  if (has_gcs_source()) {
    clear_has_source();
    ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource* temp = source_.gcs_source_;
    source_.gcs_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ImportProductSetsInputConfig::unsafe_arena_set_allocated_gcs_source(::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource* gcs_source) {
  clear_source();
  if (gcs_source) {
    set_has_gcs_source();
    source_.gcs_source_ = gcs_source;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig.gcs_source)
}
inline ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource* ImportProductSetsInputConfig::mutable_gcs_source() {
  if (!has_gcs_source()) {
    clear_source();
    set_has_gcs_source();
    source_.gcs_source_ = CreateMaybeMessage< ::google::cloud::vision::v1p3beta1::ImportProductSetsGcsSource >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig.gcs_source)
  return source_.gcs_source_;
}

inline bool ImportProductSetsInputConfig::has_source() const {
  return source_case() != SOURCE_NOT_SET;
}
inline void ImportProductSetsInputConfig::clear_has_source() {
  _oneof_case_[0] = SOURCE_NOT_SET;
}
inline ImportProductSetsInputConfig::SourceCase ImportProductSetsInputConfig::source_case() const {
  return ImportProductSetsInputConfig::SourceCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ImportProductSetsRequest

// string parent = 1;
inline void ImportProductSetsRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ImportProductSetsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.parent)
  return parent_.Get();
}
inline void ImportProductSetsRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.parent)
}
#if LANG_CXX11
inline void ImportProductSetsRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.parent)
}
#endif
inline void ImportProductSetsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.parent)
}
inline void ImportProductSetsRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.parent)
}
inline ::std::string* ImportProductSetsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ImportProductSetsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ImportProductSetsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.parent)
}
inline ::std::string* ImportProductSetsRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ImportProductSetsRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.parent)
}

// .google.cloud.vision.v1p3beta1.ImportProductSetsInputConfig input_config = 2;
inline bool ImportProductSetsRequest::has_input_config() const {
  return this != internal_default_instance() && input_config_ != NULL;
}
inline void ImportProductSetsRequest::clear_input_config() {
  if (GetArenaNoVirtual() == NULL && input_config_ != NULL) {
    delete input_config_;
  }
  input_config_ = NULL;
}
inline const ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig& ImportProductSetsRequest::_internal_input_config() const {
  return *input_config_;
}
inline const ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig& ImportProductSetsRequest::input_config() const {
  const ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* p = input_config_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.input_config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig*>(
      &::google::cloud::vision::v1p3beta1::_ImportProductSetsInputConfig_default_instance_);
}
inline ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* ImportProductSetsRequest::release_input_config() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.input_config)
  
  ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* temp = input_config_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  input_config_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* ImportProductSetsRequest::unsafe_arena_release_input_config() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.input_config)
  
  ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* temp = input_config_;
  input_config_ = NULL;
  return temp;
}
inline ::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* ImportProductSetsRequest::mutable_input_config() {
  
  if (input_config_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig>(GetArenaNoVirtual());
    input_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.input_config)
  return input_config_;
}
inline void ImportProductSetsRequest::set_allocated_input_config(::google::cloud::vision::v1p3beta1::ImportProductSetsInputConfig* input_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_config_;
  }
  if (input_config) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(input_config);
    if (message_arena != submessage_arena) {
      input_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_config, submessage_arena);
    }
    
  } else {
    
  }
  input_config_ = input_config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.ImportProductSetsRequest.input_config)
}

// -------------------------------------------------------------------

// ImportProductSetsResponse

// repeated .google.cloud.vision.v1p3beta1.ReferenceImage reference_images = 1;
inline int ImportProductSetsResponse::reference_images_size() const {
  return reference_images_.size();
}
inline void ImportProductSetsResponse::clear_reference_images() {
  reference_images_.Clear();
}
inline ::google::cloud::vision::v1p3beta1::ReferenceImage* ImportProductSetsResponse::mutable_reference_images(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ImportProductSetsResponse.reference_images)
  return reference_images_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ReferenceImage >*
ImportProductSetsResponse::mutable_reference_images() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1p3beta1.ImportProductSetsResponse.reference_images)
  return &reference_images_;
}
inline const ::google::cloud::vision::v1p3beta1::ReferenceImage& ImportProductSetsResponse::reference_images(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ImportProductSetsResponse.reference_images)
  return reference_images_.Get(index);
}
inline ::google::cloud::vision::v1p3beta1::ReferenceImage* ImportProductSetsResponse::add_reference_images() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1p3beta1.ImportProductSetsResponse.reference_images)
  return reference_images_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1p3beta1::ReferenceImage >&
ImportProductSetsResponse::reference_images() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1p3beta1.ImportProductSetsResponse.reference_images)
  return reference_images_;
}

// repeated .google.rpc.Status statuses = 2;
inline int ImportProductSetsResponse::statuses_size() const {
  return statuses_.size();
}
inline ::google::rpc::Status* ImportProductSetsResponse::mutable_statuses(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.ImportProductSetsResponse.statuses)
  return statuses_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >*
ImportProductSetsResponse::mutable_statuses() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1p3beta1.ImportProductSetsResponse.statuses)
  return &statuses_;
}
inline const ::google::rpc::Status& ImportProductSetsResponse::statuses(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.ImportProductSetsResponse.statuses)
  return statuses_.Get(index);
}
inline ::google::rpc::Status* ImportProductSetsResponse::add_statuses() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1p3beta1.ImportProductSetsResponse.statuses)
  return statuses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >&
ImportProductSetsResponse::statuses() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1p3beta1.ImportProductSetsResponse.statuses)
  return statuses_;
}

// -------------------------------------------------------------------

// BatchOperationMetadata

// .google.cloud.vision.v1p3beta1.BatchOperationMetadata.State state = 1;
inline void BatchOperationMetadata::clear_state() {
  state_ = 0;
}
inline ::google::cloud::vision::v1p3beta1::BatchOperationMetadata_State BatchOperationMetadata::state() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.BatchOperationMetadata.state)
  return static_cast< ::google::cloud::vision::v1p3beta1::BatchOperationMetadata_State >(state_);
}
inline void BatchOperationMetadata::set_state(::google::cloud::vision::v1p3beta1::BatchOperationMetadata_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1p3beta1.BatchOperationMetadata.state)
}

// .google.protobuf.Timestamp submit_time = 2;
inline bool BatchOperationMetadata::has_submit_time() const {
  return this != internal_default_instance() && submit_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& BatchOperationMetadata::_internal_submit_time() const {
  return *submit_time_;
}
inline const ::google::protobuf::Timestamp& BatchOperationMetadata::submit_time() const {
  const ::google::protobuf::Timestamp* p = submit_time_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.BatchOperationMetadata.submit_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* BatchOperationMetadata::release_submit_time() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.BatchOperationMetadata.submit_time)
  
  ::google::protobuf::Timestamp* temp = submit_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  submit_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* BatchOperationMetadata::unsafe_arena_release_submit_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.BatchOperationMetadata.submit_time)
  
  ::google::protobuf::Timestamp* temp = submit_time_;
  submit_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* BatchOperationMetadata::mutable_submit_time() {
  
  if (submit_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    submit_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.BatchOperationMetadata.submit_time)
  return submit_time_;
}
inline void BatchOperationMetadata::set_allocated_submit_time(::google::protobuf::Timestamp* submit_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(submit_time_);
  }
  if (submit_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(submit_time)->GetArena();
    if (message_arena != submessage_arena) {
      submit_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, submit_time, submessage_arena);
    }
    
  } else {
    
  }
  submit_time_ = submit_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.BatchOperationMetadata.submit_time)
}

// .google.protobuf.Timestamp end_time = 3;
inline bool BatchOperationMetadata::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& BatchOperationMetadata::_internal_end_time() const {
  return *end_time_;
}
inline const ::google::protobuf::Timestamp& BatchOperationMetadata::end_time() const {
  const ::google::protobuf::Timestamp* p = end_time_;
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1p3beta1.BatchOperationMetadata.end_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* BatchOperationMetadata::release_end_time() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1p3beta1.BatchOperationMetadata.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  end_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* BatchOperationMetadata::unsafe_arena_release_end_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1p3beta1.BatchOperationMetadata.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* BatchOperationMetadata::mutable_end_time() {
  
  if (end_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    end_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1p3beta1.BatchOperationMetadata.end_time)
  return end_time_;
}
inline void BatchOperationMetadata::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(end_time_);
  }
  if (end_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(end_time)->GetArena();
    if (message_arena != submessage_arena) {
      end_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_time, submessage_arena);
    }
    
  } else {
    
  }
  end_time_ = end_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1p3beta1.BatchOperationMetadata.end_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1p3beta1
}  // namespace vision
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::vision::v1p3beta1::BatchOperationMetadata_State> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::vision::v1p3beta1::BatchOperationMetadata_State>() {
  return ::google::cloud::vision::v1p3beta1::BatchOperationMetadata_State_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto
