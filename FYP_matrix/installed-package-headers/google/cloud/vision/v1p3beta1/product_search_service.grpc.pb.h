// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/vision/v1p3beta1/product_search_service.proto
// Original file comments:
// Copyright 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto__INCLUDED
#define GRPC_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto__INCLUDED

#include "google/cloud/vision/v1p3beta1/product_search_service.pb.h"

#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace google {
namespace cloud {
namespace vision {
namespace v1p3beta1 {

// Manages Products and ProductSets of reference images for use in product
// search. It uses the following resource model:
//
// - The API has a collection of [ProductSet][google.cloud.vision.v1p3beta1.ProductSet] resources, named
// `projects/*/locations/*/productSets/*`, which acts as a way to put different
// products into groups to limit identification.
//
// In parallel,
//
// - The API has a collection of [Product][google.cloud.vision.v1p3beta1.Product] resources, named
//   `projects/*/locations/*/products/*`
//
// - Each [Product][google.cloud.vision.v1p3beta1.Product] has a collection of [ReferenceImage][google.cloud.vision.v1p3beta1.ReferenceImage] resources, named
//   `projects/*/locations/*/products/*/referenceImages/*`
class ProductSearch final {
 public:
  static constexpr char const* service_full_name() {
    return "google.cloud.vision.v1p3beta1.ProductSearch";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Creates and returns a new ProductSet resource.
    //
    // Possible errors:
    //
    // * Returns INVALID_ARGUMENT if display_name is missing, or is longer than
    //   4096 characters.
    virtual ::grpc::Status CreateProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest& request, ::google::cloud::vision::v1p3beta1::ProductSet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>> AsyncCreateProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>>(AsyncCreateProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>> PrepareAsyncCreateProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>>(PrepareAsyncCreateProductSetRaw(context, request, cq));
    }
    // Lists ProductSets in an unspecified order.
    //
    // Possible errors:
    //
    // * Returns INVALID_ARGUMENT if page_size is greater than 100, or less
    //   than 1.
    virtual ::grpc::Status ListProductSets(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest& request, ::google::cloud::vision::v1p3beta1::ListProductSetsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>> AsyncListProductSets(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>>(AsyncListProductSetsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>> PrepareAsyncListProductSets(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>>(PrepareAsyncListProductSetsRaw(context, request, cq));
    }
    // Gets information associated with a ProductSet.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the ProductSet does not exist.
    virtual ::grpc::Status GetProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest& request, ::google::cloud::vision::v1p3beta1::ProductSet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>> AsyncGetProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>>(AsyncGetProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>> PrepareAsyncGetProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>>(PrepareAsyncGetProductSetRaw(context, request, cq));
    }
    // Makes changes to a ProductSet resource.
    // Only display_name can be updated currently.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the ProductSet does not exist.
    // * Returns INVALID_ARGUMENT if display_name is present in update_mask but
    //   missing from the request or longer than 4096 characters.
    virtual ::grpc::Status UpdateProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest& request, ::google::cloud::vision::v1p3beta1::ProductSet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>> AsyncUpdateProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>>(AsyncUpdateProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>> PrepareAsyncUpdateProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>>(PrepareAsyncUpdateProductSetRaw(context, request, cq));
    }
    // Permanently deletes a ProductSet. All Products and ReferenceImages in the
    // ProductSet will be deleted.
    //
    // The actual image files are not deleted from Google Cloud Storage.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the ProductSet does not exist.
    virtual ::grpc::Status DeleteProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteProductSetRaw(context, request, cq));
    }
    // Creates and returns a new product resource.
    //
    // Possible errors:
    //
    // * Returns INVALID_ARGUMENT if display_name is missing or longer than 4096
    //   characters.
    // * Returns INVALID_ARGUMENT if description is longer than 4096 characters.
    // * Returns INVALID_ARGUMENT if product_category is missing or invalid.
    virtual ::grpc::Status CreateProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest& request, ::google::cloud::vision::v1p3beta1::Product* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>> AsyncCreateProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>>(AsyncCreateProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>> PrepareAsyncCreateProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>>(PrepareAsyncCreateProductRaw(context, request, cq));
    }
    // Lists products in an unspecified order.
    //
    // Possible errors:
    //
    // * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
    virtual ::grpc::Status ListProducts(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest& request, ::google::cloud::vision::v1p3beta1::ListProductsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductsResponse>> AsyncListProducts(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductsResponse>>(AsyncListProductsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductsResponse>> PrepareAsyncListProducts(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductsResponse>>(PrepareAsyncListProductsRaw(context, request, cq));
    }
    // Gets information associated with a Product.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the Product does not exist.
    virtual ::grpc::Status GetProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest& request, ::google::cloud::vision::v1p3beta1::Product* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>> AsyncGetProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>>(AsyncGetProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>> PrepareAsyncGetProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>>(PrepareAsyncGetProductRaw(context, request, cq));
    }
    // Makes changes to a Product resource.
    // Only display_name, description and labels can be updated right now.
    //
    // If labels are updated, the change will not be reflected in queries until
    // the next index time.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the Product does not exist.
    // * Returns INVALID_ARGUMENT if display_name is present in update_mask but is
    //   missing from the request or longer than 4096 characters.
    // * Returns INVALID_ARGUMENT if description is present in update_mask but is
    //   longer than 4096 characters.
    // * Returns INVALID_ARGUMENT if product_category is present in update_mask.
    virtual ::grpc::Status UpdateProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest& request, ::google::cloud::vision::v1p3beta1::Product* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>> AsyncUpdateProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>>(AsyncUpdateProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>> PrepareAsyncUpdateProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>>(PrepareAsyncUpdateProductRaw(context, request, cq));
    }
    // Permanently deletes a product and its reference images.
    //
    // Metadata of the product and all its images will be deleted right away, but
    // search queries against ProductSets containing the product may still work
    // until all related caches are refreshed.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the product does not exist.
    virtual ::grpc::Status DeleteProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteProductRaw(context, request, cq));
    }
    // Creates and returns a new ReferenceImage resource.
    //
    // The `bounding_poly` field is optional. If `bounding_poly` is not specified,
    // the system will try to detect regions of interest in the image that are
    // compatible with the product_category on the parent product. If it is
    // specified, detection is ALWAYS skipped. The system converts polygons into
    // non-rotated rectangles.
    //
    // Note that the pipeline will resize the image if the image resolution is too
    // large to process (above 50MP).
    //
    // Possible errors:
    //
    // * Returns INVALID_ARGUMENT if the image_uri is missing or longer than 4096
    //   characters.
    // * Returns INVALID_ARGUMENT if the product does not exist.
    // * Returns INVALID_ARGUMENT if bounding_poly is not provided, and nothing
    //   compatible with the parent product's product_category is detected.
    // * Returns INVALID_ARGUMENT if bounding_poly contains more than 10 polygons.
    virtual ::grpc::Status CreateReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest& request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ReferenceImage>> AsyncCreateReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ReferenceImage>>(AsyncCreateReferenceImageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ReferenceImage>> PrepareAsyncCreateReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ReferenceImage>>(PrepareAsyncCreateReferenceImageRaw(context, request, cq));
    }
    // Permanently deletes a reference image.
    //
    // The image metadata will be deleted right away, but search queries
    // against ProductSets containing the image may still work until all related
    // caches are refreshed.
    //
    // The actual image files are not deleted from Google Cloud Storage.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the reference image does not exist.
    virtual ::grpc::Status DeleteReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteReferenceImageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteReferenceImageRaw(context, request, cq));
    }
    // Lists reference images.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the parent product does not exist.
    // * Returns INVALID_ARGUMENT if the page_size is greater than 100, or less
    //   than 1.
    virtual ::grpc::Status ListReferenceImages(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest& request, ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>> AsyncListReferenceImages(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>>(AsyncListReferenceImagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>> PrepareAsyncListReferenceImages(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>>(PrepareAsyncListReferenceImagesRaw(context, request, cq));
    }
    // Gets information associated with a ReferenceImage.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the specified image does not exist.
    virtual ::grpc::Status GetReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest& request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ReferenceImage>> AsyncGetReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ReferenceImage>>(AsyncGetReferenceImageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ReferenceImage>> PrepareAsyncGetReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ReferenceImage>>(PrepareAsyncGetReferenceImageRaw(context, request, cq));
    }
    // Adds a Product to the specified ProductSet. If the Product is already
    // present, no change is made.
    //
    // One Product can be added to at most 100 ProductSets.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the Product or the ProductSet doesn't exist.
    virtual ::grpc::Status AddProductToProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncAddProductToProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncAddProductToProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncAddProductToProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncAddProductToProductSetRaw(context, request, cq));
    }
    // Removes a Product from the specified ProductSet.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND If the Product is not found under the ProductSet.
    virtual ::grpc::Status RemoveProductFromProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRemoveProductFromProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRemoveProductFromProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRemoveProductFromProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRemoveProductFromProductSetRaw(context, request, cq));
    }
    // Lists the Products in a ProductSet, in an unspecified order. If the
    // ProductSet does not exist, the products field of the response will be
    // empty.
    //
    // Possible errors:
    //
    // * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
    virtual ::grpc::Status ListProductsInProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest& request, ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>> AsyncListProductsInProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>>(AsyncListProductsInProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>> PrepareAsyncListProductsInProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>>(PrepareAsyncListProductsInProductSetRaw(context, request, cq));
    }
    // Asynchronous API that imports a list of reference images to specified
    // product sets based on a list of image information.
    //
    // The [google.longrunning.Operation][google.longrunning.Operation] API can be used to keep track of the
    // progress and results of the request.
    // `Operation.metadata` contains `BatchOperationMetadata`. (progress)
    // `Operation.response` contains `ImportProductSetsResponse`. (results)
    //
    // The input source of this method is a csv file on Google Cloud Storage.
    // For the format of the csv file please see
    // [ImportProductSetsGcsSource.csv_file_uri][google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri].
    virtual ::grpc::Status ImportProductSets(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncImportProductSets(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncImportProductSetsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncImportProductSets(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncImportProductSetsRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>* AsyncCreateProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>* PrepareAsyncCreateProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>* AsyncListProductSetsRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>* PrepareAsyncListProductSetsRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>* AsyncGetProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>* PrepareAsyncGetProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>* AsyncUpdateProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ProductSet>* PrepareAsyncUpdateProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>* AsyncCreateProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>* PrepareAsyncCreateProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductsResponse>* AsyncListProductsRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductsResponse>* PrepareAsyncListProductsRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>* AsyncGetProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>* PrepareAsyncGetProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>* AsyncUpdateProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::Product>* PrepareAsyncUpdateProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ReferenceImage>* AsyncCreateReferenceImageRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ReferenceImage>* PrepareAsyncCreateReferenceImageRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteReferenceImageRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteReferenceImageRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>* AsyncListReferenceImagesRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>* PrepareAsyncListReferenceImagesRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ReferenceImage>* AsyncGetReferenceImageRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ReferenceImage>* PrepareAsyncGetReferenceImageRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncAddProductToProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncAddProductToProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRemoveProductFromProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRemoveProductFromProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>* AsyncListProductsInProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>* PrepareAsyncListProductsInProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncImportProductSetsRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncImportProductSetsRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status CreateProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest& request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>> AsyncCreateProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>>(AsyncCreateProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>> PrepareAsyncCreateProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>>(PrepareAsyncCreateProductSetRaw(context, request, cq));
    }
    ::grpc::Status ListProductSets(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest& request, ::google::cloud::vision::v1p3beta1::ListProductSetsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>> AsyncListProductSets(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>>(AsyncListProductSetsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>> PrepareAsyncListProductSets(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>>(PrepareAsyncListProductSetsRaw(context, request, cq));
    }
    ::grpc::Status GetProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest& request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>> AsyncGetProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>>(AsyncGetProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>> PrepareAsyncGetProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>>(PrepareAsyncGetProductSetRaw(context, request, cq));
    }
    ::grpc::Status UpdateProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest& request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>> AsyncUpdateProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>>(AsyncUpdateProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>> PrepareAsyncUpdateProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>>(PrepareAsyncUpdateProductSetRaw(context, request, cq));
    }
    ::grpc::Status DeleteProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteProductSetRaw(context, request, cq));
    }
    ::grpc::Status CreateProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest& request, ::google::cloud::vision::v1p3beta1::Product* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>> AsyncCreateProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>>(AsyncCreateProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>> PrepareAsyncCreateProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>>(PrepareAsyncCreateProductRaw(context, request, cq));
    }
    ::grpc::Status ListProducts(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest& request, ::google::cloud::vision::v1p3beta1::ListProductsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductsResponse>> AsyncListProducts(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductsResponse>>(AsyncListProductsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductsResponse>> PrepareAsyncListProducts(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductsResponse>>(PrepareAsyncListProductsRaw(context, request, cq));
    }
    ::grpc::Status GetProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest& request, ::google::cloud::vision::v1p3beta1::Product* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>> AsyncGetProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>>(AsyncGetProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>> PrepareAsyncGetProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>>(PrepareAsyncGetProductRaw(context, request, cq));
    }
    ::grpc::Status UpdateProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest& request, ::google::cloud::vision::v1p3beta1::Product* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>> AsyncUpdateProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>>(AsyncUpdateProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>> PrepareAsyncUpdateProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>>(PrepareAsyncUpdateProductRaw(context, request, cq));
    }
    ::grpc::Status DeleteProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteProduct(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteProductRaw(context, request, cq));
    }
    ::grpc::Status CreateReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest& request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ReferenceImage>> AsyncCreateReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ReferenceImage>>(AsyncCreateReferenceImageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ReferenceImage>> PrepareAsyncCreateReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ReferenceImage>>(PrepareAsyncCreateReferenceImageRaw(context, request, cq));
    }
    ::grpc::Status DeleteReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteReferenceImageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteReferenceImageRaw(context, request, cq));
    }
    ::grpc::Status ListReferenceImages(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest& request, ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>> AsyncListReferenceImages(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>>(AsyncListReferenceImagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>> PrepareAsyncListReferenceImages(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>>(PrepareAsyncListReferenceImagesRaw(context, request, cq));
    }
    ::grpc::Status GetReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest& request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ReferenceImage>> AsyncGetReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ReferenceImage>>(AsyncGetReferenceImageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ReferenceImage>> PrepareAsyncGetReferenceImage(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ReferenceImage>>(PrepareAsyncGetReferenceImageRaw(context, request, cq));
    }
    ::grpc::Status AddProductToProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncAddProductToProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncAddProductToProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncAddProductToProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncAddProductToProductSetRaw(context, request, cq));
    }
    ::grpc::Status RemoveProductFromProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRemoveProductFromProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRemoveProductFromProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRemoveProductFromProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRemoveProductFromProductSetRaw(context, request, cq));
    }
    ::grpc::Status ListProductsInProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest& request, ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>> AsyncListProductsInProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>>(AsyncListProductsInProductSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>> PrepareAsyncListProductsInProductSet(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>>(PrepareAsyncListProductsInProductSetRaw(context, request, cq));
    }
    ::grpc::Status ImportProductSets(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncImportProductSets(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncImportProductSetsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncImportProductSets(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncImportProductSetsRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>* AsyncCreateProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>* PrepareAsyncCreateProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>* AsyncListProductSetsRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>* PrepareAsyncListProductSetsRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>* AsyncGetProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>* PrepareAsyncGetProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>* AsyncUpdateProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ProductSet>* PrepareAsyncUpdateProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>* AsyncCreateProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>* PrepareAsyncCreateProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductsResponse>* AsyncListProductsRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductsResponse>* PrepareAsyncListProductsRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>* AsyncGetProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>* PrepareAsyncGetProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>* AsyncUpdateProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::Product>* PrepareAsyncUpdateProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteProductRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ReferenceImage>* AsyncCreateReferenceImageRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ReferenceImage>* PrepareAsyncCreateReferenceImageRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteReferenceImageRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteReferenceImageRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>* AsyncListReferenceImagesRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>* PrepareAsyncListReferenceImagesRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ReferenceImage>* AsyncGetReferenceImageRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ReferenceImage>* PrepareAsyncGetReferenceImageRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncAddProductToProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncAddProductToProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRemoveProductFromProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRemoveProductFromProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>* AsyncListProductsInProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>* PrepareAsyncListProductsInProductSetRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncImportProductSetsRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncImportProductSetsRaw(::grpc::ClientContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateProductSet_;
    const ::grpc::internal::RpcMethod rpcmethod_ListProductSets_;
    const ::grpc::internal::RpcMethod rpcmethod_GetProductSet_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateProductSet_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteProductSet_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateProduct_;
    const ::grpc::internal::RpcMethod rpcmethod_ListProducts_;
    const ::grpc::internal::RpcMethod rpcmethod_GetProduct_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateProduct_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteProduct_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateReferenceImage_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteReferenceImage_;
    const ::grpc::internal::RpcMethod rpcmethod_ListReferenceImages_;
    const ::grpc::internal::RpcMethod rpcmethod_GetReferenceImage_;
    const ::grpc::internal::RpcMethod rpcmethod_AddProductToProductSet_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveProductFromProductSet_;
    const ::grpc::internal::RpcMethod rpcmethod_ListProductsInProductSet_;
    const ::grpc::internal::RpcMethod rpcmethod_ImportProductSets_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Creates and returns a new ProductSet resource.
    //
    // Possible errors:
    //
    // * Returns INVALID_ARGUMENT if display_name is missing, or is longer than
    //   4096 characters.
    virtual ::grpc::Status CreateProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response);
    // Lists ProductSets in an unspecified order.
    //
    // Possible errors:
    //
    // * Returns INVALID_ARGUMENT if page_size is greater than 100, or less
    //   than 1.
    virtual ::grpc::Status ListProductSets(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest* request, ::google::cloud::vision::v1p3beta1::ListProductSetsResponse* response);
    // Gets information associated with a ProductSet.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the ProductSet does not exist.
    virtual ::grpc::Status GetProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response);
    // Makes changes to a ProductSet resource.
    // Only display_name can be updated currently.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the ProductSet does not exist.
    // * Returns INVALID_ARGUMENT if display_name is present in update_mask but
    //   missing from the request or longer than 4096 characters.
    virtual ::grpc::Status UpdateProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response);
    // Permanently deletes a ProductSet. All Products and ReferenceImages in the
    // ProductSet will be deleted.
    //
    // The actual image files are not deleted from Google Cloud Storage.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the ProductSet does not exist.
    virtual ::grpc::Status DeleteProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest* request, ::google::protobuf::Empty* response);
    // Creates and returns a new product resource.
    //
    // Possible errors:
    //
    // * Returns INVALID_ARGUMENT if display_name is missing or longer than 4096
    //   characters.
    // * Returns INVALID_ARGUMENT if description is longer than 4096 characters.
    // * Returns INVALID_ARGUMENT if product_category is missing or invalid.
    virtual ::grpc::Status CreateProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response);
    // Lists products in an unspecified order.
    //
    // Possible errors:
    //
    // * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
    virtual ::grpc::Status ListProducts(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest* request, ::google::cloud::vision::v1p3beta1::ListProductsResponse* response);
    // Gets information associated with a Product.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the Product does not exist.
    virtual ::grpc::Status GetProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response);
    // Makes changes to a Product resource.
    // Only display_name, description and labels can be updated right now.
    //
    // If labels are updated, the change will not be reflected in queries until
    // the next index time.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the Product does not exist.
    // * Returns INVALID_ARGUMENT if display_name is present in update_mask but is
    //   missing from the request or longer than 4096 characters.
    // * Returns INVALID_ARGUMENT if description is present in update_mask but is
    //   longer than 4096 characters.
    // * Returns INVALID_ARGUMENT if product_category is present in update_mask.
    virtual ::grpc::Status UpdateProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response);
    // Permanently deletes a product and its reference images.
    //
    // Metadata of the product and all its images will be deleted right away, but
    // search queries against ProductSets containing the product may still work
    // until all related caches are refreshed.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the product does not exist.
    virtual ::grpc::Status DeleteProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest* request, ::google::protobuf::Empty* response);
    // Creates and returns a new ReferenceImage resource.
    //
    // The `bounding_poly` field is optional. If `bounding_poly` is not specified,
    // the system will try to detect regions of interest in the image that are
    // compatible with the product_category on the parent product. If it is
    // specified, detection is ALWAYS skipped. The system converts polygons into
    // non-rotated rectangles.
    //
    // Note that the pipeline will resize the image if the image resolution is too
    // large to process (above 50MP).
    //
    // Possible errors:
    //
    // * Returns INVALID_ARGUMENT if the image_uri is missing or longer than 4096
    //   characters.
    // * Returns INVALID_ARGUMENT if the product does not exist.
    // * Returns INVALID_ARGUMENT if bounding_poly is not provided, and nothing
    //   compatible with the parent product's product_category is detected.
    // * Returns INVALID_ARGUMENT if bounding_poly contains more than 10 polygons.
    virtual ::grpc::Status CreateReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest* request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response);
    // Permanently deletes a reference image.
    //
    // The image metadata will be deleted right away, but search queries
    // against ProductSets containing the image may still work until all related
    // caches are refreshed.
    //
    // The actual image files are not deleted from Google Cloud Storage.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the reference image does not exist.
    virtual ::grpc::Status DeleteReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest* request, ::google::protobuf::Empty* response);
    // Lists reference images.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the parent product does not exist.
    // * Returns INVALID_ARGUMENT if the page_size is greater than 100, or less
    //   than 1.
    virtual ::grpc::Status ListReferenceImages(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest* request, ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse* response);
    // Gets information associated with a ReferenceImage.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the specified image does not exist.
    virtual ::grpc::Status GetReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest* request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response);
    // Adds a Product to the specified ProductSet. If the Product is already
    // present, no change is made.
    //
    // One Product can be added to at most 100 ProductSets.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND if the Product or the ProductSet doesn't exist.
    virtual ::grpc::Status AddProductToProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest* request, ::google::protobuf::Empty* response);
    // Removes a Product from the specified ProductSet.
    //
    // Possible errors:
    //
    // * Returns NOT_FOUND If the Product is not found under the ProductSet.
    virtual ::grpc::Status RemoveProductFromProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest* request, ::google::protobuf::Empty* response);
    // Lists the Products in a ProductSet, in an unspecified order. If the
    // ProductSet does not exist, the products field of the response will be
    // empty.
    //
    // Possible errors:
    //
    // * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
    virtual ::grpc::Status ListProductsInProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse* response);
    // Asynchronous API that imports a list of reference images to specified
    // product sets based on a list of image information.
    //
    // The [google.longrunning.Operation][google.longrunning.Operation] API can be used to keep track of the
    // progress and results of the request.
    // `Operation.metadata` contains `BatchOperationMetadata`. (progress)
    // `Operation.response` contains `ImportProductSetsResponse`. (results)
    //
    // The input source of this method is a csv file on Google Cloud Storage.
    // For the format of the csv file please see
    // [ImportProductSetsGcsSource.csv_file_uri][google.cloud.vision.v1p3beta1.ImportProductSetsGcsSource.csv_file_uri].
    virtual ::grpc::Status ImportProductSets(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest* request, ::google::longrunning::Operation* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateProductSet() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProductSet(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::CreateProductSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::vision::v1p3beta1::ProductSet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListProductSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListProductSets() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListProductSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProductSets(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest* request, ::google::cloud::vision::v1p3beta1::ListProductSetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProductSets(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::ListProductSetsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetProductSet() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProductSet(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::GetProductSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::vision::v1p3beta1::ProductSet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateProductSet() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProductSet(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::vision::v1p3beta1::ProductSet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteProductSet() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProductSet(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateProduct() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_CreateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProduct(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::CreateProductRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::vision::v1p3beta1::Product>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListProducts() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ListProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProducts(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest* request, ::google::cloud::vision::v1p3beta1::ListProductsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProducts(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::ListProductsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::vision::v1p3beta1::ListProductsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetProduct() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProduct(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::GetProductRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::vision::v1p3beta1::Product>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateProduct() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_UpdateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProduct(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::UpdateProductRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::vision::v1p3beta1::Product>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteProduct() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_DeleteProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProduct(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::DeleteProductRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateReferenceImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateReferenceImage() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_CreateReferenceImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest* request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateReferenceImage(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::vision::v1p3beta1::ReferenceImage>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteReferenceImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteReferenceImage() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_DeleteReferenceImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteReferenceImage(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListReferenceImages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListReferenceImages() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_ListReferenceImages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListReferenceImages(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest* request, ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListReferenceImages(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetReferenceImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetReferenceImage() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetReferenceImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest* request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetReferenceImage(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::vision::v1p3beta1::ReferenceImage>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddProductToProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddProductToProductSet() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_AddProductToProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddProductToProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddProductToProductSet(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveProductFromProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_RemoveProductFromProductSet() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_RemoveProductFromProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveProductFromProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveProductFromProductSet(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListProductsInProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListProductsInProductSet() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_ListProductsInProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProductsInProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProductsInProductSet(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ImportProductSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ImportProductSets() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_ImportProductSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportProductSets(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest* request, ::google::longrunning::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestImportProductSets(::grpc::ServerContext* context, ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateProductSet<WithAsyncMethod_ListProductSets<WithAsyncMethod_GetProductSet<WithAsyncMethod_UpdateProductSet<WithAsyncMethod_DeleteProductSet<WithAsyncMethod_CreateProduct<WithAsyncMethod_ListProducts<WithAsyncMethod_GetProduct<WithAsyncMethod_UpdateProduct<WithAsyncMethod_DeleteProduct<WithAsyncMethod_CreateReferenceImage<WithAsyncMethod_DeleteReferenceImage<WithAsyncMethod_ListReferenceImages<WithAsyncMethod_GetReferenceImage<WithAsyncMethod_AddProductToProductSet<WithAsyncMethod_RemoveProductFromProductSet<WithAsyncMethod_ListProductsInProductSet<WithAsyncMethod_ImportProductSets<Service > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_CreateProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateProductSet() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListProductSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListProductSets() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListProductSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProductSets(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest* request, ::google::cloud::vision::v1p3beta1::ListProductSetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetProductSet() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateProductSet() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteProductSet() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateProduct() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_CreateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListProducts() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ListProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProducts(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest* request, ::google::cloud::vision::v1p3beta1::ListProductsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetProduct() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateProduct() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_UpdateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteProduct() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_DeleteProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateReferenceImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateReferenceImage() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_CreateReferenceImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest* request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteReferenceImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteReferenceImage() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_DeleteReferenceImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListReferenceImages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListReferenceImages() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_ListReferenceImages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListReferenceImages(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest* request, ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetReferenceImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetReferenceImage() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetReferenceImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest* request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddProductToProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddProductToProductSet() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_AddProductToProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddProductToProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveProductFromProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_RemoveProductFromProductSet() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_RemoveProductFromProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveProductFromProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListProductsInProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListProductsInProductSet() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_ListProductsInProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProductsInProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ImportProductSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ImportProductSets() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_ImportProductSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportProductSets(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest* request, ::google::longrunning::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateProductSet() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProductSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListProductSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListProductSets() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListProductSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProductSets(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest* request, ::google::cloud::vision::v1p3beta1::ListProductSetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProductSets(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetProductSet() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProductSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateProductSet() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdateProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProductSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteProductSet() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProductSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateProduct() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_CreateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProduct(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListProducts() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ListProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProducts(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest* request, ::google::cloud::vision::v1p3beta1::ListProductsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProducts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetProduct() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProduct(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateProduct() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_UpdateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProduct(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteProduct() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_DeleteProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProduct(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateReferenceImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateReferenceImage() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_CreateReferenceImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest* request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateReferenceImage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteReferenceImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteReferenceImage() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_DeleteReferenceImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteReferenceImage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListReferenceImages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListReferenceImages() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_ListReferenceImages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListReferenceImages(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest* request, ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListReferenceImages(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetReferenceImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetReferenceImage() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetReferenceImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest* request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetReferenceImage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddProductToProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_AddProductToProductSet() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_AddProductToProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddProductToProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddProductToProductSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveProductFromProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_RemoveProductFromProductSet() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_RemoveProductFromProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveProductFromProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveProductFromProductSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListProductsInProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListProductsInProductSet() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_ListProductsInProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProductsInProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProductsInProductSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ImportProductSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ImportProductSets() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_ImportProductSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportProductSets(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest* request, ::google::longrunning::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestImportProductSets(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateProductSet() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::CreateProductSetRequest, ::google::cloud::vision::v1p3beta1::ProductSet>(std::bind(&WithStreamedUnaryMethod_CreateProductSet<BaseClass>::StreamedCreateProductSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateProductSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::CreateProductSetRequest,::google::cloud::vision::v1p3beta1::ProductSet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListProductSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListProductSets() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::ListProductSetsRequest, ::google::cloud::vision::v1p3beta1::ListProductSetsResponse>(std::bind(&WithStreamedUnaryMethod_ListProductSets<BaseClass>::StreamedListProductSets, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListProductSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListProductSets(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductSetsRequest* request, ::google::cloud::vision::v1p3beta1::ListProductSetsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListProductSets(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::ListProductSetsRequest,::google::cloud::vision::v1p3beta1::ListProductSetsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetProductSet() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::GetProductSetRequest, ::google::cloud::vision::v1p3beta1::ProductSet>(std::bind(&WithStreamedUnaryMethod_GetProductSet<BaseClass>::StreamedGetProductSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetProductSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::GetProductSetRequest,::google::cloud::vision::v1p3beta1::ProductSet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateProductSet() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest, ::google::cloud::vision::v1p3beta1::ProductSet>(std::bind(&WithStreamedUnaryMethod_UpdateProductSet<BaseClass>::StreamedUpdateProductSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ProductSet* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateProductSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::UpdateProductSetRequest,::google::cloud::vision::v1p3beta1::ProductSet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteProductSet() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteProductSet<BaseClass>::StreamedDeleteProductSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteProductSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::DeleteProductSetRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateProduct() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::CreateProductRequest, ::google::cloud::vision::v1p3beta1::Product>(std::bind(&WithStreamedUnaryMethod_CreateProduct<BaseClass>::StreamedCreateProduct, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateProduct(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::CreateProductRequest,::google::cloud::vision::v1p3beta1::Product>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListProducts() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::ListProductsRequest, ::google::cloud::vision::v1p3beta1::ListProductsResponse>(std::bind(&WithStreamedUnaryMethod_ListProducts<BaseClass>::StreamedListProducts, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListProducts(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsRequest* request, ::google::cloud::vision::v1p3beta1::ListProductsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListProducts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::ListProductsRequest,::google::cloud::vision::v1p3beta1::ListProductsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetProduct() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::GetProductRequest, ::google::cloud::vision::v1p3beta1::Product>(std::bind(&WithStreamedUnaryMethod_GetProduct<BaseClass>::StreamedGetProduct, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetProduct(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::GetProductRequest,::google::cloud::vision::v1p3beta1::Product>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateProduct() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::UpdateProductRequest, ::google::cloud::vision::v1p3beta1::Product>(std::bind(&WithStreamedUnaryMethod_UpdateProduct<BaseClass>::StreamedUpdateProduct, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::UpdateProductRequest* request, ::google::cloud::vision::v1p3beta1::Product* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateProduct(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::UpdateProductRequest,::google::cloud::vision::v1p3beta1::Product>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteProduct() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::DeleteProductRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteProduct<BaseClass>::StreamedDeleteProduct, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteProduct(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteProductRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteProduct(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::DeleteProductRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateReferenceImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateReferenceImage() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest, ::google::cloud::vision::v1p3beta1::ReferenceImage>(std::bind(&WithStreamedUnaryMethod_CreateReferenceImage<BaseClass>::StreamedCreateReferenceImage, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateReferenceImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest* request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateReferenceImage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::CreateReferenceImageRequest,::google::cloud::vision::v1p3beta1::ReferenceImage>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteReferenceImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteReferenceImage() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteReferenceImage<BaseClass>::StreamedDeleteReferenceImage, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteReferenceImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteReferenceImage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::DeleteReferenceImageRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListReferenceImages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListReferenceImages() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest, ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>(std::bind(&WithStreamedUnaryMethod_ListReferenceImages<BaseClass>::StreamedListReferenceImages, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListReferenceImages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListReferenceImages(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest* request, ::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListReferenceImages(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::ListReferenceImagesRequest,::google::cloud::vision::v1p3beta1::ListReferenceImagesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetReferenceImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetReferenceImage() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest, ::google::cloud::vision::v1p3beta1::ReferenceImage>(std::bind(&WithStreamedUnaryMethod_GetReferenceImage<BaseClass>::StreamedGetReferenceImage, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetReferenceImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetReferenceImage(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest* request, ::google::cloud::vision::v1p3beta1::ReferenceImage* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetReferenceImage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::GetReferenceImageRequest,::google::cloud::vision::v1p3beta1::ReferenceImage>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddProductToProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddProductToProductSet() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_AddProductToProductSet<BaseClass>::StreamedAddProductToProductSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddProductToProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddProductToProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddProductToProductSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::AddProductToProductSetRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveProductFromProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_RemoveProductFromProductSet() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_RemoveProductFromProductSet<BaseClass>::StreamedRemoveProductFromProductSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_RemoveProductFromProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveProductFromProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveProductFromProductSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::RemoveProductFromProductSetRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListProductsInProductSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListProductsInProductSet() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest, ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>(std::bind(&WithStreamedUnaryMethod_ListProductsInProductSet<BaseClass>::StreamedListProductsInProductSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListProductsInProductSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListProductsInProductSet(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest* request, ::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListProductsInProductSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::ListProductsInProductSetRequest,::google::cloud::vision::v1p3beta1::ListProductsInProductSetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ImportProductSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ImportProductSets() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest, ::google::longrunning::Operation>(std::bind(&WithStreamedUnaryMethod_ImportProductSets<BaseClass>::StreamedImportProductSets, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ImportProductSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ImportProductSets(::grpc::ServerContext* context, const ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest* request, ::google::longrunning::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedImportProductSets(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::vision::v1p3beta1::ImportProductSetsRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateProductSet<WithStreamedUnaryMethod_ListProductSets<WithStreamedUnaryMethod_GetProductSet<WithStreamedUnaryMethod_UpdateProductSet<WithStreamedUnaryMethod_DeleteProductSet<WithStreamedUnaryMethod_CreateProduct<WithStreamedUnaryMethod_ListProducts<WithStreamedUnaryMethod_GetProduct<WithStreamedUnaryMethod_UpdateProduct<WithStreamedUnaryMethod_DeleteProduct<WithStreamedUnaryMethod_CreateReferenceImage<WithStreamedUnaryMethod_DeleteReferenceImage<WithStreamedUnaryMethod_ListReferenceImages<WithStreamedUnaryMethod_GetReferenceImage<WithStreamedUnaryMethod_AddProductToProductSet<WithStreamedUnaryMethod_RemoveProductFromProductSet<WithStreamedUnaryMethod_ListProductsInProductSet<WithStreamedUnaryMethod_ImportProductSets<Service > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateProductSet<WithStreamedUnaryMethod_ListProductSets<WithStreamedUnaryMethod_GetProductSet<WithStreamedUnaryMethod_UpdateProductSet<WithStreamedUnaryMethod_DeleteProductSet<WithStreamedUnaryMethod_CreateProduct<WithStreamedUnaryMethod_ListProducts<WithStreamedUnaryMethod_GetProduct<WithStreamedUnaryMethod_UpdateProduct<WithStreamedUnaryMethod_DeleteProduct<WithStreamedUnaryMethod_CreateReferenceImage<WithStreamedUnaryMethod_DeleteReferenceImage<WithStreamedUnaryMethod_ListReferenceImages<WithStreamedUnaryMethod_GetReferenceImage<WithStreamedUnaryMethod_AddProductToProductSet<WithStreamedUnaryMethod_RemoveProductFromProductSet<WithStreamedUnaryMethod_ListProductsInProductSet<WithStreamedUnaryMethod_ImportProductSets<Service > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1p3beta1
}  // namespace vision
}  // namespace cloud
}  // namespace google


#endif  // GRPC_google_2fcloud_2fvision_2fv1p3beta1_2fproduct_5fsearch_5fservice_2eproto__INCLUDED
